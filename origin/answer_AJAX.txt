こんにちは jQueryのtoggleは2種類の書式があって、引数などが無い toggle() だと表示（style.display)の切替えになりますが、 toggle(function(){～～}, function(){～～}) では、これらの引数の関数が順に実行されます。（関数は2つ以上あっても良い） http://api.jquery.com/toggle-event/ ajaxでの送信やデータベースの扱いはご存知として、ご提示のHTMLを例にすれば、 $("button").toggle( function(){ $("span", this).toggle(); //データベースから削除のスクリプトを記述 alert("OFFをクリックしました"); }, function(){ $("span", this).toggle(); //データベースに挿入のスクリプトを記述 alert("ONをクリックしました"); }); といった方式になされば可能でしょう。 (サンプルではアラート表示にしてあります。） 実際には、ajaxなどの処理は別関数にしておいて、上記から呼び出すのがわかりやすいと思います。
rawurldecode は不要です。 ブラウザから送信されるデータはおそらく UTF-8 だから、mb_convert_encoding で文字コードを変換すればよいはずです。
こんにちは ご提示の雰囲気だと、「絞り込み」というよりも「and検索」として考えれば、1条件とか絞り込みとか考えずに全部同じ処理でできそうに思いますが、私が勘違いしてるのかしら・・・ クラスを利用して選別なさろうとしていると思いますが、allがsizeなのかfruitsなのか判然としないので混乱の元になりそうな気がします。 また、直接は関係ありませんが、$('.all').hide();としているので、サイズ指定用の表示の「全て」の文字まで消えてしまいますね。 条件指定がリストのクリックとセレクトでの選択という異なる方法を使っているところも謎です。 想像するところ、それぞれの指定（選択）条件は、他方を変えた時も生きているものとして考えて良いのですよね？ セレクト要素のほうは選択した内容が表示されるのでよいのですが、サイズの方は何を指定（クリック）したか覚えておかないと、わからなくなってしまうように思えます。 できるだけ、HTMＬはそのままにすることにして・・・ 　・データ部分を明示化するためにdiv id="data"を包含要素として追加 　・サイズで選択中のものがわかるようにclass="selected"を付与 　　（仮に、CSSで選択中の項目は色が変わるようにしてあります） の部分を変えています。 スクリプトでの処理方法はいろいろな考え方があると思いますので、あくまでも一例です。 and検索的な考え方で毎回全体から検索しなおすような考え方をしています。 条件が2個なので直接記述していますが、もっとたくさんならループで処理したほうが良いかも。 （とは言っても、この方式で条件を増やすとclassの記述が大変そうですが・・・） （以下、インデントを全角空白にしてありますので、半角に） <!DOCTYPE HTML> <html lang="ja"> <head><title>Sample</title> <style type="text/css"> #size .selected { color: #B00; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function() { 　var data = $("#data > div"); 　var cnds = { size:"all", fruits:"all" }; // イベント処理を設定 　$("#size a").on("click", function(){ 　　$(this).parent("li").addClass("selected").siblings().removeClass("selected"); 　　search({ size: $(this).attr("class")}); 　}); 　$("#fruits").on("change", function(){ search({ fruits: this.value}); }); // 指定条件に合うものを表示 　function search(c){ 　　$.extend(cnds, c); 　　data.hide().filter("." + cnds.size).filter("." + cnds.fruits).fadeIn(); 　} }); </script> </head> <body> <ul id="size"> <li class="selected"><a class="all">全て</a></li> <li><a class="large">大</a></li> <li><a class="small">小</a></li> </ul> <select id="fruits"> <option value=".all">全て</option> <option value=".ringo">りんご</option> <option value=".banana">バナナ</option> </select> <div id="data"> <div class="ringo large all">りんご（大）</div> <div class="ringo small all">りんご（小）</div> <div class="banana large all">バナナ（大）</div> <div class="banana small all">バナナ（小）</div> </div> </body> </html>
こんにちは とりあえず気が付いたところを・・・ javascriptの部分の構成が以下のようになっていると思いますが、 $(function(){ 　$.ajax({ 　　～～～ 　}); }); $('#sending').click(function(){ 　$.ajax({ 　　～～～ 　}); 　return false; }); 後半の$('#sending').click(function(){ ～の実行時点では、まだHTML全体のパースは行われていないので、$('#sending')がnullになっていると思われます。 jQueryオブジェクトではこのような場合もエラーを出さず、以降の処理を無視するようになっていたと思いますので、送信ボタンを押したときのイベントのバインドできていないものと推測します。 処理が動作しているかどうか、alertなどで確認なさってみてください。 （想像するところ通常のsubmitになると思いますので、同じページに遷移していませんか？） 全体を、$(function(){　～　の関数内に納めれば、バインド処理もready後に実行されるはずです。
No.3の銀鱗さんアドバイスに沿って書式設定の場合を作りました。 「[<0.041666666666][m]"分";h"時間"m"分"」
>PhPを勉強していますが、Ajax 又は node.js などで非同期通信を実装したいとかんがえています。 ajaxとnode.jsは役割が異なります。node.jsはPHPと同じサーバーサイドの実行環境です。現在PHPを勉強されているというのであれば、node.jsを検討するのは早計で。。。 クライアントサイドの技術としてajaxという用語が定着しました。ブラウザ互換を考えるならばjQueryでとりあえず十分じゃないでしょうか？
ああ、キャッシュ対策ですね http://d.hatena.ne.jp/hasegawayosuke/20090925/p1 にあるようにcacheをfalseにすれば自動で時間を付加してくれるみたいです またbeforeSendにリクエストヘッダで If-Modified-Since を設定するとよいようです
すべての設定はお済ですか？
microのI2CポートはD2(PD1),D3(PD0)ですが、そこにちゃんとつないでいますか？
inputで改行はおくれないのでテキストエリアを隠して処理すればよいでしょう <form> <textarea name="hoge" style="display:none"> test test test test </textarea> <input type="submit" value="go"> </form> そもそも隠したデータを引き継ぐのもなにか違うような気がします セッションで移行すれば余計なことを考える必要はないと思いますが？
なんだかややこしいので、ちゃんと把握できてないのですが、なんとなくの感じで・・・ 2回目から動作しなくなる「登録ボタン」って、ajaxの結果で書き直して（上書きして）ませんか？ ・・・・で、そのボタンに対する処理の定義は、最初に 　$("#addButton").on("click", function () {　～～　} で行っているようなことになってませんか？ そのような場合、見た目は同じタグ、同じidであっても、書き換えられたものはブラウザ上では同じ要素とは認識されません。 結果的に、イベントを設定しておいた要素は（上書きされて）削除されてしまったことになり、そのイベントは発生しないことになります。 ・・・・というのが、原因ではないでしょうか？（まったくの山勘なので不明です） 仮に、そうだとすれば対処法としては、 1）要素を挿入（または上書き）するときに、その要素のクリックイベント等を設定しておく。 いちいち、これをやるのが面倒であれば、 2）マウスイベントは伝播するので、変化しない上位要素でイベントを監視するようにする。 ことでも対処可能です。 ご提示のスクリプトで、 　$(document).on('click', '#mCateList ul li a', function () {　～～ としてご使用なさっているので、理解なさっていることとは思いますが、この記述だと、documentレベルでイベントを監視していますので、対象となるa要素を後から（スクリプトなどで）追加しても、イベントの取得が可能です。 （通常の設定だと、後から追加した要素に対するイベントは取得できないので、上述の1）のような対処が必要） 少し古いバージョンのjQueryでは、これを明示したliveメソッドなどもありましたが（現在も使えるはず）、今後はonメソッドに統一していきそうな雰囲気ですね。 http://api.jquery.com/live/ http://api.jquery.com/on/ それなので、上位要素でイベントを監視するようにすれば、上書きしたり追加した要素のイベントも取得できるようになるかと想像します。 （HTMLの構造を理解できてないので、具体的なスクリプトを示すことはできませんが） ※　よく理解せずにの回答なので、的外れでしたらご容赦下さい。
回答ではないです。ごめんなさい。 こんな使い方もあるんですね。 どうやら、google map オーバーレイ機能を使用しているようです。 （http://hkuma.com/rail/gmaplayer.htmlなど） 背景となる地図はview_flier.js の load(dir) で消しているみたいですね
送信側の文字コードが間違えているとかは？
No.2の方の補足で。 POSTである必要がない、つまりGETでいいのであれば、urlに直接突っ込むのが早いと思います。 まあおそらく、「それじゃダメだからPOSTなんだ！」ということでしょうが…… 一応GETでやるためのヒントを。 HTML1で、HTML2に送りたいデータを ./html2.html?送りたいデータ のように「?（半角のハテナ）」の後にデータをくっつけたリンクを作成。 HTML2でJavaScriptを使って取得します。 location.search.substring(1); を使えばそれが取得できます。 カッコの中が1なのは、0にすると「?」も含まれるから……だったと思います。 蛇足ですが。
データベースからデータを取り出すならサーバサイド言語で取り出すのか、クライアントサイド言語で取り出すのか、で実装法が変わると思います。 私は JavaScript はなくても動作するように実装するので 下記のように使い分けます。 - JavaScript が無効ならサーバサイドスクリプトでHTML出力 - JavaScript が有効なら初回出力時だけサーバサイドスクリプトでHTML出力し、動的変更部分はJavaScriptでDOM操作 > 静的な部分をHTMLで書くようにした場合、後でJavascriptから操作するための空のタグが大量発生し 上述のように JavaScript がなくてもサーバサイドスクリプトでHTML出力するので空タグが多量発生する事はありません。 JavaScript はあくまで動的出力に留める事で無駄なHTMLが生まれないようにしています。 これは「でしゃばらないJavaScript」や「控えめなJavaScript」と呼ばれます。 http://www.ibm.com/developerworks/jp/web/library … # Re: hxwqt563さん
そのソースで問題ないと思いますけど。。 自分の環境ではきちんと値がとれてますけどね。 レスポンスがきちんと返ってきてるか、ブラウザのデベロッパーツールで確認してますか？ firefoxならfirebugのコンソールかネットワーク、 chromeならnetworkのxhrで確認できます。
■submitでAjaxがアウト そもそも、非同期通信であるAjaxと、同期通信であるフォーム送信を一度に行ってもマトモに動く訳がない。 $(function() { $('#FormName').submit( function(event) { event.preventDefault(); // submitイベント止める。<a>リンクのクリックイベントでも同じ。 $.ajax({ url:'/controller/action', success:function (data, textStatus) { $('#progress').html(data); }, error:function (err) { console.log('ajax通信失敗:'+err); }, }); }); }); ■ファイルアップロード進捗 jsのTimerイベント？　そんな物を使うと非同期コールバックなど一切戻らない。 jQuery使ってファイルアップロードやるなら、クライアントサイドは同じなので。以下の記事がズバリ。 プログレスバー表示は適当なものを。 ttp://takuya-1st.hatenablog.jp/entry/20121101/1351754417
検索すればたくさんでてきそう… 例えば http://php-archive.net/php/ajax-chat/ http://confetto.s31.xrea.com/php/chat/ http://hain.jp/index.php/tech-j/2007/11/19/p195 とか、 http://www.moongift.jp/2009/07/lace/ http://web2driver.com/ajax/index.php?Ajax%A5%C1% …
HTTP には中断のプロトコルはないので、何も送りません。 HTTP より下位レベルの TCP ソケットにて、切断の通信(FINとかRST)が行われます。 もし停電や断線などで通信が途絶した場合は、 サーバー側のタイムアウト設定や死活監視機能などで、そのうち強制切断されます。 サーバー側ではソケットの切断時に割り込み(シグナルとか例外)が発生するので、 おそらくは実行中の無限ループも中断されるとは思います。 が、これはサーバーソフトウェアの実装次第なので、一概にはなんともいえません。
基本的にhttpでの接続は厳密なログイン状態は認識することができません。 どうしてもというのであればログインにセッションを利用します セッションの生存期間を設定し、ログイン後定期的にログイン情報の交換を 行えば、最終更新時間から現在までの時間が生存期間をこえていれば ログアウトしているとみなせます。 もちろんログアウト処理を併用して任意でログアウトした場合は生存期間を 無視してよいでしょう。
普通に ・・・ var data = { comment : $('#comment1').val(), comment_no : $('#comment_no').val() }; ・・・ var data = { comment : $('#comment2').val(), comment_no : $('#comment_no2').val() }; ・・・ でいいと思う。これで、send1やsend2が押された時にsend.phpは$_POST["comment"]と$_POST["comment_no"]で受け取れるはず。 この「data」なるデータはJSON形式と呼ばれる記法で、この書き方によりJavaScript中では連想配列に似た動作を行う。こいつを$.ajaxに食わせると適切なリクエストでPOSTしてくれるわけだ。大雑把かつ不正確に言えば、 var data = { hoge : "hogehoge", fuga : "fugafuga", miyo : "miyomiyo", tako : "takotako" }; が$.ajaxのdata引数として使われると、左側がリクエストパラメーター名として右側に指定された値をWebサーバーにPOSTする。最後の行の最後にはカンマが無い事に注目。そして$.ajaxメソッドの引数もJSON形式だ。 余談だが仮にこの画面がAJAXオンリーなのであればあえてFORMは作らない方が良いかもしれない。 comment_noを盛り込んで、かつ大幅にはソースを変えずにちょっと汎用的にしてみたのが以下だ。jQueryの「セレクター」という機能をフルに活用している。submitにcommentsubmitというCSSのクラスを付け、$('.commentsubmit')というクラスセレクターでクリック時の動作を制御する。さらにクリック時に実行されるfunction中でthisは押されたsubmitを表すので、$(this)は押されたsubmitを表すjQueryオブジェクトになる。 次に$(this).closest('form')は押されたsubmitから最も近いformのjQueryオブジェクトをさすため、今度はformの中にあるinput[type=hidden]とtextareaをname属性で引っ張って来るのだ。 ちょろっと書いただけで全然試してないので動くかどうかは分からん。 ～～～～ <!DOCTYPE html> <html lang="ja"> <head> <meta charset="EUC-JP" /> <title></title> <script type="text/javascript" src="/jquery/js/jquery.min.js"></script> </head> <body> <script> $(document).ready(function() { $('.commentsubmit').click(function() { $form = $(this).closest('form'); var data = {comment_no : $('input[type=hidden][name=comment_no]', $form).val(), comment : $('textarea[name=comment]', $form).val() }; $.ajax({ type: "POST", url: "send.php", data: data, success: function(data, dataType){ }, error: function(XMLHttpRequest, textStatus, errorThrown){ alert('Error : ' + errorThrown); } }); return false; }); }); </script> <form method="post"> <INPUT type="hidden" name="comment_no" id="comment_no1" value="1"> <p> <textarea name="comment" id="comment1" style="width: 400px; height: 20px; padding: 6px 5px; font-size: 13px; overflow: hidden; vertical-align: text-bottom;" onkeyup="resize(this)"></textarea> </p> <p> <input id="send1" value="送信1" type="submit" class="commentsubmit" /> </p> </form> <hr> <form method="post"> <INPUT type="hidden" name="comment_no" id="comment_no2" value="2"> <p> <textarea name="comment" id="comment2" style="width: 400px; height: 20px; padding: 6px 5px; font-size: 13px; overflow: hidden; vertical-align: text-bottom;" onkeyup="resize(this)"></textarea> </p> <p> <input id="send2" value="送信2" type="submit" class="commentsubmit" /> </p> </form> </body> </html>
>No.2お礼 >今回の質問時、サンプルとして提示させて頂いたのは、index.html、post.js、post.phpの3つのファイルから構成されていますが、今回ご提示頂いたスクリプトは、index.htmlに全て記述し、post.jsは利用しない。という認識で宜しかったでしょうか？ どちらでもいいです。 作りやすい方法で作ってください。 >それと、テキストフォームにnema属性としてsomethingが与えられていますが、このフォームの値はどのようにして取得したら宜しいのでしょうか？ 全部jQueryがやってくれます。 PHPの話であれば、通常の<form>送信と同じです。
＞jQueryによるajaxを試みています。 jQueryを使っているのなら、jQueryのajax機能を利用した方が簡単ではないですか？ http://api.jquery.com/category/ajax/
jQueryを使わずにJavaScript（DOM）ネイティブのinnerHTMLを使えば最速です。 フォームフィールドのinnerHTMLはブラウザ依存がでる可能性があるので、 <select>のinnerHTMLではなく、<select>の親要素のinnerHTMLに、"<select 略><option>～</select>"として入れる方がいいと思います。 イベントハンドラを登録された要素を削除するとメモリリークになる可能性があるので注意してください。 イベントハンドラを削除してからinnerHTMLに代入すると問題ありません。
すみませんがあなたの言う「同じディレクトリ」というのはどこを指しているのでしょうか。 サーバーのHTMLファイルのある個所? ページを開いているブラウザ/端末のどこか? それともローカルに置いたHTMLファイルを直接開いたときの話でしょうか?
できないかと思います。
大分時間が経ってますが、jQueryはその形式をサポートしていないようです。 http://api.jquery.com/jQuery.ajax/ dataのフォーマットはPlainObject or Stringとなっています。 配列はPlainObjectではありませんが、 nameプロパティとvalueプロパティが含まれるオブジェクトの配列であれば、name=valueというデータとして送信できるようです。これは非公式の書き方かもしれません。 [ {"name": "name1", "value": "value1"}, {"name": "name2", "value": "value2"} ] name1=value1&name2=value2 ご参考まで。
sortableを使うときのコードは結構使い回しができるので、パターンさえ覚えて作ってしまえば、流用が可能です。 まず、PHPで受け取れているのであれば、そのデータを配列に変換してやる必要があります。 parse_str($_POST['file']); としてやれば、Query Stringのような文字が$fileという変数に配列変換されて入ると思います。 これで並び替えされたID順に配列が設定されると思うので、あとはこの順でDBに設定してやるだけです。 foreach ($file as $key => $val) { $sql = "update テーブル名 set orderby = :orderby where id = :id"; $stmt = $db->prepare($sql); $stmt->bindValue(':orderby', $key); $stmt->bindValue(':id', $val); $stmt->execute(); } 上はPDOで書いていますが、mysql_query()等を使っても考え方は同じです。 foreach ($file as $key => $val) { $sql = sprintf("update テーブル名 set orderby = '%d' where id = '%d'", mysql_real_escape_string($key), mysql_real_escape_string($val)); $result = mysql_query($sql); } これで並び替えされた順に、orderbyフィールドに「0、1、2、・・・」と順番に数字が入っていきます。
alert(xmlhttp.responseText); 　　↓ document.getElementById("text").value = xmlhttp.responseText; という感じでしょうか。
Ajax以前にHTMLの問題ですね…… ・文字化け HTMLソースはUTF-8で保存していますか？ 　<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> で書いている文字コードとHTMLソースの文字コードが食い違っていると文字化けします。 ・本文が表示されない scriptタグが閉じられていないのが原因だと思われます。
例外を投げても200 OKのままでしょうから、 header関数で任意のコードを返しましょう。 <?php header("HTTP/1.1 503 Service Unavailable"); ?>
方法3 　clickイベントは伝播するので、個々のclass="sample"要素に設定せずに、上位要素（documentなど）でイベントを監視し、発生元がclass="sample"の要素であったら処理をするようなイベント処理にする。　（ANo1様の方法2とほぼ同じ効果になります） ＜極簡単なサンプル＞ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> /*@cc_on@*/ document./*@if(1)attachEvent("on"+@else@*/addEventListener(/*@end@*/"click", function(evt){ var t = evt./*@if(1)srcElement@else@*/target/*@end@*/; if(t.className === "sample"){ //必要な処理。例えば… alert("イベント発生"); } }, false); </script> </head> <body> <p class="sample">元からある対象要素</p> <p>ここは関係ない</p> <div>例えばここにあとから追加する</div> </body> </html>
第一に回答から。 他の方がおっしゃる通り、 >1 >(A)IEなどのブラウザ >(B)IEなどのブラウザ です。 第二に、回答の理由です。 一番単純な理由を挙げると、 「IEなどのブラウザ」はJavascript機能を自分自身で持ち、 他のプログラムを呼び出さない設定になっています。従って、正解は1番です。 他例を挙げると、画像ファイルも同様で、IE自身が画像ファイル表示機能を持ち、 画像のあるサイトを訪問した場合でも、他のプログラム(画像ビューア)を呼び出しません。 # なお、世の中には、コマンドプロンプトで動くブラウザ(文字表示のみ)もあり、 # そんなブラウザは画像のあるサイトで他のプログラムを呼び出してしまいます。 >今使用しているパソコンはwindows7で、[関連付けを設定する]の項目を見ると、 >java scriptファイルを実行するプログラムは、Microsoft (R) Windows Based Script Host となっています。 前述の通り、「IEなどのブラウザ」は自分自身でJavascriptを実行する設定のため、 ブラウザ内に限り、[関連付けを設定する]設定は一切無視されます。 逆にデスクトップ上のJavascriptファイルを「開く」操作する場合は、 「関連付けを設定する]設定に従い、4番(Microsoft (R) Windows Based Script Host)の動きになります。
#1です。 時間が経ちましたが、まだ晒されてるようなので。 キャッシュについては、クライアント側だけでなく、サーバサイドや、経路中のプロキシサーバ等にも存在するので、一括で有効な方法というものはありません。 対策１： メソッドを"POST"にする。 対策２： リクエストオブジェクトに{ ticts = 時刻シード乱数 }等を追加し、毎回異なったクエリが出るようにする。 対策３： サーバが返答するResponseで、LocalCacheやProxyCacheを切るパラメータを加える。 対策４： サーバキャッシュの設定を適当な値に調整する（QueryByParamやCachePeriod等）。 Ajaxで応答値が更新されない問題なら、１か２で解決すると思います。 更新系のリクエストでGETを使う事は少ないので。。 更新リクエスト内容が丸見えになるのは、少々危ない気がします。
a、b、c、dの配列を作っておいて、シャッフルして、順にdivに表示するとか… 逆に、表示の対象をシャッフルしても同様ですけど。 いずれにしろ、どちらかを混ぜればよいのではないでしょうか。 シャッフルの具体的な方法に関しては、検索すればいろいろと見つかるはずです。
infoWindow.setContent()を利用して書き込むと、ちらついてしまうようですね。 google.mapの処理を追いかけてはいませんが、どうやら要素そのものを作成し直しているのか、一時非表示にして処理をしているのかわかりませんが、さらに、一旦スクリプトの処理が開放されているかして起こっているのではないでしょうか？ ご提示のコードでは、一つだけのinfoWindowを利用しているようですので、初期設定でcontent内に<div>や<span>などを作成しておいて、内容を書換える際は、google.mapのメソッドを利用せずに、直接その要素の内容を修正するようにすればちらつきは出なくなるようです。 ごく簡単なスクリプトでＰＣで確認しましたが、スマホでは確認していません。 （多分いけるのではないかと）
普通に、 myObj.myValue = 'hoge' ; ではだめなのです？
こんにちは。 >ただやはり >success: function(data, dataType) >{ >alert("ここではデータが入ってない・・・："+data); >}, >ここではデータが帰ってこないのです・・・ post.phpできちんと値を返していますか？ ここのdata変数はレスポンスの内容になり、var data = { param1: $('#param1').val() };のdataとは関係ありません。 よってpost.phpでは例えばJSON形式で値を返すなら $json = array(); $json['param1'] = $param1; // postの内容をそのまま返す(例えば、param1が"abcde") header ( "Content-Type: application/json; charset=utf-8" ); echo json_encode ( $json ); とした場合、 {"param1":"abcde"} といったJSON形式の文字列が返ります。 そうするとsuccessのdataにはjsonオブジェクトとしての値が入ってきますので alert ( data.param1 ); で受け取った内容の確認ができます。
すでに回答が出ていますが… どこかで見た内容だと思ったら、数ヶ月前にまったく同様の質問がありましたので、少しはご参考になるかと。 oshiete.goo.ne.jp/qa/8007055.html たまたまなのか、ハンドル名も似ているようで…
ちょっと面白そうだったので、かなりいい加減ですが作ってみました。 とは言っても、ほとんど A No２様の回答そのままなので、説明は省略です。 独自マーカーは回答欄のコードだと表示しにくいので、googleさんのchart iconを利用して、これまたテキトーです。 参考にもならないかも知れませんが… （マーカーのアニメーションが無い方が良さそうですが、draggableにすると、なってしまうみたい） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type='text/javascript' src='http://maps.google.com/maps/api/js?sensor=false' … </head> <body> <div id='map' style='width:800px; height:600px;'></div> <script type="text/javascript"> (function(){ //地図表示 var mapDisp = function(lat, lng, id){ 　return new google.maps.Map(document.getElementById(id), { 　　zoom: 13, 　　center: new google.maps.LatLng(lat, lng), 　　mapTypeId: google.maps.MapTypeId.ROADMAP, 　　scaleControl: true, 　　scrollwheel: false 　}); } //マーカー作成（仮マーカー） var createMarker = function(lat, lng, mark){ 　var icon = { 　　anchor: {x:0, y:37}, 　　url: "http://chart.apis.google.com/chart?chst=d_bubble …|bb|" + mark + "|000000" 　} 　var marker = new google.maps.Marker({ 　　position: new google.maps.LatLng(lat, lng), 　　map: map, 　　draggable: true, 　　icon: icon 　}); 　google.maps.event.addDomListener(marker, 'dragend', route); 　return marker; } //経路検索 var route = function(){ 　var request = { 　　origin: start.getPosition(), 　　destination: goal.getPosition(), 　　travelMode: google.maps.DirectionsTravelMode.DRIVING 　}; 　directS.route(request, function(response, status){ 　　if (status == google.maps.DirectionsStatus.OK){ 　　　directDisp.setDirections( response ); 　　} 　}); } var map = mapDisp(35.68, 139.75, "map"); var directS = new google.maps.DirectionsService(); var directDisp = new google.maps.DirectionsRenderer(); directDisp.setMap(map); directDisp.setOptions({markerOptions: { visible:false }}); var start = createMarker(35.71, 139.76, "%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88|00CCFF"); var goal = createMarker(35.65, 139.76, "%E3%82%B4%E3%83%BC%E3%83%AB|88FF00"); })(); </script> </body> </html>
そもそもAjaxは　Asynchronous　というくらいで非同期通信が前提ですから、処理1の結果を確認する前に処理2が走って当然です。 $.ajax({ async: false, ・・・・・ }); として、非同期通信を無効にするといいと思います。
No.2です。 > 戻り値として必ず「jsonデータ」を返す ということはあり得ません。返却されているのは、あくまで「json書式のテキスト」です。 そもそも、Webサーバは「.html」なり「.gif」なり、拡張子が登録されている要求URLの場合、自動でContent-typeを付加します。ところが、「.php」のような拡張子は、戻す内容が不明なため、（サーバの種類にもよると思いますが）デフォルト動作でtext/htmlなどのContent-typeを返します。 $.getJSONが、「どうせ戻りはJSONなのだからどんなCOntent-typeが来ても無視」と設計されればそう動作するわけで、事実、初期のjQueryは$.ajaxに"json"の指定がなく、textで受けてjson.parse()するような処理がまかり通っていましたがら、明確な基準はないのです。 ただ、サーバサイドから考えたら、相手は（ひょっとして前はContent-type不要で決め打ちだった？）$.getJSONだけではなく、$.getも$.ajaxもアリで、しかもjQueryなんか勝手にバージョンがどんどん上がっていくし、他にprototype.jsなんかもあり、正しくContent-typwを返すのが鉄則です。
現在行っている実装をベースに回答させていただきます。 (1)もちろんyesです。 Ajaxリクエストであっても、基本的にセッションやクッキーの扱いは同じであり、通常通りの処理を行います。 (2)セッションの有効性チェックで強制リダイレクト、というのは通常の処理だと思います。 FuelPHPやASO.NET MVCでは、アクションの実行直前に必ず呼び出されるメソッド（フィルタ）がありますので、そちらで全部一括して処理します。 (3)Ajaxの利用は、方向性としては間違っていないです。 ただし、一口にAjaxといってもいくつか種類があり、 3-1・スキームをサーバサイドで自動生成するもの（基本JSを書かない） 3-2・ほとんど全部をjQuery等で処理する「ピュアAjax」 3-3・さらにAngularやKnockoutなど、javascriptフレームワークを使うもの。 この中の3-2の場合、javascriptによるインベントハンドラ定義・サーバ送信データのHTMLへの反映、入力値のajax形式送信、という問題をすべてjavascriptで行うと、UI（ユーザインターフェース）にガチガチに拘束されたコードになって、開発効率（生産性）が悪化、バグ耐性も低下して、改変が非常に難しくなっています。 現在、サーバサイド開発は、IDEやMVCフレームワークの台頭で、かなり開発生産性や保守効率が上がっているのですが、Ajaxは開発環境も含めて困難度が高く、対応できるエンジニアも少ないことから、knockoutJSやAngularのようなフレームワークが正しく導入運用できるまで、「力攻めの」javascriptAjax DOM操作は封印です。
こんにちは。 in1,out1,result1～in50,out50,result50があるということでしょうか。 以下のようにすれば良いと思います。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q8048008/ idは一応付けていますが利用していません。またHTMLの構成で変わってきます。 フォーカスが外れた対象のidを取得して数字だけ引き抜いてその数字XをresultXにしても取得出来ると思います。 var index = $('input.out').index(this); としてinputのclass="out"が付いている要素のindex値を取得して$('#result'+index).text ( json.data ); にするとか。 いろいろな要素の取得方法がありますのでいろいろ試してみてください。
forの場合 for (key in check) { $(check[key]).click ( function() { if(this.checked) { thwrite(); } else { thremove(); } for (key in check) { if ($(check[key]).attr('id') == this.id) { $(".cell"+key).toggle(this.checked); } } }); } eachの場合 $.each(check, function(x,y){ $(y).click(function (){ if(this.checked) { thwrite(); } else { thremove(); } $(".cell"+x).toggle(this.checked); }) });
こんにちは。 Firebugなんかを利用してリクエスト内容とレスポンス内容等を確認してみてください。 実際に意図した値が送信されているのか、php側での受け取り内容は意図している値なのか。 それによって返ってくるレスポンスについても意図したものであるのか。 サーバ側でgetで受け取れるようにして直接パラメータを送ったらどうなるか等、何か切り分ける必要があると思います。
どういうシテュエーションかがよく理解できていませんが… 「決められた時間」がマーカーごとに違うとするなら、まず、その残り時間をajaxなどで取得する必要があります。 あるいはHTMLの出力時に、（可変）データとして埋め込んでおけばajaxの必要はなくなりますが、マーカーの数が非常に多い場合はajaxのほうが便利かもしれません。 あとはローカルのタイマーを利用してその残り時間をカウントダウンすればよさそう。 残り時間を取得するには、マーカー毎の基準時がどこかにデータ化されていて、それをもとに計算することになりますが、いずれにしろサーバー側での処理が必要になるので、使用する言語とデータの保存方法（データベースなど）にもよることになります。 スクリプトからのajaxリクエストは、普通に「ajax」で検索すれば方法は見つかると思います。 データを先に出力しておく方式をとるなら、ＨＴＭＬを読み込んだ時のローカルＰＣの時間を最初に取得しておいて、ページ表示からの経過時間とデータ（当初の残り時間）から表示すべき残り時間を計算するようにすればよいでしょう。 この方法の場合はajaxは不要ですが、HTMLの出力自体をサーバ側のプログラム（ＣＧＩなど）で行なうことになります。 マップのinfoWindowの制御方法やそのcontentの表示・変更方法については、googlemapsのapiのドキュメントに出ています。 https://developers.google.com/maps/documentation … カウントダウンタイマーの考え方は、検索すればたくさん見つかるはず。 何を最初のデータにするかによって、具体的な計算方法は若干変わる可能性がありますが、考え方はほぼ同じでいけるはずです。 （ローカルＰＣの経過時間だけを利用して、時刻の設定には頼らないロジックにしておく方がよいと思います。） http://www.bing.com/search?srch=105&FORM=AS5&q=% … 後は、これらを組み合わせればできあがり？ あっと、あと、infoWindowが閉じられた時に、タイマーが自動的に停止するようにしておく必要がありそうに思います。 （そうでないと、無駄に動きっぱなしになる可能性がある）
ちょっと混乱がおありなようなので、整理してきます。 ・Ajaxによって、（ページ遷移と）非同期に、サーバに送信されるデータ形式は、POSTかGETいずれかになる。 ・サーバからのレスポンスデータの形式は、xml/html/script/json/jsonp/textなどである。 また、jQueryに関しては、 ・jQueryは単なるjavascriptライブラリである。 ・jQueryを使う目的は、記述の単純化とブラウザ間の差異を吸収することである ・jQueryにはユーザインターフェース専門のライブラリ、jQueryUIがある。 ・jQueryUIのモバイル版がjQueryMobileである（フレームワーク的な要素も少し加えてある）。 なので、 ・jQuery自体の使用と、Ajax機能を使うか否かは無関係である。 ・jQueryUIとjQueryMobileは、UI機能を実現するために、暗黙のうちにjQueryのAjax機能を呼び出している。 ・jQueryUIとjQueryMobileは、データだけでなく、ページ遷移においてもAjaxを使用する（Ajaxがレスポンスとしてhtmlやtextを返す機能を利用）。 jQueryUI / jQueryMobileはデフォルトで、ページ遷移にAjaxを使用する機能がonになっていますので、あんなに派手なページ遷移が可能なのです。 他のjQueryプラグインも同様です。
A.htmlをブラウザがキャッシュしてしまい、opnLoadイベントが走っていない。 ローカル環境(ダブルクリック起動)で試しとられるのと違います？ Webサーバから起動するとまた動作が変わると思いますが、 ・<body onLoad="...">ではなく、jQueryのDOMイベントハンドラ$(function(){...});に変える。 ・<meta>タグでキャッシュを切る ・それでもキャッシュされるようなら、遷移時、Javascriptを使ってurl末尾に乱数パラメタをつける。 location.href += "?" + new Date().tick; など。 などの方策が有効です。 外していたらすいません。
「JavascriptがJQMを使用した途端にエラー」というのは、かなり乱暴な移行処理だと思いますが、JQMの動作モデルは理解しておられますよね？ jQueryMobileのナビゲーション機能 http://dev.screw-axis.com/doc/jquery_mobile/comp … なので、既存ページにあるjavascriptを無修正で動かすことが目的なら、Ajax遷移は頭から全部オフにしないと駄目でしょう。 でも、そうするとJQMの売りである、格好いいページ遷移ができなくなるので、結局、現在HTMLページに打ちこまれているJavascriptは、ほとんど修正することになります。 JQMのイベントモデルは通常のPC用Webページとかなり違いますが、その辺りの理解も大丈夫ですか？
質問内容が違いますね。 「Ajaxの結果のページングの方法」ではなく、ズバリ「jquery.pagination.jsの使い方」が知りたいのではないですか？ こういう質問はいつもそうなのですが、回答は出ないと思います。 Ajaxページングは、本来、一括取得すると件数の多すぎるデータを、「全件数」と「ページ化された実体データ」で表示すべきものです。 このモジュール、ページング前の全データ実体を内部に保持する仕様のようで、ちょっと使い物にならないと思います。 下手にバグを取るより、別のものに乗り換えたほうが早いのでは。 ページャは自分で作ったほうが応用が効いていいのですが、有名どころならバグも少ないし。 jQuery Simple Pagination http://flaviusmatis.github.com/simplePagination. … とかどうですか？
> 受け取ることが出来ないのは分かるのですが、 > 「アップロード自体できない」のと「アップロードしたけど受け取れない」の違いがよく分かりません。 > もしくは、このサンプルでは、アップロードしようとしたけど出来ていないって、ことなのでしょうか？ 画像ファイルをPOSTすれば確かに画像データはクライアントからサーバに向かって転送（アップロード）されます。 しかしサーバ側に送られてきたデータを処理するためのプログラムが動いていなければ 送られてきたデータは使われることなく捨てられます。 確かにアップロード自体はできていますが、そのデータを捨てるのが目的ではないでしょうから、 目的を達成できていない以上はこれをもって「できた」なんていう人はあんまりいないと思いますよ。 （それともデータが捨てられようがネット上をデータが流れさえすれば満足ですか？） そして、これはAJAXを使っても使わなくても同じなので、AJAXは本質的に関係ありません。 （FormとSubmitボタンを使ってPOSTした場合でもサーバ側にプログラムがないとやっぱりデータは捨てられます。）
SQLサーバやC#で有名なLINQ（統合言語クエリ）のJavaScript版はいかがですか。 集計関数やグループ化関数は非常に強力で、一度使うと手放せなくなりますよ。 linq.js : LINQ for JavaScriptライブラリ http://www.atmarkit.co.jp/fdotnet/dotnettips/105 …
意味がよくわからないのですが？・・・ <section id="map"> </section> の中に、widthとheight,altを書けばいいのでは？・・・ 閲覧者の環境に合わせるのであれば、ResponsiveLyoutにすればいいのではないでしょうか？・・・ 表示するものは、文章であれ、図形であれ、地図であっても収縮は自在に、閲覧者環境に対応します。
検証してませんが、 HTML要素が表示できれば良いのでしょうから、マップに重ねられるオーバーレイビューが用意されているようですので、そちらを利用する方法がありそうです。 https://developers.google.com/maps/documentation … 確認していませんが、多分、マップにむすびつけられるのでマップの移動に合わせて移動するのではないかと… 移動のイベントに合わせて移動させれば、見た目に固定させることも可能と思います。 違う発想としては、マップの上に単純にposition:absoluteにした要素を重ねて表示するというのがかんがえられ、こちらの方が簡単そうな気がします。 もっとも、マップの直上・直下に配置すれば重ねたのとほとんど変わらないと思いますけれど… こちらが一番簡単ではないでしょうか。
＞xmlからの緯度経度の取得はできるのですが、その他の情報の取得がわかりません 未検証ですが・・・ lat、lngともにmarker要素の属性になっていますし、その他の情報も同じなので同様の方法で取得できませんか？ 　○○.getAttribute("address");　とか 　○○.getAttribute("name");　　で取得できると思いますけれど？ mapのAPIについては、こちら（↓）に出ていますので、ここで確認するのがよろしいかと思います。 （英語ですが、クラスとメソッド、プロパティの一覧のようなものなので、英語がさっぱりの私でもなんとか…） https://developers.google.com/maps/documentation … Ｍａｒｋｅｒの定義で 　icon:dat.type この時点で、dat.typeにはなにが入っているのだろうか・・・？ （アイコンのアドレスをどこでdat.typeに定義していますか？） ＞現在アイコンは読まれずウィンドウも一つの状態です。 ウィンドウを沢山用意したいのであれば、インスタンスをそれだけ作成しておく必要があります。 一度に表示するものが一つでよければ、同じものを位置や内容を変えて表示することで足りるでしょう。 最近回答したものですが、似た部分がありますので・・・ http://oshiete.goo.ne.jp/qa/7894323.html
ワーニングによるエラーメッセージがJSON形式のデータに混入してしまったため、JSONとして処理できなかったっという所ではないでしょうか。
逆質問です。 ご自身の質問文を読み返して、何が言いたいのか理解出来ますか？
setlatはグローバル変数になっているので function successCallback(position)の外でも参照できます。 そのスクリプトの後ろにでも <input type="button" value="表示" onclick="alert(setlat);"> というボタンをおいてボタンを押してみてください。 successCallbackが呼び出された後であれば、取得した値が表示されるはずです。 なお、そのスクリプトで a=setlat; が実行されるのは、successCallbackが呼び出される前なので aに有効な値は入ってません。
前のご質問に似ていますが、こちらのほうが簡単かと思います。 mapが表示されている状態であれば、 　map.getBounds(); で表示領域の境界を取得できます。 これを利用して、各マーカーの緯度・経度がその間にあればマーカーを表示処理、それ以外はスキップするというようにすればよろしいかと。
map api　のreferenceを見てみると、distanceに関連するobjectがありましたので、それで求められるかと思いましたが、 　https://developers.google.com/maps/documentation … どうやら、ルート上の距離を測ってしまうみたいですね。 サンプルの中を探してみたところ、ギャラリーの中に距離を算出している例がありましたので、参考になるかと。 　http://www.barattalo.it/examples/ruler.html 中を見てみると、単純に緯度、経度の差から三角関数で距離を算出しているようですので、地球表面を正球面として計算しているようです。 ただし、長半径6378kmよりも小さい6371を用いているようですので、地図周辺用に換算してあるのではないかと思います。 対象地域が日本などに限定されていれば、同様の方法でもあまり誤差はないのではないかと推測されます。 そうでないときは、求める精度にもよりますが、地球を楕円体として計算することになるのかも… 　http://ja.wikipedia.org/wiki/%E5%9C%B0%E7%90%83 実際の計算では、全部のデータに対して距離を求める必要はなくて、先に中心点から半径距離に当たる矩形のエリアを求めておいて、まず、緯度・経度がその外側であったら除外、内側の点だけに対して距離を計算してチェックするようにすれば少しは効率が上がるのではと思います。
おそらく表示件数によってスキームを変えている連中が多いんじゃないかな？ 件数が少ない（マップ内に15～6件程度）場合 dragEndでそのままajax取得->表示 件数が多い場合 初期値として、バウンダリの９倍面積のエリア分の物件状況をajaxで内部配列に取得 dragEndで内部配列から表示、同時にバウンダリの９倍のエリア分の物件状況をajaxで内部配列に取得 件数が多い場合、ちょっとしたDragで全件再取得は苦しい。 体感速度を上げるためには、ない知恵を使うしかないです。
クライアントから別サーバとAJAXは不可能。サーバ側でやるのが定石。
何度もすみません。 よくよく考えたらcsvファイルの読み込みが遅いのに ファイル分割したって意味ないですね…。 ムダなお手数おかけしてしまいました(泣) サーバを再構成されるということであれば力になりますので 諦めずガンバって下さい！
一応、補足。 CGIを使わない静的なファイルであればApacheなどのウェブサーバーが自動的にcontent_lengthを計算してくれますが、 動的な生成ではプログラム終了まで送出サイズがわからないため、content-lengthが計算できません。 そのため、自分で計算する処理を入れなければなりません。 CGI（PHP）からcontent-lengthを送出する方法ですが、以下のような考え方で行ってください。 バッファにすべてのデータを貯めておく。 　　global $buffer; 　　$buffer='<div id="data">'; 　　$buffer.='■'; 　　$buffer.='</div></html>'; バッファサイズを測り、ヘッダを生成する 　　$bytes=strlen($buffer); 　　header('content-length: ' . $bytes); データを送出する。 　　echo $buffer; --------------------- もう一つの方法として、Comet（ロングポーリング）を使う方法があります。 PHP側の処理をsleepさせずに、一旦終了させます。 その後JavaScriptで通常のonreadystatechangeの処理（受信完了処理）を行い、直後（または一定時間おいて）にもう一度サーバーにアクセスします。 こうする事で、アクセス完了処理が何回も行われる事になりますので、（擬似的な）リアルタイム更新が可能になります。 詳しくは「ajax comet」で検索してみてください。 クライアント側で一定時間待機後にアクセスする通常のポーリング （<meta name="refresh" content="10">のAjax版） なら、Cometほどサーバー負荷はありません。 こちらの方がよく使われます。 チャットルームなどがこのポーリングです。 Twitterの「新しい発言」が自動的に増えていくのとか、スクロールするごとに次ページの内容が表示されていくというのも、 画面に追加するという点ではポーリングと変わりありません。 ぶっちゃけ、単発のAjax通信は「Ajax」と呼ぶに対して、連続するAjax通信に違う名前を付けただけです。 ----------------- 純粋な双方向通信を行う方法 ブラウザもサーバーも、両方が対応している必要がありますが、WebSocketを使用する方法があります。 要はブラウザが行っている通信行程を全てJavaScriptで記述し、 サーバー側のプログラムは、Apache（Apache上で動くものではなく、Apacheそのもの）を作るような物です。 そのため、一般のレンタルサーバーでは使えません。 「websocket」で検索してください。
横やりですいません。何か変な回答があるので口を出します。 #1さんの回答が正解です。で、ちょっと追加。 ■AJAX通信すると、SEO的に不利か？ 内部的なデータの読み込みは、SEO的には無関係です。 関係するのは、Ajaxによるページ遷移です。 クローラは<a>タグによる静的なURLリンクだけをクロールします。 Javascriptはいっさい解釈できません。単純なonClickだけでなく、関数呼び出しや外部リンクまで含んだJavascriptの構文を理解できるはずがありません（笑 Ajaxでも通常のフォーム遷移も同じです。 <a>タグからAjaxを呼び出す場合には、xxx.html#param=valueなどとして、hashChangeイベントを起こし、それを捕捉してAjax処理を行うようになっていれば、クロールされます。 ■質問１項目に違いはあるか？ 上記の理由どおり、違いはありません。 ■質問２　Ajax通信で検索ボタンを押したページ結果は、クロールされるか 固定的に存在する検索リンクは対象になります。 （よくある質問などで、決め打ちの回答項目をAjax表示する場合など） ■質問3　Ajax通信の非同期 Ajaxの「Async」と、ここでいう「非同期」はニュアンスが違います。 Ajaxの「A」は、「ページ遷移に同期せずに」という意味です。 jQueryではデフォルトがAsync「非同期」のため、サーバからの戻りを待たずに処理が続行されます。 そのため、通信結果を処理するために、通信完了イベントを待つ必要があり、必ず「コールバック・メソッド」が必要です。 「同期」処理の場合は、サーバからの返答を待つ間、停止することになりますので、「コールバック」は不要で、リニアにメソッドを書けばいいです。（質問主さまの前のトピはこの状態） なので、「同期」「非同期」どちらで書いても、後処理が変化するだけでやれることは同じです。 一般的なフォーム送信や、リンクは、ページ遷移をともなう「同期」処理です。Ajaxとは利用法が全く異なります。 ちなみに、POST/GETというのは単なるクエリの形式で、一般的なフォーム送信にも、Ajaxにもあります。 （参考） AJAXサイトをクローラブルにする http://www.sem-r.com/seo/20100305195304.html
xmlhttp.jsの中身を見ないと何とも言えないのですが、おそらくloadTextFile()関数の中では、ファイルを非同期で読み込んでいるのでしょうね。 そして、まだファイルの読み込みが終了していない時点でoutput_result()が呼び出されてしまい、データは空っぽの状態のまま、出力処理が行われてしまう、と。 loadTextFile()関数の実装を同期に変更するか、非同期でロード完了後にoutput_result();が呼ばれるように変更するか、というところでしょう。 同期に変更すると、ロードが終わるまでは画面が操作できなくなります。 その方が良いのか、とりあえず操作はできるようにした方が良いのかは、画面が求める仕様によります。 これ以上の具体的なことは、xmlhttp.jsのソースを見ないことには、何とも言えません。
Ajax通信が非同期モードで行われていて、$.postの処理が完了しないままif文に突入しているように思います。 $.ajaxはパラメータで通信モードを非同期か同期かを指定できるし、通信成功時や失敗時の処理が切り分けできるのでオススメします。
ドキュメントルートというのは、外部に公開する領域。それ以外は、外部に隠してアクセスできないようにするために設定するものです。 だから基本的に、ドキュメントルート以下と、それ以外は完全に分離された物と考えます。 ただ、そうはいえ同じパソコン内ですから、相互にやり取りする方法はないことはありませんが、ほんと例外です。 そういうことはしなくてもやりたいことはできるはずです。 やろうとしていることはなんとなく推察できますが、それをどう勘違いされているのか、ドキュメントルートの外に置くとか、.htaccessという関係のない設定ファイルを変えるとか、とんちんかんな印象を受けます。
完全に検証してなくて申し訳ないんですが、 １．phpの json_encode() 関数はSJIS未対応 ２．ブラウザの HttpXmlRequest（要するにAjax）もSJIS未対応 の二重苦で、結局全部UTF-8にしないと動作しないんと違いますか？
＞参考にしたのは下記サイトです それらのサイトは、ほとんどご質問にピッタリのサイトではないでしょうか？ ＞どのようにソースを組めばよいのか、 ＞jsonを使ったV3でのソースを教えていただけると助かります。 漠然とした質問への回答としては、ここの限られた回答欄よりも、参照なさっているサイトのほうがよほど情報量が多いと思います。 問題を切り分けてこの部分が不明とかでしたら、JUSTの回答もつきやすいのではないでしょうか。 とりあえず、ご参照なさっているサイト（どちらでも良いですが）の内容を、そのままご自分の環境で再現してみることをお薦めします。 それで、動かなければ再現できていないわけで、多分、「ソースを教えてください」とは違うところに原因があるのだと推測できます。 再現できたなら、御自分がなさりたいことへと部分部分で変えていってみてください。 どこかで動作しなくなったら、その前に行なった内容がおかしいと考えられます。 参考サイトの内容が、ご質問とほとんど同じと思いますので、変えて行くにしてもそれほど大きな変わり方ではないはず。 地道ですが、確実ではないでしょうか？
＞「ヴ」がつく文字が、 カタカナの「ン」で始まる文字よりも、 ＞降順の 一番トップにソートされてしまいます。 カタカナの文字コード表を見てみればわかりますが、ンよりもヴのほうが後になっています。 http://charset.7jp.net/unicode2.html 上の例はunicodeでの例ですが、他のコードでも順序は同様です。 それなので、ご質問の結果は正しくソートされた結果だといえます。 もし、自分独自の順序付けをしたいのであれば（TableSorterがどのようなものか全く存じませんが）、最初に順序付け用のキーを非表示で追加しておいて、それをもとにソートを行うようにすればよさそうですが、そのようなことはできないのでしょうか？
＞ボタンクリックイベントで行数を増やしていく というのをどういう方法でやってるのか説明してぼしいですわ。 １・ASP.NET AJAXのUpdatePanelで ２・ASP.NET MVCの@ajax.beginformとかで ３・jQueryのclickイベントハンドラでDOM的に ４・上記２と３の合わせ技 １だったら知りません。ゴメン
＞ajaxとか使えば出来るのでしょうか…？ 「ajax」はとりあえず関係なさそうです。 ＞何から調べればいいのかもわからず悩んでいます。 まず、「javascript」を調べて大まかに理解してください。 次に、「javascript drag」あたりをキーにして検索すれば、ドラッグに関しての方法が見えてくるかと。 さらには、これらの知識を元にスクリプトを作成してゆくことになりますが、ある程度のjavascriptの知識がないと難しいです。 手っ取り早く、ご質問のような機能を持ったライブラリを捜すという方法もあります。（あるかないかまでは知りませんが…） （↑これも、検索等で探すことになるでしょう） ＞縦長のテーブルがあって、列をドラッグ… 全体がtableタグでマークアップされている中の列だと、列全体はtrをまたいだ要素集合になってしまうので、そのままで実現しようとするとかなり面倒なことになりそう。 ちなみに、ご提示のサイトでは縦長のdiv要素をドラッグ＆ドロップで入替えることで、ご質問のような機能を実現しているようです。 子要素にはtbodyとかtrといったテーブルの要素をイメージさせるクラス名を用いてはいますが、基本的に縦長のdivで括られています。 （ソースをご覧ください）
質問文に書いてないのでわかりませんが、jQueryでしょうか？ それっぽいので… 　$("div").load("./hoge.php div.test", function(){ 　　$("ul.piyo").remove(); 　}); とかでは？（未検証です） http://api.jquery.com/load/
こんにちは。 何度もすいません。 $('form').submit ( function() { alert ( $(this).attr('id') ); return false; }); スマートにこれでも良いですね。 わざわざeach()を使う必要ありませんでした。
http://jquery.com/ ここ以外に、内容の間違いがないサイトはありえません。
こんにちは。 HTMLの構成によってセレクタの内容が変わってしまいますが、以下のようなイメージです。 $().ready ( function() { // liのクリックイベントを設定 $('li').click ( function() { // まずは全てのチェックを外す $('input:checkbox').removeAttr ( 'checked' ); // クリックされたリストのindexを取得して同じindexのチェックボックスにチェックを入れる // よって、リスト2の場合はリスト2にチェックが入る $('input:checkbox:eq('+$(this).index()+')').attr ( 'checked', 'checked' ); }); }); 全てのチェックを消して、特定のチェックを入れるという処理は基本的に変わらないと思います。
#1です。 ＞a01.jpgが表示され、カーソルキーかクリックでa02.jpgに移行できたらいいなと思っています 一度に表示されるわけではなくて、順に表示できればよいのでしょうか？ そうであるならば、多くの○○boxはグルーピングに対応していると思いますので、ほとんどそのままの設置で可能と思われますが？
ちょうど、同箇所で情報をあつめていました。 これでだめすか？ http://code.google.com/p/hack4jp/source/browse/t …
＞jquery内のfunctionを呼ぶ方法が分かりませんでした。 この考え方が間違いで、 $(function(){～});で囲むからjQuery内ってことではありません。 むしろ囲むことにより、その囲んだ範囲内でしか、そのfunctionが定義されていないので、コールバックへの渡し方によっては、hogeはundefinedになります。 言っていることが分からないようでしたら、function hoge(){}を外に出して、グローバルにすればいいと思います。 もしくは、 var hoge; $(function{ hoge = function(){ //コードを書く }; }); にするかですね。
まずはphp側で一覧を取得してresultに値が入るかを目指しましょう。
http://jamielottering.github.com/DropKick/ より、“Did we mention it works on IE7 and 8?” 対応できるならしてるでしょうね。
page.match(/あああ|かかか|さささ/)
こんにちは。 ASP.netは詳しくないのですが、おそらく画面上の制御はASP.netがJavaScriptを生成するような仕組みだと思いますので、同じような動きは他のサーバサイドの言語になっても可能だと思います。
success : function(data){ if(data.id){ alert(data.id); $("#tblh img#image"+data.id).attr("src","/images/noimage.gif"); } の「alert(data.id);」は実行されて、送信したidがアラート表示されていますでしょうか？ (1) また、ブラウザから直接 ｈttp://***.***.***/images/noimage.gif で「noimage.gif」画像が表示されますか？(2) $("#tblh img#image"+data.id).css("display", "none"); とするとどうなりますでしょうか。(3) chromeの「F12」開発ツールやFireFoxの「FireBug」などは利用していますか。 利用していれば、実際に「<img>」タグの「src=」属性が変更されているか確認できるはずです。 src属性が変更されているにもかかわらず画像が変わらないのか、 そもそもsrc属性が変更されないのか・・・ success : のfunctionでエラーなどが起きてないかも開発ツールで確認してみてください。 .htaccessの設定は多分問題ないと思います。 RewriteEngine on RewriteCond $1 !^(index\.php|images|css|js|robots\.txt|favicon\.ico) RewriteRule ^(.*)$ /index.php/$1 [L]
こんにちは。 jQueryを利用しての送信は以下のようにします。 (サーバからのレスポンスはJSONと仮定) $.post ( 'delete.php', { id: id }, function ( json ) { } ); パラメータの部分は { パラメータ名 : パラメータ値 } ですので { id: id }の場合、PHP側では$_POST['id']で取得します。 サーバからJSONを返すとfunction(json)が呼ばれますのでそこにnoimageへの書き換えを記述します。 タグ構成が違うと、一部変更しないといけません (imgタグへのアクセス部分等) が動作サンプルを提示します。 削除ボタンをクリックするとサーバ上へidを送信し、削除処理(ダミー)を実行して成功/失敗をJSONにて返します。 受け取ったJSONのstatusがsuccessの場合はnoimageへの変更を実行します。(偶数番号が成功、奇数は失敗します) ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7545172/
まぁ最低限httpデーモンさえ動かしておけば、http://localhostに対して アクセスすればajax環境は構築できていると思いますが・・・ （使用ブラウザによって使用する関数や挙動は違いますが）
>No.2お礼 >サンプルではクリックしないと情報が表示されませんが、 >javascriptオフのときは同期通信になってしまうけどphpファイルが表示される、 >オンのときは非同期通信で表示、なんてこともできるのですか？ 何が言いたいのかわかりませんが、そういう作り方をすればできるんじゃないでしょうか？
こんにちは。 ソースを受け取り後にＤＯＭをいじって内容を書き換えていますので反映することは出来ません。 最初からその内容でＨＴＭＬを書き出してあげる必要があります。
質問者さんは、例えば。 初めて作るみそ汁のレシピ 1)出汁を取る 2)具を入れる 3)味噌を入れる というのを見て、ケチャップやらウスターソースやら酢を入れるタイプですか？ 私はファイルを２つに分けてみてくださいとは言いましたが、includeを使えとは一言も言っていません。 参考サイトを見直して、一字一句、全く同じものを作ってみてください。 もちろん、ファイル名も同じものです。
こんにちは。 何も難しく考えることはなく、読み込んだ対象のみ処理されると考えれば良いのではないでしょうか。 例えば例のPHPであれば<?php　?>内の処理はアクセスされた時にサーバ側で処理をしてHTMLとして返します。 その時外部のCSSやJavaScriptを読み込みます。 次にonclickでAjaxの処理が走った場合、例えばJSONデータを読み込んで<div id="ajax"></div>に表示するような処理の場合はそのJSONのみ読み込みます。 (他は何も変わらない) なのでそのJSONを表示する処理で利用するCSSはそこで同時に任意のCSSを動的に設定するか、もともと読み込んだCSSに含まれていないと適用されないと思います。 上の方でおこなっているmySQLへ接続したりetcは実行されません。 言葉で説明するのが難しく伝わらなかったらすみません。
そのようなアプリは既に存在していますが、 「今更？」と言う感じです。
No.2です。 apacheのログを見てみて、接続数に引っかかっているようであれば要変更です。 この辺のサイトはいかがでしょう。 http://shoulder.jp/archives/006925.php プログラム的な改善方法としては、Ajaxの処理を減らすというより、 Ajaxの「リクエスト数」を減らす必要があります。 処理ごとにAjaxでデータを引っ張るよりは、出来る限り一度で必要なデータを全部取得して、 Javascript側で成形して必要なデータを取得する方が安定します。 また、クライアント側（ブラウザ側）にも同時接続数制限が存在したと思いますので、 その辺りも注意する必要があるはずです。 基本はAjaxは同時に2つまでしか動かないようにすれば大丈夫だと思います。 また、jQueryとかの機能を使う場合は意識しなくてもうまい具合にやってくれたはずです。 そんな感じで如何でしょうか。
＞AJAXで読み込んだ先で使用したいと思っている の意味がよくわかりませんが、ひょっとして別ドキュメントなのでしょうか？ その場合は、そちらのドキュメントで設定をしておかないとイベントを取得できません。 あるいは、同じドキュメントに後から要素を追加生成した場合に動作しないという意味でしょうか？ その場合は、こちら（↓）と同じ原因かと思われます。 http://oshiete.goo.ne.jp/qa/7416938.html ご提示のプラグインではinitialize()の処理内でイベントの設定も行なってしまっているようですので、どこが該当箇所かを探すのが面倒ですが、そこのclickイベントの設定をliveに変えれば動作するようになるのではないかと推測します。 探すのが面倒な場合は、SL2 = new SexyLightBox みたなことにして、追加した要素に対して別に設定し直してあげるとか… （これはこれで、ajaxで何度も読み込んでいたりすると面倒なことになりそうですが）
キーを数字ではなく　"p5" や "p9" などの文字にするとどうですか?
２つのファイルにある urlencord 部分を urlencode に修正してみてはいかがでしょうか。 IE以外はエンコードに失敗して日本語のままでも、 文字化けせず表示できていただけかもしれません。
こんにちは。 特に意識したことが無かったので、的外れな回答だったら申し訳ございません。 HTMLの記述がなんであれ、getでもpostでも通信できますので以下のサンプルをご覧下さい。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7423626/ どちらもHTMLのタグの構成は一緒です。 aタグのhrefからパラメータ部分を取得し、ajaxのパラメータに設定しています。 (jquery.url.jsというプラグインを利用しています) ほかの方法としては<img src="" data-keyword="aaaa" data-cate="1" />と、独自の属性にて値を準備してあげてJavaScriptにて取得してパラメータに設定してあげる方法もあります。 他にもいろいろあると思います。
というかまずこの質問の上でだしてるあなたの質問にだれも返答しないように、 ｊｓというよりもプログラム自体ほとんど未経験なんだと思うけど。 いきなりクライアントというよりも。基本的な部分のプログラムの勉強をまず軽くやったほうがいいよ。 twitterクライアントつくるなら、これの場合はinnerhtmlとかをつかってノードの書き換えや追加、あたりのをまず理解しとかないと、リアルタイム更新というのはできないよ。 あなたが言ってることは、ようはjsonで得たデータをinnerHTMLとかつかってタイムラインの部分のnodeを書き換えてやればいいんだよ。 言葉にするとこの一行ですんじゃうことなんだけどｗ、そもそものdom操作が理解できてなさそうなので、その人に↑の１行で言っても先ず理解できないでしょうから。助言のしようがちょっとないんだ。 (´・ω・｀)　javascript　dom　で検索するといろいろ例文があるので、そこらいちどぐるっとめぐって勉強するといいよ。 あと基本的なjavascriptの構文とともにオブジェクト指向言語の勉強してクラスやメソッドの理解をしておけば、必要な機能をライブラリ化して後で再利用とかできるようになるし、ほかの言語みてもとまどわないだろう。ただjavascriptは型もなにも自由すぎて最初にこいつから勉強するのはあまりおすすめ出来ないんだけどｗ ちゃんと勉強するなら JavaScript本格入門　~モダンスタイルによる基礎からAjax・ｊQueryまで という本がおすすめできる。 けど内容はある程度オブジェクト思考の知識を持ってる人じゃないとスラスラ読めないだろう。 ｊａｖａの基礎を勉強すると、まずはいいだろう。情報も本もすぐに試せる環境も手にはいるので。 そこからjavascriptを勉強すると早いと思う。
Apacheを使ってないのでは？ loalhostにアクセスしてみてはどうでしょうか。
こんにちは。 画像の切り替えにAjaxを使う必要はありませんが、2パターン作ってみました。 サンプル1はAjaxを利用せず、画像を変更します。 サンプル2はAjaxを利用してdata.txtよりJSONデータを読み込んで、適切な画像を表示しています。 動作サンプルよりソースを表示して、どういった処理を行なっているか見てみてください。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7364555/ ==== data.txtの中身 {"ringo":{"url":".\/images\/ringo.png","alt":"\u308a\u3093\u3054\u306e\u753b\u50cf(Ajax\u3067JSON\u30c7\u30fc\u30bf\u3092\u53d6\u5f97)"},"mikan":{"url":".\/images\/mikan.png","alt":"\u307f\u304b\u3093\u306e\u753b\u50cf(Ajax\u3067JSON\u30c7\u30fc\u30bf\u3092\u53d6\u5f97)"}}
readyStateは4以外がエラーというわけではなく、通信中はその受信状態に応じて1～４を変動します。 4になっていると思いますが、document.write()のエラーではないでしょうか。 document.write()が使える条件、使えない条件を調べてみてください。
[No.2]さんの回答にちょっと補足 IE は、たしかキャッシュされた画像への onload は、発火しなかったはずなので、 jQuery でそのあたりが対処されているか確認した方がいいかも？ jQuery で対処されてなかったら、 IE 画像 キャッシュ onload あたりのキーワードで検索をかければ対処方法のかかれたページが見つかるよ。
実際の処理がどのような内容になっているのかにもよりますが、keyup changeの両方を指定すると、必ず最後に同じ状態で2回処理をすることになってしまうので、keyupだけで充分かと想像します。 ＞ctrl+vでペーストされた場合に2回処理されてしまうのは ＞仕方のないことなのでしょうか？？ keyupは文字通りkeyup時に発生しますので、ctrlキーだけをキーアップしても発生します。これはshiftやdelやescその他のキーでも同様です。 keyの種類によって処理を実行させたくないのであれば、keycodeを取得して判定するか、あるいは、対象としているテキストエリアの値を記録しておいてその内容が変わっていたら処理を行なうとかにすれば2回実行せずに済むかと思います。 （後者は、リアルタイムでのonchangeに近い感じかも…） ＞テキストエリアが変化したら、１度づつ処理させるには ＞どのようにしたらいいでしょうか？ 例えば、後者の考え方の例。 （例示の対象が'textarea'となっていて、idではないので、複数に対応可能な記述にしています） （インデントは全角空白にしています） $(function(){ 　$('textarea').each(function(){ 　　$(this).bind('keyup', hoge(this)); 　}); }); function hoge(elm){ 　var v, old = elm.value; 　return function(){ 　　if(old != (v=elm.value)){ 　　　old = v; 　　　alert("処理"); 　　} 　} }
$(function()) とか $(document).ready() とかってのは、 ドキュメントの準備ができたタイミングで実行される処理を記述するものです。 ですので、仰っている程度の処理であれば違いはほぼありません。 主な使われ方としては、HPの初期化処理等が最初に動くような場合、 そのまま実行されると、通常のHTMLが表示される前に処理が入ってしまって表示が遅くなってしまいます。 そこで、このファンクションに入れておくと、ドキュメントの準備が出来てから動くので、見た目上は非常にシームレスに見える訳です。 ざっくり言うとこんな感じです。 詳しくはちゃんと調べてみたほうが良いかと思いますよ。
HTTP ヘッダと HTML の HEAD 要素が頭の中で混ざってぐちゃぐちゃになっちゃってる感じ。 | HTTP/1.0 200 OK | <head> | Access-Control-Allow-Origin:* | Content-Type: text/html; charset=UTF-8 | </head> | | <body>test is</body> ↑ではなくて↓を返すと大丈夫かも。 | HTTP/1.0 200 OK | Access-Control-Allow-Origin:* | Content-Type: text/html; charset=UTF-8 | | <html> | <head><title>test is</title></head> | <body><p>test is</p></body> | </html>
こんにちは。 前回の質問と同様の現象ということでよろしいでしょうか。 確かにこのソースですと再現させることが出来ました。 どうもCSSを設定する際にposition:absolute;を設定すると現象が起きるようです。 最初からabsoluteを設定しておくと再現しませんのでCSSでうまいこと対応できませんでしょうか。 ==== 動作確認サンプル http://hppg.moe.hm/okwave/qa/q7302800/ ※根本の解決でなくもうしわけございません。ブラウザに起因する現象だと思います。
こんにちは。 ちょっと試してみましたが私の環境では特にそういった現象が起きませんでした。 お役に立てなくて申し訳ございません。
こんにちは。 urlに指定してあるxmlファイルですが自分のサーバ(このスクリプトが動くサーバ)以外のところのファイルじゃないでしょうか。 クロスドメイン制約(とどのつまりほかのサイトのファイル)は読み込めないようになっています。 動作確認サンプルでは自サーバにxmlファイルを用意して実行しましたので正常に動いています。 ※もし過去の質問が解決しているのであればクローズしてくださいね。 ==== 動作確認サンプル http://hppg.moe.hm/okwave/qa/q7293123/ xmlファイルを自分のサーバに用意するか以下のような方法で制限を回避する必要があります。 http://shokai.org/blog/archives/993
$(function() { 　　　　$('#button').toggle( 　　　　　　　　function(){ 　　　　　　　　　　　　$('#sample-text').hide(); 　　　　　　　　} 　　　　　　　　, function(){ 　　　　　　　　　　　　$('#sample-text').show(); 　　　　　　　　} 　　　　}); });
こんにちは。 遅くなりましてすいません。 わざわざ待っていただきありがとうございました。 簡単なサンプルになりますが用意してみました。 http://hppg.moe.hm/okwave/sample/ 更新までは実装出来ていませんが、一覧を表示する画面内で詳細データみたいなものをAjaxで取得し、動的に表示します。 本来なら「更新」ボタンを押した時点でサーバへ送信し、データの更新をします。 こんなかんじにすると一覧表示画面で送信されるデータと詳細のデータについてわけて更新できますが、画面は一つで済みます。 ちょっと急いで作ったので効率化とかあまり考えていません。 参考程度にご覧いただければと思います。
http://api.jquery.com/jQuery.noConflict/ >jQuery(document).ready(function($) { > // Code that uses jQuery's $ can follow here. > }); > // Code that uses other library's $ can follow here. noConflictをつかっても、jQueryのスコープ内における$はjQueryを指します。 jQueryではないライブラリの$（グローバル変数の$）を使う場合は、window.$を使用してみてください。
ANo.1です。 私ならデザインに苦労しますけど（苦手なので）、実装自体はそれほど難しくはないです。 おすすめの書籍というようなものはないですね。 JavaScriptもPHPも基礎と応用ですし、基礎はどんな本にも載っていますし、応用はどんな本にも載っていません。 ネットで検索しながら、少しずつ進めるしかないですよ。 データベースは、SQLに限定すれば「明快入門SQL」がお勧めですが、入門向けではないです。ある程度解っている人向けですね。 phpはjson_encodeとPDOで実装出来ますし、JavaScriptはjQuery.getJSONで実装出来ます。 そのくらいですかね。
Ajax というのは、Webアプリケーションを作る上での「方法論」です。 一方、jQuery は、Webアプリケーションを作るためのJavaScript「ライブラリ」です。 この二つは並列で較べられるようなものではありません。 jQuery は、さまざまな機能をブラウザ上で簡単に実現できるライブラリであり、 jQueryを使うことで 、Ajaxアプリケーションも容易に作れます。 構造的には、「JavaScriptプログラムで、jQueryを使って、Ajax なWebアプリケーションを作る」ということになります。 jQueryを使わなくてもAjaxアプリケーションを作ることはできますが、かなり手間がかかります。 jQueryを視野に入れているのなら、そんな遠回りをするのではなく、jQueryでAjaxアプリケーションを作るべきです。 ・まずはjQueryについて勉強すべきでしょう。jQueryはJavaScriptのライブラリですので、合わせてJavaScriptそのものについても勉強した方がいいと思います。そうすることで、ブラウザ側で動くプログラムを作ることができるようになるはずです。 ・次に、サーバサイドのプログラム(PHP、Ruby、Perl(CGI)など)の勉強してください。 Ajaxは、ブラウザとサーバとの連携がキモです。jQuery/JavaScriptは、ブラウザ側のプログラムであり、それだけではAjaxは成り立ちません。Ajaxアプリケーションを作るためには、サーバ側のプログラム作成も必要です。 ・最後に、Ajaxについて勉強。 たいていのjQuery入門書には、jQueryを使ったAjaxアプリケーションの作り方も載っているはずです。
img要素のloadイベントを監視すれば判定できるのではないでしょうか。
'(b)っていうのはコールバック関数の外ということでしょうか？ resopnseの処理のついてはコールバック関数の中で処理するようにしないといけません。 直接書くのがわかりにくければ、関数化しておいてコールバックの中から呼び出すようにすればよろしいかと。 理由は、ajaxでレスポンスを受け取るまでにタイムラグがあるので、結果を取得する前に'(b)のコードが実行される可能性が高いからです。（実行順序を冷静に考えるとわかるはず） 充分に時間がたってから'(b)を実行するようにすれば、予定の結果になる可能性はありますが、上記の方法が確実です。（alert文を入れると結果的に時間調整の役割を果たします）
こんにちは。 質問する際はどのようにうまくいかないかを記入すると回答が付きやすいと思いますよ。 (何に対してうまく行かないのか回答者はわからないです) で、サンプル作ってみました。 これをベースにして自分のものに反映してみてください。 <html> <head> <title>プルダウン内容に応じてラジオボタンをオンオフ</title> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $().ready ( function() { // id-c1のchangeに以下の動作を設定 $('#id-c1').change (function() { $('#id-c1 option:selected').each(function() { // 選択されている値を取得 if ( $(this).val() == "0" ) { // 0の場合はr1クラスのラジオにdisabledを追加 $('.r1').attr ( 'disabled', 'disabled' ); } else { // 0以外の場合はr1クラスのラジオのdisabledを削除 $('.r1').removeAttr ( 'disabled', 'disabled' ); } }); }).change(); }); </script> </head> <body> <select name="c1" id="id-c1"> <option value="0">無効</option> <option value="1">有効</option> </select> <br> <input type="radio" name="r1" value="1" class="r1">1 <input type="radio" name="r1" value="2" class="r1">2 <br> <input type="radio" name="r2" value="4" class="r2">3 <input type="radio" name="r2" value="3" class="r2">4 </body> </html>
それだけ計算ができているのなら、 　小計1 + 小計2 + 小計3 + 小計4 + 小計5 = 合計値(spanタグ) でいいのではないの？ もっとも、わざわざ合計ボタンを押させなくても、各小計を計算するときに 1～5まで入力されていたら自動的に合計も計算してあげるほうがよさ そうに思えるのは私だけかなぁ。
$("input[name=nr]:checked").val(); で、いないがチェックされている場合は0、いるがチェックされている場合は1が取得できます。
ドキュメントを見る限り、「Ajaxを利用しローカルファイルにアクセス」とは何の関係も無いオプションのようですよ。勘違いでは？
jQueryは専門じゃないんで、具体的なアドバイスはできませんが。 地道な方法は、ChangeLogやReleaseNoteを追い掛けること、そして、新旧のマニュアルを読み比べることです。 とはいえ、すでのバージョンに開きがありすぎて大変です。 そこで、エラーメッセージを確認します。どこでエラーになっているのか、そこで使われてる関数等をヒントに調べれば、多少は楽になります。 あとは、今はとりあえず旧バージョンのことは忘れて、現行バージョンの勉強をすることです。 ある程度習得できた、と思ったら、旧バージョンのものを「自作したけどどっかに間違いがあって動かないスクリプト」だと考えて、動くようにデバグするつもりで修正しましょう。デバグの勉強にもなります。
tableですよ。 firebugとかのデバッグツール使えばすぐ見れます。 なんなら画面のソース出せば見れます。
#1～#3です。 ＞緯度・経度を取得するロジックを検討いたします #1の回答から、何度も触れているように、google mapは緯度・経度を軸に作成されていると思われます。 それなので、イベントを取得すれば、そのまま緯度・経度を取得できるようになっています。 http://code.google.com/intl/ja/apis/maps/documen … もう一度、最初から順にゆっくり読み直していただければ、私の言いたいことが通じるかもしれません。
そのライブラリだと、他にもサムネイルを表示するボタンがあったり、ボタンでダイレクトに表示画像を選べたりするみたいなので、ご指定の矢印を消すだけでご希望に沿うのか疑問ですが… ご提示のサイトにドキュメンテーションがありますし、APIがあるのである程度ユーザ側でも制御可能みたい。 http://buildinternet.com/project/supersized/docs … 1枚目が表示されたときだけ左側の矢印を表示しないというロジックにすればよさそう。 ご指定の矢印にはid="prevslide"のidが設定されているみたいなので… var arrow = $("#prevslide"); var init = theme._init; var after = theme.afterAnimation; //　初期設定（非表示） theme._init = function(){ 　init(); 　arrow.hide(); } //　画像切替わり時（表示/非表示） theme.afterAnimation = function(){ 　after(); 　if(vars.current_slide)arrow.show(); else arrow.hide(); } とすれば、とりあえず矢印の制御は可能みたいですが、上述の理由で後ろの画像を先に見ることも可能のような気がします。 順にスライドするだけでよいのであれば、もっと簡単なライブラリを利用するか、あるいはjQuery利用ならシンプルなものを作ってしまったほうが確実ではないでしょうか？
使用条件がよくわかってませんけれど、 ＞ただ<name1><name2><name3>　とタグ名がバラバラなんです。 読込む対象は全て同じxmlに固定されていると考えてよいのですよね？ ＞htmlのどこかに、id="1"と入れて、idが1の時は、<name1>の要素を取得し、～ ＞ちなみのhtmlのbodyタグ自体がテンプレートでできているので、 ＞idをどこかにふるとしたら、head内とかになるのしょうか？ スクリプト部分はファイルごとに違う設定が可能なのでしょうか？ そうであれば、読込む部分は関数にしておいて 　getAjax("name1"); とか　getAjax("name2"); のように指定したい部分だけを、それぞれのhtml内に記載して呼び出すようにしておけばよいのではないでしょうか。 （残りの部分は共通にしておいて、html内にでも外部ファイルにでも…） あるいは、その部分も書き分けるのが嫌なのであれば、urlのファイル名部分とタグ名の対応表を用意しておいて、参照したいタグ名を求められるようにすれば、共通のスクリプトにすることも可能かと。 例えば 　var loc = window.location.href.match(/\/([^/]+)\.html$/); 　var name = loc?{"a":"name1", "b":"name2", "c":"name3"}[loc[1]]:null; 　alert(name); 　//（対応がない場合はundefined又はnull） みたいな方法で。 …あ！（↑）特段 jqueryにはなってませんけど。
> 何故か、東京電力のCSVはダメで、東北電力のCSVは大丈夫です。 HTTPのレスポンスヘッダを確認してみたところ、 東京電力は Content-Type に charset の指定がありませんでした。 一方、東北電力は charset=shift_jis になっていました。 東京電力 Content-Type: text/plain 東北電力 Content-Type: text/plain; charset=shift_jis charset が明示されていないものだから、 実際は SJIS なのにブラウザが UTF-8 とみなして 文字化けしている状況ではないかと思います。 東京電力に意見・要望を送り、東北電力と同じに してもらうのはどうでしょうか。
環境に依ると思いますが可能です。 例えば、以下のPHPのスクリプトは60秒間動作しますが、ブラウザ側で読み込みを中止（×をクリックする等）すると、すぐに停止します。（test.txtの更新が止まる事で確認できます。） <?php $fp = fopen('test.txt', 'w'); for ($i = 0; $i < 60; $i++) { @fwrite($fp, 'A'); sleep(1); print("\n"); } fclose($fp); ?> Apacheは、レスポンス時にクライアントとの接続が中断されていると、当該プロセスを終了させる、という動作をするためです。 スクリプト内の“print("\n");”で定期的に出力させているのはそのためです。この“print("\n");”が無い場合は、ブラウザ側の読み込みを中止しても60秒間動作し続けます。（text.txtの更新が60bytesになるまで止まりません。） ecaihさんが実現したい“abort()を実行させた時に、サーバー側の処理まで中断”についても、同様の方法で実現できると思います。 私が実際に行っているのは、Comet処理用のサーバ側スクリプトにて、サーバ側でのイベント発生を待つ間は定期的に改行"\n"を出力しています。改行であれば、JSONコンテンツへの影響が無いためです。 また、PHPでは試す事ができておりませんが、サーバ側の処理中断時に何らかの終了処理をさせたければPIPEシグナルを捕捉する事で実現できるかもしれません。Apacheがプロセスを終了させる際、当該プロセスにPIPEシグナルを発生させるためです。 ※私の環境ではpcntl_signalが使えなかったため試せませんでしたが、本関数によりSIGPIPEを捕捉する事で試してみてください。
よくわかっていないので、回答になっていませんが… ＞ある程度の制御はできているのですが、 どのような方法で実現しているのか不明なので、わかりませんが、 その制御を行なっている方法で拡張していくのが良さそうに思いますけれど？ それとも、機能に限界があってその方法では無理とかなのでしょうか？ ＞その場合、言語はやはりJavaScriptになるのでしょうか？ 現在の機能の実現方法が不明なのでわかりませんが、もしjavascriptで行なっているのならその延長でよいのでは？ たまたま、先日見つけたスプレッドシート（？）の多機能版。 機能が複雑すぎてまったくわかってませんけれど、かなりのことができていそう… http://www.treegrid.com/treegrid/www/ …でも、エクセルが目標なら、そのままエクセルを使っちゃうというのは無しなのでしょうか？
HTML要素とインプット要素はそれぞれ以下のように取得できます。 var html = $("#text2_1").html(); var value = $("#text2_2"").val(); なので、以下のようにすれば書き換わるはずです。 $("#text1_1").html($("#text2_1").html()); $("#text1_2").val($("#text2_2").val()); $("#text1_3").val($("#text2_3").val()); $("#text2_1").html(""); $("#text2_2").val(""); $("#text2_3").val("");
jQueryでinputのvalue値を変更する場合は、 $("#text2").html("変更後２"); ではなく、 $("#text2").val("変更後２"); です。
そのままでテストできないので、方法のみですが… result.feed.entries[]の配列をpublishedDateをキーにしてソートしてしまえばよさそう。 そのあとはご提示のコードと同じように最初から処理していって、日付が変わったら（日付）を出力し、各エントリの最後に付けるのは（時間、分）だけというふうにして、ループを回せばよさそう。 配列のソートは https://developer.mozilla.org/ja/Core_JavaScript … sortではcompareFunctionが設定できるので、 　function(a,b){ return a.publishedDate - b.publishedDate } みたいなことで並べ替えが可能かと思います。
まずあなたがやりたいことをするためには 郵便号を入れたら希望の住所一覧が出るデーターベースを作成しなければ行けません 全国やるとなると大変ですよ ソース参照とか言ってる状態ではどうしようもないですね
>質問１ 質問の回答の前に余談を。 サンプルソースを書く前に display: none visibility: hidden の挙動を検索しました。 ですが、詳しく書いているページが見つからなくて、不可視にした際に、画像を読み込んでくれるのか、読まないのかわかりませんでした。 そこで、ログ出力するPHPを作って、<div>に背景画像として作ったPHPを入れ、display: noneをした時にログ保存されるかどうかを実験しました。 結果、IE8、FireFoxはOKでした。 Operaを試した時に、ログ保存されませんでした。つまり背景画像にアクセスしていない。 ここでdisplay: noneの検証は終了 次に同じようにvisibility: hiddenを検証。 全てのブラウザでログ保存されたことから、visibility: hiddenの場合は不可視にしても中身を読み込んでいることが確認できました。 だから、今回は、display: noneではなく、visibility: hiddenを使っています。 質問１を解決する前に質問２をまず答えます。 >質問２ $("#nav").find("a").each(function(){ で<div id="nav"></div>内にあるAタグを抽出し、それらのAタグをfunction(){}に入れて（ループして）います。 if(this.rel == thisbg){return true;} は、デフォルトのIDだったらすでに指定されているので処理をしないで次に回しています。 $('<div />', { からの記載は、まず、'<div />'で空要素のDIVを生成しています。 と同時にIDやCSSを付与し、#wrapperの中に放り込む作業をしています。 つまり、手作業でHTMLに書き出したことをJavaScriptでやらせているわけです。 背景画像変えたくなったら<a>タグだけ追加とか変えるとかすればいいので便利でしょ＾＾ >質問３ ブログとかで<br />とかってしているの見たことないです？ <img （省略） />とか。 HTMLは詳しくないので、自信ないですが、タグは開始されたら閉じるものですよね。 それを同時にするのが />かと＾＾ つまり、<div></div> と同じ役割というところですね。 開始されてないのに、</div>にしたらおかしいでしょ。 >再び質問１ 質問２と質問３の項目でimg1と同じようにimg2,img3も生成されたことはわかりましたね？ $(function(){ 省略 }); の処理が終わった時点で、#wrapper下には <div id="img1"></div> とともに <div id="img2"></div> <div id="img3"></div> が自動で生成されているわけです。 だから、img1のようにimg2とかimg3を手作業で設定する必要はありません。 通常のタグをHTMLとして書き出した時に、visibility: hiddenとしても、要素内を取得してくれるわけですから、新たに要素を追加した場合でも設定されている背景画像は読み込まれる（と思います） ここまでは検証してないですが＾＾； まあ、背景画像切り替え時にタイムラグがあるとしたら読み込んでない可能性があるので、言って下さい。 もう一度検証してみますので。 うまく読み込んでいるとは思うんですけどね。
ライブラリについては知りませんが、回答がないみたいなので… サムネイルと拡大画像の名前などに規則性があるのかないのか、キャプション表示があるのかないのかやthickboxでグルーピングをするのかなどによって方法が変わってくるとは思いますが… thickboxは基本的にリンク要素のhrefに拡大画像のアドレスを指定して、class="thickbox"を設定しておけば処理してくれるみたいです。 （グループ表示するのだと、rel属性の設定を使い分けるとかが必要） http://jquery.com/demo/thickbox/ なので、簡単なのはjCarouselだけのときのHTMLソースが ◆（1） <ul class="carousel"> 　<li><img alt="" src="A_s.jpg"></li> 　<li><img alt="" src="B_s.jpg"></li> 　<li><img alt="" src="C_s.jpg"></li> 　　　　・・・・・・・・・ </ul> だとすれば、 ◆（2） <ul class="carousel"> 　<li><a href="A_m.jpg" class="thickbox"><img alt="" src="A_s.jpg"></a></li> 　<li><a href="B_m.jpg" class="thickbox"><img alt="" src="B_s.jpg"></a></li> 　<li><a href="C_m.jpg" class="thickbox"><img alt="" src="C_s.jpg"></a></li> 　　　　・・・・・・・・・ </ul> のようにしておくだけで、個別に（拡大表示だけの）thickboxが適用可能となるようです。 このようなソースでも、jCarouselはそのまま処理してくれるので一番簡単かも。 ＞商品のシリーズごとに同一のHTMLに複数表示させたいのですが ＞やり方がわかりません。 jCarouselを複数設定するのはセレクタで複数の要素をセットするか、あるいは、オプションなどが異なる場合は分けてそれぞれ設定すれば良いだけのようです。 ご提示のサイトの「Static Examples」の一番下に、複数設置の例がでています。 http://sorgalla.com/projects/jcarousel/ サムネイルと拡大画像に規則性があるような場合（上例のような場合）は、スクリプトで◆（1）のソースHTMLから◆（2）のソースに自動変換することができるでしょう。 上の例で言えば 　$(".carousel li img").each(function(){ 　　var src = this.src.replace(/_s.jpg$/,"_m.jpg"); 　　$(this).wrap('<a href="' + src + '" class="thickbox"></a>'); 　}); のような方法で可能です。 jCarouselの設定の後でも大丈夫とは思いますが、jCarouselはいろいろHTMLの構造をいじっているみたいなので、先に変換しておいたほうが無難かも。 サムネイルと拡大画像に関連性がないものをスクリプトで設定したいのであれば、ご提示のスクリプトのように配列でデータを用意しておいて、同じように設定してゆくことになるかと思いますが、メンテナンスを考えると、変更があるたびにHTMLとスクリプトの両方を変更しなればならないので面倒ですね。 また、別々に設定されているので、要素の数が合わないときを考慮した処理なども作成しておく必要がありますので、あまりお勧めとは思えません。 （自由度は一番高いかも知れませんが…）
OnPreRenderはイベントではありません。 PreRenderイベントの記述 Private Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreRender
コードは見ていませんが、よくあるのが（$関数などの）コンフリクトです。 jquery側にそれを避ける機能があるので、それを試してみるのも一法かと。 ＜参考サイト＞ http://semooh.jp/jquery/api/core/jQuery.noConfli … http://semooh.jp/jquery/api/core/jQuery.noConfli …
>ANo.3 すみません、ダブルクォーテーションとシングルクォーテーションの対応が間違ってますが、 適宜調整して下さい。
詳しく見てませんけど、lightalbum.phpの52行目 $output .= '<div class="section fade">' . '<a href="' . $album[$num]["img_path"] . '/' . $large . '" rel="lightbox[hreview]" title="' . $large . '"><img src="' . $album[$num]["img_path"] . '/' . $thumb . '" /></a></div>'; が、lightbox用のリンク要素を生成してるところみたいですね。ここの 　title="' . $large . '～　がキャプションのセットになります。 $largeだと、その前の $large = str_replace($thumb_disc, $large_disc, $thumb); で、画像のファイル名自体がセットされているので、 その画像ファイル名をもとに、fread()でテキストファイルのフォルダーから該当するテキストファイルの中身を読み込んで、$captionにでもいったん格納して、 　title="' . $caption . '～ としたらどうでしょう。 ※ページロード完了後javascript側で、テキストファイルを再度AJAXして取り込み、 title属性を書き換えるの技もありますが、そもそもPHPでページ生成してるんだから 動的にテキストの内容が変わっていくんじゃないから、AJAXの必要性が無いですね。
手前味噌ですが、日本語のデータもパース出来るCSVパーサを書いています。 http://vird2002.s8.xrea.com/javascript/rfc4180.h … https://gist.github.com/606500 RFC4180 はCSVフォーマットを規定していますが、日本語には対応していません。 日本語を含むCSVフォーマットは公的な規定が存在しない(少なくとも私は知りません)ので、独自の解釈が必要だと思います。 http://www.ietf.org/rfc/rfc4180.txt
　外部のテキストファイルをAJAXで読み込みたいんですよね。そのファイルの選択の条件が書いてないんで、適当にやってます。 　↓のサンプルではクリックした<dt>のテキストからその<dd>用の外部のテキストファイルのurlを勝手に作ってます。 <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery", "1.5");</script> <script type="text/javascript"> $(function(){ 　$("dd:not(:first)").css("display","none") 　$("dt:first").addClass("selected"); 　$("dl dt").click(function(){ 　　 var url = "./" + $(this).text() + ".html"; 　　 $("+dd",this).load(url,acordion($(this))); 　 }).mouseover(function(){$(this).addClass("over"); 　 }).mouseout(function(){$(this).removeClass("over"); 　}); 　 　$("dt:first").click(); 　function acordion(target){ 　 if($("+dd",target).css("display")=="none"){ 　　 $("dd").slideUp("slow"); 　　 $("+dd",target).slideDown("slow"); 　　 $("dt").removeClass("selected"); 　　 target.addClass("selected"); 　 } 　} }); </script> <dl> <dt>Step.1</dt><dd></dd> <dt>Step.2</dt><dd></dd> <dt>Step.3</dt><dd></dd> </dl> ./Step.1.htmlの中身はとりあえず、 <p>Lorem ...（中略）... venenatis.</p> ．．．．．．
試してませんが… 英語はよくわかりませんが、ご提示のセッティング部分のコメントにあるように ＞$('.acc_container').hide(); //Hide/close all containers 『class="acc_container"の要素を全て非表示にする』 ＞$('.acc_trigger:first').addClass('active').next().show();　 ＞//Add "active" class to first trigger, then show/open the immediate next container 『最初のclass="acc_triger"に"active"クラスを追加し、直後にあるコンテナ（container）を開く（表示する）』 となっているのではないでしょうか？ firstの代わりに、eq(2)としてあげることで3番目（最初のindex値が0）の要素が開いたりしませんか？ （確認していませんのであしからず）
よくわかりませんが… 1）mglistを配列で定義しているけれど、対象の画像は全てHTMLソース内に 　あるみたいなので、不要ではないでしょうか？ 2）変数selectを乱数で発生させているけれど、最初の一回だけなので、「表示する 　画像」をランダムに選択していることにはならないのでは？ 3）変数t0にはタグの文字列が入るけれど、jqueryのセレクタにはならないのでは？ 　（そもそも、selectもt0も固定で変化しないみたいだし） 4）画像要素の順序を移動しているみたいですが、表示する画像は1個だけなので 　順序を移動しなくても良さそうに思えますが？ 　（半透明状態だと、前後どちらにあっても透過して見える） setIntervalにはしていませんが（←最初の処理にタイムラグが出るので）、こんなのでは？ （全角空白は半角に） $(function(){ 　var elm = $(".fadein"); 　elm.children("img").hide(); 　(function(){ 　　var img = elm.children("img:hidden"); 　　elm.children("img:not(hidden)").fadeOut(); 　　$(img.get(Math.floor(Math.random() * img.length))).fadeIn(); 　　var id = setTimeout(arguments.callee, 3000);　　 　})(); });
>メッセージ: ']' がありません。 このメッセージからの推測ですが。 配列の最後の要素が ,（コンマ）で終わってる場合、 スクリプトエラーを出すものと出さないものがありますが、それじゃないでしょうか。 var a=[1,2,3]; // 全てのブラウザで動作する var a=[1,2,3,]; //ブラウザ独自拡張でエラーと見なさないものがある 配列の定義を見直してみてください。
>loadを並列で実行したとしてもそれはキューにたまるだけであり、通信自体はシリアルで行われているのかなという気もしてきました。 $.load()ではなく、No.1で書かれているように$.ajax()を直接呼び出してみるとどうでしょうか。 （引数の指定の仕方などが変わるようです） 手元にあるver.1.42のコードを読んでみると、戻り値がXHRオブジェクトのようですので、場合によってはXHRオブジェクトを直接操作して、動作確認できるかもしれません。 （別途タイマーを用意して、XHRオブジェクトのreadystateが2や3（通信中）になってるかどうかなど） なお、複数のリクエストを同時に行うこと自体は可能です。 私は自作ライブラリを使用していますが、4～8個（この個数はブラウザの設定による）まで、同時リクエストが可能です。 私からの情報はこの辺りまでですね。 $.ajax()で作成したXHRオブジェクトを直接.open()や.send()するなどの方法もあるでしょうけど、 そこまで行くとライブラリを使うメリットが無くなるかもです。
フォームのactionに指定したサーバー側のプログラムが、生成したサブネールのURLを返すような仕組みが別途必要ですが、ちゃんと準備してありますか？ こいつ↓とくみあわせれば、楽しいかも.. http://img.simpleapi.net/
urlで指定するサイト名、ファイル名の拡張子は全く関係ありません。 HTTPでGETを送信する時URLの？の後ろにパラメータを渡します。 サーバー側プログラム（それが、JAVAなのかPHPなのかPerlなのか...etcはクライアント側は解りません。WebサーバーがURLによって呼び出すプログラムを選びます）がパラメータを読んで、パラメータで振り分け処理して、要求されるデータを生成して、json型式なり、htmlなりで返しているわけです）
＞ネットで探してみたのですが、見つからず ご提示のサイトには、立派なDocumentationがありますよ。 私は英語がわからないため、関係ありそうな最低限だけ斜め読みなので、正しい方法かどうかわかりませんが、とりあえず連続3ヶ月を表示する例を。 きちんとした実装方法については、当該サイトを御自身で御確認ください。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <link rel='stylesheet' type='text/css' href='js/fullcalendar/fullcalendar.css'> <style type="text/css"> #calender { width:960px; } #calender .tabs { width:300px; height:300px; float:left; padding:10px; } </style> <script type="text/javascript" src="js/jquery-1.4.2.min.js"></script> <script type="text/javascript" src="js/fullcalendar/fullcalendar.js"></script> <script type="text/javascript"> <!-- $(function(){ var dt = new Date(); $("#calender .tabs").each(function(){ $(this).fullCalendar({ header:{left:'', center:'title', right:''}, year:dt.getFullYear(), month:dt.getMonth() }); dt.setMonth(dt.getMonth() + 1); }); }); //--> </script> </head> <body> <div id="calender"> <div class="tabs"></div> <div class="tabs"></div> <div class="tabs"></div> </div> </body> </html>
やはり、オリジナルのドキュメント・リファレンスを見るのが確実と思います。 http://code.google.com/intl/ja/apis/feed/v1/devg … それ以外でも「google feed」で検索すればいろいろ見つかります http://ascii.jp/elem/000/000/407/407910/ http://www.ajaxtower.jp/googleajaxfeed/ http://weboook.blog22.fc2.com/blog-entry-35.html http://blog.d-spica.com/entry/071016feed.html
>>HTML側には特別な要素を加えずに出来る方法 ※詳しく中身を検証する気はないですが、 矢印画像も含め、方向をごそっと入れ替えたsuperfish.cssを、もう一組作り、 そのCSS中のクラス名sf-menuとかをsf-menu-Rとかに全部書き換えておいて、sf-menu-R を使うsuperfish.jsをコピーして、もう一組superfishR作って、中身を全部書き換えて、 $("ul.sf-menu").superfish(); $("ul.sf-menu-R").superfishR(); とか、あっHTMLもやっぱしそのままじゃなくて、ちょっとなおさなきゃ！ 無理やり禁断のテーブルレイアウト（酷い） <table><tbody><tr> <td> <ul class"sf-menu"> <li> .... <li> </ul> </td><td> <ul class"sf-menu-R"> <li> <li> </ul></td> </tr></tbody></table>
#1です。 ＞必要事項が全て含まれているチュートリアルやサンプルサイトをご存知でしたら どこまで何をご存知かわかりませんが（私もたいして知らないけど）、#1で紹介したjqueryのdocumentationにjquery関連は全て含まれていると思います。でも、その前にjavascriptをある程度理解しないと…　さらにその前に、HTMLとCSSを… となってしまうので、必要そうな情報をぐぐってみてください。 （私も、webだけで覚えました → だからよくわかってない… ??） どのようなソースで、どのような実装をしたいのかまったくわかりませんので、ごく簡単な原理のみのサンプルを… bg_layerが擬似背景のdivで、このdivの背景を対象の背景と仮定しています。 実際のコンテンツを背景の前に表示するために、contentはposition:absoluteで表示させています。（ｚ-indexでもよいかも） wrapperの背景のほうを対象としてbg_layerをマスクにするようにしても、ほぼ同様の処理でいけると思います。 画像を入替えたりフェードアウトするライブラリはいろいろ作成されていますので、そういったものを利用するのもありだと思いますが、まったくそのままで使えるものはなさそうに思われますので、作成するにしろ修正するにしろ、スクリプトに関する知識が必要になることでしょう。 （サンプルなので、ごく簡単にしてあります。） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1.5.0");</script> <style type="text/css"> #wrapper { width: 500px; height:500px; position:relative; } .content { padding:30px; position:absolute; } .bg_layer { width:100%; height:100%; background-image:url(A.jpg); } </style> <script type="text/javascript"> <!-- $(function(){ 　$("#buttons input").click(function(){ 　　var val = this.value, layer = $("#wrapper .bg_layer:not(:animated)"); 　　layer.fadeOut(800, function(){ 　　　layer.css("backgroundImage", "url("+val+")").fadeIn(800); 　　}); 　}); }); //--> </script> </head> <body> <div id="wrapper"> <div class="content"> <p> コンテンツのテスト文字列 </p> <p> これは<a href="#hoge">テストリンク</a>です。 </p> </div> <div class="bg_layer"></div> </div> <div id="buttons" style="margin-top:20px;"> <input type="button" value="B.jpg"> <input type="button" value="C.jpg"> </div> </body> </html>
>１番目は http://www.sky.sannet.ne.jp/masapine/java_gazou. … のようなものですが >これはAjaxですか？ Ajaxではないです
地図が表示されない原因は、DTD宣言やxhtmlとは関係ないと思います。 御提示のままのコードで、HTML5でも、HTML4にちょこっと直しても表示されません。 表示されない原因は、 <div id="map_canvas" style="width:100%; height:100%"></div> だけで、地図表示サイズの幅と縦を決められないからです。 サンプルサイトの様に、head部にCSS定義 <style type="text/css"> html { height: 100% } body { height: 100%; margin: 0px; padding: 0px } #map_canvas { height: 100% } </style> を加えてやるか、明示的に <div id="map_canvas" style="width:800px; height:600px"></div> のように指定してやれば、表示されます。
既に紹介されていますが、まず、『JavaScript 第5版』ですね。 これをじっくり読むことをおすすめします。 いわゆるレシピ本をたくさんよむよりこの１冊のほうが はるかにためになります。 jQuery とかは基礎が固まってから始めたほうが良いと思います。 # Level 2 イベントの概要とか、クロージャとかが # しっかり分かってないと jQuery を使いこなすのは # 難しいと思います。
$("body").removeClass("fontL fontM fontS").addClass(className); で動作しました。 .removeClass() – jQuery API http://api.jquery.com/removeClass/ ただ、http://az-store.nrym.org/download/extend/jquery- … にはライセンスの記載がなく、改変可能かわからないので、作者さんに連絡を取ってみてください。 ここのURLを渡して改変許可をもらうのが筋だと思います。 # http://az-store.nrym.org/ の連絡フォームやTwitter http://twitter.com/sakatori で連絡が取れそうです。
引数が文字列ということは理解されてますか。 href属性は文字列ですよね。 ＞var href = $("ul.tab li a.selected").attr("href"); そしてその前後もダブルクォートで囲われているので文字列です。 ＞var e = "ul.panel li:not(" + href + ")"; ＞＋を書かずにhrefだけではダメなのでしょうか？ var str = "AAA" + "BBB"; alert(str); こう書けば、その結果は"AAABBB"になります。 "AAA" "BBB"と書けば、構文エラーが出ますね。 プログラム（インタプリタ）は、「二つの連続した文字列をどう処理したらいいかわからない」からです。 そこで+演算子を書いて、「この二つの文字列は連結してください」と伝えます。 実行部分の動作はほぼ合っていると思います（変数eはただの文字列ですが…。セレクターに渡すことで初めてオブジェクトになります $(e)）。
韓国のGoogleMapがまだ、ルート検索に対応して無いからだと思います。 GoogleMapで、日本のルート検索にしても出来るようになったのは、昨年のいつかからだったような、それまでは米国しかできなかった。 ※韓国や中国については、国防上の理由で、海外にそのようなサービスを提供しないと思います。
Webでグラフィック描画なら、IEのVMLとか、SVGを「Adobe® SVG Viewer」で表示とかがあるけど、いまさらって感じなので、HTML5のCANVAS使うか、あるいはflashとかの他のオブジェクトを使うほうがかえって楽だと思う。 http://www.w3.org/TR/1998/NOTE-VML-19980513 http://seoi.net/vector/base_index.shtml http://www.adobe.com/jp/svg/viewer/install/ http://www.html5.jp/canvas/what.html
意味がよくわかりません。 &amp;に変換されて困る理由を、もう少し補足してください。 それから、「ajaxで返すURL」の意味も不明確です。 　AJAXリクエストのレスポンステキストの中身の事ですか、 それとも送信するデータの事ですか？
#4です。 ＞1)移動中はリンクをクリックできないようにする クリックしてもをキャンセルするという意味ですよね？ そのあたりはオリジナルのままなのでキャンセルされるはず…　と思って見直してみたら、クリックされたら以降の処理に関係なくtargetの座標を書換えちゃってくれるようになってますねぇ。 動作中だったら　setScrollを実行する必要はないので、setScroll()の最初に 　if (scrolling) return; を追加すればご質問のようになります。（そのほうが無駄な処理もなくなるし） ＞2)移動中にリンクをクリックした際は、そちらへ移動するようにかわる こちらの仕様のほうがリーズナブルかもしれませんね。 クリックされたら、スクロール中の処理を中断して新しいスクロールを始めるようにすれば良いのですが、オリジナルの骨格を利用しているので、修正箇所が分散します。 ついでに、移動速度が速いほうが良いらしいので（#3の補足を見て）、easingFuncも書換えてみました。（係数変えただけですけど） （早いブラウザだとあまり効果が感じられなくなってしまいましたが…） #4にも書いたように、この部分の関数を帰ることで動きの種類を変えることが可能になっています。⊿pを返す形式にしてしまったのでバウンスなどはできませんが、intervalや必要時間を変えられるようにして、タイマーと変化量の関係の関数にすれば、バウンドさせたりとかいろいろな移動形式を可能にできます。 （1）最初のほうの 　var scrolling = false;　→　var scrolling = null; （2） setScrollの終わりのほうの4行 　if(!scrolling){ 　　scrolling = true; 　　scroll(); 　} の部分を 　　scroll(); の1行に置換え (3) 入替えたscroll()部分を以下に再度入替え function scroll(){ 　if (scrolling) clearInterval(scrolling); //追加 　var startX = d.documentElement.scrollLeft||d.body.scrollLeft; 　var startY = d.documentElement.scrollTop||d.body.scrollTop; 　var deltaX = targetX - startX; 　var deltaY = targetY - startY; 　var progress = 0; 　var limit = 0.9995; 　scrolling = setInterval(function(){ //修正 　　progress += easingFunc(progress); 　　var x = startX + progress * deltaX; 　　var y = startY + progress * deltaY; 　　if(progress > limit) { 　　　scrollTo(targetX, targetY); //終了処理部分を書換え 　　　location.hash = targetHash; 　　　clearInterval(scrolling); 　　　scrolling = null; 　　}else{ 　　　scrollTo(parseInt(x), parseInt(y)); } }, interval); } function easingFunc(p) { // Sample4 var a = 1/3, r = p<0.5?p:(1-p); return Math.max(r * a, 0.008); } (1）～(3）の修正をすればご質問のようになりますが、速度を速くしたので移動中に正しくクリックするのが難しそう。 （動作確認は速度を遅くしてやりました）
呼び出し元関数の実行が完了した後にコールバック関数が実行されるという認識で間違いないでしょうか？ ＝＞普通、コールバック関数とはそおいう物ですから、間違った認識じゃ無いです。 以前、実行順序は保証されないという記述を見たのですが、 ＝＞それは、おそらく、ある一つの事象（イベントとか機能）に対して、別の関数で複数のコールバック関数が指定されてる場合、それらのコールバック関数の実行順序は保障されないっていう意味だと思います。 　順序を保障したければ、コールバック関数の中でさらに次に実行したい関数を実行するようにチェーンしていきます。チェーンがループにならないように注意しないと、メモリーリークの原因になります。
どうせ前の質問で、「scrollsmoothly.js」改造してるんだから、 ついでに、場当たり的にいじっちゃえば、 「scrollsmoothly.js」のfunction init(){}の最後 48行目あたりに、 　　 function init(){ 　　　 // ページ内リンクにイベントを設定する 　　　 setOnClickHandler(); 　　　 // 外部からページ内リンク付きで呼び出された場合 　　　 if(incomingHash){ 　　　　 if(window.attachEvent && !window.opera){ 　　　　　 // IEの場合はちょっと待ってからスクロール 　　　　　 setTimeout(function(){scrollTo(0,0);setScroll('#'+incomingHash);},50); 　　　　 }else{ 　　　　　 // IE以外はそのままGO 　　　　　 scrollTo(0, 0); 　　　　　 setScroll('#'+incomingHash); 　　　　 } 　　　 } //ここに追加か、------------------------------ setScroll("#section5"); setTimeout(function(){setScroll("#section1");},1000); //1秒後に移動 　　 } このスクリプトをもっと汎用的にクラス化したいところだけど、あまり弄ると別物になっちゃう。
scrollsmoothly.jsのソースコードの function scroll(){}内にある location.hash = targetHash; を↓のようにコメントアウトするだけです。 　　 function scroll(){ 　　　 var currentX = d.documentElement.scrollLeft||d.body.scrollLeft; 　　　 var currentY = d.documentElement.scrollTop||d.body.scrollTop; 　　　 var vx = (targetX - currentX) * easing; 　　　 var vy = (targetY - currentY) * easing; 　　　 var nextX = currentX + vx; 　　　 var nextY = currentY + vy; 　　　 if((Math.abs(vx) < 1 && Math.abs(vy) < 1) 　　　　 || (prevX === currentX && prevY === currentY)){ 　　　　 // 目標座標付近に到達していたら終了 　　　　 scrollTo(targetX, targetY); 　　　　 scrolling = false; 　　　　 //location.hash = targetHash; 　　　　 prevX = prevY = null; 　　　　 return; 　　　 }else{ 　　　　 // 繰り返し 　　　　 scrollTo(parseInt(nextX), parseInt(nextY)); 　　　　 prevX = currentX; 　　　　 prevY = currentY; 　　　　 setTimeout(function(){scroll()},interval); 　　　 } 　　 }
切り替え機能はどのようなPG？ ＝＞これはよくあるTABメニューってやつですね。 別にjQueryでなくてもいいですけど、例として 「jQuery UI Tabs」 http://jqueryui.com/demos/tabs/ 「jQuery Tools Tabs」 http://flowplayer.org/tools/tabs/index.html tabがクリックされたタイミングで、そのタグのコンテンツを AJAXでニュースカテゴリー毎にリクエストして書き換えて あげればよいですね。 ニュース検索はGoogle提供のAPIを使うとか↓ http://code.google.com/intl/ja/apis/newssearch/v … http://code.google.com/intl/ja/apis/newssearch/v …
ちらっと見ただけですが、sendmail.phpの中で、 $toに、固定で送信元のアドレスを持たせ、 何箇所かで $reheader="From: $to\nReply-To: ".$to."　～ をメールヘッダーのFromとReply-To:にセットしてます。 この部分の$toを、投稿者様が入力したメールアドレス$_POST['email'] に変えてやればよいと思います。 テスト・検証したわけではありません。改造はご自身の責任でやってください。 へたに間違えると、誰かにメールがいっぱい届いて、トラブルになりかねません。 ※配布元のページに、 「ウェブサイトの企画・立案や構築にたずさわっています。 AjaxMailのご感想やお仕事の依頼などあればどうぞ」 ってあるので、問い合わせてみるのが確実です。
すでに表示されているから、フェードインしないだけだと思いますけど。 それに、p:not(:animated)　の意図が不明です。 素直に、 <img class="top1" src="img/S_topimg1.jpg"> <div id="mainimg"> <p id="fadeIn">a<img src="img/topimg1.jpg" width="539px" height="343px"></p> $(function(){ $("img.top1").mouseover(function(){ $("#mainimg img").hide(); $("#mainimg img").attr("src","img/topimg1.jpg"); $("#mainimg img").fadeIn("slow"); }); }) じゃだめなの。 あるいは$.toggle()を使うとか．．．
　質問タイトルについては、すでに回答がなされてますが、『Googleドキュメント』 のような～を実現するためには、Ajax通信の部分よりむしろ、文章入力を支援する 機能とか、あるフォーマット（例えばHTML）整形する機能等を備えた入力フォーム 部分を準備したり、XHR(XmlHttpRequest)のレスポンス（XML又はテキスト）から DB登録内容に沿って、文章レイアウトを復元して表示させる仕組みを作るのが たいへんそうです。 　CKエディターみたいな出来合いのWYSIWYGエディターを組み込んで、入力文章はHTML に整形して、それをXHRで送信（本来XHRはXMLを送受信する物）して、DBにそのまま 登録、DBから読みだしたHTMLもXHRでそのまま受信して、DOMでページ内に追加・更新 してやれば、『Googleドキュメント』っぽいのが作れると思います。 http://ckeditor.com/demo
サーバーサイドのプログラムでも、あるいはお手軽にjavascriptからでも Google提供の「Picasa Web Albums Data API」を使えば、Picasaの登録情報 をクエリー(検索)して、フィード（RSS2.0)/or JSON型式）が取得できます。 http://code.google.com/intl/ja/apis/picasaweb/do … リファレンス http://code.google.com/intl/ja/apis/gdata/docs/2 … こっちの知識も必要（GoogleDataAPI） http://code.google.com/intl/ja/apis/gdata/docs/d … あと、当然、html、javascript、DOM の最低限の知識も必要ですが、 ちょっと古いけど、だれかの初心者向けの解説ページも見つけました（無保証） http://www.goodpic.com/mt/archives2/2007/07/gdat …
xmlReq.open("GET","main.php?isbn="+encodeURI(data1)+"&XXXXX="+encodeURI(data2),true);
今のところ、プッシュ型はまだほとんど実装されていない。 どうしても必要な場合は、何ちゃってプッシュの Comet を利用するか、定期的に問い合わせるしかない。
もし、shinjin_08さん の言うような処理が行われているとしたらモジュールが古いのかもしれません CGIモジュールは世界中の人が使っているはずなので、なんらかの対応がなされているはずです モジュールのバージョンを最新のにしたらいいような気もします。 >先輩に相談したところ、できるだけサーバのモジュールはいじりたくないとのことです。 そのとおりです！！ いじる=モジュールを書き換える なんてのは絶対にしてはいけないことですよ オーバーライドという方法があります。 先に呼び出した関数と同じ名前の関数を後からつくるとオーバーライドしたことになります モジュール名::関数名　もしくは　$モジュール名::変数名 が正式な関数名ですので、この方法も選択肢の一つになると思います。 このほかにも、やり方はいろいろあります。 他のコードとのからみやサーバ権限の問題もあるでしょうから　とりあえずここまでにしときますね そ・れ・と 質問のタイトル　質問内容がわかりやすいようにしたほうが　後の方のためにもなると思いますよー
　Google Chromeでも出来た。しかし 何故か、Google Chrome Ver 7.0.517.41 だと、↓　しないと、 うまくいかない。謎だ！ 　　 case "dragend": 　　　if(dt.dropEffect=="move") 　　　 var target_table = target.parentNode; //Chrome で変数に渡せないなぜだ！ 　　　 var idx = target.rowIndex; //Chrome で変数に渡せないなぜだ！ 　　　 if(this.rowspan==0){ 　　　　target.parentNode.deleteRow(target.rowIndex); 　　　 }else { 　　　　for(var i=this.rowspan-1;i>=0;i--){ 　　　　 target.parentNode.deleteRow(target.rowIndex+i); 　　　　} 　　　 } 　　 return; それから、 　dt.setData("text/html" ～ 　dt.getData("text/html" ～ じゃなくて、こおいった時は本来 　dt.setData("text/plain" ～ 　dt.getData("text/plain" ～ か。 さらに、 　arguments.callee(tr.nextElementSibling); は、関係無いところまで検査してしまっている。まあ、いいかっと。
目的はなんだろう？ そもそも、AJAXはおろか、Javascriptもいらないじゃないか．．． <meta http-equiv="refresh" content="300"> SEOはよく知らんけど..
参考サイトのメニューの記述の構成（UL→LI→A→text(orIMG)）はとてもよく見かける一般的な構成だと思いますが、これをわざわざ変えなければならない必然的な理由でもあるのでしょうか？ まぁ、変えるのはご自由ですが、変えたところに応じてスクリプトも修正しないと、当然ながら動作しません。 要素を変えるだけなら要素の変更プラスα程度で済むでしょうけれど、文章構造を変えるならスクリプトの構造も変えなければならない可能性が高いです。 ご提示の（作成中の）サンプルでは、どこがメニューにあたるのか分かりかねますし、インプット要素（ラジオボタン）がメニュー？？ なさりたいことと、参考サイトの内容がどれだけ似ているかも想像がつかないのでなんとも言えませんが、参考サイトは 　・jquery　（javasciript用の基本ライブラリ） 　・jquery.easing　（アニメーションなどに効果をつけるプラグイン） 　・jquery.cookie　（クッキーを扱うプラグイン） を利用しているみたいです。 スクリプトのソースを見ると詳しくコメントが記載されているようですので、解説も不要と思いますが、その中でご自分のやりたいことと使用するHTMLの構成に応じて、不要な部分をはずし、必要な部分は修正を行えばよいことになります。 No1様も既にご指摘ですが、スクリプトだけでなく、CSSに関しても同様のことが言えます。 やりたいこととサンプルが似ていない場合は、結果的には全部入れ替えになってしまうのかも・・・
どちらもjquery（javascript）を利用しているみたいですね。 どのようにしたいのか不明ですが、例えば最初のほうならformを画面上部に配置しておいて、全体をスクロールダウンしてくればよいのでは？ 後者の例ではform部分だけをスクロールダウンすればOK。 Ajaxは表示内容を外部から取得したり、ユーザの入力値をサーバに送信したりする際に利用するものなので、直接は関係ないかも。 ごく簡易な似たものの例（jqueryは使用していません） CONTACTをクリックで表示/非表示がスクロールでトグルします。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body { position:relative; top:0px; } #navi { height:30px; } #navi ul { list-style:none; padding:0; margin:0; } #navi li { display:block; width:9em; padding:10px; float:left; border:1px solid #ddd; text-align:center; cursor:pointer; } #form form { height:100px; padding:10px; line-height:1.8em; position:absolute; top:-200px; } #form ul { list-style:none; } #form li span { display:inline-block; width:9em; } #form li input { width:10em; } </style> <script type="text/javascript"> <!-- var sample = function() { var bdy = document.getElementsByTagName("body")[0]; if (!this.dir) this.dir = -4; if (this.id) clearTimeout(this.id); this.dir = -this.dir; sample.scroll(bdy, this.dir, 200); } sample.scroll = function(e, d, m) { var t = (e.currentStyle)? e.currentStyle["top"]: getComputedStyle?document.defaultView.getComputedStyle(e, '').getPropertyValue("top"): null; t = parseInt(t); (function() { t += d; t = t>m?m:t<0?0:t; e.style.top = t + "px"; if (t>0 && t<m) this.id = setTimeout(arguments.callee, 20); })(); } //--> </script> </head> <body> <div> <ul id="navi"> <li>A</li> <li>B</li> <li>C</li> <li onclick="sample()">CONTACT</li> </ul> </div> <div id="form"> <form> <ul> <li style="font-weight:bold;">title of form</li> <li><span>title for box 1</span> <input type="text" name="i1"></li> <li><span>title for box 2</span> <input type="text" name="i1"></li> <li><span>title for box 3</span> <input type="text" name="i1"></li> </ul> </form> </div> </body> </html>
補足、 ajax.start:でブロックしたんじゃ使い道がないですね。 クリック時点でブロックして、ajax成功したらアンブロックしましょう。 ※（全角空白は半角空白に変えてください） <body> <form id="sub_form"> <input name="parm1" value="hoge"> <input name="parm2" value="fuga"> <input id="run" type="button" value="検索開始"> </form> <div id="result"></div> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery", "1.4");</script> <script type="text/javascript" src="/jslib/jquery.blockUI.js"></script> <script type="text/javascript"> $(function(){ 　$('#run').click(function() { 　$.blockUI({ message: '<h1>お待ちください...</h1>' }); 　 $.ajax({type:"POST",url:"cgi-bin/search.cgi",cache:false, 　 data:$("#sub_form").serialize(), 　 success:function(data){ 　　 $.unblockUI(); 　 $("#result").html(data); 　 } 　 }); 　}); }); </script> </body>
これはどういうことなのでしょうか？ ＝＝＞まさに、perl実行環境が無いからですよ。メッセージから察するに Windowsパソコンですよね。まずperlが動くようにしないとだめです。 さらにこのperlプログラムを実行するためには　 strict、utf8、Encode、lib、JSON といったパールライブラリー（モジュール）も必用です。 初心者には、なかなか、てごわいかも。 Windowsパソコンでperlをやるには、大昔はCygwinというUNIXのAPIをWindowsのAPIで エミュレーションする環境を入れた上、GNU PeralとかGCCとか本物を動かしたので すが、 今時は、ActivePerlというWindowsのソフトパッケージがあるので、 インストールは簡単なようです。 http://pocketstudio.jp/win/activeperl/ 案ずるより生むが易しといいます。ご健闘を．．． 解らなかったら、ここじゃなくperlのカテゴリーに質問した方がよいでしょう。
「Google API Ajax slideshow」だめですね。 APIのドキュメントも中途半端だから、こいつはあきらめて、 とりあえず、画像リストを生成するところまで作ってみた。 後は、このリストから、携帯用のスライドショーが出来る ライブラリーを探して、実装すればいいかなと思うけど、 iphon持ってないので、これ以上はやめた。 <!DOCTYPE html> <html lang="ja"> <head> <meta charset="UTF-8"> <title>TwitPic スライドショー</title> <style type="text/css"> </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("feeds","1");</script> <script type="text/javascript"> function GetImg(frm){ 　var feedUrl = "http://twitpic.com/photos/"+frm.account.value+"/ … 　var feed = new google.feeds.Feed(feedUrl); 　feed.load(function(result){ 　 if(!result.error){ 　　 var container = document.getElementById("container"); 　　 while(container.hasChildNodes()) 　　　container.removeChild(container.firstChild); 　　 var ul = document.createElement("ul"); 　　 ul.style.listStyleType = 'none'; 　　 for(var i=0;i<result.feed.entries.length;i++){ 　　　var div = document.createElement("div"); 　　　div.innerHTML=result.feed.entries[i].content; 　　　var img=div.getElementsByTagName("img")[0]; 　　　var imgtitle=div.textContent; 　　　img.setAttribute("title",imgtitle); 　　　img.setAttribute("alt",imgtitle); 　　　var li = document.createElement("li"); 　　　li.appendChild(img); 　　　ul.appendChild(li); 　　 } 　　 container.appendChild(ul); 　 } 　//SlideShow(); 　}); } </script> </head> <body> <h3>TwitPicの画像をスライドショーする</h3> <p>Google Ajax Feed API で RSSを取得し、Google Slide Show APIで表示</p> <form> Twitter ID:<input type="text" id="account" name="account"> <button type="button" onclick="GetImg(this.form);">表示</button> </form> <hr> <div id="container">Loading...</div> </body> </html>
最近のブラウザは、Ajaxを使用した場合に再読込すると最後に表示した状態を維持するようになっていると思います。 （キャッシュコントロールや、スクリプトの実装方法など、いくつかの要因があるようです。） > 思うのですが、Ajaxを無数に行った後の画面を更新してもAjaxを行った結果が表示されるようにするには、どのようにするのでしょうか？ history管理で行けると思います。 location.hashにAjaxで読み込む情報を追記していったり、 <iframe>の内容を書き換えることで、 リロード時にそのhashやiframeの内容から表示する内容を判断し、必要なデータをAjaxで読み直す、と言う方法が一般的です。 （一般的と言っても、結構複雑ですが。あまりに複雑なので、誰もやらなくなったという、、、） 以下、hashによる管理方法の例です。 index.htmlを表示 -> Ajaxでpage1を読み込み => index.html#page1 -> Ajaxでpage2を読み込み => index.html#page2 再読み込みやブックマークしたあとで再アクセスした時に、 window.onloadでlocation.hashを確認しpage1やpage2のデータを読み込むと、Ajaxで読み込んだ状態を再現できます。 この方法は、いわゆるF5ならこれで問題はありませんが、 ブックマークの時にハッシュの値を消してURLを登録すると、読み込み時に各pageがロードされないという欠点があります。 使ったことはありませんが。。。 http://code.google.com/p/reallysimplehistory/ Ajax環境で、ブラウザの閲覧履歴（history)を管理するライブラリです。 他のAjaxライブラリと併用できるかどうかは不明です。 「ajax history」で検索すると、historyの実装方法などを具体的に解説されているサイトがいくつか出てきます。
No.1の回答無視して下さい。 jQueryはもっとおりこうのはずです。 dataType: "html"　で返される形式はTEXTでした。 XMLやXHTMLじゃありません。 $.html(html) で生成されるjQueryオブジェクトはimportNodeする必要は無い はずです。 よって、原因は他にあると思います。
「このテキストボックスが属すフォームはこの登録画面全体の フォームの中に入れられない（ネストできない）」 と、ありますが、そのテキストボックスを別フォームにする必要は ないと思うんですが、AJAXしているという事はJavascript使用を 前提で作ってるんですよね、それなら <form> <select></select> 追加項目<input type="text" id='addOpt'> <input type="button" onclick="OptionAdd();"　value="オプションを追加"> <input type="submit" value="送信"> </form> として、 function OptionAdd(){ var addOpt=encodeURIComponent(document.getElementById("addOpt").value); //Ajax処理で、addOptのみ送信してセレクトボックスの中身を最新の状態にする } とすればどうでしょう。 最初から、追加項目のテキストボックスと追加ボタンを見せるのがいやなら、 CSSで、そこを非表示{display:none}にしておいて、別のボタンのクリックか 最初のオプションの一番下にでも<option value="add">追加</option>を入れ といてaddが選ばれたら、追加項目のテキストボックスと追加ボタンを表示す る仕組みをjavascriptで書くとか
どっちでもよかったですね。すんません 他に気づいた点 ×　map.panTo(marker1, 9); ○　map.panTo(marker1.getLatLng(),9); ×　var marker1 = new GMarker(new GLatLng(shopdata[1],shopdata[2]), markerIcon1); ○　var marker1 = new GMarker(new GLatLng(parseFloat(shopdata[1]),parseFloat(shopdata[2])), markerIcon1); それから、提示されてないけど <div id="gmap"></div> は、サイズ指定してあるんですよね。 指定してないなら、 var map = new GMap2(document.getElementById("gmap"),{size:new GSize(640,480)}); とか 後は、情報不足なので、わかりません。 上記を直したら、ちゃんと出来ました。 （全体像が不明なので、いちぶロジックはしょりましたが）
単純系でテストしても再現出来ません。 $(document).ready(function(){ $('#search').load('/recvtest.php?keyword=歯', null, function(){}); //$('#search').load('/php/recvtestG.php','keyword=歯', function(){}); //こっちもOK }); （recvtest.php） <?php print_r($_GET); ?> ちゃんと Array ( [keyword] => 歯 ) ＜＝＝<div id="search"></div>の中身 '歯'となります。（'会社'でも） 　jQueryは1.4です。 　HTMLはUTF-8です。 　PHPは5.2です。 ※PHP側で、 mbstring.internal_encoding mbstring.http_input mbstring.http_output とか、DB使用しているならそのデフォルトの文字コードとか、 headerで文字コード指定してないかとか、 javascript側のコールバック関数で何かやってないか？ とか確認してみればどうでしょう。 $.load()だとうまくいってるのかどうか、確認しにくいので、 とりあえず、 $.ajax()の方を使って原因を探って見ては．．．．
No1様の回答と同じですが、 　slideUp([speed], [callback]) のcallbackで、「文章の書き換え」と「slideDown」も記載してみてください。 　http://semooh.jp/jquery/api/effects/slideUp/%5Bs …
「Adobe Dreamweaver」だけでは、できません。 マイクロソフトのASP.NET環境を構築する必要があります。 これは、サーバーにアップする物ではなく、あなたがサーバーで、 Webサービスを提供する環境を準備するのです。 　マイクロソフト　Visual Studio　Web開発関連のソフトが必用です 環境自体自体は、いろいろなバージョンやパッケージがありますが、 機能限定版ならマイクロソフトから無償でダウンロード できるバージョンもあったはず（今はどうなってるのかよくしらん）。 ↓からできますが、環境作るだけでも手ごわそうですよ。挑戦しますか！ http://www.asp.net/downloads
#1です。 ＞どのように取得して、どのように呼び出したらいいか ＞アドバイスいただけませんでしょうか アドバイスできるような柄ではありませんが… ラジオボタンのチェックの状況はその要素のchecked属性で取得/設定が可能です。 単純に各要素の設定状況（true　falese　false…）みたいなのを記録しておくか、どうせ選択されるものは一つだけ（または0個）なので、その番号を記録しておくなどすれば再現が可能だと思われます。 ごく簡単な取得/設定の例を作成してみました。 取得は、選択されたものの順番と各設定状況を、設定は番号によってセットする例です。 簡単な入力チェックなども入っているので、実際にはもっと短くまとめられるはずです。 （全角空白は半角にしてください） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> <!-- function get() { var elm = document.getElementById("form1").elements; var i=0, e, c=0, result = ""; while (e=elm[i++]) { 　if (e.type == "radio") { 　　result += (result?", ":"") + e.checked; 　　c++; 　　if (e.checked) result = "No" + c + " : " + result; 　} } document.getElementById("text1").value = result; } function set() { var n = document.getElementById("text2").value; var elm = document.getElementById("form1").elements; var i, c=0; if (isNaN(n = parseInt(n))) { 　alert("数字を入力"); return; } for (i=0; i<elm.length; i++) { 　if (elm[i].type == "radio") { 　　if ((++c) == n) elm[i].checked = true; 　} } } //--> </script> </head> <body> <form id="form1"> <input type="radio" name="test">ラジオ1 <input type="radio" name="test">ラジオ2 <input type="radio" name="test">ラジオ3 <form> <hr> <p> <input id="text1" type="text" value="" style="width:12em;"> <input type="button" value="選択ボタンを表示" onclick="get()"><br> <input id="text2" type="text" value=""> <input type="button" value="番号によりラジオボタンをセット" onclick="set()"> </p> </body> </html>
さらに、以下のパターン全部OKみたいでした。 data:{"data":textTweet} data:{data:textTweet} data:"data="+textTweet data:textTweet
せっかくのAJAXなんだから、非同期にしちゃだめなんですか。 たぶん sendRequest(xmlhttp, "POST", "test.php", true, null, getResult); じゃないかと....
一人一人ちがうIDとPASSを割り振ることは可能なのでしょうか？ ==>.htaccessのBasic認証で、もちろん可能ですよ。 ↓に解りやすく、説明されてまさが、まったくわかりませんか？ http://www.shtml.jp/htaccess/basic.html
こんばんは。 例えばですが・・・、 マイページの「質問履歴」と「回答履歴」がありますよね？ 最初は「質問履歴」が表示されると思います。 この時に非同期で「回答履歴」を取得して、いつでも表示できるように準備しておきます。 こうする事で、現行のように「回答履歴」をクリックしてから、暫く（かなり？）待つという事がなくなります。 ここで説明されている、同期、非同期とは、そのレベルの話です。
入力フォームの名前を変更すればOKです。 例：1個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip1_1" size="10" maxlength="8"> － <input type="text" name="zip1_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip1_1','addr1','addr1','zip1_2');"><br> ご住所：　<input type="text" name="addr1" size="60"><br> </form> 例：２個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip2_1" size="10" maxlength="8"> － <input type="text" name="zip2_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip2_1','addr2','addr2','zip2_2');"><br> ご住所：　<input type="text" name="addr2" size="60"><br> </form> 例：３個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip3_1" size="10" maxlength="8"> － <input type="text" name="zip3_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip3_1','addr3','addr3','zip3_2');"><br> ご住所：　<input type="text" name="addr3" size="60"><br> </form>
Please show me the present source code. Is jqgrid jQuery jqGrid? jQuery jqGrid doesn't use iframe. jqGrid http://www.trirand.com/blog/
こんなのしか思いつきませんでした。 <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript"> google.load("prototype","1.6.0.3"); </script> <script type="text/javascript"> google.load("prototype","1.6.0.3"); var url = "/index.htm"; var result=[]; new Ajax.Request(url,{"method":"get",asynchronous:false, 　onComplete:function(request){ 　//var doc = document.implementation.createDocument('http://www.w3.org/1999/xhtml','html',null); 　var div=document.createElement("div"); 　doc.innerHTML=request.responseText; 　var links=doc.getElementsByTagName("a"); 　for(var i=0;i<links.length;i++) 　 result.push(links[i].href); 　} }); </script>
POST で渡す方法として、Ajaxを教えてもらったのではないのでしょうか？ 質問がループしているようで、現状がよく分かりません…。 下記URLで似たような質問があります。参考になるかもしれません。 プルダウンの切り替えに関して | OKWave http://okwave.jp/qa/q6065270.html # 前質問は締め切ったようですね。お礼なしなので、回答者への通知メールは来ませんでしたが。
cssでul.menu ulを下記の通り書き換え。 position:relative; ↓ position:absolute; 以下追加。 z-index:2;
古い質問で、いまさら回答にはなっていないかもしれませんが、 こちらFireFoxでプレビュー中同じ問題に直面しております。 この質問を読んで、IEで試したところ問題なくパスできました。 解決策にはならないかもですが、firefoxでは読み込むファイルと、読み込ませるファイルを同階層におけば一応問題はパスできます。
html() でも replaceWith() でもサーバとの通信は発生しないようですが…。 ------- <div id="Test">test1</div> <p>test2</p> <p>test3</p> <p>test4</p> <p>test5</p> <script type="text/javascript"><!-- jQuery('#Test').html('html'); jQuery('p').replaceWith('<p style="color: green;">replaceWith</p>'); //--></script> ------- html(val) - jQuery 日本語リファレンス http://semooh.jp/jquery/api/attributes/html/val/ replaceWith(content) - jQuery 日本語リファレンス http://semooh.jp/jquery/api/manipulation/replace … 通信が発生するのはAjax関連のAPIであって、html(), replaceWith() は直接関係していないと思います。 Ajax - jQuery 日本語リファレンス http://semooh.jp/jquery/api/ajax/
どうしてAJAXカテゴリなのか分かりませんが、 $ df | grep "[ 1][890][0-9]% " ではどうでしょうか。 それとも、行全体ではなくて使用率の数字だけを取り出したいのでしょうか。
jqueryはよく知りませんが… :lastは要素集合の最後（選択されたもののうち最後の一つ）を意味するので、ご質問文のような動作になります。 これに対して、:last-childは要素集合のうち「親要素の最後の子要素」の集合を意味しますので、 　$("ul li:not(:last-child)").css("～","～"); のように記述すれば、目的に合った指定になるのではないでしょうか？
閲覧履歴とキャッシュデータは別物ですよ。 閲覧履歴を消す消さないは自由ですが、キャッシュデータを消して下さい。 キャッシュを使わずに強制再読込をするようにすれば、キャッシュデータが残っていても再読込が可能になります。 他人が作ったAjaxライブラリを使っているなら、そのライブラリのドキュメントの指示に従って、強制再読込するようにして下さい。 （AJaxライブラリによっては強制再読込のオプションがないものがあります。その場合は他のライブラリを使用して下さい） Ajaxライブラリを自作されているのであれば、開発者向けの解説サイトなどを検索して実装して下さい。 URLにダミーデータを付加するのが簡単だと思います。 > そもそもAjaxのキャッシュってどこですか？ ブラウザによって保存場所が異なります。 以下はWindows IEの場合です ツールメニュー -> インターネットオプション -> 全般タブ -> 閲覧履歴の「設定」ボタン押下 -> インターネット一時ファイルの「ファイルを表示」ボタン押下
jQueryだけで簡単にできます。 <ul id="menu"> <li id="menu_home"><a href="/index.html">HOME</a></li> <li id="menu_1"><a href="menu_1/foo.html">MENU_1</a></li> <li id="menu_2"><a href="/JQtest8.htm">MENU_2</a></li> <li id="menu_3"><a href="menu_3/com.html">MENU_3</a></li> </ul> に対して $(function(){ $("#menu li a").each(function(){ if($(this).attr("href")==location.pathname) $(this).toggleClass("active"); }); });
var url= './fuga/hoge.html'; があったとして、 $('ロード先セレクター').load( url +' ' + '取り込み元セレクター' ); でいいんじゃない。
普通に画像の部分をa要素でマーク付けするだけで大丈夫みたいですね。 ダウンロードして解凍したDemoフォルダのindex.htmlでいうとこんな感じになると思います。 変更前 <ul id="pictures"> <li><img src="../Source/images/cities/melbourne.jpg" alt="Melbourne" title="Melbourne" /></li> <li><img src="../Source/images/cities/buenos_aires.jpg" alt="Buenos Aires" title="Buenos Aires" /></li> <li><img src="../Source/images/cities/urubamba.jpg" alt="Urubamba" title="Urubamba" /></li> <li><img src="../Source/images/cities/london.jpg" alt="London" title="London" /></li> <li><img src="../Source/images/cities/venice.jpg" alt="Venice" title="Venice" /></li> <li><img src="../Source/images/cities/paris.jpg" alt="Paris" title="Paris" /></li> <li><img src="../Source/images/cities/osaka.jpg" alt="Osaka" title="Osaka" /></li> </ul> 変更後 <ul id="pictures"> <li><a href="http://example.com"><img src="../Source/images/cities/melbourne.jpg" alt="Melbourne" title="Melbourne" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/buenos_aires.jpg" alt="Buenos Aires" title="Buenos Aires" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/urubamba.jpg" alt="Urubamba" title="Urubamba" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/london.jpg" alt="London" title="London" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/venice.jpg" alt="Venice" title="Venice" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/paris.jpg" alt="Paris" title="Paris" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/osaka.jpg" alt="Osaka" title="Osaka" /></a></li> </ul>
すみません、HTMLの構造をちょっと見間違えてました。 --- <div class="thumbs"> <h1>ギャラリータイトル</h1> <p> <a href="images/img2-lg.jpg" title="タイトル 2"> <img src="images/img2-thumb.jpg" /> </a> (略) </p> <p><img class="largeImage" src="images/img1-lg.jpg" alt="タイトル 1" /></p> </div> --- こんな感じにしてください。 要は、「サムネイル画像のa要素」と「拡大表示のimg要素」の両方が入った 「同じ構造のdiv」の1組をセレクタで指定できる名前付けが必要になるということです。
$.get("aaa.jsp",{test:"200"}, function(data){alert("Data Loaded: " + data);}); でも同じかな？
とりあえずの参考まで。 （文字数制限があるのでかなり省略＆つめてます） 画像はボーダーで代用。バーの移動速度の変化は省略。 jqueryを利用すればもっと簡単にできます。 <html> <style> ul#navi {list-style-type:none;margin:0;padding:0;position:relative;height:100px;overflow:hidden;} ul#navi li {width:100px;font-weight:bold;text-align:center;float:left;} ul#navi li a {text-decoration:none;color:#000;display:block;width:100%;height:2em;} ul#navi li div {width:100%;height:1px; _height:4px;overflow:hidden;border-top:1px solid #666;border-bottom:1px solid #eee;background-color:#bbb;} ul#navi li#marker {position:absolute;top:2em;left:0px;} ul#navi li#marker div {margin-top:-1px;border-top:1px solid #8be;border-bottom:1px solid #24e;background-color:#48e;} </style> <body> <ul id="navi"> <li><a href="">TEXT1</a></li> <li><a href="">Text2</a></li> <li><a href="">TEXT3</a></li> <li><a href="">Text4</a></li> <li><a href="">TEXT5</a></li> <li id="marker"></li> </ul> <script type="text/javascript"><!-- //@cc_on @set @v=(@_jscript_version<=5.8) (function(nid,pos){ var nav=document.getElementById(nid); var e,i=0,elm=nav.getElementsByTagName("li"); var mark,start,cnt=0,d=document.createElement("div"); d.innerHTML=" "; while(e=elm[i++]){ e.appendChild(d.cloneNode(true)),cnt++; if(e.id=="marker"){mark=e; cnt--;} if(cnt==pos)start=e; } if(!mark||!start)return; start=start.offsetLeft; mark.style.left=start+"px"; var mover=(function(op){ var tid,p=op; return function(e){ var t=e./*@if(@v)srcElement@else@*/target/*@end@*/; if(t.nodeName!="A")return; if(tid)clearTimeout(tid); var ep= e.type=="mouseover"?t.parentNode.offsetLeft:op; var d=(ep>p),sp=d?p:ep; ep=d?ep:p,d=(d?1:-1)*8; (function R(){ p+=d,p<sp?p=sp:p>ep?p=ep:tid=setTimeout(R,10); document.getElementById("marker").style.left=p+"px"; })(); } })(start); nav./*@if(@v)attachEvent("on"+ @else@*/addEventListener(/*@end@*/"mouseover",mover,false); nav./*@if(@v)attachEvent("on"+ @else@*/addEventListener(/*@end@*/"mouseout",mover,false); })("navi", 4); //←id of UL, start position(0 start) //--></script>
未検証ですが… n番目のカテゴリだけ開いておきたいのであれば、当該部分を 　if (index != n) $this.next().hide(); などとしておけば、初期状態はn番目（0スタート）だけが開いたものとなります。 ただし、ページ遷移時にこれが実行できるようにnを受け渡してあげなければなりません。 その方法として 　1）呼び出されたページ側にnを記載しておく（フレームなどを使用していない条件） 　2）リンク時にロケーション・ハッシュ（/ccc.htmlI#XYZ の#XYZの部分）を利用して受け渡す 　3）クッキーを利用して受け渡す。 などが考えられますが、1）が一番簡単かと思われます。
私やyyr446さんの環境で正常動作していて、figaro22さんの環境では正常動作しない。 考えられる理由は、3つあります。 1. 実はソースがオリジナルと全く同じではなかった http://www.kawa.net/works/ajax/ajaxzip2/ajaxzip2 … のページでは正常に動作するか、確かめてみてください。 2. figaro22さんのクライアントPCにインストールされているブラウザに不備(設定ミス等)がある ブラウザのバージョン、アドオンなどを疑ってみてください。 アドオンは全て停止し、JavaScript設定が有効になっているかどうか。 3. ブラウザでProxyを通していて、Proxyが悪さしている 各種ブラウザのProxy設定を確認して、Proxy設定があれば、ダイレクト接続するようにしてみてください。 とりあえず、OSとブラウザのバージョン情報を開示されるといいかなと。
jsontoxmlでググってみると、サンプルコードやjQueryプラグインなどがありそうです。 http://www.google.com/webhp?hl=en#hl=en&source=h …
QueryのloadメソッドはHTMLを読み込み、DOMに挿入するものです。 XMLの読み込みは$.ajax、$.get、$.postで行い、XMLのノード取得には、 セレクターにXpath表現が使用できます（最新のjQueryにする事！） ↓で、できませんか $.get("http://server.com/hoge.xml",function(xmldata){ $("#my1").append($("//aaa",$(this))); });
「JSONP」について誤解されているようです。 JSONPでは、「JSONP形式」で記述された「JavaScriptプログラム」を通してデータを読み込みます。 JSONPでは、「SCRIPTタグによるJavaScriptプログラムの読み込みはクロスドメインができる」ことを利用して「別サーバに置いてあるデータをを読み込む」ことを実現しますので、 JSONPで読み込めるのはあくまで「JavaScriptプログラム」に限られます。 「ただのHTML」をクロスドメインで読み込むことはできません。
縮尺表記じゃないけど、スケールは map.addControl(new GScaleControl(),new GControlPosition(G_ANCHOR_BOTTOM_RIGHT, new GSize(10,15))); で表示できますよ。
> 回答ありがとうございます。 > 恥ずかしながらソースがこんな感じになってます。 (以下略) それなら、私が挙げたコードがほぼそのまま使えると思います。 アクセスする要素のクラス名を質問者さんのHTML表記にあわせると、 class="navi_mainbox" のひとまとまりを処理単位として、 ---ここから $(function(){ $(".navi_mainbox").each(function(index, elem) { $(".navi a", $(elem)).click(function(){ $(".navi_box img", $(elem)).attr("src",$(this).attr("href")); return false; }); }); }); ---ここまで となります。 処理内容を説明すると、 $(".navi_mainbox").each…: class=navi_mainboxなdiv要素それぞれについて以下の処理を行います。以下、対象のdiv要素は$(elem)でアクセスできる。 $(".navi a", $(elem)).click…: $(elem)要素の下の .navi a 要素に対し、click event を設定 $(".navi_box img", $(elem)).attr…: $(elem)要素の下の .navi_box img 要素に対し、hrefを書き換え という流れになります。 そもそも、他に用途がないなら、idを個別に割り振る必要すらありません。 jQuery からはclassを通したアクセスで処理できます。 あと、誤動作を防ぐためには、処理対象の img や a 要素にclassを割り振った方がいいかと思います。 $(function(){ $(".navi_mainbox").each(function(index, elem) { $("a.navi_source", $(elem)).click(function(){ $("img.navi_target", $(elem)).attr("src",$(this).attr("href")); return false; }); }); }); (略) <img class="navi_target" src="job/052/00000.jpg" alt="サンプルページ01" width="310" height="220" /></div> (略) <li class="navi_img"><a class="navi_source" href="job/052/00000.jpg"><img src="job/052/aaaa.jpg" alt="サンプルページ02" width="100" height="70" /></a></li> (以下略) って感じで。
一瞬の間にロードされるから、そのように見えるのではないかと．． $().ajaxStop($.unblockUI);は $("#item").load("./xxx.php #item" , function(){ $.unblockUI(); }); のコールバック関数での$.unblockUI();とだぶってます。 どちらかを消すべきです。
キーワード：cookie プログラム：jQuery cookie プラグイン http://plugins.jquery.com/project/ooCookie http://plugins.jquery.com/project/Cookie ※ooCookieの方が好き
＞grepでは -oってのオプションがなさそうですが、 OSを書いてないので、てっきりLinuxだと思いましたが、違いましたか。 コマンドの仕様はOSによって違うので、OSを書かないと適切な回答は得られません。 Cシェル縛りというのも面倒ですね。もっと高機能なシェルを使えないのでしょうか？ grep -o が無いとなると、面倒ですが、文字列からabcを削除していって、何回削除が成功するか数えるか、Perl等をつかうか(これもOSによって標準で入ってないかもしれませんが)。
今となっては、IE6の検証出来ないんですが、 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> はちゃんと指定してますか（別にUTF-8じゃなくてもかまわないけど） そして、アップされているファイルは確実にその文字コードでサーバーに 保存されてますか。
jQueryの使い方というより、フォーム部品のプロパティの 基本的なお話しです。 valueじゃなくcheckedの値（trueかfalse）です。
補足： セッションとかクッキー使えば、scriptでも会話可能ですが．．．
<div>の中の<dl>に変更するのは構造的に無理です。 <dl>の中の<dt>とか<dd>なら、改造の余地がありますが、全然別物になりそうで、 最初から作った方が楽かも知れない。作ったりするぐらいなら、そもそもhtml の構造を <dl><dt></dt><dd></dd></dl>を <ul><li><div>dtの中身<div><div>ddの中身</div></li></ul> の構造に変えたほうがずっと楽でしょう。
とりあえずjQueryのサンプルです。 （cgiがperlでなくPHPで申し訳ない） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" charset="utf-8" src="/jslib/jquery-1.4.2.min.js"></script> <script type="text/javascript" charset="utf-8"> <!-- $(function(){ $("#search_name").keyup(function(){ if(!$(this).val()) return false; console.log($(this).val()); $.ajax({ type: "POST",url:"/hogehoge.php?",dataType:"json", data:{"search_name":$(this).val()}, success:function(data){ $('#person').empty(); for(var i=0;i<data.length;i++){ var option=$("<option>"); option.val(data[i]); option.text(data[i]); $('#person').append(option); } }, error:function(XMLHttpRequest,status,errorThrown){ alert(XMLHttpRequest.url + ":"+ status); } }); }); }); // --> </script> <body> <body> <form> <input id="search_name" type="text" value=""> </form> <select name="person" id="person"> <option value="秋本">秋本<option value="本田">本田<option value="寺西">寺西 <option value="寺本">寺本<option value="戸田">戸田<option value="吉岡">吉岡 </select> </body> </html> cgi(PHP)側のサンプル <?php header("Content-type:text/javascript"); mb_language("japanese"); mb_internal_encoding("UTF-8"); mb_http_output("UTF-8"); if(isset($_POST['search_name'])){ /* ここにDB検索処理を記述 「$_POST['search_name']をキーにして読み込んだデータを 配列変数$dataに格納する。」 */ $data= array("寺西","寺本"); //テスト用サンプル echo json_encode($data); } ?>
ブラウザー側のキャッシュを使わせないためには、 リクエストヘッダーで制御するのが正当でしょうが、 urlの後ろに、日付けと時間等で作るユニークなゴミパラメーターを ダミーで加える手段もあります。
再現できないんですよねえ。 val[1]とval[2]に任意の長さの文字列をセットして $('select#name).prepend('<option value="' + val[1] + '">' + val[2] + '</option>'); してもちゃんと、最大の幅に自動拡張されます。 もしかして、 <select id="name">　</select> が同じidで複数あるのですか？ あるいは、<select>の親とか、CSS定義とかで、widthを 指定しているところがあるのでしょうか
perlは余り詳しくないのですが、テキストでしか受け渡しはできないはずです。 配列変数はシリアライズして受け取った側がもとに戻すといったような処理 が必用です。 JSON形式というのを使えば楽です。 perlにもきっと、配列とかオブジェクトをJSON形式の テキストストリングにするライブラリーがあるはずです。 javascriptの方も取得したJSON形式テキストをオブジェクトに する機能をたいていのajaxライブラリーは持ってます。 AJAX JSONP　で検索されると、いろいろでてくるでしょう。
不可解です。 （確認） 「テストでAlertを使って試したら、tcdテキストボックスの名前も入力データも取得できています。」 ＝＞どこにAlertを入れてみたのですか？ function ajaxcgi(tcd) { alert(tcd.name); alert(tcd.value); alert(CGIのURL); $.get('CGIのURL', {cd: tcd.name, name: tcd.value}, cgiajax); } とかやったのですか？ コールバックの方のテスト function cgiajax(message, status) { alert(message + "\n" + "status:" + status); } は実行されないのですよねえ？ 実行できてるとしたら、messageの中身がCGIの出力で、 status:の後ろはsuccessですよねえ。
ActionScriptはあまりくわしくないのですが、 このままだと、確実にうまくいきませんね。 function flash_kick(argument) { File_Request(argument, "​http://61.197.170.205/~tobacco/htdocs/test.php");​ return req_argument; } のreturn req_argument;は同期して実行されませんよね、 同期するためには、onreadystatechange のfunction内で、 フラッシュにデータを渡す必用があります。 ExternalInterfaceクラスのaddCallbackメソッドが使えるんじゃ ないでしょうか？ import flash.external.*; ExternalInterface.addCallback("setMessage", this, showMessage); function showMessage(message) { kakunin_text_box.text = String(message); } を別に書いておいて、 http_obj.onreadystatechange = function(){ if(http_obj.readyState == 4){ document["fromJavaScript"].setMessage( http_obj.responseText); } } document["fromJavaScript"]は Flashムービーにアクセスするための名前を付けるには，Flashムービーを表示する際の二つのタグである「objectタグ」と「embedタグ」の，それぞれid属性，name属性の値だそうです？ 参考URL：http://itpro.nikkeibp.co.jp/article/COLUMN/20070 …
いろいろ方法はあると思うのですが、 一番簡単な方法は、 吹き出しの中のhtmlでイベント追加するのでなく、 javascript実行にするのです。 つまり、 <a href="#" onclick="window.open(\'./hogehoge.html\',\'moviewin\', \'width=500,height=320\');">リンク</a> と記するのでなく、 <a href="javascript:window.open('./hogehoge.html','moviewin', 'width=500,height=320');">リンク</a> みたいに、ながくなりそうなら、別functionに定義しておいて <a href="javascript:hogeopen()">リンク</a> 本体のSCRIPTの中で function hogeopen(){ window.open('./hogehoge.html','moviewin','width=500,height=320'); } のように、（引数も渡せます） どおしても、イベントを使いたかったら、DOMのイベントにバインド すればできます。
実際のところは、あなたのブログサイト（ご自身で運営してるなら話は別） の環境というか、仕組みが解らないと、答えられませんが、ブログサイトは 裏で、（CGI、PHP、ASP、ASP.NET、JSPなど）がちゃんと動いていて、 ユーザーが投稿したHTML(含むCSS/JAVASCRIPT)をちゃんと組み込んだ上で、 出力している場合がままあります。 （そのまま埋め込めたり、別のところに書くように指示されてたり．．） この場合も、jQueryは生きているかもしれませんよ。 ただ、 $(function() { $("div").html("<p>aaaaaaaaa</p>"); }); は変でしょ。ページのロードが完了した時、<div>要素の中身を全部 <p>aaaaaaaaa</p>にするという事ですよ。その時点で、 document.write('<div></div>');は、まだ実行されてないんじゃない ですか。全体のどこに書いたかにもよりますが．．．。 $(function() { alert("JQUERYだよ"); }); もだめっすか。 だとしたら、No.1さんのおっしゃるとおりです。
jQuery の each を使えば、個々のエレメントに対して操作が行えます。 あとは、質問には _off → _on しか書いてませんが、「current が無いものは _on →_off に」する必要もあると思いますので、両方あわせると、 ---ここから--- $("#localSide h2 img").each(function(index, element) { $(element).attr("src", $(element).attr("src").replace("_on", "_off")); }); $("#localSide h2 img.current").each(function(index, element) { $(element).attr("src", $(element).attr("src").replace("_off", "_on")); }); ---ここまで--- といった形になるでしょうか。これを $(this).addClass("current"); の次あたりに入れておけば、img src の切り替えができます。 ・別解 img ではなく、スタイルシートの方で画像を指定するようにしておけば、src を書き換える必要はありません。また、 img 要素ではなく h2 要素をクリックした時に切り替える、といったことも簡単に表現できます。 ---ここから--- <style> #localSide h2 span.button { background-image: url(images/menu/button_off.gif); display: inline-block; width: 20px; height: 20px; text-indent: -9999px; } #localSide h2.current span.button { background-image: url(images/menu/button_on.gif); } </style> <script><!-- $(document).ready(function() { $("#localSide h2").click(function(){ if($(this).attr("class") != "current"){ $("#localSide h2.current").removeClass("current"); $(this).addClass("current"); }else{ return false; } }); }); //--></script> (略) <div id="localSide"> <h2><span class="button">button image</span>text</h2> <h2><span class="button">button image</span>text</h2> </h2> </div> ---ここまで--- といった形になります。
AJAXをJAVASCRIPTからかけるのでなく、PHPプログラムで別のPHP等から データを取りたいなら、PHP用のAJAXライブラリーというのがあります。 （ＸＡＪＡＸ） クロスアジャックス？ http://xajaxproject.org/ これを使えば、質問者様のイメージですね
<action="#">とか<action="javascript:void(0);"> とかにしておけばどうでしょう あるいは、 <form method="post" action"hoge.html"> のままで、ｊQUERY側のイベントハンドラーの中で event.preventDefault(); event.stopPropagation(); return fales; するとか
望まれている事が今一つわかりませんが、 return false; とすれば本来の<a>要素のリンクの機能が無効になるので、リンクしないのは 当然です。何もreturnしないと<a>要素のリンク先に遷移するのも当然です。 ページの任意の場所に飛ばしたいなら、そこにアンカー<a name="hoge"></a> をふっておいて、<a href="#hoge">hogeに移動</a>で移動すればよろしいかと、 それとも本当にajax機能を使って、リンク先ページの内容を、自ページの 任意の場所に表示させたいという事ですか？ アコーディオン的なメニュー表示とは、別問題です。
可能ですが、Ajax（javascript）が直接Oracleからデータを引っ張れるわけではありません。 Ajax（javascript）からのリクエストを受けて、 Oracleへアクセスしてデータを取得し、データを加工し、 加工したデータをレスポンスとして返すという javascriptとOracleの仲介役のようなサーバサイドのコーディングも必要です。 まぁ開発環境にASPが使えるならサーバサイドはASPでコーディングすればいいかと思います。 >AjaxではXML文書を非同期にやりとりするようですが、 >やりたいことはOracleのデータを非同期にやりとりしたいです。 データ形式は決まっていません。（ただのHTTP通信ですから） XMLを使ってもいいし、使わなくてもいいです。 CSVでもテキストで独自形式で渡してもいいです。 ただ、XMLにすればレスポンスをそのままDOMとして利用できるので 扱いやすいというだけです。 複雑なデータ形式を必要としないなら 扱いやすさと冗長性の少なさから最近はJSONはよく使われますね。
詳しいことは調べていないので分かりませんが、ロードに時間がかかっているために、間隔がめちゃくちゃに見えるだけではないでしょうか？ あと、setIntervalには色々と面倒があるようなので、それもチェックしてみてください。 http://www.mapee.jp/wlh/javascriptsetinterval.html
こうでしょ！ function send(){ $.ajax({ type: "POST", url: "write.php", //下1行修正 data:{date:$("#text").val()} }); }
> メール送信できるのですが、#messageのvalue値がsendmail.phpに渡りません。 index.php の方の記述ミスを見過ごしてました。 動作チェックはしてませんが、おそらく > data : ({ message: $('#message').val()},{off:$('#exeBtn').val()}), これを > data : { message: $('#message').val(), off:$('#exeBtn').val()}, にすればいけると思います。
> なお、例えばPHPから配列データをAjaxに返す場合 > それをAjaxで参照するとなると、どのようになるのでしょうか。 Ajax では、基本的には「テキストデータ」でしかデータのやりとりは出来ません。 そのため、PHP 側で配列データをテキストデータに変換し、JavaScript側でテキストデータを配列データに戻す、といった処理が必要になります。 元々、その「テキストデータ」フォーマットとしては XML が想定されていたのですが(AjaxのX)、複雑でオーバーヘッドが大きいので、最近はJSONが使われる場合が多いです。 http://gihyo.jp/dev/feature/01/jquery-ajax/0002 PHP側については、PHP 5.2.0 以降なら、json_encode で、配列をJSON形式に変換できます。 http://php.net/manual/ja/function.json-encode.php jQuery の Ajax ライブラリは、JSON に対応していますので、 $.post の第4引数を"json"にしておけば、 PHP側でJSON形式に変換した配列データを、 JavaScript側の$.post のcallback内では、引数 data がそのまま配列としてアクセス出来るようになります。 jQueryとPHP のJSONによる受け渡し例は、 http://www.rottel.net/kuwa/44111 なんかが参考になるでしょうか。
ZOOMレベルごとににピクセル当たりの移動距離を計算するような面倒な 事をするぐらいなら、表示している地図の中心点座標（緯度・軽度）と 表示している地図の最北東点座標（緯度・軽度）を調べて、中心点を 移動させるだけでよいと思います。 サンプル（右に半分移動） function right_move(){ var map_center=map.getCenter(); var map_ne=map.getBounds().getNorthEast(); map.panTo(new GLatLng(map_center.lat(),map_ne.lng())); }
function articles(arg){ alert(arg.article[0].kind); alert(arg.article[0].no); alert(arg.article[1].kind); alert(arg.article[1].no); }
セキュリティ上の問題から、フォームに入力したファイルの データをJavaScriptからは操作できないようになっているため、 Ajax でファイルを送信することはできません。 ページ遷移なしにファイルのアップロードをしたい場合は、 iframeを使って、隠しフレームを作っておき、 フォームの target をそのフレームに設定しておく、 と言う方法が楽かと思います。 PHPではありませんが、原理については http://rubyist.g.hatena.ne.jp/yamaz/20060908 このページなんかが参考になるかと思います。
jQueryのプラグインですが「jQuery pageSlide」と言うのがありますが、 これではだめでしょうか？ http://srobbin.com/blog/jquery-pageslide/ 表示中のページが丸ごと左にスライドして、右から隠れていたコンテンツがスライドして現れます。
あまりにも質問が漠然としすぎています。 まず、あなたが店舗側なのか、ユーザーとしてアフィリエイトをやりたいのか。 Javaに関する知識がどの程度あるのか。 APIの仕組みをどの程度理解しているか。 また楽天APIはアフィリエイト用のAPIのことでいいのか。 これらがないと回答のしようがありません。
ご提示の参考urlのページがよくないのでは？ 本家「lazyload」 http://www.appelsiini.net/projects/lazyload のデモページだとfirefoxでブラウザサイズが小さくても左右ガタガタしませんけど。 http://www.appelsiini.net/projects/lazyload/enab … とか
prototype.jsは使ってないので間違ってるかもしれませんが、 window.onloadの時実行している Event.observe('targ3', 'click', handler3); はonloadの時点では、まだ存在しないのでイベントのバインドが できてないからではないでしょうか？ ajaxしてtarg3を作った後にイベント登録すればよいのではないかと function handler1() { var myajax = new Ajax.Updater( 　　　　　{success : "targetString"}, 　　　　　"test2.html", 　　　　　{evalScripts:true}); Event.observe('targ3', 'click', handler3); }
No.1です。 エラーが出たのは、若干書き間違えがあったからですが、それを 直しても、この方法じゃうまくいきませんでした。 そこで、以下のように、リンク要素とボタン要素のクリックイベントの プロパゲーションを止めてやると、TR要素に伝わらなくなり、チェックボックス にチェックがつかなくなりました。（IE7とFirefox3.5でテスト） こいつらに、本来のクリックイベントの動作をさせたい時は、 このハンドラーの中に書けばよいでしょう。 - - - - - - - - - - - - - hasChecked = false; //挿入部分 $("a").bind("click", function(event){ event.stopPropagation(); }); $("input[type='button']").bind("click", function(event){ event.stopPropagation(); }); $("button").bind("click", function(event){ event.stopPropagation(); }); //挿入終わり $(row).click(function() { - - - - - - - - - - - - -
bsn.Crossfader.js内の if (!this.aDivs[this.nAct])this.nAct = 0; の行を if (!this.aDivs[this.nAct])return false; に変更するだけです。 参考URL：http://www.brandspankingnew.net/archive/2006/09/ …
form直下に置くのは、document.getElementById()でform要素を操作してるから。 つまり、そのまま<head>内へ持っていくと、まだform 要素が存在しないことによるエラーが出ることになるでしょう。window.onload でそのスクリプト部分を実行させるとかすれば、外部jsにしても実行可能。 とはいえ、event登録は、ブラウザで記述が異なったりするので、その要素が作成し終わったところで実行するのが、ブラウザ切り分けを考えなくて楽。 さらに、form要素名の指定間違いとか、探しにくくなるから、form直下に記述するのが一番とは思う。
jqueryのリファレンスのページでselectorsの項目を見ればすぐ解ると思います。 http://docs.jquery.com/Selectors http://semooh.jp/jquery/api/selectors/ $(#hoge) です。 <div id="hoge"></div> $(function(){ $(#hoge).html("<span class='red'>Hello</span>"); });
＞ソースそのものが出てきてしまいます。 というなら、Ajax以前にhttpサーバーがperlなどのCGIを実行しない設定になってるだけでは？
イベントハンドラー処理を有効にしたり、無効にしたりするなら function handler1(e){ e.preventDefault()}).attr("href","#"); } と定義しておいて、 有効化： $("a[href]").bind("click", handler1); 　又は $("a[href]").click(handler1); 無効化： $("a[href]").unbind('click', handler1);
iconDockだと無理です。要はそのマウスオーバーした時、位置でアイコンがアニメーション敵にビューとサイズが大きくなり、マウスアウトでビューと小さくなると。その時の位置も指定したいのですよね。 iconDockを改造するより、同じくjQueryのUI 「toggleClass」 http://jqueryui.com/demos/toggleClass/ というのを使って、作った方がてっとり早いです。 「toggleClass」はDOM要素のCSSクラスをイベントでduration(スピード)指定 して切り替える事が出来ます。小さい時と大きい時のCSS定義を作っておいて マウスイン　小-＞大　のクラス切り替え マウスアウト　大-＞小　のクラス切り替え を行えば出来ると思います。 CSSは、おわかりになりますか？
<<マップ一画面が表示されていて、ストリートビューに切り替えると、グー グルマップとストリートビューの二つの画面に分かれる例>> 暇が出来たので、上記を作ってみました。ご参考にしてください。 ※黄色い人型のアイコン画像もいくつか入手しました。 http://maps.gstatic.com/intl/en_ALL/mapfiles/cb/ … からダウンロードして切り取って作りました。（本当は動的に切り取れるみたい） ※カスタムコントロール（GControl()）でストリートビュー制御用の 機能を作って、マップに追加し、黄色い人をクリックすれば、 マップとストリートビューに分かれて表示するようにしました。 もう一度クリックすると元に戻ります。この辺はDOMの操作でやってます。 ＝＝＝＝＝＝＝サンプル確認＝＝＝＝＝＝＝＝＝＝＝ ＝＝＝＝＝＝＝サンプルソース＝＝＝＝＝＝＝＝＝＝＝ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Cache-Control" content="no-cache" /> <meta http-equiv="Expires" content="0" /> <title>Google Street View</title> <style type="text/css"></style> <script type="text/javascript" charset="UTF-8" src="http://maps.google.com/maps?file=api&v=2&key=You … <script type="text/javascript" charset="utf-8"> <!-- var map=null; var stview=null; var viewclient=null; var SV_icon =null; var panorama =null; function StviewCtrl(){} StviewCtrl.prototype = new GControl(); StviewCtrl.prototype.initialize = function(map){ var container = document.getElementById("StviewButton"); var btnDiv = document.getElementById("btn"); GEvent.addDomListener(btnDiv, "mouseover", function(){ btnDiv.setAttribute("src","/MAPICON/svicon1.png"); }); btn_mouseout_hnadle=GEvent.addDomListener(btnDiv, "mouseout", function(){ btnDiv.setAttribute("src","/MAPICON/svicon.png"); }); GEvent.addDomListener(btnDiv, "click", function(){ if(!stview){ btnDiv.setAttribute("src","/MAPICON/svicon0.png"); document.getElementById("map").style.width="500px"; document.getElementById("stview").style.display="block"; map.checkResize(); stview= new GStreetviewOverlay(); viewclient = new GStreetviewClient(); panorama = new GStreetviewPanorama(document.getElementById("stview")); map.addOverlay(stview); SV_icon = new GIcon(); SV_icon.image ="/MAPICON/svmarker.png"; SV_icon.iconSize = new GSize(22,46); SV_icon.iconAnchor = new GPoint(11,46); SV_icon.infoWindowAnchor = new GPoint(11,23); var markeropts = {draggable:true,clickable:true,icon:SV_icon}; SV_marker = new GMarker(map.getCenter(),markeropts); GEvent.addListener(SV_marker, "drag", function() { SV_marker.setImage("/MAPICON/svwalk0.png"); }); GEvent.addListener(SV_marker, "dragend", function() { SV_marker.setImage("/MAPICON/svmarker.png"); viewclient.getNearestPanoramaLatLng(SV_marker.getLatLng(),function(point){ if(point){ panorama.setLocationAndPOV(point); map.panTo(point); } }); }); map.addOverlay(SV_marker); panorama.setLocationAndPOV(map.getCenter()); map_move_hnadle=GEvent.addListener(map,"move",function(){ SV_marker.setPoint(map.getCenter()); viewclient.getNearestPanoramaLatLng(SV_marker.getLatLng(),function(point){ if(point){ panorama.setLocationAndPOV(point); } }); }); }else{ GEvent.removeListener(map_move_hnadle); map.removeOverlay(SV_marker); SV_icon = null; map.removeOverlay(stview); stview = null; viewclient = null; panorama = null; document.getElementById("stview").style.display="none"; document.getElementById("map").style.width="800px"; map.checkResize(); btnDiv.setAttribute("src","/MAPICON/svicon.png"); } }); map.getContainer().appendChild(container); return container; } StviewCtrl.prototype.getDefaultPosition = function(){ return new GControlPosition(G_ANCHOR_TOP_RIGHT, new GSize(210, 2)); } function Mapload() { map = new GMap2(document.getElementById("map"),{size:new GSize(800,400)}); map.setCenter(new GLatLng(35.655, 139.744),18); map.addControl(new GMapTypeControl()); map.setMapType(G_HYBRID_MAP); map.addControl(new GLargeMapControl()); map.addControl(new GScaleControl(),new GControlPosition(G_ANCHOR_BOTTOM_RIGHT, new GSize(10,15))); map.addControl(new StviewCtrl()); } // --> </script> </head> <body onload="Mapload()" onunload="GUnload()"> <h2>Google Street Viewer</h2> <div style="position:relative; width:810px; height:410px;"> <div id="map" style="position:absolute;top:0px;left:0px;width:800px;height:400px;border:1px solid black;"></div> <div id="stview" style="position:absolute;top:0px;left:505px;width:300px;height:400px;border:1px solid black;display:none;"></div> </div> <div id="StviewButton"> <img id="btn" src="/MAPICON/svicon.png" /> </div> </body> </html>
ライブラリーを改造するぐらいなら、目的に合う別のを使った方が 良いと思いますが。自分で改造して、動きが変になっても、誰にも文句は 言えませんよ。 あえて、いじるというか追加するなら、 まず、 slideTime = window.setTimeout( "resetTabs()", 10000 ); が10秒（10000ミリ秒）待つ指定みたいだから、ここを変えれば 自動で閉じるまでの時間が変えられそう。 次にマウスオーバー＆マウスアウトで見えたり消えたりするには別途 function hoge(){ var bodyPanels = document.getElementsByClassName('panel_body') for (i = 0; i < bodyPanels.length; i++) { bodyPanels[i].hide(); } } を作って、こいつをお好きな場所のマウスオーバーのイベントで 呼んでやれば、マウスオーバーした時、開いていたpanel_body が消えるのではないかと...
IE8でもjQUERYは動作してます。（全DOC宣言で全機能を試したわけではないが） IE7からIE8へバージョンアップする時は、IE7の設定をある程度引き継ぐ みたいだが、まっさらのWIN7+IE8のセキュリティ設定オプションの初期状態 は相当厳しいのではないかと（想像）。 IE8のセキュリティオプションを確認して、無効にされているものを 有効に変えてみては。何を有効にするかは、よくわかりませんね、 IE独自の用語が多いし．．．．
ついでにもう一つサンプル。 「Yahoo!商品検索サービス」だと汎用性が低いので、 「GoogleWebサーチ」を使ったサービスをAJAXする例 http://code.google.com/intl/ja/apis/ajaxsearch/ （サンプル） <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/> <meta http-equiv="Content-Script-Type" content="text/javascript"/> <meta http-equiv="Content-Style-Type" content="text/css"/> <meta http-equiv="Cache-Control" content="no-cache"/> <meta http-equiv="Expires" content="0" /> <title>Google Search Test by Ajax</title> <style type="text/css"></style> <script type="text/javascript" charset="utf-8" src="/jslib/jquery-1.3.2.min.js"></script> <script type="text/javascript" charset="utf-8"> <!-- $(document).ready(function(){ $('#SarchForm > input:eq(1)').bind("click",function(event,start){ if(!start) start=0; var keyword=$('#SarchForm > input:eq(0)').val(); $.ajax({ type: "GET", url:"http://ajax.googleapis.com/ajax/services/search/ … data: { "q":keyword, "v":"1.0", "rsz":"large", "hl":"ja", "key":"あなたのGoogle API Key", "start":start, "safe":"off", "lr":"lang_ja" }, dataType: "jsonp", success: function(data, status){ $('#GoogleResult > dl,span').empty(); if(data.responseStatus=="200"){ if(data.responseData.cursor.pages && data.responseData.cursor.pages.length > 0){ var cursor = data.responseData.cursor; var nextguide=$(document.createElement("span")); for(var i=0;i<cursor.pages.length;i++){ var nexta =$(document.createElement("a")); nexta.attr({href:"javascript:void(0);"}); nexta.text((i+1)+"頁目"); nexta.bind("click", function(event){ event.preventDefault(); var start = cursor.pages[$(this).text().substring(0,1)-1].start; $('#SarchForm > input:eq(1)').trigger("click",start); }); nextguide.append(nexta); } nextguide.append($('<a href="'+cursor.moreResultsUrl+'" target="_blank">もっと検索</a>')); $('#GoogleResult').append(nextguide); } if(data.responseData.results && data.responseData.results.length > 0){ var results = data.responseData.results; var result=$("<dl>"); for(var i=0;i<results.length;i++){ result.append('<dt><a href="' + results[i].url + '" target="_blank">' + results[i].title + '</a></dt>' + '<dd>' + results[i].content+'</dd>'); } $('#GoogleResult').append(result); $('#GoogleResult > dl').css("margin-left","10px"); $('#GoogleResult > span > a').css({margin:"5px",color:"black",background:"#FFF"}); $('#GoogleResult > span > a:eq('+ cursor.currentPageIndex + ')').css("background","yellow"); $('#GoogleResult').append(nextguide.clone(true)); }else{ var result=$("<dl>無し</dl>"); $('#GoogleResult').append(result); return; } }else{ alert(data.responseDetails); return fales; } }, error: function(XMLHttpRequest, status, errorThrown){ alert("sss"); 　 alert(XMLHttpRequest.url + ":"+ status); } }); return false; }); $('#SarchForm > img:eq(0)').bind("click", function(event){ $('#SarchForm > input:eq(0)').val(""); $('#GoogleResult > dl,span').empty(); }); }); // --> </script> </head> <body> <div><h3>Google Web Sarch by AJAX</h3> <div id="GoogleSarchForm"></div> <div id="SarchForm"> <input type="text" value="" size="40px" /> <input type="button" value="検索" /> <img src="http://www.google.com/uds/css/clear.gif" title="Clear" width=15px height=15px /> <div style="float:right;">powered by<br /> <img src="http://www.google.com/uds/css/small-logo.png"/> </div> </div> <hr style="clear:both;"/> <div id="GoogleResult">（検索結果）<br /> </div> </div> </body> </html> （サンプル：直接Google AJAX Search APIを使った例） <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/> <meta http-equiv="Content-Script-Type" content="text/javascript"/> <meta http-equiv="Content-Style-Type" content="text/css"/> <meta http-equiv="Cache-Control" content="no-cache"/> <meta http-equiv="Expires" content="0" /> <title>Google Search Test</title> <style type="text/css"> #GoogleSarchForm {width :30%;} </style> <script type="text/javascript" src="http://www.google.com/jsapi?key=あなたのGoogle API Key"></script> <script type="text/javascript"> google.load("search", "1"); </script> <script type="text/javascript" charset="utf-8" src="/jslib/jquery-1.3.2.min.js"></script> <script type="text/javascript" charset="utf-8"> //<![CDATA[ var gWebSearch; $(document).ready(function(){ gWebSearch = new google.search.WebSearch(); gWebSearch.setResultSetSize(google.search.Search.LARGE_RESULTSET); gWebSearch.setRestriction(google.search.Search.RESTRICT_SAFESEARCH, google.search.Search.SAFESEARCH_OFF); gWebSearch.setSearchCompleteCallback(null, function(){ $('#GoogleResult > dl,span').empty(); if(gWebSearch.cursor.pages && gWebSearch.cursor.pages.length > 0){ var nextguide=$(document.createElement("span")); for(var i=0;i<gWebSearch.cursor.pages.length;i++){ var nexta =$(document.createElement("a")); nexta.attr({href:"javascript:void(0);"}); nexta.text((i+1)+"頁目"); nexta.bind("click", function(event){ event.preventDefault(); gWebSearch.gotoPage($(this).text().substring(0,1)-1); }); nextguide.append(nexta); } nextguide.append($('<a href="'+gWebSearch.cursor.moreResultsUrl+'" target="_blank">もっと検索</a>')); $('#GoogleResult').append(nextguide); } if(gWebSearch.results && gWebSearch.results.length > 0){ var result=$("<dl>"); for(var i=0;i<gWebSearch.results.length;i++){ result.append('<dt><a href="' + gWebSearch.results[i].url + '" target="_blank">' + gWebSearch.results[i].title + '</a></dt>' + '<dd>' + gWebSearch.results[i].content+'</dd>'); } $('#GoogleResult').append(result); $('#GoogleResult > dl').css("margin-left","10px"); $('#GoogleResult > span > a').css({margin:"5px",color:"black",background:"#FFF"}); $('#GoogleResult > span > a:eq('+ gWebSearch.cursor.currentPageIndex + ')').css("background","yellow"); $('#GoogleResult').append(nextguide.clone(true)); }else{ var result=$("<dl>無し</dl>"); $('#GoogleResult').append(result); return; } }); $('#SarchForm > input:eq(1)').bind("click", function(event){ gWebSearch.execute($('#SarchForm > input:eq(0)').val()); }); $('#SarchForm > img:eq(0)').bind("click", function(event){ gWebSearch.clearResults(); $('#SarchForm > input:eq(0)').val(""); $('#GoogleResult > dl,span').empty(); }); }); //]]> </script> </head> <body> <div><h3>Google Web Sarch By Google AJAX Search API</h3> <div id="GoogleSarchForm"></div> <div id="SarchForm"> <input type="text" value="" size="40px" /> <input type="button" value="検索" /> <img src="http://www.google.com/uds/css/clear.gif" title="Clear" width=15px height=15px /> <div style="float:right;">powered by<br /> <img src="http://www.google.com/uds/css/small-logo.png"/> </div> </div> <hr style="clear:both;"/> <div id="GoogleResult">（検索結果）<br /> </div> </div> </body> </html>
No.1です。おっと、複数<option>があるのでリプレースはだめですね。 やはり全部削除してから追加ですね。 success: function(data, status){ $("#category2").empty(); $.each(data,function(i) { $('#category2').append($('<option>').attr({ value: i }).text(data[i])); }); },
No1 回答の補足（確認）です。 ・jQueryライブラリーを使っているのですよね。 ・var x = $('#category1').val();で、セレクトボックスで選んだ 　value値がｘにきちんと取れてますよね。（xは"1"か"2"か"3"のはず） 　※この部分があやしそうですが、ご提示の部分だけではわかりかねます。 　　x="1";とかしてまずテストしてみて下さい。 ・url: "/php/category.php",はurl: "category.php",に戻し忘れました。 ・ご提示のalert(data.address1 + data.address2);ですが、 　address1とかaddress2はどこにも登場していません。いきなり出てきてます？
確かに、phpで配列データをシリアライズする部分は、json形式 で作成してしまうのが、簡単でそのままjavascriptで使えるので 便利だと思います。 php5.2以降だとjson_encode()という関数もあります。 例えば、 <?php $data = array ("a" => "x", "b" => "y", "c" => "z"); print_r(json_encode($data)); ?> とすると、 {"a":"x","b":"y","c":"z"} が出力されるので、javascript側は var data = ～.responseText; で受け取って、 alert(data.a); ＝＞ x とか alert(data["b"]); ＝＞ y で参照可能なはずです。
タブ、パネルの用語の定義があいまいです。 何かのWebページ作成ソフトとかCMSでのご質問ですか？ 日付けの取得にはjavascriptの関数がありますから、それで判断して 表示する部分の内容を変更するだけではないかと思います。、 動的に変更する外部のデータをページ内に取り込みたい時にAJAXを 使います。
競合するべき技術ではないですね。 私自身はAjaxでサーバサイドをPHPで組んでいます。 Ajaxはなにも生XMLに限定してhttpアクセスするわけではありません。 ブラウザがバックグラウンドでhttpアクセスを行うので、その対象をPHPにすればよいわけです。 POSTもGETもできるので、サーバサイドでもスクリプト動作させることにより、クライアントサイドオンリーよりもさらにインタラクティブになります。 また、クライアント負荷の軽減にも。 ちなみに、応答もXMLではなくjasonを使ったりする場合もあります。 極論、生HTMLを返してそれを直接DOMに反映させてしまってもいいわけです。
極めて難しいですね。 特に異動元の文字と移動先の位置をマウスの座標から取得する部分が困難です。（不可能じゃないでしょうが） もし、 <div id="from"> <span>あ</span> <span>い</span> <span>う</span> <span>え</span> <span>お</span> </div> <div id="to"> <span>か</span> <span>き</span> <span>く</span> <span>け</span> <span>こ</span> </div> としてもいいなら、位置はマウスイベント発生時の要素取得で 出来るので、比較的楽です。対象要素を削除したり追加したり するDOM操作をイベントハンドラー関数として作成で、追加すれば よいと思います。 自作が面倒ならAJAXライブラリーとして 「jQury UI draggable」というのがあります。 http://jqueryui.com/demos/draggable/ があります。
Yahoo!地図のAPIの使い方は、 http://developer.yahoo.co.jp/webapi/map/maps/v2/ … に詳しく解説されています。 しかし、 GoogleMap APIの方が機能豊富だし、ずっと使いやすいです。 この際、GoogleMapに乗り換えましょう。 http://code.google.com/intl/ja/apis/maps/documen … 参考URL：http://code.google.com/intl/ja/apis/maps/documen …
<<従来からあるxxx.ｈｔｍｌに記述したタイトルが表示されているのみで、 グーグルマップでのタイトルは表示されていません。>> そおいう意味だったのですか。 HTMLでは<title>ｘｘｘ</title>のタグは一つしか許されてないはず。 最初に現れた<title>ｘｘｘ</title>のみ有効で書き換え は反映されませんね。（全部のブラウザー試してませんが） DOMでやってもだめだと思います。（試してませんが）
デモページのソースを見て、全く解らないのですか？ まずjavascriptの基礎とCSSの基礎を学習してから、 ライブラリーを使いましょう。お分かりになる方なんて ちょっと勉強すれば、みんなわかります。 デモページをみるだけでなく、ドキュメンテーションのページも よく読んでください。（参考URL） この場合、toggle()のeffect指定です。 toggle( effect, [options], [speed], [callback] ) そうはいっても、ありがとうポイントが欲しいから解答を書くと <script type="text/javascript"> $(function() { function runEffect(){ $("#effect").toggle("slide"); }; $("#button").click(function() { runEffect(); return false; }); }); </script> <body> <div id="effect"> <p> hogehogehogehogehogehogehogehogehogehoge </p> </div> <a href="#" id="button">Run Effect</a> </body> です。見栄えのためのCSSクラス指定は省いています。 ご自身でやってください 参考URL：http://jqueryui.com/docs/toggle/
thickbox3.1こっちでした。 http://jquery.com/demo/thickbox/
混在している限り無理だと思います。 両方（呼び出し側HTMLと外部HTML）とも <meta http-equiv="Content-Type" content="text/html; charset=Shift-jis"/> を指定して、かつ両方ともShift-jisで保存してあれば、そんなに不具合 はでないはずです。（両方ともShift-jisにしないのがベストですが）
トーヨータイヤのサイトはこれじゃないかも知れませんが、 　jQueryのplugin 「Superfish」のverticalメニューが近いかも http://users.tpg.com.au/j_birch/plugins/superfis …
要は、サーバ側で状態が変わったことをクライアントにどうやって伝えるのか、という問題なわけですが、 Ajaxなら、Cometで実現できるでしょう。 http://ja.wikipedia.org/wiki/Comet クライアント側は、「携帯電話側の操作が終わったかどうかを尋ねる」リクエストを発行し、 サーバ側ではコネクションを維持したまま返答せずに保留しておいて、 携帯の操作が終わったところで返答を送ります。 クライアント側では、サーバから返答が返ってくれば、携帯の操作が終わったということなので、ページ遷移をします。 ただし、長時間繋ぎっぱなしだと他の通信が阻害されますので、 適度にタイムアウトしつつ再リクエスト、といった処理は必要だと思います。
＞「リリースパッケージ（.zip）」を保存し、これを展開したものを公開 ディレクトリに置いた状態で、直接ファイルをクリックすると動きまし た。 ん？　とすると、展開してできたフォルダを置いたのだろうか。だとすると、http://localhost/ではなく、http://localhost/フォルダ/とアクセスすることになるが、そのへんは間違いないだろうか。 そのサーバーはちょっとよくわからないが、Apache HTTP Serverなどでは特に設定は不要だった。
#2,#3がよくわからないなら読み込んだ後に、くっつける処理再実行するだけでは？
>>No.3 JKって何ですか？ >No.1 FFは微妙ですね、ぎりぎりゆるされるかも、 IEはMS(モビルスーツじゃやない)自身も使ってます。 ネスケもわかりますね。 ただNEとかOPとかSAとか勝手に略しても面食らいますよね
> whileの実行を待ってくれないのはAjaxの欠陥といえるかもしれませんね。 欠陥というよりも、これがXMLHttpRequestの仕様なのでしょう。 MDB2を使用していますが、下記URLにDBの内容をJSON形式にしてレスポンスとして返すPHPのサンプルが掲載されています。 １度、参考にされてはいかがでしょう？ http://ajax-world.sakura.ne.jp/extjs/grid/05/
＞【１】liにすでに任意のclassがある場合、そのclassに影響を与えないようにclassshow/classhideを付加することは可能ですか 可能です。class 属性値は、ブランクで区切って複数指定できます。 しかし、完全すげ替え＆表示する時は同じstyle適用としか考えていなかったので、初回追加は簡単ですが、２回目以降の置き換える時は、工夫が必要です。jQueryになにかユーティリティ的関数があったかもしれませんがよく知らないので、style.display の値だけの変更なら、スタイルシートのクラスは作らず、直接操作した方が早いかもしれません。 変更前１ global 変数 var classshow = 'showblock';// 表示用css class名 var classhide = 'hidenone';// 非表示用css class名 ↓ 変更後１　display に設定する値に変更 var classshow = 'block';// 表示用display値 var classhide = 'none';// 非表示用display値 変更前２　className 設定箇所３カ所 listcolection.item(i).className = classhide; ↓ 変更後２　className をstyle.displayにするだけ listcolection.item(i).style.display = classhide; ＞【２】ナビ用リンクを動的に生成することは可能ですか？ 可能です。 document.createElement を駆使して、親要素へappendChildするか、tagを書き出した文字列を作って、innerHTMLで親要素内を置き換えるか、のどちらかでできます。 初心者向けには、前回提示のdiv id="navi" 内部のhtmlソースを、innerHTMLで書き込むのが手っ取り早いかと。 また、ナビ用リンクの<a>のクラス変更は、showlist(num)とほぼ同じ考え方で作れます。
表示する掲載情報が静的なものであれば、style.displayを使って javascriptだけでいける。 表示されるべきコンテンツが動的だったり、表示後もいろいろ操作 するのであれば、AJAXの方が楽だったりする。 インラインで書けるものなのか、外部参照しなきゃいけないものな のかによって、使い方は変わるかな。
HTMLの文法はタグの省略が可能な部分が多く、XMLパーサーではエラーになることが多いです。 XMLパーサーとHTMLパーサーの違いですね。 HTMLパーサーの方が複雑です。 var doc=document.createDocumentFragment(); doc.innerHTML= xmlhttp.responseText; alert(doc.getElementsByName('a')[0].value); 未検証です。 <body>の直後から</body>の直前までを取り出しておいた方がいいかもしれません。 xmlhttp.responseText.match(/<body.*?>(.*)<\/body>/); var html=RegExp.$1; // htmlを上記innerHTMLに代入 未検証です。
えっと、それは同じurlですよね？ 「このエラーページは無料レンタルサーバ my-sv.netにて提供されています。」で開けないです。 なので何が書いてあるかわかりませんが それと同じ内容かもしれませんが 以下のページをhighslideのbbsで発見しました。 http://highslide.com/examples/inside-iframe.html http://www.roadrash.no/hs-support/inside-iframe. … 両方ともiframeから親で開いてます ソースを見たら出来るかもしれないですね。
ローカルファイル(file://のurl)のときは、status を返すプログラム(http server)を経由してないので常にstatus == 0 です。これは、ブラウザによりません。 実行順については、既に指摘のあるとおり、open前に(最低でもsend前に)、onreadystatechangeをセットしておかないと、ローカルでの読み込みは次を実行するまえに終わってるので、つまりonreadystatechangeは、発生完了済みなので、補足されなくなります。 ネットワーク経由だと、どうしてもタイムラグがあるから、補足できていたのでしょう。 静的テキストを読みとるだけなら、readyState==4　だけ補足すれば、おおむね(ローカル、http経由を問わず)、受信出来るようです。 参考：miniajax　超最短スクリプト http://www.bigbold.com/snippets/posts/show/2025 ブラウザ別、実行状況は、とりあえず、こちらを参考にするとよいかもしれません。 http://jsgt.org/ajax/ref/test/response/responset …
#1の方の補足的な感じになりますが、 A.php <?php //セッション処理 //リクエストサニタイズ処理 //POSTorGET解析 switch($_GET['cmd']){ case 'ajax' : //B.phpの部分だけを吐き出して exit; break; default : //A.phpの処理とB.phpの処理 break; } ?> で、javascript側ではcmd=ajaxというGETでも付けて非同期通信を行えば良いのでは？
回答#2さん、私に代わっての回答ありがとうございました。 普通にDOMのプロパティを使えば良かったんですね。 jQueryの関数ばかり気にしていて、そこまで頭が回らなかったです。 > input要素は空要素なので子要素が存在しないんじゃないでしょうか？ そうですね、空要素でした。 input要素は今までnameやvalueといった属性値しか使用していなかったので、Firebugで確認して改めて認識しました。 質問者さんへ。 参考URLに、JavaScriptのDOMリファレンスのサイトを掲載しておきます。 参考URL：http://www.openspc2.org/JavaScript/JavaScript_DO …
思いっきり違うページを読んでいますが？ パソコンが高性能な場合、 ページのほとんどの部分が同じで、一部分だけ違うページに移動した場合、 ページを表示し直すのが早すぎて、人間の目には切り替わっていないように見える事があります。
> こんなのを紹介してるサイトがありましたが、 > prototype.jsを併用すると動作しません。 waterclockさんが補足で貼られたJavaScriptのソースコードを元にprototype.jsで動作するものを作成してみました。 prototype.jsと併用するとタグ内に記述した onkeyup='...' が解釈されなくなるようですね。理由は分かりませんが…。 下記に作成したものを載せておきますが、Linux版のFirefox上でしか動作確認していません。 他のブラウザで動作するか分かりませんが、参考にして下さい。 [JavaScript] <script type="text/javascript"> <!-- var targets; // input要素を保持しておく /*----- Windowロード時の処理 -----*/ window.onload = function() { targets = $$("input"); targets.each(function(target) { target.observe("keyup", next); // 各input要素に対してkeyupイベントハンドラを設定 }); }; /*----- keyupイベントハンドラ -----*/ function next(event) { var element = event.element(); // イベントが発生した要素 // maxlength属性値の取得 var maxlength; if (element.readAttribute("maxlength") != null) { maxlength = element.readAttribute("maxlength"); } else { maxlength = 2147483647; // maxlength属性値がない場合は最大値に設定 } // 入力文字列の取得 var value = element.value; // 入力文字列の長さ < maxlengthの時は何もしない if (value.length < maxlength) { return true; } element.blur(); // フォーカス解除 // 次の要素にフォーカスを当てる var n = targets.indexOf(element); if (n != -1 && n < targets.size() - 1) { (targets[n + 1]).focus(); } } //--> </script> [HTML] <form> Zip-code：<input type='text' size='3' id='former' onkeyup='next(0);' maxlength='3' /> - <input type='text' size='4' id='latter' onkeyup='next(1);' maxlength='4' /><br /> Address：<input type='text' id='address' size='20' /> </form>
#1,2です。 > 「ajax 星型 評価」と検索するとホームページを作る人のネタ帳 こちらですね。 MySQLとAjaxによる星型評価ボタンの設置方法*ホームページを作る人のネタ帳 http://e0166.blog89.fc2.com/blog-entry-263.html > pyaのように評価するときにページを移動しない方法を探しています。 そういうことでしたか。 でしたら pya! のコードが参考になりそうですね。 ----- hyouka = new function(){ ... } http://pya.cc/pyaimg/pimg.php?imgid=83775&msgful … ----- ** onclickでページ遷移しないように ** onclickでfunctionを実行したときに「リンク先への遷移」など、ブラウザ通常の動作も同時にしてしまうことがあるので、return false; で回避します。 掲示板/JavaScript質問板/過去ログ/一覧/ onClick returnについて - TAG index Webサイト http://www.tagindex.com/kakolog/q4bbs/201/402.html onclickの簡単な例を出すと、こんな感じです。 ------ <input id='Test' type="button" value="onclickのテスト" /> <script type="text/javascript"> var test = document.getElementById('Test'); test.onclick = function(){ alert('クリックされました'); return false;// inputボタンが押されたときのブラウザ既定の動作を無効化する } </script> ------ ** 評価HTMLを星形ではなくgood,badの2択に ** HTMLを星形の画像から good, bad にします。 <input id='Good' type="button" value="Good" /> <input id='Bad' type="button" value="Bad" /> あとはJavaScriptのonclickで動作をフックするだけ。そんなに難しく考えることはないですよ。
クライアントからはIf-Modified-Sinceヘッダを出し、 サーバーからはLast-ModifiedヘッダやPragmaなどのヘッダ（キャッシュコントロール）を出すようにすればURLを変えずにキャッシュ制御が出来ます。 URLを変更してキャッシュコントロールするのは、 サーバーのキャッシュコントロールが通常は出来ない事と、 （一般のレンタルサーバーではインストールされていない機能を使うか、 CGIを使わないと行けない） 一部のAjax対応の古いブラウザではキャッシュコントロールを無視するためです。 prototype.jsにキャッシュコントロールのインターフェースがなければ、 If-Modified-Sinceヘッダは自分で付加しないと行けないです。 > このスクリプトを実行するたびにインターネット一時ファイルに保存されるので、 > ものすごい数のテキストファイルが保存されてしまいます。 どうせいろんなページを回っていればそれだけファイルが保存されますから、 数万個程度なら無視できるレベルだと思いますが？
皆さん的確な回答をされていらっしゃるので、私は補足的な意味を込めて…。 Ajaxとは狭義ではJavaScriptが持っているXMLHttpRequest通信機能を使用してサーバと通信を行い、サーバからのレスポンスをもとにDOMを使ってWebページの一部を更新することを意味します。 AjaxはAjaxライブラリを使用しなくても、割と簡単にその機能を実装することは可能です。 ただ、自分で実装するとなるとクロスブラウザ問題等を意識する必要が生じるのでAjaxライブラリを使用する方が無難です。 しかし最近のAjaxライブラリはAjaxの機能よりも、例えばツリービュー、グリッドあるいはチャートが表示できたりとRIA(Rich Internet Applications)向けライブラリに化しているのが現状です。 ちなみに私はExt JSというAjaxライブラリを利用していますが、これはRIA向けライブラリの典型と言っても過言ではないでしょう。
「都道府県→頭文字→市区町村」ではなく、「地方→都道府県→詳細地域」の連動する入力フォームのサンプルであれば下記のURLがありますが・・・。 http://ajax-world.sakura.ne.jp/extjs/combobox/04/ こちらのサンプルではAjaxライブラリにExt JSを使用しています。 参考URL：http://ajax-world.sakura.ne.jp/extjs/combobox/04/
レイヤーという、仮想的な画面の層を作り、それを制御することで可能です。 NHKのページではスタイルシートを使っていますが、Javascriptを使うシンプルな方法もあります。 クリックしたら開くだけなら以下のような記述でできます。 <script language="JavaScript"> <!-- function openLayer(){ document.getElementById("HideLayer").style.display = ""; } --> </script> <a href="javascript:openLayer()">続きを読む</a> <div id="HideLayer" style="display:none"> 続きの内容 </div> もう一度クリックすると閉じるようにするには、隠している部分が 表示されているのかどうかを検出させるためのスクリプトを追加する必要があります。 詳しく知りたいならばHTMLやCSSを扱うサイトや書籍で「レイヤー」操作について調べてください。
おっと失礼。 サンプルページで角が丸くなったPNG画像をダウンロードできたんで、画像だと思いました。 画像じゃないなら、解析できるだけの時間取れないので他の人にパス・・・
AJAX利用のフラッシュローダーとしては、 -Shadowbox.js http://mjijackson.com/shadowbox/ -Lightbox JS http://www.lokeshdhakar.com/projects/lightbox/ -Lightwindow v2.0 http://www.stickmanlabs.com/lightwindow/ が使えるのでは メールについては AjaxMail：Ajaxを活用したフリーPHPメールフォーム http://www.ajaxmail.jp/ というのがありました。 自分に必要な機能のみ、prototype.jsやjQueryを使って 自分で作ってしまうのが、早道かも
range保存し再利用すればいい。
多少情報が古いかもしれませんが、下記のサイトはいかがでしょう？ http://journal.mycom.co.jp/special/2007/dojo1/in …
jQueryはクロスブラウザで動作するので、どのブラウザでも同じように動作すると思います。 もし宜しければ、JavaScriptをどのように記述されているか教えてもらえませんか？
カテゴリ群に自分で分けて管理すればいいだけでしょう var groupA = new Array; groupA.push(icon1); groupA.push(icon2); とかやっておいて、適当なボタンのイベントにおいて それらを非表示、表示とかすればいいだけです
スタックトレースを拝見したところ、Exceptionが発生している根本の原因は java.lang.NoClassDefFoundError: Could not initialize class com.mysql.jdbc.ConnectionImpl のところだと思います。 つまり、実行時にcom.mysql.jdbc.Driverクラスは見つかったにも関わらず、com.mysql.jdbc.ConnectionImplクラスが何らかの理由で見つからなかったのでしょう。 もう１度実行環境、特にCLASSPATHを確認してみて下さい。 なお補足になりますが、hiro19834さんが変更されようとしているソースはサーバ側のソースですので、これはGoogle App Engine上で実行されていると思います。 App Engine上でJDBCを利用して直接DBアクセスする例は私も見たことがないので自信がありませんが、この場合JDO(Java Data Objects)経由でDBアクセスする必要があると思います。 JDO経由でもできるかどうか自信がありませんが・・・。 参考URL：http://code.google.com/intl/ja/appengine/docs/ja …
提示されたデータが長いので、例として・・・ var str = '{"encoding":"UTF-8","title":"ValueCommerce Product Database Search Results","link":"http://www.valuecommerce.com"}'; eval('var json = '+ str); alert(json.title); alert(json['title']);
>ただ、prototypeやjQuery等のJavaScriptライブラリなども >Ajaxと呼ばれていたり・・・。 >どういう部分がAjaxなのかがわかりません。 Prototype.js とか jQuery ライブラリ自体を指して Ajax なんて呼んでいる人を見たら、その人は Ajax のことも JavaScript のことも何にも分かってないと思っていいと思いますよ。 これらは単に、各ブラウザの差異を吸収して簡単に JavaScript が書けるようにするためのものです。(もちろん Ajax というか通信処理を行うための関数も用意されてますけど) Ajax というのは1番目の方も書いている通り、非同期にデータを読み込むことによるページ遷移のないユーザーインターフェイスのことです。 非同期というのは、ページを読み込むタイミングと (ページ上で処理する) データを読み込むタイミングが別であるという意味です。 Lightbox はよく知りませんが、もし大きなサイズの画像をバックグラウンドで読み込みつつ表示させているなら Ajax と呼べると思います。 (Ajax の x は元は XML ですけど、今の Ajax は XML には限らないと思いますし)
自分で書いておいてこう言うのも変ですが・・・ function wheel( event ) { var obj = event.target || event.srcElement; のなかのeventという名前は混乱のもとだよね～！ evtとかに代えるべき。 それとやってることはJavascriptの板がふさわしいのでは？
漠然とした答えになりますが、 検索ボタン押す→送信→返った結果を受け取る→表示 って感じだと思うので、 ボタン押してリクエスト送る前にcreateElementとかでローディング要素を作成して表示し、 結果受け取って表示する間にその要素を削除すればいいんじゃないかと。 画像使いたいなら参考のサイトが便利です 参考URL：http://www.ajaxload.info/
prototype.jsの仕様とかはあまり詳しくないですが、 送信データはあらかじめURLエンコードが必要なんじゃないですか？ new Ajax.Request('Test', { method: 'post', onSuccess: displayTest, parameters: "param1=" + encodeURIComponent("あいうえお") }); それから、JavaScriptは、通常はUTF-8を使用しますので、 HTMLの文字コードではなくUTF-8のままで送信すると思います。 Ajaxに限らずFormでも<a href="">でも、 ブラウザが送信する文字コードは送信元のHTMLの文字コードと一致するという保証はありませんので、 必ず確認、変換しないと行けないと思います。
反転できなかった！ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <title>kuru kuru</title> <style type="text/css"> #p { width:650px; height:200px; list-style-type:none; } #q { width:650px; height:200px; list-style-type:none; } </style> <ul id="p"> <li><a href="#"><img src="./img/0.gif" width="120" height="120" alt="画像1"></a></li> <li><a href="#"><img src="./img/1.gif" width="120" height="120" alt="画像2"></a></li> <li><a href="#"><img src="./img/2.gif" width="120" height="120" alt="画像3"></a></li> <li><a href="#"><img src="./img/3.gif" width="120" height="120" alt="画像4"></a></li> <li><a href="#"><img src="./img/4.gif" width="120" height="120" alt="画像5"></a></li> <li><a href="#"><img src="./img/5.gif" width="120" height="120" alt="画像6"></a></li> <li><a href="#"><img src="./img/6.gif" width="120" height="120" alt="画像7"></a></li> <li><a href="#"><img src="./img/7.gif" width="120" height="120" alt="画像8"></a></li> <li><a href="#"><img src="./img/8.gif" width="120" height="120" alt="画像9"></a></li> <li><a href="#"><img src="./img/9.gif" width="120" height="120" alt="画像10"></a></li> </ul> <p> <input type="button" onClick="r.f?r.start(r.f=false):r.end()" value="Satrt/Stop"> <input type="button" onClick="r.s*=-1" value="Rev"> </p> <ul id="q"> <li><a href="#"><img src="./img/0.gif" width="120" height="120" alt="画像1"></a></li> <li><a href="#"><img src="./img/1.gif" width="120" height="120" alt="画像2"></a></li> <li><a href="#"><img src="./img/2.gif" width="120" height="120" alt="画像3"></a></li> <li><a href="#"><img src="./img/3.gif" width="120" height="120" alt="画像4"></a></li> <li><a href="#"><img src="./img/4.gif" width="120" height="120" alt="画像5"></a></li> <li><a href="#"><img src="./img/5.gif" width="120" height="120" alt="画像6"></a></li> <li><a href="#"><img src="./img/6.gif" width="120" height="120" alt="画像7"></a></li> <li><a href="#"><img src="./img/7.gif" width="120" height="120" alt="画像8"></a></li> <li><a href="#"><img src="./img/8.gif" width="120" height="120" alt="画像9"></a></li> <li><a href="#"><img src="./img/9.gif" width="120" height="120" alt="画像10"></a></li> </ul> <p> <input type="button" onClick="q.f?q.start(q.f=false):q.end()" value="Satrt/Stop"> <input type="button" onClick="q.s*=-1" value="Rev"> </p> <script type="text/javascript"> //@cc_on function RotationAnchor () { this.init.apply(this, arguments); } RotationAnchor.prototype.init = function (pEmtId, step, time) { var c, s, p; this.p = document.getElementById(pEmtId); this.s = step || 3; this.t = time || 50; this.l = this.p.getElementsByTagName('LI'); this.k = 0; this.w = this.p.offsetWidth; this.r = this.w / 2; this.n = this.l.length; this.f = false; this.a = 0; this.b = 0; p =120 / 2 |0; this.c = {x: this.w / 2 - p, y:p}; s = this.p.style; s.overflow = 'hidden'; s.position = 'relative'; for (c = 0; c < this.n; c++) this.l[c].style.position = 'absolute'; this.start(); } RotationAnchor.prototype.view = function () { var c, s, o; var op; var deg = Math.PI / 180; var tmp = (360 / this.n) * deg; var sin = Math.sin(tmp); var cos = Math.cos(tmp); tmp = this.k * deg; var stx = Math.sin(tmp) * this.r; var stz = -Math.cos(tmp) * this.r; var sty = -80; var tmx, tmz, tmy; var point = { }; c = 0; while (o = this.l[c++]) { point = henkan(stx, sty, stz); s = o.style; s.top = this.c.y - point.y + sty + 'px'; s.left = this.c.x + point.x + 'px'; s.zIndex = -stz | 0; op = 100- (stz + this.r) / this.r / 2 * 90; s./*@if(1) filter = 'Alpha(opacity=' + op + ')' @else@*/ opacity = op / 100 /*@end@*/; tmx = stx * cos - stz * sin; tmz = stx * sin + stz * cos; tmy = sty; stx = tmx, sty = tmy, stz = tmz; } function henkan (x,y,z) { var point = { }; var pr0 = 1000; var pr1 = 0.0013; var pr2 = (z + pr0) * pr1; point.x = x / pr2 |0; point.y = y / pr2 |0; return point; } }; RotationAnchor.prototype.start = function () { this.view(); this.a = this.a + .1; this.b = Math.pow(Math.sin(this.a / this.n * Math.PI) ,6)*1.15; this.k += this.b * this.s; !this.f && (function (cb_) { return setTimeout( function () { cb_.start(); }, cb_.t); } )(this); }; RotationAnchor.prototype.end = function () { this.f = true; }; var r = new RotationAnchor('p', -1, 50); var q = new RotationAnchor('q', 1, 50); </script>
http://okwave.jp/qa4832624.html
サーバ側に、MySQLにアクセスするプログラム（CGI,PHPなど）を用意し、Ajaxからそれにアクセスする。
http://www.openspc2.org/JavaScript/Ajax/Ajax_stu … かなり詳しく丁寧だと思いますが。 猿には…　どうでしょ。。。
ほかで作ったもの。画像だけどなんとかなるでしょ！ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <title>Change Image</title> <style type="text/css"> #photo { width:640px; height:150px; border:1px red solid; margin:0px; padding:0px; background-color:#fff; } #photo img { border:0px none; } </style> <ul id="photo"> <li><a href="htp:/test/" target="_blank"><img src="./img/0.gif" alt="0.gif"></a></li> <li><a href="htp:/test/" target="_blank"><img src="./img/1.gif" alt="1.gif"></a></li> </ul> <script type="text/javascript"> //@cc_on function ChangeImage () { this.init.apply(this, arguments); } //初期化 ChangeImage.prototype.init = function (elementId) { var c, s, t; this.sotowaku = document.getElementById(elementId);//外枠 this.list = [];//ImageList this.no = 0;//LIの番号 this.timer = null;//タイマーID this.quit = null;//中止？ this.opacity = null;//透明度 s = this.sotowaku.style; s.overflow = 'hidden'; s.position = 'relative'; //外枠CSS c = 0; while (t = this.sotowaku.childNodes[ c++ ]) { //子LIのみリストに追加 if ( t.nodeType == 1 && t.nodeName == 'LI' ) { if (c != 1) t.style.visibility = 'hidden'; this.list.push( { 'LI': t, 'IMG': this.setDef(t.getElementsByTagName('img')[0], c==1) } );//最初の画像以外透明 } } return; } //imgの初期値設定 ChangeImage.prototype.setDef = function (e, f) { var s = e.style; s.top = '0px'; s.left = '0px'; s.width = this.sotowaku.offsetWidth + 'px'; s.height = this.sotowaku.offsetHeight + 'px'; s.position = 'absolute'; if (!f) s./*@if(1) filter = 'alpha(opacity=0)' @else@*/ opacity = 0/*@end@*/; return e; } //imageの追加 ChangeImage.prototype.addImage = function (image, url) { var li = document.createElement('li'); var a; var img = document.createElement('img'); img.src = img.alt = image; this.setDef(img, this.list.length == 0); if (url == undefined) { li.appendChild(img); } else { a = document.createElement('a'); a.href = url; a.appendChild(img); li.appendChild( a ); } this.list.push( {'LI': this.sotowaku.appendChild(li), 'IMG': img } ); return; } //タイミングの設定 表示時間,消去時間,ステップ(%) // default [5,1,1] ChangeImage.prototype.start = function (atime, dtime, step) { this.atime = atime || 5000; this.step = (step == undefined || step < 1) ? 1: step; this.wait = Math.floor((dtime || 1000) / (100 / this.step)); this.loop0(); return; } ChangeImage.prototype.loop0 = function () { this.setOpacity(100); this.step *= -1; if (!this.quit) setTimeout( (function (cb_) { return function () { cb_.loop1(); };})(this), this.atime); } ChangeImage.prototype.loop1 = function () { this.timer = setInterval( (function (cb_) { return function () { cb_.changeOpacity(); };})(this), this.wait); } //透明度と対象物の前面化 ChangeImage.prototype.setOpacity = function (op, z, v) { var t = this.list[ this.no ]; t.IMG.style./*@if(1) filter = 'alpha(opacity='+ op + ')'; @else@*/ opacity = op / 100 /*@end@*/; this.opacity = op; if(z != undefined) t.LI.style.zIndex = z; if(v != undefined) t.LI.style.visibility = ['hidden','visible'][z]; } //透明度の設定 ChangeImage.prototype.changeOpacity = function () { var n = this.opacity + this.step; if (n < 0) { this.setOpacity(0, 0, 0); this.no = ++this.no % this.list.length; this.setOpacity(0, 1, 1); this.step *= -1; } else if (100 < n) { clearInterval(this.timer); this.loop0(); } else { this.setOpacity(n); } return; } var p = new ChangeImage('photo'); p.start(2000,1000,2); </script>
IEのActiveXObjectではバイナリデータを扱えますが、XMLHttpRequestは、バイナリデータをサポートしていません。 IE以外のブラウザはすべてXMLHttpRequestで通信します。 もちろん、JavaScriptの言語仕様としてバイナリデータを扱えますので、 サーバーでBASE64エンコードしたデータをJavaScriptでバイナリデータにデコードすることでバイナリデータを受信する事は可能ですが、 それを表示する手段がありません。 やってやれなくはないですが、画像データを画像として表示するのは現実的ではないです。 IE7以降、ActiveXモードとXMLHttpRequestモードを切り替えられますので、（添付画像参照） ユーザーがXMLHttpRequestモードにしていると、バイナリデータが破壊される可能性があります。 画像を表示するだけなら、わざわざAjaxを使う必要はないと思います。 <script> onload=function(){ var img=new Image(); img.src='http://example.com/image.jsp?id=5'; document.getElementById('output').appendChild(img); } </script> <div id="output"></div>
form タグを使って、保存したい文字を、textarea タグ内に入れれば、いけると思いますが。 <form action="hoge.php" method="post"> <textarea name="hoge">「文字列」「文字列」「文字列」</textarea> <input type="submit" value="保存する"> </form> hoge.php で、受け取ったデータを保存しないといけませんが、いかがでしょう？
画像ファイルの名前を変更してみたらいかがでしょうか？ sample.jpg sample2.jpgのように
"Windows-31J" JavaScript でググると、参考URLがヒットして、 > IE の場合だけ、Windows-31J の代わりに csWindows31J を利用します。 だそうです。 余談ですが、"Windows-31J" は "cp932" と同義で、IANA で定義された「MS方言のSJIS」を意味する文字コード名です。 にもかかわらず、"Windows-31J"を「未知の文字コード」と扱うMS製品が多いのは確信犯という気がしてなりません。 # こんな事を書くと、またマイクロソフト擁護派から反発を喰らうんでしょうが、書かないと状況が良くならない... 参考URL：http://d.hatena.ne.jp/kusakari/20070720/1184928455
bindでOKと言っておきながら動かなかったらあれなのでちょっと試してみました。 関数processRequestを変更しないのであれば、 　　onSuccess: this.processRequest.bindAsEventListener(this,1) で動くと思います。 関数processRequestの引数の順序を 　　http.prototype.processRequest = function(arg,h){ と変更すれば、 　　onSuccess: this.processRequest.bind(this,1) で動くと思います。 余談ですが、 > var url="/ruby/hello.cgi";　//実際に検証する為にはwebサーバにこのcgiを置く必要あり ちょこっと実験するだけならcgiスクリプト作らなくても HTMLファイルやTEXTファイルで動作確認できますよ。
DOSコマンドの実行結果を文字列で取得できる ActiveX コンポーネント「ATLDocs」というのがアップされています。 http://www.vector.co.jp/soft/win95/prog/se222454 … これを使って ipcongig /all の結果からPhysicalAddressの値を取得して、サーバーに送信してしまう。 ※もちろんWindowsとIE限定ですが。
> prototypeやDojoやJQUERY等のライブラリーを使わず、 他人が作ったライブラリを使うことがAjaxではありません。 http://www.atmarkit.co.jp/fwcr/special/ajax01/01 … こことかが詳しいと思います。 >1 自作のJavaScriptファイルをダウンロードしてもらって、利用者のサーバーにアップロードし、 <script src=""></script>という外部ファイルにするのと同じです。 ダウンロードと利用者のサーバーにアップロードする手間を省けるようにしています。 直リンクと呼ばれる方法なので、画像素材の場合は公開者が禁止していることが多いですが、 ガジェットやブログパーツの場合は逆に、自サーバーへアップロードしての利用を禁止することが多いと思います。 （禁止していないかも知れませんが、手間を考えると直リンクの方が簡単です） >2 DOMによるドキュメント操作です。 おそらくiframe要素を作成して、src属性をしているだけでしょう。 > 3 おそらくJSONPという方法です。 （1でも、「他サイトのJSONデータを取り込み加工して表示」という意味では同じだと思います。）
世間（初心者も含めて）でAJAXっていう用語の使われ方が、あいまいな気がします。（DOMとかAPIサービスについても同様ですが..） 昔は、cgiという用語もあいまいでしたが、だんだん用語の使われ方が淘汰 されてきたような気がします。何年かすると、このような、とんちんかんな質問も無くなるでしょう（失礼）。 logger_manさんが書いているように、AJAXとは正に「XMLなどを利用した非同期通信であって、それ以上でもそれ以下でもない」つまり、httpブラウザーのhttp通信機能を使って外部のデータを読み込む事を指すのでしょうが、ブラウザーの互換性を吸収してカプセル化し、便利な付加機能を付け、広く使われているライブラリーであるprototype.jsやJQUERY自体を、 AJAXと思っている人が多いのではないでしょうか？
submitボタンにしてませんか？ 一瞬表示されたあと、submitして画面が再読み込みされているとか。
setSize()関数は使ってみましたか？ 下記のようにしたらFireFox 3 ではリサイズできました。他のブラウザは試してません。参考URLはwindow.jsの関数リファレンスです。 <html> <head> <link href="../themes/default.css" rel="stylesheet" type="text/css"/> <link href="../themes/alphacube.css" rel="stylesheet" type="text/css"/> <script type="text/javascript" src="../javascripts/prototype.js"> </script> <script type="text/javascript" src="../javascripts/effects.js"> </script> <script type="text/javascript" src="../javascripts/window.js"> </script> <script type="text/javascript"> function win1() { var win = new Window({id: "win1", className: "alphacube", title: "Sample", width:250, height:150, top:0, left: 1, parent:$('border')}); var html = "<h1>simple sample</h1><br/>\ <a href='#' onclick='Windows.getWindow(\"win1\").setSize(200,200)'>setSize(200,200)</a><br />\ <a href='#' onclick='Windows.getWindow(\"win1\").setSize(300,300)'>setSize(300,300)</a>"; win.getContent().innerHTML = html; win.show(); } </script> <style> body { background: #363636; } #border { position:absolute; top:10px; left:10px; width:500px; height:500px; border: 1px solid #000; overflow:hidden; } </style> </head> <body> <div id="border"> </div> <script> win1(); </script> </body></html> 参考URL：http://prototype-window.xilinus.com/documentatio …
http://oshiete1.goo.ne.jp/qa4579387.html
自前のサーバーは入りません。私も無料のレンタルサーバーを 使っています。保存する仕組みは、PHPやcgiが使えないレンタル サーバーだと無理ですが。自分の手でKMLをアップできるのなら 表示可能のはずです。その際、KMLのファイル名でなくURLを指定 してWebサーバー経由で読込みます。 以下リファレンスの抜粋です。 ＜class GGeoXml＞ GGeoXml オブジェクトは地理的コンテンツをパブリックにアクセス可能なウェブサーバー上でホストされている XML ファイル (KML ファイルなど) の地図に追加します。これは、GOverlay インターフェースを実装し、このため GMap2.addOverlay() メソッドを使用して地図に追加されます。 ====＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 参考URL：http://code.google.com/intl/ja/apis/maps/documen …
地図位置情報を記述する標準化された形式として、 KML形式とかGeoRSS形式というのがあります。XML形式から派生 しており、 <?xml version="1.0" encoding="UTF-8"?> <kml xmlns="http://earth.google.com/kml/2.2"> <Placemark> <name>目印名</name> <description>説明</description> <Point> <coordinates>-122.0822035425683,37.42228990140251,0</coordinates> </Point> </Placemark> </kml> みたいに情報を記述します。(KMLの例) Googlemapだと、KML形式又はGeoRSS形式、YahoomapはGeoRSS形式 のデータを読込んで地図を表示する機能があります。 まず、エクセルの住所から、緯度・軽度の情報を入手する必要が あります。（この作業をGEOコーディングといいます。） ネットで探せばGEOコーディングツールはけっこう見つかります。 そして、エクセルデータからKMLとかGeoRSSのテキストデータを 作成し、地図にアップします。KMLで検索すればそのものずばりの ツールが見つかるかも。
定期通信はあくまで他の人が投稿した内容を受信する為だけに使用し、 自分の投稿内容を送信するのは送信ボタンを押したときだけ、というようにすべきかと思います。 毎回送信して、「入力途中」だったらどうするんですか？
window.onload = function(){ initLeftMenu(); initDhtmlMenu(); } もしくは、 </body>の手前にスクリプトを移動して <script type="text/javascript"> ここにスクリプトを全部移動する そして最後に以下の２つを追加 initLeftMenu(); initDhtmlMenu(); </script> </body> </html>
request.send(); は、request.send(""); のはず。 これは投稿時のコピーミスですよね。
HTML_AJAXは使った事がないので参考にならないかもしれないですが、、、。 readyStateをチェックして1～3の時はsendしないようにするようにしてみてはいかがでしょう？ function sendAjax(){ if(通信オブジェクト.readyState<4){return;} 通信オブジェクト.open(うんたらかんたら) } みたいな・・・。 サーバ間とブラウザ間の通信をチェックするならdoormanか、parosが良いと思います。
＜捕捉（参考）＞ 異なる<iframe>にある、mapコンテナーの参照は、 ------ map1 = new GMap2(parent.iframe1.document.getElementById("map1"), { size: new GSize(640, 480) }); map2 = new GMap2(parent.iframe2.document.getElementById("map1"), { size: new GSize(640, 480) }); ----- <iframe src="./frame_map1.htm" name="iframe1" width="640" height="480"></iframe> <br /> <iframe src="./frame_map2.htm" name="iframe2" width="640" height="480"></iframe> frame_map1.htm、frame_map2.htmの中身(両方とも) <html> <body> <div id="map1"></div> </body> </html> で、両方のiframe内の地図とも、Firefoxではうまくいくのですが、 IEでは、両方の地図の表示と操作はうまくいきますが、 マーカーの追加等の操作は出来ませんでした。残念！ （以上）
＜＝このページを見ているときに他人がアップロードした場合に更新をしなくても自動で更新されるようにしたいと考えています。＝＞ 　php側でタイマー見たいな物をセットして、定期的に更新をチェックする にしても、自動でページを更新するのは困難かも、一歩譲って、自動でリ ロードさせるにしても、私はそんなページは嫌いです。 本件とは話がずれますが、何もしなくても勝手に、どんどんロードして 画像が変わったり、ページが遷移していくサイト（エロサイトに多い） がありますが、迷惑に感じるのは私だけでしょうか？。
私も使わせてもらっていますが、Highslide.jsはいかがでしょうか。 非商用サイトなら自由に使えます。 http://highslide.com/ Barebones Samplesにサンプルがあります。
Ajaxのローカル開発環境であれば、 個人的にはAptana Studioがオススメです。 http://www.aptana.com/studio 日本語化も可能なので、興味があればGoogleで検索してみてください
Ajaxもできるライブラリ（汎用ライブラリ）を使われていますが、該当のスライドショーはAjaxではありません。 こちらのライブラリをご参照下さい。 http://malsup.com/jquery/cycle/
ざっと見ただけですが、 ブラウザーがPOST要求を出す時のリクエストヘッダーにある Content長（バイト）をサーバ側が始めににトータルサイズとしてセットし 読み取り済みサイズ、時間等と一緒に計算してAJAXで返し、JAVASCRIPTで プログレスバー表示しているような気がします。 サーバー側に設置するubr_upload.pl (Perlプログラム)の中に $ENV{'CONTENT_LENGTH'}を取得している部分を見つけました。 （私の読み間違いかも？）
だからAjaxでそのままファイルごとテキストで読み込んで eval('var a='+ obj.resopnseText );
追加 こちらもご覧ください。 参考URL：http://d.hatena.ne.jp/khiker/20081026/javascript …
上半分を描いた後、半透明なレイヤーを乗せています その後、そのレイヤーの上にフォームを乗せています <html> <body> <script> for(i=0;i<360;i+=4){ var inp = document.createElement('input'); with(inp){ style.position='absolute'; style.top=350-Math.sin(i*3.14519/180)*300+'px'; style.left=350-Math.cos(i*3.14519/180)*300+'px'; //style.backgroundColor='transparent'; } document.body.appendChild(inp); if(i==180) vpage() } function ImageOpacity( id, opa, step, wtime ){ this.opacitySet = function(n){ this.opacity=(n!=undefined)?n:this.opacity; this.obj.style.filter='alpha(opacity='+this.opacity+')'; this.obj.style.MozOpacity = this.obj.style.opacity = this.opacity/100; } } function vpage(){ var obj=document.body; newobj = document.createElement('div'); newobj.id='screen'; with( newobj.style ){ position='absolute'; backgroundColor='#fee'; border='1px #f00 solid'; top = obj.offsetTop; left = obj.offsetLeft; width = obj.offsetWidth; height = obj.offsetHeight; filter='alpha(opacity=50)'; MozOpacity = 50; opacity = 50; } document.body.appendChild(newobj); } </script>
変数のスコープの問題では？ 以下のようにしたらIE6でも出来ました。 <script type="text/javascript" charset="UTF-8" src="http://maps.google.com/maps?file=api&v=2&key=[API​キー]"></script> <script type="text/javascript"> //<![CDATA[ var map; var panorama; function load() { map = new GMap2(document.getElementById("map")); map.setCenter(new GLatLng(35.655, 139.744), 18); panorama = new GStreetviewPanorama(document.getElementById("street")); } // 地図1 function map01() { var point = new GLatLng(35.655, 139.744); map.panTo(point); panorama.setLocationAndPOV(point); } // 地図2 function map02() { var point = new GLatLng(35.657, 139.751); map.panTo(point); panorama.setLocationAndPOV(point); } // --> </script> </head> <body onload="load()"> <div id="street" style="width:320px;height:200px"></div> <div id="map" style="width:320px;height:200px"></div> <ol> <li><a href="#" onClick="map01();return false">地図1を表示</a></li> <li><a href="#" onClick="map02();return false">地図2を表示</a></li> </ol> </body>
キャッシュが効いていると推測。 ダミーの数値をつけて呼び出す var dmy = (new Date).getTime(); パラメーターを送るさいに、 '&dmy='+dmy を最後に付け加える 呼び出されるＣＧＩ側ではその数値は無視してＯＫ！
不確かで悪いのですが、CGI::Ajax;で期待通りのことが出来そうな気が。 下のサイトに使用例がありますので読んでみて下さい。 参考URL：http://www.ark-web.jp/sandbox/wiki/index.php?Per …
非同期通信をサポートしてるかどうかで決まると思うけど ほぼ、全滅では？ ウィルコムでオペラだったらいけるかな？
知識が古いとコードも古いね var s=h.replace(/.*<script>|<\/script>*./gm,''); がいいかも！ ここの板は投稿数が少ないから数で勝負！^^;
基本的に分割しています。（基本的に＝つまり例外もある） １回にダウンロードする内容は、 Ajaxを使わずにCGIだけでHTMLを出力している場合や、Dreamweaverなどで静的なHTMLファイルを作るときに表示する内容、 その１ページ分のみですね。 スタンダードというのはないと思いますが、 要は、１ページの中に何件表示すれば読みやすくなるか、というそれだけだと思います。 >ANo.1 補足 懸念されているとおり、巨大なページはPCのメモリ消費、表示処理にも影響します。 1000行をダウンロードしても読まなければ、それこそ不要なダウンロード、負荷になりますしね。 しかしながら、スクリプトを見る限りでは、 数千行でも１度に表示する方が良いかもしれません。 表計算ソフトでは、最大数万件まで表示可能になっていますが、 そのような内容であれば、1000件や全件表示にする方が良いこともあると思います。 innerHTMLで一気に書き出した方が表示が早いことは確かですし、 このサイズになると'<table>〜</table>'という文字列を生成して、<div>のinnerHTMLに放り込む、 または、むしろJavaScriptを使わずにインラインフレームで表示する、という方法も一考かと思います。 >ANo.2 CSVをJavaScriptで分割するよりも、JSONで受け取ってevalする方がはるかに早いです。 ですので、CSVで受け取ってsplitするよりも、 PHP側であらかじめJSON（配列）で記述しておき、eval(o.responseText)とする方が早いですが、 なかにはevalは邪道だとかいう話もありますけどね(^^; コードがあまりにも単純すぎて素人っぽく見えるので嫌われるんでしょうかねぇ？ 不正なデータの場合、いきなりスクリプトエラーが発生するという問題がありますが、 私は良いと思いますけど。 今思えば、これで逃げられるかなぁ。試してません。 try{ eval(o.responseText); }catch(e){ alert('error'); }
PHPの関数の話なら、strpos()かstrcmp()のどちらかで良いと思いますが、 ベンチマークなどは取ってないので、どちらが効果的（メモリ消費が少なく早い）かは調べてません。 リファラーチェックそのものはその方法で良いと思いますが、 そのチェックが通ったからといって、本当にそのURLからのアクセスだという保証はありません。 （可能性が高い、というだけです） 一般向けのサイトなら、危険なコードは書かない方が良いでしょう。
<html> <head> <script type="text/javascript" src="prototype.js"></script> </head> <body> <form> <select id="a" onChange="changeOption('b',this.value)"> <option value="0" selected>好みは？</option> <option value="1">普通</option> <option value="2">やばい</option> </select><br> <select id="b"> </select> <script> function changeOption(id,val){ var tm = (new Date()).getTime(); new Ajax.Request('test.php', { method:'get', parameters:'menu='+val+'&c='+tm, onSuccess:function(oj){retData(id,oj.responseText); } }); } function retData(id,oj){ var dt=oj.split('\n'); var txt=[]; var val=[]; for(var i=0;i<dt.length;i++){ var buf=dt[i].split('\t'); val.push(buf[0]); txt.push(buf[1]); } setSelectOption(id,txt,val,val[0],val[0]); } function setSelectOption(id_name ,text_array, value_array, default_value, select_value){ var o = document.getElementById( id_name ); while( o.hasChildNodes() ) o.removeChild( o.lastChild ); for(var i=0, n, mx = text_array.length; i<mx; i++){ var n = new Option( text_array[i], value_array[i],(default_value==value_array[i]),(select_value==value_array[i])); try{ o.add( n, null) } catch( ex ){ o.add( n ); } } } </script> --------------- test.php <?php $menu=$_GET['menu']; $ret =''; switch( $menu ){ case '1': $ret="0\t指定してください\n1\t男\n2\t女"; break; case '2': $ret="0\t指定してください\n1\tオカマ\n2\tオナベ"; break; default: $ret="0\tありません"; break; } echo $ret;
＞Ajaxを用いて開発する利点 ・最小限のデータのやり取りで目的の結果を表示できます ・データを最小化できなくても、変遷がないことでユーザーにとって 処理が高速におこなわれていると思わせる心理的な効果が期待できます
JavaScriptでページの内容を変化させた後にibox.jsの初期化処理を入れたら上手くいくと思います。 おそらくonloadイベントで初期化してると思うのですが。
私のサイトでも、同様の問題にぶち当り、 アイコン表示させないズームレベル５で一旦地図を表示した後、 window.setTimeout(function() { map.setZoom(setzoom); }, 3000); で、３秒後にズームレベルを変え、時間の短縮できました。 時間はもう少し短く調整できると思います。 約２５０件、独自アイコン使用しており、 マップのロードに時間がかかるはずですが、普通に使えております。 私のサイトのソースを見て、参考にして見てください。 参考URL：http://www.kyotolove.com/
http://dojotoolkit.org/support/faq/what-does-doj … >It doesn't really stand for anything. 特に意味はないらしい
フォームのmethod指定によってやり方は変わってくると思いますが、 postなら あらかじめ用意したhtmlファイルをlightwindowで開き、入力された内容をそのhtml内のフォームに丸ごとコピーしてサブミットする（jsでやります） getなら phpに渡す引数入りのurlを生成して、lightwindowで開く といった感じでしょうか。できることならgetが楽でしょうね
