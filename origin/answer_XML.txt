以下のサイトは参照済みでしょうか？ 　ここが本家本元です。 http://www.makemusic.com/ 　日本語としては以下が有ります。 https://www.musicxml.com/ja/ 　そもそもの概要説明はWikipediaにあります。 https://ja.wikipedia.org/wiki/MusicXML 参考まで。
「Eclipse でBASIC認証・・・」という意味というのは？ ＞ベーシック認証～アクセス制限～ ＞http://www.chama.ne.jp/access/ 　こういう仕組みで実現するのではなくて、Eclipseでですか？ 　今、ネット検索をしてみたところ、こういった情報もあるようです。 ＞eclipseでBASIC認証 ＞http://detail.chiebukuro.yahoo.co.jp/qa/question …
先ず保留になるんですよ。だから、それで正解。 googleのクローラが巡回して来て処理を始めたら処理日に値が入ります。 ２～３日待ちましょう。 googleは全世界の１兆ページ位を処理しているので、何事にも時間が掛かる物だと思ってください。
Firefoxでは問題ないですか？ 例：警告文「http://static.ak.faceboo*.com の識別情報を確認できません」 →証明書に書かれているホスト名と実際のホスト名が違う可能性 https://discussionsjapan.apple.com/thread/101194 …
IOPSはググればわかるとおり、ディスクのアクセス数ですから、 もし、プログラマとしてこういうことを言われたならば、「ネットの負荷はどうなのよ？」ということを反射的に言うと思います。
「こめたんぷれいや」について検索したら、以下のURLが出てきました。 http://putin999.web.fc2.com/cometan_menseki.html こちらでお間違いないでしょうか？ 残念ながら、こちらのソフトウェアはエクセルなどのような一般的なものではないようですので、 上記URLからBBSへ行って質問するのがよろしいかと思います。というか、そちら以外どこもまともな答えが得られるとは思えません。 開発者ご自身が返答してくれているようですので、ここで質問されるよりは十分な答えが得られると思います。 プログラムが疎い方の場合はよく理解できないかと思いますが、「xmlファイルのフォーマット」や「正規表現」はググっても出てくることですので、事前に調べておいて知識を得ていたほうがスムーズに質問できるかと思います。 ちなみにadvsは開発者が適当につけたxmlのタグ名でググっても出てきません。
wav形式の音楽ファイルの構造はご存知ですか？ Visual Basicの配列変数はご存知ですか？ 単純にバイナリーファイルの内容をVBの配列に格納すると考えれば可能です。 しかし、wavの構造を理解していなければ音楽部分がどこから始まるのかわからないので、一部切り取り（サンプリング）は出来ません。
要素 RecRule とその子孫要素は接頭辞こそ省略されていますが、 れっきとした XML 名前空間が定義されています。 以下の二行は XML 的に同じ意味です。 <RecRule xmlns="foo"><Description>1番目</Description></RecRule> <r:RecRule xmlns:r="foo"><r:Description>1番目</r:Description></r:RecRule> そのため XPath にて要素を指定する際は、名前空間も含めて記述する必要があります。 MSXML の場合は SelectionNamespaces のプロパティで指定する様です。 https://msdn.microsoft.com/ja-jp/library/ms75604 … // サンプル ns = "xmlns:r='http://myschemas.org/Record.set'"; dom.setProperty("SelectionNamespaces", ns); record = dom.selectSingleNode("//r:RecRule/r:Description"); どうやら MSXML では接頭辞なしで名前空間を指定する方法がないようなので、 適当な接頭辞を決めて XPath を書いてください。
１．しない ２．多数のアクセスがあるまで待つ ３．とくにありません 内容の無いページは引っかかりませんからね そのページに毎日１万人がアクセスするようになればGoogleに登録されますよ
「XMLのプルダウン」とは何でしょうか。 XMLの規格自体には存在しませんし，周辺規格にあるということも聞いたことがありません。 なので，「根本的な定義が存在しない」というのが回答になるかと想います。
こんばんは！ １度きりの操作になると思いますが・・・ Sub 行挿入() Dim k As Long, lastRow As Long lastRow = Cells(Rows.Count, "A").End(xlUp).Row Range("A:A").Insert Range("A1:A21") = 0 With Range(Cells(22, "A"), Cells(lastRow, "A")) .Formula = "=INT(ROW(A7)/7)" '★ .Value = .Value End With For k = 0 To WorksheetFunction.Max(Range("A:A")) - 1 Cells(Rows.Count, "A").End(xlUp).Offset(1).Resize(4) = k Next k Range("A1").CurrentRegion.Sort key1:=Range("A1"), order1:=xlAscending, Header:=xlNo Range("A:A").Delete End Sub こんな感じではどうでしょうか？ ＞以降7行ごとに・・・ の解釈が違うかもしれませんが、 とりあえずはこの程度で！m(_ _)m
<div class="c1">直下の<x10>だけを取るなら //div[@class="c1"]/x10 AAAAAAAAAAAAAAAAAA を含む文字列だけを取るなら //text()[contains(.,"AAAAAAAAAAAAAAAAAA")] AAAAAAAAAAAAAAAAAA だけを取るなら //text()[.="AAAAAAAAAAAAAAAAAA")]
ファイルの改行コードを変えてみたら？
どのようにって、定期的に更新をチェックするプログラムを組んでcronなんかで定期実行する。 そこで更新されたファイルがあったらしかるべき内容のRSSを出力する。 あのね、この解答欄で終わるような説明じゃないの。 http://lancers.jp/ ここらで頼めば5,000円くらいで作ってくれる人いるんじゃない？
<?xml version="1.0" encoding="UTF-8"?> <data> ××××<a hide="hide">○○○○○<c>*****</c>○○○</a>・<a>◎◎◎◎◎<b hide="hide">●●●</b>▲▲▲▲</a>△△△△ </data> ================================== <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <test> <xsl:apply-templates /> </test> </xsl:template> <xsl:template match="*"> <xsl:choose> <xsl:when test="count(@hide) > 0"> </xsl:when> <xsl:otherwise> <xsl:apply-templates /> </xsl:otherwise> </xsl:choose> </xsl:template> </xsl:stylesheet> ============結果===================== <?xml version="1.0" encoding="UTF-8"?> <test>××××・◎◎◎◎◎▲▲▲▲△△△△</test> ===================================== * 特に指示がなかったので、c要素のように「その要素自身にはhide属性はないが、その親にhide属性がある」ような要素は内容を表示しないことにした。特に指示がなかったので、その要素の名前空間(接頭辞がない奴)以外の「接頭辞のある属性」についてはhide属性としては扱わないものとしている。(今後指示がついてもやらないけど) * 今考えると、xsl:apply-templatesのselect属性に指定するXPathで、hide属性のない要素だけが対象となるようにしてもよかったかも、とも思うがまぁいいや。
はい。従来のIEは標準でなかったので 　⇒XSLT の互換性の変更点 (Windows)( http://msdn.microsoft.com/ja-jp/library/ie/hh180 …(v=vs.85).aspx )
よくわからんけど、こういうこと？ import lxml.html root = lxml.html.fromstring(r'''<html> <body> <h2>hello world</h2> <h2>foo <em>bar</em> baz</h2> </body> </html>''') res = root.xpath('//h2') print res[1].text # foo print res[1].text_content() # foo bar baz print res[1][0].text # bar print res[1][0].tail # baz 名前空間うんぬんの件はよく意味がわからない。 HTMLを処理しようとしてるんじゃないの？ 参考URL：http://lxml.de/lxmlhtml.html#parsing-html
http://ideone.com/txHA6N
XMLDocument.LoadXMLに先立って、正規表現でも使ってスキーマの行を削除してしまえばいいのでは？ それ以前に、スキーマのとおりにXML文書が作られていないところに問題があると思いますが。
私は、firefoxですが、随分前--firefox2あたりからすでに対応しています。 　ただ、XSLTは、それぞれのXMLのルールに従っていますから、どんなXMLにも対応しているわけではありません。
XMLはマークアップ言語ですから、お好きなタグを・・ <doc> 　<situmon> 　　<danraku> 　　　これは何のタグですか？ 　　</danraku> 　　<danraku> 　　　何かユーザー定義のものでしょうか。リファレンス等で調べても出てきませんでした。 　　</danraku> 　</situmon> ・・・とか・・御随意に・・ たのしいXML: XML/XHTML入門ページです( http://www6.airnet.ne.jp/manyo/xml/index.html ) 　このあたりとか読むと良いでしょう。
スタイルシートは何をお使いでしょうか？ XSLTでしたら、 <xsl:template match="LineBreak"> <br /> </xsl:template> CSSでしたら、内容がない要素なので内容の追加は出来ませんので Linebreak+*:before{content:"\A";disp;ay:block;white-space:pre;} になるでしょう。
とりあえずは、次の画面のことはおいておいて、ボタンをクリックしたら、ボタン名をその画面のTextviewに表示してみてください。これには、ボタンに対するsetOnClickListener設定と、onClickListener内でのTextViewへのsetTeｘｔの処理が必要です。 複数ボタンがある場合、各ボタンにonClivkLitenerを無名定義して使うか、onClickListener内でどのボタンidかを識別してボタンごとの処理を行います。とはいえ、提示の要求仕様では、どっちのボタンがクリックされてもボタン名をTextＶｉｅｗに表示することに変わりはないので、まだどっちのボタンがクリックされたのかの識別までは不要だと思います。キーワード「イベントリスナー　ボタン　クリック　Ａｎｄｒｏｉd」でネット検索すれば、参考になるサイトは見つかるでしょう。画面のレイアウトxmlファイル内で、TextView, Buttonそれぞれにiandroid:idタグを設定しておくと、プログラム内からidにより属性を参照したり設定できます。これにはキーワード「findViewById　Ａｎｄｒｏｉｄ」でネット検索して使い方を確認してください。 次画面のTextViewにボタン名を表示するのは、こんなやり方です。次画面も<activiy></activity>タグを使ってAndroidManifest.xmlに追加しておく。最初の画面で、onClickListener内で、Intentを作り、putExtraで画面間でのデータ引き渡しを行い、startActivityを使う。次画面では、onCreate時にgetStringExtraなどを使い前画面でセットしたデータを取り出し、TextViewにボタン名を設定する。キーワード「Intent .properties putExtra StartActivity Android」でネット検索すれば、参考になるサイトは見つかるでしょう。 なお、独習を続ける場合、具体的なメソッド名でのネット検索はまだそのメソッドを知らないわけですから無理です。概念的な言葉で検索すると効率は落ちます。どうすればいいかとなると、上記のネット検索で見つけたサイトのＡｎｄｒｏｉｄアプリ開発情報にじっくり目を通すか、やはり一冊技術書を用意して読むのが適しています。少なくともＡｎｄｒｏｉｄ ＳＤＫ内のドキュメント類（android-sdks\docs)は読んでおかないと遠回りになります。たとえば、次画面の作成、次画面への元画面からのデータ引き渡しに関しては次のファイルに情報があります。 android-sdks\docs\training\basics\firstapp\starting-activity.html
XmlDocument doc = new XmlDocument(); doc.Load(new StringReader(文字列)); あるいは直接URLから読むのが手っ取り早い doc.Load("http://～");
http://search.yahoo.co.jp/search?b=1&n=10&ei=UTF … http://search.yahoo.co.jp/search?p=%22XML%22+%22 … ですよね。どのようなノードがあるか、階層があるのか、あなたが探る必要がありますね。 ＞値を保持してる・ http://www.atmarkit.co.jp/fxml/rensai2/xmlmaster … Xpath を理解すれば、ノードに対する考え方も、言い方も代わってくるでしょう。確かにフォーマットからすると、ちょっと違う言い方があるかもしれないが、「保持」とは変更が在ることが期待されての言葉だと思う。
<xsl:element name="img"> <xsl:attribute name="src"><xsl:value-of select="@gazou" /></xsl:attribute> </xsl:element> としてみては
<?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsl"> <xsl:output method="text" media-type="text/comma-separated-values" /> <xsl:template match="/"> <xsl:apply-templates select="Items/Item"/> </xsl:template> <xsl:template match="Item"> <xsl:value-of select="No"/> <xsl:text>,</xsl:text><xsl:value-of select="Title"/> <xsl:text>,</xsl:text><xsl:value-of select="Car/option1"/> <xsl:text>,</xsl:text><xsl:value-of select="Car/option2"/> <xsl:text>,</xsl:text><xsl:value-of select="Year"/> <xsl:apply-templates select="Images/Image"/> <xsl:text> </xsl:text> </xsl:template> <xsl:template match="Image"> <xsl:text>,</xsl:text><xsl:value-of select="."/> </xsl:template> </xsl:stylesheet>
Windows7 Home 32bit版で動いてるなら、 その動いているXalan環境フォルダごと、 たとえばUSBメモリなどにいったんコピーして、 それを、今度はWindows7 Home 64bit版の 同じフォルダ位置にコピーして、 Pathをつなげば、たぶん動くのでは？ （おそらくWindows7 Home 32bit版上で 　圧縮ファイルを解凍したものであれば、 　エラーなく動くはず・・・）
わからないときは、仕様で確認するといいかも。 「select 属性が無いときは、カレントノードの全ての子ノード」ってかいてあったよ？ 5.4 Applying Template Rules - XSL Transformations (XSLT) → http://www.w3.org/TR/xslt/#section-Applying-Temp … 「In the absence of a select attribute, the xsl:apply-templates instruction processes all of the children of the current node, including text nodes.」 だから、 select="node()" の省略とみなして、いい気がする。
> tgroup, colspec, row, entryタグはSGML用語のようです。 SGMLはXMLと同じく(正確には，XMLがSGMLを元にしたのですが)，要素などの語彙について定めはありません。 例えばHTML (2.0から4.01までとISO規格) はSGMLアプリケーションとして定義されています。 なので，なんらかの文書型にあるものなのだとは思いますが，確認した方がよいと思いますよ。 あと，ブラウザでXMLを表示するのであれば，CSSよりもXSLTによる変換を行った方がよい気がしますが……。
VBAはExcel限定、XMLは全く理解していないのですが、他の方の解答がつかないようなので思いつくところを書きます。 何のReplaceなのかよくわからないと思って見ていたのですが、本日改めて見直したところ、引数の種類と順番から判断するにどうやらVisual BasicのReplace関数のようですね。 というのは、たとえばExcelだと他にもReplaceがありますし、どのソフトのVBAなのか書いてないので判断がつきかねていました。 で、これはXMLがどうのということではなく単純な文字列置換の問題のように見えます。（なのできっとOfficeのカテゴリの方が解答がつきやすいのでは？） そういう前提での解答ですが、Visual BasicのReplace関数はそういう仕様のようですね。 なので、消える部分は別に補えばよいかと。 置換後文字列 = Replace(文字列, 対象文字列, 置換文字列 ,検索開始位置) となっているなら、これを 置換後文字列 = Left(文字列, 検索開始位置 - 1) & Replace(文字列, 対象文字列, 置換文字列 ,検索開始位置) と変更してみてはいかがでしょうか。
output method="xml" だと <element></element> は <element/> と等価だから xslt からは制御はできないよ？ そういう出力を強制するオプションを持つ処理系を使うとか。 無理やりやるとしたら xsl:comment かな？ 処理系によるけど。。。 ■ 検証用ファイル [q7574909.xml] <?xml version="1.0" encoding="UTF-8"?> <root>   <textnode>text</textnode>   <commentnode><!--comment--></commentnode>   <emptynode /> </root> [q7574909.xsl] <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0"     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="xml" encoding="UTF-8"/> <xsl:template match="/">   <xsl:apply-templates select="node()"/> </xsl:template> <xsl:template match="@*"><xsl:copy/></xsl:template> <xsl:template match="node()">   <xsl:copy>     <xsl:choose>       <xsl:when test="0!=count(node())">         <xsl:apply-templates select="@*|node()"/>       </xsl:when>       <xsl:otherwise><xsl:comment></xsl:comment></xsl:otherwise>     </xsl:choose>   </xsl:copy> </xsl:template> </xsl:stylesheet> ■ 結果(Xalan) C:\xalan-j_2_7_1>java -cp xalan.jar;serializer.jar;xml-apis.jar;xercesImpl.jar org.apache.xalan.xslt.Process -IN q7574909.xml -XSL q7574909.xsl <?xml version="1.0" encoding="UTF-8"?><root>   <textnode>text</textnode>   <commentnode><!--comment--></commentnode>   <emptynode><!----></emptynode> </root> C:\xalan-j_2_7_1> ■ 結果(xsltproc) $ xsltproc q7574909.xsl q7574909.xml <?xml version="1.0" encoding="UTF-8"?> <root>   <textnode>text</textnode>   <commentnode><!--comment--></commentnode>   <emptynode></emptynode> </root> $
B2 の直前の A1 の子要素 A2 のテキストを取得 preceding-sibling::A1[position()=1]/A2/text() でも、 [ANo.3]>『「構造を考え直すべし」という #2 の指摘には同意.』 には同意。 ■ 確認 [q7568320.xml] <?xml version="1.0" encoding="UTF-8" ?> <!--?xml-stylesheet type="text/xsl" href="q7568320.xsl"?--> <root>   <A1><A2>1</A2></A1>   <B1><B2/><B2/><B2/><B2/></B1>   <B1><B2/><B2/><B2/><B2/></B1>   <B1><B2/><B2/><B2/><B2/></B1>   <B1><B2/><B2/><B2/><B2/></B1>   <A1><A2>2</A2></A1>   <B1><B2/><B2/><B2/><B2/></B1>   <B1><B2/><B2/><B2/><B2/></B1>   <B1><B2/><B2/><B2/><B2/></B1> </root> [q7568320.xsl] <?xml version="1.0" encoding="UTF-8" ?> <xsl:stylesheet version="1.0"     xmlns:xsl="http://www.w3.org/1999/XSL/Transform">   <xsl:output method="xml" encoding="UTF-8"/>   <xsl:template match="/">     <xsl:apply-templates select="root" />   </xsl:template>   <xsl:template match="root">     <result>       <xsl:apply-templates />     </result>   </xsl:template>   <xsl:template match="A1" />   <xsl:template match="B1">     <xsl:copy>       <xsl:attribute name="A2">         <xsl:value-of select="preceding-sibling::A1[position()=1]/A2/text()" />       </xsl:attribute>       <xsl:apply-templates select="@*|node()" />     </xsl:copy>   </xsl:template>   <xsl:template match="@*">     <xsl:copy />   </xsl:template>   <xsl:template match="node()">     <xsl:copy>       <xsl:apply-templates select="@*|node()" />     </xsl:copy>   </xsl:template> </xsl:stylesheet> ■ 結果 $ xsltproc q7568320.xsl q7568320.xml <?xml version="1.0" encoding="UTF-8"?> <result>         <B1 A2="1"><B2/><B2/><B2/><B2/></B1>         <B1 A2="1"><B2/><B2/><B2/><B2/></B1>         <B1 A2="1"><B2/><B2/><B2/><B2/></B1>         <B1 A2="1"><B2/><B2/><B2/><B2/></B1>         <B1 A2="2"><B2/><B2/><B2/><B2/></B1>         <B1 A2="2"><B2/><B2/><B2/><B2/></B1>         <B1 A2="2"><B2/><B2/><B2/><B2/></B1> </result> $
//div[@class="A"]/div[@class="B" or @class="C"]/* でどうでしょうか。
http://www.w3.org/TR/xpath/#location-paths
xmllint は試した？
入手先探し回らないといけませんが次のurlで紹介されてるMSVとか http://www.atmarkit.co.jp/fxml/rensai2/xmltool05 … JavaやC#などが扱えるなら自分で作っちゃう手もあります。
external の entity は ハンドラ実装しろって、ドキュメントにかいてあったよ？ メモしてないから場所はしめせないけど。。。
ご希望に添っているかわかりませんが、僕はPerlでXMLのテキストを取得したいときは「XML::XPath」モジュールを使用しています。XPathの書き方さえわかってしまえば、簡単にループ処理なども書けて便利です。 基本的な使い方はこちらのサイトで紹介されています。 http://www.ksknet.net/perl/xmlxpath.html XPathの書き方は、こちらが必要十分な内容がまとめられています。 http://yakinikunotare.boo.jp/orebase/index.php?X … Perl本は「Perl CPANモジュールガイド」がおすすめですが、XMLのことについて特別詳しく扱っているわけではありません。 「XML::Simple」と「XML::LibXML」における基本的なパースの仕方を紹介しています。 http://www.amazon.co.jp//dp/486267108X/
[No.3] のお礼の質問に対する回答ね。 「MSVでは、OKになりますが、PHPではエラーに なります。 もし、この事情が分かるなら、教えて下さい。」 エラーを出す PHP が正しいよ。 xsd:all は、使用制限が二つあって、 1) xsd:complexType のはじめの子要素で、唯一の子要素にしかなれない。 2) xsd:all のなかで、sequence や group のようなグループ要素はつかえない。 なので、『できないけど。』ということ。
No1さんが、ほとんど説明してくれましたが、 http://search.yahoo.co.jp/search?b=1&n=10&ei=UTF … http://blog.layer8.sh/ja/2011/06/23/%E3%83%96%E3 … http://www.webproworld.com/webmaster-forum/threa … http://honyaku.yahoofs.jp/url_result?ctw_=sT,een … なんて、翻訳するとわかると思いますよ。ようはエンジンが翻訳できない、物が存在し、意味不明と言っているんですよ。書式等、そのエンジンにあった書式にしたないとだめ。 なお、エラーは汎用的な内容です。多くは、指定した物が無い、又は構造になっていない。など。エラー箇所を特定して出している物ではありません。無いから、それ以上進めないと、言っているだけです。
>http://luxnate.com/memo/2011/02/-flash30.html のページの下の方の download 欄にある fla_as2_slide_show.zip(*) を ダウンロードして、展開した ./slideshow.as をチラッと見ただけだけど、 photo.xml の XML ファイルを修正すれば 画像一枚一枚に違うリンク先をつけられるようにはなっていくて slideshow.as も修正しないと、できるようにはならないとおもうよ。 Flash と ActionScript は知らないから slideshow.as の修正できないけど、 [技術者向] コンピューター > プログラミング > XML じゃなくて [技術者向] コンピューター > プログラミング > Flash なら、 できる人がたくさんいるかも。 (*fla_as2_slide_show.zip) http://luxnate.com/memo/2011/02/17/archive/fla_a …
それだと表示されるはずです。
PHPというスクリプト言語でHTMLの中に命令を書き込めばできます。 （お使いのサーバーでPHPが実行できる環境になっていれば） simplexml_load_file(”XMLのファイル名"） などの命令を使います。 詳しくはこれらのキーワードで検索して調べてみてください。
前回の回答で、ソースコードと、どのような環境で編集（OS、ツール等）したのかなぜ問題か、少しだけ説明しておきます。今後、投稿する時のために、ある程度めぼしがつくと思いますよ。 No unserialized data available. Use XML_Unserializer::unserialize() first. をこのサイトで直訳 http://www.microsofttranslator.com/Default.aspx? … 「シリアライズ データがありません。最初に XML_Unserializer::unserialize() を使用します」 と言うことです。「XML_Unserializer」これが何者か調査してください。 http://search.yahoo.co.jp/search?b=1&n=10&ei=UTF … http://phpspot.net/php/man/pear/package.xml.xml- … http://www.okayamaweb.net/blog/archives/76 http://webtech-walker.com/archive/2007/04/060235 … ですね。unserialize()　メソッドが最初に実行されるようですね。 http://phpspot.net/php/man/pear/package.xml.xml- … で、シリアライズとはなにか？ http://search.yahoo.co.jp/search?p=%E3%82%B7%E3% … 意味はたくさんあるが、ようはエンコード、デコードする事です。ここまで解説して、なんなんですが、実は、そんな事どうでもいいんです。このエラー内容は、 「シリアライズするデーターが何も無い」 と言っているわけです。何も無いからエラーで止まったわけです。何か有る事を期待して、作成されているもので、無かった場合、何が問題なのか、本来、メッセージとして、表示すれば（解析して）いいのに、プログラムの落ち度をユーザーのせいにしているだけです。そこまで、作りこむサービスでもないのか？　と言うレベルの事です。なので、サポート側も、自分たちの落ち度をつっこまれたくないのです。 取得データーの正当性チェックに、パーサーのみで済まそうと言う、安易なつくりが、あなたを惑わせています。 ただ、カスタマイズ可能なアプリ（Webアプリを含む）の提供の場合、必ず、カスタマイズ側に条件をだしています。そう、「プログラム開発経験者」です。これは業務として（プロとして）作成経験者と言う事です。 しかし、一般公開しているサービスに、それは無いはずです（通常業務用アプリのみ）。 で思い出して欲しいのが、 http://www.okayamaweb.net/blog/archives/76 の使用体験ブログです。文字コードにえらくひっかかって、苦労しているようです。 いかかでしたか、ソースコード見ないと、なんともいえないことが、なんとなくお分かりいただけましたでしょうか。
DOMドキュメント($dom)の生成時や、コード12行までに至るまでの処理途中に問題があり、DOMドキュメントの中身が空になっているということはないでしょうか？ あと、参考URLの内容もチェックされてみてください。 ※それでも解決しない場合は、よろしければ、コードも差し支えない範囲で補足に記載されると、他の方のご回答の参考になるかもしれませんよ。 ご参考まで。 参考URL：http://atamoco.boy.jp/php5/dom/libxml_use_intern …
わかってしまえば、なんてことないんだけど、 ポイントは、値が必要な field 要素の一つ上の要素(Book)から、相対パスで field 要素を指定するところで、このとき select の条件に name 属性の条件も含めればいいだけ。 <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:output method="text" encoding="UTF-8"/> <xsl:template match="/">   <!-- 省略 -->   <xsl:apply-templates select="//Book" /> </xsl:template> <!-- csv のレコードを出力する処理 --> <xsl:template match="Book"> <xsl:value-of select="field[@name='keywords']"/>,<xsl:value-of select="field[@name='listName']"/>,<xsl:value-of select="field[@name='publisher']"/>,...(省略)..,<xsl:value-of select="field[@name='isbn13']"/><xsl:text> </xsl:text> </xsl:template> </xsl:stylesheet>
ウォッチしてみた感じだと、 strCdKaisha = xmlHeadChild.text ――とか。
TextReader を読み込む方の ReadXml() を使って、 StringReader sr = new StringReader(strXML); ds.ReadXml(sr); で直接データセットを生成できると思います。 参考URL：http://msdn.microsoft.com/ja-jp/library/c7xcc35f(v=vs.80).aspx
ifの部分だけ抜き出されてもわからないですが Java6のXSLTプロセッサで以下のXSLT動きますよ。 <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <xsl:if test="//value = 'aiueo'">exist "aiueo"</xsl:if> </xsl:template> </xsl:stylesheet>
Firefox は対応してないよ？ XML in Mozilla - MDN Docs https://developer.mozilla.org/ja/XML_in_Mozilla | DTD に関する用語と他の外部実体 | | Mozilla は Web から外部実体を読み込みません。 IE 9 はいま確認できる環境持ってないからわからないけど、 すくなくとも IE 8 は外部実体をサポートしてるよ。 [a.xml] <!DOCTYPE root [ <!ENTITY b SYSTEM "b.xml"> ]> <root>&b;</root> [b.xml] <b>b element</b>
in C# var doc = XDocument.Load(uri); // uri : XMLを指すURI MSDN: XDocument.Load メソッド (String) (System.Xml.Linq) http://msdn.microsoft.com/ja-jp/library/bb343181 …
あなたの場合は、Webサイトや解説書を読んで理解できる程度の読解力を付けることだと思います、 できるだけ自分で解決しようとしない人に、システム構築なんて無理です。 または、仕事をするなりしてお金を用意すること。 多分、自作にかかる期間を金を稼ぐのに使えば、十分に高性能なシステムを購入できるでしょう。
一番手っ取り早いのは MSXML を利用することでしょう。 似たような質問が MSDN のフォーラムにありましたので参考にしてください（ちゃんとそのページにあるリンクの先も読むこと）。 多分コードを書いていてにっちもさっちもいかなくなるかもしれませんが、その場合の質問先はC/C++カテゴリのほうが適切と思われます（あくまでもMFC/MSXMLに直接関係のあることだけですよ）。 参考URL：http://social.msdn.microsoft.com/Forums/ja-JP/vc …
http://oshiete.goo.ne.jp/qa/6936244.html
検索しなさいよ。 http://search.yahoo.co.jp/search?p=TubeFireTools …
むずかしく考えずに、簡単になら、ブラウザだけあれば、 操作できちゃう仕組みがクラウドの醍醐味。 エクセルを使うならエクセルをパソコンにインストール するよね？ そういうのを、ユーザーが意識しなくていい。
自ら正すつもりが無いようなので、通報しておいたよ？ [違反項目]:カテゴリー違い 『この回答者は、カテゴリーを無視して質問し続けています。 今回の質問は、「XML」との関係はありません。 カテゴリーは「プログラミング」が妥当です。』 そのうちカテゴリーが適切なところに移動するとおもうから、回答もつきやすくなるかもね。
表示はそのXML文書に対していかなるスタイルシートを使うか，という問題なので，XML文書側ではどうしようもないです。 ただし，改行を含む空白文字をそのまま取り扱うことを要求したいのであれば，xml:space属性を使うべきです。 これだけXMLカテゴリで質問しているのですから，仕様書の http://www.w3.org/TR/xml/#sec-white-space を見逃しただけだとは思いますが。
> グローバルな環境 何についての「グローバルな環境」か補足してください。 「グローバル」は、いろんな場面で使われているので、これだけではわかりません >メディア 何の「メディア」か補足してください。 「メディア」は、いろんな意味で使われているので、これだけではわかりません > 次のキーワードを用いて教えてください なんか、うさんくさいITベンチャーのうさんくさい宣伝文句になりそうですが。 > クラウドコンピューティング 何度も同じ質問してたようですが、理解できました? 理解してない言葉で教えてもらっても混乱するだけでは? 資格試験かなんかの穴埋め問題みたいですが、もしそうなら、その問題集の「解答」を見てください。 それと、XMLとの関係はなんでしょう?
補足してください。 ・元の数は何進数？ ・最初に加える数は「164」or「164h」？ ・なぜ、このカテゴリ？ 16進数どおしなら、Windowsの電卓でも計算できますけど…。
流行語です　意味は　とくにありません
確認ですが， Flash で JavaScript を動作させるとか その他の場所で JavaScript を スクリプト として利用するとか そういうレベル(そういう段階)の話ではなくて 単に XML としての文字列データを作る話ですよね？ それだと単に 「キッチリと書く！」 ということが大切です。 そもそも最初の HTML入り ノードの方もできていませんよ。 うまくできてないものの通りをしても うまくできないのは当然です。 <pageText>～</pageTextt> 明らかに↑開始タグと ↑終了タグが違ってるでしょう？ 「キッチリ」しましょう。 ！[CDATA ↑「!(半角)」ではなく「！(全角)」になってますよ。 「キッチリ」しましょう。 XMLとして受け入れられる例(単なる一例)です↓。 ---------------------------------- <?xml version="1.0" encoding="Shift-JIS"?> <page> <pageText> <![CDATA[ <b> <a hret="aaa．html" target="_blank"><u>コチラ </u></a> </b> ]]> </pageText> <pageText> <![CDATA[ <b> <a hret="aaa．html" oncliick="window．open（'aaa．html', '_blank', 'width=200.height=200'）; retun false;"><u>コチラ </u></a> </b> ]]> </pageText> </page> ---------------------------------- ↑保存したXMLファイルを IE や Firefox で開いてみて 　 XMLとして認識(表示)されるかどうかを確かめるのが 　 手っとり早い検証方法です。 ↑★注意★ 　XMLとしては認識(表示)されると思いますが 　ドットが 「．(全角)」 のままになっているとか 　JavaScript が スクリプト として動作するかなど 　そんなことは知りませんよ。 　XML の問題 と JavaScript の問題とを 　一緒くたにしてはいけません。 　「問題の切り分け」が大切です。 　問題を作り出す根源(キッチリしてないところ)は 　同じように思えますけどね。。。 ※P.S 　 XML以前の話です。 　 「日本語の質問文」も改行を入れていらっしゃらないので 　 ものすごく読みにくいです。 　 改行省略の限度を完璧に超してますよね？ 　 自身で読んでも「ワケワカラン！」状態でしょ？↑ 　 そのようなものでは 　 最初から他人に自分の意思を伝える気はなくて 　 ただダラダラと書いたどうでも良い質問 　 と見られる可能性が高いですよ。
質問自体がナンセンスです。 XMLはマークアップ言語のためのメタ言語なので，スキーマが決まらないとそこに入る要素や属性は決まりません。 XMLにJavaScriptを埋め込みたいのであれば，スキーマに沿って埋め込んでくださいとしか言えません。 HTMLとXMLを対比させるような記述がありますが，HTMLを基準として対比するならばXHTML， XMLを基準として対比するならばSGMLでないと，異なる目的のものを対比していることになります。
参考URLの「バージョン」の項にある表の「おもな新機能と変更点」の列を、バージョン1.6から2.2まで見てください。 あと、この質問をするならXMLカテゴリではなくデジタルライフ→携帯・PHS→Androidカテゴリで聞いたほうが回答がつきやすいと思います。 参考URL：http://ja.wikipedia.org/wiki/Android
そろそろ関係無いカテゴリーに投稿するのやめませんか? MS Officeも、数学も専用のカテゴリーがありますよ。
「初心者でもわかりやすいWEBとかありました」ってんだったらそれを見ればわかるはずでしょ? 「詳しく教えてください 」なんて聞く必要もない. 全く関係ないところで聞くような奴には理解できんかもしれんがな.
３年以下の懲役又は、個人の場合300万円以下の罰金、法人の場合は１億円以下の罰金 あと民事での損害賠償は内容次第でしょう
Extensible Markup Language
RSS自体，XML形式です。 ただし，ブラウザがRSSの表示方法として独自のスタイルシートを当てるため， 単純なXMLと異なる様に見えるだけです。 なお，RSS1.0とRSS2.0は別物 (新旧関係にあるわけではない/RSSの元の語も異なる) なので，それぞれ異なる方法で記述されています。 RSS 1.0だと， /{http://www.w3.org/1999/02/22-rdf-syntax-ns#}:RDF/{http://purl.org/rss/1.0/}:item/{http://purl.org/rss/1.0/}:link が各記事のURL， RSS 2.0だと， /rss/channel/item/link が各記事のURLになります。 # 名前空間プレフィックスの代わりに名前空間を直接{}内に書いています。 Site: RDF Site Summary (RDF) 1.0 http://web.resource.org/rss/1.0/spec Site: RSS Best Practices Profile http://www.rssboard.org/rss-profile
簡単に説明するので語弊があるかもしれまんせが インターネット上にアップされているサービスで、データの保存やシステム管理などを全てサーバー側で行っているものです。 クラウドとは雲なので、ネットを雲とみたてて雲の上に存在するシステムと言う事になります。 通常は各自のPCにインストールなりデータ保存なりしますが、各自のPCで一切データを管理せずにネット上だけで利用出来るサービスですね。 一般的にはレンタルブログやフリースペース、SNS、動画サイトさらに最近ではウイルスチェック、オフィス、OSなどもクラウドタイプが存在します。
キーワード「XMLスプレッドシート」でGoogle検索すれば，具体例を挙げた解説ページが最上位にヒットします。
SVCってなんですか?検索したのですが、XMLともブラウザとも関連のありそうなものが見付かりませんでした。
＞ もうちょっと詳しく教えてください どうのようなことについて詳細化してほしいのか、質問内容を具体的に書いてみては。 そのほうが回答が得られやすいと思います。 （たとえば、「操作とは、この場合何を指しているのか」とか。）
同じ質問を何度も見てるような気がしますが… クラウドコンピューティングは、以前はネットワークコンピューティングと呼ばれていた技術です。 企業など多くのパソコンを管理する時、すべてのパソコンのアプリケーションのバージョンアップに一台一台アップデートする必要がありました。 それを一元管理する為にサーバーにアプリケーションを置いておき、パソコンはネットワークごしに使うのが最初でした。 その当時はアプリケーションはサーバーのアプリケーションを、作成したファイルの保存はパソコンのハードディスクでしたが、ネットワーク上にファイルを保存できるようになって今のようなクライドコンピューティング技術になりました。
昔は一つの大きなシステムに全処理を任せてて、徐々に分散システムになって、そのシステム達がインターネットという網目で見えにくくなり、やがて雲に包まれてサーバーの存在がわかりにくくなった。ユーザーはサーバーを意識しなくなり、大きな雲の中から情報を引っ張ってくるクラウドコンピューティングが成立した。 という感じでどうでしょう？
私見ですが、基本はWEB全体を一つのデータベースととらえて、 同じ性質のものに統一の名前や定義をつけていくというくらいものだと思います。 また、ユニークな名前にしておくことで、 後々似たようなデータと合わせて使うことになっても、 取り出すデータを区別できます。 つまり、同じxmlnsをつけたものは機械的には共通の意味合いの値が入っていると仮定して処理します。 ただし、様々な人が作りますから100％規格を守るという保証は全くありませんが。 titleタグなどは多くのXMLで使いますし、 どこどこの住所にいるtitleさんという形で呼び出さないと特定できないですし、 WEB上の全てのデータから機械的にデータを収集するときには具体的な名前があるのは便利です。 話が大きくなればなるほど名前空間が大きな意味を持ってくると思います。 ただ、個人レベルで使う分には混在する可能性は低いどころか、 むしろ呼び出すコードが面倒になるだけなので、 何のためにあんな長い名前をつけてるのか疑問になりますよね。 それでも下記の2個目のURLのようなことがよく起こるとのことです。 ▼参考URL XML名前空間の簡単な説明 http://www.kanzaki.com/docs/sw/names.html XMLの常識 名前空間の基本 http://www.infoteria.com/jp/xmlnote/column/doc/x … XML用語事典 [XML名前空間] http://www.atmarkit.co.jp/aig/01xml/namespace.html XML 名前空間 http://gogodiet.net/z/xml/6.htm 質問とずれていたらすみません。
もしかして、「コンピューティングパワー」? もしそうなら、「McGraw-Hill Dictionary of Scientific & Technical Terms」第6版・2003年・米McGraw-Hill社によると、 The number of operations that a computer can carry out in 1 second. (ある計算機が1秒間に実行できる操作の数) ――だそうで。まあ妥当な定義かと。 一応「コンピューターティングパワー」で検索： http://www.google.co.jp/search?q=%22%E3%82%B3%E3 … ※0123456zwwさんの質問自体は除いてます。 参考URL：http://www.mhprofessional.com/product.php?isbn=0 …
Google で「DTD」と「説明」の 2つのキーワードを使って検索。 http://www.google.co.jp/search?q=DTD+%90%E0%96%BE ちなみに、ここで質問しても、Google で検索したページより、 質問者さんにとってわかりやすい回答があるとはおもえないよ？
[ANo.2] の訂正ね ×「まともな解説書よりもわかりやすい」 ○「まともな解説書よりも、質問者さんにとってわかりやすい」
CALSは初めての人にはやっかいな物ですね。 ですが、少し落ちつて質問しましょう。 支離滅裂で何を質問しているのか分かりませんよ。そのくらいは考えて投稿する余裕を持ちましょう。 で、データは何を使って作成しているのですか。 エラーメッセージ（と思われる）文章からすると、基準（案）に沿った作りになっていないと思います。 　・どの基準に合わせてデータを作成するのか。また作ったのか。 　・データを作成しているソフトは何を使用しているのか。 面倒でも最低でもこの二つを補足してください。 作成しているソフト次第で操作や設定が変わってきますから、これらの情報が無いとどうにもできません。 （工事完成図書の電子納品要領(案)に準拠する必要があればそれを、 　メモ帳で作成しているのでしたら、メモ帳と補足してください。） ちなみに、どの基準に準拠すればいいのか不明な場合は納品先の担当者に基準について確認しましょう。 （工事写真や CADデータなどに不備が発生するかもしれませんが、その時も担当者へ連絡して相談しましょう。） なお、自分が補足に対して回答をできるのは12時間以上後になりますが、 補足を見た他のかたからアドバイスや回答をいただける可能性があります。
orietation... nが足りないような。
「パソコン」のは無いです。 それぞれのソフトで違います。
機械翻訳？ 質問文修正。 | インターネットに公開されている RSS を参考にして、 | 自分で RSS 文書をつくってウェブサイトに公開してみのですが、 | googleリーダーを使って見てみると、日本語部分が文字化けしてしまいます。 | | encodingは、できるだけシフトJISにしたいのですが、 | どうやったらできますか。教えてください。 一行目の | <?xml version="1.0" encoding="utf-8"?> の部分を | <?xml version="1.0" encoding="Shift_JIS"?> に変更してみて！
>if文やfornextはないのですか詳しく教えてください ある意味、欲しいことがあるかもしれませんが・・・マークアップ言語の発想からは必要性が薄いということで実装されているのは少ないと思います。 TeXも代表的なマークアップ言語でTeXにはif文ありますが少数派ですね。 TeX入門/マクロの作成 http://oku.edu.mie-u.ac.jp/~okumura/texwiki/?TeX …
いろんな場面で使われる言葉です。単語だけ取り出されても答えられません。 まずは、辞書をひきましょう
http://calil.jp/doc/api_jsref.html この辺をぐぐってください。つまりクラス（擬似）に在るメンバーを使うとできるような事がサンプルになっていますよね。 わかります？　わからないならあきらめてください。 私は、それを使っていもいなし、この投稿で初めてしりましたが、全部を見ていませんが、２ページ程度見ただけで、概要は分かりましたよ？ 開発者レベルでJavaScriptの達人レベルか、C++やJavaなどの開発経験があり、XMLでアプリが組める方なら、数分で分かるレベルの物です。 逆に言えば、それらの方対象です。
utf-8 ファイルのデータの先頭に EF BB BF がはいちゃってるからかな？ 処理系によってもちがうけど、xslt をふくめて xml ファイルは、xml 宣言の前にどんなコードがはいることも許さないから、それに引っ掛かったのかも。 http://www.w3.org/TR/2008/REC-xml-20081126/#NT-p … Windows のメモ帳だと必ず先頭文字列が入っちゃうから、他のテキストエディタで、保存方法を指定して先頭文字列が入らないように保存ね！
質問の中の XML が整形式 XML 文書(※1)になってないから、適当に、修正しておいたよ(↓xmldoc.xml)。 (※1 整形式 XML 文書) http://ja.wikipedia.org/wiki/Extensible_Markup_L … [xmldoc.xml] <?xml version="1.0" encoding="utf-8"?> <?xml-stylesheet type="text/xsl" href="xslt.xsl"?> <RootNode>   <Menulist>     <Menu No="1" Item="3" Time="100"/>     <Menu No="2" Item="1" Time="60"/>     <Menu No="3" Item="1" Time="120"/>     <Menu No="4" Item="2" Time="10"/>   </Menulist>   <Setlist>     <Set No="1"><Name>Push Up</Name></Set>     <Set No="2"><Name>Run</Name></Set>     <Set No="3"><Name>Swim</Name></Set>     <Set No="4"><Name>Squat</Name></Set>   </Setlist> </RootNode> たぶん html 文書を出力したいんだとおもうけど、html タグかくとごちゃごちゃして、ポイントがわかりづらくなるからテキスト出力にするね。HTML 出力したいときは、必要なところに html タグ追加して完成させてね。 [xslt.xsl] <?xml version="1.0" encoding="utf-8"?> <xsl:stylesheet version="1.0"   xmlns:xsl="http://www.w3.org/1999/XSL/Transform">   <!-- 出力が html のときは↓も↑に含める   xmlns="http://www.w3.org/1999/xhtml" --> <xsl:output   method="text"   encoding="utf-8"   media-type="text/plane"/> <!-- 出力が html のときは↓を使う。   doctype-public="-//W3C//DTD XHTML 1.1//EN"   doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"   media-type="application/xhtml+xml" --> <xsl:template match="/">   <xsl:apply-templates select="RootNode/Menulist/Menu" /> </xsl:template> <xsl:template match="Menu">   <xsl:variable name="no"><xsl:value-of select="@No" /></xsl:variable>   <xsl:value-of select="$no" />   <!-- ↓出力が html のとき xsl:text 要素はらない -->   <xsl:text> </xsl:text>   <xsl:value-of select="/RootNode/Setlist/Set[@No=$no]/Name" />   <!-- ↓出力が html のとき xsl:text 要素はらない -->     <xsl:text> </xsl:text> </xsl:template> </xsl:stylesheet> xslt だけど、とりあえず下のタグだけ覚えておけば、簡単なのはかけるようになるから、気が向いたらしらべてみて！ - stylesheet - output - template - apply-templates - value-of - variable - element - attribute - copy ちょっと複雑なことする場合は、これが必要になるかも。 - for-each - sort - call-template - with-param - param - copy-of - if - choose - when - otherwise 正典 http://www.w3.org/TR/xslt 関数型の美しさに魅了されると手続型のちまちまがだるだるでいやいやだから覚悟しておいて！
> HTMLとXMLの用途が違うのはわかったのですが、なんとなく言語体系が似ている気がするのはなぜでしょうか？ XMLはSGMLのサブセットであり、 HTMLはSGMLを参考に作られたものだから。 SGMLって何？とかは調べればすぐわかると思うので割愛。
パソコン初心者です。 単純に出力される所を変更すればいいだけの様なきがするので 以下ではダメでしたか?普通はためしましたよね?? <![CDATA[<head>Hello</head>]]>を <![CDATA[<head>こんにちは</head>]]>じゃだめですかね？ （日本語的には「こんにちわ」ではなく「こんにちは」です） 試していた場合はすいません…
　プログラムを作るとか、パッケージソフトを探すにしても、こおいった事をやる場合、まずは、Macは止めて、Mac環境のlynuxとか、いっそのことWindows環境に切り替えた方が幸せになります。
TreeViewで試してないので自信なし。 例外出るの。 https://ideone.com/fQ04I こうすると出ないの。 https://ideone.com/e3HEI
>読んでくれるでしょうか。 おそらく読み込んではくれないでしょう。 スキーマを読むとsitemapindex要素はsitemapindex要素を子に持たないようなので。 http://www.sitemaps.org/schemas/sitemap/0.9/site … #もちろん俺のせいじゃないがな。
HTMLもXMLも根っこは同じSGMLで構造化言語です。 XMLもきちんと構造化されていないと、ちゃんとしたHTMLが出力できません。 書かれているHTMLも酷いです。 たくさんの花を並べて比較するのでない限り、TABLEでマークアップすべきではないでしょう。 また<br>は強制改行で、この様な文が変わるとき(段落)のマークアップに使うものではありません。<th>は表の見出しですし、<td>はそれに関係したコマです。 また、HTMLの文法としては誤りではありませんが、直接文を入れるのはおかしいです。 <xml> <document> 　<title>花言葉</title> 　<subtitle>彼岸花</subtitle> 　<alias><word>曼珠沙華</word></alias> 　<caption> 　　<pargraph> 　　　ヒガンバナ科ヒガンバナ属の多年草。別名「曼珠沙華」という別名があるのは有名だが、他にも呼び名があるのは知られていない。 　　</paragraph> 　　<paragraph> 　　　ただ、その名前が「地獄花」、「捨子花」などと縁起でもない名前ばかりである。<br> その中でも何故「はっかけばばあ」という呼び名があるのかは疑問である。 　　</paragraph> 　</caption> 　<floriography> 　<word>情熱,独立</word>再会,あきらめ,悲しい思い出,想うはあなた一人,また会う日を楽しみに</word> 　</floriography> </document> </xml> とか、これをDOMで見るときちんと階層になっている document 　|-title 　|-subtitle 　|-alias 　|-caption 　|　　|--paragraph 　|　　|--paragraph 　|-florigraphy 　　　|--word 　　　|--word その上で、HTMLにするのですが、マークアップは <h1>花言葉</h1> <h2>彼岸花</h2> <div class="article"> <p> ヒガンバナ科ヒガンバナ属の多年草。別名「曼珠沙華」という別名があるのは有名だが、他にも呼び名があるのは知られていない。 </p> <p> ただ、その名前が「地獄花」、「捨子花」などと縁起でもない名前ばかりである。<br> その中でも何故「はっかけばばあ」という呼び名があるのかは疑問である。 </p> </div> <p class="florigraphy"> <word>情熱,独立</word>再会,あきらめ,悲しい思い出,想うはあなた一人,また会う日を楽しみに </p> とか。 XMLより前に、HTMLでよいですから、きちんと文書構造に従ったマークアップ 　　<div style="font-weight:bold"> 　　　彼岸花 　　</div> は明らかに間違ったマークアップ <h2>彼岸花</h2> ですね。 もっとも重要な部分を抜かして、HTMLましてやXMLなんて無理です。 たのしいXML: XML/XHTML入門ページです ( http://www6.airnet.ne.jp/manyo/xml/index.html ) ここにとても良いマニュアルがあります。 構造化とは何かからはじめるべし!!
おそらく無理。 メモ: ●一応XML Schemaにはそれっぽい仕組みがあるようだ。XML SchemaもRELAX NGも勉強してないので自信はない。 試しに、https://cid-b89cb784f5346675.office.live.com/bro … XML Schemaにschema.xsd,XML Instanceにvalid.xmlを指定して、結果を見るとValidと言われ、XML Instanceにinvalid.xmlを指定すると、「Duplicate unique value [1] declared for identity constraint of element "Top".」と言われるからチェックされているように思う。 http://tools.decisionsoft.com/schemaValidate/ ●無理な理由は簡単。IEはDTDの妥当性検証を行うことはあっても、XML Schemaの妥当性検証は行わないorz
適当な情報を提示しまして申し訳ありません。 単純にloadXMLしただけでは、パーサーを通るときにエラーになってしまうようです。 また、DTDのファイルも探しに行ってしまうようです。 さらに、DOCTYPEのみのXMLではだめで、何らかの本文も必要なようです。（<abc>1</abc>の部分） 簡単に検証しましたが以下のコードではなんとなくうまくいっているようです。 doctypeプロパティなどでDOCTYPEが取れるので良いように思うのですが。。。 ちょっと無理やりのようにも思いますので要件に合うかわかりませんが、参考になればと思います。 研究してみて下さい。 ---- Dim Str As String Str = "<!DOCTYPE BookList SYSTEM ""Title.dtd""><abc>1</abc>" xmlDoc.async = false xmlDoc.resolveExternals = false xmlDoc.validateOnParse = false If xmlDoc.loadXML(Str) <> true Then WScript.Echo "エラー" xmlDoc.Save "C:\_Books\Title.xml" ----
差し支えなければ、ここに生成したKMLファイルの中身を載せられませんか。
JAVA言語だと思います。（注意：javascriptでは無い）
よくわからない質問ですが、ルート要素が複数あるって事ですか？ それはだめですよ。 <xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE ルート要素名[....]> <ルート要素名> <content> －－－－－－－－－ </content> <content> －－－－－－－－－ </content> </ルート要素名>
表計算ソフトかCSVファイルで十分な場合もありますよ。 フリーソフトもありますし。 http://ja.wikipedia.org/wiki/Gnumeric > 比較するためにグラフに可視化もしたい > フリーのデーターベースソフトはありますか？ SQLiteでも良いですが、データベースが必要でしょうか。 直接表計算ソフト使った方が手軽な気がします。 ※データベースが必要ならデータベースソフトも使いましょう。 http://yumi-ii.squares.net/archives/2009/09/2009 … 表計算ソフトのグラフ化機能はSQLite使っても使えますし。
Googleが公式に公開している取得方法じゃないので、 オリジナルなGoogle News検索を作りたいなら↓を使って、 http://code.google.com/intl/ja/apis/newssearch/ News検索サイトを作っちゃいましょう。
ご参考に http://support.microsoft.com/kb/918429/ja
「動的に」ってどのような意味（局面）ですか？ 使用されるツールとかプログラミング言語は決まってるんですか？ 変更した後、当然、保存もするんですよね？
フィード（RSS）のパース処理ですね。 javascriptベースで、APIサービス使うなら、 「Google　AJAX　Feed　API」で出来ます。 http://code.google.com/intl/ja/apis/feed/v1/ それとも、サーバーサイドのプログラムを作りたいという質問かな？
「CSSファイルの一番上に　@import "http://";」 の方法ですが、昔のある特定のブラウザーの話じゃないでしょうか？ 試してみたところ、IE8でもFirefoxでも効果はありませんでした。 ちゃんと保存できてしまいました。
日本のパソコンはほとんど、バックスラッシュの文字コードに￥を 当ててます。表示（フォント）の形が違うだけですから、弊害はありません。 　ゴシック体フォントと明朝体フォントで、表示されている文字の形が 違っていても、処理的には同じである事と同様です。 　どうしても、変えたいならデフォルトのフォントを変える必要があります。
何度かやったことがありますが、サイトマップの形式は、googleと同じ型式で大丈夫みたいですよ。操作方法は、画面に説明がでていますから説明はいたしませんが。。
<xsl:variable name="bbb" select="$aaa/*[name() = $ccc]/ccc"/> で、取得できませんか？ ちなみに変数cccに格納されているがエレメント名の場合のみになります。
＞この紫のバーは、とても凝っている構造でしょうか？ 凝っているか凝ってないか？感じ方は人それぞれだと思うのですが、それなりに凝っている方ではないでしょうか？ 色や形は単純に CSS で制御しており、動作は javascript で制御していますね。 それでも作成するには物凄く高等な知識が必要か？と言われればそんな事は全然ありません。 スタイルシートに関してはテンプレート配布サイトなどがありますので気に入ったデザインがあれば丸写しできますし、javascript に関してもフリーで公開されているライブラリがそれこそ星の数ほどありますので、ゼロから作り上げる知識がなくとも作成する事は充分可能です。 やる気さえあれば。 ＞サムネイルを作って、その画像をクリックしたら、画像を見れる様にしたいのですが・・ ＞この方の言っている通りに行えば成功するでしょうか？ 成功します。だからまずは実際に自分で作業してみましょう。 こういう質問サイトには『まず自分でやってみて、それで上手くいかない。原因を調べてみたが自力では突き止められない』という場合に質問してみるものです。 初心者である、という事はなんの免罪符にもなりゃしません。 あとこれはどうでも良い事かもしれませんが、ここは XML に関する質問を書き込むスレですので、あなたの質問は全くカテゴリが違いです。
http://cid-b89cb784f5346675.office.live.com/brow … 字数が足らんのでファイルをひとまとめにしておいた
http://w4ard.eplusx.net/translation/W3C/REC-xml- … Firefoxは非検証XMLプロセッサとして、IEは検証XMLプロセッサとして動くのでしょう。 ><!ELEMENT members (member)*> >と書くのと、 ><!ELEMENT members (member*)> BNF的には違うものでしょうが、意味するところは同じだと思います。 http://w4ard.eplusx.net/translation/W3C/REC-xml- …
●エラーの内容としては見ての通り。 ●Yahoo!がデータを作成するときに正しいコードを作らない のが最大の原因(元のブログで提供されるデータは正しいのに…)。だからYahoo!に文句言うのが正しいが、問い合わせフォームが見つからない。Yahoo!を恨みながら諦めるべし。 ○ブラウザ等のユーザーエージェントが勝手に補正しやがる。 ○「補正しないべき」って考える自分にとって「補正してなんとか読みたいのですが、どうしたらいいですか？」とか聞かれたりしたらイライラする。聞くなよ？
意味処理。意味を処理する。意味とはデータという事でしょうかね～。 とりあえずXML は、HTML とは違ってデータを格納する事をだけを目的としています。ツリー状のDOM 構文を形成しています。 具体的には、アドレス帳とかデータベースに代えて使われてます。 XML はXSL で処理する事でHTML にできます。もしかしたらそれが意味処理になるんですかねー。もしかして「意味処理」って、先生の直訳（誤訳）だったりしてｗ
preceding-sibling::*[1][aaa] <a> <b xml:id="x0100"> <aaa id="x0101"></aaa> </b> <b xml:id="x0200"> <aaa id="x0201"></aaa> </b> <c xml:id="x0300"/> </a> 現在c要素を指しているとすると 要素名関係(*)なくpreceding-siblingを取って来る。その時の順番はreverse orderであるから preceding-sibling::*[1]/@id は x0200 preceding-sibling::*[2]/@id は x0100 です。 その1番目の要素、つまりx0200の要素(ここまで今回はたまたま1個しかない条件)の中で 「aaa要素を子要素として持つ」という条件を満たすものです。= x0200の要素は条件をみたすのでこれが選ばれる。 preceding-sibling::*[1][self:aaa] 名前空間接頭辞selfに関連付けられた名前空間のaaa要素を子に持つ、という条件をみたすかどうか、という条件に変わっただけです。 ちなみに、 preceding-sibling::*[1][self::aaa] はx0500の要素から見て、0x400の要素です。 preceding-sibling::*[1]自身の要素名が名前空間なしのaaaですから。 <a> <b xml:id="x0300" /> <aaa xml:id="x0400" /> <c xml:id="x0500"/> </a> preceding-sibling::*[1][name()='aaa')] は構文エラー preceding-sibling::*[1][name()='aaa'] は最後の条件が「コンテキストノードのQNameが'aaa'」ということでpreceding-sibling::*[1][self::aaa]と同じ結果になるでしょう。 #厳密には[]でくくられたPredicateはnodeからbooleanへの変換がかかっていると思うけどね。 http://www.w3.org/TR/xpath/#predicates #QNameって何？とかコンテキストノードって何？って聞かないでね。
RSSを取得して表示するページならいくらでもあると思います。 ↓などはニュース関係を集めたページですね。 http://www.fnf.jp/news_i.htm 個人利用ならiGoogleなどを使えば、自分だけの更新情報のページが作れます。 RSSが無い時代には、ターゲットのページをHTTPアクセスして変化を調べて表示するなんてものもありました。 はてなアンテナなどはそんな感じです。 今はRSSを読むのが一般的だと思います。
宿題の質問に丸投げ回答はちょっと．．．． フルスクラッチで自分で作れないなら、インターネットでAJAXとかの入門 サイトを幾つか回って、使えそうなやつをまるまるコピーして、理解する努力 だけはしましょう。何もしないよりは、ましです。
PHPのDOMDocumentの処理は、UTF-8でないとうまくいかない場合が多々あります。 mb_internal_encoding("UTF-8"); mb_http_output("UTF-8"); mb_language("ja"); も明示的にセットしましょう。
#1です。 Seesaaブログにはありますが、FC2ブログにはsitemap.xmlを吐き出す機能がなかったと思います。 なのでご自分でsitemap.xmlを作り、画像をアップロードするようにxmlファイルをアップロードするしかないのかな？と思います。 そしてアップロードしたsitemap.xmlのURLを、ウエブマスターツールにてサイトマップ送信すればいけるかな？と思いますよ。
http://msdn.microsoft.com/ja-jp/netframework/ff6 … を参考にすると TextBox 単位でしか 前景色・背景色の指定ができないみたいですね。 そうすると、こういう方法↓で逃げるとか。 <TextBox Margin="0,0,0,0" VerticalAlignment="Top" Height="25" Text="始めまして、　　　　　　　　　　　です。宜しくお願いします。" TextWrapping="Wrap" Foreground="black" Background="Transparent" /> <TextBox Margin="60,0,0,0" VerticalAlignment="Top" Height="25" Text="【Goo太郎】" TextWrapping="Wrap" Foreground="red" Background="Transparent" />
プログラムはSAXですか？DOMですか？ あるいはXSLTとか？ どんなプログラムなのか書かれていないのでわかりませんが 処理するのはプログラムなのでXMLに罪はありません。 XMLは単なるテキストですからそれ自身がどうこうということはありません。 そんなわけで >こういう”いくつかわからないけどデータがある”ような場合、XMLではどのように記述すれば良いかご教授願えますでしょうか。 別に質問内容通りのXMLの書き方で特に問題は無いです。 （まぁ私なら 　<place name="渋谷"> 　　<time>0</time> 　　・ 　　・ 　とか 　<place> 　　<name>渋谷</name> 　　<event> 　　　<time>0</time> 　　・ 　　・ 　とかにしますけど。まぁこんなのは好みの問題です。） ひとつしか取らないのなら、プログラムのロジックがひとつしか取らないようになっているんだと思います。 例えばDOMを使っているのならgetElementsByTagName("time")とかで リスト形式で取れるはずです。 もちろん書き方は開発言語とかにもよって違ってきますけど。 おそらく渋谷は渋谷でtimeを取得したいでしょうし、 sundayはsundayで取得したいとかあると思います。 そんなわけでXQueryとか取れるメソッドを使って取ってくることも多いです。
CALS/ECですか？ 電子納品ということですので、まずはどの要領・基準に準拠する必要があるのか確認しましょう。 （契約書や設計書に記述がない場合、事業体のサイトに記載があるかもしれませんので確認しましょう） 次に電子データを作成したソフトが、準拠すべき要領・基準に対応しているかを確認です。 （XMLファイルをメモ帳で開き、最初の方にあるコメントを読んでください。そこに記述されています） 受注を受けた時点で最新の要領・基準での作成が基本ですので、準拠していない 電子データは対応外とされてしまうのかもしれません。 受注を受けた後で要領・基準が更新された場合、監督員から要請がない限り受注した時点での 最新要領・基準で電子データを作成する必要があります。 監督員に相談してみてはいかがでしょうか。 …今日は日曜日か… 事業体によってはローカルなルールを持っていることがありますので、納品先の担当者に確認するのが確実だと思います。 外注業者にクレームを付けるのを忘れずに！
<link>[エントリーのアドレス]<link> はlink要素が閉じていない。 <description><[エントリーの紹介文]></description> [エントリーの紹介文]から置換されるべきdescription要素内の文字列はタグの名前ではない。 もし何らかのタグだったとしても閉じられていない。 つまり、このRSSフィードはRSS2.0のスキーマに適合していないどころか整形式ですらない。 使っているRSSリーダーがXMLの構文エラーを報告していないか確認を。 RSSに限らずXML文書は人間が直接テキストエディタで扱うことに適したものではない。 短い文書でも間違いが入る時には入るので、コンピュータに自動生成させるか、 マニュアルで扱わざるを得ない場合でもXMLエディタなどの使用を勧める。
自信なし ($xml->posts->post->photo) - (url[0]); っていう引き算だと解釈されているのかも
ギブアップ。諦めた方が良い DOMはおそらく設計的にテキストファイルとして扱うことを前提としてない。(#わざわざ行番号を使って何をしたいんだろう？とは思うのだけれど) で、SAXを眺めてたらISAXLocatorに、linenumberがあるから出来るかな、とか期待したんだけど、 http://msdn.microsoft.com/en-us/library/ms753775 … Javaのマニュアルにあるように http://java.sun.com/j2se/1.5.0/docs/api/org/xml/ … ソースコードの厳密な行番号を与えるものではなく、あくまでデバッグ目的用に曖昧な番号を示すものであり、少なくともMSXMLは以下のように、属性区切り子に改行を用いたXMLの、要素の開始行番号を期待通りに返さなかった。 <data> <item id="hoge" kekeke="gag">○○○○</item> <item id="fuge"> <item id="fuga"> ×××× </item> </item> <item id="gura">△△△△</item> </data> =================試みたこと(役に立たないけど関心があれば)============ 実行するまでは上記の挙動であることに気付かず、実装してやろうと悩んだ。 IVBSAXContentHandlerの各イベントで渡されるのはノードではなく、要素名とか属性とか、そのテキストの内容。これだけでは、他のノードを拾ってしまいかねないので わざわざ数えてそれをIVBSAXContentHandlerを実装した独自クラスのメンバ変数に保存しておいて、イベントでカウントして、同じ数になったときに適用、というような方法を取っていた。ちゃんと一致するノードを取れているようではあったのだが、 上記の問題により断念せざるを得なかった Set dom = New DOMDocument60 dom.async = False dom.preserveWhiteSpace = True Dim succeed As Boolean succeed = dom.Load("C:\Environment\Users\WWW\OKWave\Q5696567\aaa.xml") dom.setProperty "SelectionLanguage", "XPath" Set element = dom.selectSingleNode("//*[@id='fuga']") Set nodes1 = element.selectNodes("preceding::node() | ancestor::node()") Dim x As Class1 Set x = New Class1 x.XXX = nodes1.Length Dim y As SAXXMLReader60 Set y = New SAXXMLReader60 Set y.contentHandler = x y.Parse (dom.XML)
　確かめていないのですが、maxOccurs 属性を0回と指定して、[除外要素]要素を一つも埋め込めないように指定することができるかもしれません。 <xsd:element name="除外要素" type="xsd:string" maxOccurs="0"/> 　ただし、XMLSchema の要素のオーバーライドや要素の順番違いで感知しないことが発生するかもしれません。かなり曖昧な助言で申し訳ありません。
文字コードがおかしいとかですかね。
===========PHPのコード=========== <?php $doc = new DOMDocument(); $doc->resolveExternals = true; $doc->strictErrorChecking = true; $doc->recover = false; $doc->load("Q5605930-1.xml"); $xpath = new DOMXPath($doc); $xpath->registerNamespace ( "ns" , "http://himajin100000.example.com/" ); $nodes = $xpath->query("/xml/data/ns:A1/ns:A2/ns:A3"); for($i = 0;$i < $nodes->length;$i++){ print($nodes->item(0)->namespaceURI . "\n"); print($nodes->item(0)->localName . "\n"); print($nodes->item(0)->textContent . "\n"); } ?> ========用いたXMLファイル========== <xml> <data> <aa:A1 xmlns:aa="http://himajin100000.example.com/"> <aa:A2> <aa:A3>これが取りたい</aa:A3> </aa:A2> </aa:A1> </data> </xml> =======結果(何を求めたいのかよく判らなかったから適当に)======= http://himajin100000.example.com/ A3 これが取りたい =============その他=========== SimpleXMLあまり好きじゃないので書かない。DOMのみ。(初心者には簡易な記法が好まれるが、一貫性の方が重要で安易に簡易さを求めるべきではないという立場の俺としては複雑な心境である) XMLに名前空間宣言はちゃんと含めてください。 DOMXPathのregisterNamespaceの第一引数は DOMXPathのqueryメソッドで使われるXPath式のものであれば何でも良い、ということを一応示すために、元のXMLの名前空間接頭辞aaを使わないようにした。 gooはURIっぽい文字列の連続するUS-ASCIIの文字の最初と最後に不可視の文字を付け加えるので取り除いてから動かすこと。 一応xmlで始まる要素名は予約されているので、安易に使うと新しく規格が出来たときに困るかもしれないから覚悟してね
「URI」の「I」は「identifier」、つまり「識別子」です。 これはIDのように一意に識別を行うことを目的として使用されます。 > 1. 実際に衝突が起きなければURIは任意に決めていいのでしょうか? はい、自由に決めることができます。 発想が逆でして、衝突を起きないようにするため（一意に識別するため）にURIを使用します。 > 2. 1と若干かぶりますが、ネットに上げなければ何でもよいのでしょうか? 外部に公開さえしなければ、例えあなたが http://www.google.co.jp/を名前空間として使用していようと 誰も知ったこっちゃないので全く問題ありません。 というよりシステムの観点から言えば ネット上で誰かとかぶっているとか、そういうことは全く意味がなくて 作成したxmlの想定される利用範囲でかぶらなければそれで良いです。 しかし、システム的には問題無くとも 例えば誰かのドメインと同じだったりすると倫理的にはあまりよく無いので （例えば全く関係の無いサイトのURLと同じだったりするとややこしいので） 誰かと絶対かぶらないような名前にするのが普通です。 3. ネット上で使用するにあたって、それを定義する際どのようなURIを使うと良いでしょうか? 普通は自分の持っているドメインを利用します。 それなら誰かとかぶることは（意図的にされない限り）まずありませんし 自分の公開しているサイトと関連性があることが一目でわかります。
1213aaaの場合、その数字の値が固定長であれば、 substring(@name,5)とかで取れると思いますけど、 固定長じゃないと難しいですね。
会員要素が1000件もある<XML>ともなると、 DOM型アクセス(ツリーベース)じゃ重そうなのでSAX型(イベントベース)アクセスが有利では、 となると、JAVAとかPHPとかでSOAP利用かな（知ったかぶり） あるいは、Xpathとか使えばDOM型アクセスでもOKかも、 メモリー馬鹿食いしそう。
　私もXSLの動作実験をしてみて、< がエラーになり困った覚えがあります。エスケープシーケンスの &gt; で記述し、対処しましたが、おそらく、クロスサイトスクリプティング攻撃を防ぐために、タグとマルチコマンド区切り記号などを読まないようにしているのだろうと考えています。 　一度、エスケープシーケンスに変換する関数か独自の置き換えルーチンを経た文字列を扱えばよろしいでしょう。
<description>と</description> ・・・HTMLの段落と同じで、 <description>説明文1</description> <description>説明文2</description> でよいのでは？？
一応XSVってのがあったりするし、 http://www.stylusstudio.com/xml_schema/xsv.html #こっちはSchema自体を使ってValidateだと思うけど http://tools.decisionsoft.com/schemaValidate/ #なんてので自分のXML Schemaをチェックしたりすることがある。 ##当時 ##http://www.horobi.com/xml/XMLSchemaDosAndDONTs.j … ##>第一に、バリデータにとってこのチェックを厳密に実施することは大変なことなんだ。 仕様書のこの制約を定義している箇所をちょっと見て欲しい。何が許され何が許されないかを指定するのに 3.9.6 章が丸ごと割かれている。[バリデータを実装する]開発者がこの制約チェックを実施しないで済ませたい、という強い誘惑に駆られたとしても不思議じゃないのがわかるだろう。たいていの人はこのチェックが実施されなくても気付きはしないだろうから。このあたりは XML Schema ワーキンググループのメンバーが開発した XSV でさえ、部分的にしかサポートしていないんだ。 ##とかいわれていたけれど、今はどうなんだろう…
開発中は、offになっていたshort_open_tag が、本番環境で有効のため 一行目のここで、パースエラーになってるんじゃないかな？ <?xml version="1.0" encoding="utf-8"?>
あ。良く考えたら問題がおかしい気がする。ちょっと課題出している人に聞いてくれる？ >【Values of type ID MUST match the Name production.】 A name MUST NOT appear more than once in an XML document as a value of this type; i.e., ID values MUST uniquely identify the elements which bear them. #IEがエラー吐かなかった
ざっと見ただけですが……。 問題点は， ・タイトルの親は製品ではない ・カテゴリは1回と2回が出てきているのに1回となっている ・補足は0回と1回が出てきているのに1回となっている あたりでしょうか。 要素型定義の内容部分には，「どの要素がどの順番で何回出てくるのか」を記述します。 > <!ELEMENT 製品 (タイトル,名前,単価,カテゴリ,補足)> は， ・「製品」という要素の中に ・「タイトル」「名前」「単価」「カテゴリ」「補足」という要素が 　・この順序で 　・それぞれ1回のみ 　出てくる ということを意味しています。 慣れないうちは，各要素の親子関係を樹形図に書いてみることをお勧めします。
　XMLとXBRLの研究を少々やっております。 　ご希望のXBRLは財務情報用のXBRL FRでしょうが、私が取り組んでいるのは、取引記帳用のXBRL GLです。以下の参考URLでXMLとXBRLの操作の感覚は体験できるのではないかと思います。 　基本的なXMLはスタイルシート指定とDOMオブジェクトのプログラム操作の技術を活用すれば、操作できます。 　XMLに関しては、 「XML逆引きクイックリファレンス」 坂田健二著 毎日コミュニケーションズ刊 が詳しかったです。 　XBRLに関しては、 「XML技術とXBRLデータ標準を用いたインターネット財務情報システム」　湯浦克彦著　ソフトリサーチセンター刊 が参考になりました。 　そのうちにEDINETの情報をインポートし財務分析するシステムを開発してみたいと考えていますが、現状では参考意見程度を挙げておきます。 参考URL：http://homepage1.nifty.com/tetsuhito/xml-exp0.htm
２つのXML をマージしているんだと思います 参考URL：http://www.atmarkit.co.jp/fxml/askxmlexpert/020m …
>あるいはDTDでの記述は無理なのでしょうか。 うん、無理。XMLSchemaでも出来そうな気がしないような。 http://www.w3.org/TR/REC-xml/#NT-elementdecl http://www.w3.org/TR/REC-xml/#NT-Mixed http://www.w3.org/TR/REC-xml/#NT-children
Id=xxxxxxxxx　＜＝この投稿のためにxxxxxxにしてあるんですか がまずいんじゃないですか？ 本来ここにアクセスキーをセットしてるんですよね。 AmazonのWEBサービスについて使った事ないのでどうやって認証してるか 知りませんが、どんなエラーが帰ってるんでしょうか？
以前は、Googleで検索結果をXMLで返す無償のAPIサービスがあったけれど、 いつのまにかAPIサービス提供を止めたはずです。 現状、公式には、Google AJAX Search APIのコントロールを使う方法しかありません。 Googleで検索結果ページをXMLに変える仕組みを、自サーバーで作りこむしかないですね。 どこかで、非公式にやっているサイトがきっとあるはずでは？
何故、wordに表示させたいのかが解らないので、アドバイスしようがありませんが、 wordを色付きの構文エディターとして使いたいなら、 ツール＝＞マクロ＝＞MicroSoftScripteditor でしょうが、これはword文書の編集とは違います。 そもそもxmlで自分で定義しなければ、標準の色指定なんかない。 もしかしてxhtmlのお話し？
Windowsでサンプルプログラムをビルド出来たのなら。 そのプログラムのxxx.exeファイルが出来てるはずですよね。 どうやって実行して、何が出力されるのかはそのサンプルプログラムの 中身がわからないと答えようがないですが。 普通は、 c:\>hoge.exe < fuga.xml みたいに、コマンドプロンプトで実行するものでしょ。
�のようになっているのは、文字化けではなくUnicodeを参照するエンティティです。 文字コードを &#１０進コード; あるいは &#x１６進コード; のように書きますと、該当する文字に置き換わって表示されます。 MM_XSLTransform エラー。 ​http://www.***.com/contents/?feed=rss2​ は有効な XML ドキュメントではありません。 みたいなのは・・・ Internet Explorerだとセキュリティのポリシーが厳しくて、複数のドメインにあるファイルにはアクセスできないようになっている場合があります。 その他だと、ファイルを書くときに単純にタイプミスということもあるでしょう。
node.attributesって配列じゃないですか？
確かに、$xmlは配列じゃないですね。 $xmlはobjectです。とりあえずはif文を if (is_object($xml)) { にすれば、表示されますが、失敗した時の else{ の処理を直す必要があります。
> 一度実行してみたのですが、何も変わりませんでした。 一応お尋ねしますが、sitemap.xmlを作成する目的はご存知ですよね？ WordPressを設置しているディレクトリ(デフォルト設定の場合)に各投稿のURLが記述されたsitemap.xmlが生成されていればそれでOKです。 PDFファイルで投稿したものが含まれないのは私も分かりませんが…(申し訳ない)。 あとはGoogleのウェブマスター ツールやYahoo!のサイトエクスプローラーに生成されたsitemap.xmlのURLを登録するだけです。 ちなみに私のところでもsitemap.xmlの生成は１～２秒程度で終わりますよ。 # あまり的を得ていない回答ですみません…。
回答#1の者です。 今、サイトを確認させて頂きましたが、私のところでは問題なくFlashが表示されていますよ。 tsubasa99さんが確認されているページはもしかしたらキャッシュに残っている物かも知れません。 Ctrl+F5ボタンでもう１度ページを再読み込みしてみて下さい。
XMLとは、それ単体では使わず、 幅広い言語に互換性が高い、 テキストファイルと思っていれば、最初は良いと思います。 例えば、webアプリケーションなんかでよく使われますが、 テキストファイルやCSVデータで書き出したファイルは、 プログラムマーのさじ加減で作成するので、内容の把握が困難です。 しかしXMLは書き方が決まっているので、 他のアプリケーションや何かで読み込む事も簡単です。
<xsl:for-each select = "descendant::artist[normalize-space(text())='cobu']"> で IE6でも表示しましたよ
sitemap.xmlファイルはYahoo!やGoogle等のロボット型検索エンジンがサイトをクロール(巡回)しにきたときに、そのサイトの各ページの構成を知らせるために作成します。 ファイルには各ページのURLや最終更新日、更新頻度などを記述しておきます。 検索エンジンは基本的にサイト内でリンクされているページを順にクロールしていきますが、sitemap.xmlファイルがある場合はそこに書かれているURLについてもクロールしていくので、検索エンジンにインデックス(登録)されやすくなります。
試験受けたりしたくせに，XML Schemaはまともに勉強しなかったからさ， 回答のためにいろいろ書いてValidatorに怒られまくったorz。そのため愚痴が続きます。 #いや、試験の時にはXSLTもまともに勉強しなかったんで，ずたずたにされましたが。 #仕様書読むのが面倒くさいからって放置しっぱなしで巣 で，本題。 名前空間接頭辞付きで話をしているけど，こんな感じでいけそう。 とりあえず，ここでスキーマとインスタンス渡す分には成功している感じ。 http://tools.decisionsoft.com/schemaValidate/ <?xml version="1.0" encoding="UTF-8" ?> <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sample="http://www.example.com/himajin100000/" targetNamespace="http://www.example.com/himajin100000/" elementFormDefault="qualified" attributeFormDefault="unqualified"> <xs:element name="root"> <xs:complexType> <xs:choice> <xs:sequence> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:bbb" minOccurs="0" maxOccurs="1" /> </xs:sequence> <xs:sequence> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:aaa" minOccurs="0" maxOccurs="1" /> </xs:sequence> </xs:choice> </xs:complexType> </xs:element> <xs:element name="aaa" type="xs:string" /> <xs:element name="bbb" type="xs:string" /> </xs:schema> ======================================== #最初は以下のように書いて怒られてました <?xml version="1.0" encoding="UTF-8" ?> <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sample="http://www.example.com/himajin100000/" targetNamespace="http://www.example.com/himajin100000/" elementFormDefault="qualified" attributeFormDefault="unqualified"> <xs:element name="root"> <xs:complexType> <xs:choice> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> <xs:sequence> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> </xs:sequence> <xs:sequence> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> </xs:sequence> </xs:choice> </xs:complexType> </xs:element> <xs:element name="aaa" type="xs:string" /> <xs:element name="bbb" type="xs:string" /> </xs:schema> たぶん <?xml version="1.0" encoding="UTF-8" ?> <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sample="http://www.example.com/himajin100000/" targetNamespace="http://www.example.com/himajin100000/" elementFormDefault="qualified" attributeFormDefault="unqualified"> <xs:element name="root"> <xs:complexType> <xs:sequence> <xs:choice> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> <xs:sequence> <xs:element ref="sample:aaa" minOccurs="1" maxOccurs="1" /> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> </xs:sequence> </xs:choice> <xs:element ref="sample:bbb" minOccurs="1" maxOccurs="1" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name="aaa" type="xs:string" /> <xs:element name="bbb" type="xs:string" /> </xs:schema> こういうことされると検出されにくいから root > a > bって来たときに候補が二つできてしまうから xs:choiceの中は独立にならないといけない…って項目がどっかにあるんだと思う。面倒くさいから調べないけど。
画像に欠陥がある場合もたまにありますね。 画像がたくさんある場合はdownsizeallなどのフリーソフトを使用して 一括保存で短時間で処理できるかもしれません。 ともあれ、 前進できてよかったです★
Xpathが使えるはずです。 Dim nlist As MSXML2.IXMLDOMNodeList nlist = ObjXml.selectNodes(" ここにXpath記述 ") （参考） http://msdn.microsoft.com/ja-jp/library/ms256471(VS.80).aspx
自分の端末では文字化けしないのにネットを経由すると文字化けする理由は以下のサイトを熟読すれば理解できますが、UNICODEがデフォのXMLで、いまだにShift_JISに執着してもメリットないと思いますけど。 http://www.atmarkit.co.jp/fxml/rensai/w3cread38/ … ”ファイルシステムやネットワークプロトコルが、符号化方式の情報を持つことがある。 符号化宣言よりもプロトコルが指定する符号化の指定を優先すべきだろう。なぜなら、通信システムの都合で符号化方式の変換が発生した場合、プロトコルに含まれる符号化方式は正しい情報を含んでいる可能性が高いからである。 一方、符号化宣言を扱わないシステムにより変換が行われた場合、符号化宣言は現状に合致しない符号化方式を示している可能性があり得る。”
VC6持ってないので厳密に検証はしてないけど, insertBeforeメソッドって使えない？ http://msdn.microsoft.com/en-us/library/ms754519 … http://www.w3.org/TR/DOM-Level-2-Core/core.html# … http://www.w3.org/TR/DOM-Level-2-Core/core.html# …
<xsl:attribute>は、XSL変換をするまで分からない出力属性を作成するときに使うもので、既にcontentという属性名を知っている場合は、使う必要はないです。いまの場合は、contentという属性名を知っているわけだから、DTDでcontent属性をCDATA指定してやれば、XMLタグ内の要素でもなんでも入れることができます。 ”<xsl:attribute> 要素は、ドキュメントを変換するまでわからない出力属性を動的に作成するのに非常に便利ですが、既に属性を知っている場合は、この要素を使用する必要はありません。たとえば、前の例で、IMG 要素に src 属性が含まれている必要があることが既にわかっているかもしれません。その場合は、ドキュメントを変換する前に、その要件がわかっているため、<xsl:attribute> 要素を使用する必要はありません。” http://msdn.microsoft.com/ja-jp/library/ms256165(VS.80).aspx
　あるページから、他のファイルの位置を参照する(ブラウザとサーバーの)機能をしっかり理解しておきましょう。なにしろ、ウェブの基本中の基本ですからね。 　ブラウザがあるファイルをサーバーにHTTPプロトコルで要求するときは、ネットワークに対して [HTTP要求ヘッダの例] GET /ディレクトリ(/ファイル名) HTTP/1.1 Host: サーバー名 User-Agent: Mozilla/5.0 (Windows; ***Firefox/3.0.10 Accept: text/html****application/xml;q=0.9,*/*;q=0.8 Accept-Language: ja,en-us;q=0.7,en;q=0.3 Accept-Encoding: gzip,deflate Accept-Charset: Shift_JIS,utf-8;q=0.7,*;q=0.7 Keep-Alive: 300 Connection: keep-alive という要求が行われます。 　ウェブ上のルーターが、サーバー名からIPアドレスを調べて、そのサーバーにファイルを要求します。 　GET(あるいはPOST)の要求を受け取ったサーバーは、指定されたファイルを提供しますが、【そのファイルは実在するとは限りません。】【重要】・・パスやファイル名を含めて動的に作成され提供される場合も多い。 [HTTP応答ヘッダの例] HTTP/1.x 301 Moved Permanently Date: Thu, 18 Jun 2009 09:51:40 GMT Server: Apache Location: http://サーバー名/ファイル名とパス Content-Length: 242 Keep-Alive: timeout=2, max=100 Connection: Keep-Alive Content-Type: text/html; charset=iso-8859-1 　そのため、ブラウザは、そのページで指定されているファイル(画像・スタイルシート・スクリプトなど)の位置は知る由もありません。 　そこでブラウザは、そのファイルの【サーバー上のルートからの見かけのパスとファイル名】から、それらのファイルの場所を算出して、再びサーバーに要求します。そのとき、ページでの必要な指定方法は、 [ウェブ上の要求プロトコルと絶対パスとファイル名] 　http://[サーバー名][パス][ファイル名] [同じサーバーでの絶対パス] 　/[パス]と[ファイル名] 　　ブラウザからは、現在のファイルのプロトコル・サーバー名が付与される。 　http://サーバー名/[パス]と[ファイル名]とみなされる。 [同じサーバーでの相対パス] 　../[パス]と[ファイル名] 　./[パス]と[ファイル名] 　[パス]と[ファイル名] 　http://サーバー名/[算出されたパス]と[ファイル名]とみなされる。 以下同様・・・ 　よって、指定方法は 　../format.xsl ないし、 　http://[サーバー名][パス][ファイル名] のいずれか・・ 　
訂正、XMLからのテーブル書き換えはこちら↓ http://allabout.co.jp/internet/javascript/closeu … でした。
この結果がどうなるか考えると面白いかも。 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:output method="xml" indent="yes"/> <xsl:template match="/*"> <hoge> <xsl:call-template name="stringiteration"> <xsl:with-param name="current" select="'abcdefghijklmnopqrstuvwxyz'" /> </xsl:call-template> </hoge> </xsl:template> <xsl:template name="stringiteration"> <xsl:param name="current" /> <fuga><xsl:value-of select="substring($current,1,1)" /></fuga> <xsl:if test="string-length($current) > 1"> <xsl:call-template name="stringiteration"> <xsl:with-param name="current" select="substring($current,2)" /> </xsl:call-template> </xsl:if> </xsl:template> </xsl:stylesheet> <!-- XSLTの変数は同じ変数に何度も代入できないから再帰をうまく使う。-->
×<xsl:sort select="@Num|No" /> <!-- これは NAMAE要素の子のNo要素、つまり <NAMAE>加藤<No>3</No></NAMAE> これなら多分ヒットする。 --> というわけで変えてみた。 ○<xsl:sort select="@Num|following-sibling::No" data-type="number" /> こっちの都合でdata-type属性まで付けてみた。他の属性をどうするかはお好みで。 #多分@Numもfollowing-sibling::Noもどちらもある要素の場合は@Numの方がノードリスト中で先に出てくるので，@Numの方が優先されると思う。多分。自信ないけど。 http://www.w3.org/TR/xslt#element-sort
shift_jisで問題ないです
XMLの名前空間は、URIで表現されるわけですが、その名前空間は実在する必要はぜんぜん無くて、たんなるユニークな識別子にすぎません。 なのでURIは、URNとURLの二種類のいずれかを用いればよいわけですが、URNは世界に一つしか存在しないことが保障されていないので、世界に一つしか存在しないことが保障されているURLが通常は使われます。 しかし、名前空間として指定されたURLを、XML Schema vocabularyが見に行くことはありません（見に行く必要がない）。 なぜならば、XML Schemaドキュメントを書こうと思った人は、世界中の５０億人の人がただの一人の例外もなく[http://www.w3.org/2001/XMLSchema]に記述されたルールにもとづいて、デフォルト名前空間を[http://www.w3.org/2001/XMLSchema]に指定して、ドキュメントを記述することになるからです。 デフォルト名前空間として[http://www.w3.org/2001/XMLSchema]を定義するのは、名前空間prefixがついていないelementに対しては、標準化されたXML Schemaの仕様を使ってくださいよと、XML Schema vocabularyに伝えているだけです。
Microsoft XML v3.0 以上だと、selectNodesメソッドでxpathが使えるようです。 Dim ObjXml As MSXML2.DOMDocument Set ObjXml = CreateObject("MSXML2.DOMDocument") ObjXml.Load("​hoge.xml")​ Set nlist = xmldom.selectNodes("//情報/大問/@形式=""1""") Dim node As MSXML2.IXMLDOMNode For Each node In nlist Debug.Print node.nodeName Debug.Print node.childNodes(0).nodeValue Next できるかなああ...
検索したらけっこうみつかりましたよ。 単に、 <script src="http://www.feedbeater.com/widgets/add.min.js"></ … を組み込むだけみたいですけど... カストマイズは http://www.diffbot.com/apps/feedbeater/ のサービスでできるようだ 参考URL：http://web-marketing.zako.org/web-tools/create-r …
私も，同じ疑問を抱えていて，つい最近解決しました。 ので知識不足ですが，参考になれば。。。 concat，substringを利用して以下のようにしてみました。 下記の場合，文字長＝７として動作させています。 質問では，空白によるパディングですが，仮に０詰めであれば， 簡略に， <xsl:value-of select="format-number(text(), '0000000')" /> とすればよいかと。 ＝＝＝　XML　＝＝＝ <?xml version="1.0" encoding="Shift_JIS"?> <?xml-stylesheet type="text/xsl" href="numbers.xsl"?> <numbers> <number>1</number> <number>12</number> <number>123</number> <number>1234</number> <number>12345</number> </numbers> ＝＝＝　XSLT　＝＝＝ <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:output method="text" encoding="Shift_JIS"/> <xsl:template match="number"> <xsl:value-of select="concat(substring(' ',1,7-string-length(text())),text())" /> </xsl:template> </xsl:stylesheet> 参考URL：http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.ph …
まず，XMLではシステム識別子を省略できません。 http://www.w3.org/TR/REC-xml/#NT-doctypedecl おそらく公開識別子のみでできる、というのはSGMLの話です。 僕はSGMLについて詳しくありませんが， どうやら http://www.kanzaki.com/docs/html/doctype.html#fpi にあるような 「SGML Open catalog」という定義用のファイルを書くことができるようです。 #俺の予想だけど，当時は常時接続って稀で文書インスタンスのシステム識別子としてファイルパスを与えるのが一般的だったのかもしれない。マシンを移動する度に毎回システム識別子を書き換えるのは面倒だから外部にあるのも解らんでもない気がする。相対URIで書いて二つのファイルを持ち歩けばよかったんじゃないかと思うと，何か違うような気もするが。いずれにしても俺の予想だから当てにしてはいかんぞ。
素人考えですが。 (1)出来るのでは？要はhtmlページにするときに加工すればいいだけでしょ。 あるいは内部保持用の構造体を作成して、それで全件をとり、その中から必要なデータだけXML構造体に入れるという手順もある。 (2)件数が膨大なときは、SQLで範囲を指定した方がよいかと思います。メモリ使用量との兼ね合いもあるので。
一つのリテラルで表記するのは無理だと思います。…と思ったんだけどなあ まず，XPath 1.0規格で一つのリテラルで表現する事はできないようです。 http://www.w3.org/TR/xpath#NT-Literal >そのプログラムではクオート文字をダブルコーテーションに限定しているので、 これがなく，一つのリテラルでなくて良い(計算結果でも良い)なら 回避策として concat("AB'C",'DE"F') とかどうにでもなるとは思うんですが。 念のためにXPath 2.0の構文を調べてみたら http://www.w3.org/TR/xpath20/#id-literals EscapeQuotやEscapeAposなんてものがあるので 多分"abc""def"というような表記が可能なようです。 #XPath 1.0同様にあとはXQuery 1.0 and XPath 2.0 Functionsの http://www.w3.org/TR/xpath-functions/#func-codep … で計算してごまかすぐらい？ #実際にアドオンをインストールしていないのでFirefox AddonsがXPath 2.0に対応しているかは判りません。 #本題とは関係ないけど，プログラムのユーザーが 文字列を入力してそれが含まれるような要素を探すようなプログラムなら，XPath Injectionとか怖いから 文字列をXPath Expressionに直接つながないで，要素加えてからやるかな。
XMLと言うか、XHTMLへの変換ですが、以下のようなソフトがあります。 [参考]SourceForge.net: HtmlCleaner http://sourceforge.net/projects/htmlcleaner 「HTML」「XML」「変換」の3つをキーワードにぐぐれば、他にも色々見付かります。（変換精度は知りませんが。）
sitemap.xmlのことですよね？ サイトマップファイルはファイルが置いてある場所と同じ階層およびその配下しかURLを記述できないので、残念ながらサブドメインのサイトマップファイルを新たに作成する必要があります。 [参考サイト] http://www.sitemaps.org/ja/protocol.php#location
仕様の記述箇所を聞いている、んでいいんだろうか？ http://www.w3.org/TR/REC-xml/#sec-predefined-ent
仕様自体がそうなのか自信ありませんが， とりあえず手元のXMLEDITOR.NETでは (//text())[1]とか(//text())[2]で aaaやbbbが取得できています。 #//text()[1]と書くと //(text()[1])という計算をするみたいです。
（続き） SimpleXML 関数を使いxpathも使うと <?php $file = "quiz.xml"; if (file_exists($file)) { $xml = simplexml_load_file($file); $quizs = $xml->xpath('/data/quiz'); foreach($quizs as $quiz){ list($no)=$quiz->xpath('@no'); list($question)=$quiz->xpath('question/text()'); list($answer)=$quiz->xpath('answer/text()'); print "問題: " . $no . " " . $question . "<br />"; print "答え " . $answer. "<br />"; } } else { exit('XML 入力をオープンできませんでした'); } ?> これだけで、出来ます。詳細はphpのマニュアルで調べて下さい。 ご参考になれば幸いです。 PHPだけでは、これの応用はめんどうそうです。 javascriptと組み合わせて実用的なのを作って下さい。 参考URL：http://www.php.net/manual/ja/ref.simplexml.php
>「XMLの仕様では、要素は記述された順番に読み込まれるとは限らないよ」 本当です。 質問者様の参考サイトにも記述されていますが XMLにはパーサーの読み込み順序の規定は何もありません。 従いまして、パーサーによって読み込まれたXML要素の順序性は保証されず、 使用するパーサーに完全に依存することになります。 ただ、読み込み時にわざわざ要素を入れ替えるというパーサーを今までに私は見たことがありません。 （そもそも読み込む順序をわざわざ入れ替える理由も無いですから） ちなみにJavaならorg.w3c.domパッケージのElementクラスの getElementsByTagNameメソッドなどは「文書順に返す」といった記述が見られますね。 （ただ、Nodeインターフェースのメソッドはそういった記述が見当たらないですけど）
XMLEDITOR.NETで検証(つまり.NET FrameworkのXSLTプロセッサ) スタイルシート: <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:template match="/"> <sample> <xsl:apply-templates/> </sample> </xsl:template> <xsl:template match="要素"> <xsl:element name="youso"> <xsl:copy-of select="@*[local-name() != 'aa']|*|text()|comment()|processing-instruction()"/> </xsl:element> </xsl:template> </xsl:stylesheet> 出力結果 <?xml version="1.0" encoding="utf-8"?> <sample> <youso bb="2" cc="3">AAAAAAA</youso> </sample> ただし，local-nameが'aa'であるかどうかチェックしただけなので あらゆる名前空間のaa属性が出力されません。そこはnamespace-uri()でも使って調整してください #この前の質問はいい加減なこと言ってごめんなさい。 #今回は多分大丈夫だと思う。
結論から言うとページ内のリンクが統一してあればどちらでも良いです。 ちなみに自分はindex.htmlを付けません。 将来的にトップページがindex.phpやindex.cgiになった場合に変更しなくて済むからです。
それほど利用頻度が高くなければ http://wikipedia.simpleapi.net/ こちらのAPIを使ってみては？phpのサンプルなんかもあるようだし。
「文」で apply して投げているけれど 「文」の match による受け皿が無い って事じゃない？ その下位の「u」ではmatchするけどuだからね。その上位(同位)階層は含まれないでしょ？
http://www.w3.org/TR/xpath#function-local-name
ごめん，いちいちリストアップする方法しか思いつかない。 ===以下，単なる独り言。(本来は回答とするつもりであったが，エラーらしいのでorz)============= 最初出来ると思ってた。XMLマスターBasic試験で， マッチするテンプレートが複数ある場合の処理が出たような気がするけどな…。 http://www.w3.org/TR/xslt#conflict It is possible for a source node to match more than one template rule. The template rule to be used is determined as follows: ソースノードに対してマッチするテンプレートルールが二つ以上存在する事がある。どのテンプレートルールが使われるかは以下によって決定される。 It is an error if this leaves more than one matching template rule. (上記の手段により，マッチするものとして)二つ以上のテンプレートが残った場合，エラーである。 An XSLT processor may signal the error; XSLTプロセッサはエラーを通知する事がある。 if it does not signal the error, it must recover by choosing, もし，エラーを通知しない場合，XSLTプロセッサは from amongst the matching template rules that are left, the one 残ったテンプレートルールの中で， that occurs last in the stylesheet. スタイルシート中一番最後に登場するものを使わなければならない。 ===================================== …手元のいくつかの実装はエラーを通知しないようで， 一番最後のテンプレートルールが選ばれる じゃあ，今までのテンプレートルールの前に <xsl:template match="*" /> とか書いて置けば，今までテンプレートルールで定義されていた奴はそっちが使われ，残りの要素はこのテンプレートルールに引っかかって何もしなくなるんじゃないか？ ==== …と、思ったんだけどねぇ。 ちなみに，マッチするテンプレートルールが無いときはビルトインテンプレートが適用されるよ。 http://www.w3.org/TR/xslt#built-in-rule
その型指定済みのDataSetの列名(Columns[n].ColumnName)とXMLのノード名は同じなのでしょうか？ 新規に追加すのであれば ... DataSet dsXML = new DataSet(); dsXml.ReadXml("Sample.XML"); DataTable tbl = dsXml.Tables[0]; // 型指定済みDataSetの型名を DSEMPと仮定 EMPDS ds = new EMPDS(); // 読み込んだXMLの行数分ループ foreach( DataRow row2 in tbl.Rows ) { 　　DataRow row = ds.Tables[0].NewRow(); 　　// dsXMLのテーブルの列数分のループしてデータの流し込み 　　foreach( DataColumn cl in Tbl.Columns ) 　　{ 　　　　// 空フィールドは代入しない 　　　　if ( !row2[ cl.ColumnName ].Equals("") ) 　　　　{ 　　　　　　row[ cl.ColumnName ] = row2[ cl.ColumnName ]; 　　　　} 　　} 　　ds.Tables[0].Rows.add( row ); } といった具合でしょう ...
ＸＭＬもＨＴＭＬも「マークアップ言語」と言われていて、その前進となったのがＳＧＭＬです。 で、マークアップ言語というのは、文章の構造をパソコンにもわかりやすくしてやるための言語です。 ・・・というと難しく聞こえますが、一冊の本に例えるとわかりやすいと思います。 例えば、小説なんかだと、「表題・章・節・段落」なんかに分けられますよね。 また、「状況を説明した文」とか「登場人物の会話」とかにも分解することが出来ます。 しかし、パソコンは言語を理解出来ませんから、パソコンにも分かるように「マーク」を付けてあげる必要があります。 この「マーク」が所謂「タグ」で、「Ｐタグは段落を表す」とか「Ｈ１は一番目の表題」などなどです。 パソコン（ブラウザ）は、この「タグ」を参考にして、「Ｐタグが合ったから段を変えて表示しよう」とか、「Ｈ１は一番目の見出しなんだから少し目立つようにしてみよう（※）」とか判断するわけです。 （※Hタグは、本来は「見出し」という意味であって文字の見栄えを変更するタグではありません。ただ、各ブラウザメーカの善意（？）で見栄えを変えているだけです） ＳＧＭＬというのは、パソコン黎明期に作られた規格です。 主に、出版関係者なんかで使われていました。 で、ＨＴＭＬというのは、それをネット通信でも使えるように再整理された規格です。 ＨＴＭＬは「マークアップ言語」ですから、文章の構造を考えて作られていきました。 しかし、ブラウザ競争の激化やJavaやFlashなどの新しい技術がどんどん取り入れられたり、その一方で携帯端末などのような機能が制限される環境で使われたりするようになっていきました。 技術開発にあわせて改訂を繰り返してきたHTMLでしたが、その度に「あっちを立てればこっちが立たず」な状況が生まれたりしてました。 また、各ブラウザメーカーが色々と「専用タグ」とか作って拡張されたりしていました。 特に、「文章の構造」を示す「タグ」と「文章の見栄え」を示す「タグ」とがごちゃ混ぜになっていきました。 そこで、「文章構造」と「見た目の構造」を厳密に分けようという考えが生まれてきます。 そうして出来たのが「CSS（カスケードスタイルシート）」です。 さらに進んで、「もう少しシンプルで拡張性のある仕様にしよう」という機運も高まってきます。 そうして生まれたのが、「XML」と「HTML」を融合させた「XHTML」です。 では、「XMLとは何か？」と言われると、SGMLをシンプルで拡張性のある仕様に整理されたモノです。 SGMLというのは、元々WEB環境のみを意識して作られたワケではなく、様々なシーンで文章を構造的に表現出来るように作られた規格です。 それと同じように、XMLもWeb環境以外の事も想定して作られています。 例えば、データベースを構築したり、検索しやすいテキストファイルを作ったりなどです。 下記に、それぞれの比較した違いを纏めてみます。 ○HTML ・規格策定団体であるW3Cによって「タグ」が決められている ・文章の階層構造を必ずしも表現していない ・終了タグを記述しなくてもよい ・大文字と小文字の区別をつけない ○XML ・「タグ」を自由に定義出来る（日本語のタグも使えます） ・文章の階層構造を表現できる ・終了タグを必ず記述しなければならない ・大文字と小文字の区別を付ける ○XHTML ・HTMLなので、「タグ」はW3Cによって決められている ・HTMLなので、従来のWebブラウザでも問題なく見られる ・XNLでもあるので、大文字小文字は区別する ・XMLでもあるので、終了タグは必ず記述する ・XMLでもあるので、MathMLやSVGなどのXML関連規格の言語も埋め込める といった感じかと思います。 まぁ、XMLもHTMLもSGMLという規格の子供であり、XHTMLはXMLとHTMLを掛け合わせて作った孫ってところでしょうか。
ちょっと突っ込み。ここまで触れて欲しかった。>#1 はXML 1.0ではpre-definedではない。定義されているのはXHTML 1.0とかXHTML 1.1とか。(ちなみにHTML 4.01には&apos;がない。) http://www.w3.org/TR/REC-xml/#sec-predefined-ent
貴方の言いたいレイアウトとは、配置／配色だけではなく、メニュー項目の内容も含めてという事ですか。 あくまで見た目（配置／配色）だけなら、CSSを外部ファイルとして管理するだけで済みますが、内容もとなるとCSSでは無理です。 フレームを使うのが最も単純ではありますが、 それ以外だと ・<object>タグ（ifremeと似たようなもの） http://www.tagindex.com/html_tag/other/object.html ・JavaScriptで読み込む http://www.google.co.jp/search?lr=lang_ja&q=java … ・SSIを利用する http://allabout.co.jp/internet/hpcreate/closeup/ … 等があります。 テンプレートファイル使って自由にというなら、既存の汎用CMSを利用するか、perlやPHPでそういったのを自作する事になります。 http://pc.nikkeibp.co.jp/article/NPC/20071113/28 … http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3% … ブログもCMSの一種です。
僕がXMLの基本中の基本を参考にしたサイトです。 http://www.iroirojoho.net/ http://www6.airnet.ne.jp/manyo/xml/index.html 参考URL：http://www.iroirojoho.net/,http://www6.airnet.ne.jp/manyo/xml/index.html
<xsl:for-each select=".//1000"> -(1) これでは，変数にする以前の問題として，まともに動かないのでは？ 要素名の一文字目は数字にはできません。xpathも大丈夫でしょうか？ まず，変数にする前にきちんと動くようにしたとして，次に変数にするには，環境によって難易度が異なります。 xalanのようにdyn:evaluate()が使えるものは，要素名を変数に文字列として入れて，これをevaluate関数でノードセットに戻します。 概念的には， 　<xsl:variable name="hensu" select="'s1000'"/> として，要素名を''で囲んで，文字列としてhensuに格納します。 これを使うときは， 　<xsl:for-each select="dyn:evaluate($hensu)"> などとしますが，evaluateの引数は，パーサによって異なります。 なお，msxmlは，そのまんまではevaluateを使えません。 次に，<xsl:template match="1000"> -(2)ですが，これを変数化するのは不可能だと思います。 match内のxpath表現をランタイムで変更できる仕様はないと思います（多分）。 variableもparamも，xsltの変数は，通常のプログラム言語の変数と異なり，とても制限が多く，使いづらいものなのです。
xmlはテキストファイルだから、ダウンロードできているなら notepadかwordpadで開けば、中身は,見れるはず。
XSLは、～～～ と、解説しようと思いましたが、下記の記事が参考になると思います。 http://www.atmarkit.co.jp/aig/01xml/xsl.html XML+XSLT->HTML
すみません、No.2は関係なかったみたいです。 Vista+IE7環境で 共有フォルダにおいたxmlファイルを IEで開くことができるか確認してみました。 すると、 \\hostname\contents\index.xml →OK \\localhost\contents\index.xml →NG \\127.0.0.1\contents\index.xml →OK と言う結果になりました。 (提示のサンプルコードで試しても同様の結果でした。) 原因はちゃんと確認してませんが、 何となくIPv6のループバックインターフェイスが優先して 使われてしまっている気がします。
>xslはスタイルシートなので通常はxmlを開くで正解なんでしょうか？ 正解。
いえ、関連づいていません。 #DTDで言うと、DOCTYPE宣言自体がない状態。 #妥当性検証は行われないがそれでもXMLとしては有効だ。 xsi:schemaLocation属性とかxsi:noNamespaceScemaLocation属性を調べてごらん http://www.w3.org/TR/xmlschema-1/#xsi_schemaLoca …
≫ページを表示した時に<br />を使っても文章がつながっているので、見づらいのでどうしたらページを表示したときに改行されるのか？ 　XMLをXSLTでHTMLに変換すれば、<pre></pre>で囲まれていない限り、ブロックの端で折り返されるはずです。 ≫<iframe src="***" width=120 height=90 frameborder="no" scrolling="no"></iframe> で書いて表示させていた物はXMLではどうやったら表示させる事が出来るのでしょうか？ 　XMLから、必要な文字を取り出して、htmlのタグに入れればよいだけです。 ≫ＸＭＬを使ってＨＰを最近作っているのですが、 ・・・にしては、あまりにも質問がずれていると感じます。 たとえば、次のXMLをXSLTを使って、下のHTMLに変換できますか？ <文章> <表題>これはテスト</表題> <段落 title="簡単なXSLT"> XMLから、XSLTを使って簡単なHTMLを作ってみよう。 </段落> </文章> 出力するHTML(XHTML) <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"> <head> <title>これはテスト</title> </head> <body> <p class="navi"><a href="../index.html" title="サイトトップ" rel="start" accesskey="S">Top</a>&gt;<a href="./index.html" title="目次" rel="up" accesskey="U">このテーマのトップ</a>&gt;<strong>これはテスト</strong></p> <h1>これはテスト</h1> <div class="abstract" id="abstract"> <h2>概要</h2> <p>XMLから、XSLTを使って簡単なHTMLを作ってみよう。</p> </div> <hr /> <div> <h2>簡単なXSLT</h2> </div> </body> </html> ★参考サイトをあげておきます。ここで質問するより、よっぽど早い。 【参考サイト】 たのしいXML: XML/XHTML入門ページです 　 http://www6.airnet.ne.jp/manyo/xml/index.html
最初は単純な構造のものを表示させるところから始めたらどうでしょうか。 たとえば， 　　<tai>ここはtaiです</tai> の「ここはtaiです」を表示するには， 　　<xsl:template match="tai"> 　　　<h2><xsl:value-of select="."/></h2> 　　</xsl:template> としますが，まずは，この一つを表示できるようにし，それができたら，次に進むようにすると，エラーの原因も分かりやすくなります。 基本的に，XMLには，表示するデータを置き，表示形式はXSLで設定しますから，XMLにHTMLのタグは書きません。 たとえば，XMLは，このようにデータだけとし 　　<bun>これは文です</bun> 　　<bun>これもぶんです</bun> などとし，XSLでは， 　　<xsl:template match="bun"> 　　　<table><tr><td width="600"> 　　　　<font size="4" color="blue"> 　　　　　<xsl:value-of select="."/><br/> 　　　　</font> 　　　</td></tr></table> 　　</xsl:template> というようにするなどします（ただ，これではtableを使う意味がありませんが）。これなども，この部分だけの表示を試してみると，どんな風にXSLを書くと良いか分かると思います。 要領が分かるまで大変でしょうが，いろいろ試す内に分かってくると思います。
環境 OS：Windows Vista ブラウザ：IE7 実地検証例です。 ◎まず http://www.tenman.info/svg/mysample/test1/index. … に行ってみました。 下記【図１】の通り文字化けで画像など見えません。 ◎次に http://www.tenman.info/svg/ に行ってみました。 下記【図２】の通り帳など見えません。 ◎次にそのページに書いてある通り > もちろんInternet ExplorerならAdobeSVGビューアを > インストールしないと見えませんよ。 ということで， http://www.adobe.com/jp/svg/viewer/install/ に行ってみました。 【図３】の通り Win 98 - XP 対応のようです。 －－－－－－－ もちろんなんとかすれば，見えるようになると思いますよ。 私はこういうのをなんとかするのがかなり得意な方ですから。 しかし一般の方はこれ以上しようと思わないのではないかと思います。 つまり「変な見えないページ」で終わる可能性が大きいと思います。
カレントが/Results/ResultSetだとして、 <xsl:template match="Listing/@title"> <xsl:template match="Listing/@description"> <xsl:template match="Listing/@siteHost"> で取り出せますね。 　この段階で分からないなら、参考書が一冊必要です。 サイトなら たのしいXML入門( http://www6.airnet.ne.jp/manyo/xml/index.html )あたりかな。
boolean(./following-sibling::AAA) 実際に動くか試してませんが。
>携帯サイトで他サイトのRSSを自動で取得し表示させることはできますか？ できます >無知で申し訳ないのですが、他のブログのRSSから更新情報を取得して自分の携帯サイトに更新タイトルのみを表示させたいのですが、可能でしょうか? もちろん出来ます >ブログの内容を携帯用に変換することは考えておりません。 そういう難しいことは、私にはわかりません。 >可能であれば参考になるサイトなどご教授ください。 PHP一行で書けるRSSリーダー http://blog.myrss.jp/archives/2006/11/phprss.html ただし、WEBサーバで、PHP5　が使えることが条件です。 PHP5が使えるWEBサーバは、例えば、xreaとかロリポップ等があります。 ロリポップは、たぶん1週間か2週間お試しで、使わせてくれます。 試してみてはいかがでしょうか？
連続回答すみません。 俺が当時回答した2007年時のMDCの資料には https://developer.mozilla.org/index.php?title=En … >The name attribute is only valid for a limited set of HTML elements, therefore getElementsByName() is only applicable to those elements. name属性は限られたHTMLの要素のセットでのみ有効であり，getElementsByNameの結果もこれらの要素に対してのみ適用される。 (訳注:ただし、当時Firefox自身がこの挙動に沿っていなかった) と書いてあり，見かけたことある文章なので，#2で述べたものだと思います。確かこれを参考に当時回答を書きました。仕様の記述があいまいなため，2008年になってbug 242808で再燃しているんですね。 http://pastaseca.blog119.fc2.com/blog-entry-87.h … 回答はうまく返せないけど，回答当時の背景を記述しました。
既に解決していると思うが、 すまん， 第一引数の名前空間コピペミスったorz XHTMLの名前空間じゃなくてMathMLの名前空間じゃなきゃいけませんねorz
ルートノードが一つに限られるのは，整形式のXMLでは絶対の基本です。 なので，ルートノードを付け加えないと，xsltでの変換はできません。 ただ，質問のようなXMLはfragment（フラグメント，断片）と言い，XMLを解析して操作するソフトをXMLパーサと言いますが，DOMを扱えるパーサであれば，フラグメントを読み込んで，ルートノードを付け加えるなどの処理をして，xsltで変換するなどが可能かもしれません。 なおxalanは，小生は使ったことがありませんので，このような処理が可能かどうかは分かりません。 あるいは，XMLは，単なるテキストファイルなので，プログラム的にルートノードを付加することも難しくはないので，フラグメントの読み込みなどよりも，テキストとして読み込んで処理するほうが簡単かもしれません。
専門家ではありません。習いがけの初心者の意見として聞いてください。 rssと一口に言っても wikipedia等を見てもらうとわかりますが、htmlのドキュメントタイプのように、いろいろあります。 RDF Site Summary（RSS 0.9とRSS 1.0） Rich Site Summary（RSS 0.91） Really Simple Syndication（RSS 2.0） ちゃんと勉強するつもりなら、標準化団体などで調べるといいんじゃないかと思います。 W3C RSS 1.0 News Feed Creation How-To http://www.w3.org/2001/10/glance/doc/howto 一般的なサイトのrssファイルなどを参考にしたいようなときは、 http://validator.w3.org/feed/ 等で、参考にしようとしているrssなどが、確かなものかどうか検証した上で研究するといいと思います。 もう少し、大きめに書きます。 rssは、さらに大きな目で見ると、xmlです。 htmlに、xhtmlと言う文書型がありますよね。あれも、xmlです。 htmlは、ブラウザで見ることが主体の記述法ですが、xmlは、データを受け渡したりするのに便利だ。とみんなが思っているようです。 rssも、サイトのデータを受け渡すのに使われているといえます。 みんなと受け渡しをするためには、構造的なルールと、そこに入るデータが、こんなやつだよ。と言う情報が必要になるので、それが、RDF1.0とか、決まりごとになっています。 これが、何種類かあるので、、、まず、自分でどれで勉強するんだか決めないと始まりません。 ルールを知って、どういったものかわかったら実現に向けて、歩くわけです。ftpするというは、手間がかかるので、自分なら自動化することを考えるため、PHPなどを学びます。 でも、そんな学習コストを払えないなら、 http://myrss.jp/ なんてサービスもあります。 お役に立てば、うれしいです。
<?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:output indent="yes"/> <xsl:template match="/*"> <xsl:element name="{local-name(.)}" namespace="{namespace-uri(.)}"> <xsl:apply-templates /> </xsl:element> </xsl:template> <xsl:template match="*"> <xsl:choose> <xsl:when test="count(*) = 0"> <xsl:copy-of select="." /> </xsl:when> <xsl:otherwise> <xsl:apply-templates select="*" /> </xsl:otherwise> </xsl:choose> </xsl:template> </xsl:stylesheet> このほうが圧倒的に簡単だね。(ただし,空要素はとってくる方針に変更)
メモ: 1.要素型宣言や属性宣言を全部追加しないと当方環境ではエラー(validateOnParse=true) 2.XPath Injectionってのがあって苦労するかもね
好みの都合で余計なものいっぱいくっついているけど =================Q4511114-1.xml(入力)=============== <?xml version="1.0" encoding="UTF-8"?> <book> <ジャンプ>200円</ジャンプ> <マガジン>210円</マガジン> <サンデー>200円</サンデー> </book> =================Q4511114-1.xsl(変換)============= <?xml version="1.0" encoding="UTF-8"?> <!-- 教えてgooのシステムはURIっぽい文字列の前後にNO WIDTH SPACEをつけるため,回答をそのままコピーしても動きません --> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0"> <xsl:output method="xml" version="1.0" encoding="UTF-8" omit-xml-declaration="no" standalone="no" doctype-public="-//W3C//DTD XHTML 1.1//EN" doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" indent="yes" media-type="text/xml"/> <xsl:template match="/"> <html> <head> <title>Q4511114 TestCase 1</title> </head> <body> <xsl:apply-templates /> </body> </html> </xsl:template> <xsl:template match="book"> <table> <xsl:for-each select="*"> <tr> <td><xsl:value-of select="local-name(.)" /></td> <td><xsl:value-of select="text()" /></td> </tr> </xsl:for-each> </table> </xsl:template> </xsl:stylesheet> ==================Q4511114-2.xml(結果)============ <?xml version="1.0" encoding="utf-8" standalone="no"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> <html xmlns="http://www.w3.org/1999/xhtml"> <head> <title>Q4511114 TestCase 1</title> </head> <body> <table> <tr> <td>ジャンプ</td> <td>200円</td> </tr> <tr> <td>マガジン</td> <td>210円</td> </tr> <tr> <td>サンデー</td> <td>200円</td> </tr> </table> </body> </html>
サンプルを見せてもらい、やりたい事もだいたいわかりました。 Msxml2を使って、selectNodes(strFlt)のメソッドでXPATH指定を引数にして ダイレクトにヒットするノードを取ってくるのですね。 申し訳ありませんが、私はXLTやXPATHの機能や記述をよくしらないので、 1、2、の改良要望が簡単に出来るかどうかはわかりません。 別途質問を投稿すれば回答か得られると思います。 3については、for(i=0;i<clnNod.length;i++)の 部分のclnNod.lengthが件数だから、これを表示するだけですね。 4のXMLを2つに分けて、それぞれから検索する事も、objDocをもう一組、下のように 作って、objDoc2の方も同じように検索すれば可能ですが、 　　var objDoc2=new ActiveXObject("Msxml2.DOMDocument"); 　　objDoc2.async=false; 　　objDoc2.load("2.xml"); そもそも、2.xmlの中から何をキーにしてpriceを取り出すのかが、ご質問の内容からは、 わかりません。仮にキーで検索するとしても、それぞれのxmlを同期モード(async=false)で 読み込んでいるから、処理効率が上がるとは思えません。むしろ1つのXMLから一度に検索し た方が早いです。 非同期モードにして、2つのXMLを並列に検索して、両方の処理が完了した時点で結果をDOMに 書き込むようにすれば、効率は上がるのかも？ この場合、かなりPGMを修正する必要があります。 それから、結果の書き出しについてですが、フレームで分ける必要は無いと思います。 結果の<div>ブロックを準備して中身をDOMアクセス手法で書いたり消したりした方が簡単だと 思います。 さらに個人的な意見ですが、Msxml2は使いたくないですね。IEしか使えなく、IEのシェアは 年々減少しているからです。それと、大量データのXMLのJavascript DOM処理は、資源を使い すぎて遅いです。XPATHは、がSAXみたいな処理なんでしょうかねえ？。もし可能なら、この 手の処理はDBを使ってサーバ側でPHPでも使って、ちゃちゃっとやった方がずっと簡単だと 思います。
XmlDocument.CreateProcessingInstruction メソッドと XmlDocument.CreateDocumentType メソッド を使うVBでは、 ============================================================= Dim xmlDoc As MSXML.DOMDocument Dim xmlPI As IXMLDOMProcessingInstruction Dim xmlDoctype As XmlDocumentType Set xmlDoc = New MSXML.DOMDocument Set xmlPI = xmlDoc.appendChild(xmlDoc.createProcessingInstruction("xml", "version=\"1.0\" encoding=\"Shift_JIS\"")) Set xmlDoctype = xmlDoc.appendChild(xmlDoc.CreateDocumentType("DATAINFO","", "BED0001.DTD","") ================================================================ みたいに作れる VC++では（文法よく知らんが） virtual XmlProcessingInstruction^ CreateProcessingInstruction ( String^ target, String^ data ) virtual XmlDocumentType^ CreateDocumentType ( String^ name, String^ publicId, String^ systemId, String^ internalSubset ) を使う 参考URL：http://msdn.microsoft.com/ja-jp/library/system.x …(VS.80).aspx
XMLでは，ルート要素が必要です。 たとえば，次のように，<アルバム>というルート要素を定義し，すべての要素を，このルート要素の中に入れるようにします。 下の例では，個々の画像について，ファイル名を要素とし，時間や画像幅を属性としています。要素にするか属性にするかは自由に設定できますが，画像などは，実体としてのファイルがあって，そのファイルの属性として撮影日時などがあるので，これに合わせて要素や属性を決めると理解しやすいかもしれません。 --------sample.xml--------------- <?xml version="1.0" encoding="UTF-8"?> <アルバム> <画像 ampm = "pm" time = "7" min="30" width="300"> 0101.jpg </画像> <画像 ampm = "am" time = "9" min="40" width="300"> 0102.jpg </画像> </アルバム> このXMLから，画像と時間を表示するXSLは次のような感じです。 --------sample.xsl------------------------------ <?xml version="1.0" encoding="UTF-8" ?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="html" encoding="UTF-8"/> <xsl:template match="/"> <xsl:apply-templates/> </xsl:template> <xsl:template match="アルバム/画像"> <img src="{.}" width="{@width}"/> <br/> <xsl:value-of select="@ampm"/> <xsl:value-of select="@time"/>: <xsl:value-of select="@min"/> <br/> <hr/> </xsl:template> </xsl:stylesheet> これを表示するhtmlは次のとおり（IEのみに対応） --------------------------------------------- <html lang="ja"> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <title>hello xml</title> <xml id="myxml" src="sample.xml"></xml> <xml id="myxsl" src="sample.xsl"></xml> <script language="JavaScript"> <!-- function start() { here.innerHTML = myxml.documentElement.transformNode(myxsl); } --> </script> </head> <body onload="start()"> <div id="here">ここに表示</div> </body> </html>
質問から時間が経ちすぎているなど，いろいろな意味で外しているかもしれませんが…。 「当行所定の時間が経過したか」という記述からして，cookieを使っているのではないかと思います。 ログインのレスポンスからcookieを取り出し，次のアクセスの時にそれを付けて送ってみてはどうでしょうか。
ブラウザーは何を想定していますか？
と要素はひとつしかもてませんから<doc></doc>とします。 XML <?xml version="1.0" encoding="UTF-8"?> <?xml-stylesheet type="text/xsl" href="./html.xsl" ?> <doc> <content> <text>データ１</text> <text>データ2</text> </content> <content> <text>データ3</text> <text>データ4</text> </content> </doc> XSL <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <html xml:lang="ja"> <xsl:apply-templates select="doc"/> <xsl:apply-templates select="doc/content/text"/> </html> </xsl:template> <xsl:template match="doc"> <body> </body> </xsl:template> <xsl:template match="doc/content/text"> <p> <xsl:value-of select="."/> </p> </xsl:template> </xsl:stylesheet>
http://www.w3.org/TR/REC-xml/#NT-EncName XML processors SHOULD match character encoding names in a case-insensitive way and SHOULD either interpret an IANA-registered name as the encoding registered at IANA for that name or treat it as unknown (processors are, of course, not required to support all IANA-registered encodings). http://www.iana.org/assignments/character-sets The character set names may be up to 40 characters taken from the printable characters of US-ASCII. However, no distinction is made between use of upper and lower case letters. http://www.ietf.org/rfc/rfc2119.txt 3. SHOULD This word, or the adjective "RECOMMENDED", mean that there may exist valid reasons in particular circumstances to ignore a particular item, but the full implications must be understood and carefully weighed before choosing a different course.
こういう探し方じゃだめ？ http://www.google.com/search?lr=lang_ja&q=vbs%20 …
Countプロパティではないですか？ System.Diagnostioc.Debug.writeln( namelist.count.ToString() );
　XPでしたら、Yahooガジェットが軽くていいですよ。 　ガジェットはデスクトップ上に貼り付けられるので便利です。 　RSSリーダーも５つ登録できて読めるものがあります。 　通常最小１５分や３０分程度の感覚で読みにいきますが、これは最低１分感覚で読みにいくのでリアルタイムで小さいHPを開いているようなものですね。 　私は、Okwaveの新着質問もRSSで読んでますよ。 　 　
PHP5なら、前に回答したPEARのXML_Serializerの利用と同等の事が 簡単にできます。​ <?php $string = file_get_contents( XXXXX.XML); $xml = simplexml_load_string($string); /* Result Print*/ print "<pre>"; print_r ($xml); print "</pre>"; ?>
ShiftJISにおいて、半角の円マークをバックスラッシュの意味と円マークの意味の両方で使っているためです。 円マークは、Unicodeでは U+005CではなくU+00A5にマッピングされているので それがUTF-8表現で 0xC2 xA5 のようになっているのですが、 もはやこれはパスの区切り文字とは何の関係もないものなので (バックスラッシュは U+005Cなので 0x5Cとなる)、 その文字を含む文字列をパスを表すものとして解釈するプログラムが文句を言っているわけです。 libxml2 で受け付けるのかわかりませんが、encoding に Windows31-J とかはつかえませんか? あとはどうにかして円マークを使わないような表現にするとか(可能ならば)。
何で処理するかによるとおもうんだけどその辺りを補足した方が答えが得られると思うよ
バグであるという意見に変更させてもらいます。ごめんなさい。 .NETの実装も2を返しました。 http://msdn.microsoft.com/en-us/library/ms256144 … By default, all white-space-only text nodes are preserved. Do not start the transformation from Internet Explorer. The browser performs some space-stripping operations that are not compatible with the XSLT specifications. This can cause the XLST transformation to appear ill-behaved.
ルートノードがない地点でXML文書として認められない。 何かの書き間違いであると信じて要望を予測してみる。少なくとも何かのヒントにはなるはず ==============Q4374721-1.xml================ <?xml version="1.0" encoding="UTF-8"?> <customers> <customer0> <name>aaaa</name> <tel>1234</tel> </customer0> <customer1> <name>bbbb</name> <tel>2345</tel> </customer1> </customers> ==============Q4374721-1.xsl================ <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output indent="yes" /> <!-- お好みで --> <!-- templateは後から書いたものが優先されるので， ルート要素のcustomers要素は下のテンプレートに引っかかる 数字をチェックしているわけではなく単にcustomerで始まる要素をマッチさせているだけなので customersABCのような要素でもヒットする。 まぁその辺はXPathのsubstring関数とか，number関数に通してNaNかチェックしたり andで条件つなげればどうにでもなるでしょ？ --> <xsl:template match="//*[starts-with(local-name(),'customer') and namespace-uri()='']"> <item> <xsl:value-of select="name" /> </item> </xsl:template> <xsl:template match="/*"> <list> <xsl:apply-templates /> </list> </xsl:template> </xsl:stylesheet> ==============Q4374721-2.xml(結果)================ <?xml version="1.0" encoding="UTF-16"?> <list> <item>aaaa</item> <item>bbbb</item> </list>
================Q4352267A.xml=============== <?xml version="1.0" encoding="UTF-8"?> <books> <book> <title>絶対儲かる ルピーの稼ぎ方</title> <price>200</price> </book> <book> <title>フックショットの使い方 入門編</title> <price>50</price> </book> <book> <title>ハイラル城 鳥瞰図</title> <price>500</price> </book> <book> <title>早く走れる靴ランキング </title> <price>100</price> </book> <book> <title>世界の泉探索 -秋は夕暮れ-</title> <price>220</price> </book> <book> <title>ハートを求めて</title> <price>2000</price> </book> <book> <title>妖精の生態</title> <price>500</price> </book> <book> <title>世界の物語 53 闇の世界へようこそ！</title> <price>1500</price> </book> <book> <title>オカリナさんは俺の嫁！</title> <price>800</price> </book> <book> <title>ペンダントに使う宝石</title> <price>450</price> </book> </books> ================Q4352267B.xsl=============== <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/books"> <books> <xsl:for-each select="book"> <xsl:sort select="price" data-type="number" /> <xsl:if test="position() &lt;= 5 "> <book> <xsl:value-of select="position()" />:<xsl:value-of select="title" />:<xsl:value-of select="price" /> </book> </xsl:if> </xsl:for-each> </books> </xsl:template> </xsl:stylesheet> ===============Q4352267C.xml(結果。10件中5件を抽出。本の題名に突っ込んではならない. )============ <?xml version="1.0" encoding="utf-8"?> <books> <book>1:フックショットの使い方 入門編:50</book> <book>2:早く走れる靴ランキング :100</book> <book>3:絶対儲かる ルピーの稼ぎ方:200</book> <book>4:世界の泉探索 -秋は夕暮れ-:220</book> <book>5:ペンダントに使う宝石:450</book> </books> ============================== おまけ:猛烈な勘違いをしたようで，ソートルーチンを自作していた。 <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/books"> <hoge> <xsl:call-template name="minimum"> <xsl:with-param name="rank" select="1" /> <xsl:with-param name="all" select="book" /> <xsl:with-param name="min" select="book[1]" /> <xsl:with-param name="nodes" select="book[position() > 1]" /> </xsl:call-template> </hoge> </xsl:template> <xsl:template name="minimum"> <xsl:param name="rank" /> <xsl:param name="all"/> <xsl:param name="min" /> <xsl:param name="nodes" /> <xsl:if test="$rank &lt; 6"> <xsl:choose> <xsl:when test="count($nodes) = 0"> <p><xsl:value-of select="$min/price" /></p> <xsl:call-template name="minimum"> <xsl:with-param name="rank" select="$rank + 1" /> <xsl:with-param name="all" select="$all[ . != $min]" /> <xsl:with-param name="min" select="$all[ . != $min][position() = 1]" /> <xsl:with-param name="nodes" select="$all[ . != $min][position() &gt; 1]" /> </xsl:call-template> </xsl:when> <xsl:otherwise> <xsl:choose> <xsl:when test="$nodes[1]/price &lt; $min/price "> <xsl:call-template name="minimum"> <xsl:with-param name="rank" select="$rank" /> <xsl:with-param name="all" select="$all" /> <xsl:with-param name="min" select="$nodes[1]" /> <xsl:with-param name="nodes" select="$nodes[position() &gt; 1]" /> </xsl:call-template> </xsl:when> <xsl:otherwise> <xsl:call-template name="minimum"> <xsl:with-param name="rank" select="$rank" /> <xsl:with-param name="all" select="$all" /> <xsl:with-param name="min" select="$min" /> <xsl:with-param name="nodes" select="$nodes[position() &gt; 1]" /> </xsl:call-template> </xsl:otherwise> </xsl:choose> </xsl:otherwise> </xsl:choose> </xsl:if> </xsl:template> </xsl:stylesheet>
根本的勘違いがあるように見受けます。 xmlはデータ保持としての形式なので、また書いてるソースはJavaScriptのようですがこれもクライアントサイドで動作するので、 掲示板やカウンター作成のためには、その情報をサーバー側に保存するプログラム（cgiといわれるもの、perlやphpが多く利用されている）が必要です。
サイトマップを生成したツールにもよるのかと思いますが 通常、別サイト上のコンテンツは、物理的な階層で言えば、階層の外 ... この場合で言えばindex.htmlの外側になるかと思います。 実際リンクのURLも、他は相対パスなのに対して、別サイト間では絶対パスで指定してるのではないでしょうか？ そういった階層の外部URLにも対応したサイトマップツールを探せばいいのかな・・・と。 でちょっと調べた感じだと http://www.shoshinsha.com/hp/tools/sitemap.htm で紹介されているツールなどあるようです。
> 異なるフォルダから特定のノードを検索、抽出する方法が見つかりませんでした。 XSLですが、こういうことでは無いのでしょうか？ http://www.atmarkit.co.jp/fxml/tanpatsu/10xslt/x …
もう見られていないかもしれませんが。 floatがらみではなさそうですね。 ためしに <!--[if IE]><style type="text/css">* {zoom:1;}</style><![endif]--> をheadに加えてみてください。 何か変わるかもしれません。
んーっと。話が今ひとつ読めないんだけど http://www.w3.org/TR/REC-html40/interact/forms.h … option要素を選択するには <select name="hogesel"> <option value="121">121</option> <option value="122">122</option> <option value="123" selected="selected">123</option> </select> とするんだけど， ( http://www.w3.org/TR/REC-html40/interact/forms.h … ) 回答してほしい内容と違う？
javascriptのRSSリーダーを設置するというのはどうでしょう？ http://www.kawa.net/works/ajax/rss/rss.html
http://www.google.com/search?q=xml%20dtd%20%E5%A … なんかjavaでの検証の話が一杯だねぇ… で、探してたら一応こんなのを発見 http://www.xmleditor.jp/
実践してみたことはないんで自信はないけど xsl:importとかxsl:includeとか 使ってどうにかできないだろうか？
補足要求。この間から回答を躊躇っているのは 質問文が良く理解できず 入力されるXMLと出力されるXMLの例がないから どういうものを求めているのかわからないため。 「<hoge> <fuga id="aaa" /> <fuga id="bbb" /> </hoge> となっているときに idがaaaであるfuga要素に 子要素としてfoo要素を追加し <hoge> <fuga id="aaa"><foo /></fuga> <fuga id="bbb" /> </hoge>」 ・・・みたいに書かれていると答えやすい。
質問者様の理解で正しいと思います。 xmlに限った質問ではないでしょうが、 xmlではテキスト値も「テキストノード」というノードの種類に分類されます。 従って、 > 例えば「xhtml」文書の中に「<em>強調</em>」とある場合、 これは「em」要素の内容が葉ノードと言えます。 同様に > 「<p>開始<em>強調</em>終了</p>」とある場合、 > 開始（葉ノード）と、 > 「em」要素（部分木の根ノード）は、 > 兄弟？ 「開始」ノードと兄弟であるノードは 「em」ノード、「終了」ノードと言えます。
こんにちは、 http://xxxxx.xxxxxx/　や　index.htmlでトップページは表示されるが、なんで、http://xxxxx.xxxxxx/とアクセスしたときに、http://xxxxx.xxxxxx/rss.xmlとかいうファイルが表示されるのか？ ということですよね。 http://xxxxx.xxxxxx/煮アクセスしたときに、最初に表示するページは、 WEBサーバプログラムの設定を変えると、自分で好きに設定できます。 詳しくは、.htaccess index　などのキーワードの組み合わせで、調べるといっぱい出てきます。 例：http://www.shtml.jp/htaccess/directoryindex.html xmlっていうファイル形式はRSSリーダーとかで読み取るファイル形式。 htmlと似ているテキストファイル。 ブログのトラックバックやpingといった通信でも使います。
ちょっとメモ。 1. 何やりたいかはわかった。再帰全く関係ねー。 多分XMLとXSLTだけでは完結せず。他の言語によるプログラムで XSLTプロセッサに引数を渡すさないと無理っぽい(諦めろってこと) で,他の言語でやることになるなら xsl:templateの変数ではなく xsl:stylesheetの最初の子要素として <xsl:param name="TopData" select="1" /> を配置する(実際に試してみてはいない) 2.【オマケ】 文法ミス多すぎ。 CDATAに書いたものは単なるテキストノードになるだけ。XSLTの要素にはならないよ、当然。 #XSLTの変数はJavaとかで言うfinalって言えばわかる？ そもそも元のxmlファイルが整形式ではない ×<?xml:stylesheet type="text/xsl" href="hoge.xsl"?> ○<?xml-stylesheet type="text/xsl" href="hoge.xsl"?> 比較演算子が実体参照に直されてないためにXSLTスタイルシートそのものが整形式エラーを出してた。 xsl:attribute直下に何で要素が配置されてるんだよ xsl:sort のselect属性のpnoは@pnoの誤り #俺も知らなかった concat関数の引数はattribute value templateではないようで, {}で括るとエラーにされた・・・ので string($TopData+$PageData) とすることで切り抜けた。 s要素にマッチするテンプレートで出力される img要素やdiv要素は「XHTMLの名前空間の要素」ではなく「名前空間なしの要素」なので注意 個人的には【xsl:stylesheet要素】に「デフォルト名前空間はXHTMLの名前空間である」っていう名前空間宣言をつけとくのがいいと思う。 XHTMLの名前空間のimg要素はalt属性必須です。 XHTMLの名前空間のa要素の内容も指定しよう
>HTML上で表示したようなデザインで だったらいちいちXMLなんぞを経由せず「ファイル」「保存」で「Webページ」 で保存すれば良いだけの話なんじゃ？　保存した.htmをダブルクリックすれば ちゃんとブラウザでEXCELの表示どおり開きますし。 XMLファイルはWebページに表示するためのファイルではなく、データ 交換のためのファイルですよ。XMLファイルをブラウザで表示させるには、 フォーマットを規定した何らかのファイルが別途必要ですから（XSD ファイルとか）。
こんにちわ。 ＞サイトマップ(sitemap.xml)って1サイトにいくつまで使えるものなのでしょうか？ ひとつのサイトマップ ファイルにリストする URL は 50,000 個まで、ファイル サイズは 10 MB (10,485,760 バイト) 以下とする必要があります、と sitemap.org には書かれています。 http://www.sitemaps.org/ja/protocol.php
単にfor-each でデータ表示すればいいことなんじゃないの？ <xsl:for-each select="//test" > <xsl:value-of select="position()" />: </xsl:for-each>
Option Explicit On Option Strict On Option Compare Binary ' Option Infer Off 'http://support.microsoft.com/kb/317069/en-us Class Q4095116A Shared Sub Main 'XPathとかDOMとか組み合わせて使えばいいんじゃないの？ 'Javaが関心カテゴリに入っている以上細かい解説はしないで大丈夫だと思うけど。(使ったのはVB.NET) 'Instantiate the XPathDocument class. Dim xmldoc As New System.Xml.XmlDocument() xmldoc.Load("./Q4095116-1.xml") 'Instantiate the XPathNavigator class. Dim nav As System.Xml.XPath.XPathNavigator = xmldoc.CreateNavigator() 'Instantiate the XPathIterator class. '質問文から読み取れなかったが，どっちだろ。 'ルート要素のhoge要素の子要素のset要素で，かつその要素のname属性が'その1'という値を持つとき、そのvalue属性を列挙するイテレータ Dim iterator As System.Xml.XPath.XPathNodeIterator = nav.Select("/hoge/set[@name='その1']/@value") 'ルート要素のhoge要素の子要素のset要素で，かつ、その要素のvalue属性が12であるとき、そのそのvalue属性を列挙するイテレータ 'Dim iterator As System.Xml.XPath.XPathNodeIterator = nav.Select("/hoge/set[@value='12']/@value") Do While iterator.MoveNext iterator.Current.SetValue("13") Loop xmldoc.Save("./Q4095116-1.xml") End Sub End Class ========xmlファイル(exeと同じディレクトリに配置したQ4095116-1.xml)=========== <?xml version="1.0" encoding="UTF-8"?> <hoge> <!-- ルート要素がないとXMLにならないので。また，上位の要素では名前空間が宣言されていないものとする。--> <set name="その1" value="12" /> <set name="その2" value="3" /> <set name="その3" value="5" /> <set name="その4" value="10" /> </hoge>
実行時にF5じゃなくF8で実行してくれますか？ 黄色いカーソルがでてきて、F8を押すたびに行を進んでいきます。 どこかで 「実行時エラー　´5´： 　プロシージャの呼び出しまたは引数が不正です」 とエラーが表示されるはずなので、そこの部分のプログラムをここに記述下さい。
<?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/DtPDataList"> <hoge><xsl:value-of select="text()" /></hoge> <!-- http://www.w3.org/TR/xpath#location-paths child::text() selects all text node children of the context node ちなみに,このコードだと, DtDataTitle要素のpreceding-siblingなtext nodeだけじゃなく DtDataTitle要素のfollowing-siblingなtext nodeも含まれるので もし,preceding-siblingなtextが欲しい場合は preceding-sibling::text()でもtext()[1]でもお好きなように。 gooの仕様でURIっぽい文字列の前後にZERO WIDTH SPACEが埋め込まれるので多分このXSLTは整形式として認識されないから 理解して自分で書き直すか,テキストエディタで弄ってから使ってください #どうでもいいが,XPathが 1 orginなのにはどうしても慣れんな --> </xsl:template> </xsl:stylesheet>
失礼します。 今、読んでいて？と思った事が２つあるのですが・・・ ひとつめ、 ＞Google Mapで作成したKMLファイルをマイマップで 読み込もうとすると、以下のエラーが出て読み込めません。 と、言うところの「KMLファイル」とは？ ふたつめは、先の方がお話しされているとおりです。 ＞　<?xml version="1.0" encoding="Shift_JIS"?> と言うように記述すると、 このxmlはversionが1.0で、文字コードはShift_JISで記述されています。 の内容になってしまいますから、ここは、さきの方のお話されている通り <?xml version="1.0" encoding="UTF-8"?>　だと思うのですが。 現に表示されたエラーメッセージでも、 ＞Unsupported encoding Shift_JIS　 と表示されているそうですから。 つまり、encoding Shift_JISは、サポートしていない、ということですよね？ http://www.sitemaps.org/ja/protocol.php
今見ているブラウザでできるんじゃない？ 携帯じゃなければ　の話だけど。 http://www.google.co.jp/search?hl=ja&lr=lang_ja& …
============hoge.xml============== <testNode>aaa</testNode> =====================fuga.xsl============== <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match ="/"> <p> s<xsl:value-of select="name(.)" />s <!-- name(.)は何もありません。match="/testNodeとかなら値は出てくるだろうけど。"--> <xsl:apply-templates /> </p> </xsl:template> <xsl:template match="testNode"> <xsl:variable name="el"><xsl:value-of select="name(.)"/></xsl:variable> <!-- 7.6.2 Attribute Value Templates In an attribute value that is interpreted as an attribute value template, such as an attribute of a literal result element, an expression can be used 【by surrounding the expression with curly braces ({}). 】 {}で括らないでテストしたら$は要素名に使えないって怒られた。 --> <xsl:element name="{$el}">aiueo</xsl:element> </xsl:template> </xsl:stylesheet> ============= 出力結果 <?xml version="1.0" encoding="utf-8"?> <p> ss <testNode>aiueo</testNode> </p>
空要素とかの話は無視する。 文字符号化方式を変更すること自体は http://www.w3.org/TR/xslt#output xsl:outputのencodingを変更することで可能な模様。 ただし,実装によって以下の挙動がどうなるかは確認していない http://ja.wikipedia.org/wiki/Unicode#.E6.97.A5.E …
VisualStudio 2005で試してみました。 caller.xsdのschema要素のxmlns属性が"http://sample.com"になっているのがだめみたいで、"http://example.com"にしたらエラーがなくなりました。
オライリー系は書き方が難しくて嫌いです・・。 オライリーのXMLSchemaの本買いましたが、1/10読んで力尽きた経験があります。 本は、Webで調べることができるだけの基礎知識をつけるためのものと考えているので、私は本ではXML逆引きクイックリファレンス(練習問題はありませんが、どれも使用例付きです。)というすごーく簡単な書籍で全体像を掴んで、その後はWebで適当に調べてます。 (つまり入門は本で、その後はWebという感じですね。)
まさに http://shikaku.impress.co.jp/errata/2142_xml_bas … のことですか？
規則として#PCDATAは+に出来ないのよ。実は。 だからDTDの文法としてアウトなの。 http://www.isc.meiji.ac.jp/~miuraj/xml/xml_guide …
http://www.w3.org/TR/xmlschema-1/#xsi_schemaLoca …
(1)つまり、<color>要素の兄弟でループしているという考え方でよいのでしょうか？ OK (2) ><xsl:apply-templates select="." />で呼ばれるのは、<xsl:template match="color">であると思うのですが、 OK ><xsl:value-of select="jp" />で<jp>要素はよばれるが、 NG 呼ばれるけどjp要素に対して【templateを】適用しろ、とは言って無いし，value-of select自体はテンプレートでもなんでもないよね？ ><en>はビルトインテンプレートが呼ばれるのではないのでしょうか？？ NG これがもし， <xsl:when test="position() mod 2=0"> 　　<xsl:apply-templates /> </xsl:when> だったら， http://www.w3.org/TR/xslt#section-Applying-Templ … >In the absence of a select attribute, the xsl:apply-templates instruction processes all of the children of the current node, including text nodes. select属性がないので全ての子要素に対して該当するテンプレートを探して適用しますがね。 ============= 細かいことだけど，俺前回間違ったことを教えているところがあった。 http://www.w3.org/TR/xslt#strip
Exchanger XML Editorでは、 number(/test/text()) で、正しく値が取得できますが、 XPathGraphではだめですね。 いろいろ試してみたところ /* で、取得できました。 XPathGraphはperlで作ってあるみたいなのでperlのXPathを扱うライブラリの ルートノードの扱いに問題があるのかもしれませんね。 XMLを <test> <value>55</value> </test> という内容に変えて、 number(/test/value) としてみたらどうでしょうか？
XMLの何をどう勉強されるのかによると思いますが、プログラムやXSLTで処理する用のデータを作りたいというのであれば、ネット上に転がっているXML文書（例えば、XML解説サイトのサンプルデータ）を拾ってきてそのまま使うかあるいは置換とか使ってタグ名などを書き直すかですかね。 もっと初期のXMLの文法とかの勉強だとしたら、実際に手を動かさないと憶えが悪いので、ANo.1さんのように雛形を作ってあとはコピーがいいんじゃないでしょうか。 もう少し勉強が進んでいて、文法は大体わかったから雛形すら打つのが面倒だとかいうことであれば、開発ツールについてくるXMLエディタとかを利用すれば、勝手に閉じタグを付けてくれたり、インデントしてくれたり、打ち間違えをチェックしてくれたりとかやってくれますので、それをコピーすればどうでしょうか。
WinXPで実験してみた ・・・・が，エレガントじゃ全然ない。 ファイル名が気に入らなかったというか考えながら打つのが面倒くさいので list.xml → hoge.xml elem.xml → fuga.xml となっている。 Editだとどうしても厳密に指定しなきゃいけなさそうな気がするので 諦めて新たにXSLTモドキを書いて別ファイル作ってしまえ！という策に出ることにした。こんなコマンド書くなら素直にXSLTファイルを別に用意してXSLTプロセッサに流したほうが楽だろうなあとは思う。 C:\xmlstarlet-1.0.1>xml sel -t -m "/x" -e "x" -m "@*" -c "." -b -m "e" -c "." -b -c "document('./fuga.xml')/x/e" -b ./hoge.xml 出力結果は以下の通り。 <x><e a="1">value1</e><e a="2">value2</e><e a="3">value3</e></x> ●ルート要素が共に各ファイルは/x/eという構造をしているものとしてのみ想定し，/x/aとか/x/text()があることは考慮されてない。 なお，一応XSLTの規格によれば http://www.w3.org/TR/xslt#section-Creating-Eleme … xsl:elementのname属性はattribute value templateらしいので 「ルート要素の要素名」という指定も可能だ。解説はしないので自分で読んどくれ。 ●hoge.xmlのルートのx要素に属性が存在していた場合には一応コピーするようにしたが，fuga.xmlのルートのx要素と属性が異なっていた場合は保証しない。 最後にこのコードをXSLTに直しておく。 面倒くさいのでxsl:output要素のencoding属性等コマンドラインでも 以下のシートでも指定してないのでUTF-16になる可能性大ですが。その辺はヘルプ見て。 <?xml version="1.0"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/x"> <xsl:call-template name="t1"/> </xsl:template> <xsl:template name="t1"> <xsl:element name="x"> <xsl:for-each select="@*"> <xsl:copy-of select="." /> </xsl:for-each> <xsl:for-each select="e"> <xsl:copy-of select="." /> </xsl:for-each> <xsl:copy-of select="document('./fuga.xml')/x/e" /> </xsl:element> </xsl:template> </xsl:stylesheet>
こんばんは(^^ ええと、本来VCDに該当しないファイルを置くとVCDとして認識されないんです。 どうしてもWhitebook規格外になってしまいますから。 </pvd>と<segment-items>の間に、VCDに相当しないファイルをおきます。 filesystem部分に記述します。 LinuxMpegTVが実行ファイルだけで動くなら（この辺りは未確認なのでDLLが必要ならそれも一緒に） <filesystem> <file src="パス\LinuxMpegTVのファイル" format="form1"> <name>LinuxMpegTVファイル実行ファイル名</name> </filesystem> これでbin+cueで出力してください。 bin+cueですから最初に仮想CDかなんかでマウントしWhitebook規格で通るのか確認してくださいね。Whitebook規格はうるさいから(^^;; ビットレートとかサイズとかです。 なので再生機にもよりますがね実は結構通りません。。 ただ、Linuxでは生mpegでも再生できるのであまり気にしないでいいかなと思います。 ではでは。
うん。誤解しまくっているね。 まずは「ビルトインテンプレート」について学ぼう。 http://okwave.jp/qa3362718.html #2リンク先 apply-templatesでselectしているのは 複数のbook要素ノードからなるノードセットだね。 <xsl:apply-templates select="books/book"/> 最初のbook要素はprice要素じゃないから 以下のテンプレートにマッチしない <xsl:template match="book/title/price"> よってビルトインテンプレートを適用する。 book要素の最初の子は(空白文字類からなる)テキストノード。これはそのまま。 次にtitle要素。だけどこれもprice要素じゃないからやっぱりテンプレートにマッチしない よってtitle要素にもビルトインテンプレートを適用する title要素の最初の子はテキストノードだからそのまま出力。 ●XMLとは title要素の次の要素はprice要素。ここでやっと，テンプレートにマッチするから適用していく。 テキストノード ● newTag要素開始タグ ●<newTag> テキストノード ● と続いて・・・ xsl:value-of要素のselectはマッチしているprice要素を基準に考えられるからprice要素そのもの。 xsl:value-of要素が出力する内容は http://www.w3.org/TR/xslt#value-of に従いstring関数にオブジェクトを指定した(string-value)のと同じ内容の文字列。 http://www.w3.org/TR/xpath#function-string http://www.w3.org/TR/xpath#element-nodes Element Nodeのstring-valueはその要素の子のstring-valueを全てつなげたもの。 price要素の子はテキストノードだけで，それはそのテキストノードの文字列そのものである。 http://www.w3.org/TR/xpath#section-Text-Nodes ●2000 テキストノード ● newTag終了タグ ●</newTag> テキストノード ● テンプレートおしまい。 次の要素はprice要素の次のノードだからテキストノード。 ● でtitle要素への適用終わり。 title要素の次はやっぱりテキストノード ● book要素への適用終わり。 テンプレートをbooks要素の子の次(二番目の)のbook要素に適用する。 この前のテキストノードはselectしてないから当然選ばれない。 ・・・・(以下略) だから出力結果は正しいです。 ====================== これがもし， <xsl:apply-templates select="books/book"/> ではなく <xsl:apply-templates select="books/book/title/price"/> だったら、出力結果は <?xml version="1.0" encoding="utf-8"?> <answer> <newTag>2000</newTag> <newTag>1800</newTag> <newTag>4000</newTag> </answer> となります。 ======================== ところで，多分サンプルの都合だと思うけど 普通はこういう構造にするよね・・・・ <?xml version="1.0" encoding="Shift_JIS"?> <books> <book> <title>XMLとは</title> <price>2000</price> </book> </books> #よく調べてないけど改行とかは無視されるのかも。 xml:spaceとか使うのかなあ？
俺自身はコード書くのが面倒くさいので eXtyle http://www.vector.co.jp/soft/win95/net/se236115. … (MSXML) とか XMLEDITOR.NET http://www.xmleditor.jp/cgi/yybbs/yybbs.cgi とか使って変換して確認している。 (ただ、掲示板で俺が述べているように，XGrepの仕様に疑問有り。次期バージョンでの修正に期待。XSLTの変換自体に問題はなさそう。実装自体は.NET Framework) 別に コマンドライン系のXSLTプロセッサを拾ってきたり .NETやらJavaやらで自分でコード書いてもらってもかまわないけどね。
XML、XSLTファイルはテキストエディタ（メモ帳など）で作成できます。 XMLファイルはXXX.xml、XSLTファイルはXXX.xsltのような拡張子で保存します。 動作確認は、作成されたXML文書のアイコンをWebブラウザにドラッグアンドドロップすれば確認できます。 XML文書をXSLTを利用してHTMLとして表示させるためには上記の2つがあれば良いので下記サイトなどを参考にして作成してみてください。 たのしいXML：http://www6.airnet.ne.jp/manyo/xml/
各ブログサービスはそもそもシステムが違います。 忍者ブログのテンプレートのインポート機能は、多分HTMLの中にある独自タグを忍者ブログのものに置き換えるんだとは思いますが http://www.ninja.co.jp/help/blog/admin/admin023. … ここに「現在は一部大手ブログのテンプレートのみの対応になっています」とあります。 ＞このXMLを使うにはどの様にしたら 自分で勉強してHTMLに置き換え、忍者ブログの独自タグを埋め込んでいくしかないでしょう。（そもそもBlogger・WordPress以外のブログで使うことは許されているんでしょうか） というわけで、このテンプレートは忍者ブログのテンプレートのインポート機能は使えません。
ヒント: exclude-result-prefixes
http://bakera.jp/ref/html/dataformat/rcdata >属性値の中で文字参照が解釈されることには注意が必要です。特に href属性の値に & を含む URL をそのまま書くことはできませんので注意してください。たとえば、http://example.jp/foo?bar&baz という URL があったとき、ブラウザのアドレスバーには http://example.jp/foo?bar&baz と打ち込むことになりますが、href属性の値としては href="http://example.jp/foo?bar&amp;baz" あるいは href="http://example.jp/foo?bar&baz" と指定する必要があります。 まあ要するに &voteid;という実体参照だとXML Parserが思っちゃっている(この解釈が正しい)から ;が足りない文法エラーだと言っているんだね。
単なるtypoの修正 [誤] #x2540は含まれません！ [正] #x25A0は含まれません！ その他の点には影響ありません # <__ />も<:: />も許されるはずなんだけど、手元の実装では全て後者でエラーが出ます。何ででしょうね？
JDK 7でやろうとしたらエラーが出たし、エラーの原因を把握して動作するようにするのも面倒なのでメモだけ <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0"> <xsl:output method="html" encoding="UTF-8"/> <xsl:template match="/all"> <html> <head> <title>Q3861990 TestCase 1</title> </head> <body> <dl> <xsl:apply-templates select="index"/> </dl> </body> </html> </xsl:template> <xsl:template match="index"> <xsl:apply-templates select="product" /> </xsl:template> <xsl:template match="product"> <xsl:variable name="pos" select="floor((position() - 1) div 3)" /> <xsl:call-template name="compare"> <xsl:with-param name="pos" select="$pos" /> <xsl:with-param name="current" select="." /> <xsl:with-param name="nodes" select="../product[floor((position() - 1) div 3) = $pos]" /> </xsl:call-template> </xsl:template> <xsl:template name="compare"> <xsl:param name="pos"/> <xsl:param name="current" /> <xsl:param name="nodes" /> <xsl:if test="count($nodes[1]|$current) = count($current)"> <!-- 実際はここら辺にredirect:open要素やredirect:write要素の開始タグ・・ --> <dt><xsl:value-of select="concat($current/../@file_id,string($pos))" /></dt> <xsl:apply-templates select="$nodes/yoso" /> <!-- 実際はここら辺にredirect:open要素やredirect:write要素の終了タグ・・ --> </xsl:if> </xsl:template> <xsl:template match="yoso"> <dd><xsl:value-of select="../@file_id" />:<xsl:value-of select="text()" /></dd> </xsl:template> </xsl:stylesheet> 出力結果 <html xmlns="http://www.w3.org/1999/xhtml"> <head> <title>Q3861990</title> </head> <body> <dl> <dt>a0</dt> <dd>a-01:ああああああああああああああああ</dd> <dd>a-02:いいいいいいいいいいいいいいいい</dd> <dd>a-03:うううううううううううううううう</dd> <dt>a1</dt> <dd>a-04:ああああああああああああああああ</dd> <dd>a-05:いいいいいいいいいいいいいいいい</dd> <dd>a-06:うううううううううううううううう</dd> <dt>b0</dt> <dd>b-01:ああああああああああああああああ</dd> <dd>b-02:いいいいいいいいいいいいいいいい</dd> <dd>b-03:うううううううううううううううう</dd> <dt>b1</dt> <dd>b-04:うううううううううううううううう</dd> <dt>c0</dt> <dd>c-01:ああああああああああああああああ</dd> <dd>c-02:いいいいいいいいいいいいいいいい</dd> <dd>c-03:うううううううううううううううう</dd> </dl> </body> </html> ============================================ 教えてgooの仕様で,URIっぽい文字列の前後にXMLに存在できない空白文字を埋め込まれることが多い。動作しないことがよくあるのでテキストエディタで適宜編集してから使用すること。
サーバサイドプログラムが必要です。 自力でやるのであれば キーワード：お好きなサーバサイド言語 RSS 表示 他力本願なら キーワード：ブログパーツ RSS 表示
初期の携帯電話であれば、モノクロですので2色しか表現できないと思われます。カラー時代でも256色であれば65536色よりは色彩が劣ります。最新のものであれば、約1678万色の表現が出来ます。 そういった観点からすると、携帯機種・キャリアによって色彩はかわります。 もし、作成する上で多くの携帯電話に対応するならばセーフカラー（256色しか使用できないものならばそれにあわせる）を使用すべきです。利用者を最新機種を持った人に限定するならばそれほど気にしなくても良いと思います。 私の推測ですが、大抵は65536色は表現できると思いますのでそれでしたら下記サイトあたりをご参照下さい。 基本的には#XXYYZZの組み合わせです。 例：#0033ff 例：#ffff66 カラーディスプレイについて：http://www.coara.or.jp/~ynakamra/iro/colordisp.h …
お役所ソフトで作成した オリジナルXMLとVBで作成したXMLファイルを 比較してみればいいのではないですか Windowsなら FC.EXEっていうファイル比較コマンドがあります コマンドプロンプトで (ファイル名は適宜修正してください) FC.EXE 役所.XML VB.XML[ENTER] または FC.EXE /B 役所.XML VB.XML[ENTER] といった使い方をします
MSXMLはMicrosoftが提供するXML関連ライブラリです。 ＞ブラウザに表示させるためにXMLをHTMLに変換するものと考えてよろしいんでしょうか？ ちょっと違います。 質問者さんの言っている変換機能(XSLT)はMSXMLの提供する機能の一部です。 参考URL：http://msdn2.microsoft.com/en-us/library/ms760399(VS.85).aspx
テストケースの作り方が悪い。再現しないんで何がいいたいか伝わらないよ(笑) pop-bombさんのいいたそうなことを予測します。(外れるかもしれない) うまく行くかも自信ない ==================================== 以下のようなXMLファイルを考える #gooのシステムの都合上，well-formedじゃなくなるかもしれないけど，それはgooのせいです。(空白に良く似た文字が挿入されることが多いので 良く探してください) #まぁわかるよね，ってことで，その時は修正してください <?xml version="1.0" encoding="UTF-8"?> <list> <item> <title>チョコレート</title> <value>200円</value> <shops> <shop>○○ストア</shop> <shop>スーパー△△</shop> <shop>駄菓子屋□□</shop> </shops> </item> <item> <title>本</title> <value>1000円</value> <shops> <shop>○○ブックス</shop> <shop>△△百貨店</shop> <shop>スーパー△△</shop> <shop>スーパー××</shop> </shops> </item> <item> <title>うめぼし</title> <value>100円</value> <shops> <shop>スーパー○○</shop> <shop>△△百貨店</shop> <shop>通販○○</shop> </shops> </item> </list> このとき，本を販売する，異なるスーパーが二つ以上存在するようにしたことに注意。 ここで，以下のXSLTを適用すると <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <data> <xsl:apply-templates select="list/item/shops" /> </data> </xsl:template> <xsl:template match="shops"> <xsl:for-each select="shop"> <xsl:if test="contains(.,'スーパー')"> <li><xsl:value-of select="../../title" /></li> </xsl:if> </xsl:for-each> </xsl:template> </xsl:stylesheet> ========================= <data> <li>チョコレート</li> <li>本</li> <li>本</li> <li>うめぼし</li> </data> =========================== という出力結果が得られる。 ($whereは面倒くさいのでリテラルで置き換えました。 また、この要素がsiblingと等しくないのが常に成り立つのは明らかなので省略。) しかし、これは「本」が重複してしまっているので <data> <li>チョコレート</li> <li>本</li> <li>うめぼし</li> </data> としたい。 ========================== そこで <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <data> <xsl:apply-templates select="list/item/shops/shop[contains(text(),'スーパー')]/../../title" /> </data> </xsl:template> <xsl:template match="title"> <li><xsl:value-of select="text()" /></li> </xsl:template> </xsl:stylesheet> というXSLTを作成し、適用したところ， 期待する結果が得られた。
http://bugs.sun.com/view_bug.do?bug_id=5077403 未検証だけどこれっぽい臭いがします。 #1.5.0_09-b01とjdk: 1.5.0 b58 #のどっちが先かわからん。 #見るとしたらxalanの方であって，JDKのバージョン見ても意味なし？ひょっとして。 #見方教えてくれるとうれしいなっと(おぃ
まず、携帯ではJavascriptは動きません。これは携帯サイトを造るなら憶えておくといいです。 スクロールさせる要素としてはマーキーがあります。 http://www.htmq.com/html/marquee.shtml ただし、カーソルを載せるとスクロールを始めるというのは自動改行を禁止したテキストを表示するための携帯ブラウザ特有の機能だったりします。（機種によっては自動改行禁止が無効だったりもするようです） 例） <DIV MODE="NOWRAP">改行禁止のブロックで長い文章を書くとPCなら横スクロールバーが出ますが携帯ではその部分だけスクロールします。</DIV>
またまた挑戦です。 ・　複数のitemとkeywordsに対処したつもりです。 -------------------------------------------------------------------- <?xml version="1.0" encoding="utf-16"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <list> <xsl:apply-templates select="books"/> </list> </xsl:template> <xsl:template match="books"> <xsl:for-each select="item"> <xsl:for-each select="keywords"> <xsl:apply-templates select="."/> </xsl:for-each> </xsl:for-each> </xsl:template> <xsl:template match="keywords"> <xsl:for-each select="keyword"> <category> <xsl:value-of select="."/> <title> <xsl:value-of select="../../title"/> </title> </category> </xsl:for-each> </xsl:template> </xsl:stylesheet>
XMLの書式に乗っ取ってXMLファイルを書いて、XSLの書式に乗っ取ってXSLファイルを書けば、それに応じたなにかが表示されるでしょう。 とりあえず、初心者向けによく紹介されてるサイト http://www6.airnet.ne.jp/manyo/xml/index.html 参考URL：http://www6.airnet.ne.jp/manyo/xml/index.html
YAHOOのウェブマスターツールから実際にサイトマップを登録してみて、きちんと登録できれば認識出来ているかどうか分かると思いますよ。参照ＵＲＬにYAHOOウェブマスターツールからサイトマップの登録する方法が書いてある記事を入れておきました。 　認識されないファイルを入れるとエラーになるので一度試してみてください。 参考URL：http://seoxseo.com/yahoo/yahoositemapentry/
返事が遅くなりました。 すみません。 MSXML2.DOMDocumentでの文字コード指定による保存ですが、OKWave内でJScript.NETを用いた回答が過去にありましたので、参考URLをご覧になってみてください。 FileStreamを使用することで実現できそうです。 >また、初歩的なことかもしれませんが、XMLファイルの宣言文にある文字コード（encoding=）はどのように読めば良いのでしょうか。 読み込んで何をしたいのでしょうか？ System.Xml.XmlDocumentのLoadXMLメソッドを使用すれば、あまり気にしなくても良いと思うのですが... 参考URL：http://okwave.jp/qa1772802.html
　このSAXParserのparseだが、Fileインスタンスの他にInputStreamインスタンスを引数に取るオーバーロードが存在する。 　SAXParser#parse(InputStream, DefaultParser) これはInputStreamからreadしてパースするものだ。つまり、Stringを何らかの方法でInputStreamにしてやれば良い。方法は簡単。StringをgetBytesでbyte配列に取ってから、ByteArrayInputStremに食わせてやればよい。 // ※このように String str = "<xml? ......"; // SAXパーサーファクトリを生成 SAXParserFactory spfactory = SAXParserFactory.newInstance(); // SAXパーサーを生成 SAXParser parser = spfactory.newSAXParser(); // XMLファイルを指定されたデフォルトハンドラーで処理します parser.parse(new ByteArrayInputStream(str.getBytes()), new InsXMLParser()); 　動くと思うが頭ん中だけで書いているのでぜひ実験して欲しい。
俺の過去の回答から http://oshiete1.goo.ne.jp/qa3362718.html ソースコードから察してください (ただ、教えてgooの仕様で，URIっぽい文字列の前後に​をシステムが埋め込むため， 置換するなり，自分で書き直すなりしないと動きません) 実際には#2において， <xsl:value-of select="ItemAttributes/Title" /> は上部の記述と合致していません。XPathに接頭辞つけないと (#1のコードは上記の点を直せば正しい) オマケ http://okwave.jp/qa3477885.html
書籍じゃないですけど、このサイトがお勧めです http://www6.airnet.ne.jp/manyo/xml/ もしHTMLがわかるならそんなに苦労しないと思います。 がんばってください。
関心カテゴリに「英語」が入っているので， 読んでもらえばわかるということで細かい解説は省く。 http://www.w3.org/TR/xslt#value-of >The xsl:value-of element is instantiated to create a text node in the result tree. The required select attribute is an expression; this expression is evaluated and the resulting object is converted to a string as if by a call to the string function. http://www.w3.org/TR/xpath#function-string The string function converts an object to a string as follows: * A node-set is converted to a string by returning the string-value of the node in the node-set 【that is first in document order】. If the node-set is empty, an empty string is returned. http://www.w3.org/TR/xslt#section-Applying-Templ … >5.4 Applying Template Rules A select attribute can be used to process nodes selected by an expression instead of processing all children. The value of the select attribute is an expression. The expression must evaluate to a node-set. The selected set of nodes is processed in document order, unless a sorting specification is present (see [10 Sorting]). これと http://www.w3.org/TR/xslt#built-in-rule 5.8 Built-in Template (略) の組み合わせでノードリストに含まれる各ノードのテキストが出力されているのを勘違いしている。 #もちろん，もう一段，xsl:for-eachを入れてもいいわけだけど。 あ、あと、himajin100000としては xsl:output要素が欲しいなー。 HTML/XHTMLは基本的にDOCTYPE宣言必須だし， XHTMLの場合は「XHTML の名前空間宣言」も必要だね。 #もう一つ言うと，個人的にはp要素への書き出しが嫌い。 #dl要素 dt要素 dd要素を駆使して欲しいな～
Minefield/Firefox 3.0b2pre,eXtyle/MSXML で確認する限りできるみたい。 #っていうか質問する前に自分でやってみればいいことだと思うんだけどな(^^;; #で，出来ない理由がわからなかったら，何故出来ないのかを聞いてみる。
http://ja.wikipedia.org/ 多少はご自分で調べたのですか？ そんなの検索すればすぐ出てきますよ。
http://www.tek-tips.com/viewthread.cfm?qid=13797 … だとどうなる？
Adobe Dreamweaver CS3やSpryについては知りませんので、一般的なXMLの改行表示の方法について。 XMLを改行して表示させたい場合には、私の場合、保存する際にすべての要素ごとに改行を加えたりインデントを加えたりするXSLTを通すという手段を使っています。 Adobe Dreamweaver CS3というものにXSLTを通す機能があれば解決なのですが。。(そこについては我関せず) 以上役に立つかどうかわからない回答でした。
ちょっと手抜きな方法としてはfirefoxのDOM Inspectorを使う事かな。 DOM Inspectorはカスタムインストールで入れられるよ DOM Inspectorで Copy XML でクリップボードにXMLをコピーできる。 勿論手抜きな方法だから、 目的の形にするのにちょっとだけ手順が多いけど、 簡単にできるといえばできる方法
UTF-8もUTF-16も、Unicodeの文字符号化方式のうちの1つです。 なので、UTF-8はUnicodeだし、UTF-16もUnicodeです。 しかしUnicodeだからといって必ずしもUTF-8だとは言えませんし、UTF-16だとも言えません。 なのでXMLのencodingに指定するのは、unicodeとではなくUTF-8やUTF-16等を指定したほうがいいと思います。 equusさんがIE上でunicodeとUTF-16が同じ結果になったのは、Microsoftは近年unicodeとしてUTF-16を使っているからみたいです。 なのでunicodeと指定したら、上記理由から、それを暗黙のうちにUTF-16と解釈しているのだと思います。 注) これは私の認識です。 誰か間違ってたら指摘お願いします。
Java開発者じゃないし，正しく意味が取れているか自信がないが，(というかJAXPがなんだか知らない(ぉ) 「schemaLocationやnoNamespaceSchemaLocation等をXML文書に記述しないで検証を行う」方法を調べることにした。 で，見つけたのが以下のValidateTest.javaだ。 また、以下のサンプルはそのままでは動作しない。MyErrorHandlerクラスが載ってないからで，ここをコメントアウトするなり自分で実装するなりすれば動くだろう。 見れば解るだろう が，args[0]がスキーマのファイル名，args[1]が検証するファイル名だ。 http://www015.upp.so-net.ne.jp/heyjude/java_xml0 …
1）RELAX NGとXMLを関連付けるにはどうしたらいいか。 DTDでいうDOCTYPEは、RELAX NGの場合どうしたらいいのでしょうか？ ざっと周辺サイトを見る限り，標準的な手法というものは存在しないようだ。 http://www.griffinbrown.co.uk/blog/PermaLink,gui … 日付を見ると2007年7月26日の投稿なので現在においてもそれほど期待しない方がよさそうだ。 ちなみに， http://www.xmlmind.com/xmleditor/_distrib/doc/rn … 等を見ると，各アプリケーションごとに処理命令で対処するような話も出ている。(当然ながらある一つのアプリケーションで検証されても他のアプリケーションでは有効にならないだろう) 2)RELAX NGに対応した妥当性検証ソフトはあるのか。 出来たら、ダウンロードできるサイトも教えていただければ幸いです。 いくつかはあるようだ。自分は使ってみたわけじゃないが， @IT他で知ったMSV等。 https://msv.dev.java.net/ #以下のリンクはリンク切れしている http://www.atmarkit.co.jp/fxml/rensai2/xmltool05 … 3)属性の値に一意性を持たせられるのか。 DTDでいう、IDのような指定は出来ないのでしょうか？ 標準的な方法はやはり存在しないんで，datatypeを使え，ということらしい。 http://www.oasis-open.org/committees/relax-ng/co … http://www.ibm.com/developerworks/jp/xml/library … XML Schemaでいうkey,keyrefも似たような方法でやれってことなのかなあ？ http://www6.airnet.ne.jp/manyo/xml/schema/step35 … コレなんか見るとSchematronっていう別なもの導入しているようだが。 http://www.zvon.org/xxl/XMLSchemaTutorial/Output …
多分CDATAを載せることは出来ないと思う。 自分が混乱しないために諦めて >やはり&lt;に置き換えるしか方法はないのでしょうか？ に慣れることを非常に強く推奨するけど, >では、”>”の記号があるためXML構文がエラーとなります。 本当に？検証してみた？少なくともIE,Firefoxではエラーにならないよ。 属性値のBNFを見ると http://www.w3.org/TR/REC-xml/#NT-AttValue AttValue ::= '"' ([^<&"] | Reference)* '"' | "'" ([^<&'] | Reference)* "'" で [^<&"]だから>は除外されないよ？ <X 計算式="IF(C16<0,0,1)" /> とか不等号が逆向きになったらエラーだけどね。 HTMLの話だけどこれも面白いよ http://www.satoshii.org/markup/notes/2002/02#day …
英語がわからなくても http://www.w3.org/TR/XHTMLplusMathMLplusSVG/ のソースコードを追ってみると どういう仕組みになっているかわかると思います。 解説書こうとすると結構難しいので。 ============= ●<![INCLUDE[]]> <![IGNORE[]]> といった書式を取るマーク区間や ●<!ENTITY % hoge "hogefuga"> というように使われるパラメータ実体に関する知識 ●外部解析対象実体に関する知識 ●外部サブセットよりも内部サブセットの方が優先される ●同一サブセット内では先に書かれた宣言が優先される ってことがわかっていれば読めるはずです。 外部解析対象実体に慣れてなければ XHTML 1.1 DTDのFlat版が http://www.w3.org/TR/xhtml11/DTD/xhtml11-flat.dtd http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd を展開したものだとわかれば良いと思う ======================== ああ,そうそう,DTDを使うときの名前空間接頭辞の制約の一つとして 途中で名前空間接頭辞を変更することはできないことを覚えておきましょう。 (XMLとしてはOKだが,DTDでの定義に一致しないから) http://www.w3.org/TR/2001/REC-xhtml-modularizati … =========================
No.1です。遅くなりましてすみません。 ＞例えば？ フレームメーカーってDTPのソフトウェアですから、XMLを採用するかどうかとは直接関係ありません。 フレームメーカーとXMLを同等に扱っているのが違和感がありました。 XMLは取っつきやすいのですが、奥が深く、また正確に制御するには高いレベルの技能を要求されます。 XMLはHTMLをベースにしていますが、No2さんの例にあるように、タグが自由に決められます。ということは、そのタグを管理する必要性が生じるのです。 例えば、製品の一覧を作って公開する、という用途であれば、XMLを採用しなければならない、というものでもありませんし、フレームメーカーを採用しなければならない、というものでもありません。 と言う意味で、避けた方が無難ではないかという意図の発言でした。
これでいいのかは自信がない ==============Q3477885-1.xml(適用するXML)====================== <?xml version="1.0" encoding="UTF-8"?> <?xml-stylesheet href="Q3477885.xsl" type="text/xsl" ?> <foo> <bar xmlns="himajin100000">へんなやつ(終帝)</bar> <bar xmlns="himajin200000">キャット</bar> <bar xmlns="himajin300000">エンリケ</bar> <bar xmlns="himajin400000">マールバラ</bar> <baz xmlns="himajin500000">カプリコーン</baz> </foo> ==============Q3477885-1.xsl(スタイルシート)====================== <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:output method="xml" encoding="UTF-8" omit-xml-declaration="no" indent="yes" /> <xsl:template match="/"> <funya> <xsl:apply-templates /> </funya> </xsl:template> <xsl:template match="*[local-name() = 'baz']" /> <xsl:template match="*[local-name() = 'bar']"> <fuga><xsl:value-of select="./text()" /></fuga> </xsl:template> </xsl:stylesheet> =================Q3477885-2.xml(結果)================== <?xml version="1.0" encoding="UTF-8"?> <funya> <fuga>へんなやつ(終帝)</fuga> <fuga>キャット</fuga> <fuga>エンリケ</fuga> <fuga>マールバラ</fuga> </funya>
===========Q3453815-1.xml=========== <?xml version="1.0" encoding="Shift_JIS"?> <?xml-stylesheet type="text/xsl" href="Q3453815-1.xsl" ?> <LocaleList> <Locale> <LCID>1033</LCID> <Description>USA</Description> </Locale> <Locale> <LCID>1041</LCID> <Description>日本</Description> </Locale> </LocaleList> ==============Q3453815-1.xsl=============== <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <!--　 【重要】xsl:outputのmethodがxmlである状態で encodingを指定。indentは俺の趣味だが, 要素内容でなく混在内容を内容モデルに持つ要素があった場合,結構大きく関わるかも。 --> <xsl:output method="xml" encoding="EUC-JP" omit-xml-declaration="no" indent="yes" /> <xsl:template match="/"> <hoge> <xsl:apply-templates /> </hoge> </xsl:template> <xsl:template match="Locale"> <fuga><xsl:apply-templates select="Description" /></fuga> </xsl:template> </xsl:stylesheet> ==============補足================= ●一応このXMLファイルをMinefield/Geckoに読み込ませ、表示メニューから 文字符号化方式を確認したらEUC-JPになっていた。 ●IEでは表示メニューから文字符号化方式を確認することはできなかったものの(グレーアウト), 結果のテキストはIEでも正常に表示されているから,おそらく文字符号化方式はきちんと認識できていると思う。 ●eXtyleを使ってxmlファイルに書き出して,テキストエディタで開いてみたらEUC-JPであることが確認できた ●出力結果やスタイルシートが意味のないサンプルでごめんなさい
＞許可はもちろん取るつもりです。 取るのは結構ですが 使用料が発生することは考えてますか？ 無料で提供するやさしいところなんてただが知れてますよ？
Q3438588ともども俺のIE7では再現しない。 xsl:stylesheet要素の子要素に直接マークアップでない文字列が来ていると発生することは一応確認しているけれど。(仕様) 半角空白やタブ文字は入っていても大丈夫だろうが, まさか全角空白が入っているというオチもないか？
>ドキュメントの最上位では無効です 結果が異なるはずはないんだけどな。どっちもエラーになるか どっちも成功するか。 まさかとは思うが - <ProductInfo> ↑ここやその他の場所のハイフン実際に入力してたりしないよね？ あれはIEが「子要素のある要素」を示す際に利用しているだけだからね。 #文字コードはあっているものとする
RSS Atom などで検索してみて下さい。 きっとhuman_reportさんの探している情報が見つかるはずです。 私も今日調べたばかりなのですが、まだ正式な仕様でない(Atomのバージョンは0.3)ので、とりあえずもう少し待って仕様が固まったら勉強しようかと思っていますが・・。 まだ情報少ないですし。
>どこかおかしな点がありますでしょうか？ 指摘しようとしたら実はわからなかったので，敢えて検討せずにごまかしてました。ちぇー許してくれないか。 手元での検証の結果とそれを元にした検証でひとつはっきりしました。 ====================== http://developer.mozilla.org/ja/docs/Introductio … >注意すべきなのは、【XPath では接頭辞のない QName は名前空間が null の要素にのみマッチすると定義されている】という点です。XPath にはデフォルト名前空間を取得する手段はありません。名前空間が null ではない要素や属性にマッチさせるには、接頭辞付きの名前テストを使い、その接頭辞を名前空間にマッピングする名前空間リゾルバを作成する必要があります。詳しくは下記のユーザ定義の名前空間リゾルバを作成する方法を参照して下さい。 ================= だそうです 現に手元の別ソースのamazon名前空間接頭辞をデフォルト名前空間にして取り除いたら結果が異なりました(汗 あとはほとんど影響ありません。前回の回答の地点でわかっていた内容ばかりです 「Item要素の直接の子としてTitle要素は存在しないので，<xsl:value-of select="ItemAttributes/Title" />としないとならない点。 それから，xsl:apply-templatesのselectを省略したときは その全ての子要素(【OperationRequest要素を含みます！！】)にテンプレートルールを適用する ビルトインテンプレートのおかげで、xsl:value-of要素のselect属性でテキストノードを指定しなくてもそのテキストが表示されます http://www.asahi-net.or.jp/~PS8A-OKZK/xml/xslt10 … http://www.asahi-net.or.jp/~ps8a-okzk/xml/memo/m … 上記で述べたことを考えると，これはRequestId要素のテキストノードやRequestProcessingTime要素のテキストノードにも適用されていますので注意！
#2です。 ＞サイト自体は・・・ HTML以外だとXHTMLぐらいしか・・・ ってそういう質問ではないのかな？？ とにかく、 RSSを配信するならサイトはこう作らなきゃ、みたいな縛りはないです。 RSSとサイトの作り方は関係ないです。
http://www.kanzaki.com/memo/2006/11/06-1 こちらが参考になりますでしょうか？
>ブログに掲載する方法 通常はこれを応用する物だったはずだけど？
こんな感じ？ <xsd:element name="a"> 　<xsd:all> 　　<xsd:element ref="b" /> 　　<xsd:element ref="c" /> 　</xsd:all> </xsd:element> <xsd:element name="b"> 　<!-- 内容 --> </xsd:element> <xsd:element name="c"> 　<!-- 内容 --> </xsd:element>
エスケープしてください(実体参照といいます) < = &lt; > = &gt; <hoge>xが3より大きいことをx &gt; 3とあらわします</hoge> #CDATAマーク区間は好きじゃない
GIZMO ＆ Flash でガジェット を作成したことがある者です。 ？？？ わかっていらっしゃるのかいらっしゃらないのかよくわかりませんが， 「あなたごよみ」 も GIZMO を利用しているのですよ。 GIZMO から有償で専用のガジェットを作成してもらっているのです。 GIZMO は型にはまったガジェットを作成するプログラムやシステムではありません。 Flash で１から作った物を，Web ではなく，デスクトップ上で動かせるようにしたプログラムと，Flashコンポーネントなどの統合ツールです。 ですから，とりあえずは，Flash MX 2004 以上が必要で， それで ガジェット用 Flash を作成します。 その作成する前の段階で，まず Flash に GIZMO コンポーネント を導入しておく必要があります。 そして 作成した Flash（SWF） と XML などを GIZMO 指定の場所にインストール（保存）して， その保存した SWF や XML を GIZMO エンジンでデスクトップ上に表示させるのです。 すると，フワフワ浮遊するようなガジェットなどが作成できます。 GIZMO を使わないとなるなら， GIZMO みたいなものを自分で開発しなければならないでしょう。 また，Windows Vista 限定で，Vista用ガジェットを作成するかです。
XML/XSLド素人ですのでご容赦を。 二重ループで変数に退避した値と比べてマッチングしたみました。 数が多いと時間が掛かりそうなんでつかいものにならないかも。 <xsl:for-each select="test/item"> <xsl:variable name="id"> <xsl:value-of select="@id" /> </xsl:variable> <xsl:for-each select="/test/detail"> <xsl:if test="$id=itemid"> <xsl:value-of select="yomigana" /> </xsl:if> </xsl:for-each> ,<xsl:value-of select="name"/> </xsl:for-each>
>Javaのabstractメソッドは、確か中身がないメソッドということで、オーバーライドし >ないと呼び出すことができないんではなかったでしょうか・・。 確かに、 DocumentBuilder db = new DocumentBuilder(); みたいな書き方はできません。 ただ、例えばDocumentBuilderImplという、「DocumentBuilderを継承した」 (抽象クラスでない)普通のクラスがあったとすると、 DocumentBuilder db = new DocumentBuilderImpl(); みたいな書き方はできます。 javax.xml.DocumentBuilderFactoryクラスのnewDocumentBuilderメソッドは、 これと同じようなことを内部的にやってるのです。 実際に中身がどういうものか分からないけど、DocumentBuilderを継承した クラスのインスタンスを返す、ということをこのメソッドはやってるのです。 何でこんな回りくどいことをしてるかというと、 例えばXMLの仕様が大きく変わり、今のDocumentBuilderImplクラスでは 対応できなくなってDocumentBuilderImpl2というクラスを作ったとします。 すると、このクラスを使ってる人に、 DocumentBuilder db = new DocumentBuilderImpl(); を DocumentBuilder db = new DocumentBuilderImpl2(); という風にすべて変更してもらわないといけなくなります。 APIのようにたくさんの人が使うようなものの場合、これだとうかつに更新できません。 一方、javax.xml.DocumentBuilderFactoryクラスの場合は、 このクラスを使ってる人はnewDocumentBuilderメソッドを読んでるだけです。 なので、中身の部分だけがこっそり差し替わっていれば、 newDocumentBuilderメソッドは何も触らなくてよいのです。 こういうお決まりのテクニックのようなものを「パターン」と呼んでいて、 今回のは「Factoryパターン」という名前がついてます。 「デザインパターン」とか「GoF」とかで調べるとこういうテクニックがいっぱいあります。
あ、すんません。 >xsl:output method="html" になっているけどうそです >xsl:output method="xml" で
ＰＨＰでやるならパーサ通して連想配列に各ニュースが入ります。 それを適当に乱数とかでランダムに表示記事を抜粋してはどうですか。 asahi.comのはカテゴリ順に入ってくるので、社会面なら社会ニュースばかり並ぶので適当に乱数で国際とかスポーツとか混ざるようにしてます。
Q3207219-1.xml <?xml version="1.0" encoding="UTF-8"?> <?xml-stylesheet href="Q3207219-3.xsl" type="text/xsl"?> <empList> <emp> <type id="1" /> <name>鈴木</name> <desc>あああ</desc> </emp> <emp> <type id="4" /> <name>田中</name> <desc>いいい</desc> </emp> <emp> <type id="2" /> <name>田中</name> <desc>いいい</desc> </emp> <emp> <type id="3" /> <name>田中</name> <desc>いいい</desc> </emp> </empList> Q3207219-2.xml <?xml version="1.0" encoding="UTF-8"?> <!-- スタイルシートここはいらないだろう <?xml-stylesheet href="a.xsl" type="text/xsl"?> --> <typeList> <type id="2"> <title>タイプ2</title> </type> <type id="1"> <title>タイプ1</title> </type> <type id="3"> <title>猪突猛進タイプ</title> </type> <type id="4"> <title>遠隔操作タイプ</title> </type> </typeList> Q3207219-3.xsl <?xml version="1.0" encoding="UTF-8" ?> <xsl:stylesheet version="1.0" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="html" encoding="UTF-8" omit-xml-declaration="yes" doctype-public="-//W3C//DTD XHTML 1.1//EN" doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" media-type="text/html" /> <xsl:template match="/"> <html> <head><title>サンプル</title></head> <body> <xsl:apply-templates select="empList/emp" /> </body> </html> </xsl:template> <xsl:template match="emp"> <h2><xsl:value-of select="name/text()" /></h2> <p>タイプ： <xsl:call-template name="hoge"><xsl:with-param name="Id" select="type/@id" /> <xsl:with-param name="Id2" select="document('Q3207219-2.xml')/typeList" /> </xsl:call-template> </p> <p>メモ：<xsl:value-of select="desc/text()" /></p> </xsl:template> <xsl:template name="hoge"> <xsl:param name="Id" /> <xsl:param name="Id2" /> <xsl:for-each select="$Id2/type"> <xsl:if test="$Id = @id"> <xsl:value-of select="title" /> </xsl:if> </xsl:for-each> </xsl:template> </xsl:stylesheet> 【後記】 手元のeXtyleとMinefieldで一応きちんと確認しているが， 正直自信がない。 俺は，XSLTを頻繁に書いている人でもないし どこかで引数や戻り値にノードリストを指定できないとか聞いたような気がするからだ。 (引数に出来ているのはMSXML 6(VB.NET Orcas付属)やGeckoのバージョンが関係して・・・ないか) (そのため、並び替えた後に処理ができないとか、なんかそういう話があったような。
処理系によるけれど　通常は 複製するときに新たな名前にし、古い物を削除する、 というファイル上書き保存のような仕掛けで書き換える事になると思う。 element名を直接書き換えができるかどうかは処理系によると思う。
うーん、こっちのFirefoxでは，一応効いているみたい。 a要素の下線が表示されないからね(text-decoration:none;が効いている) ただ， >@import "hinagata/base-weblog.css"; >@import "hinagata/h2l-default/h2l-default.css"; >@import url(./css_custom.css); 正しい記述はどっちだ？ そしてこれらのCSSファイルもstyles-site.cssと同時にアップロードしたかな？
AdobeではSVG viewerというソフトが公開されています。 また下記に記載したExamplesではSVGのサンプルを見ることが できます。ページの「view demo」をクリックしてみてください。 参考URL：http://www.adobe.com/svg/examples.html
なら　xsltでHTMLへ書き出しをしてみたらどうだろう。 http://www.infoteria.com/jp/contents/xml-data/RE … http://www.google.co.jp/search?q=%E5%A4%96%E9%83 …
　XMLのほうを先に学ぶべきです。 　XMLは、XHTMLを含む、より広い概念です。XHTML文書は必ずXML文書になります。その逆は、必ずしも成り立ちません。 　ということは、「XHTMLの規格に従った正しい記述」をするには、その前提として「XMLの規格に従った正しい記述」でなければなりません。 　
XMLマスター：ベーシック試験とXMLマスター：ベーシックV2では 試験の傾向がかなり変わっているようですので、試験対策としては 新しい本のほうが良いと思います。 V2試験範囲に関しては下記のページを参考にしてみてください。 参考URL：http://www.xmlmaster.org/range.html#basic
http://support.microsoft.com/kb/275883 言語パックによって異なるらしい。 KB275883に書かれているのはネイティブサポートだと。
文字コードのせいでは？ たまたま「具」が＜とかになって</td>を崩してしまうのでしょう。 だから半角いれると認識するような気がします。
～\build.xml:19～ とありますので、原因はXSLではなくbuild.xmlにあるように見えますが いかがでしょうか？ build.xmlの内容を提示していただけると糸口になるのではないかと思います。
>と真っ赤な文字が出ていましたが まぁ、とりあえず解らなければ飛ばしてもいいかな。 気にするほどのことは書いてないから。 >しかしテキスト入力ではやはりできないので、やはりhttp://validator.w3.org/でXMLのチェックはむいてないということなんでしょうか？他のサイトのほうがいいんでしょうか？ テキスト入力でやろうとするなら向かないんだろうね。 ま、URL版やアップロード版使うか、他のサービスを使うかは 別にどれだっていいと思う。好みの問題だし、お好きにどうぞ。 (特に質問なければ締め切りで)
あと、確認しそびれたが、CDATAマーク区間は <![CDATA[ ]]> であって <!--[CDATA[ ]]--> ではないので修正しておくこと
'完全なものではないがヒントというか指針。 'そもそもXML自体が整形式(開始タグと終了タグが正しい入れ子になっていて全て存在する)ではなかったので '書き換えました。 '当然文字コードはBOM付きのUTF-8です <?xml version="1.0"?> <!-- enerated --> <CURS> <LIST_OS> <ORSTERY> <X_W>確認データ</X_W> <LIST_DATA> <BREAK> <USER_NAME>山田</USER_NAME> <SEC_GR_NAME>部門</SEC_GR_NAME> <LG_RES> <G_PS> <APPL_NAME>部門計算</APPL_NAME> <RES_NAME>山田</RES_NAME> </G_PS> <G_PS> <APPL_NAME>部門集計</APPL_NAME> <RES_NAME>山口</RES_NAME> </G_PS> </LG_RES> </BREAK> <AF_W></AF_W> <BF_X></BF_X> </LIST_DATA> </ORSTERY> </LIST_OS> </CURS> '================Module1==================== Option Explicit 'Optional Namespace As Stringな関数作ると面白そうかな '当然ながら参照設定でMicrosoft XML version2.0を追加しておくこと。 Public Function LoadMyXML(FileName As String, TagName As String) As Boolean Dim objXML As MSXML.DOMDocument Dim strXML As String Dim Elements As IXMLDOMNodeList Dim Element As IXMLDOMElement Set objXML = New MSXML.DOMDocument If Not objXML.Load(FileName) Then LoadMyXML = False Exit Function End If Set Elements = objXML.GetElementsByTagName(TagName) If Elements.Length = 0 Then LoadMyXML = False Exit Function End If For Each Element In Elements MsgBox (Element.Text) LoadMyXML = True Next End Function '=====================UserForm1=================== Option Explicit 'TextBox1,TextBox2,CommandButton1がUserForm1上にある 'TextBox1がファイル名,TextBox2がタグ名なので，色々入力して試してみよう。 '実際にTextBox2に"G_PS"を入力した時には '「部門計算 山田」 '「部門集計 山口」 'という感じで，カンマでなく、かつ、それぞれ別々にメッセージボックスに表示される。うまく要素を取得するには再帰処理などが必要になるかも Private Sub CommandButton1_Click() Dim hoge As Boolean hoge = LoadMyXML(TextBox1.Text, TextBox2.Text) End Sub
検索したところでは いくつか2GBの制約があるというのを見つけることが出来た。 MS公式情報ではないのでどれだけ信頼性のある情報かわからない。 すくなくともMSDN Library2にはこの件に関する記述はない http://msdn2.microsoft.com/en-us/library/system. … http://www.thescripts.com/forum/thread171942.html http://www.topxml.com/system_xml/system_xml_xmlt … >Use this class when iterating through or retrieving data from larger documents, and when validation is not required.【However, note that this class does not support files larger than 2GB.】 Below are three simple examples that incorporate the System.Xml.XmlTextReader class. 本当はMSDNあたりからの情報が欲しいんだけどな。 http://www.thescripts.com/forum/thread572092.html >A process can only use up to 2GB memoery on a 32 bit operating system. In this case, you cannot load an xml file larger than 2GB into memory using XmlDocument. In this case, I suggest you use XmlTextReader.【As far as I know, in .NET framework 1.1, it has a 2GB limit also. However, in 2.0 this limit was fixed and no longer exists.】 によれば.NET 2.0ではこの問題は治っているようだ、との記述もあるようだが・・・質問者様が恐らく納品されるであろう先の制限で出来ないんだろうね・・・
#1さんのをもうちょっと砕くと http://forum.java.sun.com/thread.jspa?threadID=6 … 多分正確にはXMLが一番先頭以外の場所にあって、 空白行やその他のものが先頭にある状態・・・だね。 結果としてこの「XML宣言もどき」が「処理命令」として解釈されてしまっている。 →「でもXMLやxmlという処理命令は存在してはならないことにXMLの仕様でなっている」→「エラー」 だと思う。
基本的なことを書いて申し訳ないのですが、以下のページ(ログイン要求されます)内の「▼ 記事情報の更新方法」で解説されている、RAID-MAXさんの http://anime-max.net/rss.xml 専用のping送信先URLに送信してますか？ あと、グレーの文字の部分で、 >任意のURLへのping送信ができない場合はここをクリックすることで送信することができます。 とあるように、このページにアクセスして手動更新しなければならない場合もあるようです。 ちゃんとした答えでなく、すみません。 参考URL：http://blog.with2.net/how_to_link.php
>「javascriptがoffの状態でも、Webページが正しく表示されなければいけない」 perlやphp等を用いサーバ側で処理してから渡すのが最も確実。 または noscript タグ
xsltで　　　とか
表示されますので、どこがちがうのでしょうね？ 「ツール」「インターネットオプション」「全般」「Cookieの削除」や「ファイルの削除」「OK」でキャッシュのクリアはしているか。 「ツール」「インターネットオプション」「セキュリティ」「レベルのカスタマイズ」「セキュリティの設定」で（1）レベルは「中」か。 （2）ActivXコントロールやスクリプトは「有効」になっているか。 Windowsファイアーウォールやパーソナルファイアーウォールは遮断していないか。 ホップアップブロックを許可しているか。
>"いのうえまさと","やまだたろう" >の並び 漢字は複数の読みがあるというのは知っていると思う。 よってPCでは漢字だけで並べ替えると1つの基準でのみ並べ替えを行う。 だからこの「ふりがな」も登録してある必要がある筈だけど？ ループは１つでできる。 処理を書く前に　できあがり予想HTMLを書いてから　という手法をオススメ
抽象的すぎてよくわかりませんが、 AからBへの絞り込みができるのであれば、 同様にBからcへの絞り込みは同じようにできるのではないのですか？ 具体的にコードをのせていただいた方が、答えやすいですが。
一応現存はしています。 数は多くないので無視してもいいレベルだと思いますが。
xslでhtml出力する時に　<a href=""></a>で囲みたいということでしょうか？ xml記述に属性を追加して <link url="toko.html">文</link> としておいて、xsl側では <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"><!-- メインtemplate --> <!-- 他は適宜指定 --> <xsl:apply-templates /><!-- 子要素の全てについて、該当templateを探して適用する --> </xsl:template> <xsl:template match="link" > <a> <xsl:attribute name="href"> <xsl:value-of select="@url" /> </xsl:attribute> <xsl:value-of select="text()" /> </a> </xsl:template> </xsl:stylesheet> 参考URL：http://www6.airnet.ne.jp/manyo/xml/index.html
<!ELEMENT wsdl (#PCDATA) > って話なんだよね？ そこにそれを埋め込むと#PCDATAじゃなく要素と思われるからエラーと。 でもどの話なのか良く判らないな・・・ ★文字実体参照に変換していく話 ★CDATAマーク区間を使う話 http://www.ne.jp/asahi/minazuki/bakera/html/sgml … を使う(意外と厄介なので注意が必要) ★外部解析対象外実体の話(そもそも俺はほとんど理解していない) http://sdc.sun.co.jp/news/200011/tax01.html
(1)http://www.atmarkit.co.jp/fxml/rensai/w3cread01/ … (2)http://www.doraneko.org/xml/xml10/19980210/Overv … (3)http://www6.airnet.ne.jp/manyo/xml/index.html ってことかな？ 実例があってとっつきやすいのは(3)。 (2)は規格原文の和訳。ただしXMLは(より明確にするために)いくつかの点で文章が修正されたりしてForth Editionあたりまで出てたかも。和訳版があるかわからんので避けたが。 (1)が仕様書の読み方を説明したもの。仕様書をわかりやすく読みたい人向け。
一般的に、XMLデータを読み込む場合には、XMLパーサと呼ばれるソフトウエアを使用します。 XMLパーサにはDTDを考慮して読み込む検証パーサと、考慮しない非検証パーサがあります。 最近では設定によって切り替えられるため、検証モード/非検証モードと言う場合もあります。 当然、検証モードで読み込まれなければ誤った書き方をしても、エラーにはなりません。 ちなみにIEで表示する場合は非検証モードになっているため、エラーが返るということはありません。
>マイクロソフトのXAML、adobeのMXML、XULなどなど、最近フロントエンドがXMLベースのものってとても多い気がします。 さらに最近はHTMLをXMLの文法で定義しなおしたXHTMLというものが使われることが多くなってきています。 これは今まで使われてきたものをわざわざ変えるという面倒臭いことをしてまでも獲得したい利点があるということを意味しています。 http://ja.wikipedia.org/wiki/Extensible_HyperTex … にチラッと書いてあるのですが >XMLを採用したため、MathMLやSVGなど他のXML文書を埋め込むことができるようになった。 つまり同じXMLで書かれたもの同士なら（解釈するエンジンさえ対応していれば）同じように扱えるという利点があります。 また、企業が独自にマークアップ言語を作ったりすると言語的に矛盾したり、定義出来ない不明確な部分が出てしまうことがよくあります。 XMLのような標準化された規格を使えばそういった言語的な欠陥だけは防げます。
補足。 >#1さん もとのXMLファイルが <?xml version="1.0" encoding="UTF-8"?> <root> <test> <a>あああああああああああああ<bold width="15px">いbold<strong>い</strong>いい</bold>あああああああ</a> </test> <test> <a>ううううううう<bold>えええええ</bold>ううううう</a> </test> </root> だったら？ 【bold要素の中のテキスト『いbold』の『bold』は変換してはいけない】 ちなみに俺の奴の場合， <bold width="15px">いbold<strong>い</strong>いい</bold> →<b width="15px">いbold<strong>い</strong>いい</b> と、属性はそのまま保持される。 (単純に<bold>を<b>に変換したものとは異なる。まあこの程度の変換なら正規表現なんかを使って出来るかもしれないけどね。) #各XML,XSLTにおいて名前空間に関する検討はしていないので注意。 #あと、HTMLにおいてb要素にはたぶんwidth属性がない、ということや、Strictでないソースだということは理解しています。
いくつか考えられますが、 まずbase.xmlのxml構造としてルート(base)しかないのが気になります。それと <xsl:template match="base"> base:<xsl:value-of select="base" /> </xsl:template> ではなく、 <xsl:template match="base"> base:<xsl:value-of select="." /> </xsl:template> です。 自分のノードにいる場合、 自分を表示するには、「.」を使用します。
既存のガジェットのソースを真似するとか 参考URL：http://www.google.co.jp/ig/directory?hl=ja&q=RSS
http://jibun.atmarkit.co.jp/scenter/ittrain/ の過去問繰り返しで受かりました。
回答にはなりません。俺も識者に聞いてみたい。 >CDATAセクション内に、]]> という文字列を入れたい場合、]]&gt; と書くと聞いたことがあります。 正直なところ、これ本当かな、と思った。(識者待ち) 多分この辺が話の元。 http://www.asahi-net.or.jp/~ps8a-okzk/xml/xml_2/ … http://sonic64.com/2005-04-13.html 【Walkaround】 以下のソースを打ち込んでMinefieldに読み込ませる。 <?xml version="1.0" encoding="UTF-8"?> <hoge>&amp;</hoge> <?xml version="1.0" encoding="UTF-8"?> <hoge><![CDATA[&]]></hoge> 等価なソースとして扱われるこれらのソースは Firefox上で This XML file does not appear to have any style information associated with it. The document tree is shown below. <hoge>&</hoge> となっているから 上記のブログの記事では <sonic> <a href="http://sonic64.com/">Landscape ]]&gt; エンジニアのメモ</a> </sonic> ではなく <sonic> <a href="http://sonic64.com/">Landscape ]]> エンジニアのメモ</a> </sonic> と表示されていなければならないはずだとおもうからだ ===この辺も見ておこう http://bakera.jp/ref/html/dataformat/cdata
他にも思いついたので。Word 2007で文章を書いて保存。docxは複数のxmlファイルをzipで固めたものなのでこれを用いるとか OpenOffice.orgで作成されたODFも同じでzipを解凍すると contents.xmlが取り出せる。 他にもAmazon.co.jp等やその他のWebサービスで提供されているものもある。 http://www.goodpic.com/mt/archives/000479.html Firefox拡張に使われているXULはローカライズされた文字列がDTDに保存されていることが多いから不適かな。
ソート後の結果セットを変数に入れて、このノードに対して直前値チェックをすると重複が解ります。 ie6とopera9では、重複排除出来ました。 ーーーxslファイルーーーー <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <html><body> <xsl:variable name="postsort"> <xsl:apply-templates select="//a1"> <xsl:sort order="ascending" select="text()" /> </xsl:apply-templates> </xsl:variable> <xsl:call-template name="ProcessSecondTree"> <xsl:with-param name="tree" select="$postsort"/> </xsl:call-template> </body></html> </xsl:template> <xsl:template name="ProcessSecondTree"> <xsl:param name="tree"/> <xsl:for-each select="$tree/a2" > <xsl:variable name="prepos" select="number(position())-1" /> <!-- 前回値を変数に設定 --> <xsl:variable name="preData"> <xsl:choose> <xsl:when test="position()&gt;1"> <xsl:value-of select="../a2[$prepos]" /> </xsl:when> <xsl:otherwise>000<!-- 何でもok --> </xsl:otherwise> </xsl:choose> </xsl:variable > <xsl:if test="text()!=$preData"><!-- 等しくなければ --> <xsl:value-of select="text()" /><br /> </xsl:if> </xsl:for-each> </xsl:template> <xsl:template match="a1" > <a2><xsl:value-of select="text()" /> </a2> </xsl:template> </xsl:stylesheet>
＜Url＞<![CDATA[​ここにURL]]>＜/Url＞ としてみたらどうでしょうか？？ おそらく? = & のどれかが悪さしているのだと思われますが・・・ 違ったらごめんなさい
#2については自己解決しました。後は質問者様の補足待ちです$Idの件も聞きたいし [XML] <title> </title> <!-- ここに文字列を入れました--> [XSLT] <xsl:template match="info/group/page" mode="main"> <xsl:value-of select="title"/> <!-- これのせいだったようです。ここをコメントアウトしたら解決しました。また、p要素等として括ってあげてもうまくいくことを確認しました --> #2のソース、Gooの仕様上，数値文字参照に変換されちゃってますが， XSLTをどうなおせばいいかは質問者様なら想像つきますよね
イントラの外から社内Webにアクセスできないから
頑張って考えたけど、ギブアップです。ごめんなさい。 http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.ph … >ITEMでposition()を表示した場合は、ソート順の位置を持っているようですが、X,Yからancestor::DATA/ITEMで指定するposition()は元の文書上の位置のようです。 こんなの知るかあ・・・orz http://www.mothprog.com/prog/xslt2/xslt3.html >このように、段階を踏む処理をするには、 XSLTスタイルシートで結果として構成されたツリーに対して、さらに処理を与える必要があります。ところが、これまでは一つのXSLTスタイルシートで多段階の処理をすることはできませんでした；XSLTの処理結果(result tree fragment)が代入不能だったからです。 うーん。やっぱりfor-eachの後の結果は利用できないorz
UTF-8じゃないなら　<?xml ?>　は必須。 xml文書として最初に出現しなければならないので<!DOCTYPE>より前でなければならない。 <!DOCTYPE>はxmlを検証するためのものなので　そもそもxmlであるという宣言(<?xml?>の事)より先にしてあると正しくない。
言っておくが，XMLはブラウザで表示してもXMLであってHTMLにはならない。 それをやるならXMLエディタを使う方が楽かもね。↓ XMLEDITOR.NET(要.NET Framework 2.0) http://www15.plala.or.jp/hayashiyui/ とか XML Notepad 2007 http://www.atmark.gr.jp/~s2000/r/xml_notepad.html みたいな。 #XMLファイル自体にタブインデントを入れて構造を変更してしてしまうタイプなのは，まずい。 そういう話ではなくて XML + XSLT → HTMLの最終出力結果のソースを見たいって話なら XMLプロセッサを利用することになる。Xalanとか(コマンドライン) GUIで少し気楽にやるって分には eXtyleだけど(要MSXML)。 http://www.vector.co.jp/soft/win95/net/se236115. … 仕組み云々がよくわからないなら たのしいXML http://www6.airnet.ne.jp/manyo/xml/index.html が解りやすいはず。
どのような言語でどのようなフォーマットのファイルを処理するのがわかりませんが・・・ 一般的にDOMは特定の目的に特化した独自の処理系に比べて動作が遅いです。 入力元と出力先がともにXMLならDOMを使うことでコーディングの量は大幅に削減できると思います。 入力元がXMLで出力先がXML以外フォーマットであるまたは 入力元がXML以外のフォーマットで出力先がXMLであるならば DOMで処理するよりも独自の処理系をもったほうが速いと思います。 コーディングの量はDOMでしたほうが少なくなるとはお思いますが。 入力元と出力先がともにXML以外のフォーマットであればDOMを使う意味はありません。 入力形式からDOMに変換する部分とDOMから出力形式に変換する部分のコーディング量が多くなるので DOMを利用してもコーディング量がそれほど変わらないかもしくは増えてしまうと思います。 またDOMに加え二重の変換処理で大変遅いアルゴリズムになるでしょう。
文書やデータの意味や構造を記述するためのマークアップ言語の一つ。 ＞マークアップ言語の代表としてhtmlがあります。文書やデータを<p>タグで囲ったりしますよね？<p>で挟まれたものは段落という意味になります。 マークアップ言語とは文書やデータに意味や見栄えをつける言語のことです。 マークアップ言語とは、「タグ」と呼ばれる特定の文字列で地の文に構造を埋め込んでいく言語のことで、 ＞文書データに<p>や<table>,<div>などで要素をはさんでいきますよね？ そういうことです。 XMLはユーザが独自のタグを指定できることから、マークアップ言語を作成するためのメタ言語とも言われる。 ＞htmlというのは<p>や<table>などのあらかじめ用意されているタグが存在します。しかしXMLというのはタグ名を自分で自由に作れてしかもそのタグの意味や見栄えも自分で作れるのです。たとえば、名前を表示する表示エリアを<name>というタグにして<name>には名前が入り、こんな見栄えにしますよ（赤にしてボールドにするなど）というのを自分で決めれます。 つまりより自由度がましているということです。 メタ言語というのは、そのようにタグを定義できる言語のことを言います。つまりXMLはメタ言語というわけです。 xmlのことが詳しく知りたければ、下記のサイトがおすすめです。 参考URL：http://www6.airnet.ne.jp/manyo/xml/index.html
#1だ。 折角だから http://www6.airnet.ne.jp/manyo/xml/index.html 読んで勉強すると良い。 順番が多少読みにくいが，説明は解りやすいぞ
いろんなことができます。 HTMLが「Webページの表示」を専門としていたのに対して、 XMLは、「データを分かりやすく保存する」ための言語です。 (あくまでコンピュータから見て、です。人間が見ても分かりづらいです) ぱっと見た感じはHTMLに似てますが、かなり違います。 いろんなことができるように、「いろんな書き方ができる」という特徴を持っているのですが、 あまりにもいろんな書き方ができるため、「何をするため」というのがはっきりしにくい面もある気がします。 最近のプログラムでは、設定を保存するためのファイルとしてよく使われているようです。 HTMLのように表立ったものではなく、いろんなプログラムやソフトを影で支える役割を持ったもの、 というのが私の印象です。 それ以外の例などについては、他の方の回答や参考ページを見ていただくといいと思います。
ごめん。色々考えてた時期があったけど,結局あきらめたよ,自分は。 代替案もわからないし(当時、しょうがないからブラウザのXSLTプロセッサではなくEXSLTが使えるXSLTに逃げたような覚えがあるな・・。 あるいはいっそXSLTを使うのをあきらめて他のプログラミング言語でDOMからやるとかw) ↓別IDだった当時の経緯 http://oshiete1.goo.ne.jp/qa1431397.html http://oshiete1.goo.ne.jp/qa1470657.html というわけでFirefoxがサポートするXSLT 1.0にはxsl:scriptが含まれないから無理っぽい。 計画にはなるかもしれないけどね https://bugzilla.mozilla.org/show_bug.cgi?id=370 … http://www.oreillynet.com/xml/blog/2007/01/limit …
実現できるかどうかわかりません。できないかもしれません。 念のために聞かせてください。このXMLを用いるアプリの正式名は何ですか？ http://www.atmarkit.co.jp/fxml/rensai/w3cread12/ … http://www.atmarkit.co.jp/fxml/rensai/w3cread12/ … >ここで注意すべきことは、「意図（intention）」という表現である。これは、XMLプロセッサや応用プログラムの動作に対する規定を示している言葉ではない。あくまで、XML文書の作成者の考えたことを示す手段、と理解すべきだろう。結局のところ、xml:space属性の有無によって、XML プロセッサの動作が変わることはない、ということになるのである。 (事実,FirefoxとIEは実験的に作ってみたXMLの改行文字を半角空白1文字に変換してしまい,俺には表現できなかった) #ところで http://www.tg.rim.or.jp/~hexane/ach/hsxh/hsxh06. … >　上にあげた XHTML 1.1 の DOCTYPE 宣言は，“ルート要素が‘html’であるような，公開識別子‘-//W3C//DTD XHTML 1.1//EN’で識別される，システム識別子（URI）‘http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd’で定義される文書型を使用する”ことを宣言する。 これに従うとルート要素はMOVIEでなければならんのでは？
> background-position:center; 背景画像の位置を中央にするだけですよ。 文章とかには影響しません。 margin:auto;/*ブロックレベル要素を中央寄せ*/ text-align:center;/*文字等を中央寄せ*/ とすれば中央にきます。 参考URL：http://kw.allabout.co.jp/internet/hpcreate/close …
念のために補足してほしいんだけど >現在運営しているサイト どこかのレンタルサーバ？(自分が変えたつもりがなくても業者側が設定を変えている可能性があったりして・・・) #自宅サーバならごめんなさい
No.2です。 > やりたいことは、XML Schema に定義されている全てのElementとAttributeの > タグ名称と親子関係を表すXMLファイルを作りたいということで、 > 繰返しの箇所は発生回数一回として扱いたいです。 > これも無理でしょうか・・・ スキーマ定義の中に xsd:choice が存在する場合，いずれにせよファイル1つの作成で済ませることは無理だと思いますが，全ての要素の出現回数を1に固定してよいのであれば，有限個のファイルで収めることは可能だと思います。 なお，JAXBはあくまでJavaのソースを自動生成してくれるツールなので，実際にXMLファイルを吐くコードは自分で書く必要があります。その手間がどれくらいになるのかはスキーマの複雑さにもよりますが，人力でXML Schemaをパースするよりは間違いが少なくなり，手間も省けると思います。 例えば，XHTMLのようなかなり複雑な構造でも，JAXBを使って文書生成している人が居るようなので， http://www.ruimo.com/2006/03/03/1141390674449.html 試してみる価値はあると思います。
突っ込まれる前に回答がヤバイので自己突っ込み 最初横で作ろうとして後から縦に変えた時に消し忘れました colgroup全部削除です。(XSLT)
>9行目21文字目は漢字でした だとしたら、思いつくとしたら「文字コード」なんだけどな。 まさかXML宣言のencodingがないとか間違っている(ファイルがShift_JISだったとか。アルファベットは大半の文字コードでASCIIコードが基準になって共通なため、問題が発生しにくい)ってオチはないですよねぇ？
>どこが異なるのかわかりませんでした。私の知識の範外の事なのかもしれません 結論から言えば俺の勘違いでした。全く違いはありませんorz No.1の原稿作ってから、変換実行して、変換後のXMLの改行が見づらいことに気づき・・【原稿側だけ】XML,XSLT,結果全てを弄ったんですね。 原稿を弄った後に、変換かまして確認することなくNo.1に投稿してしまったんですよ ところで ここの回答システムって、URLが半角までってなっているようで、名前空間とか <hoge xmlns="http://www.example.com/">abcあいう</hoge> って書くと、見ての通り、">abcまでがURLだと思われてしまい、 ブラウザで見るとそこまでがリンクになってしまうんですね。 だから投稿した後、弄りミスったかな、と勘違いしたの。 (確認画面があるにも関わらず、確認せずに惰性でクリックするようになっているんで(^^;;;) だから、きちんと変換ができるものを確認してから投稿しなおしてみたのがNo.2なのねorz ところが、よく見たらNo.1と何も変わらないことに気づいちゃったのorz
全く根拠のない勘で言います。 HTTPヘッダはどうなっています？ #goo RSSリーダー以外のRSSリーダーでも登録できる？
HTMLの話でしょうか・・？ HTMLの話でしたら、ほぼ無効です。 少しでも変化がほしいのならば、<br />タグなどで、ページ下に余白を持たせておくと、対応する<a name="">の部分が上方向位置へ合わさります。
ないんじゃない？XSLTは元々XMLを変換するための言語だろうから CSVの扱い方など最初っから知らないと思うよ ほかのプログラミング言語で書いたほうが遥かに効率よく書けると思うんだが・・・
ここで回答者に一般的な解釈を聞くより 直接相手に連絡して尋ねるのが吉なり。
Excel 2002以降は多分標準でXML出力できると思う。 Excel 2000の場合・・・ =========急ぎの場合以下は読み飛ばしていい============ いくつか検索してみましょう。「Excel 2000 CSV」 で http://www.atmarkit.co.jp/fxml/askxmlexpert/017e … csv2xml→C++によるソースが公開されているのみ、開発環境構築経験がないと挫折するので却下。 txt2xml→コマンドラインに慣れてない人だと説明が面倒くさくなるので却下 http://www.vector.co.jp/soft/win95/util/se137947 … →リンク切れ、却下。 http://www.vector.co.jp/soft/other/java/se172860 … →場合によってはJavaのランタイムのインストールを説明するのが面倒くさくなるので却下 csv2xml.sourceforge.net →コンパイルが必要っぽい。却下。 http://www.goedeke.net/csv2xml_eng.html →コマンドライン。却下。 ======================== で、無難なのはGUIアプリのついているこの辺か。 http://www.infocentral.jp/rinku/csv2xml/31260.htm ★事前にファイルをCSV形式で保存しておく必要がある。 ★外国製ソフトなので、英語。また、テキストエディタで文字コードをUTF-8で保存しなおす必要があるので、そういったソフトがインストールされていることが前提。 CSVファイル(コンマ区切り)を保存します。実験していませんが半角スペースや全角文字を含まないパスのほうが安全な気がします。 テキストエディタでUTF-8にしておきます。 csv2xml_win.exeをクリックします Source FileにCSVファイルを指定します Target Fileに保存するファイルのパスを指定します。左側の手のボタンをクリックすると、拡張子がxmlになったファイルが自動的に指定されます。 カンマ区切りなのでSeparatorsが;となっているのを,に変更します EncodingをUTF-8に変更します。 Start Conversion 以上でxmlファイルが生成されます
記載URLのPosPos/PCを作ったひゅ～と言います。 スクリプト内では文字列を記述するクォーテーション(シングル、ダブル)の関係をしっかり確認して下さい。どのようなエラーが出ているのかが質問からは読み取れませんが、JavaScriptはプログラムですので雑な記述は通りません。固定文字列を記述するクォーテーションが正しく関係付けられている事が必要です。 質問内のコードでは <img...の前に"が足りていないですし、その中身も混乱しているようです。修正してみると、 + "<img src='./debui.jpg' width='120' height='102' /></a>"; このようになります。文字列を"で始めた場合はその内部では'を使うのが良いでしょう。
> (1) Firefoxで正常に表示できない原因 Firefox を使ったことはないのですが、XSLT には対応しているのでしょうか。 > (2) xmlファイルだとリンク元の先頭位置に戻ってしまい、同じ内容のhtmlファイルだとリンク元の元の位置に戻る理由 ブラウザが表示するときに毎回、XML から HTML への変換処理を行うので元のリンク位置へのポインタのようなものがクリアされてしまうのではないでしょうか。 HTML への変換ですが Windows の場合、Easy XSLT Processor が使いやすいですよ。 http://www.osamurai.flnet.org/software/easyxslt
こんな感じでしょうか。 <xsl:choose> <xsl:when test="../../data/num2"> データあり </xsl:when> <xsl:otherwise> データなし </xsl:otherwise> </xsl:choose> 判断にはxsl:choose命令を使います。子要素のxsl:when命令で test属性が真になればその内側を実行します。 (複数のxsl:whenを記述可。最初に真になるもののみ実行) いずれも当てはまらない場合はxsl:otherwiseの内側を実行します。 test属性で要素を指定するとその要素があれば真となります。 質問のとおりのXMLに対して「num2要素があるかどうか」であれば 上記のように指定することで判断できます。 補足ですが、1件分はdata要素でまとめられているので、「次の data要素があるかどうか」判断する場合はtest属性で test="../following-sibling::data" と記述すると、現在処理中のnum1要素を含んでいるdata要素と 同じ階層の後ろにdata要素があるかどうかという条件になります。
こういう話？ http://qa.xml.gr.jp/data/xsl/files/0027.xml
<A Href="ＵＲＬ" Title="説明文">リンク</A> こういう形で如何でしょうか？
[ ]の指定はそれぞれの階層ごとに指定できます。 <xsl:value-of select="//name[position() = 2]/first" /> でいかがでしょう？
１）ご自身でテンプレートやhtml、CSSを編集することで可能です。 ２）上に同様 ３）CSSの知識とMovableType特有のタグを使い表示するコンテンツや内容をデザインしてＣＭＳ化させることができるか否かがキーになると思います。場合によってはプラグインなどの利用も必須です。 ご希望のレイアウト１）２）のレイアウトをCSSもわからないhtmlの素人がすぐ作れるか？という問いならば、残念ながらそれは無謀と答えるしかありません。 MovableTypeをCMS化するための参考書としては ・公式タグリファレンス　シックスアパート株式会社編　オーム社 ・MovableTypeではじめるビジネスブログ・テンプレートブック　中村義和　翔泳社 ・MovableTypeで今日からはじめるカスタムブログ　秀和システム ・スタイルシート（CSS）解説本 などでしょうか。 もちろん、ご自身でプログラムをサーバにアップしたり、それをセキュリティ的にも管理していくことも必要になります。 ロリポップをご利用ならばカラーミーショップ！プロのご利用はいかがでしょうか。 http://shop-pro.jp/ MovableTypeを編集でも、いずれにせよ、テンプレートの編集は必要になりますが、MovableTypeを商用利用の場合の料金＋セキュリティ装備の買い物カゴが必要になりますよね。今どきの店舗はhttpsが使えてないと消費者も避けると思います。（ロリポのサーバは共有ＳＳＬが用意されていないので、買い物カゴを自分の借りたサーバで準備することができません。どこか他に借りるかして自分のサイトに装備することが必要になります。） カラーミーショップ！プロのようなサービスならば、ネット通販に必要なことはほぼすべて揃った状態で、デザインテンプレートもサンプルがいろいろと用意されているのでそれを好きなように改造したりするのに、比較的に楽で取っつきやすいように思います。 http://shop-pro.jp/?mode=template 用意されたテンプレートでも好みに色や部品を改変するだけでかなりいろいろなイメージのサイトが作れます。 もちろん、１からオリジナルで作成することも可能です。 独自ドメインでも運営でき、ブログなども用意されています。
●個人的にはmouseoverを使うよりもCSSの:hoverを使う方が好きである ●個人的にはjavascriptは外部スクリプトにしておいてくれた方が好きである ●以下で述べるeXtyleを使う際にxsl:outputで文字コードを指定したxml宣言を吐き出すようにし、methodをxmlとした。 と前置きした上で。 原因はjavascriptどうこうではない。 eXtyle等を用いて http://www.vector.co.jp/soft/win95/net/se236115. … 当方が調査して見たところ 「XSLTでコメントをコピーしようとしているが、うまく行っていないこと」 □XSLTでは・・・ <script type="text/javascript"> <!-- function newImage(arg) { if (document.images) { rslt = new Image(); rslt.src = arg; return rslt; } } //中略 //--> </script> □変換結果 <script type="text/javascript" /> □案1 <script type="text/javascript"> //コメントにしない・・・だけでは駄目で(以下参照) function newImage(arg) { if (document.images) { rslt = new Image(); rslt.src = arg; return rslt; } } function changeImages() { if (document.images &amp; (preloadFlag == true)) //実体参照で置き換える { for (var i=0; i &lt; changeImages.arguments.length; i+=2) {　//実体参照で置き換える document[changeImages.arguments[i]].src = changeImages.arguments[i+1]; } } } //中略 </script> とすればコピー出来ます。 □案2 どうしても変換出力後でコメントにしておきたいなら <script type="text/javascript"> <xsl:comment> <!-- xsl:comment要素を使おう --> function newImage(arg) { if (document.images) { rslt = new Image(); rslt.src = arg; return rslt; } } function changeImages() { if (document.images &amp; (preloadFlag == true)) //実体参照で置き換える { for (var i=0; i &lt; changeImages.arguments.length; i+=2) {　//実体参照で置き換える document[changeImages.arguments[i]].src = changeImages.arguments[i+1]; } } } //</xsl:comment> </script> <!-- なお、実体宣言で置き換えるのが面倒くさいなら CDATAセクションを使うのも手。ただ、 これまでの手をわざわざ取るくらいなら 外部jsファイルにしてしまった方がやはり綺麗だと俺は思う -->
それはXSLTの仕事では無いのでは・・・ 他の処理機構(webならCGIやjavascript)の仕事だと思う
やったことはありませんが、 DOMPaserなるものがあるようです。これを利用してみたらどうでしょう？ 英語で書いてあるけど、読めなくても大半がコードなので大体わかるはず (Parsing an XML String) http://www.w3schools.com/dom/dom_parser.asp #textareaから値取り出すのは多分内容のテキストを取り出すだけでいいのではないかと。やってみてないけど。実体参照あたりが特に自信ない #アドバイスまで
手元では実験していませんが、 参考になるかもしれません http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.ph …
XSL-FOのお話でしょうか? それともXHTML+CSSのお話でしょうか。 XHTML+CSSの場合現時点では縦書きにできません。 CSS3の草案には含まれていますが勧告済みのCSS2には含まれていません。 (ただしIEでは独自に縦書きを実装しています。) IEであれば縦書きにしたうえでtext-align:justify;をすることで均等割付にできます。 注意：text-align:justify;では日本語のように分かち書きの集会の無い言語を均等割付にすることはできません。 XSL-FOのお話はXSL-FOをほとんど触ったことがないのでわかりませんが存在すると思います。
ちと訂正 【誤】 ====================b.xml====================== 【正】 ====================b.xsl======================
sample.xml <?xml version="1.0" encoding="Shift_JIS" ?> <?xml-stylesheet type="text/xsl" href="huga.xsl"?> <PAGE> <person> <name>himajin100000または暇人拾万。ぶっちゃけどっちでもいいや</name> </person> <person> <name>架空人物</name> </person> </PAGE> huga.xsl <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:my="http://purl.org/himajin100000/" version="1.0"> <xsl:output method="xml" encoding="Shift_JIS"/> <xsl:template match="/"> <my:hoge> <xsl:apply-templates/> </my:hoge> </xsl:template> <xsl:template match="person"> <xsl:choose> <xsl:when test="contains(name,'または')=true()"> <xsl:variable name="data" select="substring-after(name,'または')"/> <!--ここで宣言したdataの変数の有効範囲はここから--> <xsl:value-of select="$data" /> <!--変数の有効範囲はここまで。変数でも関数でも有効範囲のことをプログラミング用語で「スコープ」と言います。--> </xsl:when> <xsl:otherwise> <!--　ためしにコメント外して見てね。スコープ外で変数を使ってみると・・・・ <xsl:value-of select="$data" /> --> 処理 </xsl:otherwise> </xsl:choose> </xsl:template> </xsl:stylesheet> #でもXSLTの変数って後から変更されるような仕様になっていないので(思想の問題だったと思う。文献を探すのが面倒くさいので探さないが)--> #あんまり見てないし役に立つかどうか知らないが、もしかしたら参考になるかもよ？ http://www2.xml.gr.jp/log.html?MLID=xmldesign&TI …
同様の問題に突き当たり、解決策をひとつ見つけましたので報告いたします。 > <xsl:value-of select="リスト/$変数" /> 上記のような指定をしようとするときは <xsl:value-of select="リスト/*[local-name() = $変数" /> とします。 これは"リスト"の子要素の中で名前が"$変数"であるものを指定するということだと理解しています。 いかがでしょうか。
エレガントな方法を知っている人がいればいいんだけど・・・ 以下のような理由からXMLで直接行わず、XSLTを経由するのが早そうな予感。 =========以下は興味があったら読んで欲しい=============== XML規格に含まれる「外部解析対象実体」を IE 7はサポートするが、(IE 6は知らない。) Firefox,Operaではサポートしない。(エラーはでない) http://www-06.ibm.com/jp/developerworks/xml/0604 … ちなみにIEが行うXMLインスタンスのDTDによる検証をFirefoxは行わない。Operaは未確認。 ☆外部解析対象実体の動き(IEでrss.xmlを見ること) ================rss.xml================= <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE rss [ <!ENTITY contents SYSTEM "contents.xml"> ]> <rss version="2.0" xml:lang="ja"> <channel> <title>RSSのタイトル</title> <link>http://～</link> <description>RSSの説明</description> <language>ja</language> <copyright>RSSのコピーライト</copyright> <lastBuildDate>日付</lastBuildDate> <item> <title>タイトル1</title> <link>http://～</link> <description>タイトル1の説明</description> <category>タイトル1のカテゴリ</category> <pubDate>タイトル２の日付</pubDate> </item> &contents; </channel> </rss> ==============contents.xml=============== <?xml version="1.0" encoding="UTF-8"?> <item> <title>タイトル２</title> <link>http://～</link> <description>タイトル２の説明</description> <category>タイトル２のカテゴリ</category> <pubDate>タイトル２の日付</pubDate> </item> ☆外部解析対象実体には欠点があるようで (よく勉強していないのだが、詳細は上記やhttp://www.atmarkit.co.jp/fxml/rensai/w3cread22/ …あたり、およびそのシリーズが参考になるかも) http://www.xml.com/pub/a/2002/07/31/xinclude.html 等では、XInclude( http://www.w3.org/TR/xinclude/ )なるものも紹介されているが、ブラウザでの対応を期待するのは、無謀と言える ☆で・・・ あまり使ったことはないし、私はよく理解していないのだが、 xsl:includeやxsl:import、だめならdocument関数(http://oshiete1.goo.ne.jp/qa2593455.html )を用いる なんてことも考えている。
私も同じ様なものを考えて次のような手を思いつきました。 Code:A <xsl:if test="position() mod 3 = 1"> <xsl:text disable-output-escaping="yes">&lt;tr&gt;</xsl:text> </xsl:if> もし位置が3で割って1余るなら <tr> を出力する Code:B <xsl:if test="position() mod 3 = 0"> <xsl:text disable-output-escaping="yes">&lt;/tr&gt;</xsl:text> </xsl:if> もし位置が3で割って余りが0ならば </tr> を出力する 上記の二つを <xsl:for-each select="ko"> 全ての ko について繰り返す すべて終わったら Code:B をもう一度呼び出す。 サンプルは、次のページにあります。 http://skyandcloud.homedns.org/software/download … 参考URL：http://skyandcloud.homedns.org/software/download …
Msxml2.DOMDocumentを使用して、loadXMLで読み込めばDOMツリーに展開出来ると思います。 MSXMLのリファレンスは以下のページです。 http://msdn.microsoft.com/library/en-us/xmlsdk/h …
rssの構文ルールを守っていない為に発生しているエラーです。 rssには、XML構文ルールに加えて、より厳密なrss構文ルールが適用されます。具体には、「root elementは、<rdf:RDF>である」等。 参考URLにrssの構文ルールを解説しているサイトの載せました。 参照してください。 参考URL：http://www.kanzaki.com/docs/sw/rss.html
僕は使ったことないが Javascriptなど最低でもプログラミング言語を使った経験が必要ですが、Ajaxで調べるといいんじゃないかと思いますよ http://shoppers-jp.com/tech/ajax_01.html このサイトでは GETを http://shoppers-jp.com/tech/ajax_01.cgiに対して送っていますが xmlHttp.open('GET', 'http://shoppers-jp.com/tech/ajax_01.cgi?x=' + x + '&y=' + y , true); 投げるところを http://xml-jp.amznxslt.com/onca/xml?Service=AWSE … にすればいいだけで。 あとは <input type="button" value="計算" onClick="HttpRequest()"> とかやれば、ボタン押したときにHTTPRequest関数が実行されてくれるので処理ができるでしょう。
table だけ別templateまたはifなどで別処理にして width属性の値は無視して<attribute name="width" value="80%" />で書き出す。 でもそんな事しないで元のXHTMLを置換機能で纏めて"100%"からCSS使用の指定に切り替えた方が楽なのでは？ そしたら次からCSSの1箇所直すだけだし ----------css table {border:solid 1px} table.T_WIDTH {width:100%} ----------xhtml <table class="T_WIDTH">・・・・・・
回答になるか自信はないですが、 私も全く同じようなことをやろうとしています。 （一応の枠組みは完成しました） >XMLの対応付けはエクスポートできません というメッセージが出るということですが、 私もこれを見たことがあります。 liaoさんがどのような手順で作業をしているか分かりませんが、 Excel 2003 で XML の対応付けを作成する http://www.microsoft.com/japan/msdn/office/excel … ここを読んでみてください。 ここの簡単なサンプルを使って手順に従ってみれば できるかもしれません。（私はここを見てやりました）
タブ：\t 改行：\n(\r\nの場合もありますが・・) を、Replaceメソッドを使って取っ払ってやるといいです。 string text = "(TAB)あいう(改行)".Replace("(TAB)", "").Replace("(改行)", ""); こういった形は、多数あるとめんどいので、メソッドにしてしまうと よいかと思われます。 private static string hoge(string text){ string ret = text.Replace("(TAB)", "").Replace("(改行)", ""); return ret; }
ＤＴＤではできないように思います。
#1>「名前トークンを使用」とはなんですか？ 名前に使用できる文字のことです。 「名前」には先頭に使えない文字があります。 例えば、数字がそうです。 「名前」の先頭には使えないが名前に使える文字を含めて 「名前」の構成文字という意味で「名前トークン」といいます。 つまり NMTOKEN は"NAME TOKEN"というということですね。 "番号" は、数字を意味するようにしたいのですが、 ＳＧＭＬでは NUMBER というのがあるのですが、ＸＭＬではこれがありません（スキーマはまた別の話として）。 それで他のモノを使う必要があるのですが CDATA だと何でもいいということになり ID (「名前」)だと数字で始めることができないので NMTOKEN ということにしました。 こうしておけば、先頭が数字から始められてある程度限定することができます。
要するに文書構造を検証するために必要なのだと思います。
例えば <xsl:template match="/"> first node:<xsl:value-of select="name(/data/*[1])" /> </xsl:template>
参考URLから URI Uniform Resource Identifier. 　　リソースを指し示す短い文字列からなる名前/アドレスの総称 URL Uniform Resource Locator. 　　良く知られたURIスキームであるhttp, ftp, mailto などを指す非公式な（技術仕様文書では使われることのない）用語 URN Uniform Resource Name. 　　1. 何らかの組織がその永続性、可用性を保証しているURI。この種類のURIは、URLでもあり得ることに注意。たとえば[PURLs]を参照 　　2. 永続的で場所に依存しないリソース指定のために用意されているスキーム「urn:」のこと。RFC 2141および関連文書で定義される 参考URL：http://www.kanzaki.com/docs/html/urn.html
http://www.kawa.net/works/js/jkl/parsexml.html をお使いになってはいかがでしょうか ”IE・Firefox・Opera・Safari のクロスブラウザに対応しています。” とのことです。
ＷＥＢページにリンクとしてアクセスできるようにしておけばいいと思います
＃９補足のＸＭＬを使用しても問題なく実行できました。 やはり、"XML read error" になるのですね？ ＸＭＬファイルをアップする時に文字コードが変換されているとか権限として読めないようになっていたりしませんか？ 今回のコードとは別に、日本語を含まない凄く単純なＸＭＬファイルだと読み込めますか？ 例えば <plist><key>XXX</key></plist> のようなもの
#1です。 ちょっと難しいかもしれない...っていうかどう読んだらいいのかわからないけど、MSDN Onlineへのリンクからわかるかもしれませんね http://www-higashi.ist.osaka-u.ac.jp/~k-maeda/vc … http://msdn2.microsoft.com/en-us/library/b44eddk …
自信ないけど。適当なフォルダに解凍するだけでいいんではと思う。 j2se～xalan http://www6.airnet.ne.jp/manyo/xml/xslt/step24.h … Xerces http://www6.airnet.ne.jp/manyo/xml/sax/home.html CLASSPATH-Xerces http://www.nextindex.net/java/app/classpath.html CLASSPATH-xalan http://msugai.fc2web.com/java/XML/Xalan.html
＃１の一番目の記法は、編集がぐちゃぐちゃになってました。申し訳ないです。 正しくは、＃２さんのように <a href="#"> <xsl:attribute name="onClick">hogehoge('<xsl:value-of select="$prm_test"/>');</xsl:attribute> りんく </a> です。
やりかたは、色々あるけど、１つの方法 ---------------------------------------------------------------- XmlNode xmlRoot = xmlDoc.DocumentElement; Console.Write("ルート名は[" + xmlRoot.Name + "]です。\n"); Console.WriteLine(xmlRoot.SelectSingleNode("/server/@maintenance").Value); Console.WriteLine(xmlRoot.SelectSingleNode("/server/database/@providerInvariantName").Value); Console.WriteLine(xmlRoot.SelectSingleNode("/server/database/@connectionString").Value); Console.WriteLine(xmlRoot.SelectSingleNode("/server/database/property/@value[../@key='userName']").Value);
(書き方は色々あるけど)とりあえずこんな感じ？ 細部微調整されたい ---------------------------------------------------------------- <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/report"> <html> <head> <title>タイトル</title> </head> <body> <p align="center">適当なコメント</p> <p> <xsl:value-of select="head/editorialOffice" /> </p> <p> <xsl:value-of select="head/additionalInfo/v" /> <xsl:value-of select="head/type" /> </p> <div> <xsl:for-each select="body/warningHead/area"> <p> <xsl:value-of select="@name" /> </p> <p> <xsl:for-each select="kind"> <xsl:value-of select="@name" />　<xsl:value-of select="@level" /><br /> </xsl:for-each> </p> </xsl:for-each> </div> </body> </html> </xsl:template> </xsl:stylesheet>
エラーですが、 if(image != "") ではなくて var image = xmlDoc.getElementsByTagName("image")[i].firstChild.nodeValue; のところで起こってませんか？ そうであればfirstChildの中身がnullなのでnodeValueにアクセスできないということです。nullチェックして、nullならimage=""で結構かと。
./test.phpflg=1&amp;file= じゃ駄目かな？ 追記: http://hp.vector.co.jp/authors/VA022006/html/mar …
No.1のhimajin3500さんが指摘されている問題（<dc:date>の構文エラー。恐らく時分秒の時が0-23の間でないとならない／URLが不正 http:の後のスラッシュは２つです）に加えて、HTTPレスポンスヘッダのContent-Typeで text/htmlを返しているのがまずいです。 このContent-Typeを返すとRSSだと解釈できないRSSリーダが多数存在します。Content-Typeには、現状では application/xml を返してください。 具体的には、PHP内の適当な場所に以下の一文を加えます。 header("Content-Type: application/xml");
#2>nextSiblingを使えばどうにかなるのではないか そうですね、普通、ＤＯＭでは、nextSibling を使うと思います。 試しにnextSibling を使って次のエレメントを取り出そうとしてみましたが、失敗しました。 多分、バグなんじゃないかと思います。 そうも言ってられないですけど #2>出来れば一つの<item>要素のデータを取り出したあと、一つ古い（一つ下の）<item>の情報の<link>要素も取り出したいと考えています。 <item> 要素については、 $items=$doc->getElementsByTagName("item"); でそのノードリストが取り出せるし、 個々の<item> 要素は $items->item(index) で取り出せます。(要するに任意の位置のitem が取り出せる) また、<item> の全体の要素数は $len = $items->length; で取り出せます。 そうすれば、 $items=$root->getElementsByTagName("item"); $len = $items->length; $i=0; foreach($items as $item){ $i++; if($i<$len){ $next=$items->item($i); として、処理している$itemの次の<item> を捕まえられます。
>これだと、全体のDTDってことになると思うのですが、 これを、このタグのみって限定することは えーっと。えーっと。えーっと。言っていることが把握できないな・・・・ ●出来上がったXHTMLの一部分の要素に対し、包含関係の制約をつける じゃなくて ●XHTML文書全体に対し、使える要素をDTD内で宣言されている要素のうちいくつかに制限する ってことだよね・・・・ XHTMLでDOCTYPE宣言を書き換えて良いのか僕は自信が持てない。可能であるにしても(ないならXML文書として扱う)DTD自体を改めて作り直す必要があると思う まぁXHTML 1.1のDTDは読み慣れれば結構簡単なので 変更の方法も楽だと思うけど。IGNOREしまくりw。
例えば、こんな感じ ---------------------------------------------------------------- <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="html" version="1.0" encoding="Shift_JIS" indent="yes" /> <xsl:template match="/"> <html> <head><title>sample</title></head> <body> <p> <xsl:for-each select="//table"> <table> <xsl:for-each select="list/row"> <tr> <xsl:for-each select="value"> <td> <xsl:if test="position()=5 and .&gt;=20"> <xsl:attribute name="bgcolor">#FF3232</xsl:attribute> </xsl:if> <xsl:value-of select="."/> </td> </xsl:for-each> </tr> </xsl:for-each> </table> </xsl:for-each> </p> </body></html> </xsl:template> </xsl:stylesheet>
そのような場合 <!ELEMENT あるタグ ANY> と書きます。 （ただし、ＤＴＤの要素型宣言で宣言された要素、でないとＸＨＴＭＬに適合するかチェックできないから）
#1>簡単に言うと、htmlのものをXMLにするのは手間がかかりますか？ ＨＴＭＬ をＸＭＬに適合するように書いたものをＸＨＴＭＬといいます。 タグは小文字で書くとか、必ず閉じタグを書くとか色々ルールはありますけど、基本的にはそれ程難しいことはありません。 最低限体裁さえＸＭＬ様式になっていれば目的としてはいいので。 ＸＨＴＭＬについての書き方の注意なんかは、多分そのようなサイトがあると思います。 ＃１＞・htmlの場合には<div id="tail">を呼び出すことはできないですか。 基本的にＨＴＭＬ＋javascript で別ページの部分は、読込できません。 Ajax と言われる手法では、別ページを読み込むことができます。 その場合、ＸＭＬ様式になっていれば、簡単に、id 指定でエレメント以下の内容を取り出すことができます。 ＸＭＬ形式になっていない場合には、テキストとして読み込んで、必要な部分を取り出すことになるかと思いますが、タグペアの対応を解析するのが難しいので、余程シンプルな形のＨＴＭＬじゃないと難しいと思います。 また、ＨＴＭＬ＋javascript では、 （やはり、ＤＩＶで分けてあることが前提ですが） ＩＦＲＡＭＥなどで、動的に別ページを読み込んでその部分を取り出す。 子ウインドウとして開いてその部分を取り出す。 というのは多分できると思います。 （こちらは、読み込んだ時にブラウザが解析してくれるので楽に取り出せる)
ＷＯＲＤの話じゃないのですが、、 ＷＯＲＤを用いるということは、ブラウザにＩＥを想定しても良いと言うことだと思うので IE5.5 以降であれば、 <style type="text/css"><!-- p { writing-mode:tb-rl; } --></style> のようなスタイルを設定すれば縦書き表示は可能です。
基本的にＵＲＩ指定されたものを読み込むので外部サイトでも読込できると思います。 実際に試してみるのが早いんじゃないでしょうか
英語に抵抗感がなければこちらもどーぞ。 http://en.wikipedia.org/wiki/Web_services
number 関数を使うと文字列を数値に変換できます。 その時に、数値に変換できない値を指定すると、NaN(非数値)を返しますので、この関数を使って非数値(数値以外)を判定することができると思います。 例えば、 <xsl:when test="'NaN'=string(number(width))"> 数値ではない<br /> 等とできます。 (数値の場合の処理は<xsl:otherwise>で) 注意として、string(NaN)がの表現が'NaN'でない場合も考えられるため 'NaN'= ではなく string(number('NaN'))= の方がいいかもしれません NaN を直接ＸＳＬＴで表現できればいいのですが、それは知りません。 ＭＳのマニュアルなんかを読むとエンティティと書いてあるので、なんらかの表現があるのかもしれませんが・
本題とは外れますが、面白そうなニュースです MS、OfficeでOpenDocumentをサポート http://www.itmedia.co.jp/news/articles/0607/06/n … #ところで・・・自分はMS Office持っていませんが 長い間InfoPathを魅力的に見ています。誰か効果的に使ってます？(笑
多分不可能です。 PC同様のものを使って下さい、と言うことだと思います。
(しばらくID取得とか面倒くさがって調べてませんでした) で、悩んでいたんですが原因判明。 http://www.goodpic.com/mt/archives2/2004/10/amaz … Amazon.co.jphttp://webservices.amazon.co.jp/onca/xml? JPベータ版http://aws-beta.amazon.co.jp/onca/xml? Amazon.comhttp://webservices.amazon.com/onca/xml? Amazon.comではなく【Amazon.co.jpまたはJPベータ版の方で試してみてください】 #1065852で何故かデータとしてPlazma TVが返ってきてたからおかしいなぁと思って見切りを・・・
ごめんなさい。判りませんでした。回答になりません。既に解決しているかもしれませんが・・・ PRB: HRESULT C00CE56E "System Does Not Support the Specified Encoding" Error Message with MSXML http://support.microsoft.com/?scid=kb;en-us;3046 … >As of version 2.6, MSXML passes all XML documents through Mlang.dll to verify their encoding. If Mlang.dll encounters a non-standard encoding string, it returns an error. によるとMSXMLの文字コード認識はMlang.dllで行われているようなので (もちろんWindows-31JはIANAのキャラセットに存在することを確認しました) そこでMlang.dllを検索して見ました http://msdn.microsoft.com/workshop/misc/mlang/re … 等を使って対応文字コードを並べてみるとか・・・
回答が来てないのは多分何が聞きたいのか、が伝わってないからだと思う・・・ RSS -- サイト情報の要約と公開 http://www.kanzaki.com/docs/sw/rss.html#rdf-model とか 窓の杜-RSS作成支援 http://www.forest.impress.co.jp/lib/inet/homepag … ということだろうか？
<?xml version="1.0" encoding="Shift_JIS" ?> <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"> <xsd:element name="root" type="rootType" /> <xsd:complexType name="rootType"> <xsd:complexContent> <xsd:restriction base="xsd:anyType"> <xsd:sequence> <xsd:element ref="sub" /> </xsd:sequence> </xsd:restriction> <xsd:complexContent> </xsd:complexType> <xsd:element name="sub" type="subType" /> <xsd:complexType name="subType"> <xsd:simpleContent> <xsd:extension base="xsd:string"> <xsd:attribute name="a" type="xsd:string" /> </xsd:extension> </xsd:simpleContent> </xsd:complexType> </xsd:schema> かな？多分。
現在ネイティブでSVGに対応しているものは不完全では有りますがFirefox 1.5以降,Opera 8.0以降が対応しています。 ただし不完全である事を留意してSVGを作成しなければなりません。 特定の機能(例えばシャドーなど)に対応していない事もよくあります。 Operaに関してはフォントの扱いですら不完全です。 Adobe SVG Viewerを使う事でWinIE 4.X以降及びNetscape Plug-inに互換性の有るWindows及びMac OS 9.Xで動くブラウザ (Netsscape 2.0以降,IE 3.X,Mac IE,iCab等)で対応する事が出来ます。 こちらはほぼ完全と言える状態です。 将来この普及率は上がってゆく事は殆ど確実ですが現時点では不完全なものを含めても20%程度の普及率にしかなりません。 http://www.globe.to/~oka326/?SVGにあるsvg2swfでFlashに変換するか SVGが表示できない環境向けにPNG等に変換した画像が表示される工夫を行う方が良いでしょう。 <pbject>～<img/>～</object>のようにobject要素の中にimg要素を入れることで実現できます。
ところで。 僕が#2で遭遇したエラーは質問文と何ら関係のないものでしたが、 xsl:output要素の(名前空間の話は省略)method属性の値が htmlの場合、htmlとして出力するので当然出力結果のlink要素は閉じられません。このときHTTPサーバがHTTPヘッダの中で Content-type:text/xml;charset=UTF-8 とか返している場合Firefox等でXMLと判断されて質問文のエラーが出ることがあります META要素が大文字なのは・・・どこなのか詳しくは調べてないです
指定した回数というのは、自分が提供する静的なものなのか、ユーザが指定する動的なものなのか 自分のところでXのコレクション情報を自前で保持してるんだったら<xsl:for-each>をつかって処理 単に連番とかをユーザにあわせて動的に生成するんだったら<xsl:text>にJavaScript埋め込み系？
> 「スタイルシート」だけでは、メニューの共有ができないため、内容が変わるとすべてのページのメニューを変えないといけないのです。 その通りですが、実際にはコピペで挿入しているところがほとんどです。 以下のサイトを見てください。 Fab51: はじめてのスタイルシート http://fab51.com/info/css_design1.html ページ上にメニューがありますが、これはコピペで生成しています。 現在のページの配色が変わるのは、ページ作成者がスタイルシートのクラスを指定しているからです。 # ページの内容も是非、参考にどうぞ。 > フレームに似た画面で、フレームなしでサイトを作って、「メニューを複数のファイルで共有する」ためには「XML」が必要なのでしょうか？ どうしても共有を求めるのなら、何らかのプログラミング言語を習得する必要があります。 Perl, PHP, JavaScriptなど、Web上で扱えるものなら何でも良いです。 ただ、JavaScriptは嫌う方もいるので、止めた方がよいかもしれません。(かくいう私もあまり好きではありません) 仕組みとしては、「メニューのテンプレートファイル」を外部に置き、該当ページで外部ファイルを読み込んで出力する、という形になると思います。 > ...できるページを作るのに必要なことが載っているパソコン本がありましたら　書名・出版社などを教えていただけますか？ これはアンケートに該当しそうですが、どうなんでしょう。 とりあえず、私は「PHPポケットリファレンス」を愛用しています。 どんな参考書でも、基本は Try and Try です。
$dataElement = $doc->documentElement; $dataElement->removeChild($pNode);
＞encoding="UTF-8" と指定しているのに、xmlファイル自体をUTF-8以外で保存しているということはありませんか？
＞一般的にどのような機能を持ったファイルなのでしょうか？？ XMLはあくまで書式が規定されたデータでしかありません。 XMLデータを扱うためのAPI(SAX,DOM)が規定されてはいますが、XMLデータ自体が機能を持っているわけではありません。 ＞どういう時ＸＭＬファイルを使い XMLで要件(データ構造や処理速度など)が満たせればXMLでもいいでしょうし、XMLだと要件が満たされないのであれば他の形式や独自の形式を採用すればいいでしょう。 XMLの採用は何らかの目的を果たすための手段の１つに過ぎないということです。
XML中では、 < は、&lt; > は、&gt; を使います
＞<b id="2" />は表示しないものを作ってみました。 <xsl:template match="/"> <xsl:for-each select="//a/b[@id!='2']"> <xsl:sort select="./@id" data-type="number"/> <xsl:copy-of select="." /> </xsl:for-each> </xsl:template> としてみはどうでしょうか
そのままクリックするだけでは基本的にダウンロードになってしまいます。この手のファイルは従来のものとは扱い方が異なるため、手順をふまなければなりません。 例えば、IE6をご使用の場合だとそのままでは活用できません。別途RSSリーダーというものを導入されるか、RSSが読み込めるポータル（Google　パーソナライズホーム）をご利用されることをお薦めします。 他のブラウザ（Firefox、Operaなど）の場合は、標準でリーダーが内蔵されていますので、アドレスバーに表示されるアイコンをクリックすれば、登録できます。
s_husky です。 失礼しました。 <p> <script type="text/javascript" src="script/myscript.js"> </script> </p> と外部スクリプトを参照する方法に関する質問のようでした。 この場合は、src属性で指定するようです。
こんにちは。 HTMLとXMLですが、厳密には用途が異なります。 というか、XMLは、ホームページの表示以外の用途にも利用されています。 HTMLは文章などに対して、 与えられたタグを利用して、 修飾することができます。 それに対して、XMLは、 修飾することが目的というよりは、 情報を体系化することができる言語であるといえます。 例えば、以下の文章があったとします。 ------ スケジュール表 5月1日　晴れ 予定 　18:00～19:00　英会話レッスン 　19:30～21:00　○子と夕食 メモ 　切手を購入しておく ------ HTMLで上記を表現する場合、 例えば『スケジュール表』の部分を大文字にしたり、 脚色ができますね。 一方XMLでは、目に見える脚色ではなく、 それぞれの文字がどういった情報であるか ということを管理できます。 『5月1日』は日付ですし、 『18:00』は予定の開始時間、 『英会話レッスン』は予定の詳細です。 それぞれについて、XMLでは、 <日付>だとか<開始時間>だとか<詳細>というタグを 設定して、囲むことで、 その文字が何を意味するのかがわかります。 ホームページを作ろうとすると、 XMLはまどろっこしいものかもしれません。 しかしXMLは、 例えばアプリケーションソフトの設定情報を 管理する手段としても使われています。 また、ホームページを作る際でも、 XMLで体系化してあれば、 レイアウトの変更などをしたい際に、 各項目のタグを変更しなくても、 XSLTを変更すれば、一気に反映できるという意味では、 便利かもしれません。
>IE上で右クリックした時に出るエンコードの項目で、unicodeが選択されています。また、他のShift_JISなどは選択できない状態です。 そういう仕様のようです
質問文のような テンプレート内で定義されるローカルな変数は、 他のテンプレートで参照することはできません。 テンプレートの外で、 <xsl:variable name="na"><xsl:value-of select='//AAA/@value' /></xsl:variable> のようにグローバルに定義する必要があります。 また、その場合、<AAA> にマッチする度に内容が置き換わるのではありません。
＃１補足の内容でテストしてみたところ私の環境では問題ありませんでした。 msxsl index.xml -u 3.0 -pi のようにバージョン指定して実行すると、質問文と同じエラーが表示されました。 msxsl index.xml -u 4.0 -pi で実行した場合にはエラーはでませんでしたので、 MSXML 4.0 をインストールするとＯＫだと思います。 ちなみに、私が使っているmsxsl.exe のバージョンは4.0 です。
<xsl:number />の値を持ってくるということはできないですが 次のように書くことができます。 <xsl:template match="d"> 　<xsl:if test="ナンバーの値 < 10"> 　<xsl:apply-templates /> 　</xsl:if> </xsl;template> を <xsl:template match="//a[position() &lt; 10]/d"> <xsl:apply-templates /> </xsl:template> <xsl:template match="//a[position() &gt;= 10]/d"> </xsl:template> 意味： 10番目までの<a>内の<d>は表示 10番目以降の<a>内の<d>は表示しない
＃３＞エラー「スタイルシートにドキュメント要素が含まれていません。スタイルシートが空であるか、正しく構成されたXMLドキュメントでない可能性があります」 もしかして <?xml version="1.0" encoding="shift_jis" ?> を削除していませんか？ ＃２の書き方が悪かったですが、これは要ります。 (encoding がUTF-8, UTF-16でない場合には)
試しに作ってみました。 tramsform(xmlFile, xslFile, resultNodeID) という形で、ＸＭＬファイルとＸＳＬＴファイルそして適用結果を表示するDIV の ＩＤ を指定します。 例： tramsform('data.xml', 'style1.xsl', 'XML') ＩＥとFirefox で動作します。 ＃３のサイトでも書かれているように xml = new ActiveXObject("Microsoft.XMLDOM"); を使うより、ＸＭＬＨＴＴＰリクエストを使う方がいいのかもしれません。 ---------------------------------------------------------------- <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <HTML> <HEAD> <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> <TITLE>ＸＭＬの読込とＸＳＬＴの適用</TITLE> <SCRIPT TYPE="text/javascript"> <!-- window.onload=function(){ tramsform('data.xml', 'style1.xsl', 'XML'); }; function tramsform(xmlFile, xslFile, resultNodeID){ var xml, xslt, newDoc; if(document.all){ xml = new ActiveXObject("Microsoft.XMLDOM"); xslt = new ActiveXObject("Microsoft.XMLDOM"); } else { xml = document.implementation.createDocument("", "", null); xslt = document.implementation.createDocument("", "", null); } xml.async = false; xslt.async = false; xml.load(xmlFile); xslt.load(xslFile); if(document.all){ document.getElementById(resultNodeID).innerHTML = xml.transformNode(xslt); } else { var xsltp = new XSLTProcessor(); xsltp.importStylesheet(xslt); newDoc = xsltp.transformToFragment(xml, window.document); document.getElementById('XML').innerHTML = ""; document.getElementById('XML').appendChild(newDoc); } } --> </SCRIPT> </HEAD> <BODY> <div id="XML"></div> <button onclick="tramsform('data.xml', 'style1.xsl', 'XML')">スタイル１</button> <button onclick="tramsform('data.xml', 'style2.xsl', 'XML')">スタイル２</button> </BODY> </HTML>
javax.xml.transform.*; を使っていったんファイルや文字列として書き出さないとしょうがないんじゃないでしょうか 試しに、 InputSource in = SAXSource.sourceToInputSource(new DOMSource(doc)); とかしてみましたが、ムリみたいでした。 ところで、既にＤＯＭとして保持しているものをＳＡＸで解析しなければならないという理由はなんなんでしょうか？
@IT
#1,#2です。 余計なお節介かもしれないけど・・・言っておいたほうがいいかなと思ったので。 IEのCSS解釈にはFirefoxやOpera等他のブラウザに比べかなりのバグがあります 有名なCSS実装度チェックにAcid2というものがあります。「えむもじら」さんのところに各ブラウザでテストを受けた時の画像が載っています http://level.s69.xrea.com/mozilla/index.cgi?id=2 … ...というわけで、デザインで困ったことがあったり、 思ったとおりにならないときはFirefoxやOperaで確認しなおしてみるといいでしょう。 ＃私は普段からFirefoxを使っています。速度や消費メモリから言ったらOperaの方が使いやすいとは思いますが。
#1です。 さらなる蛇足です。XHTMLにはDOCTYPE宣言が必要だと思います 結構後ろのほうで(汗「たのしいXML」にも確か説明があったと思いますがxsl:output要素というのがあります。 http://www6.airnet.ne.jp/manyo/xml/xslt/step22.h … <xsl:output method="xml" encoding="Shift_JIS" omit-xml-declaration="no" standalone="no" doctype-public="-//W3C//DTD XHTML 1.1//EN" doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" indent="yes"media-type="text/html" /> という文を xsl:stylesheet要素の最初の子にします。長いですが(汗
プログラム言語がなにかよくわかりませんが、 ＳＡＸによる方法だと多かれ少なかれそんな感じになると思います。 ＤＯＭでもなんでもパーサーの処理結果を使うのが（特に問題となるような事項がないなら）楽ちんだと思います。
#5>これがXSLTで簡単に変換できてしまうなら是非ご教示ください。 エラートラップを簡略していますが、こんな感じ。 XSL の部分はオンメモリということで文字列で持っていますが、 ファイルから取り込むのももちろん可。 ---------------------------------------------------------------- import java.io.*; import javax.xml.transform.*; import javax.xml.transform.dom.*; import javax.xml.transform.stream.*; import javax.xml.parsers.*; import org.w3c.dom.*; public class Sample { public static void main(String args[]) throws Exception{ String xsl= //"<?xml version='1.0' encoding='Shift_JIS' ?>"+ "<xsl:stylesheet version='1.0' "+ "xmlns:xsl='http://www.w3.org/1999/XSL/Transform'>"+ "<xsl:output method='xml' version='1.0' encoding='Shift_JIS' indent='yes' />"+ "<xsl:template match='/ROOT'>"+ "<xsl:element name='ROOT'>"+ "<xsl:apply-templates select='PARENT1' />"+ "<xsl:copy-of select='PARENT2' />"+ //そのまま "<xsl:apply-templates select='PARENT3' />"+ "</xsl:element>"+ "</xsl:template>"+ "<xsl:template match='PARENT1'>"+ "<xsl:element name='PARENT1'>"+ "<xsl:copy-of select='CHILD_HEAD' />"+ "<xsl:copy-of select='CHILD_PROP' />"+ "<xsl:copy-of select='CHILD_END' />"+ "</xsl:element>"+ "</xsl:template>"+ "<xsl:template match='PARENT3'>"+ "<xsl:element name='PARENT3'>"+ "<xsl:copy-of select='CHILD_HEAD' />"+ "<xsl:copy-of select='CHILD_END' />"+ "<xsl:copy-of select='DETAILS_A' />"+ "</xsl:element>"+ "</xsl:template>"+ "</xsl:stylesheet>"; DocumentBuilderFactory dbfactory = DocumentBuilderFactory.newInstance(); DocumentBuilder builder = dbfactory.newDocumentBuilder(); Document doc = builder.parse(new File("parent.xml"));//ファイルからDOMを作る、実際は作ってあるはずなのでこの部分は必要ない DOMSource in = new DOMSource(doc); StreamSource ss = new StreamSource(new StringReader(xsl)); StreamResult out = new StreamResult(new File("result.xml")); //ファイルに書き出す TransformerFactory tff = TransformerFactory.newInstance(); Transformer tf = tff.newTransformer(ss); tf.transform(in,out); } }
ちょっと状況が良く判りませんが、 １つのファイルのＸＳＬＴが <xsl:for-each select="//data"> でできるなら <xsl:for-each select="//data|document('db2.xml')//data"> のようにまとめて処理することが可能です。
＞ContentTypeと申しましょうか、それをtext/xmlとした場合です。 参考ＵＲＬ（ＲＦＣ２３７６）で MIMEタイプ text/xml の場合 　charset パラメータが有る場合、 　　encoding 宣言は無視され、charset で指定された文字コードが使用される 　charset パラメータが無い場合、 　　encoding 宣言は無視され、charset のデフォルトであるus-asciiが使用される text/xml の場合 　charset パラメータが有る場合、 　　encoding 宣言は無視され、charset で指定された文字コードが使用される 　charset パラメータが無い場合、 　　encoding 宣言は無視され、charset のデフォルトであるus-asciiが使用される application/xml の場合 　charset パラメータが有る場合、 　　encoding 宣言は無視され、charset で指定された文字コードが使用される 　charset パラメータが無い場合、 　　encoding 宣言の文字コードが使用される という違いがあります。 ＞ファイルの先頭でエラーになります。 <?xml …の部分のエラーというより DOCTYPE のエラーだと思います。 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … に変えたり、 DOCTYPE 自体を削除すると該当エラーはでなくなりますので。 Firefox では問題ないので、ＩＥのバグなのかもしれません。 参考URL：http://www.csl.sony.co.jp/cgi-bin/hyperrfc?RFC2376
http://www.ipentec.com/ などどうですか
文書エンティティを使うより、こういう場合には、 XSL のdocument関数でファイルの読込をするのが簡単です。 <xsl:template match="TEST"> <xsl:copy-of select="document(concat(@ID,'.xml'))" /> </xsl:template> のように書けます。 どちらかというとこういう場合には <TEST href="A.xml" /> とかの方が意味を表していて良いように思います。 このようにしておけば、 document(@href) だけですみますしね。
http://www.fxis.co.jp/xmlcafe/tmp/wrapper-xml-19 … からＸＭＬ規格の日本語訳が読めます。 http://www.fxis.co.jp/xmlcafe/tmp/rec-xml.html の Nameは で、始まる部分の前後を参照してください。 なので、参考ＵＲＬ（２．）に書いてあることは正しいです。 ＩＥ６でエラーにならない理由は良く判りませんが、 おそらく、ＩＥのＨＴＭＬ文書の中では、<XML>要素が使える（ＸＭＬをＨＴＭＬに埋め込むのに使う）ためではないでしょうか（根拠なし）
http://members.aol.com/ksayward/XTML/ これのことですよね？ XMLの本にHTMLのことが書かれているかは不明です。 ですがXMLが何なのか理解できれば さらに理解が深まると思います。
AmazonのWeb ServiceのRESTリクエストにつけるSubscriptionIDは、Access Key IDです。Access Key IDとSecret Access Keyが確認できるページが表示できているのであれば、問題ないと思います。 RESTのリクエストはたとえば、ttp://webservices.amazon.co.jp/onca/xml?Service=AWSECommerceService&SubscriptionId=に、Access Key IDをつければOKです。
何のためにエスケープしているのかを考えれば、わかりやすいかと。 &<>"'などをエスケープしなければならないのはそのXMLを文字列として表現するときの話です。そうしないと、タグなのか単なる文字なのか識別できません。 しかし、DOMドキュメントオブジェクトを扱うときには<?xml・・・という「文字列」ではなくて、もっと抽象的なツリー構造を操作しているのですから、気にしなくてもよい話です。 もちろん逆に <elem>&</elem> のようなXMLファイルも、DOMのAPIで操作すればそのまま「&」という値が取得できます。
<?xml version="1.0" encoding="UTF-8"?> <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"> <xs:element name="A" type="AType" /> <xs:complexType name="AType"> 　<xs:sequence> 　　<xs:element name="B" type="BType" /> 　</xs:sequence> </xs:complexType> <xs:complexType name="BType"> 　<xs:sequence> 　　<xs:element name="C" type="xs:string"/> 　</xs:sequence> </xs:complexType> </xs:schema> では、ダメですか
if Not IsNull(node.childNodes(i).firstChild.nodeValue) then でなくて if node.childNodes(i).hasChildNodes then とすればいいです
CreateObject("Microsoft.XMLDOM") を使うといいでしょう http://msdn.microsoft.com/library/default.asp?ur …
目的とするところがよくわかりませんが、 <xsl:value-of select="酒" /> が（酒/酒の要素を指していることになっているが、そのような要素がない） <xsl:value-of select="名前" /> ではありませんか
→がエンティティ＆ｒａｒｒ；になってるからで化けているのではないと思います。 試したのはPHP5ですが、 mb_convert_encoding で "SJIS"から"UTF-8"の→にちゃんと変換できました。
　私が行った手順としては、JavaScript+DOMを使ってXMLのデータを解析して、SQL文を生成して、MySQLに流し込みました。
xmlns の指定は、ネームスペース（名前空間）を宣言（指定）しています。 xmlns="​http://www.xxxxx.xx.xx/xxxxx​" は、ディフォルトの名前空間の指定で xmlns:rdf="​http://www.w3c.org/rdf​" は、プリフィックスがrdf の名前空間の指定です。 タグの解釈(ルール)については、DTD で示されます。 RDF1.0 の構文については、参考ＵＲＬを参照 参考URL：http://www.net.intap.or.jp/INTAP/s-web/data/TR/1 …
micosoftの実験ページですね。 AjaxとかWeb2.0というやつです。 開発はおそらく、ASP.NET + Atlasでしょう。 http://www.microsoft.com/japan/msdn/asp.net/usin … Ajaxはまだ未熟性な技術なので、外注に出すのは怖いです。 将来的には開発ツールが整備されて並みのWebアプリ屋でも開発出来るようになると思います。
1. 試験番号だけを抜き出して次のように列挙する。 <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="xml" version="1.0" encoding="Shift_JIS" indent="yes" /> <xsl:template match="/"> <xsl:element name="試験"> <xsl:for-each select="/試験/情報/試験名"> <xsl:element name="試験番号"><xsl:value-of select="@試験番号" /></xsl:element> </xsl:for-each> </xsl:element> </xsl:template> </xsl:stylesheet>
xmlはunicodeで書いてますか？ そして保存したファイルを見ているソフトはunicodeを見ることができますか？
原因についてははっきり特定できます。 HTTPのデフォルトのエンコーディングは"us-ascii"で，XMLやHTMLで表現したエンコーディングルールが無視されるわけです。 XML宣言やHTMLの<meta>でエンコーディングルールを明記すれば，指定したエンコーディングで送信されるように勘違いされる方が多いのですが，優先されるのはHTTPヘッダ情報Content-Typeフィールドの値です。 zutさんがお調べになった限りでは，HTTPヘッダを出力するには，”?contenttype=text/html”をURLに付けないと無理のようですね。 ということで，HTTPヘッダをコントロールしない限りは，スタイルシートをいくら変更してもうまくいきません。
RSS1.0の仕様書の和訳サイト参考ＵＲＬ 参考URL：http://www.net.intap.or.jp/INTAP/s-web/data/TR/1 …
VWDExpressのバグっぽいですね。 ペーストして日本語が消えた直後にCtrl+Zを押せばとりあえず消えた内容は復活します。 [ツール]の[オプション]でオプションダイアログボックスを開き，[すべての設定を表示]をチェックし，ツリービューの[テキストエディタ]-[XML]-[書式設定]の設定画面の[自動フォーマット]のところの2つのチェックを外して自動フォーマットしないようにすれば回避できます。
>全商品数HASH(0x8ad6604)アイテム のようになるということは、 アクセスしている部分がハッシュの参照になっており、デリファレンスがうまくいってない（理解していない）ということだと思います。 私は、ＤＷＳって使ってないので、その辺に関しては良くわかりません（ＩＤがないと試せない？）が アクセスした時のＸＭＬをローカルに保存して、 ローカルのＸＭＬファイルに関して色々テストしてみるといいんじゃないですか。 そのデータとスクリプトを補足して貰えるならこちらでも試してみることができます。 多分、XML::Simpleで作成されるデータツリーが良くわかってないだけだと思うので my $tree = XMLin($xml); とかしてたら use Data::Dumper; print Dumper($tree); としたら、読み込んだＸＭＬがどういう風に構成されているか良くわかると思います
こんな感じですかね。 ---------------------------------------------------------------- <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <html> <head> <title>test</title> </head> <body> <p align="left">test </p> <table border="1" width="500" align="left"> <tr> <th width="18%" align="left">title</th> <th width="60%" align="left">name</th> <th width="40%" align="left">mail</th> </tr> <xsl:apply-templates select="root" /> </table> </body> </html> </xsl:template> <xsl:template match="root"> <xsl:for-each select="data"> <xsl:sort select="kana" lang="ja" /> <tr> <td><xsl:value-of select="name" /> </td> <td> <xsl:element name="a"> <xsl:attribute name="href"> <xsl:value-of select="sname/@surl" /> </xsl:attribute> <xsl:attribute name="target"> _blank </xsl:attribute> <xsl:value-of select="sname"/> </xsl:element> </td> <td> <xsl:value-of select="mail"/> </td> </tr> </xsl:for-each> </xsl:template> </xsl:stylesheet>
　どういう理由があったのか知りませんが、このデータの格納の仕方じゃ、いったい何のためにxmlで出力しているのか分からない。。。 　どうしてもxslt1.0でやりたいなら、拡張関数を定義してお使いになるのがよろしいかと（下記URL参照）。 　あと、xslt2.0になるとより簡単にできるようになるようです。 　「一旦変数に取り込んで処理をしてからXSLを適用する」と仰るのが正確にはどういうことなのか測りかねますが、解決済みなら以上参考まで。 参考URL：http://www.atmarkit.co.jp/fxml/tanpatsu/10xslt/x …
#1です おぉっと、言い忘れてた。IEにはこんな問題もあります http://www.satoshii.org/markup/dtd/xhtml11-msxml
「Amazon Webサービス」か「AWS」で検索するば、日本語による解説サイトや日本語の書籍が沢山みつかります。 http://www.websmith.co.jp/lilbox/links.php
そのとおりです。RSSリーダーはRSS（RDFまたはXML形式）やAtom（XML形式）などのフィード内に書かれた日時データを読み込みます。 したがって、配信側が過去の日時でも将来の日時でも指定できてしまうので、受信側が「あれ？」って思うことってよくあるんですね。 参考URL：http://www.cybergarden.net/blog/2005/11/entry_da …
RSSナビ ～RSSの総合情報サイト～ http://www.rssnavi.jp/ RSS-search　～RSS情報サイト～ http://www.toktok.serio.jp/rss-s/ I know.（RSS生成サービス） http://i-know.jp/
HTMLページからXSLへ直接値を渡すことはできません。(そのような機能を持つWebサーバがあるかも知れませんが。) 通常、以下の経路で任意文字などのデータを渡します。 HTMLページ --POST--> Webサーバ --CGI--> CGIプログラム よって、FORMから投げられた内容を受け取るCGIプログラムが必要です。CGIプログラムの中でXMLを生成するなどすれば、目的が達成できるのではないでしょうか。
RSS自動作成サービスを利用するとか http://blog.myrss.jp/archives/000175.html RSSで配信したい内容をblogに書いて、そのblogのRSSを告知するとか http://oshiete1.goo.ne.jp/kotaeru.php3?q=1648267
XHTML 1.1 DTD のエラーについて: これに関しては fruit893 さんの挙げている URI を参考にしてください。 基本的には XHTML 1.1 DTD と MSXML 双方にバグがあるということです。 なお、XHTML+MathML+SVG 文書を作るということであれば、 XHTML 1.1 の DTD を指定してもあまり意味がありません。念のため。 ちなみに、XHTML+MathML+SVG の DTD も XHTML 1.1 DTD を 含んでいるので、そのままではエラーが出るはずです。 もしどうしても DTD を使いたいということであれば、補足質問してください。 個人的には作成時の検証以外には DTD を使わないことをお勧めします。 XHTML+MathML+SVG 文書作成について: 具体的には下記 URI を参照してください。サンプルもあります。 http://www.w3.org/TR/2002/WD-XHTMLplusMathMLplus … http://www.w3.org/People/mimasa/,lang=ja 実装について: 基本的に IE で XHTML+MathML+SVG 文書を表示するのは無理です。 どうしても IE で表示できるようにしたい場合は、 MathML と SVG を別ファイルにして、XHTML の object 要素として 取り込み、プラグインで表示させるくらいしか方法がありません。 (さらに、拡張子 / MIME などで XML として処理する場合、 IE が XHTML を XHTML として処理してくれないため、 object の実装を HTC などで自作する必要があります。) 一部の Mozilla/Firefox はネイティヴでそのような文書に対応していますので、 とりあえずそれを試してみてはどうでしょう (下記は一例です)。 なお、開発版のため重大なバグを含んでいる可能性もありますので、 インストール・実行は自己責任でお願いします。 http://www.flock.com/developer/
やっぱＭＳＤＮ http://msdn.microsoft.com/library/default.asp?ur … http://msdn.microsoft.com/library/default.asp?ur …
１． ＸＭＬ仕様のＨＴＭＬであるＸＨＴＭＬというものがあります。 ＸＭＬは、ＸＳＬＴで変換しＨＴＭＬで表示するということがあります。 ということで、 既に作られているＨＴＭＬを利用できなきゃいけませんし 一部は置き換わるかもしれませんが、全部が置き換わるということはないと思います。 ２． ＨＴＭＬは、文法的に紛れが多いので、コンピュータで機械的に扱うのはなかなか難しいのですが、ＸＭＬは、文法的に厳密に定義されるので、コンピュータで扱うのが容易です。
XMLは完成度の高いパーサ(フリーのものを含む)が多数出回っているので、いろんな分野のアプリケーションで応用されています。 アプリケーションの設定ファイル、データベースのファイルインタフェース、各種メタデータ(ブログで有名なRSSなんかもXML(正確にはXML拡張のRDF)です)など数えると切りがありません。 有名どころでは次期Microsoft OfficeのファイルフォーマットはXMLになるとのことです。 あと、すみません、私の知識が古かったのですが、XHTML1.1から「見栄え」を指定するタグが軒並み廃止され(見栄えはCSSで指定)主に文書構造を指定する仕様になったようです。(本来のHTMLの働きに近いですね)訂正します。 データ構造を指定するXMLのうち、文書の構造を指定するものをXHTMLという感じですかね。
>アプリケーションあるいはプログラムが必要でしょうか？ とりあえず、ＩＥでそれらしいサンプルを作ってみました、 どれほどの意味があるかどうかはわかりません。 >MySQLやPostgre ちょっとやったことがないので、わかりませんが、 ＸＭＬをデータベースとして扱うことができるデータベースがあったような気がします。 その場合、現在の様な構造だとダメなような気がします。 -------------------------------------------------------------------- <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html> <head> <meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=SHIFT_JIS"> <title>Sample for IE</title> <script language="VBScript"> <!-- sub makeTable() dim root dim FD, RD dim record, field dim newTR, newTD dim i, j set root=xmldata.documentElement if root.hasChildNodes() then FD=root.getAttribute("fd") RD=root.getAttribute("rd") record=Split(root.text, RD) for i=0 to UBOUND(record) set newTR = list.insertRow field=Split(record(i), FD) for j=0 to UBOUND(field) set newTD = newTR.insertCell newTD.innerTEXT = field(j) next next else set newTR = list.insertRow set newTD = newTR.insertCell newTD.colspan=4 newTD.innerTEXT = "データなし" exit sub end if end sub '--> </script> </head> <body onload="makeTable()"> <xml id="xmldata"> <data fieldname="none" fd=" " rd=" "> 1 abc jiro taro 2 exe tosi sabu </data> </xml> <TABLE style="border:solid 1px yellow"> <col style="color:crimson;text-align:center"><col><col><col> <THEAD STYLE="background-color:lightSkyBlue;text-align:center"> <TR><TD>No</TD><TD>種類</TD><TD>名</TD><TD>姓</TD></TR> </THEAD> <TBODY ID="list" STYLE="background-color:lightcyan;"> </TBODY> </body> </html>
asahi.comのRSS/RDFサービスと、 http://www.asahi.com/information/service/rss.html rss.cgi と、 http://homepage.mac.com/travellers/blog/C8590125 … javascript で記事をスクロールさせてやれば、 個人サイトでもニュース速報が設置可能です。 参考URL：http://www.kyoya-jp.com/
>何も取得できずに、空白となってしまいます。 の原因は、 ライブドアなどが <content:encoded><![CDATA[ になっているのに対し、うまくいかない方は <content:encoded> <![CDATA[… のように別の行になっていることが原因ですね。 改行が１つ入っているためにCDATAセクションの前にテキストノードが１つできていて、 content:encodedの最初のノードの内容を取り出すと空行しかないので値が取れないということだと思います。 対処としては＃１でいいと思います。
参考ＵＲＬと同様で NodeList contentList = element.getElementsByTagName("content:encoded"); のように指定して（後は同様に）取り出せます
> そのXMLのエンコーディングが「必ずasciiで記述されている」別のファイルを用意するような仕様にするとか うーん、それだったら最初から「XML は UTF-8/16 でしか書いてはいけない」って決めちゃったほうが楽ですよね。実際、仕様策定者たちも本音としてはそうしたかったんじゃないでしょうか。 でもさすがに UTF-8/16 だけっていうわけには行かないから、「UTF-8/16 は必ず対応し、他のエンコーディングは各プロセッサが任意に対応する」という仕様に落ち着いたと。
こんにちは、なんか、変な風にとられてもいやなので、他の人の回答が付くのを待ってましたが、付かないようなので、また回答しておきます。 （また！）勘違いコメントだったらすみません。 * <xsl:for-each select="document（'取り込むXMLファイル'）//z:row"> <xsl:value-of select="@取り出したい属性の名前" /> </xsl:for-each> <xsl:for-each select="//z:row"> <xsl:value-of select="@取り出したい属性の名前" /> </xsl:for-each> の部分を <xsl:for-each select="//z:row|document（'取り込むXMLファイル'）//z:row"> <xsl:value-of select="@取り出したい属性の名前" /> </xsl:for-each> のように、まずは、１つにまとめることができます。 そうすることで、xsl:sortでまとめてsortできます。 xsl:sortについては、既知かもしれませんが <xsl:for-each select="//z:row|document（'取り込むXMLファイル'）//z:row"> <xsl:sort select="ソートキー" lang="ja" data-type="text" order="ascending" /> <xsl:value-of select="@取り出したい属性の名前" /> </xsl:for-each> のように書きます。 ソートキーが数値の場合、data-typeにはnumberを 降順にするには、orderをdescendingにします。
MSXML (Microsoft XML Parser) 3.0 Software Development Kit (SDK) http://www.microsoft.com/downloads/details.aspx? … は、ダウンロード済みでしょうか？ 上記をインストールしたフォルダのincフォルダの中に msxml2.h はあります。
私も最近勉強し始めいろいろと助けて頂いてますので、 参考になるか分かりませんが以下のサイトなんてどうでしょうか？ http://www.cityfujisawa.ne.jp/~yanai/xml/ http://www.atmarkit.co.jp/fxml/rensai/msxml03/ms … http://www.parkcity.ne.jp/~chaichan/src/htmlxml. …
>警告が連発してしまいます。 実際に試していないのでなんですが http://www.utj.co.jp/xml/dev/dom/dxdom1_1.html http://www.utj.co.jp/xml/dev/dom/dxdom2_1.html が参考になるような気がします
状況が再現し、一応除去もできるようにはなりましたけどなんか釈然としません。 やってみた方法は、ＸＳＬを２段階適用するというやり方で transformNodeToObjectを使って別のＸＭＬ（output method="xml")に変換し （ＸＳＬで一行分のレコードをxsl:elementで１つのエレメントにする） transformNodeで <xsl:value-of select="translate(., ' ', '')" /> みたいにして作成したエレメントから空白文字を取り除く＋<xsl:text> </xsl:text> （output methid="text"） するというようなやり方です。 でも、いちいちこんなやり方するなら、別に一行に書けばいいんじゃないかとか思えて釈然としません。 ところで、 std::string s = pXMLDOMDoc->transformNode(pXSLDOMDoc); replace(s, std::string("\r\n"), std::string("\n")); ってうまくいきますか？ こういう置換がプログラムでできるなら、 transformNodeで出力したものからタブと取り除くのも難しくないと思うのですが、 スタイルシートで、:CR:観たいなものをレコード区切りとして付与して スペース、タブ、改行を取り除いた後 :CR:を改行に置換するというような手順でいいような気がします。 どっちかというと、そういうプログラムで（整形）処理するのが、簡単でいいような気がするのですが。
ダブルクリックしてIEが起動しないということですか？ それとも、ＨＴＭＬみたいな感じで表示されないということなのでしょうか？ ＸＭＬにエラーが合って、エラーを表示しない設定になってるとか ＸＭＬのファイルの内容を（テキストエディタなどで開いて）補足で挙げていただけますか
<xsl:value-of select="translate(商品/値段,'０１２３４５６７８９','0123456789')" /> のように、translate関数を使うことで可能です。 サンプルでは、 値段の内容を全角数字を対応する半角数字に置き換えます
＃１>"c:\windows\system32\msxml3.dll"にしなければいけないのではないか あんまり詳しくはないのですが、私は、ＩＥ６で動作確認しています。 ＩＥ６は、msxml3.dllは使ってなかった（別途ダウンロードしてインストールしなければいけなかったような気がします）と思います。 質問文のXSLで欲しい結果にならない理由がＤＬＬだという意味なら、 それは、違うと思います。 select="//z:row[not(@COUNTRY = preceding-sibling:://z:row/@COUNTRY)]"> でセレクトされるのは、それまでとCOUNTRYがことなるもの つまり JAPAN,TARO CHINA,SABURO の２つのデータをセレクトすることを意味していると思われるからです。 ＃１＞XMLのデバッグにはどのような方法があるのでしょうか？ この時のこの値という意味なら、開発環境でインスペクトすればいいと思いますが、 構文エラーが表示されるので、まずは、ＩＥで動作させてみるのがいいと思います。 例えば、質問文のＸＳＬであれば、 xmlns:xsl="http://www.w3.org/TR/WD-xsl"に「xsl:keyがない」 ネームスペース「z:」が定義されていないとか表示されます。 あとついでに言えば、<xsl:key>宣言は、xsl:templateの中で使われていないので必要ないと思います。
値がなければタグはいらないと思います。 というよりも普通は既成のパーサーを利用するのでこのようなことで悩む機会は少ないと思います。 既成のパーサーを利用できないようなシステムということなのでしょうか？ システム間で送られてくるXMLはいわゆる規格上のXMLではなく数多の制限を加えているXMLなのでしょうか？ もしも一般的な規格に沿ったXMLを利用しているのでしたらパーサーの利用を考えた方がいいと思います。そうでなければもう一度システム間でXMLの仕様に関して打ち合わせをした方がいいと思います。
xslは、xmlのデータの表示方法をいろいろ指定することはできますが、データベースの操作のように、xslの処理で、あっちのxmlからデータを取ってきたり、こっちのxmlからデータをとってきたりは出来ないでしょう。 xslとxmlだけで行うなら、条件指定で抽出したいデータは、一つのxmlにすべて持っている必要があります。 他のプログラムで、複数のxmlから抽出結果だけのxmlを作るとかすれば、なんでもアリなので、それぞれのxmlをテーブルのように扱えると思います。
私もこの夏、XMLに関する勉強をしようと思っています。 特に資格は考えてはいませんが、.NET Frameworkとの関連でXMLが必要かなと考えたため、勉強することにしました。
RSS+XSLなページだけどIE5で見れません。 参考URL：http://web1.aaacafe.ne.jp/~tenki/tenki.xml
たぶん一番難しいのは「コンテンツ」でしょう。 XOOPS本体のインストールは難しいものではありませんので、 サーバーのスペックで利用可能であればそれでＯＫです。 すでに入っているレンタルサーバーでも、結局モジュール等は自分でインストールしていかないといけないので、 できれば全部自分でやれるタイプのほうがいいと思いますよ。 モジュールのインストールができれば、XOOPS本体のインストールも難しいものではありません。 ただ、オリジナルデザインで、機能もデフォルトから変えて、となると プログラムがある程度できないとつらいと思います。 XOOPSって結局「枠組み」しか提供してくれていませんからね。 あとはやる気だけです。一度自分のＰＣにインストールしてみてはいかがでしょう？ 案ずるよりなんとやら、けっこうラクラクにいけるかもしれませんよ。プログラミングの知識がなくても、じーっとプログラムをみていると、何をやっているかだいたいわかるようになってきます。個人でやるのであれば、楽しみながらやっていくといいですよ。
HTTPでHTMLやJPEG画像や他のさまざまなデータが転送できます。XML文書も同様に転送できます。HTML文書が転送できる理由との違いはありません。
問題ないですね。
>文字コードが「ＵＴＦ－８」かどうかを確認するにはどうすればいいですか？ 色々な方法があると思います。 例えば、適当に、内容を変更してＨＴＭＬとしてＩＥで表示して、 表示～エンコード～ＵＴＦ－８で化けずに表示されたらＵＴＦ－８ ですかね。 私の場合は、文字コードを変更できるエディタで概ね文字コードが確認できます。 わけわからん、化けてしまっている文字は、Ｐｅｒｌで適当にコード変換して表示できるものというようなツールを作って確かめたりしてます。 この場合で言えば、書かれている文字はサッカー！だと判明しているので、 ダンプして SHIFT_JIS:83548362834A815B8149 JIS :25352543252B213C212A EUC :A5B5A5C3A5ABA1BCA1AA UTF-8 :30B530C330AB30FCFF01 のような並びになっていたらそれぞれどのコードになっているか解ります。 とりあえず、手軽な方法として encodingの指定の部分を適当にSHIFT_JISとか変更してみて文字が化けずに表示できるか試してみたらどうでしょう。
msearchとかNAMAZUとかを使うのでは駄目なのでしょうか？
EXSLTはどうでしょう？EXSLTの中にmathモジュールがあるので、累乗はmath:power()、平方根はmath:sqrt()で実現できると思います。 http://www.exslt.org/math/index.html 参考URLはEXSLTの紹介記事です。 (専門じゃないので自信なし) 参考URL：http://www-6.ibm.com/jp/developerworks/xml/03030 …
＞XML over HTTP/HTTPS 一般的に何かの上で何かを利用するときに、このような表記法を使います。 今回の場合、「XMLをHTTPまたはHTTPSを使ってやりとりします」という意味になります。そういう意味ではSOAPに似ていますね。 他にも例を挙げるとすれば、VoIP(Voice over IP)という用語を最近良く聞くと思いますが、これは「Voice(音声データ)をIPを使ってやりとりします」ということです。 ＞非同期HTTP 同期・非同期は何と何が同期するのかでだいぶ意味合いが変わってきます。 たぶんリクエストを送ってもレスポンスを待たないで処理をするということではないでしょうか？簡単に言えば単純な逐次実行ではなく、スレッドを利用した並列処理をするということでしょうか？
日本語全文検索「なまず」というフリーのソフトがあります、アパッチなどのフリーのＨｔｔｐ　サーバ上（サーバーと言っても使わなくなったぼろパソコンで稼動します。）で動作し、モジュール追加でｐｄｆファイルなどの中も検索します。 かなり強力な検索エンジンです。 日本語全文検索システムの構築と活用 参考URL：http://homepage2.nifty.com/baba_hajime/namazuboo …
以下のように修正 ---------------- <?xml version="1.0" encoding="Shift-JIS" ?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:template match="/"> <html> <head><title></title></head> <body> <table border="1"> <xsl:for-each select="links/site"> <tr> <td> <img> <xsl:attribute name="src"> <xsl:value-of select="banner" /> </xsl:attribute> </img> <b><xsl:value-of select="name" /></b> </td> </tr> </xsl:for-each> </table> </body> </html> </xsl:template> </xsl:stylesheet>
具体的に質問を絞り込まないと回答は難しいですね。 ・サーバーでXMLファイルを配布する方法 ・クライアントプログラムがXML文書を読み取る方法 ・指定日時にプログラムを実行する方法 ・Webサイトを開く方法 など複数の質問が出てくるので絞り込んではいかがですか？ 考えられているプログラムはJava + XMLでなくても実現できます。
たとえば、perlでされるなら、 参考URLをごらんになっていただければできます。 ただし、お使いのサーバーにExpatがインストールされていることが条件です。 （うちのサーバーには入ってなかったので追加してもらいました） 使用される言語名と「RSSリーダー」というので検索すれば出てきますよ。 ただ、お使いのサーバーで使用できる言語を確認してくださいね。 参考URL：http://allabout.co.jp/career/cgiperl/closeup/CU2 …
訂正です。 <xsl:text>合 計</xsl:text> ではなくて、 <xsl:text>平均価格</xsl:text> ですね。
いきなりXMLにしようとしていますけど、まずは「どんな情報があれば回路を表わすことができるか？」が問題ではないでしょうか？ XMLで表現しようが、独自フォーマットで表現しようが、プログラムで必要なのは持っている情報であって、それがプログラムで処理する上で必要な要件を満たしているかどうかです。 まずはXMLうんぬんの前に、どんな情報があれば回路を表現できるのかを洗い出してみてください。 それらの情報が揃えば、XMLのスキーマも見えてくるのではないでしょうか？
DTDとはXMLのルールが書いてあるものです。 単純なテキストファイルだと思うので、メモ帳やお好きなエディタで見てください。 私がリファレンスとして見ているサイトは http://www.parkcity.ne.jp/~chaichan/src/htmdtd.htm http://www.kanzaki.com/docs/html/read-dtd.html です。だいたいこれで用は足ります。
　お示しになった XHTML では，DOCTYPE 宣言で「XHTML 1.1」を宣言しています。ここで，XHTML 1.1 には lang 属性はありませんので（廃止されました），質問のお答えは「正しくない」となります。すべて xml:lang 属性を使用します。 　ちなみに，XHTML 1.0 でしたら，lang 属性を持っています。
著作権は大丈夫？
そのXSD定義がどの程度のものか分からないのでなんともいえませんが、 簡単なものなら、EXCEL2003とかの機能でもできたと思います。 参考URLを記しておきます。 無償のツールではないですが。 見当違いの回答であればすみません。ご参考までに。 参考URL：http://www.cityfujisawa.ne.jp/~yanai/xml/office/ …
私のオススメとしては、分からなくてもいいからリンク先の「ごく簡単なHTMLの説明」を読んでみることです。 これを読んでみて、こんなことがあるんだな、っていうことを頭の片隅に置いてもらうのがいいと思います。 それから色々なサイトでHTMLのソースを見れば、それがどんなに汚いかとか読みやすいかとかが見えるんじゃないかなと思います。 ブラウザ（InternetExplorerとかFireFoxとか）は、ある程度文法に沿っていなくても見れるものを作ってくれたり、 またWordやホームページビルダーなどのソフトでは、不要で見づらいHTMLタグ（<body>とか<font>とか）の組み合わせを作成してしまったりするので、基礎は必要です。 （基礎というのは、"タグは、開始タグと終了タグがセットである"という大前提のこと） 手っ取り早く始めるなら汚くてもとりあえず書いて表示してみる、どんなに汚くてもブラウザは大抵認識しますから。 でも、たとえばあなたが「私のサイトにもっと人が来て欲しい」と思えば、XHTMLを使って構造化されたソースのほうが検索ロボットが見つけてくれやすいですし、改修もしやすいです。 読みにくい文章になりましたが、要は「XHTMLの基礎を分かった上でHTMLを始めるのが、後々便利だし、それほど難しくない」ってことでしょうか。 初めての方ならなおさら余計な情報なしに吸収できるので、かじったことがない人のであれば是非、まずは参考URL「ごく簡単なHTMLの説明」を分かる範囲で読んでみてください。 とほほさんサイトも便利ですが、私のイチオシサイトです。 参考URL：http://kanzaki.com/docs/htminfo.html
問題点は、XMLの使い道を考えられる人間があんまりいないことではないでしょうか。 見た目だけとか、データだけの使い方に詳しい方はたくさんおられるのですが。
<xsl:template match="/"> 　　<xsl:for-each select="A/*/*"> 　　　　<xsl:value-of select="."/> 　　</xsl:for-each> </xsl:template> こんな感じでどうでしょうか？ for-eachのselectで繰り返したい全てのノードを選択し、 value-ofのselectで出力したいノードを一つだけ指定しています。 ポイントはvalue-ofは条件に当てはまるすべてのノードに有効ではなく 条件に当てはまる最初のノードに対してのみ有効である ということです。 また、簡単に書くなら <!--これはxsl:transform直下に書く--> <xsl:strip-space elements="A B Z"/> <xsl:value-of select="A"/> でもいいと思います。 strip-spaceで空白の除去を設定しています。 value-ofでAを設定するとAの子孫テキストノードを全て出力してくれます。 （〃▽〃）がんばってください
すみませんm(_ _)m解答ではないのですが、自分も今FOMA向けの途中からの背景色の変更の方法を調べています。ネット上で調べても見つからず困っている所です(T_T)調べていて思ったのですが、本当にFlashを使っているのではないのでしょうか？サイトが重くなるかな？ それともXHTMLに背景色を変更するタグがあるのか・・・謎です(^_^;)
lunamariaさんがXMLとXHTMLとのどちらかをイメージしておられる、と思ってよいのでしょうか。 No.3やNo.5の方がおっしゃられていることがもしかしたら難しいかもしれない、と思って補足の意味で書きます。以上で分かれば読み飛ばしてください。 XMLというのは、とにかく「タグ」を使って文章の構造を表すことのできる言語です。 タグというのは、この場合、<html>や<name>といったカッコで囲まれたもののことです。 このタグは「開始タグ」と「終了タグ」が必ずセットになっていなければいけません。そして入れ子構造になっていなければいけません。大雑把に言うと、このようなルールがあります。 このXMLのルールの中で、WEBブラウザのために作られたのがXHTMLです。 XMLのタグは命名規則に基づいて色々名前を決められますが、XHTMLで使えるタグの名前は決まっています。 XHTMLはXMLのルールの中でHTMLを作り直したもの、といったほうがもしかしたら分かりやすいかもしれません。 つまり、XHTMLで書かれた文書はXMLで書かれた文書であるといえます。 補足としてはこのくらいで分かりますでしょうか？
HTMLを国際化する方法は幾通りもあります。 その方法として http://www-6.ibm.com/jp/developerworks/web/01072 … この方法を使いたいということでしょうか？ --具体的に言いますと-- (1) まず、データとなるXMLドキュメントを作ります。 (2) 国際化したい単語のXMLディクショナリーを作る。 (3) (1)で作ったXMLのHTML変換規則をXSLTというXMLドキュメントに記述する。このとき、国際化したい単語は(2)で作ったXMLディクショナリーからひいてくる。 (4) (1)で作ったXMLの頭（XML宣言がある場合は2行目）に<?xml-stylesheet type="text/xsl" href="(3)で作ったXSLTのURL"?>を挿入する。 こんな感じです。 --XSLTがわからない場合-- ↓で勉強するか、別に質問してください。 ■たのしいXML http://www.cityfujisawa.ne.jp/~yanai/xml/ 参考URL：http://www.cityfujisawa.ne.jp/~yanai/xml/
参考URLを見る限り <items> という要素は RSS 2.0 には存在しないようなのですが。 <item> の間違いでしょうか？　だとすると，参考URLを見る限り，<item> は tRssItem 型で，tRssItem型の定義では，中身の要素は全て minOccurs="0" なので，定義的には， <item /> でいいのではないでしょうか？ <item> の間違いでないとすると，単に RSS 2.0 には <items> という要素がないので，書かなければいいだけではないでしょうか？ 参考URL：http://www.thearchitect.co.uk/schemas/rss-2_0.xsd
私もXMLは素人なんで勉強がてらwebを参考にしつつ作成してみました。 以下のxmlファイルとxslファイルを用意しました。 data.xml ---ここから--- <?xml-stylesheet type="text/xsl" href="result.xsl"?> <data> <d id="A"> <info>1</info> <info>2</info> </d> <d id="B"> <info>2</info> <info>3</info> </d> <d id="C"> <info>1</info> </d> </data> ---ここまで--- result.xsl ---ここから--- <?xml version="1.0"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:template match="/data"> <html> <body> <table border="1"> <xsl:call-template name="set"> <xsl:with-param name="num" select="1"/> </xsl:call-template> <xsl:call-template name="set"> <xsl:with-param name="num" select="2"/> </xsl:call-template> <xsl:call-template name="set"> <xsl:with-param name="num" select="3"/> </xsl:call-template> </table> </body> </html> </xsl:template> <xsl:template name="set"> <xsl:param name="num"/> <tr> <td><xsl:value-of select="$num"/></td> <xsl:for-each select="d[info=$num]"> <td><xsl:value-of select="@id"/> </td> </xsl:for-each> </tr> </xsl:template> </xsl:stylesheet> ---ここまで--- ２ファイルを同じフォルダに保存し、IEなどでdata.xmlを開くとご期待通りの答えになっていると思います。 もっといい方法があると思いますが、 質問の内容のようなことは可能ということです。 私も勉強になりました。ありがとうございました(^^) 参考URL：http://www.w3.org/TR/xslt
<br/>と書いて、テキストと認識されることはXMLの仕様上ありえません。 具体的に<br/>と書いてどのように表示及び変換されるのか 示してください。
# ソースにコメントをつけて回答します。 $r1 = new DomDocument; $r1->loadXML("<Items><Item>a</Item></Items>"); $r1rt = $r1->documentElement; $r2 = new DomDocument; $r2->loadXML("<Item>b</Item>"); $r2rt = $r2->documentElement; # 違うXMLドキュメントからコピーする場合はちゃんと # importNodeを行いましょう。 $r2rt_copy = $r1->importNode($r2rt, true); # 最後に付け加えるならappendChildを用いたほうがいいと思います。 $r1rt->appendChild($r2rt_copy); $r1->encoding = "utf-8"; print $r1->saveXML(); # PHPの経験は少ないので記述ミスがあると思います。 # そこは直してください（*^^*）
ページの作成者が作成ミスをしているので、こちらが何か操作すれば見られるようになるというわけではないと思われます。 お急ぎならサイトの管理者に連絡してみてもよいかもしれません。
すごく簡略化して言うと、 ・HTMLは人間向け ・XMLはコンピュータ向け のドキュメント（テキストファイル）になります。 両者ともタグ（<>で囲まれたもの)を使用して記述します。 HTMLは適当に書いても大丈夫ですが、 XMLは、きちんと文法通りに書く必要があります。 さらに、XMLは、DTDやXML Schemaなどといった物で、XMLドキュメントの妥当性チェックなども可能になります。
基本的に、<p>タグで段落を作るときに、勝手に一行開けてくれると考えていいかと思います。 そして、<br>は行をあけない普通の改行ということになります。 つまり、一行あけるときは <p>あいうえお</p> <p>かきくけこ</p> 行をあけないときは <p>あいうえお<br /> かきくけこ</p> となります。 ＊余談ながら、xhtmlでは<body>の直下に普通のテキストを書くことができませんので、文章を書くときはそれを<p>で囲ってやることが必要となります。
ＦｉｒｅＦｏｘはどうでしょう。 10.1.ｘに対応しています。 ただ、10.1.ｘはバグも大石安定も悪い なんといっても遅いですのでＯＳの有償バージョンアップを考えても良いかと思います。 参考URL：http://www.mozilla.org/products/firefox/releases/
きっと、「変数名をタグで指定したものにしたい」ってことですよね？ 仮に変数名が可変にできたとして、何がしたかったのでしょうか？
タグの値の有無（空か否か）を判断したいのであれば <xsl:when test="value=''">hogehoge</xsl:when> でいいでしょう タグの有無を判断するなら <xsl:when test="count(value)=0">hogehoge</xsl:when> ですね <value></value>のような空要素と、タグが無いというのは同義語ではないです。どちらを指していたのでしょうか？
実際にはマークアップとして解釈される文字が含まれていなくても、Javascript 内では < や > が含まれる場合があるので、CDATA部　として記述するのが習慣なのだと思います。 参考URL：http://www.doraneko.org/xml/xml10/19980210/Overv …
No2について > リストは普通縦表示ですよね？ 単純に <ul> <li>item <img ></li> <li>item <img ></li> のように並べてもいいかなと。 桁あわせをしたければ<span>等も使ってCSSで揃える手法もあります。 興味があれば「CSS 段組」で検索してみるとサンプルが見つかると思います。 > また、先に「#content #main ul」「#content #main ul　li」で、リストのポイントを指定してしまった場合、新しく「ul」「li」を指定するにはどうしたらいいですか？ すいません、ここは理解できませんでした。
"テキストの内容に無効な文字が見つかりました" 文字列のエンコーディングとencodingの属性が一致していないのではないですか？ encoding属性を付加しても変換を行ってくれるわけではないので、正しく指定する必要があります
#content #main table.table2　　と記述した場合も <table class="table2"> 　略 </table> でいいです。
ＸＭＬはあんまりいい参考書ないですねぇ。 というのが実感です。サンプル集の方がいいですね。 ＣＱ出版社 「ＸＭＬ＋ＸＳＬＴ　実用スーパーサンプル集」 ちょっと古いですが大型書店などには置いてるかも。 「OPEN DESIGN」での連載をまとめたものです。 サイトでは・・・基本的な内容ですが参考ＵＲＬをどうぞ。 参考URL：http://www.cityfujisawa.ne.jp/~yanai/xml/
<result> 　<book> 　　<name>abc</name> 　　<id>001</id> 　</book> 　<book> 　　<name>def</name> 　　<id>001</id> 　</book> 　<book> 　　<name>ghi</name> 　　<id>002</id> 　</book> </result> 上記のような結果を得るためのXSLTは、次のようになります。 <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> 　<xsl:template match="/"> 　　<result> 　　　<xsl:for-each select="root/book/hon/@name"> 　　　　<book> 　　　　　<id><xsl:value-of select="../../@bookid" /></id> 　　　　　<name><xsl:value-of select="." /></name> 　　　　</book> 　　　</xsl:for-each> 　　</result> 　</xsl:template> </xsl:stylesheet> このXSLTを実行するにはJavaのTransformerを使用する必要があります。 詳しくは、下の参考ページをご覧下さい。 XSLTを使用しないで、Javaだけでやる方法もありますが、要素を生成したりする処理がめんどくさいので、XSLT変換が一番スッキリいく方法です。 参考URL：http://www.hellohiro.com/xslt.htm
CMSとはコンテンツ・マネジメント・システムのことでしょうか。 CMSのユーザーインターフェースは主にHTMLですが、一般にデータ・定型文書・非定型文書・ワークフローなどを管理したりするもので、動的に情報を抽出したりする部分、システムを運用保守する上でXML設定ファイルは便利です。 簡単に言うと、設定情報をXML形式で登録するだけで、CMSシステムが出来上がるようになっています。HTMLもわざわざ作る必要がありませんし、XMLは知らなくても、登録はマニュアルに従えば簡単です。 運用保守も可能です。例えば、画面上の表形式を変えるのも、HTML等のコーディングなしに、XMLファイル（テキストファイル形式）の値を変えるだけで画面表示が変わったりします。 一般的なXMLの利点は参考URLをご覧下さい。 参考URL：http://www.necsoft.com/solution/xml/xsc04.html
TextクラスはNodeクラスを継承しているのでsetNodeValue()/getNodeValue()を利用できます。Textクラス特有のメソッドsetData()/getData()でも動きは同じです。 前回のコードでは、メモリ上のDocumentは、すでに文字列変換されています。 ただ、これをファイルに書き出す（保存する）場合は、もう一つ手順が必要です。 　　　　File file = new File("test2.xml"); 　　　　Transformer t = TransformerFactory.newInstance().newTransformer(); 　　　　DOMSource source = new DOMSource(document); 　　　　StreamResult result = new StreamResult(file); 　　　　t.transform(source, result); このコードを実行すると、ファイル"test2.xml"に変換後のXMLが書き出されます。
残念ながらXMLでは視覚表現を扱えません 「赤い」という意味のタグを付加することで目的を達せられるのであれば、XSLTを検討してみることをお勧めします。
IE6でしか動作確認していませんが、一応作ってみました。 <HTML> <HEAD> <TITLE>予定一覧</TITLE> <script type="text/javascript"> function search(f){ var pattern, node; f.A.value = f.COND.value; pattern="//p[a='" + f.COND.value + "']/b"; node=xmlid.selectNodes(pattern); f.B.value = node(0).text; pattern="//p[a='"+ f.COND.value + "']/c"; node=xmlid.selectNodes(pattern); f.C.value = node(0).text; } </script> </HEAD> <BODY> <XML ID="xmlid"> <data> <p> <a>10</a> <b>*b*</b> <c>*c*</c> </p> <p> <a>100</a> <b>#b#</b> <c>#c#</c> </p> </data> </XML> <form name="DATA"> A?<select name="COND" onchange="search(this.form)"> <option value="0">選択して下さい</option> <option value="10">10</option> <option value="100">100</option> </select><br> <label for="A">A:</label><input id="A" name="A" type="text" value="" size="20"><br> <label for="B">B:</label><input id="B" name="B" type="text" value="" size="20"><br> <label for="C">C:</label><input id="C" name="C" type="text" value="" size="20"><br> </form> </BODY> </HTML>
いろいろと解らないことがあってｗｅｂで検索していると、最終的に行き着くのは本家（www.w3.org）だったってことがよくあります。↓のＵＲＬは日本語サイトです。 # XSLT は「論よりRUN」で覚えたような気もします... 参考URL：http://www.infoteria.com/jp/contents/xml-data/RE …
「条件付でNodeListは取得できない」ではなく 「NodeListを取得するのに条件を与えられない」です。 こういった処理を望むのであれば、自分で処理を記述しなければならないということです。 childNodesプロパティで得られる情報は、当該ノードの子、全てをコレクションとして含むNodeListということになります。 「”氏名○○”のリストのみ取得する」という処理をしたいのであれば、『childNodesプロパティを使用して<個人>ノードを全て取得した後、さらに<氏名>ノードを取得して判断』という流れになるでのしょう。 この件に関して言えば、ネームスペースは『自分で判断する』必要があります。
　CSS で外部文書リソースを特定の位置に突っ込むことは仕様的には可能と読み取れますが，こちらで試したところ，ブラウザが実装していないので，現在はできないとお考えください。 　iframe 要素をお使いになったようですが，「以降のデータが出力されない」とのことで，もしかしたら iframe の終了タグをお忘れになっていないでしょうか。iframe 要素の基本書式は， <iframe src="***.html"> （iframe 要素が使用できないときの代替コンテンツ） </iframe> となります。 　それから，XHTML をお使いになっているということで，iframe 要素は XHTML 1.1 で消滅することにご注意ください。より一般的な object 要素を使用することになります。 <object type="application/xhtml+xml" data="***.html"> （処理できないときの代替コンテンツ） </object> ただし，この方法での外部ドキュメント挿入は，Internet Explorer ではサポートされません（Netscape 6 以降，Opera 7 以降でのサポートを確認しました）。 　以上，ご参考になりましたでしょうか。
とりあえず、掲示されたHTMLおよびCSSをfirefoxで試してみたらきっちり画像がくっつきました。 もし確認に使っているブラウザがIEだとすると、IEの不具合かも。
encoding方式をUTF-8としているのにも関わらず、 実際の文字はShift_JISが使われているのが問題であると思われます。 > と宣言して、XML文書を書いたのですが、 どの方法(ツール)で書いたのかによって解決策は異なりますが、 仮にWin2000以降のメモ帳でXML文書を書いたとしますと、メニュから ファイル→名前を付けて保存→文字コード→UTF-8 と選択してから保存してみて下さい。 Internet Explorer等でXML文書を開いても問題なく閲覧できると思われます。 秀丸で書いている場合も、保存の際に文字コードが選べたと思いますのでそこでUTF-8を選択して下さい。 他のテキストエディタでも同じような手順でUTF-8を選択できるかもしれません。 お使いのツールでUTF-8により保存する方法がどうしても分からない場合は、一旦Win2000以降のメモ帳で開いてUTF-8で保存しなおして下さい。
> このgoo RSSリーダーの仕様は、RSS1.0の仕様に基づいたものとは思えませんが、 RSS 1.0の仕様は、データのフォーマットの仕様であって、データの管理方法や、データの表示方法を定めた仕様ではありません。 ですので、goo RSSリーダーが1itemしか表示しないという動作とRSS 1.0の仕様は無関係です。 また、ユーザの利便性を考えても、goo RSSリーダーの動作に何か問題があるとは思えません。むしろ、これはこれで使いやすい、と考えることもできます。 例えば、こんな考えです。 linkが示すURLが同じでしたら、それが示すコンテンツも同じと考えます。 同じコンテンツを示すitemが複数あるということは、どれか一つのitemが最新の正しい情報を示し、残りのitemは古い(そして既に正しくない)情報を示している、と考えたとします。 そうなると、最新と思われる情報を1つだけ表示し、残りの情報は表示しない、という動作は自然なように思えます。 というわけで、goo RSSリーダーに問題があるとは思えません。 今回の問題の根本はここです。 > 自分のサイトの更新情報を載せるべく、RSSファイルを作ろうと考えていました。 RSSは、サイトの更新情報を配布するための仕様ではありません。サイトの要約を配布するためのフォーマットです。 つまり本来の目的外のことに使用しようとしているわけです。無理がでるわけです。 サイトの更新情報ではなく、サイトの要約をHeadline-Editor LiteでRSSファイルとして作成し、それを配布することをお勧めします。 サイトを変更したときに、RSSファイルも変更後の内容に合わせて変えましょう。 大抵のRSSリーダーは、RSSファイルの変化を分かりやすくユーザに提示するようになっていますので、結果的にサイトが更新されたことがユーザに伝わるはずです。
test.htmを見に行ってみましたが main.cssの中の #contentMenu li { … } の最後の部分で余計な"｛"があります。 多分コレのせいだと思います。
#1,2です。 クラスの構造が変わるのであれば、 DLLにしたほうが対応が簡単になると思います。 DLLでVCとVBの両方でクラスの変化に対応する必要がなくなりますし。
XML自体はプログラミング言語ではなく、データを保持・記述するドキュメント（拡張可能マークアップ言語）なので、XMLで「文字列を分割し配列に格納する」ことはできないでしょう。 Perlについては、全く知らないので何とも言えませんが、 Perlを使って、XMLのデータを抽出できるなら、"h o g e"の部分に抽出したデータを持ってくれば可能でしょう。
有名なmyRSSさんは http://blog.myrss.jp/archives/000131.html だそうです。
2種類を交互にということでしたらこんな感じでどうですか？ <xsl:for-each select="hoge"> 　<xsl:if test="position() mod 2=0">赤</xsl:if> 　<xsl:if test="position() mod 2=1">青</xsl:if> ： </xsl:for-each>
再度、回答の補足がありましたので、もう一度だけ。 私もエラソーなことを言っておきながら、XMLについては、それほど詳しく知っているわけではありません。 たとえば、XMLで、1+1を計算して、答えを表示するのは、どのようにするのでしょうね。 そこら辺の具体的なイメージがはっきりすると、少しは他の人も面白いと思ってくれるかもしれません。
こんばんは。 もしPHPを使われることに抵抗がないようでしたら、PHPを使えばAWS（Amazon Web Services）の情報も多く、比較的簡単に作れると思います。 AWSを直接使うより、PEARにServices_Amazonというパッケージがあるので、それを使うと簡単ですし、AWSを直接使うのとほぼ同じことが出来ます。 以下のムック本は、PEAR::Services_Amazonを解説しいて判りやすかったです。 「超・極める! PHP」 http://www.amazon.co.jp/dp/4798111058 以下のブログでも、ごく一部の機能ですが、紹介されているようです。 http://power.scianto.net/webservice/ecs/ http://dozo.rgr.jp/log/eid222.html 本家PEAR::Services_Amazonサイト（英語）： http://pear.php.net/package/Services_Amazon AWS自体をもっと詳しく知りたい！という場合は、以下の情報もご参考になるかと思います。 ええもん屋ラボさん： http://ecs.amonya.com/ Juiceさん： http://www.512x.net/weblog/ 本家AWSサイト（英語）： http://www.amazon.com/gp/browse.html?node=3435361 AWSZone　直接AWSの動きをシミュレート出来るサイト： http://awszone.com/
実行環境がないので試していませんが、一番簡単なのは @root.getElementsByTagName("node").length　を @root.getElementsByTagName("question_solution_tree/node").length に すれば可能と思います。
xlmnsじゃなくて、xmlnsですよ。
参考になるかどうか分かりませんが、私のサイトは XML を使っています。 商用サイトではなく、個人的な趣味のサイトです。 私は、XHTML を使っていません。XSL に独自のルールを書いておいて、 コンテンツの含まれた XML を XSL で変換して HTML にしています。 ホームページ作成ソフトを使用しない場合、統一したデザインでホームページを 構築するのはなかなか難しいものです。特にちょっと気の利いたデザインをするには、 table タグを巧妙に組み合わせたり、コンテンツ増やすたびにこれは面倒です。 私の XML では、文章を <Section> タグで囲うだけで、それなりの見栄えがするように しています。もちろんこのタグは独自のもので、XSLT のほうで <table> タグなどに 変換されます。 [XML] http://knatech.ifdef.jp/material/index.xml [HTML] http://knatech.ifdef.jp/material/index.html [XSL] http://knatech.ifdef.jp/xsl/kntag_standard.xsl 1 つめの XML ファイルは、ブラウザで開くとエラーになるかもしれないので、 右クリックで保存するか、ブラウザで開いて「ソース表示」してください。 ちなみに、変換プロセッサは XT、Xalan、Saxon などがありますが、私は Xalan を使用しています。
一般的には間違いになるはずです。 デフォルトにたとえば"AAA"という文字を設定した場合、 下の場合は当然"AAA"が入りますが、うえの場合は明示的に""（空の文字）を設定しているため、""が入るはずです。
XMLの技術のみでは、仕事として発注しにくいと思います。既存のシステムのデータ、コンテンツをXML化するにしても、既存システムの設計、開発者の知識の方が重要で、どちらかといえば既存システムの開発者に必要なXML関連の技術をピンポイントで習得してもらうほうが効率的だと考えるのが普通のような気がします。 XMLの技術を売りにしたいのであれば、 XML単体ではなく、XMLを利用したシステムの開発技術を売りにして、システムのXML化がどれだけ有効化をアピールできるかが重要のように思います。
IEを使っている場合、 xslの中でVBScriptが使えます。 それで、FileSystemObjectでファイルの有無を調べられるのではないかと思います。 その場合調べたいファイルは、ローカルのファイルなので、サーバーでスクリプトを動かす場合には、 ASPで動かす必要があります。 あと、拡張関数宣言をしてやれば、 OSのコマンドを実行することができるので これを使ってもファイルの有無を確かめられると思います。 環境にもよると思うので、 実際にテストしていないので自信はないです。
リストボックスの座標位置というのがよくわかりませんが、こんな感じではどうでしょうか？ ・XMLファイル（list.xml） <?xml version="1.0" encoding="utf-8" ?> <data> <item>A</item> <item>B</item> <item>C</item> </data> ・XSLファイル（list.xsl） <?xml version="1.0" encoding="utf-8" ?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="html" encoding="Shift_JIS" indent="yes"/> <!-- 文書全体のテンプレートルール --> <xsl:template match="/"> <html> <script language="javascript" src="select.js"></script> <body onload="SelectList(0);"> <center> <form name="F1"> <xsl:apply-templates select="data" /> </form> </center> </body> </html> </xsl:template> <!-- <data>のテンプレートルール --> <xsl:template match="data"> <select name="S1" OnChange="SelectList(this.selectedIndex);"> <xsl:apply-templates select="item" /> </select> </xsl:template> <!-- <item>のテンプレートルール --> <xsl:template match="item"> <xsl:element name="option"> <xsl:attribute name="value"><xsl:value-of select="." /></xsl:attribute> <xsl:value-of select="." /> </xsl:element> </xsl:template> </xsl:stylesheet> ・フレーム定義htmlファイル（index.html） <frameset cols="50%,50%"> <frame src="left.html" name="left"> <frame src="right.html" name="right"> </frameset> ・フレーム左側htmlファイル（left.html） <script language="JavaScript"> <!-- var XmlFile = "list.xml" ; var XslFile = "list.xsl" ; var xmldoc ; // XML DOM オブジェクト // XMLファイル読込 xmldoc = new ActiveXObject("Microsoft.XMLDOM") ; xmldoc.async = false ; xmldoc.load(XmlFile) ; // XSLファイル読込 xsldoc = new ActiveXObject("Microsoft.XMLDOM") ; xsldoc.async = false ; xsldoc.load(XslFile) ; document.write(xmldoc.transformNode(xsldoc)); //--> </script> ・フレーム右側htmlファイル（right.html） <html> <body> <center> <form name="F2"> <input type="text" name="txtKekka"> </form> </center> </body> <html> ・Javascriptファイル（select.js） function SelectList(p) { parent.right.F2.txtKekka.value = p ; } index.htmlをダブルクリックして起動してみてください
#2です。 質問者の方、私の意見を見た方、申し訳ありません。 薄学なのにでしゃばってすみませんでしたm(__)m
#2です。 もう少し正確に書くと、ブラウザによるのは、ＨＴＴＰの場合です。 ですから、ＸＭＬへのリンクをftpにしておけば、多分うまくいきます。 （もちろん、ＸＭＬファイルは、ＦＴＰサーバーになければなりません。） ただその場合、ｆｔｐサーバーを公開する必要がありますし、 公開しながら書き込みを禁止にできるのかなどの問題があります。 残念ながら、私はその辺は詳しくないのでお答えはできません。 他には、ダウンロードした後に拡張子を変えるとかですかねえ。
XMLファイルを <?xml version="1.0" encoding="UTF-8"?> <data> <a>タイトル</a> <b>テキスト1http://www.goo.ne.jpテキスト2</b> </data> XSLファイルを <?xml version="1.0" encoding="utf-8"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:output method="html" version="1.0" encoding="utf-8" indent="yes" /> <xsl:template match="/"> <html> <body> <xsl:apply-templates select="data" /> </body> </html> </xsl:template> <xsl:template match="data"> <h1><xsl:value-of select="a" /></h1> <xsl:value-of select="substring-before(b,'http://')"/> <xsl:element name="a"> <xsl:attribute name="href"><xsl:value-of select="concat(substring-before(substring-after(b,'http://'),'.jp'), '.jp')"/></xsl:attribute> <xsl:value-of select="concat(substring-before(substring-after(b,'http://'),'.jp'), '.jp')"/> </xsl:element> <xsl:value-of select="substring-after(b,'.jp')"/> </xsl:template> </xsl:stylesheet> でできますが、あくまでもhttp://の区切りの最後が.jpの 場合のみになってしまいますので、終端記号を決める 必要があります。
標準規格はないとおもうが.. 有名ソフト(Outlook等)にXML出力があるなら、それを真似るとか。
Webサービスクライアントの開発ですね。 Java, VB.NET, C#等で行います。 .NETで開発するのであれば、こんな感じです。 http://www.microsoft.com/japan/msdn/vs/webapplic … http://www.atmarkit.co.jp/fdotnet/netdict/netdic … VS.NETという開発ツールを使うとクラスとして扱えます。
<xsl:template match="/a"> <xsl:copy-of select="*:text()"/> </xsl:template> これで指定した名前のノード以下(そのノードは含まない)の内容をコピー生成します。
>eXtyleをつかいHTML化しています eXtyleというソフトは、 (1)元となるファイル(XMLファイル)に ↓ (2)スタイルシート(XSLTファイル)を適用し ↓ (3)お好きなファイル(HTMLファイルなど。それ以外でもよい)を出力 するソフト。 つまり、たとえば HTMLファイルを出力したい場合は そのための「XSLTファイル」が必要であるし、 また、たとえば XHTMLファイルを出力したい場合は そのための「XSLTファイル」が必要。 つまり、「XSLTファイル」というやつを、 あなたの好きに取り変えたり、書き変えたりすればよい。 XSLTファイル次第ってこと。 -------------------- XSLTの書法(書き方)はご存知なのかな？ HTMLファイル出力用のXSLTが自力で書けるならば、 あとは「XHTMLの記述法」を知ってさえいれば、 XHTMLファイル出力用のXSLTもすんなり書けると思うよ。 (検索キーワード：XML XHTML XSLT サンプル) ■XHTMを出力するためのXSLTサンプル： http://frog.raindrop.jp/knowledge/archives/00010 … http://msugai.fc2web.com/java/XML/XSLTelements.h … http://www.atmarkit.co.jp/fxml/tanpatsu/xslt/xsl … ■XHTMLの記法入門 http://tohoho.wakusei.ne.jp/ex/xhtml.htm http://www.cityfujisawa.ne.jp/~yanai/xml/struct/ … http://www.cityfujisawa.ne.jp/~yanai/xml/struct/ … -------------------- つまり、 >HTMLでなくXHTMLにするにはDTDを付け加えれば出来てしまうということなのですか？ そうではなく、 XHTMLを出力したいのであれば、(スタイルシートである)XSLTファイルを XHTML専用のものに変える必要があるということ。 そして基本的にはそれは自力で書く必要がある。
グーグル http://www.google.com/ で、キーワード "Microsoft XML notepad" を指定して検索して、 海外のサイトから見つけるよりほかないかな？ ~~~~~~~~~~~~~~~ 参考URL：http://www.google.com/search?hl=en&ie=ISO-8859-1 …
アンダースコアとはアンダーバーのことです。 XMLについては、書く人によって呼び名がかわったりするので、 http://www.scollabo.com/banban/senior/xml/xm_03. … を見てみました。 最初の文字に使えるのは、アンダースコアと文字（BaseとIdeograph Caracter）のようです。 Combining Characterも利用できると思いますが、日本語環境には持ってきたくない感じがします。 なお、先ほどの情報は、私がXMLマスターを受験した際の、テキストに記載されているものですが、上記のサイトをそのまま解釈すると、全角英数もタグとして動作すると思います。 しかし、やはり英数は半角で統一した方が、あとあと問題が少ないと思います（エディターが置換などするとき、全角半角を同時に置換されたり、などを避ける意味で）。 １冊、リファレンスブックが手元にあると、便利ですよ。 参考URL：http://www.scollabo.com/banban/senior/xml/xm_03. …
XSLファイルは、XMLの変換ルールを記述した 『テキストファイル』です。 XSLの<xsl:output>で、method="text"とすればＯＫです。拡張子が気になるのであれば、xx.xslとすればＯＫでしょう。 ちなみに、XMLやXSLはテキストファイルで、 XSLで出力できる形式はテキストとHTMLです。
消したら消したで、footerやらheaderやらが呼び出せなくて結局エラーってことでは？ Mozillaだとどの行がエラーか出てくれるのでそちらで確認してみては？ Mozilla Firefoxなら軽くてよいかと。
異なるアプリケーション間のデータ交換用として注目されています。特にインターネットを利用したB2B取引上で異なる基幹データベースシステムを採用している企業同士で、それぞれのシステムを更新する事なくデータの整合性を保つためにXMLを使おうと言う動きが有ります。 そのためには各システム上で共通化されたのメタデータを定義しないと行けない訳でそこが問題になっています。 質問で、書かれている例は、XSQLとかを見ると面白いかもしれません↓ 参考URL：http://www.atmarkit.co.jp/fxml/rensai/xsql01/xsq …
こんにちわ。 僕も利用はしていますが作ったことはまだないです。 ただ、あるサイトで実験的にRSS配布を検討する際に 参考にしたサイトを紹介しておきます。 http://www.kanzaki.com/docs/sw/rss.html http://rss-jp.net/wiki/wiki.cgi?RSS
こんにちは。 dir要素とfile要素は不規則に現れるんですよね！？ どちらにしても次のでいいんじゃないでしょうか？ ・//dir[not(dir)] ・//dir[dir]
どのような環境で変換をしていますか？ ちなみに、JAXPで変換したところ期待している形で出力されました。
んー。問題が漠然としすぎていて何とも…。 まず、質問の題が「XMLとUMLの相違点」となっていますが、 この二つは「国語」と「数学」ぐらいに違いがあります。 「ソフトウェア技術」という点では共通しますが、 使用場面も目的も違い、「比べる」という作業ができないものです。 まあ、問題を出す側ではそれをわかっていて、単に、 「この二つについてレポートを書け」ということなのかもしれません。 ただ、一番の「環境」(ビジネス)というのはどういう事なのでしょうか？ 環境ビジネスのこと？　環境としてのビジネス？ よくわかりません。 UMLもXMLも、原理は簡単です。 極端に言えば、UMLは「絵の描き方」、XMLは「書類の書き方」であり、 小学生にもできるものです。 ここはやはり、UMLとXMLについての入門書を買って勉強した方が、 遠回りのようでいちばん手っ取り早いと思う… …と、その友人にお伝えください。 ネットなら、UMLは「UML　オブジェクト指向」で調べるといろいろ出てくると思います。 XMLについてはわかりません。
下記リンクはいかがかと。 イラスト、図が満載で、非常に分かりやすいとおもいますよ。 参考URL：http://www.cityfujisawa.ne.jp/~yanai/xml/index.h …
試していないのでなんともいえませんが参考URLにいれたGalatea ProjectのGalatea ToolkitのLinux版ではVoiceXML による対話記述が可能のようです。これを利用してデモできませんかね。他商用製品もあるらしいですがちょっとわかりません。 http://hil.t.u-tokyo.ac.jp/~galatea/galatea-jp.h … それとhttp://www.egroups.co.jp/の方にvoicexml-jpがありますので質問したりログを参照してみてもいいかもしれません。他参考になりそうなURLを以下にあげておきます。 http://www.voizi.net/voizies/index.html http://www.zdnet.co.jp/news/0107/23/e_voice_m.html
両方の条件を満たすものを検索するなら， <xsl:when test="@エリア='新宿' and スープ='醤油'"> で OK です。 少なくとも一方の条件を満たすものを検索するなら， <xsl:when test="@エリア='新宿' or スープ='醤油'"> です。
SGMLに関していえば。 「文書構造記述言語」 XMLも、SGML的な用途に限れば、「文書構造既述言語」と言えるでしょう。 # XMLは汎用データフォーマットだの、オブジェクト記述だの、アプリのファイル形式だの、いろいろ使われてるので、ややこしくなるんですな。
XMLの中のRDFでは？ RDFという形で利用するXMLということかと。
●ＸＭＬのソース 　<解説> 　　　用語の説明。詳しくはリストを参照のこと。 　</解説> ↓ ●ＸＭＬのソース 　<解説> 　　　用語の説明。詳しくは<link url="http://www.hoge.org/hoge.html">リスト</link>を参照のこと。 　</解説> のようにしておき、 表示するというのであれば、 XSLTを利用したり、ブラウザならPHPなどを通す必要があるかと。
時間差回答ですが..。 私は参考URLのサイトをよく利用していました。simple-useとadvanced-useに分かれているので，順を追って学ぶには良いのではないでしょうか？ ただちょっと情報屋向きかもしれません。 参考URL：http://www.asahi-net.or.jp/~ps8a-okzk/xml/index. …
<a />は、<a></a>と等しいから、 あ）は、<a></a> い）は、<a></a><b></b> ――というところだからでは。
http://www.cityfujisawa.ne.jp/~yanai/xml/struct/ … このサイトは、やさしいですよ。
↓参考になれば、、、 参考URL：http://nanakamado.loops.jp/sae/fenrir/info/info. …
こんにちは。 スクリプトか何かを使えばどうですか? 私なら、Perlを使って以下のように処理するでしょう。 1. エクセルファイルをタブ区切りのテキストに変換。 2. タブ区切りテキストをperlスクリプトで読みこむ。 3. 一行毎に配列につっこむ。 splitを使って、$kotoba $yomi $imiと、それぞれ突っこむ。 4. 別のファイルに書きだし。その時、それぞれの変数の前後に、タグをつける。 <kotoba>$kotoba</kotoba><yomi>$yomi</yomi><imi>$imi </imi> テナ具合? お近くにPerl使いはいませんか?Perl使いならこれくらいは朝飯前です。 Perl使いに早くなりたいなあ。
私は、XMLって何？って感じなのですが、 興味があって調べてみました。 http://www.microsoft.com/downloads/details.aspx? … ここを見る感じでは、CEは入っていないようなのですが・・・。 見るところ違ってましたかね？ まとを外していたらごめんなさい。
印刷・出版業界で > 「大手電機部品メーカーなど大量の部品を扱っている > 企業に、マニュアル等をデータベース化し管理します。 > 膨大なデータから、印刷したいリストののみを簡単に > 検索できます！修正なんかも楽々です！」 というと、Content Management System (CMS) や Digital Asset Management (DAM) を利用した、"one source, multi use" の実現を指すのではないでしょうか？ コンテンツ（テキスト、画像、音声等）をデータベース化して管理し、必要に応じてそれらを組み合わせ、出力するというのが、最近の印刷出版業界のディジタル化の流れだと思います。 例えば、印刷用、Web用、放送用といった異なるメディア向けの作品を、同一の素材の組み合わせを変えるだけで出力できる、というようなことです。 これらを実現するためのシステムのデータ形式として、特に重要なのが、supercalさんも触れられているXMLです。 XMLはもともと、主に出版業界向けに文書構造の統一的フォーマットとして制定・利用されていたSGMLをもとにして、複雑すぎる部分を排除し、かつWebへの対応を考慮して制定されたフォーマットですから、もともと出版印刷業界との親和性は高いのです。 ただ、supercalさんが書かれているようなことをやりたいのであれば、XMLデータベースだけでは難しく、冒頭に挙げたDAMやCMSが必要になってくると思います。 これらのシステムとして有名な製品としては、CumulusとかAdobe Document Serverとかがあるようですが、詳しいことはよく知りません。この↓ http://www.atmarkit.co.jp/fbiz/reference/softwar … ページで関連製品のリストを扱っているようです。 またXMLデータベースと整形ツールを組み合わせて、DAM/CMS的なものを自前で組み上げることも不可能ではないでしょう。 いずれにせよ、「Content Management System (CMS, コンテンツ管理システム)」「Digital Asset Management (DAM, ディジタル資産管理)」などをキーワードに、業界内で情報収集されてはいかがでしょうか？ 参考URL：http://www.atmarkit.co.jp/aig/04biz/digitalasset … http://www.atmarkit.co.jp/aig/04biz/contentmanag …
もしかして 参考ＵＲＬのものをダウンロードしたのかな？ これを使う条件として オフィスＸＰがインストールされてないとダメのようですね。 ２０００のも、オフィスがインストールしてないと 使えないのでしょう。 他の人に送るときは、Ｅｘｃｅｌで保存するときに ＨＴＭＬ形式で保存したものを送ってあげれば Ｅｘｃｅｌがなくても 見れますよ。 参考URL：http://office.microsoft.com/japan/Downloads/2002 …
そもそも、 具体的な店名をタグの名前にしてしまっているのがおかしいですね。 以下のようにしては？ (もしくは、店名を電気店の属性にする) <電気店リスト> 　<電気店> 　　<店名>K&apos;電気</店名> 　</電気店> 　<電気店> 　　<店名>小島電気</店名> 　</電気店> </電気店リスト>
ご存知かもしれませんが、 とりあえず＠ITにあったリンク集を。。。 参考URL：http://www.atmarkit.co.jp/fxml/links/indexpage/x …
http://www.cityfujisawa.ne.jp/~yanai/xml/ こちらが良いと思います。 これだと簡単すぎますか？ もしかしたら知ってることしか書いてないかも・・
ここがとりあえず初心者向けなやさしい解説をしています。ごらん下さい。 http://www.cityfujisawa.ne.jp/~yanai/xml/intro/s … HTMLとXMLの大きな違いは、XMLはタグを自由に自分で好きなようにつけられるところです。HTMLの決ったタグに縛られることがないのです。じゃ～、HTMLのように表示しないんじゃない？って思いますよね？実は、好きなタグは、別にHTMLではどんなスタイルにするかという定義を自分でしてあげるんです。だから、HTMLとXMLとは全く別物というわけではありません。これは、HTMLでは表現しにくい部分や冗長な部分など簡素化できるメリットがあります。その他、いろいろな拡張がXMLでされています。 じっくり勉強してみてください。
保護は ＶＢのマクロのプロジェクト単位でかけます。 そのプロジェクトを選択し、右クリックでなんたらのプロジェクトプロパティを選択します。 それで 保護をクリックし、プロジェクトのロックに チェックを入れて、それからパスワードを入れてください。
Javaでxalanを利用する方法もありますね。 コマンドは以下のような感じになります。 % java org.apache.xalan.xslt.Process -in hello.xml -xsl hello.xsl -out out.html 参考URLのリンクにある「今日から始めるXSLT入門」が参考になるかと思います。 参考URL：http://xml.apache.org/,http://www.emergence.jp/ci/
ドキュメントやチュートリアルもネット上に豊富にありますし私も翔泳社の赤本(CSS)と青本(HTML)を一応持ってますがあまり見ませんね。 >ＣＳＳの本を買うにあたって、気をつけること、 またどんな本（？）が初心者にはわかりやすいか、 これはズバリあなたが読んで「これならわかりそうだ」と思う本を購入し勉強されることです。 急ぐ気持ちはわかりますがHTMLをまず覚えてからCSSを覚える…というように順を追う方がよいでしょう。 HTMLをだいたい覚えてレイアウトに懲りたくなってきたらCSSの学習を始めてよいと思います。 時にHTMLで書体を太字にする方法とCSSでする方法があるように重複するような内容がありますがHTMLを先に覚えておくと何故CSSでやるのがよいのか、など先にHTMLを覚えておくことでCSSの学習が促進されます。
使いやすいかわかりませんが、私は過去に eXeed と eXtyle を使用したことがあります。 まぁまぁだったかなぁ・・・（回答になってないかも） でも結局は自前で XML ファイルを書き出すように Access のVBA で開発しちゃいましたけど。 （さらに回答になってないかも）
<link href="***.css" rel="stylesheet" type="text/css" /> を<title>と<body>タグの間に入れればオッケーなのではないでしょうか！？
◎日本気象協会、ウェザーニュース http://www.jwa.or.jp/ 日本で気象データを提供している二大ベンダーは、気象協会とウェザーニュース社です。 しかし２社（法人）とも、この世界では唯二無比(?)のトップブランドであることから、 社内利用とはいえ、予報データを二次利用する契約となると、かなり高額の契約料になると予想されます。 ◎HBCウェザーセンター http://www.hbc.co.jp/weather/index.html 国内で唯一、独自の気象予報（オリジナルの観測気象データは気象庁ですが）をしているＴＶ局がＨＢＣ（北海道放送）で、局の気象予報士が作る独自のきめの細かい予報を配信することで、その世界では有名です。 組織が小さい分、契約などフレキシブルに対応してくれそうな気がします。 ◎国土環境株式会社 http://www.metocean.co.jp/weather/ もう一つ、独自予報を提供している会社です。 ここはまだあまり名前は知られていませんが、予報精度は悪くないと思います。
こんにちは。 直接回答ではないですが、nsgmlsのsxは使わないのですか？ ただSGML->XMLの変換だとしたら、あれでも結構つかえるかと。 参考URL：http://www.jclark.com/sp/
> これらすべてを合わせてDTDと呼べばいいのでしょうか？ DTDは"Document Type Definition"つまり文書型定義の略なので、文書型宣言にDTD(=文書型定義)が含まれるという認識で良いと思います。 > 文書型定義はたいてい一行で、それ以下の外部エンティティ参照のほうが行数が増えるのでしょうか？ これは、書き方しだいです。ただ、外部にDTDを記述しておいてそれを参照するだけならば、その場所には確かに短い記述だけになります。 > 整形式だとこの、文書型宣言、文書型定義と、XML宣言が省略できるということでしょうか。 まず、XML宣言については、検証済み文書であっても省略できます。ただし、UTF-8またはUTF-16以外のencodingを使う場合、省略しない方が良いです(厳密には省略できる場合もありますが、その方が無難)。 文書型宣言および文書型定義については、整形式であっても属性のデフォルト値やエンティティ宣言を記述する場合がありますが、それらが必要なければ省略できます。 参考URL：http://www.w3.org/TR/2000/REC-xml-20001006
私は参考URLのサイトを見ながら勉強していました。 また、便利そうなリンク集も見つけましたので載せておきますね 　↓　↓　↓ http://wap.ssi-n.com/pc/wap_link.html 参考URL：http://tenten.fastwave.gr.jp/wapinfo/wap.html,ht …
僕は， 10日でおぼえるXML入門教室って本をとりあえず一通り読みました。 そのあと，物足りないと思っていたXSLTに関して詳しい本などを買い揃えました。 入門としては上記の本で大丈夫だと思います。 一応この本だけでも仕事をこなせましたので。
#1の方のおっしゃられるとおり、これだけの内容では判断しにくいのですが、何かに必要なファイルがUTF-8でなければならないと仮定して話を進めます(もし違っていたら、補足して下さい)。 まずエンコーディングについて、ここでは、以下にあるような意味です。 http://www.atmarkit.co.jp/aig/01xml/encode.html もう少し分かりやすく要約すると、文字をコンピュータで扱えるようにコード(数値)を割り振ることです。 この割り当て方にはいくつかの種類があり、WindowsではShift_JISが、UNIX系ではEUCが一般的に使われます。UTF-8もその1つです。 例えばWindowsで普通にファイルを作ると、エンコーディングはShift_JISになっているので、それを変換する必要があります。 Windows 2000またはXPならば、メモ帳でファイルを開いてから、「名前を付けて保存」でUTF-8を選ぶことで変換できます(Windows NTはどうだったか忘れてしまいました)。 それ以外の場合、他のテキストエディタで変換する必要があります。例えばWindowsならば、参考URLにあるTeraPadで開いてから、「漢字/改行コード指定保存」でできます。 さらに、そのファイルがXMLファイルであって、先頭に以下のような記述がある場合、 <?xml version="1.0" encoding="Shift_JIS"?> 以下のように正しい記述に直す必要があります。 <?xml version="1.0" encoding="UTF-8"?> (参考) 本当は、UTF-8の場合は、encoding="UTF-8"を省略しても構いません 参考URL：http://www2s.biglobe.ne.jp/~t-susumu/toclip/
#1で回答した者です。 こちらで試した限りでは、接頭辞のあるなしに関係なく、taroh要素は、元々属していたnamespaceに属している結果となりました。 <taroh xmlns="http://child"> <age>10</age> </taroh> XSLTの仕様からもこれが正しい動作だと思います。 XTやXalanの最新版を使うと結果はどうなりますか？ ※ Javaのバージョンが1.4以上の場合、javaのオプションに以下のように指定しないと、標準で付属する方が使われてしまいます(参考URL)。 java -Djava.endorsed.dirs=d:\xml_tool\xalan-j_2_4_1\bin ... 参考URL：http://java.sun.com/j2se/1.4/ja/docs/ja/guide/st …
ネイティブXMLデータベースXindiceでの検索等のサンプルがありますが。 http://www.atmarkit.co.jp/fxml/tanpatsu/18xindic … 参考URL：http://www.atmarkit.co.jp/fxml/tanpatsu/18xindic …
XSLTスタイルシートで属性としてXPathが現れるような場合、&apos;のように記述しても、'に置き換えられてからXPathとして評価されてしまうので、以下のように記述してもダメです。 <xsl:value-of select="concat('&apos;aaa','&apos;'&apos;)"/> XPathが評価される段階では concat(''aaa',''') となってしまっているためです。 結局、シングルクォーテイションの中ではシングルクォーテイションを使うことはできないということが問題なのですから、以下のようにすればよいと思います。 <xsl:value-of select="concat(＆quot;'aaa＆quot;,＆quot;'＆quot;)"/> ※ 文字が勝手に置き換えられてしまうため、&を＆で表しています。コピーアンドペーストする場合は気を付けてください。 こうしておけば、XPathが評価される段階では concat("'aaa","'") となって正しく評価されるはずです。 Xalanでしか試していませんので、実装によってうまくいかないことがあったらごめんなさい。
なるほど。補足していただいた説明で、質問の意味は分かりました。 XSLTの仕様上は、xsl:stylesheetの子要素としてxsl:param要素を置いた場合、そこから後ろのxsl:templateでは参照できるはずです。 そこで、以下のような短いXSLTスタイルシートを用意して、 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> <xsl:param name="n" select="test"/> <xsl:template match="abc[@attr=$n]"> <xsl:value-of select="."/> </xsl:template> <xsl:template match="@* | text()"></xsl:template> </xsl:stylesheet> 以下のXMLファイルに適用してみたところ、 <data> <abc attr="test1">item1</abc> <abc attr="test">item2</abc> <abc attr="test2">item3</abc> </data> Xalanでは正しく item2 と出力されました。 しかしXTでは、何も出力されず、XTのオプションで n=test のようにパラメータを設定すると、正しく出力されました。 私の解釈では、Xalanの動作の方が正しいような気がします。 したがって、もしXTを使っているならば、この実装上の違いが原因かと思われます。 この場合、XTの作者に直してもらうか、Xalanなど別のXSLTプロセッサを使うしか、解決方法はないかもしれません。
SGML や XML は文書を構造化するための言語です。 HTML をご存知ならそれを考えると一番わかりやすいと思います。 ごく簡単にいうと、文書はタイトルや見出し、章、段落といった要素で、 「構造化」されているわけです。それをタグ付けにより明確にするのが HTML です。 XML はそれよりももっと汎用性のある構造化言語で、 構造を自分で決めることができます。 そのため、新しいデータの形式として認識されているわけです。 たとえば、社員名簿を XML 形式で作りたいとすると、 <社員名簿> <社員> <名前>だれだれ</名前> <部署>どこどこ</部署> <住所>...</住所> <電話>...</電話> </社員> <社員> <名前>... ... </社員> </社員名簿> のような形式が考えられるわけです。ここで <> でくくってある部分をタグといいます。 この形式をとることで、データを階層的に構造化させることができ、 扱いが楽になります。 以下に、初心者向けに XML, XHTML などを わかりやすく解説したウェブサイトを挙げておきます。 参考になれば幸いです。 参考URL：http://www.cityfujisawa.ne.jp/~yanai/xml/index.h …
XMLでデータ交換することには、利点と欠点があります。 利点としては、それがスタンダードであるということです。 XML化するということは、簡単に言えば、データを 標準フォーマットで記述する、ということです。 たとえば、仮に文書はWordで書くのが「標準」である、 と決まったとすると、Wordの文書は誰もが開けることになります。 このとき、ナイアガラとかマイナーな（？）ソフトで 書いた文書は、別の文書と統合できませんが、 Word形式に改めれば、誰の文書とでも統合が可能になります。 XML化するとは、このたとえで言う、Word形式にする、 ということと同じ事です。 つまり、重要なのは、XMLがスタンダードである （スタンダードたりえた）ということなのです。 また、同時に欠点もあります。 欠点としては、タグなどをやたらとつけなくては いけないので、データが冗長になること。それから、 仕様もツール類も「枯れて」いないので、いろいろ 覚えたり、試行錯誤するのが面倒なこと。 勉強するのに書籍代がかさむこと。 英語のドキュメントが読まなくちゃいけないケースが 増えること。結局プログラマに苦労のしわ寄せが来ている ような気がすること。その他いろいろ。 しかし、 欠点より利点が勝っているために、XMLWebサービスは 現在、騒がれているわけです。 基本的にWebサービスが想定しているのは、インターネットの ようなグローバルな環境で、データ交換を行うことです。 そのためには、XMLのようなスタンダードなフォーマットを 採用する必要があったわけです。 グローバルな環境を想定せずに、 単に「異なるプラットフォーム上のアプリケーションを統合する」 という視点からでは、XMLが採用されねばならない理由は とても小さくなります。 スタンダードなフォーマットでなくても管理できてしまう場合も 多いからです。 もっとも、そういう場合であってもXML化しておけば、 後々役立ちそうというホケンになるという考え方もありますが。
HTML TransitionalやXHTML 1.0ではform要素の内容としてブロック要素とインライン要素両方置けますが、HTML StrictやXHTML 1.1ではインライン要素を置けません。(img要素はインライン要素) Strictを指定してたりしませんか？ 一般的な話として、トラブルを避けるため、なるべくStrictでも通用するように記述することをお奨めします。div要素の中にimg要素を置くだけですので。 見当違いな回答だったら、すみません。 参考URL：http://validator.w3.org/
Adobeのサイトに「Adobe SVGゾーン」ていうのがありますよ。 ここに公開に必要な情報は全てあると思います。 参考URL：http://www.adobe.co.jp/svg/main.html
> これで、ブラウザで確認するとテキストノードに［］がついて表示されて > しまいます。 それは、以下の行に原因があるのでしょう。 > if(nodeScan.hasChildNodes()) al.add(scanEach >　　　　　　　　　(nodeScan.getChildNodes())) ; scanEach() の返り値は ArrayList ですから、ArrayList に ArrayList を追加していることになります。 ArrayList#addAll() メソッドを使いましょう。 if(nodeScan.hasChildNodes()) { 　　al.addAll(scanEach(nodeScan.getChildNodes())); } ＃ 確認してません　(^^;
デザイナーですのでwebコンテンツ制作の専門家という視点でお答えします。 >・他端末対応に関して CocoonやBayServer(旧:BXS)はご存知ですか?これらはXML文書を PDFやSVG、XHTMLなどでプレゼンテーションすることができます。 とりあえずXMLで何ができるか試したいというのであればおすすめできます。 >Webページ作成だけに限れば、XSLなどWebデザイナーが覚えるかというと敷居が高いような気がしますし、 AdobeのinDesignではWYSWYGでXSLが作成できます。またXMLのデータを XSLに関連づけし任意のデータに吐き出すことが可能です。 これは印刷・PDF・WEBとデータをXMLで共有できることを意味します。 ものすごく便利で可能性を秘めたものですが、印刷業界での シェアにおいて従来のQuarkXpressが不動の地位にあること、 市販の参考書にXMLについて書かれたページがなかったりする ところを見ると関心が低いのかもしれません。 XMLだけではなくXMLベースの他のアプリケーション(SMIL,SVG)も 注目されてはいかがでしょうか。 個人で使用できるXMLの利用としては定型的なフォーマットをXSLで 作成し、データをXMLで作成することです。 JavaのXalanなどを使用してXMLとXSLからHTMLで出力させることが 可能です。
回答というよりもアドバイスですが、おそらく > replaceChildメソッドだと、「既存のノード」しか > 置き換えれなくて文字列が指定できません。 というところが勘違いの元で、要素の内容のテキストは、その要素ノードの子供にあたるテキストノードとして(DOMでは)表されます。試しに、テキストだけを内容とする要素ノードに対してgetFirstChild()を呼び出してみると、そのテキストノードが得られるはずです。 したがって、No.1の方が回答なさっているようにそのテキストノードを別のテキストノードで置き換えてもよいですし、replaceChildにこだわらなければ、そのテキストノードに対して直接CharacterData#setData()を使ってテキストの文字列だけ書き換えてもよいです。 この手の話は、XML自体の仕様というよりはDOMの仕様なので、参考URLなどでDOMの概念的なことだけでも抑えておくことをお奨めします。 参考URL：http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-2 …
一番楽なのは、Internet Explorerを6にバージョンアップすることです。 それ以外の方法として、代表的な方法を紹介しておきます。いずれも無料です。 (1) Microsoftのparserにこだわる場合 http://msdn.microsoft.com/xml/ のページの右上"MSXML 3.0 SP 2"というのがあるので、そこからたどってダウンロード・インストールして下さい。(これを書いている時点での話ですので、もしページ構成が変わっていたら、"MSXML Parser"などで検索してみて下さい。 (2) Javaの実行環境が整っている(もしくは整えるのが面倒でない)場合 http://xml.apache.org/xalan-j/index.html からたどって、Xalanを使いましょう。 代わりに、http://www.blnz.com/xt/index.html にあるXTを使ってもよいと思います。 IE6をインストールするか(1)の方法をとる場合、ブラウザで直接表示できるので、プログラマでなければ使いやすいと感じるかもしれません。ご質問の主旨に一番合いそうですし。しかし、IE6のインストールもMSXML 3.0のインストールも、トラブルが起こらない保証はないので、自己責任でお願いします。 XalanやXTを使う場合には、直接表示するのではなく、HTMLファイルに変換して、それをブラウザで表示します。したがって、ブラウザが今のままでも問題なく表示できますが、変換する手間があります。また、Javaの実行環境を整える必要があります。 あなたの好みや状況によって、選んで下さい。
#1です。 ＞この方法だと、例えば「ルート要素の２番目の子ノードのそのまた子ノードの情報を全て取り出す」とか指定したりできるのでしょうか？？ Beanにしているから簡単にできます。 Beanでしなければ、毎回、長々とコーディングしなければならなくなり、後から見れば、何をさせているかわからなくなります。 JSPでBeanを使う場合、ディレクティブの次に、 <jsp:useBean id="lbn" class="jp.co.sei.system.izumi.bean_list" scope="page" /> のような、Beanが使えるように記述を行います。 この例の場合、簡単に言えば、jp.co.sei.system.izumi.bean_listを、このJSPでは、lbnと省略？させる事を唄っています。 で、、 DOMParser prs = new DOMParser(); FileReader fr = new FileReader(application.getRealPath(xml_path)); BufferedReader br = new BufferedReader(fr); InputSource src = new InputSource(br); prs.parse(src); Document objDoc = prs.getDocument(); と、Rootになる、Documentオブジェクトだけを先にJSPに処理させておけば、 後は、Beanを呼び出して、「何階層目の、Nodeのさらに次のNodeの情報がほしい」と簡潔に指定するようにします。 例えば、 <?xml version="1.0" encoding="Shift_JIS"?> <listsadm> 　　<member id="1"> 　　　　<subject>システムXXXX</subject> 　　　　<path>/section/sysgi/listsinf.xml</path> 　　　　<cmt>XXXX技術部　CSVファイルリスト</cmt> 　　　　<usr>listsadm</usr> 　　　　<datapath>D:/WEBDATA/zikkenn</datapath> 　　</member> 　　<member id="2"> 　　　　<subject>XXXXXグループ</subject> 　　　　<path>/section/zikai/listsinf.xml</path> (1)→　　<cmt>TEST</cmt> 　　　　<usr>listsadm</usr> 　　　　<datapath>D:/WEBDATA/zikkenn</datapath> 　　</member> </listsadm> のようなファイルから、(1)のTESTを呼び出すには、 Beanの public Node xmlObjNod2(Document objDoc, int intItem0, int intItem1){ Node objNod2 = xmlClnNod2(objDoc, intItem0).item(intItem1); return objNod2; } をJSPから、 lbn.nmlObjNod2(objDoc,1,2).getValue() （ご存知とは思いますが、カウントは０から始まります。） で、StringでTESTを返してきますよ。 全てほしいなら、 for(int n=0, n<lbn.xmlClnNod2(objDoc, iln).getLength(); n++ ){ out.println(lbn.nmlObjNod2(objDoc,1,n).getValue()); } のようにすれば、lbn.xmlClnNod2がNodeListを返すように成っているので、このgetlength()分くるくる回せば、取得できますよ。
通常は、Javaの環境が問題なくインストールできていれば、Windows 98でも問題なく使えるはずだと思います(Windows 98だからJAXPが使えないという事態に遭遇したことはありません)ので、"XML Pack"をダウンロードして使えばよいと思います。 以下は、参考のための蛇足です。 JAXPは、parserの名前ではなく、JavaからXMLにアクセスするためのインターフェイスにすぎません。つまり、JAXPをimplementしているparserならば、差し替えて使うことができます。 JAXPに準拠したparserは、Apacheの最新のXercesを使った方が良いと思います。http://xml.apache.org/xerces2-j/ からだどれるので、最新版(現時点ではXerces-J-bin.2.2.1.zip, 4.7MB)をダウンロードして展開します。 ちなみに、参照URLからだと、他とパックになっていない旧版のparserが入手できますが、JAXP 1.0.1をimplementしたもののようです。もし、Sunのページから入手することにこだわって、余計なパックになっていないものがよければ、そちらをどうぞ。 また、No.1の方が回答されているように、Java SDK 1.4を入れると、JAXPに準拠したparserが標準で入っています。ただ私は、妙なバグっぽい動作を見つけてしまって、それ以来信用できずに、1.4を使っているにもかかわらずXercesをダウンロードして使っています。 参考URL：http://java.sun.com/xml/archive.html
No.1の補足というか訂正です。 userconfig.xml(userconfig-ja.xml)で指定された相対パスは、このファイルの位置を基準とするのではなく、current directoryを基準とするようです。訂正します。 この仕組みでは扱いにくい気がするので、絶対パスで指定しておいた方が良いかもしれません。
答えは「Yes」と「No」です：） XMLファイルをHTMLみたいに表示する、ということは、一般的には、XMLファイルを元にHTMLファイルに変換、変更するということです。　この変換の手段をXSLT（eXtensible Stylesheet Language Transformation)といいます。 ここでは、とくに"Transformation"（変換）がポイントとなります。 この「変換」を何を用いって行うかが、ご質問だと思います。　通常は、"XSLTプロセッサー"の類のソフトを使います（例：XMLをプロセスしてHTML変換する）。　Xalanはそのなかの一ソフトです。　他にもプロセッサーはありますが、コマンドライン処理でいいのか、それともプログラム言語を使っておこなうのか（Javaなど）によって、どのプロセッサーがいいのかが決まってきます（ちなみに、英語のサイトではありますが、プロセッサー一覧がリストされているサイトを参考URLにつけておきました）。 ただし、この「変換処理」は、通常２ステップで行います。　(1)XMLを読み込み、各パーツに区分けする（parsing: パーシング）、(2)読み組んだものを変換する（processor: プロセッサー）。　ですので、このパーシングする「パーサー」というソフトも必用となります。　Javaですと一般的には、Xercesというものが使われます。 最後に、JAXPの位置づけですが、今説明したとおり、パーサーもプロセッサーも何種類かあり、必ずしも同じ構文を使ってプログラムできるわけではありません（バージョンによって機能も違います）。　ただ、プログラマーとしては、パーサーが変わったから構文も変えなくてはいけないとなると、大変ですよね。　そこで、JAXPは、下のレベルで実装されているパーサー及びプロセッサーの上に「かぶさる」APIで、常に同じAPIのインターフェースをプログラマーに提供します。ようするに、プログラムを変えなくても、パーサーとプロセッサーをプラグ・アンド・プレイできるということです（対象となるソフトは、JAXPと互換性がある必用があります）。 長くなりましたが、「Xalan等は必用なくHTMLみたいに表示することは可能か」ですが、Javaなどをご利用になるのでしたら、必要ですね。 ただし、今ですと、IEの6以降は、パーサーとプロセッサー機能を組み込んでいるので、XML文にXSLを指定すれば、変換もしてくれます（IEの5くらいから一部サポートがありましたが、チョット不安定です）。　ちなみに、IEもパーサーが必要で、XML Parser 3.0というのが一緒に配布されています。 Hope that helps. -mp 参考URL：http://www.xmlsoftware.com/xslt.html
沢山あります。で、どれがいいのかは自分で使ってみるしかないですね。無料ですし（笑 http://www.so-net.ne.jp/download/win/net/htmledi … 参考URL：http://www.so-net.ne.jp/download/win/net/htmledi …
No.2で回答した者です。 とりあえず、java.net.MalformedURLException: no protocol: book.xslとメッセージが出ているのだから、XSLTの書き方を疑うよりも、URL(つまりパス)を疑うべきだと思います。 以下の実験をしてみたところ、同じエラーが出ました。 (1) 問題なく動作するXSLTスタイルシートを用意 (2) 日本語の名前の付いたフォルダを作り、そこにファイルを入れてみる (3) Xalanを呼び出す 日本語の名前の付いたフォルダに直接含まれていなくても、パスの途中に日本語の名前のフォルダがある(「デスクトップ」とか)とエラーになるようです。 したがって、パスの途中に日本語の名前のフォルダがないかどうか、チェックしてみて下さい。 ちなみに私は、日本語名や空白を含んだ名前のフォルダがパスに含まれない位置に、ファイルやツールをなるべく置くようにしています。コンピュータを使う場合の心がけのようなものです。
まず、こういった類の質問をする場合は、XML文書だけでなく、自分で記述してみたスキーマを書くのが礼儀だと思いますよ。 自分でどこまで努力してみたかを書かないと、自分で十分な努力をせずに「学校の課題の解き方を教えて下さい」と全部人に頼ってしまう輩と同類に見られてしまって、皆さんに答えてもらえない可能性もあります。答える人に義務はありませんので。 さて、RELAX NGについては、"RELAX NG Tutorial"を読んだ程度なのですが、以下のスキーマ(インデントのために全角スペースを使っています)でうまくvalidationできるようでした。 validationに使用したツールはJingです。 もしうまくいかないようでしたら、validationに使用しているツールを書いていただかないと、何とも答えようがありません。 <element name="data" xmlns="http://relaxng.org/ns/structure/1.0"> 　　<choice> 　　　　<group> 　　　　　　<element name="choice"> 　　　　　　　　<choice> 　　　　　　　　　　<value>1</value> 　　　　　　　　</choice> 　　　　　　</element> 　　　　　　<element name="dataname"> 　　　　　　　　<element name="data_a"> 　　　　　　　　　　<text/> 　　　　　　　　</element> 　　　　　　　　<element name="data_b"> 　　　　　　　　　　<text/> 　　　　　　　　</element> 　　　　　　　　<attribute name="cd"> 　　　　　　　　　　<text/> 　　　　　　　　</attribute> 　　　　　　</element> 　　　　</group> 　　　　<group> 　　　　　　<element name="choice"> 　　　　　　　　<choice> 　　　　　　　　　　<value>2</value> 　　　　　　　　</choice> 　　　　　　</element> 　　　　　　<element name="dataname"> 　　　　　　　　<optional> 　　　　　　　　　　<element name="data_a"> 　　　　　　　　　　　　<text/> 　　　　　　　　　　</element> 　　　　　　　　</optional> 　　　　　　　　<element name="data_b"> 　　　　　　　　　　<text/> 　　　　　　　　</element> 　　　　　　　　<attribute name="cd"> 　　　　　　　　　　<text/> 　　　　　　　　</attribute> 　　　　　　</element> 　　　　</group> 　　</choice> </element> 参考URL：http://www.oasis-open.org/committees/relax-ng/tu …
日経ソフトウエアを購読なさると具体的事例があります。 http://software.nikkeibp.co.jp/software/contents … あとは少し難しいのですが、この辺でしょう。 http://www.atmarkit.co.jp/fdotnet/special/wsdk01 …
XML→PDF出力は私もやったことがあります。 いちばん簡単なのはJakartaにあるCocoon2を使うことです。 これが出た手の頃、私は英文のドキュメントを読みながらサンプルをいじって理解しました。 Cocoon2というのは単なるservetでして、これにXMLとXSLTを食わせるとHTMLでもPDFでもラスタ画像でもなんでも変換してくれます。 SVGでグラフも簡単に描けます。 もちろんノーコーディングでです。 最近日本語の書籍でこの解説書が出ました。ご参考までにどうぞ。 http://www.src-j.com/book_no/173.htm あと、Cocoon2に含まれているFOPも単独で使うことができます。PDF生成しか考えていないならまずこのサンプルをコマンドラインで使って体感すると便利さがわかります。 ただしFOPには一つ問題があります。 Javaの中にFOPシェルを実行できるようにするとになり、バックエンドで動作しますので、PDF生成タイミングを検知できません。（勿論PDFをただ作ってどこかのディレクトリに置くだけが目的ならいいのですが） 次のように実行します。 Runtime rt = Runtime.getRuntime(); Process proc = rt.("XX.sh")　←　XX.shの中はFOP.shの中を適宜書換えてパスが通ったところに置いてください。 もしこれで上手く生成できない場合はまたご質問ください。 参考URL：http://www.src-j.com/book_no/173.htm
XML Schemaには、"Schema for Schemas"というものがあります。これはまさに、XML Schema文書自体がXML Schemaとして正しいかどうかをvalidationするためのスキーマ文書です。 これは、仕様書(XML Schema Part 1)にも添付されてますが、 http://www.w3.org/2001/XMLSchema.xsd にあります。 これを使って、スキーマ文書のxsd:schema要素で xsi:schemaLocation="http://www.w3.org/2001/XMLSchema http://www.w3.org/2001/XMLSchema.xsd" とすれば良いはずです。 しかし、試してみたところ、Xerces-Java 2.2.0では、エラーが出て失敗しました。これは、"Schema for Schemas"が通常のスキーマ文書と異なって自己言及的であるためで、Xercesは特別に扱ってくれないようです。 対処方法としては、一応以下の2通りでしょうか。 (1) Xerces以外で探す W3CのXSVというXML Schema Validatorがあるのですが、http://www.w3.org/2001/03/webdata/xsvにあるウェブ版で試してみたところ、ちゃんとうまくvaidationしてくれました。ローカル版もあります(参考URLからたどって下さい)。 (2) XMLSchema.xsdをローカルにコピーして変更を加えたものでvalidationする anySimpleTypeから派生している型の宣言をコメントアウトすると、うまくvalidationできるようになりました。ちなみに、XMLSchema.dtdを探しにいってしまうので、DOCTYPE宣言もコメントアウトしておいた方が楽です。 Xercesで"Schema for Schemas"を使ったvalidationをするモードみたいなものがきっとあるはずと思っていろいろ探したことがあったのですが、見つけることができていません。 参考URL：http://www.w3.org/XML/Schema
元の質問とあまり関係なくなっちゃいますが。 私の理解では、あの引用部分は、entityの解決のために読み込まないという意味ではなく、external DTD subsetを読み込むことが必須でないことを表していると思って引用しました。たぶん段落の前後でentityが盛んに出てくるからだと思いますが、external DTD subsetもentityなので。 external DTD subsetが読み込まれることが必須でないから、その結果external DTD subsetに記述されたデフォルト値は認識されないかもしれない、という意味だったのですが、分かりにくかったでしょうか。 2.9 Standalone Document Declarationのところを引用しても良かったのですが、説明が長くなりそうだったので、すみません。 ちなみに、XML SchemaをDTDと組み合わせることができることに触れたのは、DTDと組み合わせた場合にXML Schemaがexternal DTD subsetみたいに扱われるとみなせば、一応整合性がとれていると言えるかも、という意味でもあります。 参考URL：http://www.w3.org/TR/2000/REC-xml-20001006
エディタであれば基本的になんでもよいですが、UTF8で編集できないと問題が発生することがあります。 UTF8対応となるとどれでもよしというわけには行かなくなります。 DreamWeaverMXやXMLSpyは大丈夫だったように思いますが、XSLTやSVGの編集は必要ないのでしょうか？ その場合は上記のようなツールがあると便利でしょう。 Schemaに対応しているのはXMLSpyの方だったと思います。
Webサービスが今実現できているかどうかですが、国内では一部の系列企業間以外ではまだ利用されていません。 また殆どがJavaでして.NETによるものは大規模システムで利用されることは今後も少ないと思います。 .NETのサンプルには私は興味がないのですが、技術評論者のJAVAPressやIDGのJavaWorldにはAXISによるものやWSTKやWebSphereによるものが載っています。ただしSoapにおいてSignatureはかかりますが、Encryptionはほぼ不可能です。XKMSは当分実用にはならないのでこれでビジネストランザクションするにはSSLを使うしかありません。(現状では残念ながら) 私はいじったことはありませんが、.NETに関しての解説記事は日経BP別冊「Webサービス完全ガイド」があります。 ただし、書籍情報は基本的に古いのでMSのサイトのサンプル(URLは探せば分るでしょう)を使った方がよいのではないでしょうか？
先ほど書くのを忘れましたが、前準備が必要です。 jre（ＪＡＶＡ仮想マシン）が必要です。インストールしましたか？ http://java.sun.com/j2se/1.4.1/ja/download.html から　jreをダウンロードし、インストールしてください。それから、環境変数PATHの記述も必要です。 http://java.sun.com/j2se/1.4/ja/install-windows. … では、がんばってください。分からない時、またきいてください。 参考URL：http://www.webconnection.jp/Technical/002/
>XMLを用いてWebページを作るということができるのでしょうか？ 出来ます。 その１）XHTMLで記述する。 XHTMLとは、HTMLをXML構文で再定義したもの、すなわちXMLです。 XHTMLで記述すれば、XMLを用いてWebページを作ることができます。 XHTMLを使用しているページですが、＃１の方も書かれていますが、 以下のページがそうです。 http://www.xmlmaster.org/ その２）XSLTを使用する。 一般的なXMLデータは、ブラウザに表示を行うためのスタイル情報 を持っていませんので、HTMLのようにブラウザに表示することは できません。 ただ、XSLTといわれる、やはりXMLで記述された言語を使用して、 元のXMLデータとXSLTで記述したスタイル情報を掛け合わすことで HTMLを生成し、ブラウザで表示することができます。 こんなとこでしょうか？
最後の行が <xsl:stylesheet> になってます。正しくは </xsl:stylesheet> ですよね(^^)。
XSLではなくXLSとありますので、DBとXLSがまずあって、データをXMLとして他の書類形式に変換ということでよいのでしょうか。 とりあえずXMLとXSLが揃えばXML→HTMLへはAdobeのinDesignはもちろんXalanを使う方法も可能ですがXLSをレイアウトのひな形としてwyswygで編集するのであればAdobeのinDesignしかちょっと思い浮かびません。 実際の作業はXSLのレイアウトをひな形として作成し、ひな形内の矩形などのオブジェクトにXMLの要素を関連づけデータを流し込むような形になります。 私が実際に試したのは単なる整形式のXMLですがたぶんいけるはずです。 他にDreamWeaverなどもXMLからhtmlにできるのですがver4だとCDATAとしてしか要素を読み込めませんでした。MXではもっと柔軟になっているのかもしれませんが試していないのでわかりません。
　まず、XMLって何かということは知ってます？ 　知らないのであれば「XML 入門」でGOO検索が第一歩かと…。 　補足として、XMLは基本的にはテキストファイルなので、編集、保存するのに 特殊なツールはなくてもOKです。（ノートパッドで十分可能） 　あとは、XMLで具体的に何をしたいかですが…。
簡単なものは@ITに紹介されていましたね。 他にPostgreとかIBM製のものなどもあったように思いますが 忘れてしまいました。とりあえず参考にしてみてください。 SQL Server 2000を利用して、XML文書を入出力する方法 http://www.atmarkit.co.jp/fxml/tanpatsu/15mssql/ … ネイティブXMLデータベース　Xindice http://www.atmarkit.co.jp/fxml/tanpatsu/18xindic …
私も初心者だったころ、本には手ごろなものがなく困っていました。 そこで重宝したのが、工学研究者さんの「ゲーム作りで学ぶＸＭＬ入門」という本です。 たいしたゲームではないんですが、解説が超初心者向きで大変分かりやすかったです。その他の本は一般の業務で使う方法とかが書いてあり、素人の私には分かりませんでした。 しかし、ＸＳＬという知識を身につけると面白いホームページとかが自分で作れるようになり、勉強も進みます。そうなったら、ある程度本格的な本を呼んでも身につけることが出来るようになります。 あと、ＳＯＦＴＢＡＮＫ社の「やさしいＸＭＬ（高橋麻奈）」という本も分かりやすいです。やっていて楽しくはないですが。。。 では、がんばってください。 参考URL：http://www.amazon.co.jp/exec/obidos/ASIN/4886478 …
私もXalanは使ってないので確認はしていませんが、ご参考まで。 http://hp.vector.co.jp/authors/VA027994/igapyon/ … 参考URL：http://hp.vector.co.jp/authors/VA027994/igapyon/ …
質問の中で <!DOCTYPE html [ <!ENTITY nbsp " "> ]> (document element typeがhtml)と書かれているため、をスタイルシート内で使いたいのか、それとも出力される文書の中にentityの宣言を含めたいのか、よく分からないのですが。 もしスタイルシートの中で使いたいだけならば、FlossenEngelさんの回答のとおりで解決するはず(べき)です。XTではスタイルシートの中でを使えるようになることを確認できました。本当に正しい書き方をしているのにパーサがエラーを吐くならば、他のパーサを使って下さいとしか... ただ、XSLTでは(正確な書き方をすればXPathのデータモデルでは)、entity referenceの形であっても、参照される文字を入れたのとまったく同等に扱われ、entity referenceを使う代わりに半角スペースを入れてもまったく同等なので、あまり意味がないです。もちろん、他のentity referenceを考えていて、この質問では簡単のためにnbspでの例を使ったならば、私の指摘はまったくのおせっかいですが。
おそらく理由もちゃんと知った方が良いと思うので、他の方の回答の補足のような形になってしまいますが。 /は、あなたが言う所の「トップレベルのエレメント」にではなく、その上に仮想的に存在する「ルートノード」にマッチします。 したがって、取得したい要素は、このルートノードの子ノードということになります。 この理屈を理解いただければ、FlossenEngelさんの回答にあるように一度ルートノードにマッチしたxsl:templateの中でその子ノードを取得しても良いですし、以下のようにxsl:templateのmatchを変更してもOKです。 <xsl:template match="/*"> <xsl:value-of select="name()"/> </xsl:template> ちなみに、XSLTでぶつかる問題はXPathを理解しておけば解決することが多いと思いますので、今後ぶつかる問題に対処できるように、XPathについて勉強しておくことをお奨めします。 参考URL：http://www.w3.org/TR/1999/REC-xpath-19991116
PHPのような直接記述では無理そうですが、CGIでなら 実現できるようです。 下記のリンクが参考になれば…。 参考URL：http://www3.tky.3web.ne.jp/~kja8ie92/develop/svg …
MSXML以外はどうだか判りませんが、タブコードは で出力できます。 <xsl:text> </xsl:text><xsl:value-of select="～"/> とか。
参考URLの中をいろいろ見ればきっと見つかると思います。 「XML eXpert eXchange」 http://www.atmarkit.co.jp/fxml/ 参考URL：http://www.atmarkit.co.jp/fxml/
すみません、 >XSLのファイル内でJavaScriptを記述し というので勘違いしていました。 例示されているのは単にタイトルを出力しているだけなんですね(^^; JavaScriptでXMLの要素を取得操作したいのであればDOMしかないでしょう。単純な表示ならその必要はないでしょう(単に埋め込むだけ)。
　アドバイスというより雑談ですが(^^;; 　それは単に間違えただけです。すいません…
やっていないので想像の域をでませんがいくつか案を、、 1　apacheのaliasのディレクトリに登録したら.htaccessによる認証が 使えないか 2　xml→xsltによるhtml変換を行う前にservletで認証を行う
XML->HTMLの変換だけならXSLTがあればいいのでしょうから http://xmlxslt.sourceforge.net/ が使えるのではないでしょうか？ ほかにもlibxmlへのラッパもあるようです。これならjakartaさんの示したXercesよりは入っている可能性が高そうですが・・・ もっとも文字コードのことを考えたらXerces+ICU(またはXML4C)とかを用意できる環境を探したほうがいいんでしょうけど。
XMLとJava関係のAPIは頻繁に更新されるため、BXSは4月にアップデートされています。 ためしていなのではっきりとしたことはわかりませんが、バージョンがサンブルと同一でないとうまく動作しないかも知れませんね。
Xmethods について比較的わかりやすく説明されているページがありましたので、一度ご覧になってみてください。 「リモート・ストレージ・サービス － インターネット上のストレージをWebサービスとして使う」 参考URL：http://www.atmarkit.co.jp/fdotnet/wwebserv/wwebs …
同じApache XMLにあるFOP(参考URL)ならば、コマンドラインでXMLをXSLを使ってPDFを出力することが可能です。 ただし、日本語フォントを使いたい場合には、設定をしなければならなかったはずで、ドキュメントに方法が書いてあったと思います。とりあえず試してみるだけならば、まずは英数字のみを含む文書で、試してみて下さい。 Cocoonを使って...という意味でしたら、申し訳ありませんが分かりません。 参考URL：http://xml.apache.org/fop/index.html
<xsl:stylesheet xmlns:xsl="http://www.w3.org/TR/WD-xsl"> とありますが、これはバージョンが古いから"{","}"が使えないだけかもしれませんね。 そのままのバージョンで使うなら <xsl:element name="a"> <xsl:attribute name="href"><xsl:value-of select="@href" /></xsl:attribute> こちら </xsl:element> などとするといいようです。 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"> 私が使っているバージョンなら"{","}"は使えていますよ。
@ITとかはご存知でしょうか？ http://www.atmarkit.co.jp/ 「XMLの注目される特徴とは何か？」 http://www.atmarkit.co.jp/fxml/rensai/rexml01/re … 参考URL：http://www.atmarkit.co.jp/fxml/rensai/rexml01/re …
わりと陥りやすい問題なので、もうどこかで探して解決しているかもしれませんが一応。 http://www.w3.org/TR/WD-xsl を使っているところが間違いです。 http://www.w3.org/1999/XSL/Transform に置き換えて下さい。xsl:variableを使えるようになります。 [以下、経緯を簡単に] working draftの段階で、Internet Explorerが標準化途中のものを実装したので、そのIE独自版を使いたい場合には"http://www.w3.org/TR/WD-xsl"とします。古い本などを参考にすると、これを使った例しか載っていないかもしれませんね。 最終的な仕様に基づくならば"http://www.w3.org/1999/XSL/Transform"を使わなくてはなりません。今となってはIE独自版を使うメリットはありません。 あと、IEは確かに簡単ですが、怪しげな部分もあるので(偏見？)、これからさらにいろいろ試してみる際には、XTやXalanといった類でも試してみることをお奨めします。 ついでに、何を使っているかを書いた方が回答しやすいですよ。今回のアドバイスも、IE6でないと、少し面倒な作業が必要になります。
XMLはそれ自体はウェブページを作るためのものではないので、あのような回答になりました。 具体的に、ウェブページを作るためにどのようにXMLを使おうと考えていらっしゃるのでしょうか。私には先の回答に載せた類の使い方しか思いつかないのですが。その辺りを詳しく書いていただかないと、どなたも回答できないと思います。
「初歩の初歩」のページにはおそらくDOMのDocumentオブジェクトを得る所までは書いてあったでしょうから、後はDOMについて勉強すればよいのでは？ DOMというキーワードで検索すれば、いろいろサイトが見つかる気がしますがどうでしょう。また、Internet Explorerに関してならば、Microsoftのページを探せば例があるはずです。 見当違いのアドバイスだったら申し訳ないですが。
とりあえず、どんな出力がお望みかよく分からないのですが、 ice_cream/*[position() > last() - 3] というようなXPathを使えば、最後の3つを選択することができると思うのですが。 出力結果も書いた方が、的確な回答を得やすいと思います。 参考URL：http://www.w3.org/TR/1999/REC-xpath-19991116
こんにちわ。 もう1ヶ月以上たっているから、遅いかもしれませんが 現在私も同じような勉強をしていて、難しいことはわからないけど 質問内容を見て「私もこのレベル！！」と思ったので参加してみます。 まず、XMLってそのままではブラウザーに表示できないようです。 HTMLと違って表示機能はもっていなくて、質問に書かれていたものは 単なるデータのみのようですね。 　他に方法はたくさんあるのかもしれませんが、私の勉強したところによると XMLをブラウザーに表示する為には、他にXSLと言われるスタイルシートを 用意して、XML（データ）＋XSL（スタイルシート）の２ファイル（この場合は） を元に、XSLT(extensible Stylesheet Language Transformation)と呼ばれる 変換ツールを使って、HTMLや他の形式に変換して初めて表示できる （スタイルシートによっては、音声として聞ける）状態のファイルに なるようです。 　このXSLTというツールは、無料でダウンロードできるものが多数あるようです。 ちなみに私はApache（アパッチ）のサイトからダウンロードしました。 質問のXMLには、以下の２行と、下の１行をかぶせて、 <?xml version="1.0" encoding="Shift_JIS" ?> <PAGE> ・・・・・・・・・・・・・・・・・・・・・・ </PAGE> 別に用意するスタイルシートは以下のような感じに作るのかなぁ。。。。 <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/ 1999/XSL/Transform" version="1.0"> <xsl:output method="html" encoding="Shift_JIS"/> <xsl:template match="/"> <xsl:apply-templates/> </xsl:template> <xsl:template match="PAGE"> <HTML> <BODY> <xsl:apply-templates/> </BODY> </HTML> </xsl:template> <xsl:template match="cars"> <xsl:apply-templates/> </xsl:template> <xsl:template match="car"> <xsl:value-of select="name"/><BR/> <xsl:value-of select="price"/><BR/> </xsl:template> </xsl:stylesheet> そして、XSLTツールで変換するとHTMLができると思いますよ。 http://www.atmarkit.co.jp/fxml/tanpatsu/xslt/xsl … には、XMLをHTMLに変換する方法について、サンプルをもとにやり方とか 書かれています。結構参考になるので覗いてみてはいかがですか？ 参考URL：http://www.atmarkit.co.jp/fxml/tanpatsu/xslt/xsl …
> 「a.dtdというファイルからではなく、文字列としてDTDの定義を > 　保持しておき、文字列とXMLデータとの妥当性をチェックする」 質問は、ばっちり理解しましたが、回答できるだけの力量がありません　(^^; 「何か知っていることがあれば」とのことなので、できる範囲で。 参考URLのひとつめ apache プロジェクトのマニュアルから SAXParser のページを見ると AbstractSAXParser クラスの startDTD() というメソッドがオーバーライドされて います。 こいつには XMLLocator というのを受け取ります（参考URLのふたつめ）。 それを適切に置き換えれば、何か出来そうな気が… 後、DTDGrammar というクラスもちょっと気になります。 ＃ と言いつつ、マニュアルをあさってみましたが、いまいち有効な手段が見当たりません　m(_ _)m 参考URL：http://xml.apache.org/xerces2-j/javadocs/xerces2 …
表示させたくない<name>タグの部分は、<xsl:template match="name"/>という具合に閉じてしまうだけでできますよ。 <xsl:stylesheet> <xsl:template match="/"> <html> <xsl:apply-templates /> </html> </xsl:template> <xsl:template match="name"/> <xsl:template match="age"> <body> <xsl:value-of select="."/> </body> </xsl:template> </xsl:stylesheet>
マッチしたものを全部出力すればいいだけなら、for-each とか使わなくても、 apply-templates を繰り返していけばいいと思います。例えば次のように。 というか、match したものに対して、その中でいろいろ繰り返すのが for-each なので、template の中に for-each が出てくるのが基本です。 <?xml version="1.0" encoding="shift_jis"?> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" > <xsl:template match="/"> <xsl:apply-templates/> </xsl:template> <xsl:template match="root"> <html><xsl:apply-templates /></html> </xsl:template> <xsl:template match="first"> <xsl:apply-templates/> !!!!<br/> </xsl:template> <xsl:template match="second1"> <xsl:value-of select="."/><br/> </xsl:template> <xsl:template match="second2"> <xsl:value-of select="."/><br/> </xsl:template> <xsl:template match="third1"> <xsl:apply-templates/> ----<br/> </xsl:template> <xsl:template match="fourth1"> <xsl:value-of select="."/><br/> </xsl:template> <xsl:template match="fourth2"> <xsl:value-of select="."/><br/> </xsl:template> </xsl:stylesheet>
私もあまり詳しくはないんですが、以下のような感じになると思います。 DocumentBuilder の parse() メソッドではなく、newDocument() メソッドを使って DOM オブジェクトのインスタンスを作成して、それに Element を追加してゆく、という感じ。 DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); DocumentBuilder builder = factory.newDocumentBuilder(); Document document = builder.newDocument(); Element root = (Element) document.createElement("root"); document.appendChild(root); Element title = (Element) document.createElement("title"); root.appendChild(title); 参考URLに、本家 SUN の JAXP のチュートリアルのページを紹介しておきます。 DOM は Part３ ですね。頑張って読むだけの価値はあると思いますよ。 参考URL：http://java.sun.com/xml/jaxp/dist/1.1/docs/tutor …
一般的にいうウォークスルー関係のコンテンツのことですね。 web3D関係の書籍やサイトを検索するとよいかもしれません。 最近では色々似たようなのがありますので。 VRMLなどもありますがAdobeではAtomosphiaというウォークスルー のチャットシステムや松下が改築のシミュレーションを行う ソフトなどをリリースしています。 すべてを網羅したような解説は見たことがありませんがJava3D などもあります。 差異に関しては専用のプラグインの必要性やレンダリングの精度、 コンテンツの容量などがあげられます。
質問の内容を誤解していました。 かみあってませんでしたね。すみません。 >結局、DTDファイルは、クラスパスによる検索はできないということ >なんでしょうか？ #2の回答で削除を申し出た「DTDをライブラリに追加する」の部分にあたりますが、 「実装する」＝「クラスを生成する」方法ならありますけどね。 ●Oracle XML Class Generator for Java のように、DTDに基づいて各要素一種類ごとにクラスを生成するわけです。 下記URLの図2はわかりやすいですね。 http://www.atmarkit.co.jp/fxml/rensai/xdk01/xdk0 … >例えば、XMLに<!DOCTYPE>宣言を記述せず、XMLパーサープログラム側で >DTDの指定とかする方法はないのですかねぇ？ 上記方法から考えてみて下さい。あると思います。 ただ、念のために書いておきますが DTDの内容はELEMENT宣言とATTLIST宣言だけではないですよね？ ENTITY宣言もDTDの一部ですが、ファイル毎に異なる記述をするケースもあるのです。 <!DOCTYPE section SYSTEM "../program/section.dtd" [ <!--要素宣言と属性宣言は外部ファイル参照　↑（変更は不可）--> <!--記法名--> <!NOTATION TIF SYSTEM "C:\Program Files\Adobe\Illustrator 8.0J\Illustrator.exe"> <!--実体宣言ここから（ファイル毎に記述）--> <!ENTITY CJG70210 SYSTEM "C:\images\CJG70210.tif" NDATA TIF> <!ENTITY CYH50260 SYSTEM "C:\images\CYH50260.tif" NDATA TIF> <!ENTITY CYH50310 SYSTEM "C:\images\CYH50310.tif" NDATA TIF> <!ENTITY CYH50390 SYSTEM "C:\images\CYH50390.tif" NDATA TIF> ・ ・ ・ <!--実体宣言ここまで--> ]> <!--DOCTYPE宣言終わり--> みたいなXML文書の場合もあるので「<!DOCTYPE>宣言を記述せず」がいいかどうかはわかりません。 もちろん、外部エンティテイの扱いも処理系に実装すればいいのですが。 ちなみに、今この外部エンティテイを使用禁止にすべく改造中です（苦笑）。 スキーマ言語はDTDだけではありませんし、 人によって（XMLに）求めるものも違いますので、このへんで。
可能です。 XMLの経験がないのでしたら、DOMリファレンスの著者のサイト http://www.nurs.or.jp/~h_ozawa/kenheya/index.xml からツールをダウンロードしてくるのが一番はやいです。 http://www.nurs.or.jp/~h_ozawa/kenheya/xml/dev-m … に ●Excel→XML ●XML→Excel などがあります。 ＃当方Office XP環境は知りませんので、少し古いやり方になるかもしれません。
　1つ目のITEMを選択しておいて、その中のITEMSの1番目を出力したい場合、 <xsl:for-each select="ALL/ITEM[1]"> 　<xsl:value-of select="ITEMS" /><BR /> </xsl:for-each> とすれば良いと思います。 　すべてのITEMSの中で1番目を選択すると考えるなら、 xsl:for-eachを使わずに <xsl:value-of select=".//ITEMS[1]"/> または <xsl:value-of select=".//ITEMS"/> とすることもできます。 　親がITEM要素でなければならないというような条件を付けることもできます。 　ちなみに、xsl:value-ofは、属性selectで指定されたものを stringに変換して出力するもので、 node-setからstringへの変換は、1つ目のノードのstring-valueになる (XPathの仕様書を参照して下さい)ので、 以下の3つは同等です。 <xsl:value-of select="ITEMS" /> <xsl:value-of select="ITEMS[1]" /> <xsl:value-of select="ITEMS[position()=1]" /> 参考URL：http://www.w3.org/TR/1999/REC-xpath-19991116
■Xerces＋XT ■Perlだけインストールされているマシン のどちらかをあきらめる、という意味ではa-kumaさんと同意見ですが 「あえて後者（Perl環境）」を優先するのであればXTをあきらめて Xerces + Xalanもありかな、と。 ■CPAN http://search.cpan.org/search?mode=module&query= … にPerl用のモジュールがあります。 ＃私自身はPerlよりJavaだと思いますが…… --- 御存じかもしれませんが http://www.janit.com/netbranch/Perl/XMLPerl/XMLP … も御覧になって下さい。 CPANの解説もちょこっと出てます。
XMLに関してのサイトを紹介します。 http://www.atmarkit.co.jp/fxml/ ↑このアットマークITのサイトは情報が盛りだくさんで、初心者の私にも大変役に立っています。リンク集もありますよ。 日本XMLユーザーグループ（http://www.xml.gr.jp/）も、XML技術者の方々の生の意見が聞ける場なのでお薦めします。 参考URL：http://www.atmarkit.co.jp/fxml/
インフォテリアから出ている 「XSLT 1.0 / XPath 1.0 勧告仕様全文日本語翻訳版」なんて、どうでしょう？ ただし、この本は、WEB上で内容が載っている所があります。 私は、忘れましたが。。 がんばってください。
　だいぶ経ってしまっているので、回答が役に立つのか分かりませんが、 一応書いておきます。 　正確な意図が分かりにくいので、この回答が見当違いかもしれません。 <xsl:for-each select="//title"> 　<P><xsl:value-of select="."/></P> 　<xsl:for-each select="../P"> 　　<P><xsl:value-of select="."/></P> 　</xsl> </xsl> と記述しようとしている場所に <xsl:apply-templates select="//title | //P"/> と記述しておいて、 <xsl:template match="title"> 　<!-- title要素に対する処理 --> </xsl:template> <xsl:template match="P"> 　<!-- P要素に対する処理 --> </xsl:template> というテンプレートを呼び出すようにすれば良いのでは？ 　もちろん、apply-templatesでtitle要素とP要素を区別しない点が 意図と異なるかもしれませんが。 　この場合のデータ構造があまり良くないので、例えば <Group> 　<title>タイトルA</title> 　<P>no1</P> 　<P>no2</P> 　<P>no3</P> 　<P>no4</P> </Group> <Group> 　<title>タイトルB</title> 　<P>no5</P> 　<P>no6</P> 　<P>no7</P> 　<P>no8</P> </Group> のようにデータ構造をより良いものにしてから、 という手もあります。 こうするとだいぶ処理が楽になります。 　最後に、余計な忠告かもしれませんが、 xsl:for-eachにこだわり過ぎないで柔軟に考えた方が良いのでは、 と私は思います。
まず、ソートする時にはB要素で繰り返さなくてはなりませんよね。 <xsl:template match="A"> 　<table border="1"> 　　<xsl:for-each select="B"> 　　　<xsl:sort select="." data-type="number"/> 　　　<tr> 　　　　<td><xsl:value-of select="position()"/></td> 　　　　<td><xsl:value-of select="."/></td> 　　　</tr> 　　</xsl:for-each> 　</table> </xsl:template> このようにすると昇順で表示されます (この例の場合は数字としてソートした方が自然なので、 data-type="number"を指定しました) 一応、HTMLでの出力を想定しています。 昇順にする方法が分かっていれば、最小値最大値を取得するのも容易です。 昇順に並んでいるのですから、その1番目の要素に最小値が、 その最後の要素に最大値が、それぞれ入っていることになります。 それを条件指定で取り出せば良いと思います。 <xsl:template match="A"> 　<table border="1"> 　　<xsl:for-each select="B"> 　　　<xsl:sort select="." data-type="number"/> 　　　<xsl:if test="position() = 1"> 　　　　<tr><td>min</td><td><xsl:value-of select="."/></td></tr> 　　　</xsl:if> 　　　<xsl:if test="position() = last()"> 　　　　<tr><td>max</td><td><xsl:value-of select="."/></td></tr> 　　　</xsl:if> 　　</xsl:for-each> 　</table> </xsl:template> 実際はたぶんもっと複雑な事例だとは思いますが、 ここから工夫してみて下さい。
このサイトBase64関連のツールが提供されています。 http://icloud.sakura.ne.jp/　　　プログツールズ ほかにもいろんなツールを提供しています。 参考URL：http://icloud.sakura.ne.jp/
media typeを設定し読み込むXSLスタイルシートを定義すれば XSLのふりわけというのは可能です。 記事が公開されていますのでリンク先のXML PRESS vol.2のBXSの 解説のところを参考にしてください。 参考URL：http://www.gihyo.co.jp
SVGに関しては詳しくありませんが、 SVGの表示にはブラウザにプライグインが必要ですよね。 直接SVGのコードをブラウザに送って表示させるには、 ブラウザがSVGに対応している必要があります。 IE5.xとか対応していませんよね？？ そのため動的に表示させるには、インターネット経由で参照できるディレクトリに 一時的な名前で（例えば"tempname00.svg"など一回のアクセスごとに変わる） SVGのファイルを作成し、 <EMBED src"tempname00.svg"> というようなタグをもつHTMLをブラウザに返して表示させるしかないのではないでしょうか。 あくまで現状ですが。
補足見ました。 >ＨＴＭＬをウェブサーバーに置く のは最終的な事であって、作業中のXML/XSLファイルを「ネスケ」で確認できないと困るわけですよね？ 自分のPC内で（サーバを使用して）動的にHTML変換してはどうでしょうか？ ●条件から見てオープンソースのBaykit XML Server（以下BXS）がオススメです。 JDKのインストールと設定は必要ですが、ServletのCocoon（デフォルトはxalan＋xerces）等はすでに設定済みです。CLASSPATHの設定等が必要ないのですぐ使えると思います。 「自分の使用するPCにインストールしてLAN内での使用」なら許可をもらえるんじゃないでしょうか？ 自分のPC内のXML＋XSLファイルにHTTP経由（http://192.168.xx.xx）でアクセスするとHTML変換結果がかえってきます。ファイルの変更／訂正があった場合にも「ネスケ」で変更／訂正結果をダイレクトに確認できるわけです。 #BXS+Xiのシステムを某大学の昨年度卒論に使われていた方もいますので、Googleで検索してみて下さい。参考になるかもしれません。 -- 自宅でIE 5.0使用とのことですが、 ●ワーキングドラフト仕様 <xsl:stylesheet xmlns:xsl="http://www.w3.org/TR/WD-xsl"> で作成してしまうとxalan＋xercesでは通りません。 ●勧告仕様 <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> で作成する必要がありますが、今度はデフォルトのIE 5.0（＋MSXML2）では通りません。 #これを解決するにはMSXML「3」が必要です。 （レジストリの書き換えはxslinst.exeを使用します） 参考URL：http://www.baykit.org/
たびたびすみません、fatbackです。 わかりにくい書き方をしてしまいましたので反省／補足（蛇足）します。 私の記述したXSLだと<dummy> をrecordの子要素の最後だと認識しますので、XMLファイルから<dummy>を削除しないと最後にカンマが残ってしまうはずです。あえて書かなかったのですが、わかりにくい表現だったと反省しています。<dummy>を削除すれば<ccc>を最後の要素として認識しますのでカンマが消えます。ようするに<dummy>の存在意義が理解できなかったのです。 以下のXSLで<dummy>要素を削除／追加してみれば、どこに各テンプレートが適用されているかがわかるはずです。<xsl:for-each> を使わない理由も（笑）。 ■XSL #ワーキングドラフト仕様（HTML） -csv.xsl- <?xml version="1.0" encoding="Shift_JIS"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/TR/WD-xsl"> <xsl:template match="/"> <html lang="ja"> <head> <title>XML-CSV-HTMLサンプル</title> <style> .yes { color: blue; } .no { color: red; } </style> </head> <body> <xsl:apply-templates select="root/data/record" /> </body> </html> </xsl:template> <xsl:template match="root/data/record"> <div> <strong>■レコード</strong><xsl:apply-templates /></div> <hr/> </xsl:template> <xsl:template match="record/*"> <div>「<xsl:value-of select="."/>」はカンマ<strong class="yes">有り</strong></div> </xsl:template> <xsl:template match="record/*[end()]"> <div>「<xsl:value-of select="."/>」はカンマ<strong class="no">無し</strong></div> </xsl:template> </xsl:stylesheet> --- 次回からソースの公開は控えさせて頂きますので、御了承下さい。
jo-jiさんも書かれてますが、XML自体にテーブル表示する機能があるわけではないです。しかしながら線（セルのボーダー？）が出る、出ないという質問になるということは、、、 ●なんらかの入力支援ツールを使用している。 ●ツールが自動生成したXSLを使用している。 ●自動で関連付けされているため、XMLに表示機能があると誤解してしまった。 という推測で書き込みます。推測で書いてますので、外してたらごめんなさい。 ＃どうしてもセルのボーダーが必要なら、XSLファイルを変更しましょう。 多分、生成されたXMLファイルと同じフォルダ内に、xxx「.xsl」というファイルがあると思います。テキストエディタで開いてみて下さい。 XML文書を表示するための処理が書かれています。 この中から、HTMLの<td>要素の中の<xsl:value-of />を探します。 <table> 　<tr> 　　<th> 　　</th> 　</tr> 　<tr> 　　<td> -------------------- 　　　<xsl:value-of /> -------------------- 　　</td> この一行のみを、下の4行と入れ替えます。コピペして使って下さい。 <xsl:choose> <xsl:when test=".[text()]"><xsl:value-of /></xsl:when> <xsl:otherwise>空白です</xsl:otherwise> </xsl:choose> これで空のセルには全て「空白です」が入るはずです。 動作を確認できたら、あとは「空白です」を「全角スペース」に変更すれば出来上がり。 ＃識者の方に怒られそうな解答だな、我ながら。 ＃仕様を無視した気分。
困り度3なのに誰も答えていないようなので。 拡張子"dtd"はアプリケーションに関連付けされていないのが普通だと思いますので、アイコンがWindowsマークであっても気にする必要はありません。メモ帳などのエディタで編集するだけでOKです。 毎回「アプリケーションから開く」をするのが面倒ならば、お使いのエディタに関連付けをしておけばよいと思います。 どのような本なのかは存じませんが、本のサンプルに書かれている通りにファイルを作成および編集し、以下のようにXMLファイルに記述すれば大丈夫だと思います。(文書要素型がabcでDTDファイルへのパスがhoge.dtdである場合) <!DOCTYPE abc SYSTEM "doctype_test.dtd"> この辺は読まれている本にも書かれているとは思うのですが、一応。
たまさか今日からＸＭＬでページを作り始めています。 閲覧者には特に利点はないと思いますよ。 ブラウザーの表現力を超える事はできないので限界がありますから。 Ｗｅｂを離れてのメリットはがあるというのは、 前に書かれている方達のおっしゃる通りです。 作るという事については、ＸＭＬをＨＴＭＬに変換する 予定ですのが、ＨＴＭＬより内容に集中できるので 今のところは作りやすいです。 変換すれば未対応のブラウザでも見られるので 価値がないという事もないでしょう。
要素や属性などのmarkupをそれぞれが勝手に定義していては、XMLのメリットは確かにあまりありません。定義できる可能性があるというだけで、実際には用途に応じた業界などで標準化されていた方がずっと便利です。 しかし、そのような各標準がXMLという同じ土俵の上に乗ることに意味があると思います。どの標準を使う際にも、XMLに関する知識や経験それにプログラムなどを活用することができます。 また、XMLからXMLへならば、XSLTというものを使って、変換することができます。 つまり、あるデータ形式みたいなものが業界や企業などによって定義される際、これまで見たことがないような形式になるよりも、XMLに基づいたものになる方が、定義する側にとっても利用する側にとってもメリットがあることになります。 XMLを分かりやすく説明するために<名前>jo-ji</名前>みたいな例がよく使われますが、実用的な観点ではあまり意味がない(それだけでは)と考えた方がいいと思います。あなたのおっしゃる通り、約束事があってはじめて役に立つのです。
ICHI-1さんのキャリアにとっても非常に良い機会ですね！ 業務で使用するとなると、ただ勉強するよりも目的がはっきりしていますし、実務経験が積めますのでいいですね～。 さて、XMLというと作成方法からまず考えがちですが、 一番初めは実際にXMLがどこで使用されているかのイメージを掴んでいただいたほうが あとあと役に立つと思います。 技術者向けの本は用語がいろいろ出てきて読みにくいかもしれませんので、 営業の人や一般向けにかかれている「XMLってなに？」というような本をご覧になってみてはいかがでしょうか。 （ただ、そういう本は細かい解釈がアヤフヤなこともありますが） そのあとで言語の学習をされたほうが、具体的なイメージがもてるので良いと思います。 言語は入門系の本がたくさん書店にはありますし、 他の回答者様がおっしゃっているようにWebにもあります。 最終的にはXMLマスターなどの資格取得を目標にされると、更に自信がつくかもしれませんね！ 参考URL：http://www.xmlmaster.org/
