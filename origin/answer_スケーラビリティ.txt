>>VisualBasicでWebサーバアプリは適切ではないですか。 やはりJavaなんですかね。 古いVB6はダメだと思いますけど、新しいVB.NETであれば、Webサーバアプリでもローカルなアプリのようなサービスが作りやすくなっているようです。 だから、「適切ではない」とは言えないと思います。でも、通常、レンタルサーバはUnix系OS（無償）の場合が多いですよね？ VB.NETでの開発を選択するとなると、それなりに高価なWindows Sever OSを用意することになると思いますから、それが障害になる場合が多いと思えます。 なお、言語を自由に選べるなら、Javaは使いたくないと思っています。 自由に言語を選ぶなら、Ruby on Railsがいいかな？なんて思っているんですけど、仕事で使ったときには、情報が少なくて、だれもが苦労していました。 ちなみに、そのプロジェクトは、システムの開発目的が曖昧になり、たぶん失敗プロジェクトになったのではないかと思います。 （自分の担当分は完成させたんですけど、派遣終了で最後まで見届けられませんでした。）
それは「行動ターゲティング広告」という手法による広告で、 別に狙われているわけでも何でも無いです。 行動ターゲティング広告 - Wikipedia http://ja.wikipedia.org/wiki/%E8%A1%8C%E5%8B%95% … 技術的には、ほとんどcookieを使っているので 気になるならcookieを削除してください。
一応、仕様上は、TIFFへの格納方法として、JPEG圧縮したデータが使えます。他にもカラーで可逆圧縮も使えます。 ソフトがその作成や閲覧に対応しているかどうかはまた別の問題
(1)「自分で認証局を立て、コード署名証明書を発行し、実行ファイルに使用する」という意味なら可能です。 　　「オフィスに付属のツールで作ったデジタル署名を実行ファイルに使用する」という意味なら不可能だったと思います。 　　（うろ覚え） (2)自己証明書は通称オレオレ証明書とも言われ、一般公開するものに入れるべきではありません。 　（あなたがイントラネットの管理者でイントラネット内に限って公開するのであれば自己証明書に意味はあります） 　本来は、公的な認証機関に実在証明を出してもらうのがデジタル署名です。 　それを自分で認証局をたてて自分を証明しようというのは無意味です。 　「不明なプログラムですが云々」を消したいのでしょうが、自己証明書を付けただけではこのメッセージは消えません。
オンライン英会話事業者向けのシステムは下記サイトにあるようですね。 http://edu-cross.com/ これによると、初期費用は300万円となっています。 結構、いろいろな機能が満載のようなので十分かなとも思われます。 導入事例も結構あるようです。 イチから開発すると数千万円かかるのではないでしょうか？ 私はシステムコンサルティングをしています。 一般的にSE（システムエンジニア）がシステムデザイン、工程管理をして PG（プログラマー）がコーディング、テストを行い SEで1人月（20日）で100万円、PGで70万円くらいします。 レアジョブさんのシステム見てみると、結構大きなシステムだと思われますので 少なく見てもSE1名、PG3名で6か月かかるとしても2,000万円くらいはかかると 思います。 もちろん、キッチリした要求仕様書があること前提ですが。。 あと、ソフトの保守、サーバーの保守、バージョンアップなども事業を行っていると どんどん出てきますのでそのあたりの工数も考慮する必要がありますね。
Google の分散処理(MapReduce)では、処理の割振り等を管理する「マスタ」サーバがあり、それがどの中間ファイルのデータをまとめるのか「Reduceワーカー」サーバに指示するようです。 詳しくは下記の文献に載っています。 Googleを支える技術 http://www.amazon.co.jp/dp/4774134325 参考URLにもMapReduceの簡単な解説が有ります。 参考URL：http://www.atmarkit.co.jp/fjava/special/distribu …
> 今回のアプリにはデザインパターンを取り入れており、 デザインパターンは取り入れようと思って取り入れるものではないので注意してください。 「パターン魔(パターン指向リファクタリング入門からの言葉)」になっている恐れがあります。 > 頂いた内容ですと、Factory としてはインターフェイスのみ用意しておき、実装は必要に応じて、という認識でよろしかったでしょうか。 そうですね。ただ、先ほどの例ではインターフェイスとする利点はほとんどなくて、実装クラスをそのまま記述してしまっても問題ありません。 > ただ、（こちらも説明不足でしたが）使用する各クラスファイルは、パッケージごとに明確に分類しようと考えており・・・、 > （例えば、ファサード役は Director パッケージ、ビルダー役は Builder、ファクトリー役は Factory 等という具合に...） > Builder 内で Factory パッケージ内のインターフェイスの実装部分を作成する方向では考えておりませんでした。 これはまずい設計です。 パターンによりパッケージを分けるのではなく、依存性によってパッケージは分けるべきです。 詳しくは、「アジャイルソフトウェア開発の奥義」という本で紹介されています。 また、パターンやオブジェクト指向プログラミングに関しては、「デザインパターンとともに学ぶオブジェクト指向のこころ」という本がおすすめですよ。
フリーのライティングソフト、ディスクメディエーター呉葉がインストールされているなら、 Private Sub Command1_Click() 　　Dim mastering As Object 　　Set mastering = CreateObject("KUREHA.Mastering") 　　With mastering 　　　　Call .ClearTrack 　　　　Call .InitISOFS(&H11) 　　　　On Error Resume Next 　　　　Call .AddFile("C:\*.txt") 　　　　If (Err.Number <> 0) Then 　　　　　　Call MsgBox(Err.Description, vbCritical) 　　　　End If 　　　　On Error GoTo 0 　　　　On Error Resume Next 　　　　Call .StartBurn("D:") 　　　　If (Err.Number <> 0) Then 　　　　　　Call MsgBox(Err.Description, vbCritical) 　　　　End If 　　　　On Error GoTo 0 　　End With 　　Set mastering = Nothing End Sub みたいな感じで書き込めます。
