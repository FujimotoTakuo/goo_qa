量子力学で、系のエネルギーが閉じている時は波動関数を変数分離できて、その関数は φ(x, t) = f(x) g(t) と表せます。g(t) = A exp(-i ω t). f(x)は時間に依存しないシュレディンガー方程式を解く。 うろ覚えで適当に書いています。厳密なことは小出昭一郎先生の本とか読んでください。 この質問見るのはじめてじゃないですよ。前はスルーしましたもん笑。
とりあえず文章は推敲することをお勧めします.
勾配降下法というのは、 f(x) の極小値を見つけたいときに、 初期値 x[0] から、 x[n+1] = x[n] - α*f'(x[n]) みたいな漸化式にしたがって、x[n]を更新していく方式です。 漸化式の形を見れば一目瞭然だと思いますが、 やっていることは、単純に言えば、 偏微分＝０になるところを探しているわけではなくて、f(x)の値が小さくなる方向（偏微分の値をみれば、どの方向にいけばf(x)の値が小さくなるのかがわかります）に移動しつづける、 というものなわけで、収束した先が極小値になるのは明らかだと思います。
受験結果のサマリが下記にありますので参考にして下さい。 https://www.nit.ac.jp/jukensei/info/result AOは応募者36、合格者17とありますから、競争率だけから言えば結構厳しいところですね。 AOの受験資格のパンフレットに文系はダメとか書いてなければ受験自体は可能で、合格しないとはいえません。インターネット情報では工業高校卒が多くて、普通科などのいわゆる理数教育はマトモには受けていない人が多いようですので、その意味では塾の勉強で追いつけるかもしれません。 むしろ工業高校卒と話しが合うかみたいなことは考えておいた方が良いかも知れませんね。AOはおそらく面談が中心でしょうから、自己アピールの仕方を考えておくことです。（OBなどではありません）
当方、高校生物は未だ学習途上であるので、ちと自信ないが・・、 グラフ①のA肺胞でのHbO2の割合をグラフから読み取ると96%(・・と見える!?) B組織の点は②の曲線(CO2分圧70mmHg)のO2分圧30mmHgにおける点だから、その時の②でのHbO2の割合をグラフから読み取ると30%(・・と見える!?)であるから、組織での酸素の解離度は (96 - 30)/96 x 100 ≒ 69% ・・と計算される思う!?
http://www.jssst.or.jp/ http://www.ipsj.or.jp/sig/se/ http://www.sccj.net/CSSJ/Welcomej.html http://www.jsbi.org/event/20141201jpsj/ など
臨床工学は分子レベルの世界ですから。 情報はピンからキリまであってピンでもエンジニアを名乗れますから。 ひとつの選択肢でしょう。
戦時の情報収集能力ですか？敵の弾がどこから飛んできたかとか？ https://ja.wikipedia.org/wiki/76%E5%BC%8F%E5%AF% … それとも、公安やスパイのような情報収集ですか？ 防諜に関しては、答えられるわけがありません 公開されていないんだから
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 2 1 0 0 0 2 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 です。 一行目は頂点1からの辺の数を書きます。 頂点1へは0、 頂点2へは0、 頂点3へは1、 頂点4へは0、 頂点5へは0、 頂点6へは0　ということを一行目は表しています。
夏休みは大学によって違いはありますが、同じ大学の学部学科毎の違い、というのは基本無いと思います。 ただ、「夏休みの宿題」「係の当番」等の違いで、大学へ行かなければならない/自主的に大学へ行く ことになる人もいます。 ・「宿題」をするための書籍、装置、薬品等が、個人宅に無い ・生物の世話をする ・長期休暇を利用してフィールドワークに出かける 情報工学だと、プログラムや数値解析に関係する「宿題」がある場合が考えられます。 ・プログラミングに使えるPCが家に無い ・家のPCでは性能が不十分で課題に耐えられない ・使うソフトが高くて、個人で買えない ・大学のマシン室は熱対策のためにエアコンが効いてて快適 等で、夏休みでも大学へ行く人がいます。
プロファイルに「PAN (Personal Area Network Profile)」があれば可能ですが、無いなら無理。 まずはプロファイルにPANのサポートがあるかを確認してください。
No.1です。 ひょっとして、これを聞きたかったのですか？ 投稿するカテゴリーがでたらめで、かつ自分の質問したいことを的確に伝達できていませんね。 https://oshiete.goo.ne.jp/qa/9359869.html 回答して損した気分ですよ。
なるほど。 1桁を4ビットで表すわけですね。 1桁毎にスタートビット、ストップビットを付けて、 1レコード毎に区切りのキャラクターを付ければいいのではないですか。
ちなみに、元ソースを見ると、「n行目r列目の特定の値を返したい」ように見えるんで、特にパスカルの三角形「そのもの」は返さなくても良いように見えます。 二次元配列を使わないで済むのなら、次のようにcalを定義する事が可能です。 int cal(int n, int r) { 　/* ここでパスカルの三角形の定義をそのまま書く */ 　if (r == 0 || r == n) 　　return 1; 　else 　　return cal(n-1, r-1) + cal(n-1, r); }
「GEBあるいは不思議の環」とやらがなんなのか知らんしここにある記号の意味もさっぱりだが, こんなものは所詮 「論理式」の定義にあてはまるかどうかを調べるだけ だ.
log_2(1000)=3*log_2(10)≒9.96 9<log_2(1000)<10 よって10bit必要。
> 人類の知性が、ただの計算結果に敗北した。 > そうは思いたくないところです。 でも「たかが機械のコンピュータに、人間が『創造性』で負けた」ってなったら、そっちの方が「人間の知性の敗北」になりませんかね? 人間には到底できないような量の計算を、人間には到底できないような速度でやるために作られた「計算機」に、「計算能力」で人間が負けた、ということなら、極当り前のことですよね。 ・それまでに無かった装置や方法で、より詳しく観察した結果、それまでの常識が覆される結果が出る ・ある条件で最適な方法が、別の条件でも最適とは限らない といったことは、科学の世界ではよるあることです。 これまでの定石というのは、この先こんな風に局面が変化していくので勝てる(負けない)、といった「計算」した結果です。 人間が計算できなかった領域が、コンピュータによって計算されたら、定石が覆されることもあるでしょう。 人間に勝てるようになったこと自体は大変素晴しいことです。 ですが、それを「創造」と呼んでしまうのは、違うと思います。 そのプログラムを作ったことについては「創造」と言えるでしょう。
多変量解析＝認知型人工知能のプログラムに使われてる解析方法 認知型人工知能＝多変量解析を使って自動的に学習させるプログラム ディープラーニング＝認知型人工知能の中でも、ダミー変数や因子数を与えずに自分で発見させるプログラム
RGB も HSV も HSL も、色彩の表示方法のひとつの方式です。 RGB(Red, Green, Blue)は単に「光の3原色」のそれぞれを0～１で数値化しただけのものなので、誰が定義したということもないでしょう。 HSVモデル (色相：Hue、彩度：Saturation、明度：Value）は1978年にアルヴィ・レイ・スミス(Alvy Ray Smith)によって考案されたようです。HSB色空間(Hue、Saturation、Brightness) も同じものを指すようです。 HSL色空間 (Hue、Saturation、Lightness) （HLS と呼ばれることもある）も似たようなもののようですが、定義が異なるようです。 ご参考 https://ja.wikipedia.org/wiki/HSV%E8%89%B2%E7%A9 … https://ja.wikipedia.org/wiki/HLS%E8%89%B2%E7%A9 … いずれも標準化団体などによる規格にはなっていないようです。
認知は、学習し・記憶し・理解し・判断する、思考し・計算する等の能力の総称ですから、 認知するためには、「特徴を捉える能力」が必要でしょうし、「捉えた特徴を使って判断する能力」も 認知機能の一つと考えれば、ある意味では、あたっているのではないでしょうか。 実体験（児童・生徒への学習指導）から感じるのは、学習する能力が遅い生徒・早い生徒の違いは、 認知の最初の多くは視覚によりますが、視覚で捉えた後に、思考の中或いは思考過程で他との差異、 つまり特徴を捉えられるかどうかによると、感じています。 自分の記憶の中に取り入れるために、計算するために、物なり数値の「特徴を捉える」 必要があるのは確かですね。 差異を発見できないためとも言えますが、「特徴を捉える」という表現は、 非常に興味深い表現だと感じました。 参考までに。
情報の勉強をしているのなら、2進表記・10進表記・16進表記の対応も覚えておきましょう。 2 10 16 0000 00 00 0001 01 01 0010 02 02 0011 03 03 0100 04 04 0101 05 05 0110 06 06 0111 07 07 1000 08 08 1001 09 09 1010 10 0A 1011 11 0B 1100 12 0C 1101 13 0D 1110 14 0E 1111 15 0F で、「A」がASCIIコード「41」(16進)というのは覚えておかないとダメですね。 （ついでに、「０」が「30」(16進)というのも覚えておきましょう。） Qはアルファベットの17（10進）番目ですから、Aから数えて16（10進）番目となります。 16進表記に治すと、10（16進）番目となります。 Aが「41」(16進)ですから、Qは、 41(16進)+10（16進）=51（16進） になります。 これを2進表記に直すと、5が0101、1が0001ですから、01010001になります。 頭の0を省略すれば、1010001になります。
>1011001 隣でした(^^: 1010001 因みに16進と2進の対応は、2進を4桁ずつみる。 0101 0001 0101(2進) = 8x0+4x1+2x0+1x1=5(16進) 0001(2進) = 8x0+4x0+2x0+1x1=1(16進) なので51(16進) 10進に直すには 0101 0001 = 128x0+64x1+32x0+16x1+8x0+4x0+2x0+1x1 = 64 + 16 + 1 = 81(10進) 2進に直すには2で割って余りを出す 81÷2 = 40余り1 40÷2 = 20余り0 20÷2 = 10余り0 10÷2 = 5余り0 5÷2 = 2余り1 2÷2 = 1余り0 1÷2 = 0余り1 余りを下からつなげて 1010001(2進)
まず、伝達関数　T(s)　は 　　T(s)＝C(s)／U(s)　　　　　　（１） ブロック線図よりT(s)を求めると 　　T(s)＝G(s)／{１＋G(s)｝　　（2） 式（2）に　G(s)=１／｛ｓ（ｓ＋１）｝　を代入して整理して 　　　T(s)=１／（ｓ＾２＋ｓ＋１）　　　（３） を得る。 　ここで、入力がステップ入力なのでU(ｓ）は 　　　U(s)＝１／ｓ　　　（４） 式（４）と式（３）を式（１）に代入して出力Ｃ（ｓ）を求めると、 　　Ｃ（ｓ）＝（１／ｓ）｛１／（ｓ＾２＋ｓ＋１）｝　　　（５） 式（５）を　　ζ　　ωｎ　を使って書き換えると 　　Ｃ（ｓ）＝（１／ｓ）｛１／（ｓ＾２＋２ζωｎｓ＋ωｎ＾２）｝　（６） ここで、 　　　　ωｎ＾２＝１　　　（７） 　　　　２ζωｎ＝１　　　　（８） 式（６）を逆ラプラス変換の表を使ってＣ（ｔ）を求めると、 　　Ｃ（ｔ）＝１－［１／｛√（１－ζ＾２）｝］｛ｅ＾（－ζωｎｔ）｝ｓｉｎ［ωｎ｛√（１－ζ＾２）｝ｔ+Φ　］　（9） 　　ここで　Φ＝ｃｏｓ＾（－１）ζ また、式（７）、（８）よりωｎ、ζはそれぞれ、 　　　ωｎ＝１、　ζ＝0.5 を得る。これらを式（９）に代入して、 　　Ｃ（ｔ）１－1.15｛ｅ＾（0.5ｔ）｝ｓｉｎ（0.866ｔ+６６．７°） と求まります。
MIPS：Million Instructions per Second…1秒間に何百万回と言う単位。 こうやって単位の意味を覚えておくと、あとは単純計算で求められるようになります。 （意味さえ知っていれば計算式なんてその都度考えればよい程度のもの） ※Million（ミリオン）…100万のことですね。
もうウェブサイトは調べられたかもしれませんが、 http://health.goo.ne.jp/medical/10111600 でわかりやすく説明してありますよ。 これをさらに簡単に説明すると、 核黄疸とは血液中のビリルビン値が上昇し脳内に沈着した結果、脳細胞が侵される病気です。 （ビリルビンとは血液中のヘムの代謝物であり、胆汁または尿から排出されます。） 病的黄疸によって血液中のビリルビン値が上昇した結果、大脳基底核(きていかく)というところに沈着することが核黄疸の原因となります。 症状 ・第１期（発病２〜３日）に筋緊張低下、嗜眠(しみん)（眠っているような状態の意識障害）、哺乳力の低下などがみられます。この段階では適切な治療で改善する可能性があります。 ・第２期（発病約３日〜１週間）には筋緊張の亢進(こうしん)、後弓反張(こうきゅうはんちょう)（後ろに弓なりに反る）、発熱、甲高い泣き声、けいれんなどを示す ・第３期（発病１週間以降）には筋緊張の亢進は弱まりあるいは消えていきます。
単なる可用性ではなく、「可用性の確保」です。 http://itpro.nikkeibp.co.jp/article/COLUMN/20070 …
専門用語で回帰的なんとかというやつですね。 名前は定かではありません。すいません。 考え方としては、 y=0になるまで、x←y,y←x mod yを繰り返し、 その最後のy=0になった時のxを返せばいいです。 つまり、はじめは、x=775,y=527ですから、 まず、xに527を代入、yに248(775 mod 527)を代入。 次は、xに248、yに31(527 mod 248)を代入。と、 これを繰り返していけばいいです。 一応、答えを書くと、 返り値は31ですね。 計算のほとんどを書いてしまったんですが、 理解できたらもう一度自力でやってみてください。 計算間違ってたらすいません。
必要資格ではないので、実用性はあまりないかも？ 情報処理に深く関わる企業にリクルート活動するのなら有効性はあると思いますが、販売系や、ものづくり系の会社には、あまり縁がないように感じます。 主さんが、情報処理がとっても得意で、ちょっと受験対策すれば簡単に受かるレベルの方なら、ついで感覚で取っておくのも良いかもしれませんが、今からみっちり時間を掛けて勉強しても受かるか？ってレベルなら、その時間を他の受験対策や、学校での勉強などにまわすのも一案かと思います。 結局のところは、主さん次第です。ｗ
過去に出た変換式も、基本方針は同じです。 (1) R,G,B の大小関係から、 H のどの範囲に該当するかを決める (2) (1)で決めた範囲で、実際にどの角度になっているかを計算する RGBを大きい順に並べたとき R≧G≧B G≧R≧B G≧B≧R B≧G≧R B≧R≧G R≧B≧G という並び順があります。 これを角度に対応させると R≧G≧B: 0°≦H≦60° G≧R≧B: 60°≦H≦120° G≧B≧R: 120°≦H≦180° B≧G≧R: 180°≦H≦240° B≧R≧G: 240°≦H≦300° R≧B≧G: 300°≦H≦360° となります。 そのURLでは G≧R≧B: 60°≦H≦120° を 60° + 増分(0〜60°) として、Wikipediaでは R≧G≧B: 0°≦H≦60° G≧R≧B: 60°≦H≦120° を B=MINとまとめて 60° + 差分(-60〜60°) として求める式になっています。 ここで、 不等号に=が付いていることから分かるように、この範囲は境界で重複しています。 G>R=Bのときは G≧R≧B: 60°≦H≦120° G≧B≧R: 120°≦H≦180° の両方とも成立していますし、どちらの式でも、求めたHは同じ値(120°)になります(なるように式が作られています) =の場合を分けて書けば、次の通りです。 (R≧G≧B): R>G=B: H=0° (R≧G≧B): R>G>B: 0°<H<60° (R≧G≧B): R=G>B: H=60° (G≧R≧B): G=R>B: H=60° (G≧R≧B): G>R>B: 60°<H<120° (G≧R≧B): G>R=B: H=120° (G≧B≧R): G>B=R: H=120° (G≧B≧R): G>B>R: 120°<H<180° (G≧B≧R): G=B>R: H=180° (B≧G≧R): B=G>R: H=180° (B≧G≧R): B>G>R: 180°<H<240° (B≧G≧R): B>G=R: H=240° (B≧R≧G): B>R=G: H=240° (B≧R≧G): B>R>G: 240°<H<300° (B≧R≧G): B=R>G: H=300° (R≧B≧G): R=B>G: H=300° (R≧B≧G): R>B>G: 300°<H<360° (R≧B≧G): R>B=G: H=360° = 0°+360°×1 (一般角)=0° 元URLの > さて、120度の時はRもBも最小値となり、二つの範囲の条件を満たしてしまっています。 は、「120度の時はRもBも最小値となり」とあるのが不適切です。 RGB→HSB変換なので、この時点では角度がわかっていてはおかしいのです。 > RもBも共に最小値のときは、60〜120度、120〜180度の二つの範囲の条件を満たしてしまっています。 > どちらで計算すべきでしょうか？ > 実はどちらでも同じになります。 > 実際(0,255,0)を上の二式に代入するとどちらも120度となります。 と RGBの関係からどの範囲を選ぶか、という視点で書くのが適切でしょう。 ＞360度(0度)は300～360度の範囲で計算するのではなく、0～60 度の範囲で計算しましょう も「360度(0度)」と求めるべきHが先に出てくるからおかしいので、 ＞BもGも共に最小値の場合は、300〜360度、0〜60度の二つの範囲を満します。 > この場合は、300～360度の範囲で計算するのではなく、0～60 度の範囲で計算しましょう と RGBの関係からどの範囲を選ぶか、という視点で書くのが適切でしょう。 この場合、300〜360°の式からは360°、0〜60°の式かは 0°という「違う値」が求められます。 ですが、一般角で考えると、360°と0°は同じと見做せます。 「300〜360°の式から求めて、360°以上だったら-360する」 というのも手段の一つではあります ですが、この調整が必要なのは、 「B=Gが最小値のときに、 300〜360°の式を使った」という極限られた場合だけです。 そんな特殊な処理を入れるよりは、最初から処理が不要な方法を取った方がよいです。 ーーー ・60～120度でも、120～180度でも良い？ 重複する範囲のどちらを使うか、の話なので、そんな関係無い範囲の式は使いません。 ・300～360度の範囲で計算後、+360/-360して調整すれば良いだけでしょうか？ その通りですが、そもそも調整自体不要にした方がプログラムが綺麗になります。
講義をした先生に聞けばいいのでは?
「全角スペース」では?
残念ながらMathematicaにメッシュ分割アルゴリズムは組み込まれていませんので、 自力で実装することになりますが、質問に曖昧なところが2点があります。 1) メッシュ分割の対象とするのが球体(3次元)なのか球面(2次元)なのか 　球体、ソリッドならば得られるメッシュは四面体や六面体になります。 　三角形や四角形のメッシュは球面を分割して得られるものです。 2) 「各軸方向でメッシュの本数を指定したい」の「各軸」が、直交座標系なのか球面座標系なのか 　直交座標系で球体or球面を分割するのは問題に無理があります。 　球面座標系であれば、(r, θ, φ) → (x, y, z)を計算するだけですが、極や原点付近で特異点ができます。 各々の場合に対する回答ですが、 ・球体で直交座標系 or 球面で直交座標系 → 問題を見なおして下さい ・球面で球面座標系 → 極に特異点ができますが、以下のコードになります。 DeleteDuplicates@Flatten[Table[N[{Cos[f] Sin[t], Sin[f] Sin[t], Cos[t]}], {f, 0, 2 Pi, 2 Pi/20}, {t, 0, Pi, Pi/10}], 1] ・球体で球面座標系 → 極と原点に特異点ができますが、以下のコードになります。 DeleteDuplicates@Flatten[Table[N[{r Cos[f] Sin[t], r Sin[f] Sin[t], r Cos[t]}], {f, 0, 2 Pi, 2 Pi/20}, {t, 0, Pi, Pi/10}, {r, 0, 1, 1/10}], 2] 何に使用するメッシュを作成したいのかが不明ですが、 単純に分割しようとする限り、あまり綺麗なメッシュにはなりません。 メッシュ分割アルゴリズムの文献を当たるのが良いと思います。
gnuplot 使い方 で検索しましょう。 ここの4千文字程度で詳しく説明するのは難しいです。
> can't assign to function call function call : 関数呼び出し 　これは 「foo(x)」のような形をしています。 can't assign to 〜 : 〜 に代入できない つまり、 foo(x) = bar みたいな「『関数呼び出し』への代入」をしている、というエラーです。 > int(i)で変数iを使って定義しようとしているのですが Pythonの解説書とかをよく読んでください。 Pythonでは、 変数=値 という代入文を書いた時点で、自動で変数が定義されます。 intは「整数型の変換」する関数なので int(i) = 0 等とすれば、上記のエラーになります。 ROOTよりは煩雑ではないかもしれませんが、Pythonにもちゃんとして規則があります。 「思い込み」で作るのはやめて、ちゃんと基礎くらいは勉強しましょう。
P の否定は 　　Pバー と書いたり 　　￢P と書いたりします。 ↓ 参考まで。 https://ja.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6 … http://www.sist.ac.jp/~kanakubo/research/reasoni … 「バー」を否定として使っているなら、「ダブルバー」は「否定の否定」でしょう。 いずれにせよ、「記号は定義して使う」のが原則なので、「記号の使い方」のことわり書きはないのですか？
見た目が違うだけで、計算内容は同じです。 ・Hueに 度を使うか、0..1 を使うかによって、 60°,180° 等の値が 1/6,1/2 等となっているだけです。 ・Wikipediaの式にある絶対値を、 |x|=x (x≧0) ,-x(x<0) という場合分けをして展開すれば、CSSの式になります。 ・WikipediaにあるHueによる細かい場合分けは、よく見ると、R,G,Bが120°ずつずれたものだとわかります。 　CSSでは、1/3(120°)ずらしたhを使って、その後の場合分けを共通にしています。
> ・相互変換する場合、矛盾が生じないよう端数処理するためにはどうすれば良いでしょうか？ そんな都合のいい方法はありません。 前にも書きましたが、有限のコンピュータの世界で扱っている限り、避けられません。 どこまで誤差が許されるのか、どれだけの資源が使えるのか、等の条件に合せて、適切と思われる方法を使うだけです。 例えば。 > RGBをHSLへ変換する際は四捨五入 なぜ、誤差を増やす「四捨五入」をするのでしょうか? 計算するだけなら、計算で出た小数点以下の値をできるだけそのままにしておく方が、誤差は少なくなるはずです。 > ・端数が伴う(RGBからHSL)変換処理後に、再度逆変換(HSLからRGB)する際、必ず元の値へ戻すにはどうすればよいでしょうか？ 普通「ただ元に戻すだけ」なんて処理はしません。 それなら最初から変更しなれけばいいのです。
例えば、 そもそもbitとは、情報量の基本単位のこと。 その語源は binary digit でこれは、（2進数の1桁）を合成したものという意味。 だから、 1 bit は2進数での1桁分の情報量で考えるのが基本となる。 つまり具体的には、００か０１で考える。 この結果、表現可能な情報の種類は、２つのやり方から、１つを選ぶ方法が全部で何通りあるかということなので、2^1(2の１乗）＝２通り。 換言すれば、何らかの刺激を与えられた場合、それを処理する最低単位を、1か0，または、真(true)か偽(false)，或いはYesかNoなどで表した場合の結果を表す方法を意味する。 ところで、１バイト＝８ビット つまり、８bit=2^8=256　種類の情報を表現できることになる。 但しこれを文字にした時は、そもそも半角1文字が1バイトとされ、全角1文字は2バイトを必要とする。 携帯等の通信の場合、パケットpacketという表現を使うが、 １パケット＝１２８バイトなので、半角ならば１２８文字だが、全角だと６４文字が、表現可能な情報量となる。 換言すれば、1パケット=128バイト=1024（１２８×８）ビットを要することになる。 但し、ここまでは単純計算上の極めて初歩的な段階であり、実際には、IP（インターネット上でコンピューター同士が通信を行うために定められた通信規約の略称：INTERNET PROTOCOL）の処理に伴い、当該情報量の使用量が異なってくる。 例えば、通信をする際に、IPV４とかIPV6等の通信網を使用しているが、これらの違いは一般的に、「バージョン」フィールドと呼び、その際に必要とする基本の情報量は、4bit幅と同じものを使用しているが、V4が４進法で表現され、V6gが６進法で放言されているので、同じ通信経路を通っても混乱することはない。 さらに、IPの領域は、32bit（4bytes）単位（つまりヘッダ部分は常に4bytesの倍数）で数えるが、ID（その人の識別をする基本となる名前：IDパスワードのID）は、その基本が、１６ビット幅になる。 以上は、通信工学上の基本的な考え方。 以下、パケット通信料の各社の違いと、その特徴などに触れながら、最初のビット及びバイトの問題を深めても面白いと思う。 但し、あまり論ずる範囲を拡げ過ぎると、多岐に亙り、情報量も膨大になり、論を展開しにくく、読み手も理解しにくくなるので、的を絞った論理展開が有用になろう。 等など、まず、何かのテーマを決め、それに関するそれぞれの基本的な用語を説明し、その内容を明らかにしていけば良いのではないでしょうか？ 例えば、参考になりそうなサイト ①基礎から学ぶWindowsネットワーク：第10回　IPパケットの構造とIPフラグメンテーション (2/3) - ＠IT http://www.atmarkit.co.jp/ait/articles/0304/04/n … ②http://www.biwako.shiga-u.ac.jp/sensei/mnaka/ut/ …
これは「情報工学」の問題というより、「物理」「力学」「物体の運動」であることを理解しましょう。情報工学の知識では解けません。 　問題は、高校物理の範囲ですが、中学校程度の知識でも理解はできると思います。 （１）「加速度」とは、「単位時間当たりの速度の変化率」です。「短時間」を、ここでは「秒（ｓ）」とするようですね。 ①では、12:00～12:05 の５分間（= 300 s）で 0 → 108 km/h に速度が変化しています。ここでは、距離は m 、時間は s で統一しないと面倒なので、108 km/h → 108000 m/h → 1800 m/分 → 30 m/s に変換します。 　つまり、「300 s の間に、0 → 30 m/s に加速した」のですから、加速度は 　　30 (m/s) ÷ 300 (s) = 0.1 (m/s²) ②では、速度の変化はない（速度の変化 0 ）なので、加速度はゼロです。 ③では、①と同様に、12:08～12:11の3分間（= 180 s）で 108 km/h = 30 m/s → 0 m/s に速度が変化しています（今回は「減速」: -30 m/s）。従って加速度は 　　( -30 ) (m/s) ÷ 180 (s) = -1/6 (m/s²) （２）①③では、速度は時間に比例しています。1秒ごとに、加速度の分だけ増えたり減ったりしています。 　つまり ①： v = 0.1 × t (m/s) ②： v = 30 (m/s)　 ③： v = 30 - (1/6) × t (m/s) （３）「積分」というものをご存知なら（２）の速度を時間で積分すれば「距離」が求まりますが、「積分」をご存知ないなら、区間ごとに計算する必要があります。 ①0~30 m/s まで一定加速度で加速しているので、平均速度は半分の 15 m/s です。これで 300 s 走るので、その距離は 　　15 (m/s) × 300 (s) = 4500 (m) = 4.5 (km) ② 30 m/s の一定速度で3分間 = 180 s 走るので、その距離は 　　30 (m/s) × 180 (s) = 5400 (m) = 5.4 (km) ③ 30~0 m/s まで一定加速度で減速しているので、平均速度は半分の 15 m/s です。これで 180 s 走るので、その距離は 　　15 (m/s) × 180 (s) = 2700 (m) = 2.7 (km) 以上を合計すると、走った距離は 　　4.5 + 5.4 + 2.7 = 12.6 (km)
https://oshiete.goo.ne.jp/qa/9276425.html 同じですよね? 算数で 「秒速4mで2時間移動すると何km進めるか?」 って問題に 4*2=8km と答えたらだめです。 単位をそろえる必要があります。 HLS⇔RGBだって、同じことです。 式が想定する「単位」に変換しなければ、正しい値は求まりません。 重箱の隅をつつけば ・HSL 146.6°, 89.3, 44.1 とあるだけでは、 89.3%なのか 89.3‰ なのか 89.3/255 なのかわかりません。 よって0〜1.0に変換することなどできません。 ・RGB Decimal 12, 213, 101 も、 24bitカラー(1色8bit)の 213なのか、 48bitカラー(1色16bit)の 213なのか、213‰なのかはっきりしません。 計算結果から ・HSL 146.6°, 89.3%, 44.1% ・RGB 12/255, 213/255, 101/255 だとわかりましたが。
Sを0～100で表す方式と0～255で表す方式があり、この例では0～100で表す方式の様。 彩度はRGBの3値が同じ状態を0%とし、そこから彩度上昇にあわせて均等に広がっていって、RGBのどれかが0もしくは255に到達した段階で100%となる。 0%と100%が分かれば、あとは現在の値が変動幅のうちの何%になるのかを調べれば彩度が求まる。 彩度0%のときのRGB値は、R・G・Bのうち最も大きな値をMAX、最も小さな値をMINとして (MAX + MIN) ÷ 2つまり灰色。 これをCNTとする。 上記の式で求められた値から彩度上昇にあわせて最小値・最大値が等速で広がっていき、最小値が0、もしくは最大値が255に到達した段階で彩度100%。この変動幅は(MAX + MIN) ÷ 2になる。 この変動幅に対して現在の値の比率が解れば答え。途中式を省略すると 比率= (CNT - MIN)/ 変動幅= (MAX - MIN) / (MAX + MIN) RBG=(12,213,101)だからMIN=12,MAX=213を代入 比率=(213-12)/(213+12)=0.8933333････ Sを0～100で表す絶対値では0.8933333････×100=89.3
ISO22000は国際標準化機構が定めている国際規格ですが、これに準拠して業務を行っていることを第三者が審査して認証する制度があります。 日本では、「日本適合性認定協会」が認証を行っています。 http://www.jab.or.jp/iso/iso_22000/ https://ja.wikipedia.org/wiki/%E6%97%A5%E6%9C%AC … この認定（認証）は、一度認証されればそれで終わりというわけではなく、一定期間ごとに「維持」されていることの確認と（通常半年ごと）、一定期間ごとに審査を受け直して認証の「更新」を行う必要があります（通常3年ごと）。 この定期的な審査の受け直しと「認証」の延長を「更新」といいます。自動車の運転免許証の5年ごとの「更新」と同じです。
ある値 x について |x|= ... + a_2 * n^2 + a_1 * n^1 + a_0 * n^0 + a_(-1) * n^(-1) + a_(-2) * n^(-2) + .. ( ただし nは2以上の整数、 a_kは 0≦a_k<n となる整数) となるような無限数列a={ ....,a_2,a_1,a_0,a_(-1),a_(-2) ....} で xの絶対値を表現することを「n進法」と言います。 よく見かける数値は、 ・負の値なら - 記号を付ける ・この数列aをそのまま順番に並べる ・a_0 は絶対に書く ・a_i>0 となる一番大きな i から、a_0までの間を書く ・a_(-1)とa_0の間に「小数点」を書く ・a_(-1) から、a_j>0 となる一番小さな j までの間を書く というルールに従って書かれたものです。 10進の 567.8 は x=5*10^2+6*10^1+7*10^0+8*10^(-1) ※ a_3,a_4,... は全て0 ※ a_(-2),a_(-3),... は全て0 で求められる値 、ということです。 x= ... + a_2 * n^2 + a_1 * n^1 + a_0 * n^0 + a_(-1) * n^(-1) + a_(-2) * n^(-2) + .. のとき ある2以上の整数mについて x= ... + b_2 * m^2 + b_1 * m^1 + b_0 * m^0 + b_(-1) * m^(-1) + b_(-2) * m^(-2) + .. ( b_kは 0≦b_k<m となる整数) となる 数列bが必ず存在することがわかっています。 つまり、n進法で書こうが、m進法で書こうが、 元の値xにはまったく影響しない、ということです。 整数とか小数とかは、 値xの性質を述べたものです。 よって、n進法とは関係ありません。
そのとおりです。
HSVは人間に入力されることを意図しているので あまり細かく指定出来ても意味ないです。 RGBの形式とは無関係。 RGBで48bitが使われるのは、繰り返し繰り返し画像処理を 行った時に画像の劣化を防ぐためです。
RとGとBが同じ階調になるようにしているのなら、簡単な式になります。 1要素をn bitとすると。 3*n ビットカラー ・2^n階調(nビット) の3乗で 2^(3*n)色 です。 n=1だと 3*1 = 3ビットカラー ・2^1=2階調(1ビット)の3乗で 2^(3*1)=2^3=8色
(1)標準正規乱数を指定した数だけ出力するプログラムを作ってください。 　ヒストグラムのことは考えなくていいです。 (2)複数の数値データを読み込んで、そのデータをヒストグラムにするプログラムを作ってください。 正規乱数のことは考えなくていいです。 (1)(2)どちらも少し探せばサンプルプログラムが見つかるでしょう。 あとは、(1)の出力を(2)に入力するだけです。
やかましいことをいうと 整数 n に対して n=ab となる整数a、bが約数なので 約数にも正負が有ります。 またn=0の時は n=0・a(aは任意の整数) なので0を含む全ての整数が約数です。 でも、実用としては n、a、b>0 で充分なので 仕様を確認すべきでしょう。 それと効率の話ですが 約数は√(n)まで調べれば充分。√(n)より大きい約数は √(n)より小さい約数でnを割れば求まります。 計算量が激減します。
ケータイを持っていない学生が何人かいる。 学生は全てをクルマを持っていない。
これですか？ http://www.kaken-material.co.jp/news/recommend_i … http://www.pretto.biz/service.html
>>解答は「logn」 「２を底とする」という条件が問題文のどこかに有る筈ですが・・・。 >>自分は「log2n(2は底数)」と答えたのですが log2n(2は底数)で正しいですよ。
いくつか理由があります。 1つめの理由として、AIを開発した開発者、もしくはその組織が有利になり、魅力的な商品開発や大きな利益を得ることができます。 例えば、ある自動車会社が高性能な自動運転のAIを開発したとしましょう。 熟練の運転手よりも事故の少ないAIです。 そうすればライバル会社の自動車にはない魅力的な機能として売り出せます。 AIなら人件費がかからないので、バス運行会社が人の運転手を首にして AIを搭載したバスに置き換えるかもしれません。 そうなれば、今までのバスよりもずっと高い値段でもどんどん売れて大きな利益が得られます。 2つめの理由として、人類が危うくなるというのは差し迫った危機ではなく、ずっと未来の話です。二酸化炭素が多すぎると地球が温暖化していずれ住めなくなると言われても、すぐに世界中の自動車を破棄しようとはなりません。危機が差し迫っていませんし、自動車は便利だからです。それと同じように、ずっと先の話なので、現時点で急にAIの開発をやめようとはなりません。開発を止めてしまうと、ライバル会社に出しぬかれるかもしれません。 現時点では、車の運転など、用途を限ったAIを開発することはある程度可能になってきましたが、SFで登場するような人のように思考するAIは今の技術では全然できません。つまり、現時点で研究されているAIは、（前例のバス運転手のように）特定の人の職を危うくする可能性はあるかもしれませんが、人類が危うくなるような高性能なものではありません。 3つめの理由として、そもそも「人が滅亡する」というのは、ひとつの意見であって、科学的に必ずそうなると証明されたものではありません。人類が滅亡するというのは大げさだという研究者もいます。研究者でさえも意見が割れています。まだまだAIが未発達のため、AIが人類よりもはるかに高性能になった時の未来がどうなるか、非常に信ぴょう性の高い予想は現時点では存在しないというのが現状だと思います。
マイクロソフト　オフイスがＰＣに入って居ないのですね、 microsoft office 2013　（ワード・エクセル・その他） を家電店で購入出来ます、 先ずはインストールしましょう。
Microsoft Excel 2016　を単体パッケージで購入。 または Office Personal 2016（Excel 2016を含む） これを購入しよう。 あるいは、 Microsoft Office 365 Solo（Excel 2016を含む） https://products.office.com/ja-jp/buy/compare-mi … を参考に決めてみよう。
A'+B'D+A'B'D'+ABD' =A'(1+B'D')+B'D+ABD' =A'+B'D+ABD' =A'+B'D+BD' ------ A+A'B=A+Bです
社会科学系要素の強い学科に絞れば文系でもあると思いますよ。 例えば、経営学、経営情報学、社会学、情報セキュリティ学、メディア学、心理学なども学ぶ、文系要素の強い学科で、情報理論を企業の経営・管理、メディアの発信、情報管理などに活かすことを目的とした学科です。
圧縮して少なくなった情報から元通りの画像が出力されるというのは素通しではありません。
おすすめの本です。 マスタリングTCP/IP 入門編 http://www.amazon.co.jp/%E3%83%9E%E3%82%B9%E3%82 …
＜データが対数正規分布している場合も，μ±σの範囲内に 約68％のデータが分布し，μ±２σの範囲内に約95％の データが分布するといえるのか？＞ というご質問と思いますが、そう単純ではありません。 対数正規分布はWikiによれば次の様なものです。 ＜対数正規分布は、連続確率分布の一種で、この分布に従う 確率変数の対数をとったとき、対応する分布が正規分布になる。＞ つまり、確立変数をＸとした時に、その対数logXを取り、それを 横軸として、頻度を描くと、その形が正規分布になる様な分布です。 確立変数Ｘを変換した物は、それ自体は具体的な意味を失います。 対数正規分布の例としては、所得分布が知られています。 所得ゼロから始まり、平均所得付近で最大値をとり、高額所得者 の方に減少しながら伸びて行く曲線です。横軸が所得金額、縦軸が その所得の人の人数です。所得１００万円の意味は明確ですが、 Log(100万円)又はlog100（万円）とは何でしょうか？ 範囲の話を説明する為に、均一な分布の例をあげます。 確立変数Ｘ　は　０≦Ｘ≦３　で定義され、その間の頻度は同一と します。数式的には、確率密度関数f(X)は f(X) = 1/3 0≦Ｘ≦3 で与えられます。 これを積分してみます ∫f(X)dX =1/3* [X]0-3 = 1 で確かにf(X) は確率密度関数です。 ここで、変数Ｘ　を変数Y = X^2 に変換した場合の確率密度関数f’(X) を考えてみます。 f’(X) = 2/9* X 0≦Ｘ≦9 となります。 これを積分してみます ∫f’(X)dX =2/9* [X^2/2]0-9 = 1 で確かにf(X) は確率密度関数です。 f’(X) のＸの中央値を 9/2 とし、その中央値から±9/4の範囲を考えて 見ます。この範囲が、X^2 ⇒　X に戻したf(X) ではどういう範囲に なるでしょうか？ 中央値9/2 – 9/4 の範囲の面積は√をとって、1/3 を掛ければ0.2071。 中央値9/2 + 9/4 の範囲の面積は√をとって、1/3 を掛ければ0.1589。 つまり、変換前は対称な範囲も、変換後は非対称な範囲になって います。 f(X) が対数正規分布で、変換X→X^2がlogX、f’(X) が正規分布の 場合は話はより複雑に成ります。 しかし、対数正規分布と正規分布のそれぞれの範囲を単純に同じと 考えてはいけない事は解っていただけると思います。 ＜標準偏差は○○である＞と言う記述が有る場合には、f(X)の標準 偏差と思います。f’(X)の分散は平均値μと標準偏差σの関数です。 https://ja.wikipedia.org/wiki/%E5%AF%BE%E6%95%B0 …
> 映像を再生する必要もあるためpygameは使わずに いや、むしろ「映像を再生するために」pygameのようなモジュールを使う方が有効だと思うのですが。 「元のPython」では、GUI環境はほとんどそろってません。(Tkinterくらい)
>Δt = 1/f_s = 0.001 s の細かさまで信号は扱えるのではないですか？ いや、例えばバイオリンのビブラートを測定したいとします。 つまり周波数成分の時間変化を知りたい。 この時積分範囲を大きくして周波数の精度を上げようとすると 積分範囲がビブラートの周期を超えて、時間変動が 積分の中に埋もれてしまいます。 つまり、ここでいう、時間分解能とは、積分間隔のこと。 サンプリング間隔はどうでもよいのです。
>DBから座標を参照できたとしてもそれをサーブレット？で宣言した変数に格納できません。 これだけでは意味不明。まともに説明しましょう。 どういうコードが書いてどのように値を変数に格納したら格納できなかったんですか？ 格納できなかったというのはどうやって判断したんですか？ サーブレットで変数を使うなんてごく普通のことなので、これだけではさっぱりわかりません。 ＞Eclipseで作成したプロジェクトのHTMLページへ外部から接続する方法がわかりません。 Ecipse& WTPを使ったデバッグ時の話なら、 ブラウザで WTPから起動したTomcat に 接続するだけですが、そういう話ではない？ どうも話が不明瞭です。
質問の趣旨が 「画像の画素１個が、印刷の解像ドット１個に対応する様に印刷したい」 と言う事で有れば、no1様の回答の通り。単なる算数。 画像と言うのがPCなどの画面を言っていて、その画面の解像度が 1600画素。それを200DPIのプリンタで印刷したいという事なら、意味は無い。 200DPIでA4縮小でも出来るし、A3縮小でも出来る。
Ｄフリップ・フロップの動作を理解してないとこの問題は解けません。 まずＤフリップ・フロップの励起表の見方は 　クロック（ＣＬＫ）が加えられる前の出力の状態Ｑ（ｔ）がクロックが加えられた後に変化した結果の出力としてＱ（ｔ＋１）で表されてます。 １）表の一番上は　Ｄ（データ）に０が与えられてる場合、クロック（ＣＬＫ）が加えられる前の出力Ｑ（ｔ）が　０　だとクロックが加えられた後に　Ｑ（ｔ＋１）は０に変化します。 ２）表の二番目は　Ｄ（データ）に１が与えられてる場合、クロック（ＣＬＫ）が加えられる前の出力Ｑ（ｔ）が　0　だとクロックが加えられた後に　Ｑ（ｔ＋１）は１に変化します。 ３）表の三番目は　Ｄ（データ）に0が与えられてる場合、クロック（ＣＬＫ）が加えられる前の出力Ｑ（ｔ）が　１　だとクロックが加えられた後に Q(ｔ＋１）は　0に変化します。 4) 表の四番目は　Ｄ（データ）に１が与えられてる場合、クロック（ＣＬＫ）が加えられる前の出力Ｑ（ｔ）が　１　だとクロックが加えられた後に Q(ｔ＋１）は　１に変化します。 というようになります。この動作をもう少しわかりやすく説明すると「入力であるデータＤはクロック（ＣＬＫ）が入力されるとその入力データの値をそのまま出力Ｑに伝えて保持します。」つまり、クロック（ＣＬＫ）でＤへの入力のデータをサンプリングしてその結果をＱに保持／記憶する機能であるといえます。 　問題では　「クロックに同期して0または１が入力される１ビットの信号線がある」とありますが　この信号が入力になります。　 次に問題では　「この信号線上で入力信号のパターンが1101となった場合」　とありますが、この1101のパターンを記憶できれば何とかなるわけです。それでこのパターンをどうやって記憶するかです。この記憶する機能はＤフリップフロップを複数使って実現します。この場合では入力パターンの１１０１はクロックに同期して送られるのでクロックは4回必要になります。 　実現方法はこちら（http://yahoo.jp/box/KpZ6a6）にアップした回路図を見てください。まずＤフリップフロップを4つ配置します。 次に入力は一番左のＤフリップフロップＡ１のＤ入力へ与えます。そしてＡ１の出力Ｑ１を次のＤフリップフロップＡ２の入力Ｄへつなぎます。更にＡ２の出力Ｑ２を次のＤフリップフロップＡ３の入力Ｄへ繋ぎます。更にＡ３の出力Ｑ３をＤフリップフロップＡ４の入力Ｄへつなぎます。 　そしてクロックＣＬＫはそれぞれのＤフリップフロップのＣＬＫ端子に共通につなぎます。こうすると、 a)　最初のクロックでＤフリップフロップＡ１では入力データDに１が入力されてるとその１を出力Q1に保持記憶します。同時にＤフリップフロップＡ２ではその入力にはA1のQ1がつながってるので最初のクロックが入る瞬間にはQ1はまだ０なのでA2の出力Q2にはその０を保持記憶します。 更にＤフリップフロップＡ３ではその入力にはA２のQ２がつながってるので最初のクロックが入る瞬間にはQ２はまだ０なのでA３の出力Q３にはその０を保持記憶します。 更にＤフリップフロップＡ４ではその入力にはA３のQ３がつながってるので最初のクロックが入る瞬間にはQ３はまだ０なのでA４の出力Q４にはその０を保持記憶します。 　この状況はアップした回路図の右側にあるシミュレーション結果で見ると最初のクロックは時間1msecの少し後でQ1は１に変化し、Q2とQ3とQ4は０のままになってるのが分かります。すなわち、Q1=1,Q2=0、Q3=０、Q4=0に変化します。 b)　次に二番目のクロックが入力される瞬間はA1に入力されるデータは１のままですからQ1はその１を保持記憶するので１のまま変化しません。Q2はA2の入力Q1は１になってるのでその１を出力Q2に保持記憶します。二番目のクロックが入る瞬間にはQ２の出力はまだ０ですのでA3の出力はその０を保持記憶します。A4についても同様に０をQ4に出力します。 　この状況はアップした回路図の右側にあるシミュレーション結果で見ると、二番目のクロック、時間で2msecの少し後で、　Q1=１、Q2=１、Q3＝０、Q4＝０に変化します。 c)　次に三番目のクロックが入力される瞬間はA1に入力されるデータは0になってますのでQ1には０を保持記憶します。クロックから少し遅れてQ1は１から０に変化します。次にA2の入力であるQ1はクロックが入力される瞬間はまだ１なのでQ2は１を保持記憶しますのでQ2は１のまま変化しません。次にA3の入力Q2は１なのでQ3は１を記憶します。その結果Q３は0から１に変化します。次にA4の入力であるQ3はクロックが入る瞬間は０なのでQ4は０を保持記憶します。その結果、Q4は０のまま変化しません。 　この状況はアップした回路図の右側にあるシミュレーション結果で見ると、三番目のクロック、時間で3msecの少し後で、　Q1=０、Q2=１、Q3＝１、Q4＝０に変化します。 d)　次に四番目のクロックが入力される瞬間はA1に入力されるデータは１になってますのでQ1には１を記憶保持します。クロックから少し遅れてQ1は0から１に変化します。次にA2の入力であるQ1はクロックが入力される瞬間は0なのでQ2は０を記憶保持しますのでQ2は１から０に変化します。次にA3の入力Q2はクロックが入る瞬間は１なのでQ3は１を記憶保持しますのでQ3は1のままで変化しません。次にA4の入力であるQ3はクロックが入る瞬間は１なのでQ4は１を保持記憶します。その結果Q4は０から１へ変化します。 　この状況はアップした回路図の右側にあるシミュレーション結果で見ると、四番目のクロック、時間で4msecの少し後で、　Q1=1、Q2=0、Q3＝１、Q4＝1に変化します。 　結局四番目のクロック入力後にQ４からQ１の出力には　１１０１　のパターンが記憶されてることが分かります。問題ではこのパターン場合のみ１を出力することが最終目標ですので、アップした回路図のようなNANDとAND回路を組み合わせてこのパターンの時のみ出力を１にします。
そう.
>期待動作は >1900 佐藤 >2000 田中 >3000 山田 >になってtxtに上書きすることです 現状からだと道は通そうですねぇ…(つまりいろいろ足りない) 結果だけの問題(C言語のプログラムでやらなければならない。という縛りがない)なら、sortコマンドとかで終わりそうですが。 >あと２次元配列にしなきゃいけないみたいです 二次元配列ではなく、構造体の配列とするべきでしょう。 テキストファイル内の1行を構造体1つに納められるように。 まぁ、char b[64][名前の最大文字が格納できる長さ]の二次元配列でもソート時の入れ替え処理でまるっと入れ替える必要はあるでしょうけど。 ちなみに、読み込みが64個(用意した配列サイズ以上)になった場合は読み込みを中断させないと、OSに殺されます。たぶん。 >63までではなくaの数だけチェックしたいのですが 配列aは全部で64個あります。 「読み込めた数」ということならば、読み込み処理が終了した時に「いくつ読み込めたのか」を記録しておく必要があります。 # fscanf()しているループが終了した時のiに値が入っていますが、その後で破壊されます。ので、どこかに保存する必要があります。 上書き…だといろいろと面倒ですので、読み込みが終了したらfclose()で一度閉じる。 構造体のソート処理が完了した時に新規作成でファイルをオープンして書き出す。 ということになるでしょう。 # 一時ファイルに書き出して、完了後に元ファイルを削除し一時ファイルを元ファイルの名前に変更する。という方法もある。 # こちらの方が正常に完了するまで元ファイルの内容が失われないのでおすすめではあるが…いろいろと手間が掛かることは確かですな。 # というわけで、別ファイルに出力するようにして完成まで続けるか、printf()でそのまま標準出力に出しておく…というのが妥当でしょう。
情報の送り出し側が、速度MAXで情報を送ってくれる場合のみ、それが成り立つでしょう。 ところが、あなたがアクセスしている先は、同時に何件ものアクセスがあるかもしれないのです。 正確な用語は知りませんが、途中の、スポットとスポットの間だってそうでしょう。 十分すぎる速度が出ているとは限らないでしょう。
「スパイ衛星を使えば狙った人物(狙った場所)の状態をずっと監視しづけられる」というのは映画やドラマでのフィクションでしょう。 静止軌道からの超望遠でもないと無理です。 特定地域の上空に待機し続ける人工衛星はまず無理ですからね。 ついでに…赤外線だと雲とかで拡散するでしょうし。
＞一重縦線で良いのでは？ 良いと思います。
for文を二つ減らしました。 1. trueとfalseを入れ替えることで最初のtrueを代入するfor文を除去 2. 素数を判定しながら表示することで最後に素数を表示するfor文を除去 class Prime { public static void main(String[] args) { int max = 300; boolean[] a = new boolean[300]; for(int i = 2; i < max; i++) { if(!a[i-1]) { System.out.println(i + " "); for(int j = 2; i*j <= max; j++) a[i * j - 1] =true; }else continue; } } }
疎行列の情報をどのような形で表すのでしょうか？フル行列で情報を持つわけではないですよね。 私の方法ですけれども、n行目に非ゼロ要素がいくつあるか、n行目のm番目の非ゼロ要素は何列目か、そこの非ゼロ要素の数値は何か、というデータで格納させています。 そしたら行列積は割と簡単に書けると思います。
00000 00000 〜 11111 11111 は 、0〜1023の十進数に対応する2進数のパターンになっています。 ということは 0の2進数の0/1 をシートに 1の2進数の0/1 をシートに ... 1023の2進数の0/1 をシートに というプログラムにすればいいわけです。
メールアドレスだけでは、相手を特定することはできません。 だから、詐欺メールやらスパムメールがいっぱい送られて来ます。 メールは、単にサーバー（そのメールアドレスを管理している通信会社などのコンピューター）のメールアドレスに相当する場所に保存されるだけで、それをあなたがパソコンなりスマホで読み出しに行っているだけです。サーバーのその場所を誰が使っているのか、サーバー管理会社も登録時に入力した情報以上のことは知りません。
>すみません...自分で解いたところ、 >②150.46.1.33~150.46.1.94 >③150.46.1.95 これはサブネットマスクが26bitの場合っぽい ですけど、なんかムチャクチャですね。 どう計算したのでしょう？ サブネットマスクが28bitなら、機器と ブロードキャストアドレスの割当てに使えるのは 32―28=4bit。だから機器で使えるアドレス数は 15個です。
> この図が示すように3,4図は1~128までと129~256までは対称形となっています 複素FFTのプログラムに入力したのが（複素数値ではなく）実数値を取る関数、すなわち虚部が全部0である、ということがその理由です。（「1~128までと129~256まで」とお書きだが、「0~127までと129~255まで」であるはず。後半の部分は周波数「-127〜-1」の成分です。）冗長な結果が出るのは、複素数値を取る関数のFFTが計算できるプログラムに、わざわざ虚数部分のデータとして全部0を突っ込んだせいです。 　実関数f(t)のFFTの結果を F(ω)+iG(ω) (F, Gは実関数）とすると、f(t)が何であるかには関係なく、 　　F(ω)=F(-ω) 　　G(ω)=-G(-ω) になる。すなわち実部が「線対称」虚部が「点対称」になります。 　（なお、N=256点のFFTをやっているために、F,Gは周期Nを持つ関数 　　F(ω) = F(ω+N) 　　G(ω) = G(ω+N) になる。なので、「129~255まで」は「-127〜-1」と同じである。これはfが複素関数だったとしても同じ事です。） 　実関数f(t)に対して、純虚数値を取る関数 if(t)のFFTの結果はi(F(ω)+iG(ω))ですから、-G(ω)+iF(ω)、すなわち実部が「点対称」虚部が「線対称」になります。 　 　これらのことを利用して、実関数fのFFTの結果F(ω)+iG(ω) と、実関数pのFFTの結果P(ω)+iQ(ω) (F,G,P,Qは実関数)を一度に計算するということができます。すなわち 　まずf(t)+ip(t)のFFTを計算すると、結果U(ω)+iV(ω) (U,Vは実関数)は 　　U(ω)= (F(ω)-Q(ω)), V(ω)=(G(ω)+P(ω)) になります。 実部 U(ω)=(F(ω)-Q(ω))のうち、Fは「線対称」、Qは「点対称」ですから、 　　F(ω) = (U(ω)+U(-ω))/2 　　Q(ω) = (U(-ω)-U(ω))/2 虚部 V(ω)=(G(ω)+P(ω))のうち、Pは「線対称」、Gは「点対称」ですから、 　　P(ω) = (V(ω)+V(-ω))/2 　　G(ω) = (V(ω)-V(-ω))/2 　つまり、二つの実関数f, pを一度にFFTできるプログラムに、p(t)=全部0、というものを突っ込んだのが、ご質問の状況です。
データは容量によって複数個に分けられます。 ＊パケット ネット環境の有る世界中へバラバラに送信します。 受ける時に、順序を並べて保存します。 私もこれくらいしか理解できていませんが、特に困ったことはありません。 数年前に、ＮＨＫの高校口座で見ました。
＞中学校の技術の先生になるのが夢です！ ☆中学の技術教師になるには、 「中学校教諭免許状（技術）」が必要です。 →なので、 この免許を取得できる 4大の、 ・教育学部教育学科技術教育専攻 ・工学部 ・理工学部 ・・・に進学する必要があります。 http://www.mext.go.jp/a_menu/shotou/kyoin/daigak … ＞どちらの高校に進んだ方が良いと思いますか？ ＞工業高校から教育学部にいけますかね？ 普通科に行ったほうが無難。 →工業高校の、教育大への指定校推薦枠は、1人分か2人分くらいしかないので、 高校1・2年の時の成績が、クラスで1番。 ・・・とかじゃないと、 推薦枠もらえない・・・。 ☆「中学校教諭免許状（技術）」を取得するには、 高校卒業して、4大に進学したあと、 4大で、 ・技術科教育法 ・金属加工実習 ・木材加工実習 ・電気実習 ・機械実習 ・農園または畑での、栽培実習 ・介護等体験事前事後指導 ・教職実践演習 ・・・といった授業に参加し、 全ての科目を勉強する必要があります。 →しかし、 放送大学などの通信制大学だと、 こういった実技の科目は、一切用意されておらず、一切勉強できませんから、 通信で、「中学校教諭免許状（技術）」を取得することは、一切不可。
脳波で直接病気を治すことは出来ませんが、脳波によって手足を使わ ずに機械を操作するジャンルは誕生しています。 脳波制御と言う分野です。 http://natgeo.nikkeibp.co.jp/nng/article/news/14 … （NATIONAL　GEOGRAPHICS) インターネットを媒介して遠隔地の人の腕を動かしたとそうです。 また”脳波制御”で検索すると、沢山の記事が出てきます。 いまはまだこの段階ですが、 生物が自分の破損した肉体を治すときの脳波やそれに類するシグナル を記録し、薬の代わりにすることも出来るかもしれませんね。 一方で細胞の研究もされています。 細胞同士が特定たんぱく質の射出と受動により交信しているのを利用 して多くの薬が開発されています。 この細胞の構造がわかってきています。 人間の内臓に近い多くの器官を持っているようです。 そして、言葉の変わりにたんぱく質で交信しています。 細胞ひとつが人のように意識に相当するものを持っていると証明され るときが来るかもしれません。 私たちの脳の研究も進んでいます。 これまで神秘に包まれていた部分が解明されてきています。 人は褒められたときしか学習しないという結果が科学的に証明され ています。 ３D技術の世界では、ポリゴンで形成された人形が人のように動き はじめています。 ご存知のように、 コンピュータソフトが歌を歌い、ヒットしています。 個別の分野として成立してきたものが統合されつつあります。 また情報というものを暗記する必要が無くなって来ています。 検索するという概念に置き換わっています。 つまり、インテリジェンスの意味が変わってきています。 沢山の本を読んで知識を身につけた人が道化になっています。 このため私たちを導く指導者には、 知識以外の別のモノが求められてきています。 コンピュータと電子制御デバイス、これらがネットワークで繋がれ た為に各研究分野が加速的に進歩しているようです。 一方で、最先端と私たちの認識が乖離しつつあります。 SFやオカルトとして描かれている娯楽があったとします。 しかし、 「それ既に製品になってるよ？」 という笑い話がおきそうなんです。 「これはヤバイ」 とそちらに目を向けた人には、エネルギッシュで光に満ちた世界 が見えてきます。 昨今では暗いニュースや悩みが多いですから、 NATIONAL　GEOGRAPHICSはお勧めです。 両者の雰囲気、ノリの違いを感じてください。 滅び行く定めと、光り輝く誕生の両極を見るようですよ。 「魔法や超能力みたいな技術を科学の力で誕生させる？ 　何言っているんだい。 　科学ってそういうもんだろ？ 　無理っていっちゃったら、僕らは何してるのさ。 　無理なのが嫌なんだよ、僕らは。」 無理だから諦めろという話題よりは、健全ですよね。 以上、ご参考に成れば。
No.3の回答へのお礼を受けて ＞まず、j=1に固定してi=1~64を1DのFFTにかけます。結果,i=1~64の成分が複素数で出力されます。それをg(i,1) (i=1~64)に保存し、j=2,3,4...64と行くと、g(i,j),(64x64)ができます(図の赤字部)。次に、i=1に固定してg(1,j),j=1~64を1DのFFTにかけ、s(1,j),j=1~64に格納し、i=2,3,4..64と進めると、s(i,j) (64x64)が算出され、２次元フーリエ変換となる、という考え方です。 はい、この考え方で合っています ソースコードは多分、前半部分がbit逆順配列への並べ替え、後半部分がFFTだと思います コメントがないので解りづらいですが、頭のなかで計算する限りあっていると思います
こんにちは！ 拡張子「itp」は、 主に「BioWare Aurora Engine Palette」という海外の会社の、 ファイルとして使用されているもののようです。 その他のファイルに定義されているようで、単体では意味がないみたいですね。ご参考にどうぞ！
結局現状のＡＩなんて既存の言語で書かれてるものだし。 プログラミングだけやっとけば大丈夫。そこでつまずくようなら先は厳しいかもね。
｢情報通信技術｣が？　それとも英語が？ 　どちらも自分で頑張りましょう。何のための留学？
少なくとも fscanf(fp,"%d\n",&e[6]) は明確におかしい.
予算が許すかどうかですが、動かすことだけなら、ゲームパッド http://www2.elecom.co.jp/peripheral/gamepad/jc-u … が、キーボードのキー割当が可能なタイプのものです。 足でも操作したいと言うことであれば、 http://www.pluto.dti.ne.jp/~kosugi/USBSW/98foot. … にある、フットスイッチや、プッシュスイッチ（大きなもの）のうち、/KM がついているものが、キーボード割当可能な物です。 こういうものはいかがでしょうか？
GPIBを経由したデータ授受をシミュレーションしたいのか、計測器から取り込んだデータの処理をシミュレートしたいのか、全体をスルーした「ネットワークアナライザ」の機能まで含めてシミュレートしたいのか、そのレベルによっていろいろではないでしょうか。 　GPIBを経由したデータ通信をシミュレートしたいなら、こんなものがあるようです。 http://sine.ni.com/nips/cds/view/p/lang/ja/nid/1 … 　データの処理をシミュレートしたいのなら、シリアルデータを模擬したデータを作成するソフトが必要でしょう。これは、目的とする処理機能の確認に使いたい「やらせ」データをジェネレートするものが必要なので、自作するしかないかな？　という気がします。 　全体をスルーした「ネットワークアナライザ」の機能まで含めてシミュレートしたいのであれば、GPIBインターフェースを備えた別PCが必要になるでしょう。そこにどんなシミュレーション機能が必要か、何とも言えません。「ネットワークアナライザ」側の仕様を確認して、それに合わせたものを作るしかないと思います。 　「ネットワークアナライザ」の機能に、必要なら下記のようなフリーの「ネットワークアナライザ」ソフトを使うことも考えられますが、こういったものが必要か、使えるかどうかは、やりたいこと次第だと思います。 http://www.vector.co.jp/vpack/filearea/win/net/n … http://www.forest.impress.co.jp/library/nav/genr …
No.4です。 すみません、酔っ払って頓珍漢な回答を書いてしましました。 No.4の回答は無視してください。 MB単位の情報量ですから、bit数の比率で計算すればよく、No.1さん、No.3さんの考え方で問題ありません。 　　16bit * 44(kHz) * T(sec) = 512MB 　　 8bit * 22(kHz) * T(sec) = 128MB　　　←これが求めるもの お騒がせしました。
インチのままで計算して後からセンチメートルに直せばいい。 160dpiは160 dot per inch（dot/inch）だ。 1インチあたり160ドットの画素があるという意味。 設問の意味が分かったら中学生どころか小学生でも解ける問題になってしまった。 高校生ならあとは分かるだろ。 ※一般的に1インチ＝約２.５４センチメートルだが、答えを見る限り２.５センチメートルとして計算するようだ。
y(n) = Σ{k=0, 1,…,∞} h(k)x(n-k)
会社で取得するようにということなら、すでに取得している人がいるだろう。 その人から直接アドバイスをもらってはどうか。 「苦手だから」と言っているだけでは何を理解していないのか判断できないのでアドバイスなんてできない。 参考書を読んで「これ何？」と言う質問なら十分答えることはできるんだがな。 前の回答者さんの「ユーザーのための資格」というのはちょっと飛躍しすぎな気もするが、まあ的外れではない。 普段使っている情報機器のちょっとした仕組みとルールを覚えるだけだ。CPUに組み込まれているレベル２キャッシュのヒット率を計算しろなんて問題は出ないから安心してよい。 まずは分からない用語について自身で調べる事から始めるんだ。 英語などの外国語でも分からない単語があればそれについて調べるだろ。それと同じだ。
struct 計算結果 { double 最大; double 最小; double 平均; } // アドレス渡しで戻す void 求める(struct 計算結果* r) { r->平均 = 求めた値; } ... struct 計算結果 report; 求める(&report); 処理(report.平均); // 戻すの別案 struct 計算結果* 求める() { struct 計算結果* r = malloc(...); r->平均 = 求めた値; return r; } ... struct 計算結果* report = 求める(); 処理(report->平均); free(report);
コンピューターゲームや携帯（スマホ）などのゲーム開発であれば、現代だったら、ハードウェアの知識やプログラミングの知識に関しては、基礎的なものだけで充分なような気もします。 実際の開発会社で必要としているのは、グラフィックや3Dモデラーなどでしょうね。 そう考えると、情報工学でも電気電子工学科のどちらも、本質的では無いと言えます。 プラットホームとしての、OSやハードウェアはゲームソフト開発会社が開発しているわけでも無いでしょう。 コンピューター黎明期には、ハードの能力が弱かったので、早く動作する為のアルゴリズムや、コーディングがしっかりしていないと、ゲームとして機能しませんでした。 ただ、現在は、そのような事は無いと思います。 有る程度は、力技でコーディング出来てしまいますよね？ 進みたいゲーム制作に関わる会社の求人情報を見てみたら、どのような分野の人材を必要としているのかがわかると思いますよ。 どのような会社に就職したいのかを考えた方が、結論が出しやすいと思います。
反例: 0000 1111 1000
(1) 2進カウンタ(0〜1までカウントできる)はどんな風にFFを継げるかわかりますか? そうすると、FFはいくつ必要でしょうか? 4進カウンタ(0〜3までカウントできる)にどんな風にFFを継げるかわかりますか? そうすると、FFはいくつ必要でしょうか? 8進カウンタ(0〜7までカウントできる)にどんな風にFFを継げるかわかりますか? そうすると、FFはいくつ必要でしょうか? .... ここまでは答えられますか? 答えられたなら、 2^n進カウンタ(0〜2^n-1までカウントできる)はどんな風にFFを継げるか、 そうすろとFFがいくつ必要か ※ ただし、 nは0以上の整数 がわかるはずです。 500は 2^n-1 ではありません。そのため、この関係からそのまま求めることはできません。 しかし ・ 2^(n-1)-1 までのカウンタでは 500 まで数えられない 　 2^n-1 までのカウンタでは 500 まで数えられる というのが 問題の条件だということはわかります。 よって、そうなる n を求めれば、それに対応するFFの数もわかります。 (2) 各FFが2進数の桁に対応していることを理解できていますか? 極普通の 2進→10 進変換の問題です。 (3) T-FFを1 段通すと、入力周波数に対して出力周波数が何倍(何分の1)になっているかわかりますか? X 倍だとすると 2段通すと、 2段目は1段目で X倍になったものが入力周波数となり、それをX倍した周波数が出力されるので、最初の入力周波数を基準にすれば X ・ X = X^2 倍になります。 3段通すと、 3段目は2段目で X^2倍になったものが入力周波数となり、それをX倍した周波数が出力されるので、最初の入力周波数を基準にすれば X^2 ・ X = X^3 倍になります。 以下同様です。
タイミングチャートを描けばわかるはず.
なんだよ「相性」って. .... えぇっと, これなにをしたいんだ?
前者回答にもありますように１枚の画像から３次元空間を作りだすのは不可能ですが、違う角度から物体を２枚以上撮れば１台のカメラでも３次元座標を求めることができます。 ただし１台で撮影する場合は静止物体に限ります。物体が動いている場合は２台以上のカメラが必要になります。 一番簡単な方法としては視差という方法を用いて計算することができます。 例えば２台のカメラを水平にdの距離だけ離して置き撮影します。 ある物体がカメラAでは角度αの位置にありカメラBでは角度βにあったとき、カメラと物体を結ぶ２直線の交点をCとします。水平軸と交点Cの垂直線の長さとカメラの距離dから、ある物体の距離(３次元成分)を算出することが可能です。 ヒトの眼が２つあるのは、こうした物体との距離を測るためです。 こういった研究は視差という手法以外にもかなり盛んに行われています。以下に例として一つ論文を取り上げておきます。 参考になれば幸いです。 https://www.jstage.jst.go.jp/article/kikaib1979/ …
http://get-mobilebb.com/v001s010c026h0002r001.html ↑「16QAMの波形」でネット検索した結果です。 波形の解説も付いています。 「何でも聞いてしまえ」ではなく、「お勉強が先」です。
それぞれに対して, 理由をつけて O(なんとか) って書けばいいです.
私の経験で恐縮ですが（一般論になるかどうか解らないので）、それを元に回答させていただきます。 以前マーケティング部の部長として働いていた時には、この問題でそうとう悩まされました。 ご存知だとは思いますがマーケティングの仕事は、営業部、技術部開発（設計）部、経理部、人事部などなど全ての部署の橋渡しをし、製品が売れる仕組みを作る仕事なので、部門間対立は本当に困ったものでした。 まず本来営業部は売るのが仕事ですが、実態としては売れない理由を探していると言えます。 その理由として多くの営業マンは製品のせいにします。 「この製品は他社のはこうなのに、これはここがこうだから売れない」「この機能が搭載されていないから売れない」などです。 当然それを設計開発などした技術部は「ふざけんな！」となります。 ここでまず営業部への不満の種が発生します。 一方技術部は、物を売るという行為をひどく簡単な行為だと認識している節があります。 基本的に職人気質な方々ですので、自分たちの技術に自信を持っており、加えて頑固者が多いです。 「自分たちの造ったこの製品が売れない訳が無い」「売れないのは営業がバカだからだ」となる場合が多いです。 元々プライドの高い方が多い技術畑の方々ですので、その不満は態度にでやすいです。 しかし実態は、最新技術であっても市場のトレンドから離れていたりして、「なんか力入れているそこの機能はどうでも良いんだけど、お客さんはこっちの機能アップを求めているんだよね」という製品ができあがったりします。 営業部はその製品を見て「おい、またこんなしょうも無いもん出すのかよ！これよりも、あれのバージョンアップ版早く出せよ！」となったりします。 そして営業部、技術部共に「会社は自分たちのお陰で成り立っている」と思っています。 これが常につきまとっていました。 競合他社のマーケティング担当者と話をしても同じような事を仰っておりましたので、おそらく多くの会社で同じような状況になっていると予想されます。 営業部にはハンドクリームをバターだと言って売ってくるくらいの営業力が欲しいし、技術部にはもっと市場の声に耳を傾けたお客さん目線の物作りを頑張って欲しいと感じます。 営業部が言うように完璧な製品ができあがって困るのは、その営業部なんですけどね。 素晴らしい製品であれば、営業マンに高いお給料を支払わなくても、その辺から女子高生でもアルバイトで雇ってくれば売れますからね。 逆に技術部は、自分よがりな製品を造っても、営業部が頑張って売ってきてくれるから、お給料が貰えるんですよね。 働く仲間なんだから、みんなもっと仲良くしようよと思います。
ああそうか, 1 はたとえば void *foo(void *s, int c, size_t n) { return memset(s, c, n); } でもいいんだ.
No.1です。「お礼」に書かれたことについて。 ＞定義と言うのは(1)(2)のことでいいのでしょうか？ はい、そうです。 2進数だと、（１）は、「X の1の補数は、Xの各桁の０と１を反転させたもの」です。Xと「Xの１の補数」を加えたものは、「すべての桁が１」になりますから、これにさらの「１」を加えると、全桁が「０」になります。桁あふれした最上桁は、「オーバーフロー」して消えます。 2進数だと、（２）は、「X の2の補数は、Xの各桁の０と１を反転させたものに1加えたもの」です。Xと「Xの２の補数」を加えたものは、桁あふれして「すべての桁が0」になります。桁あふれした最上桁は、「オーバーフロー」して消えます。
「引数strで渡された文字列を表示」するのに, どうして「キーボードから文字を入力」なんてことしなきゃならんのだ? まあそれはおいておくとしても, そこに自分で書いたことをプログラムにするだけだ. なにがわからない?
30年ぐらい IT関係は素人です、本業じゃないので わけあって一度試験を受けた事がありますが、試験問題の内容は全て知ってる事だったので、勉強時間そのものは皆無です、24時間も要りません
パンタグラフ（拡大縮小器）使って描けばいいんじゃない https://www.google.co.jp/search?q=%E3%83%91%E3%8 …
下記などを参考に。 　なお、試験料、実務経験条件、資格を維持するための教育費用を考えると、個人で取得するようなものではないと思います。 http://www.isaca.gr.jp/cism/ http://www.shikakude.com/minsikakupaje/cne.html
大学側で資料請求等受け付けているかもしれないので、問い合わせてみてはいかがですか？
強度変調信号　ということは、アナログのCWを基本に考えれば良いと思います。 キャリア強度を変調する以上、サイドバンドが発生します。 これが変調速度が速いと、広くなりますね。 帯域幅-3db　で規定した周波数以上に、広くなった場合、波形の再現率が落ちるという項目だと思います。単なるデジタルキーイングとサイン波などの使用を想定しての　仕様と思われます。 送信側のスペクトルを観察して、帯域幅-3db　で十分収まるかどうかが　肝だと思います。
広告が表示されているとするなら、Outlook.com かもしれないですね。 取り合えず文字を印刷すれば良いなら、適当なテキストエディタにコピペして 印刷するという手もあります。 >最初のページしか印刷できなくて困っています。 これの意味が判らないですね。 Outlookの印刷機能で印刷しているのか? それとも、画面全体を印刷する別のソフトで印刷しているのか? ちゃんと、環境を調べて、書いた方が良いですね。 そもそも、MicrosoftOffice は正規に買ったものなの?
帰還量の求め方は、先ず教科書に従って、交流等価回路を描く。 次にRE'をショートしたゲインA1を求める。 RE'のショートを解除したゲインA2を求める。 帰還量Fは（A1-A2)である。 必要ならこれをdBにする。 帰還率βを求める必要があれば、F=A1β+1より計算する。 【重要】交流等価回路とゲインの求め方は、教科書によって異なるので、使っている教科書に従うこと。 例えば、僕の使っていた教科書では添付図のようになり、簡単に計算できます。 面倒なんで、計算しませんが。
こんにちは。 Moryouyouと申します。しっかりと理解してください。 プロの技術者でも意外と知らない人がいます。 答えを出すための考え方（原理） 同一サブネット内にあるＩＰアドレスが正しい設定となる。 同一サブネットにあるかは、サブネットマスクとの論理積が 同じになるかで決まる。 サブネットマスク　255.255.255.128 2進数になおすと　1111 1111.1111 1111.1111 1111.1000 0000 セグメントX側ルータのIPアドレス 172.16.0.1 2進数になおすと　1010 1100.0001 0000.0000 0000.0000 0001 サブネットマスクとの論理積は 　　　　　　　① 1010 1100.0001 0000.0000 0000.0000 0000 例えば、B　172.16.0.130 2進数になおすと　1010 1100.0001 0000.0000 0000.1000 0010 サブネットマスクとの論理積は 　　　　　　　② 1010 1100.0001 0000.0000 0000.1000 0000 ①と②は値が違う。 よってBは同一サブネットにあるアドレスではないため正しくない。 となる。 いかがでしょうか？ 分かりましたか？
歯車による速度変換の比を言い、 噛み合う2つの歯車の歯数の比で表されます。 車両の場合では、変速機およびデフのギヤ比を言います。 変速機の各段の減速比とデフ比(最終減速比)の積をトータル減速比と呼び、 数値が大きくなるほど同一エンジン回転に対し駆動力は大きくなりますが、速度が出ません。 小さい場合はその逆です。変速機の各段の減速比をみると、それぞれの段の使用範囲がわかります。
農工大と電通大は良く知っている大学です。 電通大は、一般的な工学部と同じで就職も良いですが、農工大の農学部は一流企業への就職は難しいです。 農学部も研究室によっては研究に時間も取られるので、時間があるとは言えません。 農工大にするにしても、工学部をお勧めします。
#1 さんの策、でしょうネ。 y軸を「第2軸」に設定、「軸のオプション」にて、その表示範囲を「自動」から「固定」に切り替えて設定。 そのスケール範囲だけ見れます。 　
たとえば、参照 URL みたいなこと？ 　 参考URL：http://itpro.nikkeibp.co.jp/article/COLUMN/20060 …
#1さんの回答と同じですが、要するにmemcpyは指定したバイト数でコピーする長さが決まります。 memcpy(a,b,16); はaとbの型に関係なく、16バイトをコピーします。 たとえば配列aとbが char a[16], b[16]; でchar型が1バイトなら for(i=0;i<16;i++){ a[i]=b[i]; } は上のmemcpyと同じです。 もしaとbが int a[16], b[16]; でint型が4バイトなら上のfor文は256バイト(16バイト✕16回）をコピーします。
どちらも、基本的には、線形帰還シフトレジスタ（LFSR）を用いた、PRBS（Pseudo Random Bit Sequence）符号です。 http://ja.wikipedia.org/wiki/%E7%B7%9A%E5%BD%A2% … 簡単に生成できて、拡散符号として使うのであれば十分な性能を持っている。 （例えば、計算機シミュレーションなんかで、乱数として使うには性能が悪すぎますが）
ImageJ関係なく、 > １．白紙（A５版）に五角形をフリーハンドで書く > ２．スキャナで取り込む（条件：600dpi，JPEG） > ３．パワポ上でこの五角形の頂点を「図形描画＞フリーフォーム」でクリックしつつトレース この時点でパワポは５点の座標を知ってるわけですから、VBAで計算してしまう方が簡単だし、画像化する事による余計な誤差が入らずに済むのでは。 ５点取り出すVBAですと、Power Pointの１枚目のスライドに、５点以上のフリーフォームが１つある状態で、 ・Alt+F11でVBE起動。 ・左側プロジェクトエクスプローラの対象プレゼンテーションを右クリック-[挿入]-[標準モジュール] ・下記のVBAをコピペ －－－－－ここから－－－－－ Sub GetPentaInfo() 　Dim x(5) As Single 　Dim y(5) As Single 　Set myDocument = ActivePresentation.Slides(1) 　With myDocument.Shapes(1).Nodes 　　For iCount = 1 To 5 　　　pointsArray = .Item(iCount).Points 　　　x(iCount) = pointsArray(1, 1) 　　　y(iCount) = pointsArray(1, 2) 　　　MsgBox x(iCount) & ", " & y(iCount) 　　Next 　End With End Sub －－－－－ここまで－－－－－ ・パワーポイントに戻り、Alt+F8でマクロ呼び出し、「GetPentaInfo」を実行 で、５点の座標が表示されます。 あとは、三平方の定理で辺の長さを求めたり、３点のなす角なんかを求める式で角度計算とか。
境界線をとるときに、境界線の拡大をするのはどうでしょうか？ http://helpx.adobe.com/jp/photoshop/using/adjust … 指定したピクセル数による選択範囲の拡張または縮小
全く同じ質問がありました。 http://detail.chiebukuro.yahoo.co.jp/qa/question … http://detail.chiebukuro.yahoo.co.jp/qa/question … 教授が海外へ出張とのことですが、学内にその教授の研究室はありませんか？ 研究室には大学院生を含む先輩方がいますので、質問に行けば教えてくれる可能性があります。 大学によるかもしれませんが、ティーチングアシスタント制度があるなら積極的に利用してみましょう。
「ハミング符号」は方式の名前であって、実際の符号化の演算式 は『ハミング符合の方式のルールに従っていれば』自由に設定す ることができます。 従って、検査ビットだけ見せられても、そのビットの並びを作る 方法(演算式)を知ることはできません。回答No.1さんがおっしゃ る通り、『「そ～いうハミング符号」を使ったから』としか答え ようがないのです。 何らかの書籍から入手したデータなら、その書籍に符号化の演算 式が載っているのではないでしょうか。
どこが解らないのかを書かないと、宿題の丸投げだから誰も答えないよ。 それにC言語には入出力の概念がないから処理系を明示しないと駄目だ。
まずは、Excel のようなスプレッドシートに、それらの情報を１行の各列に入力して、マスターデータを作っておけば、あとはなんとでもなります。 『タイトル』『作者』『男女の人数』『ジャンル』『読み手側の評価（５段階評価を予定）』 の各列ごとの順に昇順・降順での並び替え(ソート)をすることも Excel 単独の機能でもできますし、 目的の『ジャンル』のものを固めて表示したければ、『ジャンル』でソートしてやれば、同じ『ジャンル』が連続した行にきますし、 さらに、VLOOKUP とか HLOOKUP とかで、該当するものを見つけ出すという Excel の関数を駆使したり、VBA でマクロ以上の細かい操作をさせることもできます。 ただ、その大前提は、そういう検索に提供するマスターデータベースがしっかり間違いなく作られていることで、台本数がそんなに多くなければ、人間が見るだけでも探し出すのに苦労しないかもしれない、と気づくかもしれません。案ずるより産むがやすし、の典型例です。がんばってください。
チャートというのは Chartコントロールのことですかね。 以下のページに Sin, Cos のグラフを描くサンプルがあるので、 これを参考にすれば2次関数グラフもできると思います。 http://whoopsidaisies.hatenablog.com/entry/2013/ …
たしかに、「仮数部の最上位桁が1」という文章だけでは、どこに最上位の1を持ってくるかが不明です。 しかし、その下の図に「小数点の位置」と書いてあります。 これは、 seeeefffffffffff というビットパターンがあったら 0.fffffffffff * 2^eeee (s=0) -0.fffffffffff * 2^eeee (s=1) と解釈する、ということです。 「仮数部の最上位桁が1」というのは、 fffffffffff のビットパターンが 1xxxxxxxxxx という形になるようにする、というこです。 > なぜ1.01×2^0としてそのまま扱わないのか良くわかりません。 では、これを実際に符号化してみましょう 正なので s=0 0乗なので e=0000 　まではできますが 1.01から仮数部fへの変換ができません。 ・fには整数部が無い ・小数部だけ見ると、最上位が0なので規格に合わない ここで 「数値の一番上を1にしてそのまま」→ f=10100000000 としてしまうと、今度は読み出すときに 0.101 * 2^0 と解釈するので、元の値にはなりません。
シフトしてオーバーフローした場合は、コンピュータ内部においては演算結果が反映されているのでしょうか？ 演算結果が反映されているか？ ★回答　工学的に人為的に製作者により決定される 製作された言語　アプリ　の仕様で決まるのが正解である メーカー　によりちがう 仕様どうり　コンピュータ内部においては演算結果が反映されている ★回答　説明 演算結果を制限するものは　以下であり　ソフトでそれを解消して仕様を決める (1)デジタルコンピューター（マイコン　DSP　その他全部）のレジスターの仕様　メモリー仕様 (2)そのデジタルコンピューター上で走らせるソフト　アプリ 任意多倍長計算が可能なのもあるわけ 商用の数式処理システムとしては Maple や Mathematica　その他が可能 言語はその仕様に有効数字が記載されてる (3)アプリは　言語アプリで作成されるのでその仕様で決まる 言語はその仕様に有効数字が記載されてる アセンブラは　マシン語　に近い仕様がほとんどだ ※注意　ちゃんとマニュアルに書いてあるはずだ ★推定法は以下でOK たとえば　仮数部は 0.5^推定有効bit数-1　を計算させてみると　言語仕様は推定可能 -1が出たらそこが限界だ たとえば49bitで -0.999999999999998000000000000000 たとえば50bitで -0.999999999999999000000000000000 たとえば51bitで -1.000000000000000000000000000000 となる　たとえばエクセルはそうなる
動かしてみましたが、求める答えは得られません。 どこが間違っているかチェックしてみてください。
「ご協力お願いします」ってのは, どこまでを求めているんだ? まさか 「全部」 なんてことはないよな?
#3 に加えて, 処理系が何かも書いてほしい.
方向性もなにも、 [ 1*1,1*2,1*3 ... 9*9 を計算して、二次元配列の適当なところに代入する ] ってだけになりますが。 > 結果確認はmainで上記関数を呼び出して結果を表示 ということだから、main関数は int k[9][9] ; /* 9x9の二次元配列 */ /* その他準備 */ kuku_make(k) /* ここで、二次元配列kに9x9の結果が入る */ /* kの内容を出力 */ となります。 ここまではポインタ以前の問題です。 C言語で注意する点は int k[9][9] と宣言したら、 k[9][9]=9*9 ; とは使えない、という点です。
それで、どこがわからないのですか? この問題に必要となるのは次のものです。 ○全体の流れ → 「日付1と日付2の入力,妥当性チェック,結果出力はmainで」とあるのですから ・日付の入力 ・妥当性のチェック→妥当でないときのエラー処理 ・日付の比較( date_comp関数を使う) →結果の出力 というのがmain 関数の構成になります。 ○ ユーザー定義関数の定義、宣言のやり方と、実際の使い方 → 参考書に載っているはずです。復習しましょう。 ○日付の比較 → この部分は「自分で考える」ところです。 日付1 > 日付2 とは、y1,m1,d1,y2,m2,d2 がそれぞれどんな関係にあるときか、 日付1 = 日付2 とは、y1,m1,d1,y2,m2,d2 がそれぞれどんな関係にあるときか、 考えてみましょう。 = の方は簡単にわかると思います。 /* 別解として、 time.h にあるライブラリ関数を使う方法があります */ ○妥当性チェック → ここも、「自分で考える」ところです。 「2014年13月-45日」等という有り得ない日付だったら、なんらかの処理をする、というものです。 カレンダーについての知識が必要です。うるう年のチェックも必要です。
#1です。 データが１～６の非負の離散値ということが少し気になったので、 おせっかいですがコメントさせて下さい。 もしかして、アンケート結果を解析しようとしてみえますか。 すると、結果が思わしくないと思います。 なぜなら、人による採点の「甘・辛」（バイアス）や 同内容の設問間の「自己相関」が出て、 主成分分析には適さないデータになっているからです。 バイアスを取るには、行が「被験者」なら、行間を中心化します。 自己相関を取るには、列が「設問」なら、列間を中心化します。 これを「二重中心化」といいます。 スクリプトをのせておきます。 走らせてみると、因子負荷量の矢印が四方八方に広がるのが分かると思います。 第１、第２主成分を取り除いた感じです。 第１主成分のサイズファクター（甘いか辛いか）と 第２主成分のシェイプファクター（設問に対する反応の凹凸）を 取り除き偏りが取れて広がるのです。 「コレスポンデンス分析」の結果に近いと思って下さい。 ただ、相対評価（主観的回答）以外のデータには適用しないで下さい。 # テストデータによる主成分分析 par(mfrow=c(1,1)) dat <- data.frame( matrix(c( 3,4,1,4,1,4,1,1,2,2,4,2,2, 3,3,3,3,3,3,3,1,3,3,3,3,3, 1,4,5,3,1,1,1,1,1,1,1,1,1, 3,1,3,1,1,2,2,2,4,4,3,4,2, 3,3,3,4,3,3,3,3,3,3,3,3,3, 3,3,3,3,3,3,3,3,3,3,3,3,3, 4,4,4,4,4,4,3,3,2,2,2,2,2, 4,3,4,3,2,2,2,2,3,3,2,2,2, 3,4,4,4,1,3,3,2,2,2,2,3,3, 3,3,3,3,3,3,4,3,2,2,2,3,3, 3,3,2,4,4,3,2,2,3,2,2,2,2, 3,2,3,3,3,2,3,3,4,3,3,2,3, 4,4,4,4,4,3,3,3,2,2,2,2,2, 3,4,4,4,2,3,3,3,3,3,2,2,3, 3,3,3,3,3,3,3,3,3,3,3,3,3, 3,4,4,3,3,3,3,3,3,3,3,3,3, 3,4,4,4,4,4,3,3,3,3,3,3,4, 3,3,3,3,3,3,3,3,3,3,3,3,3, 3,3,4,3,3,3,2,1,2,2,2,2,2, 3,5,1,5,1,5,1,1,1,1,1,1,1, 3,3,2,2,2,2,2,2,2,2,4,2,4) ,ncol=13,nrow=21,byrow=T) ) names(dat)=c("F","G","H","I","J","K","L","M","N","O","P","Q","R") dat xs <- dat dat <- sweep(dat,2,apply(xs,2,mean)) # 列平均を引く dat <- sweep(dat,1,apply(xs,1,mean)) # 行平均を引く dat <- sweep(dat,c(1,2),mean(colMeans(xs)),FUN="+") # 全平均を足す # result1 <- prcomp(dat) biplot(result1) par(ask=TRUE) # result1$rotation p <- result1$rotation[,1:2] p1 <- p[order(-abs(p[,1])),1] p2 <- p[order(-abs(p[,2])),2] par(mfrow=c(1,2)) barplot(p1,horiz=T,names.arg=rownames(p1),las=1,cex.names=0.8) barplot(p2,horiz=T,names.arg=rownames(p2),las=1,cex.names=0.8) #
　先日、初めてベイズ理論の小話を知ったばかりなので説明はできませんが・・・。 　こういうページでなんとか。 ＞初めてのベイズ学習 ＞http://watanabe-www.math.dis.titech.ac.jp/users/ … 参考URL：http://watanabe-www.math.dis.titech.ac.jp/users/ …
No2投稿前に書き換えてミスしてました 誤 Cells(i, 1).Value = CalFIB(i) 正 Cells(i, 1).Value = fib(i)
早稲田大学 https://www.wsl.waseda.jp/syllabus/JAA101.php 大阪大学 https://koan.osaka-u.ac.jp/syllabus_ex/campus 中央大学 http://syllabus.chuo‒u.ac.jp/syllabus/ 千葉大学 http://www.chiba-u.ac.jp/student/syllabus/index. … シラバス・データベース http://www.syllabus-db.com/index.html 最近はシラバスを公開している大学も多いですね。
「式を変形して求めよ」と言われているのでは無いのですから、別の方法で求めればいいのでは。 例えば ・正攻法: カルノー図を書く。 4変数までなら、下手に計算しているより早いかと。 ・ちょっと試験対策的: 　選択肢があるのですから、そこから明らかに非該当のものを消していきます。 　数が減ったら、真理値表を書いて比べます。 　(4)は全ての項でA,B,C全て使っているのですから、X=1の数と項の数が一致するはずです。 　が、実際には一致しないので、明らかに違います。 　(1),(2) はともに ACを含みますが、 AC = ABC + A(notB)C であることを考えれば、A(notB)C=0となるXとは一致しません。 　以下、同様に考えていくと、5だけが残ります。 　あとは、実際に正しいかを、真理値表を書いて検算します。
[ゲスト1] OS：Windows XP ネットワーク：192.168.2.0/24 IPv4：192.168.2.10 [ゲスト2] OS：CentOS 6.6 ネットワーク：192.168.3.0/24 IPv4：192.168.3.10 を [ゲスト1] OS：Windows XP ネットワーク：192.168.2.0/16 IPv4：192.168.2.10 [ゲスト2] OS：CentOS 6.6 ネットワーク：192.168.3.0/16 IPv4：192.168.3.10 にすれば、ゲスト１とゲスト２は「同一ネットワーク上に居る事になる」ので、通信可能になる。
>自分は、まだまだ初心者で、まだしっかりと理解していなくて、誤ったコーディングによって起きたエラーだというのは、わかりますが、何がダメだったのかわかりませんでした。。。 バグ自体はベテランだって必ず作りこんでしまいますし、コードを見ただけでバグの原因がわからないこともしばしばです。ただ、初心者プログラマーの陥りがちな間違いは「デバッグせずにプログラムの動いた結果とソースコードを眺めただけで原因がわからない」と思ってしまうことだと思います。プログラミングするなら最小限のデバッグをしましょう。 ヒント： >カーソルに合わせて画像は表示されませんでした。 koma[a][b].setIcon(icon1); が実際に動いているかどうか質問文に記載されていません。ひょっとしてそれを確認していないのでは？動いたかどうかはデバッグプリントを入れてみればわかります。例えば以下のように。 if (...) { 　System.out.format("koma[%d][%d] is set!\n", a, b); 　koma[a][b].setIcon(icon1); } とにかく初心者のころは何がどう動くのか見ただけではわからないのが普通なのですから、せめてデバッグプリントを入れてデバッグしてみてください。自分でやったデバッグの結果わかったことを申し添えれば質問を見ている人が答えられる可能性があがると思います。
RS232Cは通信の電気的制約と時間的制約を定義した仕様で、TCP/IPは通信中のデータ形式や交換手順を定義した仕様だと思います。 誤解を恐れず別のモノに例えるとすると、飛行機を物理的に空中に浮かせる方法と、切符の手配や搭乗手続きの運用の関係みたいな感じでしょうか。(前者がRS232C、後者がTCP/IPの関係。) 「東京から大阪へ移動する」という目的を達成するためには飛行機以外にも新幹線や高速バスでも移動できるわけですが、その気になれば、それぞれの移動手段で切符の手配や搭乗手続きといった運用を統一できるかもしれませんよね。 運用手順であるTCP/IPも、RS232CやEthernetやWiFiや伝書鳩といった異なる通信手段を媒体として通信システムを構築することもできるわけです。他の方も「昔はTCP/IPをRS232Cでやっていた」と指摘されていますが、それはSLIPと呼ばれていた方式のことだと思います。他にも、昔のMacはRS485でTCP/IPをやっていたようなことを聞いた事があります。 参考URL：http://ja.wikipedia.org/wiki/Serial_Line_Interne …
< No.1 です。 手計算を見事にミスッてました。 一応、訂正。 [例] G(j0.1) = (1+j0.5)(1+j0.1)/j10 分子値　↓ 　(1+j0.5)(1+j0.1) = 0.995+j0.6 = 1.162*e^(j0.543) 分母値　↓ 　10*e^(j1.571) 分数値　↓ 　(1.162/10)*e^(j0.543-j1.571) = 0.116*e^(-j1.028) 　　
学会誌でどう大学がわかるのでしょうか。 ★no2　回答　補足　 複数年による　バイノーラル、立体音響について研究　発表論文成果→発表者個人特定 →略歴→研究機関→大学→大学内カリキュラム卒業研究など てな手順で検索して大学を特定していきゃいいわけ 音響学会　通信学会　制御　関連の電気音響分野を図書館やネット検索　で見りゃいいでしょう 論文には必ず　発表者　参考文献が記載されています 他の人の論文も参考にするので いもずる式に出てきます そのような資料を基に 次のテーマ研究の参考にし　次の研究を進めるのが普通だと思いますので 必ず発見できます
変数 my が double なので、scanf() で対応する書式指定子は "%lf" になります。 scanf("%lf", &my); ※ちなみに、printf() における double に対応する書式指定子は、"%f" です。 そもそも、hiroko() という関数が何をしているか説明できますか？ あと、４人の身長が int なのに、自分の身長だけ double なのはなぜか、説明できますか？
ルンバを分解したことはありませんが、充電器にスモークフィルターが付いていることから 充電器自体が赤外線パルスを広角に発光し、自走掃除機が赤外線を受光していると思われます 但し赤外線受光センサーをパイプ状の中に設置し、受光範囲を絞って充電器の方向を判別します その為掃除機自体が回転し充電器を探しています デジタルコンパス　も参考になると思います http://www.amazon.co.jp/HMC5883L-%E4%BD%BF%E7%94 … http://wiki.androciti.com/index.php?HMC5883L%BB% …
継続条件無しの繰り返し（無限ループとなるので取り扱い注意） for(;;){ } 繰り返しを終了させる （for/whileの繰り返し処理内に記述） break; もし負の値なら(変数はiとしました) if(i<0){ } 例(入力する数値は整数としました) int main(){ int i; for(;;){ prinf("数値を入力："); scanf("%d",&i); if(i<0){ break; } } return 0; }
printf("文字列を入力してください："); scanf("%s", str); ch = 'h'; printf("%cは%d個ありました。\n", ch, str_chnum(str, ch)); ch = 'o'; printf("%cは%d個ありました。\n", ch, str_chnum(str, ch)); ch = 'g'; printf("%cは%d個ありました。\n", ch, str_chnum(str, ch)); ch = 'e'; printf("%cは%d個ありました。\n", ch, str_chnum(str, ch)); でいいのではないですか？ 個人的には…str_chnum()の戻り値の型がcharだったり、第２引数の型がintなのがちょっとなぁ…とは思いますが。 # 環境によっては正しく動作しないかも知れない。 # charがsignedになるのか、unsignedになるのか…とか。
IT業界に入るつもりなら、その資格の上級ランクでもないと、有利にはならない、と考えてください。 例えば、情報処理技術者試験なら、最低でも応用、です。 基礎資格と比べたら、それこそ「有名大学を卒業した学士資格」の方が有利ではないでしょうか。 業界の人達は、「資格と実力はかならずしも一致しない」ということを知っています。 資格は持っていないけど、実力がある、という人が沢山います。 なので、資格を持っていれば即採用、なんてことはしません。 新卒に即戦力を求めたりしません。 それでも、上級資格だと、取るのが難しいだけあって、実力も伴っていることが多いです。 また、客に対しても「上級資格取得者がいる」というアピールになります。 もちろん、資格勉強を通して、実力を付ける、ということでは無意味ではないです。 また、ITに疎い企業なら、コンピュータ担当者候補として取ってくれるかもしれません。
下記のようなサイトも有ります。 http://dotinstall.com/lessons 万分の一でも、お役に立てば幸いです。 参考URL：http://dotinstall.com/lessons
initはただの配列です。 数値が並んでいるだけです。
JOBK・ＮＨＫラジオ第1放送大阪は 大阪府・兵庫県・京都府・滋賀県・奈良県・和歌山県に放送してますので、 ローカルニュースなど、和歌山放送局（総合テレビ・ＦＭは和歌山独自の電波塔がある）のスタジオからの中継を大阪放送局に送り、大阪局ラジオ第1放送の送信所から放送することもあります。 つまり、その時間は、大阪や京都の人も同じ周波数で和歌山の話題を、聴いているのです＼(^^;)...
プログラムの作り方: 1. 「どのような操作をすればその問題が解けるか」を考える 2. 考えた「解き方」をプログラム言語で書く
fflush(stdin); は「やっちゃいけない」ので, 良い子はまねしないでください.
16進数587FC0B4を2進数で表して 1011000011111111100000010110100 ということですが、先頭に0が1つ足りないのでは？ 見当違いならごめんなさい。
おめでとう、じゃないかな？ でも、これくらい探せなくてどうする 参考URL：https://www3.jitec.ipa.go.jp/JitesCbt/html/about …
○CSVファイル、というのは、通常は、Comma Separated Values の名前の通り、「カンマ(,)で区切られたデータ」になっています。 そのfscanfの書式を見ると、 「整数(読み飛ばす) 空白 数値(読み込む) 」となっているファイルを読もうとしています。 どちらが正しいのでしょうか? 空白区切りが正しいのなら「CSV」などと誤った名前を使わないようにしましょう。 カンマ区切りが正しいのなら、fscanfの書式を正しいものにしましょう。 ○ あるいは、もっと他の方法を探しましょう。 「C言語を使わなければならない積極的な理由」が無ければ、他の方法を使った方がはるかに楽です。 例えば、そのままエクセルを使って、 C1: =B1+B1 C2: =C1*(B2-C3) ... とでもやれば済むことです。 で気付いたのですが > w[i] = w[i - 1] *(r[i]-w[i + 1]); この時点で、w[i+1]には何も入っていません。C言語の場合、このような場合に、どんな値になっているか、わかりません。 (デバッグモードでは0に初期化されていることもありますが) 計算式、または計算順番を間違えていませんか? ○ここでは ・質問が解決したら締め切る ・続きの質問を投稿する前に、前の質問は締め切る というルールになっています。過去の質問は適切に処理しましょう。
　Javaだけでなく、どんな言語にも通じる話だと思います。 　まずデータ保存や退避の目的のみのクラスを作成する事はあり得ます。カプセル化の方針に合うからです。カプセル化とは、データ構造を作れです。こういう場合、目立ったメソッドはほとんどありませんが、どんなクラスを作成する時でも、コンストラクト（Defaultの初期化メソッド）とデストラクタ（Defaultの後処理メソッド）を付けるのは、作法になってる気がします。なので多くの言語でこれらは、自動化されてる事も多いです。 　次にフィールドのみか？ですが、そう考えるのであれば、フィールドか？プロパティーか？も検討すべきでしょう。結局#2さんの仰るように、何の目的でクラスを使用するのか？です。 　プロパティーとメソッドの検討は、プログラムの中でのその位置付け（目的）をはっきりさせないと、クラスがサブルーティン置き場（捨て場？）に化したりします。 　位置付けの明確化を前提に自分は、プロパティー，メソッドも含めて、密集積かつ疎結合の原則に従います。 　要するに関係するものだけを集めて（密集積）、そのクラスにとって外部環境と思えるものとの抱き合わせは、抱き合わせが便利であっても避けます（疎結合）。こうするとモジュールの独立性が高まって再利用しやすくなり、プログラム単位の意味も明確化されるからです。 　ここで注意すべきは再利用とは、プログラム開発後のメンテナンスや使いまわしだけの事でなく、開発中のモジュールの再利用や使いまわしの方が、圧倒的に多いという事です。 　ここで難しいのは、クラスにとっての外部環境とは何か？（クラス境界は？）です。これは開発者の判断になります。個人的にこの判断は、「実行者を探せ」で自分は行っています（オブジェクト志向の5W1Hの簡略版）。 　例えばデータ構造をクラスとして作成したら、そのデータ構造の内部論理に従う処理だけを、そのクラスにメソッド，プロパティーとして持たせます。データを使用する論理などは、それの使用者（クラスで、多くの場合プログラムのメイン部分）で実装します。 　違う考えはもちろんあります。ありますが経験的にものになるなと思えたのは、上記のようなやり方でした。 　しかし密集積・疎結合の原則に忠実に従うと、クラス間の相互依存度はどんどん高くなっていきます。またコード量も倍になったりするのはザラです。結局、自分は何を重視するか？です。 　つまり、クラスを全面採用するなら（オブジェクト志向すると決めたなら）、ある程度最初から「俺はライブラリを作るのだ」という覚悟が必要になります。覚悟がないなら、やらない方がましです。 　クラス作成とは、問題状況に特化したライブラリを作る事です。実際にはそこでは、普通の手続き型プログラミングよりも、プログラムの初期設計の完成度の良し悪しで、最終的な出来が左右されます。 　この辺りの事情が実は最初のカプセル化の概念と裏で本質的につながっていて、オブジェクト志向はいくら読んでもようわからん、という事態になります。大概、やってみなけりゃわかりません(^^;)。 　ちょっと脅かしましたが、「俺はオブジェクト志向なんかやらないのだ(^^)」という書き方もある訳です。その場合はクラスを、単なる初期化ルーティン便利機能付きデータ構造、とみなしても良い訳です（コンストラクタを除けば、フィールドのみ）。同様にサブルーティン置き場としてのクラスだってありえます（コンストラクタ無しのメソッドのみ）。 　やっちゃいけないのは、開発スタイル（方針）を混ぜる事です。たいてい最後には収拾がつかなくなっています(^^;)。 　まず自分のやりたい事を眺めましょう(^^)。
atof ではなく strtod を使うことを視野に入れた方がいいかもしれん＞#1.
csvファイルが実行形式と同じディレクトリにあるかどうか。 ファイル名にディレクトリの指定を付加してみたらどうか。
単なるプログラムの勉強なら、以下読み捨てて下さい。 実現したいＦＩＦＯの目的（用途）は何でしょうか？ プログラムは勉強すれば誰にでもできます。 ある目的（用途）のＦＩＦＯを作りたいのなら、機能・仕様の設計が先決です。 半導体にＦＩＦＯメモリというものが有りますので、データシートなどで基本的な部分を 勉強して下さい。 あなたの専門がソフトウエアでもこれがどんな機能・仕様かを知っておくのは最低必要で、 その上に種々の新機能を付加したりするなどの独自設計が必要になるでしょう。 できればアセンブラでプログラムするとハードウエアの動きもイメージすることが できますよ。
データマイニング・教師あり学習、だけだと、あまりに分野が広すぎて、なんとも言えないです。 とりあえず、機械学習入門みたいな、教科書を読んでみるのが良いのではないでしょうか。
　サンプリング定理／標本化定理　を思い出してください。 ＞標本化定理 ＞http://ja.wikipedia.org/wiki/%E6%A8%99%E6%9C%AC% … 参考URL：http://ja.wikipedia.org/wiki/%E6%A8%99%E6%9C%AC% …
はっきりいって情報不足. あなたのいう状況になるような, 「完全なソース」を出してください. もちろん pic/test.eps なんてあなたのところにしかないので図は別の (「誰のところにもある」と考えられる) ものに差し替えてくださいね.
No.2 の錯記を訂正。 x = FEX は x = F[U 0][X ; 1] と書けそう。 (U は単位行列、0 はすべて零の列行列) だとすれば x = FX + 0 だろうから、X = F^(-1) x 。 　　
>>C++にてCSVファイルを読み込み、CSVファイル中のデータを修正するプログラムを作りたいのですが、どのようにすればよいのか分かりません。 やりたいことを可能にするために必要な要素を細分化して、自分に足りない知識・経験を、時間をかけてひとつずつ（１テーマ１週間くらい？）勉強しましょう。 たぶん、作り始めると、さらに抜けていた知識が明らかになり、勉強しなければいけないテーマが増えて「１歩進んで３歩下がる」という状況になるかもしれませんが、我慢して頑張りましょう！
> OpenCVで画像を記録するときにAもBもJPEGで記録しました. Bを出力するときにJPEGにしているのであれば、再圧縮がかかって画像が変化（劣化）している可能性が高いです。 JPEGは非可逆圧縮なので、画素値が変化して困る用途には使えません。 > 人物が映っている画像です。 > > 背景と人物が映っている画像Aと　人物のみ映っている部分(背景を含めて)をAから切り出した画像Bを > 比較しました. > 全く同じ輝度値の画像のはずなので, > matlabで画像を読み込みました.そうすると数値が上記の画像のように出てくるので, > 輝度値が変わっていることに気付きました。 聞きたかったのは、画像の色数やファイルのフォーマットは何か、輝度値をどうやって計算したかです。 （おそらくJPEGで出力していることが原因と思いますので、無理に答えなくてもいいです。）
「逆必ずしも真ならず」ってやつだ. 正確には「裏必ずしも真ならず」というべきかもしれんが.
大学によってケースバイケースです。同じ名前の学部・学科でも、他の大学との違いを打ち出さなければならないので、一律にこうである、というものはありません。 入学すれば、最終的に教授のどなたかから指導を受けることになるでしょう。ゼミに入り、何かを卒業研究することになります。志望する大学の（情報系の）教授について調べてみるとよいでしょう。 研究室の成果は論文です。CiNii(http://ci.nii.ac.jp/)や研究室のホームページで論文を探しましょう。一般的に論文の著者名には、指導した人の名前が末尾にあります。基本的には発表論文が多いほど、査読無しより査読のある雑誌に掲載されるほど、研究室の評価が高くなります。 環境と素養があればプログラミングは自然と身に付きます。せっかく大学に入られるなら技術を磨くだけでなく、卒業研究を見すえて進路を決めることをお勧めします。
残念ながら外れ. 大きな間違いは, 再帰の部分で計算量を nlogn としちゃってるところ. 確かに最悪 O(log n) 回の再帰が必要だから全体で O(n log n) となりそうなんだけど, 再帰をするごとにリストが短くなることを考慮して計算し直せばきっちり線形時間で終らせることができる. 解析は選択アルゴリズムと本質的に同じなので, 疑問に思ったら確認してみるといい (ただし Wikipedia の説明はちょっと日本語がこなれてないので読みにくいかも). あとは細かいところで ・リスト全体の中央値を使うかわりにリストのまんなかにある値を使うと最悪の場合に計算量が大きくなるのでダメ (ここも本質は選択アルゴリズムと同じ: ここで線形時間使っても, アルゴリズム全体の時間は線形時間のまま) ・リストを m にすることに意味はない (リストの長さを 2n+1 にすることができる, というのは #6 の説明の通り) というところかな. あ, もちろん「想定する答え」は「ハッシュ」だと思うよ. というか, ハッシュ以外のアルゴリズムを想定するかなぁ, ふつう....
学生さんも社会人も面接で相手が知りたい内容は同じです。 常識的な受け答えはもちろんですが、一番は面接に来た人の気持ちを知りたいのです。 この人はどういう人でどういう考えを持っているのだろうといったところです。 例えば１つを挙げてみても ・プログラム、パソコンのことを学びたい ⇒学んで何をしたいのか。パソコンのこととは何か。（ハードウェア的な部分なのか？ソフトウェア的な部分なのか？（すげぇ雑な分け方ですが） 抽象的な言葉はすぐにわかります。だって頭にイメージがあれば言葉に詰まることはないですから。 若いうちは苦労するところですがもっと具体的なこと（内容）を考えてみては？ プログラムといっても色々な種類のものがありますよ。 ・就職のサポートが良い ⇒すごく良いと思います。ただ、あなたが具体的にサポートの内容を「こうこうこういう部分」がと言えると満点じゃないですかね？ 今はインターネットで簡単に情報も入手できるので、色々調べてみて話の材料をそろえてから何回も話す練習をしたらいいと思いますよ＾＾ 私は今年PG一年目のぺーぺーですが、この業界を目指している人なら応援したく思い偉そうに書き込みました✩ 長文失礼します。
例えば、panasonicの読取革命というOCRソフトの体験版があります http://panasonic.co.jp/pstc/products/yomikaku/ ご自分でインストールして調べてみては如何？
アメリカや日本等世界各国の大学の各科の授業内容の概要:シラバス等が次等によりかなり公開されています。 中には授業内容、使用されている書籍等が詳しく紹介されており、ネットを通じての講義受講や演習問題出題や回答受付、レポート提出による資格の取得等まで可能な例もあるようですので調べてみて下さい。 各大学のホームページから辿ったり、wikipediaの紹介ページから、或はサーチしたりされたら色々な情報が見つかるのではと思われます。 ok-kanetoさんが回答されているように、各学校毎に授業内容はバラエティに富んでいるようです。 http://ja.wikipedia.org/wiki/OpenCourseWare http://en.wikipedia.org/wiki/OpenCourseWare "opencourseware 東京大学 OR 東京工業大学" +情報処理 ==>.... http://ocw.mit.edu/index.htm http://japan.cnet.com/news/business/35038431/ 大学のオンライン講座の無料化を目指す「JMOOC」発足--ドコモがシステム開発 http://ja.wikipedia.org/wiki/MOOC http://en.wikipedia.org/wiki/MOOC
ハーバードアーキテクチャーのコンピュータ（マイコンなど）にプログラムを書き込んで、プロテクトを掛けると コードの読み出し自体が不可能になるので、コピーは極めて困難です。
とりあえず、両方の書いたソースを見せてもらえませんか？
とりあえず、エラーメッセージをちゃんと書いてください。 それと、BitmapクラスとはどのBitmapクラスでしょうか？ (CLI?)
ちなみに >int max=0; 配列中の最大値が負の場合は最初の仮の最大値の0になってしまいます。 ※問題文が「自然数」ならよかったけど、「整数」なら負もあり なので、「配列の先頭の値」を最初の最大値にした方が良いです。 max = num[0]; としておき、forループのiの初期値を1にしてください。
a an the in out on of for be あたりを通じて、一つになっているのでは、と私は予想します
　情報セキュリティに関して、別に「基本情報レベルの情報セキュリティ」などという分野が、世の中に存在する訳ではありません。「情報セキュリティスペシャリスト」のうちの基本的・共通的な部分といったレベルです。 　情報セキュリティの「基本」はどちらも共通です。「範囲」「適用分野」「深さ」が違うだけです。 　「情報セキュリティ」に関する「基本情報」試験での問題数は、かなり少ないのではありませんか？　この分野を勉強したからといって、それほど点数が稼げるとは思えません。 　点数とは別に、「情報セキュリティ」に興味があるなら、「情報セキュリティスペシャリスト」の参考書や、市販の情報セキュリティに関する本を勉強するなり、情報セキュリティに関する下記のようなサイトで「基本」を勉強してみてはいかがでしょうか。（どこまでが基本で、どこからが応用・詳細・特定分野向けかは、勉強する側で判断するしかありませんが） http://www.ipa.go.jp/security/keihatsu/features. … http://www.nisc.go.jp/security-site/month/ http://www.soumu.go.jp/main_sosiki/joho_tsusin/s … 書籍の例 　　↓ http://www.amazon.co.jp/%E5%9B%B3%E8%A7%A3%E5%85 … http://www.amazon.co.jp/%E6%83%85%E5%A0%B1%E3%82 …
こんなものは、答えだけ聞いてもなんの役にも立ちません ちょっと変えただけでまったく別の結論になることだってあります。 「この文法を曖昧さが無くなるように変更せよ」という応用問題へと継げるのは当然の流れでしょう。 既に指摘のあるとおり、まずは、基礎を勉強してからにしましょう。 <id>とか<expr>とかは、ただの名前です。他と区別するために記号を付けただけです。 　<味噌汁>::=<じゃがいも>=<みかん> 　<じゃがいも>::=A|B|C 　<みかん>::=<みかん>+<みかん>|<みかん>*<みかん>|(<みかん>)|<じゃがいも> でも、文法は同じです。 ただ、これだとわけがわからないので、文脈での役割に沿った、意味をある名前を付けているのです。
送られてきたということは、もしかするとメールですか。 もしそうなら、メールの本文が、誤って添付ファイルであるかのようにBASE64で符号化されてしまったのでは。 参考URL：http://internet.watch.impress.co.jp/www/article/ …
No.3です。 まず、「C＃言語の文法がわからない」のか、 それとも 「文法はわかるけど 先生の課題をどうプログラムで表現していいのかわからない」のか、 それを切り分ける必要がある。 --- ということで、 まずは、文法が本当にわかっているか、 確認することにしよう。 とりあえず「猫プログラミング」を、 第1章から、「いま大学で必要となっているページ」まで、 全ての記述、すべての「サンプルコード」を一字一句、すべて理解すべし。 理解できない箇所に出くわした時点で、 調べるか、 人に聞くか、 このサイトのプログラミングのカテゴリーで質問すること。 で、そうやって「わかったこと」は、 本にどんどん書き込みするなり、 ポストイットに書き込んで貼り付けておくこと。 --- まずは、ここからだね。
プログラムやネットワークの仕組みだよ、情報処理全般。
ツェラーの法則そのものです。 http://ja.wikipedia.org/wiki/%E3%83%84%E3%82%A7% … にある式と比較してください。 ・C言語ではint型同士の演算は int となります。 int / int = int です。端数が出たら切り捨てられます。 ・Wikipediaにある式では、土曜日=0,日曜=1,... となります。 これを日曜日=0,月曜=1,...とするには、変換が必要です。
まあパッと浮かぶのは C#かな。
私の知っている限りですみませんが 計算幾何や情報幾何は日本がリードしている分野だと思います． 知らない分野のほうが多いので，知っている範囲だけですが．．．．
ド・モルガンの法則についての説明をよく見てください。 /A・/B や/A+/B のどちらかは上の線がつながって1本になっています。 繋っている方は、線の下が括弧で括られているような意味になります /A・/B の線が繋っていれば/(A・B)の意味 /A+/B の線が繋っていれば/(A+B)の意味 ド・モルガンの法則は /(A+B)=/A・/B /(A・B)=/A+/B です。 両方繋っていない /A+B=/A・/B でも、両方繋っている /(A+B)=/(A・B) でもありません。
さらに別解: A(A＋B)＋B(A＋B) = A+B. 終わった.
>第4項目+X＾NOT・Y＾NOT・Z＾NOTってなんですか？どこから出るんですか？ 公式：A=A+Aを使って第1項目と同じものを第4項目に加えただけ。 なぜそうするかは簡略化をするため。 >等式じゃなくなっちゃうでしょ？抽出すると、A・B=A・B+A＾NOT・Bになってしまいますよ！みなさんやってみてください、答え変わってきてしまいますから。この解説が誤りの可能性があります。 不勉強に尽きる！質問者さんの例はまったく理解していない的外れな間違った例だよ。 どうしてそんなことになるんだよ！ 解説は和積形を積和型にして簡単化して、再度和積形に戻すやり方。 　ブール代数公式：~(AB)= ~A+~B, ~A=~A+~A ⇒ ~(~A'+~B')=AB 　　~(ABC)=~A+~B+~C=(~A+~B)+(~A+~C) ⇒ ~B'+~C'=B'C' などを使う。 別解として和積形のまま簡単化するやり方もある()こちらの方が簡単です。 　ブール代数公式：A=A・A, 簡単化公式(A+B)(A+~B)=A 　　ABC=(AB)(AC) ⇒ B'C' などを使う。 　C=(X+Y+Z)(X+~Y+Z)(~X+Y+Z) ←公式(X+Y+Z)=(X+Y+Z)(X+Y+Z) 　=((X+Y+Z)(X+~Y+Z))((X+Y+Z)(~X+Y+Z))　←積の順番を入れ替える 　=(X+Z)(Y+Z)　← 公式：(A+B)(A+~B)=A
デジタル通信における帯域幅は定義があいまいですね。 http://ja.wikipedia.org/wiki/%E5%B8%AF%E5%9F%9F% … ブロードバンド、ナローバンドで言う所のバンド幅は単に通信できるビット量の意味で使われている場合が多いです。 大辞林の解釈はいろいろな条件をごちゃまぜに書いてある印象を受けますね。
今は出身大学で合否は関係ありません。 ただ、縁故が強い業界です。しかし、縁故もだいぶと薄れてきたようですが。 因みに、情報はもう一つ他の教科の免許がないと採用されないようです。
dst の宣言が見つかませんが、どうなってますか?
そのまま、「ステム」と読まれます。 米国移民法の改正議論の中で、STEM関連業種でのビザ発給要件の緩和がよくトピックに上がりますが、この動画がそのニュースの一つです。１５秒目くらいにSTEM Jobs Actを「ステムジョブズアクト」と言っているのに注目。
最後は実H/Wデバイスやドライバ回路に当って信号波形やデータパケット内容等を調べたりする必要があるのではと思われます。 専門学校や大学等で学ぶにしろ、基礎知識が少ない状態ですと自分のペースと合った講習等は少ないのではと思われます。 先ずはネット上のサイトや解説書籍などで、TCP/IP通信の基礎等をスタディする事から始めてみられませんか。 それから更に必要であれば学校での授業なども考えてみて下さい。 次等が参考になれば幸いです。 http://oshiete.goo.ne.jp/qa/8473310.html ネットの勉強の仕方 http://oshiete.goo.ne.jp/qa/8144351.html 通信関連の知識の習得の仕方
n個のデータから探索する、もっとも単純な方法は、「n個全部調べる」ことです。 これは、O(n)の計算量だということは、おわかりになるかと思います。 「探索効率を高めるため（探索経路を短くするため）」ということは、O(n)より小さいオーダーのアルゴリズムを必要とします。 さて。 Aだと、結局、 n分探索木となってしまいます。(ルートを探索対象とすれば (n-1)分木 ) これから探索するのは、結局は、上の「n個全部調べる」と同じことです。 ちなみに、m=2 のときの「二分木」はよく出てくるものです。 計算量の考えは同じです。
こういう時は、部分木ごとに分割して考えて、あとで全体にまとめていく、というのが常套手段です。 http://ja.wikipedia.org/wiki/AVL%E6%9C%A8 ということなので、高さ4のAVL木は、高さの定義やAVL木に性質を考えると 「高さ3のAVL木と、高さ3あるいは2のAVL木を左右に持つ木」 ということになります # 高さの定義から、左右それぞれの部分木は、高さ3以下、かつ、どちらか一方は必ず3 # AVL木の定義から、左右の差は1以下、つまり、高さ3と、高さ3または2、という組合せしか無い ここでは、左が高さ3だとします。 すると、ノード数が最小となるのは (高さ3のAVL木のうちノード数最小のもの) - ルート － (高さ3のAVL木の最小ノードのものと、高さ2のAVL木の最小ノードのうち、ノード数の少ない方) という構造の木になります。 左の高さ3の木のノードに注目すると (高さ2のAVL木のうちノード数最小のもの) - ルート － (高さ2のAVL木の最小ノードのものと、高さ1のAVL木の最小ノードのうち、ノード数の少ない方) 以下、繰り返していくと、 高さ0: ノード無し(ノード数0) 高さ1: 1ノードのみ(ノード数1) 　に辿りつきます。ここから戻っていくと 高さ2: (高さ1) - ルート - (高さ1または高さ0のうちノードの少ないほう) → (高さ1) - ルート - (高さ0) → ノード - ルート - 無し(ノード数2) だとわかります。以下同様に高さ3、高さ4と戻していけば、求める解の一つです。
>for( i=1;i<8;i++){ > >　putchar('*'); >　putchar('\n'); >} *を表示する前に、 iが1の時は半角スペースを10個出力。 iが2の時は半角スペースを9個出力。 iが3の時は半角スペースを8個出力。 iが4の時は半角スペースを7個出力。 iが5の時は半角スペースを6個出力。 iが6の時は半角スペースを5個出力。 iが7の時は半角スペースを4個出力。 という風に出力してみたらどうなりますかね？ # 規則性があることに気付けばforループ1つ追加で行けますよね？ iが1から始まる。って点に微妙に違和感ありますけどね。 # まぁ規定回数のループが出来れば87からから始まろうとなんでもかまいませんが。 # ただし、コードレビューとかで「なんで87からなの？」という質問に納得の出来る回答が出来れば…ですけどね。 ## 0ベースで考える方が妥当…ってことが多いでしょうな。こういう場合は。
＞情報社会とクラウドをテーマ （レポート用紙に、図を書いても良いならば図を使いましょう） （お近くの図書館に事情を話して、参考になりそうな図書を教えてもらいましょう） ※言うまでもありませんが、引用する時は、引用元を書きましょう。 ・レポート（用紙）に表紙をつける。 表紙に、課題のタイトルの他に、「自分でつけたサブタイトル」を書く。 （この作業は、レポートが全て書きあがってから最後に行ってください。） ・今日の「情報社会の特徴について」（２ページくらい） （下記が、参考にすると良いと思われるサイトです。（高校生の内容ですが）） 社会と情報　 http://www.nhk.or.jp/kokokoza/library/tv/syakaij … （直接引用する際は、引用元を必ず書いてください。） ・クラウドに関する「分かりやすい説明」で１ページからから１．５ページ。 （具体的には、”クラウドコンピューティング”と”クラウド技術を用いたサービス”） （分かりやすい資料をあつめるために、家電量販店かパソコンショップに行って、事情を話して、広告用パンフレットをもらってきてもＯＫ。） ・「従来のデータの管理」で半ページ。 ・「クラウド」と「従来のデータ管理」の違いで、半ページくらい。 ・クラウド（技術・サービス）による「情報社会の未来・展望」を引用して、半ページから１ページ。 （何かしらの書籍かＷｅｂサイトから引用してください。当然、引用元は必ず書いてください。） ・質問者さんがレポートをまとめている時に感じた事柄（感想・所感）で、半ページくらい。 ・質問者御自身が考える「情報社会におけるクラウドコンピューティング」の未来像を締めくくりとして、１ページくらい。（難しいならば、半ページでも可。） これで、表紙を除いて、約６ページくらいです。 他の生徒さんは、情報社会だけで、3.5ページくらい使いそうですから、クラウド（コンピューティング）や、クラウド以前のデータ管理について記述すれば、良い成績を修められると思いますよ。 以下は、参照されると良いと思われるサイトです。 『情報通信白書 for kids』 http://www.soumu.go.jp/joho_tsusin/kids/ Yahoo キッズ　　ゲームとコンピュータ http://dir.kids.yahoo.co.jp/Computers__Games__an …
訂正 Cells()の後ろに.value を追加して下さい。
一つは、純粋な計算間違い。 パーセント(no1=no2なら100%)を計算するのに、割合(no1=no2なら1.0)しか求めていない。 もし %f%% と書いたら、割合が 自動でパーセント表記になる、と思っているのなら、そこが間違い。 Excelで0.1と書いて、書式を%表記にしたら、自動で10%になったりしますが、printfの%%は、純粋に % という文字を出力するだけです。 もう一つは、C言語の計算方法とその順番。 　整数/整数は整数になるので、 例えば、100/200=0です。 　また、 (double)(no1/no2) は no1/no2 を計算してから、その結果をdoubleに変換します。
それは、配列の要素数と、スレッド数と、バンク数との兼ね合いで決まるので、場合によります。 バンク数が８個だとして、配列の要素数16の場合 ・バンク１に、０番目と８番目の要素 ・バンク２に、１番目と９番目の要素 ・バンク３に、２番目と１０番目の要素 … と割り付けられた場合なら、 たしかに、 方法１が、２回バンクコンフリクトがおこる（全スレッドの処理官僚まで合計４回のメモリアクセスが必要） なのに対して、 方法２は、バンクコンフリクトが全くおきないので、合計２回のメモリアクセスで、全スレッドの処理が終わる ということは確かです。本当の最良ケースです。 ただ、一般的には、配列の要素数（より正確には、各スレッドが興味をもつ要素の番号）と、バンク数・スレッド数が、倍数の関係になっているのは、あまり良くないとされます。（できれば、互いに素な値になるようにしておくほうがよい） なぜなら、配列の要素数がバンク数やスレッド数の倍数になっていると、配列の要素が各バンクに周期的に配置されるために、たしかに、最良の場合には、上の例の方法ようにバンクコンフリクトがうまいこと避けられて高速、という場合もあるのですが、 よほど注意深くプログラミングしていないと、逆に、上の例の方法１のように、各スレッドが常に同じバンクにアクセスするようになる最悪の場合が起こることもよくあります。 通常、こういうメモリアクセス時間というのは、 ・平均ケースにくらべて、最良ケースはわずかに速い ・平均ケースにくらべて、最悪ケースはものすごく遅い という関係になっているので、配列の要素数がバンク数やスレッド数の倍数になっていると、平均的には遅くなる場合が多いです。 なんで、この場合で言えば、 3，（スレッド数＋１）だけ離れた要素と比較する。 ということをよくやります。 ・スレッド0は0番目と9番目の要素を比較 ・スレッド1は1番目と10番目の要素を比較 … ・スレッド6は6番目と15番目の要素を比較 ・スレッド7は7番目と8番目の要素を比較 というように、あえて、要素番号が８ではなくて９ずれた要素と比較するようにしておくと、ものすごく精密にプログラミングしなくても、（最悪ケースの発生率が大幅に減るので）、平均的には速くなることが多いです。 Wikipediaのバンクコンフリクトのページにのっている、２次元配列で中身のない列を加える、とかはまさにこれです。 http://ja.wikipedia.org/wiki/%E3%83%90%E3%83%B3% …
とりあえず現在の入力値は、フォルダパスだけにしてあります。 コメントにしてありますので、好みでremをとって、入力できるようにしてみてください。 ――――――――――――ここから――――――――――― @echo off setlocal enabledelayedexpansion set cond=textc set inWord=1- set ext=c echo フォルダパス set /p di=">" rem echo 共通ファイル名 rem　set /p cond=">" rem echo 入れたい文字 rem set /p inWord=">" rem echo 拡張子 rem set /p arg=">" call :wordCount %cond% echo 文字数：%COUNT% pause pushd "%di%" for /f "usebackq delims=" %%f in (`dir /b /a-d /on %cond%*.%ext%`) do ( set fileName=%%~nf set newFileName=%cond%%inWord%!fileName:~%COUNT%!.%ext% set fileName=%%~nxf echo "!fileName!" echo "!newFileName!" ren "!fileName!" "!newFileName!" echo ------------------------ ) echo 完了しました。 pause exit :wordCount set word=%1 for /f "delims=" %%i in ("%word%") do ( echo "%%i" call :SUB "%%~i" ) exit /b :SUB set LINE=%~1 :SUBLOOP if "%LINE%"=="" exit /b set /A COUNT=%COUNT%+1 set LINE=%LINE:~0,-1% goto SUBLOOP ――――――――――――ここまで――――――――――― 以上です。不備や追加点があれば補足よろしくお願いします
単純に「計算式が間違っている」です。 テストパターンとして 6 0.0 0.0 0.0 2.0 2.0 2.0 0.0 0.0 2.0 2.0 0.0 2.0 0.0 2.0 0.0 0.0 2.0 2.0 0.0 2.0 2.0 2.0 0.0 0.0 2.0 2.0 0.0 0.0 0.0 2.0 2.0 2.0 0.0 2.0 0.0 0.0 を使います。 (0.0 0.0) ( 0.0 2.0) (2.0 2.0) これは、サンプルにあった座標と同じ外接円に接する三角形になります。 その座標を入れ替えた全6通りです。全て同じ三角形です。 ということは、サンプルと同じに 1.000 1.000 1.414 になるはずです ですが、実際には違う値になります。 どこに間違いがあるか、探すのは面倒なのでやっていません。 直したら、いろんなパターンを入力して確認してみましょう。 中心(x0,y0) 長さr0 の円上の点(xa,ya) は xa=x0+r0 * cos(Ta) ya=y0+r0 * cos(Ta) で求められます。 x0,y0,r0,Ta,Tb,Tc を乱数で決めれば、A,B,Cの3点の座標が求まります。 その順列全てを並べれば、テストパターンの完成です。 ・全部の順列で答えが(ほぼ)同じ ・その答えが元のx0,y0,r0と(ほぼ)同じ ということで確認することができます。
「Excelファイルの統合」　あるディレクトリ中のファイルをすべて取り込みたい…のでいょうか？ ならば、参考URL など。 それとも…？ 　　 参考URL：http://qlikview-training.ashisuto.co.jp/combine- …
「答案」の筋書きは？ ・f(t) は 1 Hz と 2 Hz の余弦波の積らしいから、「和積公式」により 3 Hz と 1 Hz の余弦波の和。 　つまり、f(t) は 3 Hz と 1 Hz の「輝線スペクトル」をもつ。 ・f(t) を fs = 5 (or 10) Hz の「インパルス」で標本化したときのスペクトルは？ 　　参考 URL >わかりやすいサンプリング定理(標本化定理) 　などを見て思案くだされ。 　　 参考URL：http://www6.plala.or.jp/MrHomepage/lecture/sampl …
>y[n] ＝ x[n] - 2x[n-1] + ax[n-2] を時間シフトし、a=1 とした 　y[n] ＝ x[1] - 2x[0] + x[-1] のシフトを戻し、 　y[n] ＝ x[n] - 2x[n-1] + x[n-2] 　　　　↓　右辺の z 変換 : z=e^(jω) 　[1/z^n] - [2/z^(n-1) ] + [2/z^(n-2) ] 　= [1/z^(n-1)] * { [1/z] - [2] + [z] } (またシフトかヨ) …と整形してみると？ [1/z] - [2] + [z] の項は、 　= [cos(ω) - jsin(ω) ] - 2 + [cos(ω) + jsin(ω) ] 　= 2*[cos(ω) - 1 ] になり、これは零移相。 そして、[1/z^(n-1)] の分は直線移相。 …という蛇足。 ご自身が引用なさった URL と照合してみて。 　　
☆ - 式にて {a1, a2} を選定してオールパスにできる … のですか？ (一見、不可能) 　　
「エラーとなりました。どうしたらエラーがなくなるのか教えてください。」 って 回答してくれる人が全員、質問者の環境と状況そしてエラー内容を熟知してるワケじゃ無いですよ？エラーが出たなら”「○・・・○」というエラーが出て原因が分からず解消できません”という風に具体的なトッカカリを示すようにして下さいね。 質問者さんの流儀に合わせて解答すると「同じサイトに示されたとおりに構築したら正常に動きましたので参考にして下さい」で終わってしまいます 直接的にｈｉｔするかは微妙ですが過去、この手のサンプルを引っ張ってきて最初にぶち当たった壁の備忘録に以下のような文言を記していたので転記しておきます テーマに「AppTheme」なんてモノは無いと何度言えば判る！正しくは「AppBaseTheme」だ 忘れるな！オレ 誤) <style name="AppTheme" parent="android:Theme.Holo.Light" /> 正) <style name="AppBaseTheme" parent="android:Theme.Holo.Light" /> 頑張ってＴｒｉａｌ＆Ｅｒｒｏｒに励んで下さい
　低周波でサンプリングするときには、極端に大きい、または極端に小さいピーク信号をたまたま拾うと誤差が大きくなりますから、サンプリングする前に、サンプリング周期に応じた「信号なまし処理」、つまり一次遅れ、二次遅れなどの「平滑化処理」をするのが普通だと思います。 　どの程度の時定数で「遅れ」処理をするかは、信号の特性やサンプリングした後の取り扱いなどで判断する必要があると思います。けっこう、経験的な要素もあるのではないかと思います。ただし、サンプリング後のデータを相互に比較する場合は、各信号に対して同じ処理をしないといけません。
コンピュータ科学科の者ですが、情報科学部は主にプログラミング（Ｃ言語やjava等）を主体とし、かつ、コンピュータ科学科ではハードウェアのプロセッサ、集積回路を重点的に勉強します。ソフトとハード両方をこなします。 電子情報通信工学科の方もソフトとハード両方をするみたいですが、他学部 他学科なので私もよく知りません。ただ、ソフトウェア面では情報科学部が強いと思います。 質問者様の答えにはなっていませんが、参考までによろしくお願いいたします。
こんばんわ。 OS情報が不明ですが、こちらでいかがでしょう？ http://blog.ybbo.net/2014/01/14/windows7%E3%81%A … ご参考になれば幸いです。
Sheet2のA2に =INDEX(Sheet1!A:A,10000-SUMPRODUCT(LARGE((Sheet1!$A$2:$A$13<>Sheet1!$A$1:$A$12)*(10000-ROW(Sheet1!$A$2:$A$13)),ROW()-1))) 下にコピーします。 B2に =IF(INDEX(Sheet1!$A:$A,MATCH($A2,Sheet1!$A:$A,0))=INDEX(Sheet1!$A:$A,MATCH($A2,Sheet1!$A:$A,0)+COLUMN(A:A)-COLUMN($A:$A)),INDEX(Sheet1!$B:$B,MATCH($A2,Sheet1!$A:$A,0)+COLUMN(A:A)-COLUMN($A:$A)),"") 横にコピーします。該当データがなければスペースになります。 コピーして出てきたA列の「0」の行は削除してください。該当データがない行になります。算式が長くなるので、「0」を出しています。
配列として与えられたデータからヒープを作るだけなら 1. 空のヒープを作って 1つずつデータを追加する 2. 配列に対していろいろ処理して最終的にヒープにする のどちらも可能です. やってることがわかりやすいのは 1 だけど 2 の方が速く, n個のデータがあるとき 1 が O(n log n) 時間に対して 2 は O(n) 時間. でいちおう「取り出し」はそれでいいといえばいいです. ただし, 「末端の最も右の値をルートにコピーし、ヒープを再構成する」とはいってもその「末端の最も右」のノードは使わなくなってしまうので, 実務的には「末端の最も右の値とルートの値を交換してからヒープを再構成する」のが普通です. あと, そもそも「取り出す」といったときに「ルートの値をとってくる」だけで「ルートの値を取り除く」までは想定しない可能性があるので, もうちょっと正確な表現をすべきだとは思います. 「削除」ですが, 「削除したい値を削除し、削除した頂点以下のノードを再構成する」は (少なくとも素朴に読む限り) ダメです. TECHSCORE の絵でいうと, 2番の 21 という値を削除するときにその下の 5番と 6番だけをヒープとして作り直してもダメだよね. これも上の「取り出し」と同じように, 当該ノードを「末端の最も右の値」と交換してからヒープを作り直すのが自然かな.
ご質問の主旨に沿って、「解き方」だけをお示しします。 ＞（１）アルファベット26文字×２（大文字と小文字），0～9の数字と30種類程度のよく使う記号 ＞（「，」「．」「：」「！」など）に2進数をひとつずつ割り当てて表すとすると， ＞最低何ビット（何桁）必要か． 文字、記号の種類数を（26X2 + 10 + 30 =92）とします。 必要な２進数のビット数をNとすると、 2^N=92 より、 N=log92 / log2＝6.52 ビット数は整数でなければならないので、ガウスの整数NNを使います。 NN=ceiling (6.52) = 7 すなわち、92種類を表現するに必要な最低ビット数は7ビットになります。 なお、7ビットでは（2^7=128）まで表現可能ですが、このケースでは128-92=36種類空きになります。 ＞（２）同様に，1万種類の漢字を表すためには最低何ビット必要か． 上と同様に、 2^N=10000 より、 N=log10000 / log2＝13.28 ビット数は整数でなければならないので、ガウスの整数NNを使います。 NN=ceiling (13.28) = 14 すなわち、10000種類を表現するに必要な最低ビット数は14ビットになります。 なお、14ビットでは（2^14=16384）まで表現可能ですが、このケースでは6384種類が空きになります。
NANDゲートは入力が変化してから、出力が変わるのに5～15nSの信号の遅延があります、入力と同時に出力が変化するわけではありません ２番のステージで、A=H,B=H,X=L,Y=H　の時　A=L　に変わると15ns後に　X=H (B'=H)　に変わり　B-NANDゲートが その15ns後に　Y=L　に変化し右の３番のチャートと等しくなります {　Y=L　(A'=L)　A=L　の為　A-NAND出力は変化しません　X=H　のまま　} ４番ステージで　A=H　に変わると　A=H,A'=L　の為　A-NAND出力は変化せず　X=H　のままになります ゲートの遅れを加味したタイムチャートを書くと理解が深まります。
　＞就職を考えると名前が知られていることと、OB・OGの方が企業に多いことからやはり東海大学のほうがいいのでしょうか。 　あなたがそう判断するのであれば、それでいいのではないでしょうか。 　＞そんな基準が低い学部でも就職率はいいのでしょうか。 　分かりません。しかし、偏差値と就職率は、本来無関係。
ソースは読んでませんが、周波数以前に波形を見ればわかるのではありませんか？
CRCはエラ―検出専門。 検出精度が非常に高く、安価にハードウェア化できます。 CRCは再送と組み合わせて使います。
1. main関数も「関数」です。 とりあえず、 int main( void ) を int game(int n)に書き換えて、 新しく int main(void) { game(0); } とでも加えれば、1回だけはできます。 2回以上続けられないのは、exit を使っているからです。 game関数を呼び出しても、いろんなところから強制的にプログラム終了されてしまうため、制御できないのです。 exitは本当に致命的なエラーのときだけにして、通常はreturnで呼び出し側に戻るようにします。 例えば、 関数three は 戻り値をintにして -1: ○がそろった 0:揃ってない +1:×がそろった を返すようにします。WinだのLoseだのは、ここではやりません。 threeの結果を呼び出し側のjudgeで受けます。 この戻り値で0で無いものがあれば、それがこの局面での勝敗です。 そこで、同じく-1,0,1を返します。 それを呼び出した側で受け取って... と次々呼び出した側に戻していきます。 最終的に、どこかで、 if ( result==-1) { printf ("Win");}て感じに戻り値で分岐すればいいのです。 例えば、game()までこのように戻していくと、main関数内で result=game(3); if (result==-1) { printf("WIN"); countWin ++ ; } else if (result==1) { ... とすれば、4.も実現が容易です。
http://www.kogures.com/hitoshi/webtext/or-que-mm … MMsはこちらへんでどうぞ
>それはifで条件を書いて別の関数を呼び出すことと >かわりはないと思っています。 特定のハードウェアイベントに対するハンドラを 実行するには、割り込みを使うか、 ハードウェアイベントが起きたことを検査する 処理を常時実行するしかありません。 後者は大きなCPUパワーを食う上、応答が遅いのです。
「変な値」になるのは ・そもそも正規乱数発生用のプログラムではない 　高速フーリエ変換のプログラムっぽく見えますが、実際には(Σsin(ω)/N)^2+(Σcos(-ω)/N)^2 を計算しているだけです。 ・値を代入していないのに、変数の値を参照している。 　C言語では、変数や配列を宣言しただけでは、その値は決まっていません。 　例えば datafft[i] = (double)data[i+1000]; ですが、配列dataに値が代入されている様子がありません。 　よって、どんな値になっているかまったくわかりません。 　もっとも、その結果を利用していないので、影響はありませんが。 正規乱数発生方法は、検索すればいくらでも見つかります。 例えば http://ja.wikipedia.org/wiki/%E4%B9%B1%E6%95%B0% …
私も勉強始めた者です。 原道N70sですと、以下のサイトの方が情報共有してくださっています。 http://blog.goo.ne.jp/android556/e/8d6b2a75913f6 … 参考URL：http://blog.goo.ne.jp/android556/e/8d6b2a75913f6 …
問題がよく読めません。 とりあえず 「Excel ニュートン ラプソン法」 「Excel DKA法」 で検索すれば、上の二つは解けるんじゃないでしょうか
ごめん, Huffman木がどうこう以前に そもそも入出力をどうするのか書いていないんだから作れるわけないじゃん ってこと忘れてたわ.
http://michisugara.jp/archives/2013/huffman.html これ読んで判らなければ、何を説明しても無駄だと思う。
おまけですが, fgets は必ずしも改行を読み込まないことにも注意が必要です.
添え字の部分を変数にすればＯＫ。 でもって添え字に当たる変数をループの判定に使う文字にすればヨシ。 　ＦＯＲ～ＮＥＸＴ文 　ＤＯ～ＬＯＯＰ文 それぞれの使用例を（探して）見て考えてみてください。 ・・・ってか、ＢＡＳＩＣって、Ｃ言語やＵＮＩＸと同じで「方言」がキツイんです。 VISUAL BASICとかJIS Full BASICとかＢＡＳＩＣの詳細を示さないとダメですよ。
経営学＋IT社会人ですか。んー。 　ちょっと古いけれども「知識工学」という分野があります。名人技を支えている「暗黙知」、つまり言葉としてまとまってはいない、経験的に身に付いた知的能力のことですが、これを観察・インタビューを通して引き出し、コンピュータに乗せられるぐらいに明確な規則にまとめ上げる。「インテリジェントなシステムを作る方法論のひとつ」という風に捉えられますが、かつては、(1)観察・インタビュー・明文化という作業それ自体もなかなか職人技的であって定量的理論にまとめにくいため、工学の研究としてはあんまり面白くない、(2)人工知能の開発方法としては、本質的な深層知能を無視して表層的な知識だけを扱っているんで詰まらない、という扱いでした。 　しかし最近、多くの国内企業において、ベテランの退職に伴う継承者の育成が危ぶまれている。製造はもちろん、営業、経営、購買、法務、融資、M&Aなどでも同じ問題がある。（退職させなきゃよさそうなもんですが、それだけの資金力がない。）このため、それぞれの現場で独自に知識工学が再発見され、試行錯誤しながらも実践されるようになってきています。 　IT企業にお務め（特に、もしSEだった）なら、（社会経験の少ない学生じゃなかなかピンと来ないような）様々な現場の様々な課題に深く踏み込める。そして、研究成果がそのまま実地に活かせる。そういう意味で、ご自身の能力と機会を強みにできるんじゃないかな、と思う訳です。
心配してないで訊いてみりゃいいです。情報系の論理学の要は自動証明。不完全だけれども速い線形入力推論や、のろいけど完全な導出原理など、ま、少なくとも「証明可能」だとか「決定不能」の概念は、学生でも分かってなきゃおかしい。だから、（論理ではなく数学の話だけれども）、不完全性定理や標準的なZF公理系の話程度のことなら案外すらすら教えてくれるんじゃないかな。もし分かんなくても、別に訊いて失礼に当たるわけでもなく、むしろ自発的に勉強しようという学生は大歓迎のはず。適当なひとや教科書を紹介して貰えるかも。
　添付画像の文字が読めないのでウィキペディアの情報によると。 ＞一階述語論理 ＞http://ja.wikipedia.org/wiki/%E4%B8%80%E9%9A%8E% … 　この話だとするとたとえば古いですが、 ＞新 人工知能の基礎知識 [単行本] ＞http://www.amazon.co.jp/%E6%96%B0-%E4%BA%BA%E5%B … 　第５章が「述語論理」ですが、そんなにページ数は多くないです。 　１１４ページに参考文献がいくつか紹介されています。
s1=0 s2=0 for i=1 to 10 s1=s1+a(i) next i am=s1/10 for i=1 to 10 s2=s2+(a(i)-am)^2 next i
＞この部分積分は紙と鉛筆を使って・・・ 　部分積分は次でしょうか？。 　　∬f(u) u dv = ∫F(u) u ds + ∬F(u) g(u) dv　　　(1) 　ここでuは解関数，f(u)は支配方程式です。(1)の形式はもともと変分法から来ています。uを局所的に多項式近似すると、変分法の場合、自然にガラーキン法になり、右辺2項目が要素マトリックスのコア，1項目が境界条件を与えます。 　それで変分原理による有限要素法が、最も上手くいきます。多くは線形問題です（ラプラス，ポアソン，弾性方程式など）。しかし変分原理とは無関係にガラーキン法を用いてもよい訳で、適切な変分原理がみつからなくても(1)で弱定式化と行い、FEMしても良いはずです。こう考えると、FEMの本質はガラーキン法です。 　よって(1)の類（高階微分含む場合）がFEMの基本なので、要素マトリックスのコアの導出はふつう手計算です。 　有限要素法は積分方程式を基本とし、差分法は微分方程式を基本とするという、問題にしてみれば表現の違いという事になるでしょうか？（厳密には同値でないですが）。 　ふつう、局所的な多項式近似の係数を有限要素節点の未知量と関連付けるために、内挿関数（形状関数）を導入しますが、これは離散化方法を内挿関数とした、と解釈するのが妥当と思います。差分法では差分を離散化方法として選択しただけで、事の本質は微分にあると解釈できるように。 　　※実際FEMでは、要素フリー有限要素法なんていう形容矛盾な方法まである始末です(^^；)。 　従って、要素マトリックスのコアを内挿関数Matrixで挟んで積を取り、さらに回転行列で挟んでなんて部分は、コンピューターにまかせてOKな部分です。 　高階の弱定式化でわかりやすいのは、重調和方程式（4階微分）だと思います。そこでは部分積分を4回行い、自然境界条件も含めて4つの境界条件が、部分積分の表面積分項から出てきます。 　また高階の場合は、最高次の微分項が少なくとも要素内定数となるように、高次の多項式を用いるのが普通です。
＞このプログラムをIF、END　IFを一回のみ使うプログラムに変える方法を教えてください。 (´・ω・`)ん？ 自分には一回しか出てきていないようにしか見えないんですけど。。。 入力されたｘとランダムに作成した値が等しいことを比較する必要はありますか？ そう考えれば一度で済むように作り直すことは簡単ですよ。 ただし他の部分でプログラムをいじる必要がありますけどね。
　振幅変調(AM: amplitude modulation)の話でしょう？足し算じゃなくて掛け算ですよ。AMは搬送波 Ac sin(ωt) に対して、ωよりずっと低周波の成分しか持たない信号f(t)を掛け算する。だから結果の波形のピークは、その瞬間tにおいて sin(ωt)＞0なら Ac f(t) に、sin(ωt)＜0なら-Ac f(t)に概ね対応します。もちろん、谷底は符号が逆になる。 　もしf(t)にバイアス（直流成分）が入っていてf(t)がいつも正の値だ、ということなら、|Ac f(t) sin(ωt)|のピークは概ねf(t)。なので、振幅の外形（envelope）を見れば、概ね Ac f(t)になっている。 　なお「概ね」というのは、ピークや谷底の瞬間にdf/dt=0であれば「ぴったり」なのだけれども、df/dt≠0であればその影響でピークの時刻が少し変わり、ピークtにおいて|sin(ωt)|は1よりほんのちょっと小さくなってる、ということ。 　ところで、 > なんにも変えてない搬送波の振幅Acまで変化するのが納得できません。  と仰る意味はさっぱり分かりません。変調された波形を計測しただけではAcは分からんでしょうに。
素直に放り込んで計算する.
y(3), y(4), と順に求めていったらなぜ「ダメ」なの?
いちおうしてきしておくと #4 にかいた事情により「探しまわ」るのが実は簡単な部類だったりする＞#3. 厳密にいうと「小文字のアルファベット」そのものがロケールに依存する概念だしね.
＞ここでS1にA3000からA3100まで取り込めますが、 S1にA1001からA1100の間違い？ P = zeros(1000,1); for k=1:10 　[S, header]=xlsread('sample.xlsx',sprintf('A%d:%d', k*100+9001, k*100+1000)); 　P(1001-k*100:1100-k*100) = S; end ってことですかね。
単に足し算してるだけだから, 形式的な証明はともかく直感的には簡単だよね. 本質的には同じことだし.
> PRINT　INT　（RND*4）+1; こうしてRNDを直接表示してしまったら、後から計算に使ったりはできません (次にRNDを使ったら、新しい乱数が使われるので) 変数や配列に保存しましょう。 > ELSEIF文を用い，IF文およびEND IF文は1回で済ませる。 構造は簡単です。 問題中に日本語で書いてある条件を、プログラミング言語に翻訳するだけです。 もし x=y=z=1 のときは 　　「大当」と表示， そうではなく、もし x=y=z≠1 のときは 　　「当」と表示， そうではなく、もし x, y, z のうち２つだけが一致したときは 　　「惜」と表示， そうではなかったら 　 「残念」 と表示 少し難しいのは、条件の書き方です。 数学と違って、 「x=y=z=1」とは書けません、「A=B」「A<>B」といった「2つの値の比較」しかできません。 なので、 元の式を 「2つの値の比較」 と「『かつ』『または』『ではない』」といった論理演算との組み合わせで表現します。 例えば 「x=y=z=1」 は x=y かつ y=z かつ z=1 です。 「x, y, z のうち２つだけが一致」 は 「xとyが一致で zとは一致しない」または「yとzが一致で xとは一致しない」または「zとxが一致で yとは一致しない」 となります。 これをそのまま書けば、とりあえずはできます。 ここで、IF～ELSEIF～ELSE～END IF の性質を応用します。 このIF～ELSEIFには「上から順番に評価して、最初に条件が一致したものが実行される」という性質があります。 x=y=z≠1 の判定をしている、ということは、上の「 x=y=z=1」ではない、ということです。 このELSEIF で、 x=y=z の判定だけをします。 本来なら、x=y=zの時は x=y=z=1 x=y=z≠1 の2通りの可能性がありますが、=1の場合は、上のIFで一致するので、このELSEIFは実行されません。 つまり「x=y=z」だけ判定すれば、必ず「x=y=z≠1」になっている、ということです。 同様に、それまでの条件を考えれば「二つだけ一致」も判定を省略できます。
>「Pythonの勉強をすること」 ということなので。 常套手段は、次のような流れのものです。 (1) 1行読み込む (2) (1)の行を加工する (3) (2)で加工した文字列を書き出す (4) 以上(1)～(3) をファイル全部に対して繰り返す (1),(3),(4)については、チュートリアルで勉強できます。 http://docs.python.jp/2.7/tutorial/ http://docs.python.jp/3.3/tutorial/ (2)について、今回は特定のパターンでの変換となるので、正規表現を使った置換が便利でしょう。 http://docs.python.jp/2/howto/regex.html http://docs.python.jp/3.3/howto/regex.html > いろいろ調べてもなかなか実現できません。 どんなことをして、どんな風に「実現できません」だったのでしょう? 原因を調査して対策を考える、というのは、プログラミングの基本です。 Pythonの勉強が目的ならば、この解析もきっちりとやりましょう。 例えば、上記の流れでも、(1)～(4)のそれぞれに「うまくいかない場合」が存在します。 (1)が失敗しているのに、(2)を変更しても無意味です。 > 「ほかの言語のほうが書きやすい」 例えば、「パターンマッチによる置換」ができるテキストエディタでできます。 # Windowsのメモ長等の一部の低機能なもの以外なら、大抵のものが該当します 数ファイルだったら、プログラム作っている間に処理が終了します。 例えば、UNIX系に標準のsedコマンドを使えば、1行で書けます。 ファイルが大量にあっても、シェルスクリプトやバッチファイルの繰り返し機能(for 等)を使えば簡単です。 ※ 別解 import os os.system(r"sed 's/ \([0-9]*\):[0-9][0-9]:[0-9]*\.[0-9]*/|\1/' infile > outfile") sedコマンドが使える環境限定
たとえば http://www.phon.ucl.ac.uk/resource/vtdemo/
チャタリング防止回路がどんな回路なのかにもよりますが、ＣＲの場合積分されて信号が鈍らされ、最終的に入力が一つと判断されます。 この回路がなければ、チャタリングした回数分だけ信号が印加されることになるので、多くの数をカウントすることになるでしょう。要は、正しく動作しないということです。
カウンタ回路は、信号の立ち上がりまたは立ち下がりで１回カウントされます。チャタリング防止回路がなければ立ち上がり（または立ち下がり）信号が何回も入力されることになるため、複数カウントされます（正しく動作しない）。防止回路が入っていれば立ち上がり（または立ち下がり）信号は１回しか入力されませんので、正しく動作することになります。 http://elm-chan.org/docs/tec/te01.html http://www001.upp.so-net.ne.jp/FITDESIGN/manu1.htm
＞0,2,4,6を考えてから+3すればいい… 既にほぼ正解に辿り着いていると思われますが。 (1) RND(1)*4で0～4未満の乱数を取得。 ↓ INTで整数化…[0,1,2,3] ↓ 2を掛ける…[0,2,4,6] ↓ 3を足す…[3,5,7,9] なので、 INT(RND(1)*4)*2+3 (2) あらかじめ、配列変数Xを宣言しておく。 FOR i=1 TO n X(i)=a+((n-1)*r) NEXT i FOR j=1 TO k PRINT X(INT(RND(1)*n)+1) NEXT j 配列Xに所定の数値を格納する処理をn回繰り返し、1からnまでの乱数で、そのうちのいずれかひとつをランダムに選定し表示、という処理をk回繰り返します。 但し、nが1以上の整数であること。 入力者が、0とか0.5とかをINPUTしてしまう恐れがある場合、それはそれで別に判定文を設けて例外処理をします。 また、n=1の時、答えはa一択になるので、それがイヤな場合も、併せて事前処理をしておきます。 （例:IF n<2 THEN 変数をリセットして再度INPUT行へ飛び、入力のやり直しを促す、等）
＃１ですが、まあフローチャートくらいは書いてあげましょう。 前教えてあげた、ランダムの話は覚えていますか？ 今回乱数は使わないです。確率はｎとｒだけで決まるから。 ＦＯＲ～ＮＥＸＴ　は使えるようになりましたか？ まず数学の確率がわからないとつらいので、確率は次のようになります。 （１）　ｎＣｒ・（2/6）^ｒ・（4/6）^(ｎ－ｒ) ちょうどｒ回出るという確率をプログラムで求めろ、ということは。 ｎＣｒ＝ｎ（ｎ－1）（ｎ－2）・・・／ｒ（ｒ－1）（ｒ－1）・・・ を求めろということですね（式１と呼ぶ」）。 （２）は（１）の答え　１～ｒ　を全て足し算します。 今、ＦＯＲ～ＮＥＸＴ　の入れ子構造を習っているのではないですか？ ｉとかｊとかｋとか　←見間違いに注意してください。 （１）フロー 画面クリア 変数初期化 式１の分子を　Ｂ、分母をＣ　とおく（Ａ使う予定だったけどやめました） Ｂ＝1　としておく Ｃ＝1　としておく Ｄ＝1　としておく Ｐ＝２／６　としておく（３の倍数が出る確率） Ｎ　を入力させる Ｒ　を入力させる ＦＯＲ　ｉ＝1　ＴＯ　Ｒ 　Ｘ＝0　としておく 　Ｂ＝Ｂ*（Ｎ－ｉ+1） ※この式によって、分子に　ｎ、（ｎ－1）、（ｎ－2）・・（ｎ－Ｒ＋1）　が順番に掛け算されて行きます 　Ｃ＝Ｃ*ｉ ※この式によって、分母に　１、２、・・ｒ　が順番に掛け算されて行きます 　Ｒ、Ｒ－1、Ｒ－2、・・１　という減る順番でも良かったんですけど、どうせ同じなので式をシンプルにしました ※宿題ならば、ｎＣｒ　を正しく理解しているか、も、ＦＯＲ～ＮＥＸＴの使い方と同時に試されていますよ！ ＮＥＸＴ　ｉ ＩＦを習っているということにして ＦＯＲ　ｉ＝1　ＴＯ　Ｎ 　ＩＦ　ｉ＜＝Ｒ　ＴＨＥＮ　Ｄ＝Ｄ*Ｐ 　ＥＬＳＥ　Ｄ＝Ｄ*（1－Ｐ） ＮＥＸＴ　ｉ ＩＦを習っていなかったら、２段階仕立て ＦＯＲ　ｉ＝1　ＴＯ　Ｒ 　Ｄ＝Ｄ*Ｐ ＮＥＸＴ　ｉ ＦＯＲ　ｉ＝Ｒ+1　ＴＯ　Ｎ 　Ｄ＝Ｄ*（1－Ｐ） ＮＥＸＴ　ｉ ただ、このやり方だとＲ＝Ｎ　のときは答えが狂ってきますから、ＩＦが使えないと結構不便です ＩＦを使わずにＩＦっぽいことをやる裏技 ＦＯＲ　ｉ＝1　ＴＯ　Ｎ 　Ｄ＝Ｄ*（－Ｐ*（ｉ＜＝Ｒ）－（1－Ｐ）*（ｉ＞Ｒ）） ＮＥＸＴ　ｉ 最後 Ｘ＝Ｂ／Ｃ*Ｄ Ｘを表示 （２） （１）の　Ｒ　を入力させる　の後を以下のように変えます Ｅ＝0　としておく ＦＯＲ　ｊ＝1　ＴＯ　Ｒ 　（１）の　ＦＯＲ　ｊ＝1　ＴＯ　Ｒ　から　Ｘ＝Ｂ／Ｃ*Ｄ　まで　そのまま 　Ｅ＝Ｅ＋Ｘ ＮＥＸＴ　ｊ Ｅを表示 以上です。
> 自分で実際にシミュレートできたら楽しいなあ というだけのことであれば、自分で勝手に規則を考えて、実際にシミュレートなされば良い。 　たとえば： 　n行m列に並んだ升目を考えて、ただし、一番上の行は一番下の行につながってる。一番左の列は一番右の列につながっているということにする。（これはドーナツの表面（トーラス）と同じ位相を持つ空間です。）これが「今の状態」だと思うことにします。 　これらの升目は場所を表す。各升目には「何もいない」か「オオカミが居る」か「ヒツジが居る」としましょうか。 　で、オオカミとヒツジの行動のルールを定めます。 　オオカミが居る升目の隣にヒツジが居る升目があるなら、オオカミは隣接するヒツジの居る升目のどれかに移動して、ヒツジを喰ってしまう。そして、ある確率で、オオカミが元居た升目にもう１匹オオカミが生まれる。 　オオカミが居る升目の隣にヒツジが居る升目がないなら、ある確率でオオカミは餓死し、その升目は何もいない状態になる。餓死しない場合、オオカミが居る升目の隣に何もいない升目があるなら、ある確率でオオカミは隣接する何もいない升目のどれかに移動する。さもなくば、オオカミはその場にとどまる。 　ヒツジが居る升目の隣に何もいない升目があるなら、ある確率で、隣接する何もいない升目のどれかにもう１匹ヒツジが生まれる。 　 　てな感じでしょうかね。以上の設定に出てくるいくつかの確率の値を適当に決めておいて、最初にランダムにヒツジとオオカミをばらまき、シミュレーションをやってみる。確率を変えたり、ルールを変えたり、いろいろとお楽しみになれば宜しいかと。 　ほかにも、森林火災（火は燃え広がるけれども、燃えるものがなくなれば消える。火が消えた跡には、しばらくするとまた木が生えてくる）ですとか、回遊する魚をサメが追いかけ回すだとか、いろんなことをイメージしたルールを考えて、試してみることができます。 　ところで、セルラーオートマトンという数学分野（既に出ている回答にあるgame of lifeもセルラーオートマトンの一種です）では、升目の状態が刻々変わって行く、という点については上記のようなシステムと同じなのだけれども、ルールの作り方が全く違う。すなわち、単に、「ある升目（セル）が、それ自身の状態とその周囲にあるセルの状態に応じて、それ自身の状態を変える」という風に考える。確率は使わないし、個々のオオカミやヒツジというものも考えないんです。それでも、多くの升目がどんどんと千変万化する様子を眺めていると、あたかも「ある個体が移動して行ったり、増殖したり、死滅したりしている」ように見えちゃう。面白いものです。 　２次元平面のセルラーオートマトンについて最も興味深い定理は、そもそもセルラーオートマトンというものの発案者であるフォン・ノイマン自身によるもので、一群のセルから成るパターンが、万能チューリングマシン（あらゆる計算ができるコンピュータ）になるようにできる、ということ、および、一群のセルから成るパターンが自己増殖する（つまり、自分の複製を作る。これは生命の最も重要な特徴！）ようにできる、ということ。で、のちにコンウェイが考えたgame of lifeでも、万能チューリングマシンと自己増殖のパターンが作れることが証明されています。
大阪北辺りにお住まいの、将来有望な大学生なんですし。 # なんで情報工学のカテなのかは不明ですが。経営学とか人材マネジメントじゃないんですかね？ # 技術者として有望と入っていない。 ということで、私もひとつ。 int count(char *str) { 　char *end; 　for(end = str; *(end); end++); 　return (int)(end - str); } ………「文字数」返さない場合もあるかな。 shift-jisやutf-8とか…。 まぁ文字コード指定されていないしなぁ……。
人工知能の中でも、迷惑メールを排除する学習と似た部分や、それが、利用者の増加・利用者による正誤のフィードバックの増加によって加速度的に学習が進化する部分などで、次のサイトで言及されている部分が大変興味深く思いました。 iPhoneアプリ　アキネーター(Akinator）の仕組み | iPhone App Star http://iphone0appli.blog82.fc2.com/blog-entry-12 …
真面目に自分で問題を解いてみませんか。 人の回答(適当に書かれた誤りが含まれているかも知れない答)を引き写したりしても実力は付きませんよ。 分らなかったらC言語の基礎(例えばカーニハン・リッチーの本等)から復習して下さい。 http://ja.wikipedia.org/wiki/プログラミング言語C それから複数のフィールドがあるデータをstringのままでは構造体を活用した事にはなりません。 学生番号、名前、性別、体重(?) があるようですから、それを反映した構造体(例えば次等)を宣言する必要があります。 typedef struct student{ int manno; char* name; char sex;// male='M', female='F'; or boolean, int 等で宣言する事も可能 int weight; } 入力は一行単位に読込み、string標準関数: string.h で宣言されているstrtok(....)等を使って 各fieldを切出し、必要な場合整数に変換してmanno, weightに代入する等の処理を繰返して下さい。 後は自分で解いて下さい。 なお、技術者向け > プログラミング > C・C++ のカテゴリも参照下さい。 http://okwave.jp/c250.html 同じ窓の検索窓で　"C言語　入門"　等と調べてみて下さい。 ==> http://oshiete.goo.ne.jp/qa/6430041.html C言語 おすすめの本
[1] 互いに独立で無相関な信号x(t), y(t)の積(x(t)y(t))の話だとしても、それだけじゃ期待値は決まりません。たとえば 　　x(t) = 2 cos(t) 　　y(t) = 3 sin(4t) は互いに独立で無相関ですが、 　　x(t) = 1 　　y(t) = t だってそうです。 [2] 互いに独立で無相関な信号x(t), y(t)のフーリエ変換 X(ω), Y(ω)の積 X(ω)Y(ω) を逆フーリエ変換したもの、というのは、畳み込み積分 　∫{s=-∞～∞} x(t-s)y(s) ds に他なりません。で、やっぱり、これだけじゃ期待値は決まりません。 　いやそういう話じゃないんだと仰りたいのだとすれば、ご質問を正確にお書きにならなくてはね。 　ところで最近、こんな話もありました：　http://oshiete.goo.ne.jp/qa/8571563.html
共通の法使用時の同一平文暗号化の問題ですね。 一方の公開鍵を(ea,N)、もう一方の公開鍵を(eb,N)とします。Nは共通とします。 そして二つの暗号文を Ca＝M^ea(mod N) Cb＝M^eb(mod N) とします。 GCD(ea,eb)＝1よりα×ea＋β×eb=1を満たすα,βが存在し、それを求めることができます。 そうすると、二つの暗号文と求めたαとβを使って【mod表示を省略します】 　Ca^α×Cb^β ＝(M^ea)^α×(M^eb)^β ＝M^(α×ea)×M^(β×eb) ＝M^(α×ea＋β×eb) ＝M^1 ＝M を計算することで、Mが求まります。
「何処がどう間違っているのでしょうか？」とは, どういうことでしょうか? 少なくとも, ストレートに読めば「間違っているという指摘はしていない」ことは瞭然だと思うんだけど....
JAXAの資料 http://www.jaxa.jp/press/2006/04/20060412_sac_oi … 東北大学の学位論文 http://ir.library.tohoku.ac.jp/re/bitstream/1009 … 電波伝搬環境と高稼働率化技術 http://www.radio3.ee.uec.ac.jp/GAKAISHI-4.pdf#se …
それはフーリエ変換が分からないということでしょうか？ フーリエ変換はある関数を周波数領域へ変換するものです。 元の関数にどの周波数がどれくらい含まれているのかを示すので、横軸は周波数となります。 具体的には参考URLに分かりやすく書かれています。 参考URL：http://hooktail.sub.jp/fourieralysis/Fourier/
それでどうしてほしいんでしょうか？ 確かにphpの処理本体はありませんね。 コードそのものは書きません。 解決する方針は、 半角スペースを入力文字列から検索しその個数をカウントする。 というのが大前提なので、 1.文字列を先頭から1文字ずつ判定してカウント。 2.文字列全体から正規表現を使って全てを検索、カウント。 と言う2パターンかと。 1なら php 文字列 1文字 php 文字列 比較 2なら php 正規表現 検索 php 配列 カウント 等と検索すれば必要な情報は揃うでしょう。 本来はこの検索キーワード自体を自分で考える必要があるのをお忘れなく。
該当するビット列は 00001111 00010111 ： 11110000 の70個です。ですからまず70個のビット列を作成し、要素数70の配列 hairetuに格納しておきます。 整数の乱数を次々に発生させ、70で除した余りrを求めます。余りrは0～69のはずです。 次々にhairetu [r]を使用します。
V(a*X) = a^2 * V(X) X, Yが独立のときにV(X+Y) = V(X) + V(Y) などの証明は終わっているものとします。 ave(Xn) = (1/n)*X1 + (1/n)*X2 +・・・+ (1/n)*Xn なので、ave(Xn)の分散は (1/n)^2 * V(X1) + (1/n)^2*V(X2) +...+ (1/n)^2*V(Xn) = (1/n)^2 * σ^2 + (1/n)^2*σ^2 +...+ (1/n)^2*σ^2 =(1/n) * σ^2 = σ^2 / n (X - μ) / σ で標準化できることも、期待値の線形性と、それから導かれる上に示した分散の性質とを使うと理解できると思います。 rand() については、Xそのものなので分散は1になるけれど、randで発生させた乱数の平均を取ったもの、というのをいくつか作ってみれば上に示したものに合っていることがわかると思います。たとえば、rand() 100個組を100組作ってそれぞれの組で平均を取り、出来上がった100個の平均値についてその平均や分散を調べてみると良いと思います。
文章が意味不明なので問題として成り立っていない. 「1バイトで表す」とはどういうことだ?
シリアル通信以前、コードが書ける書けないの段階で引っかかるようだと、それは相談の順序が違うんじゃね？と思いますが…サンプルが理解できないレベルの人員に、一週間で出来るように教えろと言うこと自体が無理ゲーです。 でも先輩はそうなることを半分予測しているような気もするので、まずコードを書こうという野望は一時捨てて、シリアル通信の何たるかを勉強する方に目標を絞った方がいいのかな、と。実際に動いている物を見てみないとイメージすることも出来ないから、USB-シリアル変換ケーブルを2本とクロスケーブルを用意して、何か適当な通信ツールを用意し、データを送ってみるところから始めましょうか。ツールは送信側と受信側の二つが動いている必要があるけど、多重起動を禁じていると困るため、二種類あると安心です。 こんなのとか… http://www.vector.co.jp/soft/winnt/hardware/se44 … こんなのも。 http://www.vector.co.jp/soft/winnt/hardware/se41 … シリアルポート自体もある程度は理解できていないと困るので、以下に例を。ただし今どきシリアルポートなんて使うアプリケーションはほぼ制御系ばかりなため、ド素人に易しい解説はなかなか出てきません。 これはC#だけどまだ易しい方 http://codezine.jp/article/detail/3785 メーカー系の解説 http://www.contec.co.jp/support/technical/device/ おそらく自力でコードが書けない人が今から自習しても、一週間で間に合わせるのは無理でしょうが、シリアルポートの何たるかがある程度理解できれば、手を動かすときにも役に立つ…と言うか、制御する対象について何も解ってない状態でコードなんて書けるわけがない。なのでシリアルポートの理解が最優先で、コードはその後の話です。
#defineは置き換えマクロであってヘッダファイルを定義するものではありません。ですから #include <stdio.h> #if !defined SAMPLE_H #define SAMPLE_H int wa(int a, int b) { return a+b; } #endif int main(){ printf("%d\n",wa(40,70)); return 0; } ならOKです。まあちょっと中途半端ですね。関数マクロになっていないですし。 int wa(int a, int b) { return a+b; } の部分だけを別ファイルに保存しておいてincludeすればできますけど。 関数形式マクロなら #include <stdio.h> #define wa(a,b) ((a)+(b)) int main(){ printf("%d\n",wa(40,70)); return 0; }
意味不明な質問だな～と思って、BasicWheelServoクラスなるものを検索してみました。あなた、玉川大学の学生さんですね？ 受けている講義はこれですか？ 工学専門実験II（電子情報コース）　『ロボットの基礎』 http://robot.tamagawa.ac.jp:8080/cyber/BoeBot201 … 課題をちゃんとこなして、提供されているサンプルソースを全て読んでいれば答えはわかるはずです。 これ、一般論でも何でもなく、大学で与えられている課題の中身なので、その講義を受けていない人には全く関係のない話です。自力で解決できなければ同級生にヒントをもらいましょう。
　#1です。 　この前の参考ＵＲＬに「VS2013の新機能」という記事があると思いますが、それを読んでみて興味を引くものがないとか、内容がよくわからないといった状態なら、とりあえず2012で問題ないと思います。
問題そのものに突っ込むが, 「配列のアドレス」を受ける引数の型が char * というのは納得できないなぁ.
>連結リストについてはまだ習っていないのですが、課題が出されて困っています。 でしたら、課題出した人に言うべきでは？ 「まだ習ってないッスよ」とでも。 授業料とか払っているのであれば、言う権利くらいはあるんじゃないですかね。 予習しておくのが前提とかでなければ。
一個目の　j=? のところは、文字列の長さが必要ですね。 jを０から１つづつ増やしていって文字列の最後までカウントアップさせます。 for( j = 0 ; *( words[i] + j + 1) != '\0' ; j++ ); 二個目の　while( ? ) の部分は　j が０までやればよいのでこうなります。 while( j >= 0 ) ひとつめのfor 文の真ん中の節で　1 足しているのがわかりにくいかもしれませんね。 次の文字がNULLになってるかどうかを判断したくて１足してます。
printf で double の値を表示するとき, むかしは %f を使ってた (%lf は NG) んだね. だから, 「ちょ～古い」処理系だと変なことになるかもしれん. ただ, scanf とのからみでいろいろあって, 今では %lf でも OK になってる.
Excelで動作するプログラム言語という意味であれば VBA(Visual Basic for Applications)です。 http://ja.wikipedia.org/wiki/Visual_Basic_for_Ap … あとマルチはやめましょう。 http://oshiete.goo.ne.jp/qa/8586487.html
a = b = c = 0 のとき「解が実数であるかどうか」ってどう判定するんでしょうかね.
どこがおかしいかというと ・「次の信号」って書いてあるけどどこにも「信号」がない ・「次の信号のインパルス応答を求めよ」とあるが「信号」にインパルス応答など存在しない ってあたり.
役割は、既にあるように、複数のソースファイル間で共通で使うものをまとめるためのものがヘッダファイルです。 ですが、ヘッダファイル自体は、C/C++のソースコードです。 他のソースコードから #include で読み込まれることを考えて作られている、というだけです。 実際に、 #include "test.cpp" 等とすれば、 ( 一般にはソースファイルと言われる ) test.cpp を「ヘッダファイル」として使うことができます。 「統合」というのが何を指しているのかがわかりませんが。 #include "header.h" とあったら、 header.h のファイルの中身をコピー → #include "header.h" を消して、その場所にペースト と同等です。 特別なソフトは必要ありません。 実際のコンパイル時には「プリプロセッサ」と呼ばれるプログラムが、上記の作業を行い、その処理されたものをC/C++コンパイラがコンパイルします。 プリプロセッサがどんな処理をするかは、コンパイルオプションで確認することができます。 例えば、 GCC なら -E オプションでプリプロセッサによる処理結果が得られます
マイクロプロセッサがとても安いので、人が操作するような応答が遅くて良いものなら、これを使って作っちゃう。組み合わせ回路や順序回路を積極的に使うのは、処理速度を速くしたい場合ですね。ICを組み合わせると結局高くつきますから、うんと簡単な回路以外はASICやFPGAで作ることが多い。信号処理、画像処理、画像認識、音声認識、その他いろいろ。
Excelに持っていくだけなら、画面に表示される結果をコピー→Excelに貼り付け でもできます。 その後で、Execl上でグラフに加工してください。 また、Windowsのコマンドプロンプトや、Unix/Linuxのコマンドラインシェルから 実行コマンド > 保存ファイル のように > で保存ファイルを指定すると、 画面の代りにファイルに出力されるようになります。 (リダイレクト と言います) これを使って、 ～.csv というファイル名で出力し、ExcelからCSVファイルとして開けば、カンマ区切りが表になります。 以下、上記コピペと同様に加工します。 fprintfは出力先に任意のファイルにできます。 使いかたは、最初に出力先を指定する以外は、printfと同じです。 出力先は FILE * で指定します。 任意のファイルをFILE * と結び付けるには、 fopen 等を使います。 というあたりのことが、C言語の初心者向け参考書の「ファイル操作」とかいう当りに載っているはずです。 これを使って、結果の出力先をファイルにして...以下、リダイレクトによるものと同様です。 ・xls, xlsx ファイルを直接出力する ・Excelを自動操作する ・図を直接画像ファイル等として出力する 等の方法もありますが、これらに比べると高度です。
論理積(AND)…文字通り、二つの入力信号の桁毎の積を取ります。 [10110111] * [01111111] 1～3桁目と5～6桁目は、1*1なので答えは1、それ以外は、0*1または0*1なので0になります。勿論、0*0の場合も0です。 結果、 [00110111]が出力されます。 元の値の最左端だけを0に変えて他はそのままにしたいのであれば、これが正解でしょう。 参考までに、他の論理演算を列記すると、 論理和(OR)は、同様に「和」を取ります。どちらか片方でも1なら結果は1です。(1+0または0+1になるから) 排他的論理和(XOR)は、「どちらか片方だけが1」という排他的な評価をし、それに合致した時のみ1を返します。両方1の場合は0です。 論理等価演算(EQV)は、二つの信号が等価であることを評価します。即ち、どちらも0またはどちらも1であれば1を返します。 論理包含(IMP)は、1つ目の信号が1で2つ目の信号が0の時のみ、0を返し、それ以外は1を返します。これについては、「最初の条件が真で、かつ、二つ目の条件が偽の時、偽を返す」と言い換えた方が分かりやすいかも知れません。 論理否定(NOT)は、ちょっと特殊で、これだけは入力信号が1つです。信号が0なら1に、1なら0に反転させます。他の論理演算と組み合わせることで、否定論理積や否定論理和などの評価が可能になります。
最適な成分数を決めるのは、それ自体、難しい問題です。 過学習（過剰適合）すると、汎化能力が下がってしまうわけで。 ＞１、成分数を変えてモデルを各成分数毎に複数作成したとして、どの様に比較・評価を行えば良いのか たとえば、成分数を変えながら、半分のデータを使って学習して、別の半分のデータがどれだけ学習結果に当てはまるかを調べるなど。 ＞２、１の様な手段ではなく、より簡単な(toolboxやmatlab内のfunctionを用いて)手法で成分数を決定する手法 matlabのtoolboxでというのは難しいですが、成分数も（人手を介さずに）機械的に求めたいということであれば、赤池情報量規準（ＡＩＣ）とか、最小記述長（ＭＤＬ）とかを考えるのが、よいです。 あるいは、成分数自体をパラメータ（ハイパーパラメータ）としてモデルに組み込んで、それも一緒に推定するか。
「買い手が向かい」というのは、実際に買い手がその地に足を踏み入れて契約し、金をはらう、ということではありません。買い手がそこからの経費を負担する契約を行う、ということで、契約は事前にどこかで（最近ならネットででも）行います。実際には「買い手が料金を負担して、国内輸送業者を手配して、現地から埠頭まで運送させる」ということです。FOBなら、「売り手が料金を負担して、国内輸送業者を手配して、現地から埠頭まで運送させる」ということです。 なお、FOBのような用語はもともと貿易用語ですが、最近、国内取引でも使えるという規定ができました。
もし可能ならばの話です。（自由に読み飛ばして結構ですし、軽く受け流してください） かつて、NHK-Eテレにて、『ITホワイトボックス』という番組が放送されていました。（現在は終了して、放送されていません。） 上記の番組から、DVDのシリーズが、発売されています。 ITを知る上で、役立つ内容ばかりです。 もしも、経済的余裕があったり、利用できる図書館にDVDがあれば、ご覧になられるといいと思います。
　「認知心理学」については、よく知りませんが、現役の（いい歳の）PG/SEです（SEって職種は、厳密には無いそうですね(^^；)）。それで現場感覚言うと、「記号論理学」が実務に役立った事はありません。「記号論理学」に頼らなくたって、常識でロジックは組めるはずです。実際問題としては、2変数関数としてのAndとＯｒの返り値を知ってれば良い・・・。 　ただし、「プログラミング言語」と「記号論理学・集合論」は、非常に構成が似ています。前者が後者をお手本として作られたものだからと思います。 　以下は余談として扱って頂ければ幸いですが、むかし上記の点についてまとめてみた事があります。 　　http://www.junko-k.com/collo/collo229.htm のNo.1714です。長いです・・・(^^；)。
(1)気がつけば。 (2)デスクトップを表示したら同じですよ。 (3)やってるところは少ないと思います。つか、「教えてもらえる」と思ってるところが間違い。大学生でゲーム作ってるのは独学でやってるのが多いですよ。VisualStudioやUnityが多いですけど。気軽に作るならツクール系とかもありますけど。 (4)学歴も資格も関係ないです。面白いゲームを作ったかどうか(センスを感じさせる作品があるかどうか) なんでも教えてもらえると思ってるなら専門学校の方がいいかもね。でも、一握りのセンスある奴とその他大勢の腐った奴だから、どっちに埋もれるかはそのひとによるけど。
一般的な言葉づかいの話ですが、 「重みづけ」といった場合は、特定の個体を重要視するような意味で個体ごとに値を設定するのに対し、 「バイアス」といった場合は、全体的に（あるいはある範囲のグループに対して）値を偏らせる意味で、広く同じ値を設定するとき使うことが多いです。 ニューラルネットは概念程度しか知りませんが、 「重みづけ」はシナプスの結合の強さを表したもので、学習によって、シナプスごとにその値が変化していく(これがニューラルネットにおけるプログラミング)のに対し、 「閾値」は脳細胞の感度のようなもので、基本的に変化しません。 「バイアスをかける」のは、「もしも脳細胞の感度がもう少しよかったら」といった実験をしている場合じゃないでしょうか。 （1番の回答とだいたい同じ内容のはずです）
その2択ならHALかな。デジハリは就職の世話までしないでしょ。 ソフトの貸出はあると思う。ソフトによるけど。 でもUnityとかVisualStudioぐらいなら無料でも使えるよ。 Photoshopとかは学生のうちに買ったほうがいいかも。
ローカル変数 'dright' に値が代入されていません。 本来は、関数で値を求めたいのではないでしょうか。 最初に書いてある関数は、名前が変数名と同じ 'dright' なので呼び出せません。 意図が上の通りなら、関数名を 　float calc_dright(int a, int b) などに変更し、「左回りの計算」の前に 　dright = calc_dright(a, b); を入れると良いでしょう。 それと 　if (a = b) では比較ではなく代入してしまいます。 正しくは 　if (a == b) です。
　組込みシステムは、キャリアー系と呼ばれる事もあります。
>「ナイキスト周波数は、最少標本化周波数である。」 …なる定義は、誤解され易そう。 参考 URL >サンプリング定理 2 　　↓　あたりが参考になりませんか？ 通例は、標本化周波数 (fs) の半分 (fs/2) がナイキスト周波数。 参考 URL 図 3 のようなスペクトルのダブリを生じさせないような、ベースバンドの最高周波数を指すのでしょう。 こちらの定義なら、まぎれ難そうですネ。 　　　　↓ >「ナイキスト周波数は、サンプリング周波数の1/2である。」 　　 参考URL：http://www9.ocn.ne.jp/~hkato111/sample2/sample2. …
IT関連情報サイトにITPro, atmarkit.co.jp, 等がありますので参照下さい。 これらのサイトにはC,C++,Java等の言語の初歩/入門や基礎についての解説等がありますので、入学前に自分で先ずC言語のコーディング/コンパイル/デバッグ等が出来るようにされていた方が良いと思われます。 C言語　入門 OR 初歩 OR 基礎　コンパイル　デバッグ　site:atmarkit.co.jp 等としてサーチ ==> http://www.atmarkit.co.jp/fcoding/articles/c/02/ … 他 その他には情報通信関係、或は会社生活での上役同僚あるいは客先等との仕事の進め方等色々な情報が豊富ですので、一度ざっと隅々まで眺めてみて下さい。 http://itpro.nikkeibp.co.jp/index.html http://career.nikkei.co.jp/job/index_i.asp?adid= … http://www.atmarkit.co.jp/ http://www.atmarkit.co.jp/ait/subtop/jibun/ http://www.atmarkit.co.jp/job/jc/ http://www.atmarkit.co.jp/job/jt/aud/index.php?a … その他次のような情報も大学での学習等の参考にして下さい。 http://oshiete.goo.ne.jp/qa/7398476.html 情報関連の参考書について http://okwave.jp/qa/q8475078.html 勉強法の提案（理系大学に入ってから～） 最新情報のサーチの仕方等について次も参照下さい。 http://oshiete.goo.ne.jp/qa/8525708.html
1・・・× これは言えない・・! 強定常ならば弱定常であることは成り立つ・・! 4・・・× 理由：電力スペクトル密度は0も取り得るため、必ず正の実数というわけではない・・! 他の理由はOK・・!
C++等のプログラム言語自体の講義を手とり足とり教えてくれる大学は無いでしょう。 個人で解説本なり参考書等を購入する、参考サイト等で調べて、自分のペースでプログラムの作成コンパイルデバッグ等を繰り返して身に付ける他ないのではと思われます。 データ構造とアルゴリズム等はある程度講習される事もあるかと思いますが、これもC++等と同じくわざわざ聴講生として教わるよりも自分で調べる方が良いのではないでしょうか。 次等を参考にして下さい。 http://oshiete.goo.ne.jp/qa/7398476.html 情報関連の参考書について ######## それから特定のサイト内に情報がありそうな時は、サイト内サーチを使うと便利です。 http://www.atmarkit.co.jp/　==> C++ 入門 OR 初歩 OR 基礎 OR 解説　site:http://www.atmarkit.co.jp/ アルゴリズム OR データ構造 site:atmarkit.co.jp 新しい情報をサーチしたい場合、最終更新日時(googleに更新が確認し収集された日時)を追加すると便利です。 http://www.google.co.jp/advanced_search?hl=ja &as_qdr=, &tbs=qdr: 等の項目がサーチ条件の中に出てきていた場合は、その内容を次の通りに書き換えます。 サーチ条件内に出てきていない時は最後に追加します。 &as_qdr=all ==> &as_qdr=y 　　 (制限なし　==>　一年以内) &tbs=qdr:m ==> &tbs=qdr:m6　　(一月以内　==> ６か月以内) &as_qdr=, &tbs=qdr: の後には次の文字、文字+数値が指定できます。 　y, m, w, d, h, n <==> 年、月、週、日、時間、分　 C++ site:atmarkit.co.jp ==> https://www.google.co.jp/search?hl=ja&as_q=C%2B% … ==> ２年以内の情報のみサーチ https://www.google.co.jp/search?hl=ja&as_q=C%2B% …
＞Busyについてわかりやすく BUSY とはその単語どおり「忙しい」という意味で、 「今は話しかけないで」(コマンドやデータを送ってよこさないで）くらいの意味である場合が多いです。 守らない場合の挙動は特に示されてないなら、どうなるかわかりません。 制御する側は、コマンドやデータを送る直前に BUSY でない事を調べ、BUSY なら待ちます。 永久に待ってしまうとよくないので、ある程度の時間待っても BUSY のままなら 待つのを止めて「異常です」等の報告を使用者に表示したりします。 タイミングなどは仕様書で示されているはずです。 メカ寄りなインタフェースなら１ドット毎に変化する場合もあるでしょうし、 PCに接続して使うようなもの変化は１行毎かも知れません。 「熱転写プリンタ」だけでは、「インタフェース信号の仕様」は別々のことなので 信号の仕様がどのようなものかは特定できません。 メカ寄りのやたら細かい制御が必要な独自な仕様の場合もあるし、 IEEE1284 のような公的規格(すでにレガシーですが)になってる場合もあるし。
　一般常識からすれば、東大だろうと早慶だろうとＭＡＲＣＨだろうと、現役合格か一浪で入学する事が普通です。
相当無理している感じだと思いますが…。 昔聞いた話ですが、最近は受験の科目が少なくなったり推薦が出てきたりであなたのような方が増えているらしいですね。例えば医学部に入学したのに高校で生物を勉強していなかったから授業についていけないとか。そういう大学生のために予備校が高校の勉強を教えているところがあると聞いたことがあります。 でも根本的にそういうことで解決するような問題ではないようでしたら、早めに転進を考えられるのも一つかなと思いました。
　プログラマーはただ単にプログラムを組むことができますよとのことだけであって、それ以上でも以下でもありません。 　またゲームクリエイターを志向するならば敢えて大学に入学する必要もありません。ストーリーなどもデタラメで奇想天外な発想をする世界ですから学問領域とは異質な世界です。
理科大と学芸大ならまよわず理科大です。知名度で理科大はあまりしられていませんが 実は慶応、早稲田と同レベルです。 優秀な学生もおおいです。基本東大と併願しておちた学生がきます。留年率がたかいの は本当ですが、海外の大学の比ではありません。 サークルはたのしめますし、バイトしている学生もいます。それほどこわがらなくてもよい のではないでしょうか。 昨今はあまり就職率がたかくないので、理科大にはいれたのなら理科大にいったほうが 将来の選択肢がひろいです。超有名企業の技術者もねらえますよ。
　「使える部分」とは「収差を補正することによって十分な精度が出た部分」であり、「十分な精度が出た」かどうかは、残った歪み（局所ごとの位置ズレを測る。マス目の間隔じゃ誤差が多過ぎて駄目）がどれだけあるか、ということと、使う目的とを照らし合わせて判断する。 　うんと線の細い方眼紙を撮影した画像があれば、収差の補正に必要な式が構成できます。画像の中心からの距離rに関する多項式でモデル化して係数を最小二乗法で決めてやるのが簡単でしょう。問題は、カメラのピントや絞り、ズームをいじくると、たちまち歪みが変化するということ。これらの条件を固定してカメラを使うのならいいですけど。 　補正は、実際に歪みを取り除いた画像を（双一次補間などで、元の画像より少なくとも4倍の画素数を持つ画像として）作るというのでもいいけれども、どうしても細部が少しボケてしまう。むしろ、使い方によっては「歪んだ画像上の画素を指定すると、その補正された位置を計算する」だとか、「ある位置を指定すると、歪んだ画像上の画素の位置を計算する」というだけで済むことも多い。
　長すぎることはないと思いますよ。 　書き方よりも、「この学校に是非入りたい！」という熱意を伝える内容の方が大切です。 　短い文章で「人を納得させられる理由」が書ければよいのですが、「言葉足らず」ではなかなか伝わりません。言いたいことがキチンと言えるだけの長さが必要です。 　この学校に入ってこんなことがしたい、自分のしたいことを実現するのにはこの学校が最適だ、だから、ものすごくこの学校に入りたい、というあなたの熱い気持ちを、面接できちんと伝えてくださいね。その熱意が伝われば、大丈夫ですよ！
おいおい 手計算で計算できないようならJAVAの前に算数じゃないかね？
ふつうの (一価) 関数なら A=B なら F(A) = F(B) だよ.
>データ量を計算するとき、量子化ビット数が8ビットの場合、「2^8」ではなく「8」を掛けるのはなぜですか？ 「量子化ビット数が8ビット」というのは、単位データ (文字一つとか、標本値ひとつ分など) に対して割り付けられたビット数を指します。 8 ビット構成の単位データひとつ分を「バイト」と呼ぶことが多く、「バイト」単位のデータ量をビット表示にしたければ、「8」を掛けるわけです。 「2^8」は 1 バイトのデータに含み得る「情報量」で、1 バイト符号により区別し得る文字数などを示す。 データ量は、情報の内容にかかわらず単位データの個数…たとえばビット数やバイト数で表示するのがふつう。 データ量を「情報量」と呼ぶ場合も多く、使用文脈には要注意なのでしょうネ。 　　
「1バイトの文字列」だったら、単純にコードを数値で比較すればstrcmpなんて使用しないで済みますね。 switch文でも扱えますし。
こんにちわ。 有線LANの暗号化というのは、不要であることの認識から 未だに実装されていないとも考えます。 確かに、今でもそうですが、電話線の皮をはいで、適当に アンプだかの回路やスピーカーをつなげれば、電話をとても容易に 盗聴することができます。 （しかし、有線LANは、ここまで容易にはできないものの、似たようなことを 　すれば盗聴可能なことがあります） また、無線LANは、広く近隣で電波を容易に傍受することができるため、 初期のものより、簡易的なWEPから実装されているわけです。 また、有線LANは、無線LANの接続のために、用いる場合もあります。 そのために、最初から有線LANが暗号化されていて、無線LANのために 「・・・」となったとしたら、有線LANすら使えないことも あるかもしれませんね。 さて、実際、どことの接続を暗号化したいか？というのが 質問ではわかりずらい部分があります。 特定の相手であれば、かつ、インターネット経由であれば、確かにVPNのが手っ取り早いです。 VPNは、特定のプライベートIPアドレスを指定することで、そこにアクセスを すれば、暗号化して配送することができるわけです。 （そのために、ほとんどがソフトウェア実装です） もし、無条件にハードウェアレイヤーで暗号化してしまったら、あなたも特定の相手も インターネットができなくなってしまいます （双方の暗号通信しかできません） もし、WANであれば、VPNが最も得策ではありますが、 更に専用線に近い品質で、NGNを利用するのもあります。 http://www.ntt-east.co.jp/business/special/ether … （実際、フレッツであれば、通常のインターネットもNGN経由で接続されます） 単純にファイル転送をするのであれば、一番安心なのは、Skypeを 使ってしまったほうがはやいです。 意図しなくても、自動的にファイルを暗号化送信してくれます。 http://ベースのWebページの暗号化であれば、JavaScriptを 用いたほうがはやいでしょう。 ページの表示すら、フォームの送信すら、気合でJavaScriptで 暗号化することはできます。
5年後のことを話すのは難しいです。 一応お答えできることは、筑波の情報は高校からの受験でも入るのが難しく、授業についていくのも難しくて、学内では有名なところです。 とにかく高専での情報系の授業では、トップクラスにいる必要があるとあると思います。 それから、高専では、あまり重視されない英語も、英検2級合格レベルが必須です。 とにかく、無茶苦茶、勉強好きで、コンピューター好きな学生達が、24時間、 365日、何かしらのことをしています。 入るだけでなく、入ってから後も、学習・研究生活が充実するように、気を付けてください。
本当にそのような問題だとしたら, 問題がおかしい. 「無向グラフ」と「隣接リスト」との関係が文章に書かれていないので, 「どうなるか」といわれても答えようがない.
http://docs.oracle.com/javase/jp/6/api/java/lang … で、o を区切りとしたらどうなるか、が 今回のCRLFを区切りにした場合と同様となります。 なお、 /r/n (スラッシュrスラッシュn)では改行文字にはなりません。 バックスラッシュ、または、環境によっては円記号です。 また、テキストエリアの改行がCRLFで正しいかどうかも確認した方がよいでしょう。
xy=a として各式を変形すれば、わかると思います。 別解。 真理値表を書きましょう。 たかだか4通り(x,y)=(0,0),(0,1),(1,0),(1,1)しか無いのですから、簡単です。 左辺と右辺が4つとも同じなら、等価な式です。
　No.4です。再び。 　No.4の回答を書いている最中に投稿された他の回答者さんの解釈も総合して考えると、問題文は 「ある10進数を15進数で表現すると1の位が（１０進数で表わすと）2桁の数字になり、3進数で表現すると1の位が0となった。この10進数は何か」 ということではないかと思います。 　15進数では、・・・８、９、A（＝10）、B（＝11）、C（＝12）、D（＝13）、E（＝14）　となりますが、「15進数で表現すると、A～Eのいずれか」というのが題意ではないかと思います。 　そうすれば、 　・15進数で表現すると1の位が（１０進数で表わすと）2桁の数字　→　10～14　いずれか 　・3進数で表現すると1の位が0　→　3、6、9、12　のいずれか で、両方を満たすのは「12」ということになります。
視聴率が高い番組ほど多くの人が観ていることがわかるからスポンサーは宣伝効果のある高視聴率の番組にCMを流すわけだ。 すると視聴率に合わせて商品も売れたり、売れなかったりするわけ。 しかも今は番組を観ている人の年齢層や性別もわかったりするんだな。 男ばかりが観ている番組に化粧品のCM流しても意味ないでしょ。
排他的論理和（Exclusive OR, XOR, EX-OR）の演算子です。 演算子の記号の説明は参考URLの中に書かれています。 以下の添付図に計算を書きます。 演算は対応するビット同士で行います。 参考URL：http://ja.wikipedia.org/wiki/排他的論理和
この場合、( Q' )' を Q にしたらダメです。 回路図見ればわかりますが、 Q' は 、信号 Q を not回路で反転させたものではありません。 Q' というのは、ただの端子名です。 安定状態では not Q = Q' になる、というだけです。 not演算に ' ではなく、not を使えば Qｎ＝not( (not S)・Q')＝S＋(not Q') Q'ｎ＝not( (not R)・Q)＝R＋(not Q)　 ということです。 S＝１、R=０、Q＝０、Q’=1の時 S+(not Q')＝1＋0＝１ R+(not Q)＝0＋1＝１ となっても、次の瞬間には S+(not Q')＝1＋０＝１ R+(not Q)＝０＋0＝0 となり、 S+(not Q')＝1＋1＝１ R+(not Q)＝０＋0＝0 で安定します。
一緒に単位取ろうね。
[文書に関して] ご指摘のPDFを見てみると全てのページの最下部に誰それにライセンスしたと薄く書かれていますね。それをAさんとしますと、AさんはISOから有償で文書をライセンスしてもらったのを、それも他者には見せないというような契約を交わしたはずなのに、そんなことどうでもいいと言わんばかりにネットで公開したということでしょう。 [ソフトに関して] QRコードのパターンを作成したり解読したりするソフトを作成するのは違法にはなりません。それは規格の開発元のデンソーさんがそれを許しているからです。 また一般的には規格書が公開されているからといって自由に使える訳ではない場合があります。 ISOやJIS規格になっている某画像圧縮技術は色々なオプションがありましたが、あるオプションを使用するには特許契約が必要だったため、そのオプションは普及しませんでした。 [解説ページ] 解説ページに関しては微妙ではないでしょうか。規格書の著作権がありますから、規格書の文章や図をほとんどそのまま、一部の表現を変えて掲載したらアウトではないかと…。 [規格書に関する注意] 少なくともJIS規格のQRコードの規格書には間違いが散見されます。最新の正誤表を入手してください。
半角スペース２個を全角スペース１個に変換しています。 import java.applet.*; import java.awt.*; public class **** extends Applet implements Runnable {　　//****はアプレット名 　　Dimension d; 　　Thread kicker = null; 　　Image offs; 　　Graphics grf; 　　public void init() {　　　　//初期処理 　　　d=getSize(); 　　　offs=createImage(d.width, d.height); 　　　grf=offs.getGraphics(); 　　} 　　public void run() {　　　　//ここは触らなくて良い 　　　　Thread.currentThread().setPriority(Thread.NORM_PRIORITY-3); 　　　　while(kicker != null) { 　　　　　　repaint(); 　　　　　　try { 　　　　　　　　Thread.sleep(100);//動作が遅い場合は数字を小さくする（ミリ秒） 　　　　　　} catch(InterruptedException e) {} 　　　　} 　　　　kicker=null; 　　} 　　public void update(Graphics g){　　//ここは触らなくて良い 　　　　paint(g); 　　} 　　public void paint(Graphics g) { 　　　grf.setColor(Color.white); 　　　　　　　　　　　　　　　　　　　　//ここで画面を作る 　　　g.drawImage(offs,0,0,this); 　　} 　　public void start() {　　　　　　　//ここは触らなくて良い 　　　　if(kicker == null) { 　　　　　　kicker = new Thread(this); 　　　　　　kicker.start(); 　　　　} 　　} 　　public void stop() {　　　　　　　//ここは触らなくて良い 　　　　if(kicker != null) { 　　　　　　kicker = null; 　　　　} 　　} }
postする相手が自分自身というのは変でしょう。 postする相手が固定されてしまっているのでは？ <form action="min.php" method="post"> にしたら小さい順の結果がでますか？ 自分なら <form action="results.php" method="post"> みたいな感じに同一ファイルにまとめます。
「いろいろ考えたのですがうまくいきません」ってのは, 具体的には何をどう考えどこでどううまくいかないんですか? 例えば, あなたがそのような操作をするとしたら, どのようにしますか?
コンパイルができない、つまり、動作しないプログラムからフローチャートを書くことは無理です。
　「ＩＴ」は目的ではなくツールです。ＩＴそのものに魅力があるわけでなく（もちろん、それに魅力を感じる人いるとは思いますが）、それをどう活用して社会や人に貢献するか、ということろに大きな魅力があります。 　この質問サイトも、その一つでしょう。 　社会にとって、人間にとって、これから何が必要か、何があればより幸せになれるか、ということを考えてみてはどうでしょうか。それをＩＴがどのように手助けできるのか、質問者さんがどう貢献できるか、という視点で。
No3です。 演算プログラムを見て計算量評価をしたのかと思ったら違うのですね。 やはり単純に計算量評価が間違っているだけでした。 なんというか、ここまで見事だとあなたのためにならない気がしてくるんですが… お示しのデータをプロットしたものが添付画像です。 青が乗算、赤が剰余算です。 剰余算が遅いというような言い方でしたが、これを見ると剰余算は綺麗に(lg n)^2となっています。 剰余算が遅いのではなく、乗算が速いのです。 これ、プロットすれば一発で分かることなんですよね。 で、参考までに、あなたも名前を挙げたカラツバ法の計算量はO(n^1.585)らしいですね。(こちらのnは桁数) http://ja.wikipedia.org/wiki/%E3%82%AB%E3%83%A9% …
応募券枚数がどう変化するか、に注目して、前後の処理をよく見てください。 「応募券枚数」は、何についての「応募券枚数」なのか、も考えてみましょう 作業ファイルの購入個数は、一種類の商品を購入する毎に1レコードになっています。 求めようとしている「応募券枚数」は「売上伝票1つに対する応募券の枚数」では無いはずです
移動平均のやり方について 筋電図で10000個のデータを取りましたが，このデータを移動平均で平滑化しなければなりません．どのようにして移動平均するのか，どのくらいの区間を取るのか教えてください． ★回答 移動平均は　FIRフィルターの一種にすぎません 測定ノイズ等を考慮して　次数　　係数を　決定すればよろしいのでは？ ＜一例　手順＞ (1)データーの　ノイズの分析FFTなどで行う (2)ノイズなど　いらない帯域を削除するFRIフィルターを設計 （次数　　係数を　決定） (3)係数　データーの　量子化　誤差を検討する （おそらくパソコンなら力まかせで十分でしょう　おそらくいらない項目） （パソコンの計算データー精度は高い　桁が大きい　と言う意味） 次数→シフトメモリー　データーの数 係数→移動平均の場合は　（1/データーの数）で全部同じ係数 通常ローパスFIRフィルターを設計するのがベストとなると思います。 ☆検索キーワードを　上げておきます デジタル信号処理 FIRフィルターの設計 移動平均フィルター 書籍　設計法解説はいくらでもあります　 たとえばこんなかんじ↓ http://www.ic.is.tohoku.ac.jp/~swk/lecture/yaruo … http://www.ic.is.tohoku.ac.jp/~swk/lecture/yaruo … 参考 http://www.densikairo.com/Development/Public/stu … http://ja.wikipedia.org/wiki/%E7%A7%BB%E5%8B%95% …
こなのは如何ですか。色々あってよいかも。 ただ、PCには動画は落とせないようです。 参考URL：http://www.keishicho.metro.tokyo.jp/anzen/movie/ …
すくなくとも、ここにコピー&ペーストされたソースでは、 " ( アスキーコード 0x22 ) のダブルクォートではなく、 http://unicode.org/cldr/utility/character.jsp?a= … と http://unicode.org/cldr/utility/character.jsp?a= … になっています。 これらは、フォント等の環境によっては、全て「半角の二重引用符」に見えます。 私はMacユーザーで、実際にターミナルで cat hello.c とやると、半角に見えます。 ですが、C言語で、文字列用として有効なのは、 " ( アスキーコード 0x22 ) だけです。 *** 半角(に見える)かどうかは、関係ありません *** od -c hello.c と入力して、ダンプを取ってみてください。 odはバイナリーダンプを表示するコマンドですが、 -c オプションを付けると、文字コードとして認識できるものは、その文字で表示されます。 途中で改行等が挟まれるでしょうが、中身だけに注目します。 正しいプログラムなら p r i n t f ( " H e l l o W o r l d \ n " ) ; と、出力されるはずです。 しかし、今はこのように表示されるでしょう。 p r i n t f ( “ ** ** H e l l o W o r l d ¥ ** n ” ** ** ) ; “ ** ** というのは「 3バイト使って、 “ という文字になる」という意味です。
fromlenはどんな値になってるんでしょうか。 fromlen = sizeof(from_address); とか必要ありませんでしたっけ。
大学（高専）の宿題なら、原則解答はありません。 教科書や演習や授業で解答を作るだけの情報が得られるはずです。 なので、自力で宿題の解答は作れるはずですし、作らないと大学生としての実力がつきません。 前半のYの論理式を式にしたがって、論理式をC-MOSゲートに置き換え部分回路を相互に接続して 作ったYのC-MOS回路の全体図を描いて添付しますので参考にしてください。 論理回路図は論理式の変形によって、部分回路が変わり、解答は１通りとは限りません。 回答が正しいかどうかの確認は、真理値表を作成して一致するかで確かめるといいでしょう。 （C-MOS回路図が煩雑になるので、P-MOS、N-MOSのサブストレートは省略してあります。） 後半は自力でやってみてください。 YのC-MOS回路図を求めて添付してくれればチェック致します。 参考URL：http://www.mlab.im.dendai.ac.jp/~tatsuta/LogicAn …
　＞よろしくお願いします。 　ペンフィールドの地図のことかな。 　ホムンクルス、とも呼ばれたりするやつ。
非常に難しい問題ですね。私にはマトンは羊の肉という認識しかありませんｗ
まず、Native系の言語の代表格である C は 基礎だと思ってやっておいた方がよいです。 Android でも　NDK だと C/C++ の知識が必須。 Cは非常に小さな言語なので、学ぶのに大した期間は かからないです。 次が Java で、C とはかなり違うので、あまり混乱 しないかもしれませんが、構文が似ているので、 最初は混ぜてやらない方がよいでしょう。 Javaは言語を学ぶより、Javaを使って「適切」な コーディングを行う方が大変。「動けばよい」から 脱皮するには長い期間が必要です。 Rubyは仕事がないので、よく知りません。なんで「必須」なんでしょうね？
System.out.print((char)('a'+i)); でも System.out.printf("%c",'a'+i); でも可。
今試してみましたが動きますよ？ 恐らく提示されていない、UserForm1の中の何かが間違っています。 以下の2サイトがそのまま参考になると思います。 http://oshiete.goo.ne.jp/qa/4218152.html http://hpcgi1.nifty.com/kenzo30/b_cbbs/cbbs.cgi? … ちなみに、 1. VBEの左側：プロジェクトの部分で右クリック 2. 挿入→ユーザーフォーム 　 自動的にUserForm1ができあがると思います。 3. 表示→プロパティウィンドウ 4. プロパティウィンドウが左下に出るはずですので、 　　(オブジェクト名)が UserForm1 になっているか確認。 で、このオブジェクト名が間違っていると「変数がどうたら」といった別のエラーになりますね。
　おそらく「UserForm1.Show」のところがエラーで黄色く染まっているんだと思いますが、そこにエラーはありません。 UserForm1のコードをもう一度点検してください。 エラー箇所はInitilizeのプログラミングの中です。 Private Sub UserForm_Initialize() ・・・・ End Sub この中で途中で「Stop」を追加して1行ずつエラーがないか確認してみてください。
「エラーになります」だけでは、何が問題なのかわかりません。 具体的にどんなメッセージが出ているのですか? 何も情報が無ければ、「UserForm1」を作ってもいないのに使おうとしている、ということから、疑わなければなりません。 http://oshiete.goo.ne.jp/qa/8409548.html
ちょっと前までRed Hat全盛でしたが、最近ではCentOsが構築しやすいと思います。 ApacheなどはLinuxセットアップ時にインストール済みだと思います。 がんばってくださいね。 参考URL：http://centossrv.com/
（1）補完的な事前分布 （２）監督の信念ネットワーク （３）現象を離れて説明 だと思います。 間違っていたらすみません…。 Google 翻訳　http://translate.google.com/?hl=ja
まず、「起動しない」の具体的な意味を書いてください。 プレーンテキストのメールの場合には、単に URL と認識されていないだけ、ということもあります。 (1) 一致していない可能性はあります。 しかし、その際には、ブラウザが起動して、アクセスした後で、文字化けなどが発生することとなります。 通常は、ブラウザの設定や、現在表示しているサイトで使用されているもの等で決めます。 また、OSはあまり関係ありません。 重要なのは、どのコードを使ってエンコードするか、デコードしたものをどのコードとして解釈するか、です。 　WindowsからShift_JISをエンコードしたものを送信して、UNIXサーバーでデコード後Shift_JISとして解釈 　UNIXサーバーからEUCでエンコードしたURLを、WindowsのInterner Explorer で表示 などは、大昔から行われています。 (2) Macも10年以上前からOS X になり、Unicode(UTF-8)が標準になっています。 UNIX/Linuxでも、UTF-8を採用するものが主流になっています。 WindowsではUNICODEですが、Shift_JISもまだまだ多く使われています。 (3) URLエンコードされたURLを貼り付ければ、文字コードによる違いは出ません。
PHPでプログラミングして、作ったコンテンツプログラムを公開するんですよね？であれば、クライアントOSとしてはWindowsは必須です。なぜかって、世の中の非常に多くの人はWindowsを使っているので、PHPで作ったプログラムを動作確認するには、まず利用者の多いWindows上で動作するブラウザを利用する必要があると思うからです。私の勤めている会社ではLinuxサーバを専門的に扱っていて、社員の中でもLinuxをクライアントとして利用している人が何人かいますが、はっきり言ってやせ我慢して使っているとしか思えません。私はWindowsを使っていますが、Windowsが便利だから使っているのではなく、Windowsも仕事には必要なのです。 なので他の方がおっしゃるように、Windowsはつぶさずに、仮想化ソフトウェアの中にゲストOSとしてLinuxをインストールして、それをサーバとして動かすのが現実的でしょう。ディストリビューションは、世の中のクラウドやホスティングではLinuxなら比較的Red Hat系が多く採用されているので、CentOSを使えば公開するときにトラブルが少ないと思います。
ディストリビューションが不明なので確認は出来ませんが、 下記をご参照ください。 http://itpro.nikkeibp.co.jp/article/COLUMN/20060 …
・ルーティングテーブル ・デフォルトゲートウェイ ・サブネットマスク のどれかが間違っているという可能性はないのでしょうか？
豊橋技術大が良いと思います。 九工大とならそれほどレベルも変わりせんし、 豊橋技術大は高専から毎年何百人と編入しているので、受け入れ体制がかなり整っているからです。 また、通信工学に関しても、豊橋技術大の方が いいと思います。
　難しいのでは？　昔プログラマでＣＯＢＯＬを使って居ましたけど、流れが分からないと判断出来ない。条件で分岐した先がどうなっているのかなどは全体を見ないと分かりません。スパゲッティプログラムと呼ばれる複雑怪奇な文章の時は非常に判断が困難でした。 　簡単な物は条件式の設定の確認。入力されたものがその条件に当てはまるのか。１００までしか無いのに１０００以上でループを抜け出すという条件では終わりませんから。 　どのような間違いが多いのかを見つけ出すことでしょうね。 　当時体験したのが、何も処理を行わないで条件をチェックし続けるループがあり、無限ループになるのを時刻表示させることで回避した経験が有ります。 　機械的な条件もありますから。 　チェックするには常にプログラムが擬似的に実行している状態にしないと難しいかな？
■勉強期間に関して もちろん個々の能力は異なるので一概にはいえませんが…と前置きした上でのアドバイスになりますが「1日4時間を2ヶ月」という学習期間は「質問者様が社会人であれば」妥当なラインかと思います。 ひとつ考慮していただきたいのは、ITパスポート試験では、社会人と学生との合格率に大きな開きがあるという点です(※2013年11月の合格率は、社会人＝58.3％　学生＝33.2％)。 これは試験で問われる知識や概念が、学生にとっては馴染みのないものになっているためで(特にストラテジ系、マネジメント系)、社会人にとっては常識問題でも、学生さんがしっかりと内容を把握できるまでには、それなりに時間が必要かと思います。 ですので、わたくしはITパスポート試験の勉強期間の目安として「社会人＝２～３ヶ月」「学生＝４～６ヶ月」をおすすめしています。 ○勉強期間の目安：http://dokugaku-online.com/study-hours.php ○合格率の参考：https://www3.jitec.ipa.go.jp/JitesCbt/html/openi … ■学習方法に関して 参考書と問題集(過去問)を併用する…という現在の学習方法でよいと思います。 ただ、一点アドバイスとしていわせていただくと、極端な「過去問偏重」に陥らないようにご注意ください。 ITパスポート試験では、2012年のCBT方式導入以降、全国の会場で随時試験が開催されるようになり、試験ごとに「毎回」異なる問題が出題されています。IPA(情報処理推進機構)によってあらかじめ数百問が用意されており、試験の都度そのうち100問が抽出されて出題されているのです(http://itpro.nikkeibp.co.jp/article/Watcher/2012 …。 この「あらかじめ用意された問題」は、その時々の世情や技術的な動向によって常に取捨選択が行われており変動しています(※公式ページで発表されている過去問がいまだに春期と秋期の2回だけなのは単なる慣例にすぎません)。 ですから現在では「過去問偏重型」の学習方法はあまり得策ではありませんのでご注意を。 過去問とは、あくまで「ある知識や概念がこのような切り口で出題される場合がある」という1データにすぎないのだと割り切りましょう。 ※ちなみに、ITパスポートの前身になった初級シスアド試験の時代は過去問の流用がけっこうあったので、過去問を覚えることが有効な試験対策ともいわれていました(ITパスポート試験ドットコムでも同じコトが書かれています http://www.itpassportsiken.com/ipsyudy.html)。 試験頑張ってください!!
図中の入力端子と出力端子の記号がよく見えません。 A3,B3がそれぞれ、最上位桁ですか？最下位桁ですか？ それとも A4,B4がそれぞれ、最上位桁ですか？最下位桁ですか？ 出力端子の文字記号（添字数字付き）と各桁の桁上がりの英字記号（添字数字）は何ですか？ 回路図は上から順に、半加算器、全加算器が３つ並べてあるだけで、半加算器のけた上げ出力を下の下位桁けた上げ上げ入力に接続し、各全加算器のけた上げ出力を直ぐ下の下位桁けた上げ上げ入力に接続して構成されています。最上位桁のけた上げ出力はそのまま出力端子として出ています。 各全加算器は半加算器２つとORゲートで構成され、半加算器はXORゲート（和出力用）とANDゲート(けた上げ出力用)で構成されます。 例えば 　A4 A3 A2 A1　...被加数 +)B4 B3 B1 B1　...加数 -------------- 　S4 S3 S2 S1　...和 　C4 C3 C2 C1　...上位桁への桁上げ >回路をトレースして2進数「1101と1110の和」を求めよ A,Bの各桁の記号、下位桁からのけた上げの出力と上位桁へのけた上げ入力の各桁の記号、各桁の和の出力の記号を決めてください。 この場合の 　1 1 0 1 +)1 1 1 0 ------------ 　1 0 1 1 ...和 　1 1 0 0 であれば例えば (+)をXOR,　・をAND, +をORの演算子とすると A1(+)B1=1(+)0=1=S1 A1・B1=1・0=0=C1 (A2(+)B2)(+)C1=(0(+)1)(+)0=1(+)0=1=S2 A2・B2+C1=0・1+0=0+0=0=C2 (A3(+)B3)(+)C2=(1(+)1)(+)0=0(+)0=0=S3 A3・B3+C2=1・1+0=1+0=1=C3 (A4(+)B4)(+)C3=(1(+)1)(+)1=0(+)1=1=S4 A4・B4+C3=1・1+1=1+1=1=C4 となります。
方針は、それでよいと思います。 ただ、 (df/dx) = {af(x-2k)+bf(x-k)+cf(x)+df(x+h)}/k です。 また、この式だけでは、a,b,c,dが一意に決まらないので、 ２次、３次精度といっている、d^2f/dx^2や、d^3f/dx^3などの項の係数をゼロにする、という式と連立させます。
インターネットを利用するときに求められるルールやマナーを教えようということです。 アメリカは知りません
単純に、その行列計算をするときに、どういう順序でどのデータが必要になるか（＝どのようなメモリアクセスが行われる）を考えていけばいいだけですけど、、。
こんにちは。 補足要求です。 １．これは学校のレポートですか？　 ２．メディアとは、テレビや新聞のことでしょうか？　それともＣＤやＤＶＤなどの記録媒体のことでしょうか？　多分設問の前後からテレビや新聞のことだと思うのですが確認させてください。 ３．具体例をお求めですか？　それとも簡潔・純粋な哲理的考察が必要ですか？　
windowsのコマンドラインでbatよりも、ちょっとだけ高級なことをやりたいなら、 WSH（Windows Script Host）でやるのがよいです。 VBScriptかJavascriptが使えます。正規表現を使った置換なんかもできます。
ん～.... 1 の補数がわかるのに 9 の補数でわからないってのが謎.... 同じ意味なのに.
お願いします。メッセージくらいは読んでください。 英語だからわからないとか、甘えたことは言わないでください。 > Assets/character.js(22,19): BCE0044: expecting ), found ';'. Assets/character.js(22,19): Assets/character.jsの22行目、19文字目あたり expecting ), : ) が期待されます found ';'. : (しかし) 「;」 が見付かりました って、ちゃんと理由が書いてあります。 > if (bulletTime &gt;bulletInterval) {　←エラー箇所です。 ここが、こんな風に解釈されています if (bulletTime &gt; → ; で文の区切り。 → 閉じ括弧が必要なのに、それより先に文の区切りになる セミコロンがあります。 ここまでやれば、あとはわかりますね。 コピペしたにせよ、本に載っていたにせよ、それを100%信じないことです。 いつでも誤植というのはあります。 エラーになったら、自分がそのプログラムを作ったつもりで、デバグしてください。 「コピペしただけだから大丈夫なはず」という考えを捨ててください。 > Assets/character.js(22,20): BCE0043: Unexpected token: bulletInterval. 「 期待されないトークン: bulletInterval 」 途中で切られて bulletInterval) { となってしまったことにより、bulletIntervalが「こんなところに書いてあるのが変なトークン」になってしまったためのエラーです。 先のエラーを修正すれば消えます。 一つのエラーが別のエラーの原因になることがよくあります。上から一つ一つ修正することです。一つ消したら全部消える、なんてこともよくあります。 > if(Input.GetButton("Jump") && bulletEnable) {　←エラー箇所です。 エラーメッセージは? プロでもメッセージを読まずに修正するのは困難です。
戻りの型が　int, this.dataの型は int[][] なんだから 当然です。 どういう動きを想定されていますか やりたいことは return this.data[line][column]; とかではないんですか？
シンプソン法は任意の曲線を分割して、各分割内の曲線を放物線によって近似し、面積を求めるものです。 近似すべき相手が放物線というのであれば近似でなく、厳密解として積分ができるわけです。 もちろん分割には関係ありません。 ∫(α→β)[f(x)]dx=(1/6)(β-α)[f(α)+4f((α+β))+f(β)] が成り立つことを計算で示せばよいでしょう。左辺は解析的積分、右辺はシンプソン法ということがわかりますか。
　「直進回路」の意味がわかりません。 　もし、あなたが日本人でないのであれば、英語で表記すると良いでしょう。 　もし、あなたが日本人であるのであれば、電気工学の用語を正確に表記すると良いでしょう。 　それと、電気工学ではアドミタンスを複素数で記述しますが、実行結果を見ても複素数として出力されていないようなので気になります。
「何を」教えてほしい, と?
ここまでの「仕様要求」がある場合、要求通りにシステム構築すると「金が取れるレベル」です。 作れば金が取れるレベルの物を「タダで作ってくれ」ってのは、余りにも虫が良すぎます。 ある程度自分でコーディングして「ほぼ要求は満たしたけど、どうしても判らない部分がある」って言う状態になったら、出直して来て下さい。 ピンポイントで「どうしても判らない部分がある」って言う質問なら、みんな、親切に回答してくれますよ。 そこまで出来ないと言うなら、何処かのソフトウェア開発会社に開発依頼するしかありません。 あと、これぐらいの事なら、エクセルで表を作って計算式を入れれば済む話なんで、わざわざC言語で作ろうとする人は居ません。 エクセルで、A1セルに試験点数、B1セルに課題点数、C1セルに「=ROUND(A1*0.5+B1*0.25,0)」、D1セルに演習点、E1セルに「=C1+D1」、F1セルに「=IF(E1<0,"入力ミス",IF(E1<60,"不可",IF(E1<70,"可",IF(E1<80,"優","入力ミス"))))」と入力すれば済む話。 しかし「総合80点以上は有り得ないから入力ミスと表示」って、いったい、どんなゼミだ？ たぶん、 =IF(E1<0,"入力ミス",IF(E1<60,"不可",IF(E1<70,"可",IF(E1<80,"良",IF(E1<=100,"優","入力ミス"))))) の間違いなんだろうけどさ。
>コンパイルしてみたんですがエラーメッセージがよく分からず質問させていただきました なら、そのエラーメッセージをそのまま掲示した方がいいかと。 変に意訳する必要はないです。 で…while(1)にしてコンパイルしたとして…実行すると、 数値を入力してください: 5↓ 数値を入力してください: 0↓ 数値を入力してください: 10↓ 数値を入力してください: 0↓ 数値を入力してください: -1↓ 数値を入力してください: 0↓ 数値を入力してください: 6↓ 数値を入力してください: 0↓ 数値を入力してください: 0↓ 合計値は0です となりますが、期待する結果ですか？ # ↓はEnterキー入力 また、なぜそうなるのか判りますか？ # ループが何回まわって、input_number()が何回呼ばれているか理解していますか？
いちお～、以下のようにすれば、コンパイルも出来て実行も出来るが、マトモな迷路にはならん。 投稿時にソース上の半角スペースが消えちゃって、スペースがあった場所からスペースが無くなったのが原因だろうけど。 あと、致命的な書き間違いがあって、そこを直さないと無限ループに落ちて、配列アクセスでメモリ壊して例外吐いて落ちる。 #include <stdio.h> #include <stdlib.h> #include <time.h> #include <conio.h> #define YOKO_MAX 200 #define ESC '\x1b' int n; int map[YOKO_MAX+1],count[YOKO_MAX+1]; int rr(void) { return rand() % 10>3; } void tate(void) { int i,j,k; printf("■"); for (i=0; i<n-1;i++) if(map[i]!=map[i+1] && rr()) { k=map[i+1]; count[k]=0; for(j=0; j<n; j++) if(map[j]==k) { map[j]=map[i]; count[map[i]]++; } printf("　"); } else printf("■"); printf("■\n"); } void last_tate(void) { int i,j,k; printf("■"); for (i=0; i<n-1;i++) { if(map[i]==map[i+1]) printf("■"); else { k=map[i+1]; for (j=0; j<n; j++) if (map[j]==k) map[j]=map[i]; printf("　",map[i]); } } printf("■\n"); } void yoko(void) { int i,j; for (i=0; i<n; i++) if (count[i]>1 && rr()) { printf("■■"); for(j=0; j<n; j++) { if (count[j]==0) { count[j]=1; count[map[i]]--; map[i]=j;break; } } } else { printf("■"); } printf("■\n"); } void enter(void) { int i,k; k=rand() % n; for (i=0; i<n; i++) if(i==k) { printf("■"); } else { printf("■■"); } printf("■\n"); } void initialize(void) { int i; for (i=0; i<n; i++) { map[i]=i; count[i]=1; } randomize(); } int main(void) { printf("無限に大きな迷路\n"); do { printf("\n迷路の横幅(2～200)?"); scanf("%d",&n); } while (n<2||n>=YOKO_MAX); printf("\n ESCキーを押すと止まる。\n"); initialize(); enter(); do { tate(); yoko(); } while (!kbhit()||getch()!=ESC); last_tate(); enter(); return 0; }
「大学の研究は就職しても役には立たない」と、卒業のとき教授に言われました。 その通りでした。 有名大学であるとか、企業と共同研究やっていてコネがあるとか、そういうのでもなければ就職に有利とかはほとんどありません。 就職しても、大学の研究とは関係無い仕事に就くことも少なくありません。 就職の有利不利を重視するなら、卒業生の就職状況を調べてください。 その2つからは採用0で、他の研究室からはコンスタントに採用されている、ということもあるかもしれません。
Scale-Invariant Feature Transformのことですね。大文字でSIFTと書いたほうがよいです。 SIFTはアルゴリズムなんで、「公式の」配布サイトなんてものはないわぇで、使っているライブラリなりのサイトの記述をみてその通りにしてみればいいのでは。 openCVを使うということは、おそらくコンパイル（mexファイル作成）が必要だと思われるので、まずは、mexコマンドが使える環境を作る必要があるんでしょう。
このプログラムは、0,1の2つの値を発生させ、0.5(=1/2)の確率で吉、0.5(=1/2)の確率で凶を出力します。 サイコロは、1,2,3,4,5,6の6つの値を発生させます。 1のときA, 2,3のときB,4,5,6のときCとすると Aは1/6 Bは2/6 Cは3/6 の確率で発生します。 では、「‘大吉’と‘吉’と‘凶’をそれぞれ0.1と0.6と0.3」としたかったら、最低何種類の値が必要か、それをどう分配すればいいのか考えましょう。 ここまでは数学(下手すると算数)の世界です。
単純な AND なら A と B が両方とも Hi(1) の時 F も Hi(1) になること が表現できていればなんでもよいです。 単純な OR なら A と B のどちらかが Hi(1) の時 F も Hi(1) になること が表現できていればなんでもよいです。 タイミング図は回路の動作例や動作順序、各種の時間間隔の定義などに 使用されます。 論理演算を表すなら、単純なものではタイミング図を使うこともありますが、 普通は真理表か論理回路図を使います。
http://www.slideshare.net/masaya0730/ux-16051909 に書いてあるスライドには千葉工業大学の先生と載ってます。 ここなら勉強できる可能性があるのでは？
文系でも雇ってくれる企業はいくらでもあるが、それがホワイト企業かどうかは・・・中小零細ならばある。 実際、学生時代インターンシップに行った企業の方の中には早稲田の社会科学部出身の方がいたし。 ただし、就職がゴールだと思っていると痛い目に合うよ。 文系からの就職はマイナスからのスタートだからね。 取り敢えず、ITパスポートの試験を受けてみるといいよ。いつでも受けれるからね。 ITパスポートの勉強してみて興味が持てないなら諦めな。 プログラムだって開発環境付きで参考書だって売っている。 http://www.amazon.co.jp/gp/aw/d/4774140317/ref=m … http://www.amazon.co.jp/gp/aw/d/4774142492/ref=p … プログラムは才能だからね、就職したあとでプログラム苦手だってわかったらどうするの？ 情報系の学生の半分はプログラム勉強して、嫌いになってプログラムだけは絶対にしない職業に就くのが現実。
ITパスポート試験の参考書が一番簡単でベストだと思う。 あとはC言語。 http://www.amazon.co.jp/gp/aw/d/4774140317/ref=m … プログラミングは才能だからね。 大学に入って初めてプログラム勉強して情報工学科に入ったことを後悔する人、大勢います。
機械的にやるならスラック変数と人工変数を導入した 2段階シンプレックス法.
(キー併用の一手) 集計用セルに次の数式を入力し、Ctrl キーと Shift キーを押しながら Enter キーを押す。 =SUM(G2:G1000*EXP(-$A$2*(F2:F1000)) 　　　
ftpで受信する場合は受信完了が検出できないと 処理が難しくなる場合があります。 送信側で最後にリネームすることをお勧めします。 #拡張子を変えるとかすると完了後に見えるようにできます。
完全に一意になる列の組み合わせはなさそうです。
裏から６ミリのエンドミルで段差まで座ぐりして センターリングしてΦ６でドリル加工する 段差の深さにもよりますが、普通はそうじゃない？
> a^0, a^1, a^2,……, a^kをアウトプット 書いて無いことをやってくれるなんて、プログラムはそんな親切なもんじゃありません。 途中経過を出力させるなら、途中で出力するとか、途中経過を記録しておくとか、工夫が必要です. また、C/C++のfor(式A;式B;式C) は 式A; while(式B) { ... 式C; } とほぼ同じです。 こう考えると、ループしない理由もわかるはずです。
11(10進) =1*8+0*4+1*2+1 =1*2^3+0+2^2+1*2^1+1　←係数を拾う。 =1011(2進) 11101(2進)=1*2^4+1*2^3+1*2^2+0*2^1+1 =16+8+4+0+1 =29(10進)
まず動かないCのソースを提示しましょう。 きっとつっこみが入りまくります。
微妙に誤字があったな…「その黒い画面都やら」=>「その黒い画面とやら」です。 あと…動作には全く関係ないですし、ある意味どうでもいいのですが… ソース上のコメントに間違ったこと書くと、将来仕事にした場合に困ることになるかも知れません。 # 実際問題、この程度のプログラムだったらほんと～にどうでもいいコトではあるが。
具体的にどう「よく意味が伝わってなかった」と思ったんだろう. 「プログラムを作ってください」が「質問」じゃないことは当然理解してるよな?
　自己相関という意味なら、Excel やRなどの統計ソフトを使えばいいと思います。どうしてもCじゃなきゃというなら、下記のURLを参考に自作かなぁ。 http://www.nag-j.co.jp/naglib/examples/nag_tsa_a …
大学の授業内容についてはOpenCourseWare 或いはオープンコースウエアとして公開されていますのでWikipediaやネットで調べることが出来ます。 他の方が最近次の質問等をされていますので、参考になるかと思われます。 http://sqa.scienceportal.jp/qa6577355.html 大学入学までの物理の勉強 http://sqa.scienceportal.jp/qa6577547.html 大学の授業の導入に向いてるような物理の参考書を教え その他左上の検索窓やネットで "情報工学科" "情報工学科 参考書"　等として調べて下さい。 電磁気学等、数学が必要な科目が多くなり高校で自信があっても全く新たな基礎から理解する必要が出てきますので頑張ってください。 http://oshiete.goo.ne.jp/qa/5653918.html 中学レベルから大学受験までの道のり その他一般的なサイト: http://itpro.nikkeibp.co.jp/index.html http://www.atmarkit.co.jp/ http://www.pdftutorials.com/index.html http://wave.iobb.net/doc/digital/ http://www.ie.u-ryukyu.ac.jp/~wada/lecture.html http://www.aozora.gr.jp/ http://www.gutenberg.org/wiki/Main_Page http://www.gutenberg.org/wiki/Gutenberg:The_Audi …
　単にプログラミングできるようになりたいだけなら、「京都コンピュータ学院」に通うだけで十分です。京都コンピュータ学院でもアルゴリズムやデータ構造に関することやソフトウェア工学のことも学べるそうです。 　京都大学の電気電子工学科に行きたかったら数学だけでなく物理学や化学の知識も必要になるはずですから、物理学や化学が苦手でしたらおすすめできません。 参考URL：http://www.kcg.ac.jp/
すでにいろいろ回答が出ていますが、情報工学以外の工学を修めた人間から見ると「あれはほんとに工学？　数学系か、もしかしたら文系じゃないの？」と思うようなことです。
こんにちは どちらがいいでしょうか？という２択一というよりも 受験日がずれてる限り、両方受けて、合格したら理工＞工で選べばいいです ただ日本大学工学部って福島県ですよ http://www.ce.nihon-u.ac.jp/access.html 理工学部は東京の駿河台と千葉の船橋 http://www.cst.nihon-u.ac.jp/campus/access.html 場所が全然違いますけど、その２つのどちらか？という話なんですか？ 日本大学理工学部をメインにするならば 併願校としては 芝浦工大、東京都市大学（現武蔵工大）、東京電機大 これらあたりの大学かと思われます http://www.yozemi.ac.jp/rank/gakubu/index.html ＞パソコンのウイルスを探したりシステムを作ったりする ソフトウェアエンジニア系ということだと思いますが どっちの学部学科でもＯＫです ＞あと、現在日大レベルですが頑張れば来年「農工大」のレベルに上げる可能性ってある＞と思いますか？ ＞塾の先生は「基本無理」といっています。 ＞ご意見お聞かせ下さい。 お子さんを身近に見ていて、成績を知ってる塾の先生が無理っていうなら 無理なんでしょう。赤の他人が、がんばれば行けますよ！と言っても根拠はありません
カリキュラムはどの大学でも公開していると思います。たとえば、情報処理学会のWEBサイトにあるコンピュータサイエンスのモデルカリキュラムと志望校のカリキュラムを比べてみましょう。 チェックポイントは ・情報工学の先生だけで学科が構成されているか、「電子情報」のように寄り合い所帯か ・情報の専門の先生だけか、電子とか通信の先生が紛れ込んでいないか。 などもチェックポイントです。 ・情報科学の中枢に近い専門の先生が多いか、ちょっとずれた専門領域(人工知能、自然言語、そのたコンピュータを道具として使う側の分野)か ・教育体制はしっかりしているか(たとえば、卒論が選択科目なんて言う大学は期待できません ・学生数と専任教員数の比率 電磁気学とか電子工学の基礎科目ばっかりやらされれて情報科学関連の科目が少ないとか、情報工学科なのにハードディスクの真空蒸着が卒論のテーマだとか、ひどいところもありますので。 >ネットだとSEやPGなら文系でもなれるからそれこそ大学行かなくてもなれる たとえば、建築作業員なら、高卒どころか中卒でもなれます。でも、その働く内容も待遇も、大学の建築学科を出て建築会社の正社員になったひとと、日雇いの作業員では全然違う・・というのは理解できますよね。 SEやPGも同様です。とにかく人手が足りないので、未経験者でもドンドン雇いますが、あくまでも使い捨て要員としてです。まともな待遇がほしければ、ちゃんと専門教育を受けるか、独学で実力をつけるか。 確かに、ハードウェアを専門にやってると、博士課程を出ても民間機魚にばんばん就職できたりしていますが。..
通信制で帝京大学理工学部情報科学科があります。 その他、編入学などに関しては下記サイトへお問い合わせが出来ます。 http://www.teikyo-u.ac.jp/faculty/science/sci060 …
東京海洋大学流通情報工学科の学生です。 学科のホームページを見ていただけるとわかりますが、流通情報工学科はロジスティクスの学科です。他の回答者の方がお書きになっていますが、工学的にロジスティクスを教育・研究しているのは海洋大の流通だけです。しかし、学科の主たる目的がロジスティクスのプロを育てるというものですから、質問者さまのイメージされている「情報工学」とは異なるものである可能性もあります。 研究、就職に関しては上記の理由からロジスティクスに関しては相当有利です。もちろんそれ以外の道を選ぶ学生も少なからずおります。（SEになるなどして情報関連産業に進む者も多いです。） 海洋大の流通のみならず理系の場合、最終的には研究室に所属してそこで研究をすることになりますので、志望校を決める際はその学科にどのような研究室があるのかを十分に調査することをお勧めします。以下に流通の主な研究室のリンクを載せますのでぜひ見てください。（物流システム研究室と地域計画研究室には就職先の情報が載っています。）海洋大越中島キャンパスでお会いできるのを楽しみにしています！受験頑張ってください！ 流通施設計画研究室　鶴田三郎教授　黒川久幸助教授 http://192.244.150.43/ 地域計画研究室　高橋洋二教授　兵藤哲郎助教授 http://www.e.kaiyodai.ac.jp/~regional-p/index.html 物流システム研究室　苦瀬博仁教授 http://www.tosho-u.ac.jp/~kuse/logindex.html 流通経営工学研究室　久保幹雄助教授） http://192.244.145.181/ 参考URL：http://www.e.kaiyodai.ac.jp/MT/LIE/
大学の「情報工学科」と聞くと、質問者様のように「四年間パソコン(やUNIXワークステーション)でプログラミングする研究」と思われている人が多いですが、実際は情報理論(数学の一種)やハードウェアを勉強している時間が圧倒的です。
参考URLで「大学の理工系学部情報系学科のためのコンピュータサイエンス教育カリキュラムJ97」のPDFがダウンロードできます（リンクがわかりにくいですが）。 これと、志望校のカリキュラムを比べてみてください。 (残念ながら、情報システム系の資料は無償ダウンロードは出来ません) このコアカリキュラムを作るときに「いやしくも情報専門学科なら、○○も入れるべきだ。」という学科と「こんなにたくさんの専門科目には対応できない。削ってくれ」という学科のせめぎあいがありました。それほど、学科名に情報を名乗っていてもカリキュラムの充実振りには差があるのです。 　あと、教員の出身や専門分野(研究分野)も調べてください。情報の専門家が何割いるかが問題です、他分野の先生が情報系のポストに納まっている事例もたくさんあります。 参考URL：http://www.ipsj.or.jp/12kyoiku/J97dist.html
情報のことは良く分かりませんが、名前だけでは決められないと思います。 例えば、Ａ大学の情報工学とＢ大学の情報工学では内容がぜんぜん違ったり…何ていうことも良くあります。 また、Ｃ大学の情報工学とＤ大学の情報科学が同じなんていうこともあります。 名前だけでなく、カリキュラムや卒論を詳しく調べた方がいいと思います。
