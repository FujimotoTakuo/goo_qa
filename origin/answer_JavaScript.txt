こんにちは ご提示の部分は部分なので、それだけで動作するものとは思えません。 ＞プラグインなしでjqueryを記述していて、なかなか理解できません。 ご提示のサイトのサンプルを見ると、1枚の画像を分割してスライドしているわけではなさそうなので、スライダーを横に2つ並べても実現できるものと想像します。 フラグインであればＯＫなのでしたら、verticalスライドの画像スライダーで、autoやcarouselの機能があるもの（連動を確実にするならスライドのメソッドapiが公開されているもの）を利用して、二つ並べてしまえばよろしいのではないでしょうか？
ANo1です。 ＞noConflict()は今回のソースの中でどこに ＞置き換えるもしくは挿入すれば良いのでしょうか？ まずは、それぞれのライブラリが同じバージョンのjQueryで動作しないのかをご確認ください。 たいていの場合は動作するので、noConflict()は必要ないものと想像します。
こんにちは ＞「クライアント」と「スクリーン」の違いとは何でしょうか？ 基準がスクリーン座標系かビューポート座標かの違いのようですね。 https://w3c.github.io/uievents/#interface-mousee … ＞何れも、スクロールすると、基準位置は移動？ ウィンドウの表示位置もスクロールも原点位置には直接は影響しません。 （表示内容を主体に考えると、自分が移動するので影響するとも言えますが…） 以下に、確認用のサンプルを作ってみました。 クリックすると、その位置のscreenXとclientXを表示するようにしてあります。 　・ウィンドウの位置を移動 　・表示内容ををスクロール などによる、座標値の変化を確認してみてください。 ※「++ クリックテスト ++」の文字は、クリック位置の目安とするためにposition:fixedにしてあります。 <!DOCTYPE HTML> <html lang="ja"> <head><title>Sample</title> <style type="text/css"> html, body { width:150%; height:150%; background-color:#FFD; } #hoge { position:fixed; top:50px; left:100px; } </style> <script type="text/javascript"> document.addEventListener("click", function(e){ alert("screenX=" + (e.screenX|0) + "\nclientX=" + (e.clientX|0)); }, false); </script> </head> <body> <div id="hoge">++ クリックテスト ++</div> </body> </html>
＞MONDAY = {の所でAssignment to constant variable.というエラーになりました。 エラーが出たらエラーメッセージを読みましょう。 googleさんに翻訳してもらっても良いです。 　　　↓ ちなみに『定数変数への代入。』と日本語に翻訳できます。（笑） ＞67.　 const MONDAY = [ と定義しているからでは？ https://developer.mozilla.org/ja/docs/Web/JavaSc …
>■チェックボックスが2つ以上チェックされているとき、editBtnの画像切り替え。 の仕様がイマイチわかりません １つでも選ばれれば普通は表示非表示を切り替えるもんじゃないですか？ 一括の方はこんな感じで十分 $(function() { $('#checkBtn').click(function(){ $('.thumbCheckbox').prop('checked',true); }); $('#clearBtn').click(function(){ $('.thumbCheckbox').prop('checked',false); }); });
ajaxで必要に応じてデータを取ってくるのが妥当ですね もちろんjQueryを利用すると処理が楽になります
ANo1です。 すみません、前回はスクリプトをよく見ていませんでした。 スクリプト部分にも動作しない原因となるところがありそうです。 ＞jquery(document).ready(function($){～～ 最初のjqueryはjQueryでないとエラーになります。 （javascriptでは大文字、小文字は区別されます） また、readyメソッドの引数となる関数が、 ＞function($){ ～～ } の形となっていますが、引数$に当たるものが定義されていないので記述的にはおかしいですね。 （まぁ、現状のままでも関数内ではグローバルの$になるようなので、通じるみたいではありますが…） 変数$を指定する必要がなければ、function(){ ～～ } で良いはずです。 noConflictなどを用いて変数$をクローズドに利用したい場合に、function($){ ～～ }(jQuery)などの記法が用いられます。 bxSliderのオプション設定部のオブジェクトリテラルで、リストの最後が「,」で終わっていますが、文法的には正しくありません。 そのままで通るブラウザもありますが、エラーとしてはじくブラウザもあります。 ※ 補足のコメントが追加されたようですが、意味が理解できなかったので反応できませんでした。 ＞具体的にはimagesフォルダの中にフレームなどがあるので2行目。 通常は、フォルダの中にあるのはファイルかフォルダだと思いますが・・・？? ＞3行目にimagesを付け足したのですがダメです。 何の3行目にimagesを付け足したのでしょうか？　そもそもimagesって何のことだろう・・・？?
クロスドメインの制限に引っかかってるみたいですね javascriptだけでは解決できないようです 以前はパイプする公開サービスがあったみたいですが もしご自身でphpなどサーバーサイドのプログラムが書ける環境であれば キックしてjsonデータを入手することはできそうです
文字列の途中で改行するのは文法違反なので 'あ\nい\nう\nえ\nお\n' としてください（円+エヌを文字として書く） むしろhrefの指定の方が気になります、せめて <a href="javascript:void(0)" onClick="document.converter.details.value+='あ\nい\nう\nえ\nお\n'">クリック</a> くらいにしておいてください 慣例的に <a href="#" onClick="document.converter.details.value+='あ\nい\nう\nえ\nお\n';return false;">クリック</a> のような書き方がよくつかわれます
こんにちは 三平方の定理（ピタゴラスの定理） 幅と高さのそれぞれの2乗の和の平方根を求めているので、対角線の長さを求めていることになります。 ご提示の式では、それぞれ1/2にしているので、結果は対角線の半分の長さになります。 （= 4分割した四角形の対角線） http://chu.benesse.co.jp/qat/6434_m.html
and演算でtrueを返すのはtrue && trueのみです <script> console.log(false && false); console.log(false && true); console.log(true && false); console.log(true && true); </script>
こんにちは 資料が長いのと処理があちこちに分散しているので、ざっと眺めただけで、ちゃんと理解してはいませんが・・・ 先に空のDOM構成だけ生成してから、後で内容を加えるような方法を取っていますよね？ 最初に作成される基本の構造　⇔　<td><span><i></i></span></td> これに対して、後からinnerHTMLでバッサリ書き換えたり、innerHTML += hogeで書き加えるような処理が散見されますが、例えば、上記の基本構造に対して 　tds[i + start].innerHTML += i+1; の処理を行えば、その結果は、 　<td><span><i></i></span>数字（=i+1)</td> となるので、ご質問の結果になるのは当然ということになります。 このあたりが、ご質問の事象の原因ではないでしょうか？ 先にDOM構造を固定して生成しておくのなら、後は、それに沿って内容を記入する処理形式（要素の値や属性値の設定だけを行う）にした方が良いと思います。 あるいは、計算処理は先に行っておいて、出力（DOMへの出力）はまとめて行うようにするなどといった処理方式にする方が、ご質問のようなことが生じにくくなるかも知れません。 蛇足ですが、ほとんど使用されない空のイタリック要素が数多く生成されるのも「なんだかな～」という気がします。 また、DOM要素に独自属性を付与しているようですが（year、mmddなど）、計算の過程で一時的に必要になるだけと思いますので、これをわざわざDOM要素の属性値として設定する必然性も無いように思います。
まず祝日は自動計算できません。 ロジックや方針がコロコロ変わるからです。 何年何月何日を祝日とするという単純な情報を列記してください 振替休日も微妙いろいろ考え方はありますが、計算でやるより 上記同様何年何月何日を振替休日という情報列記のほうが簡単で確実です
関数 slice は「意図的に汎用的」です。 関数内で使用する this に対して、以下の操作が可能ならば、 * this[index] の読み取り * this.length の読み取り this が配列オブジェクトだろうが、 「配列のようなオブジェクト」だろうが、 問題なく処理できてしまいます。 当然 arguments はこの二つの操作を備えていますので、 call によって this を挿げ替えれば slice が使えてしまいます。 以下サンプルです function slice() { _ var x = [], n = this.length; _ for (var i=0; i<n; i++) x.push(this[i]); _ return x; } var 配列オブジェクト1 = slice.call(配列オブジェクト); var 配列オブジェクト2 = slice.call(配列のようなオブジェクト); 余談ではありますが、 call に __proto__ を変更する機能はありません。 対象の関数に対して、関数スコープ内の変数 this を挿げ替えるだけです。
とりえあず1～10をチェックするならこんな感じ <script> function checksuru(f) { var v=f.elements["hensu"].value; if (v===""){alert ("値を入力せよ"); return false;} var reg=new RegExp("^([1-9]|10)$"); if (!v.match(reg)){alert ("1~10を入力してください"); return false;} return true; } </script> <form onsubmit="return checksuru(this)"> <h3>1~10を入力してください</h3> <p>値：<input name="hensu" value="" size="40"><br> <input type="submit" value="Check NUM"> </p> </form> CGI側はCGI側でそれなりの処理をいれてください (CGIの言語がわからないので今回はパス)
現在のスクリプトを張ってください。
こんばんは easyResponsiveTabs.jsはまったく存じませんが ＞「btnElm.first().click();」の個所を「2番目」と書き換えれば ＞良いのかなと考えたのですが であるなら btnElm.eq(1).click(); でいけるのではないでしょうか。 https://api.jquery.com/eq/
MS のことなら MSDN で調べましょう https://msdn.microsoft.com/ja-jp/library/office/ … https://msdn.microsoft.com/ja-jp/library/office/ …
こんにちは 書式が2種類あります。 https://developer.mozilla.org/ja/docs/Web/API/Wi … 文字列を引数にするとスクリプトのコードとして解釈されますが、この書式は非推奨になっています。 ＞tokeiと指定してありtokei()で無いのに関数として扱われる理由 ＞を教えて下さい。 第一引数にfunctionを渡すことになっているからですが、例えば var func = function(){ alert("hoge"); } setTimeout(func, 1000); とした場合は、1秒後にfuncが実行されてアラートがでます。 setTimeout(func(), 1000); とすると、setTimeoutの引数を評価する際にfuncが実行されてアラートがでますが、1秒後に実行される関数が存在しないので何も起きないことになります。 var func2 = function(){ return function(){ alert("hoge"); } } setTimeout(func2(), 1000); とすれば、引数評価時にfunc2が実行され返される匿名関数が引数として評価され、1秒後にアラートがでることになります。
// book2 を開いた後 var xlNormal = -4143; ExcelApp.ActiveWindow.WindowState = xlNormal; ExcelApp.ActiveWindow.Width = 300; ExcelApp.ActiveWindow.Height = 200;
ごめんなさい、話がみえてこないんですが wpcf7-submitは<input type="submit">なの？ サブミットしたら別のページに飛ぶんだから.ajax-loaderのあとにspanを入れる意味がないかと （入れた瞬間に別のページに飛んで消えるから） 私のイメージだと、<input type="button" class="wpcf7-submit" value="go"> をおすと、ajaxで仮にデータが飛んでバリデートしてエラーがかえってくるのかと 思っていたんですが、情報小出しすぎでなにしたいかわかりません
コメントをリスト化して、プルダウンのvalueをもとに値を得てビュースペースに書き込み 別途リンク先を別ウィンドウで開くだけです 元のソースがないので具体的にはかけません
括弧の対応まで考慮して削除するなら var s = 'ex(hoge(boke(huga)buka)piyo(puyo)'; var r = /\([^\(\)]*\)/; while (r.test(s)) s = s.replace(r, ''); // s == 'ex(hogepiyo'
案1. timeline をグローバル変数化 $( document ).ready(function() { _ var timeline = ... _ window.timeline = timeline; }); function opened() { _ window.timeline.moveTo( ... ); } <input type="button" onclick='opened()' ... > 案2. timeline が見えるスコープ内にて onclick を実装 / オススメ! $( document ).ready(function() { _ var timeline = ... _ $('input#opened').on('click', function(){ _ _ timeline.moveTo( ... ); _ }); });
ほしい仕様が書いてないのでなんといえませんが きょうびjQueryのライブラリが主流では？ https://www.google.co.jp/search?q=jquery+%E3%82% …
document.write("<div class=\"panel\">"); 何故\を付けるのか不明ですが、動的に変化する内容は無いので phpでincludeすれば良いのにとは思います。 質問のhtml部分を切り出してfilename.phpファイルとし、 html側から　<?php include("filename.php"); ?> 拡張子.htmlのままでphpを動かすには.htaccessファイルに記述。 サーバから出る時にhtmlに展開されるのでjavaより試験し易い
切り分けだけならこんな感じ （ないばあいは適当にidを変更して確認してみてください） <script> function check() { if(!document.getElementById("chkFDel")){ alert("チェックボックスがないよ"); }else if(document.getElementById("chkFDel").checked){ alert("チェックボックスあってチェックされているよ"); }else{ alert("チェックボックスあるけどチェックされてないよ"); } } </script> <form> <input type="checkbox" id="chkFDel"> <input type="button" value="check" onclick="check()"> </form>
仮説1 他のスクリプトにて window.onload が上書きされる 対処 上書きされない手段で代用 window.addEventListener とか 仮説2 スクリプトと HTML で文字コードが異なってしまい「体験講座」が見つからない 対処 文字コードの揺らぎに左右されない英数字の名前に変更 name="taikenkouzaKibou" とか 仮説3 他のスクリプトにて「体験講座」の要素が追加された or 関数名がかぶった 対処 名前をもっと詳細にする
こんにちは AfterEffectsを存じませんので、原因と対処法の考え方のみですが・・・ ご提示の構文だと 　＞　while(!fileObj.eof) { 　＞　　//　データ記入の処理 　＞　} として、ファイルの最終行まで1行ずつ処理を繰り返すような記述になっていますが… ＞と改行すれば、～～～うまくいきます。 と書かれている様に、改行がないカンマ区切りのデータは1行しかありませんので、上記の繰り返しは一度しか行われません。 （最初の1行を読み込んだ際に　txt = "0,50,10,20,99,"と同等になります。） この結果、ご質問のようなことになっているものと思われます。 では、「0」以外のデータはどうなっているかと言えば、 　＞　txt = txt.split(","); としているので、変数txtは配列となり、[ 0, 50, 10, 20, 99, ]の値を保持しています。 それなので、ファイルの読み込みでループするのではなく、この配列の値に対してループなされば、意図するようになるはずです。 考え方のイメージとしては、 　for(var i=0; i<txt.length; i++) { 　　// データ txt[i] を利用した処理 　} といった感じです。 ※ タイポなのかどうかは不明ですが、ご提示の質問文では99の後にもカンマがあります。 　 もしもデータがこの通りであるなら、配列のtxt.lengthは6で、txt[5]の値は""となります。 　 想像するところ最後のデータは余分だと思いますので、元データのカンマの有無に応じてループの回数を調整するか、あるいは、データの値をチェックしてから処理するなどの配慮が必要になるかも知れませんね。
ANo1です スクリプトでの計算方法はひとつに限っているわけではありません。 例えば、前回の質問は単純でしたので、場合分けをして値を設定しています。 今回も同様の方法でも可能ですが、少し変えて、下図のような表（赤枠内）を作成しておいて、それぞれのケース分けから表内の値を参照するという方法に変えています。 また、本数の入力が無い場合に結果欄に「\0」などと表示されるのはイマイチなので、この場合は空白になるように別に処理するようにしています。 前回に比べれば、今回の方法の方が少し一般化した解法になっていると言えるかもしれません。 例えば、加工の項目数を増やしたり、本数の場合分けを増やしたりする場合も、表を拡張すると考えれば、表のデータを変えることで拡張が可能になります。 ＞var result = "", i, idx = 0;　←どのような働きをするのでしょうか？ javascriptではvarは変数の宣言をする際に使用するもので、変数＝値とすることで初期値を設定することも可能です。 その他の文法やPDF特有の構文などについては、ここの回答欄ではとても足りないと思いますので、前回回答で挙げました資料などを参照してください。
<script> $(function() { $('.toggle2').hide(); $('.toggle1').click(function(){ $('.toggle2').toggle('swing'); }); }); </script>
ANo1です。 Acrobatのエラーメッセージはほとんど見たことがないので、読み方もよく分からないのですが・・・ 2、3試してみて、以下のエラーは発生できました。 どうやら処理を設定している場所が違うようですね。 ＜書式スクリプト＞ InvalidSetError: 設定できません。無効または不明です。 Field.value:11:Field Text1:Format ＜キーストローク＞ InvalidSetError: 設定できません。無効または不明です。 Field.value:11:Field Text1:Keystroke ＜カスタム検証＞ InvalidSetError: 設定できません。無効または不明です。 Field.value:11:Field Text1:Validate InvalidSetErrorとなっているので、設定自体が規則違反という意味のように思われます。 Format、Keystroke、Validateはそれぞれの設定方法に符合していますね。 想像するところ、実行時のエラーというわけでなく、設定時のエラーとして表示されているようです。 試しに、実行時のエラーを発生させてみると、以下のように1行目にエラー内容が表示されます。 ＜フィールドが取得できない場合＞ TypeError: f1 is null 3:AcroForm:Text1:Annot1:OnBlur:Action1 しらみつぶしに見たわけではありませんが、ご提示のエラーのうちの「Calculate」に該当するものが探しても見つかりませんでした。どのような設定をすると発生するのでしょうか？ Acrobatの仕様がどうなっているのかは存じませんが、上記の3つは基本的にバリデーション用と思いますので、推測するところ、値の取得はできても設定ができないとかの制限があったりするのかも知れませんね。 ANo4で挙げておいたドキュメントの中を探せば、どこかにそのあたりの解説が出ているかもしれません。 （すみませんが、私には読んでいる時間はありませんが・・・） エラーを探していろいろ発生させてみてわかりましたが、キーストロークを取る設定もできるようにはなっているようですね。（まったく気が付いていませんでした） ANo3にも書きましたように、私は、OnBlurのイベントでスクリプトの実行をテストしています。 また、（これも既に書きましたが）OnBlurでは必ずしも使い勝手が良いとは思えないのですが、上記でキーストロークをキャッチすることが可能そうなので、リターンキーだったら計算するというような制御ができるのかも知れません。最悪の場合（処理内容に制限がある場合など）は、直接実行せずに、スクリプトからblurさせることでイベントを発生させて、間接的に処理を実行させるような方法が可能かも知れません。（このあたりは試してないのでわかりませんが…） まずは（使い勝手はさておいて）、OnBlurで試してみてください。
ANo1です。 時間がちょっとだけとれたので、画像のsrc属性をシャッフルして入れ替える、ごく簡単な例を作成してみました。 　・ id="hoge"要素内にある画像をシャッフルします 　・最近のブラウザなら動作すると思います var imgs = document.querySelectorAll("#hoge img"); var srcs = [], n = imgs.length, rnd = Math.random; for(i = 0; i<n;) srcs.push([rnd(), imgs[i++].src]); srcs.sort(); for(i = 0; i<n;) imgs[i].src = srcs[i++][1];
ie8 ならば、No.3 案2 も可能です。 localStorage の各ブラウザ対応状況 https://developer.mozilla.org/ja/docs/DOM/Storag … 案1の場合の、具体的な実装方法 <script>window.onload = function(_) { var m = /(?:^|;)MYSPECIALVAL_scrolltop=(\d+)/.exec( document.cookie ); if (m) { _ ; window.scrollTo( 0, parseInt(m[1]) ); _ ; document.cookie = 'MYSPECIALVAL_scrolltop=;max-age=1'; } setTimeout(function(){ _ ; var y = document.documentElement.scrollTop || document.body.scrollTop; _ ; document.cookie = 'MYSPECIALVAL_scrolltop=' + y; _ ; location.reload(); }, 3000); }</script> 余談ではありますが ie8 はすでにサポート対象外の製品ですので気をつけましょう https://www.microsoft.com/ja-jp/windows/lifecycl …
こんにちは 回答がつかないようなので・・・ ご提示の情報からだけでは何ともわかないので、当たるも八卦の推測だけになってしまいますが、想像なさっているように、jsが影響している可能性が高そうです。 ＞すでにサイトで読み込まれてるjsたち（多分、ページTOPに戻るのリンクです） ＞が影響しているようでエラーになってしまいます。 想像するところ、どれかのjsが『ページ内リンクの形式』を利用して、クリックしたら何らかの処理をするようになっているのだと思います。 ところが、質問者様が追加なさったリンクは、その処理が想定している内容と違うので、どこかで処理がおかしくなりエラーになっているのではないでしょうか？ 対処方法も推測になってしまいますが・・・ 1）おそらくそのjsでは、ページ内の全てのリンクに反応するように設定されている可能性がありますので、それを限定するようにする。 ・まずは、該当スクリプトがどれかを見つけ出す必要があります。 ・そのうえで、クリックイベントを設定している部分を修正します。 ※ 実際の修正は、セレクタの修正だけで済む可能性が高いと思います。 2）既存のjsは触らないで、やりたいことを実現する。 　jsが全てのリンク要素のクリックに対して設定されていると仮定するなら、追加の要素をリンク要素ではないものにしておいて（それであれば既存のjsは動作しない）、javascriptにて追加要素をクリックした時にページ内リンクと同様の動作を実現する。 ※ 実は、方法としては可能ですが、HTML本来のマークアップから離れる方向に行くので、あまり良い方法とは思えませんが。 といったところを思いつきますが、どちらの方法も多少はjavascriptの知識が必要になりそうです。 もちろん、実際に起こっていることが、ここに書いた想像とは違う可能性もありますので、上記の対処が適切かどうかもよくわからないのですが。
手書き認識をしたいということですが、当然そのような機能はWeb標準にはありません。 （Web標準については、W3Cのサイトを参照してください https://momdo.github.io/html5/Overview.html ） それを踏まえ、あなたがやらなければならないことは、 ・マウスやタッチ入力を受け付けて座標を正しく取り込む ・入力をビットマップやベクトル、ストローク情報に変換する ・ビットマップやベクトル、ストローク情報から文字に変換する 　→機械学習が可能なサーバソフトを開発または導入し、既存または新規で手本データを入力し、DBを作成します。精度を上げるためには膨大なデータ量と、時間、調整が必要になります。また、テキストを送信すると結果を返すような口を作る必要もありますね。 　→すでにあるAPIを活用する。先ほど生成した画像を正しくエンコードし、APIにデータを送ることでJSON等で結果を受け取ることができる 　　https://dev.smt.docomo.ne.jp/?p=common_page&p_na … 　　http://www.libtech.co.jp/2015/05/28/google入力ツールで手書き入力/ など参考 　→オープンソースのソフトを導入する 　　http://appsv.ocrgrid.org/nhocr/index-j.html とか ・結果をパースして、それをinputに入力する これで手書きデータから文字列へ変換できます。 実際のところ、文章を拝読させていただいた限りでは、shin15sukiさんの今のスキルでは難しいのではないでしょうか。 タブレット向きの、大きくて使いやすいフォームを設計する方が、現実的ではないかと思います。 また、名前以外は、textではない方が入力しやすいかもしれませんよ。
こんにちは P5.jsはまったく存じませんので、リファレンスをテキトーに覗いてみただけですが… P5って、canvas利用の描画ライブラリのようですね。 ＞背景と針の色を変えたいのですがどうすればいいでしょうか 背景は画像を利用なさっているようですので、元画像を替えるのが妥当ではないでしょうか？ （canvas上で再取得して色変更することも可能ですが、あまり効率的とは思えません。） 針は描画する際に色を指定してあげれば良いはずです。 素のjavascriptでは、strokeStyleで指定が可能ですが、p5ではstroke()メソッドで指定できるようです。 http://p5js.org/reference/#/p5/stroke 指定方法は、色名でも#XYZ形式でもr,g,b形式でも良いみたいです。 モードを変えればHSB形式でも指定が可能なようです。 全部の針を纏めて指定するならpush()、pop()の外側で、個別に色を変えたいのなら、それぞれを描画する際に指定すれば宜しいでしょう。
システム開発の仕事を30年ほどしていました。 　最も大切なのは「日本語で処理手順（アルゴリズム）をしっかり考え文書にまとめられるようになること」だと思います。その際、「平易で無駄のない処理手順」を心がけられるとよいでしょう。 　今日的なコーディングとしては、リアルタイム処理など一部の極シビアなシステムでない限り、言語仕様の詳細を理解した凝ったソースを書く必要はありません。そこはコンパイル時にコンパイラーが、実行時には実行ライブラリと強力なCPUがカバーしてくれます。 参考まで。
aE.setAttribute('target', '_blank');
こんにちは どのような仕様のものを作りたいのかイマイチわからない部分もありますが・・・ ・現状では全てinput要素ですが、今日の日付とかも変更できるの？ ・結果の部分もユーザが変更できるの？　その時はどう計算するのか？ ANo1様の回答の(1)案に近い感じで、勝手に作成し直してみました。 ・ユーザが入力できるのは2行目のみに限定しています 　（他はdisabled。input要素にする必要もないのですけど） ・入力値のチェックをどの程度行うかにもよりますが、あり得ない日付 　（2月30日とか）もはじくようにしています。 ・エラーメッセージは一通りなので、表示/非表示で制御 ・イベントは伝播するので、onchangeイベントは上位のformのみに設定 といった感じにしてあります。 以下、ご参考まで。 （インデントは全角空白にしてありますので、半角に） <!DOCTYPE HTML> <html lang="ja"> <head><title>sample</title> <style type="text/css"> #form1 input[name^="a"], #form1 input[name="keikaNissu"] { color:#000; } #info1 { color:#F00; display:none; } </style> <script type="text/javascript"> window.onload = function(){ 　var frm = document.getElementById("form1"); 　var info = document.getElementById("info1"); 　var elms = frm.elements, flg = false; // 本日の日付を設定 　var dt = new Date(); 　var y = dt.getFullYear(), m = dt.getMonth(), d = dt.getDate(); 　dt = new Date(y, m, d); 　elms["a_yer1"].value = y; 　elms["a_mon1"].value = m + 1; 　elms["a_day1"].value = d; // 値を入力時の処理 　frm.onchange = function(){ 　　var y = elms["b_yer1"].value; 　　var m = elms["b_mon1"].value; 　　var d = elms["b_day1"].value; 　　var dt2 = new Date(y, m-1, d); 　　var y2 = dt2.getFullYear(); 　　var m2 = dt2.getMonth(); 　　var d2 = dt2.getDate(); 　　if(y2==y && m2==m-1 && d2==d){ 　　　elms["keikaNissu"].value = (dt2 - dt)/1000/60/60/24; 　　　info.style.display = "none"; 　　　flg = true; 　　} else if(flg || (y!="" && m!="" && d!="")){ 　　　info.style.display = "inline"; 　　　elms["keikaNissu"].value = ""; 　　　flg = true; 　　} 　} } </script> </head> <body> <form name="form1" id="form1" action="#"> <p> <input type="text" name="a_yer1" size="5" value="" disabled>年 <input type="text" name="a_mon1" size="3" value="" disabled>月 <input type="text" name="a_day1" size="3" value="" disabled>日 ～ <p> <input type="text" name="b_yer1" size="5" maxlength="4" value="">年 <input type="text" name="b_mon1" size="3" maxlength="2" value="">月 <input type="text" name="b_day1" size="3" maxlength="2" value="">日 <p> 経過日数：<input type="text" name="keikaNissu" size="9" value="" disabled> <span id="info1">日付が間違っています</span> </form> </body> </html>
こんにちは 0.7を掛けているので、いずれにしろ端数がでる可能性がありますね。 値を丸めるにしても四捨五入とか切り上げ、切り捨て等の方法が考えられます。例えば四捨五入なら、 https://developer.mozilla.org/ja/docs/Web/JavaSc … 10円単位や100円単位で丸める場合も、同じような方法で可能ですね。
window.onloadで一関数ですよ。 onLoadでは、外に定義したupdateDateを呼んでいるだけです。また、updateDateでは値をセットするところまでがワンセットです。 window.onload = function(){ updateDate(); }; function updateDate(){ // 既定値として本日日付を設定しておく var hiduke = new Date(); var year = hiduke.getFullYear(); var month = hiduke.getMonth()+1; var day = hiduke.getDate(); document.getElementById("a_yer").value = year; document.getElementById("a_mon").value = month; document.getElementById("a_day").value = day; } ご参考になれば幸いです。
少々アレンジして、やりたいことを実現 <script>(function(_){ _ ; var TARGET_SELECTOR = 'table#master_store_index_list_table'; _ ; var TAX_RATE = 0.08; _ ; function N(s){ return (s && /^\d+/.test(s))? parseInt(s.replace(/,/g,'')): 0 } // 入力なし考慮 _ ; function S(n){ return (n|0).toString().replace(/(\d)(?=(\d\d\d)+$)/g, '$1,') } // カンマ入り表示 _ ; function calcRow(tr) { _ ; _ ; function Q(name){ return tr.querySelector('*[name='+name+']') } _ ; _ ; var sel = Q('c'), opt = sel.options[ sel.selectedIndex ], 単価 = N(opt.dataset.price); // 金額パターン _ ; _ ; Q('u').value = S(単価); // 単価を表示したい部分 _ ; _ ; var 小計 = 0, 個数 = N(Q('n').value); // 入力した個数 _ ; _ ; if (個数 > 0) 小計 = 個数 * 単価; _ ; _ ; Q('s').value = S(小計); // 小計を表示したい部分 _ ; } _ ; function calcTotal() { _ ; _ ; var table = document.querySelector(TARGET_SELECTOR); _ ; _ ; var 合計 = 0, sums = table.querySelectorAll('*[name=s]'); _ ; _ ; for (var i = 0; i < sums.length; i++) 合計 += N(sums[i].value); _ ; _ ; function Q(name){ return table.querySelector('*[name='+name+']') } _ ; _ ; Q('subtotal').value = S(合計); _ ; _ ; Q('tax').value = S(合計 * TAX_RATE); _ ; _ ; Q('total').value = S(合計 * (1+TAX_RATE)); _ ; } _ ; document.addEventListener('DOMContentLoaded', function(ev){ _ ; _ ; var table = document.querySelector(TARGET_SELECTOR); _ ; _ ; var rows = table.querySelectorAll('tbody tr'); _ ; _ ; for (var i = 0; i < rows.length; i++) calcRow(rows[i]); _ ; _ ; calcTotal(); _ ; _ ; table.addEventListener('change', function(ev){ _ ; _ ; _ ; var node = ev.target; _ ; _ ; _ ; while (node && node.tagName != 'TR') node = node.parentNode; _ ; _ ; _ ; if (node) calcRow(node), calcTotal(); _ ; _ ; }, false); _ ; }, false); })()</script> <table border id=master_store_index_list_table> <thead> <tr><th>品名<th>パターン<th>単価<th>個数<th>計 <tbody> <tr> <td>foo <td><select name=c> <option value=1>無料 <option value=2 data-price=500>ほげ <option value=3 data-price=1000>ぴよ <option value=4 data-price=1500>ふが </select> <td><output name=u></output>円 <td><input type=number name=n min=0 value=0> <td><output name=s></output>円 </tr> <tr> <td>bar <td><select name=c> <option value=1>無料 <option value=2 data-price=600>ほげ <option value=3 data-price=1200>ぴよ <option value=4 data-price=1800>ふが </select> <td><output name=u></output>円 <td><input type=number name=n min=0 value=0> <td><output name=s></output>円 </tr> <tfoot> <tr><th>小計<th><th><th><td><output name=subtotal></output>円 <tr><th>税額<th><th><th><td><output name=tax></output>円 <tr><th>合計<th><th><th><td><output name=total></output>円 </table>
自分ならJSON部分だけ引っこ抜いて来るのが早いのかなと思います。 あとは煮るなりやくなりすきにすればよいのではないでしょうか。 str.match(/(\{.+?);/); var data = JSON.parse(RegExp.$1); console.log(data); あと、JavaではなくてJavaScriptですよね..？
>また成功率も低いです まあ無理やりやればこういうこともできますよって例ですから・・・ ちゃんとやるなら、サーバー側のプログラムでクロールして ソースにidを埋め込む処理などが必要です
これは却下されているのです。 多分セキュリティ上で拒否していています。 別のブラウザでお試しください。
function MyClass(){} をすると、自動的に MyClass.prototype = new Object(); MyClass.prototype.constructor = MyClass; と処理されます なので、 オブジェクト MyClass.prototype は、関数 MyClass と同じタイミングで作られる。 オブジェクト MyClass.prototype を生成したコンストラクタは、関数 Object である。 プロパティ MyClass.prototype.constructor は、関数 MyClass である。
>java自体はダウンロードしていて 実行されたのかしら？ コンパネ---プログラムと機能　その中に　JAVA　（VER9辺り）　があるか？　 無ければ、実行されてないから ダウンロードフォルダー開いて、javaのファイル　ダブルクリックしてみたら？
スクリプトタグを一度閉じてしまうと、そこまでの範囲で評価しようとするため その時点で定義されていないtest()関数の参照ができないということでは？ 関数の宣言は実行文の前でやるか window.onloadを利用して、一度全文読み込んでから実行してください <script type="text/javascript"> window.onload=function(){ var id = '2222'; test(id); } </script> <script type="text/javascript"> function test(id) { alert(id); } </script>
>1番目に書いてもらったスクリプトは無視していいんですよね・・？ 無視してください
命題の方法ではすべてのブラウザで実行されるわけではありませんが大丈夫ですね？ そのうえでこんな感じ <html> <body> <a href="#" onclick="if(confirm('この画面を閉じますか？')){window.open('about:blank','_self').close();}">この画面を閉じる</a> </body> </html>
ごめんイミフ、いただいた命題からだとこうとしか・・・ if(test=="xxx") id="YYY"
こんにちは このあたりが参考になるかもです http://javascripttyping.game.coocan.jp/javascrip …
<script>window.addEventListener('DOMContentLoaded',function(_){ _ ; var form = document.forms['a']; _ ; function choice() { _ ; _ ; var v = form.elements['block'].value; _ ; _ ; var x = form.elements['port']; _ ; _ ; for (var i=0; i<x.length; i++) { _ ; _ ; _ ; var selector = x[i], valid = (selector.dataset.block == v); _ ; _ ; _ ; selector.style.display = valid? '': 'none'; // 対象外は表示させない _ ; _ ; _ ; selector.selectedIndex = valid? selector.selectedIndex: 0; // 対象外は未選択にする _ ; _ ; } _ ; } _ ; choice(); // 初期表示時 _ ; form.addEventListener('change',choice,false); // 値が変わったとき },false)</script> <form name=a> <label><input type=radio name=block value=n>北</label> <label><input type=radio name=block value=e>東</label> <label><input type=radio name=block value=w>西</label> <label><input type=radio name=block value=s>南</label> <select data-block=n name=port> <option>- <option value=cc>札幌 <option value=ss>仙台 </select> <select data-block=e name=port> <option>- <option value=tt>羽田 <option value=aa>成田 </select> <select data-block=w name=port> <option>- <option value=gg>中部 <option value=bb>関空 </select> <select data-block=s name=port> <option>- <option value=ff>福岡 <option value=ah>那覇 </select> </form>
こんにちは ざっと見ただけですが・・・ 現在のスクロール量が対象要素のtopとbottom位置の間にあれば、リスト内のそのリンクにcurrentクラスを付けるようになっていますので、それ以外の時はcurrentクラスを付けないようにしてあげれば宜しいかと。 スクリプト中で、該当する要素が存在したら 　navLink.removeClass('current'); 　navLink.eq(i).addClass('current'); として、クラスの付け替えをしていますが、クラス削除の記述をfor文の前に持っていけば、 　「まず全体をクリアしておいて」→「該当要素があればクラスを付ける」 という処理手順に変わりますので、結果的に該当要素が無い時はクリアされたままになります。 ただし、全体のロジックが『「要素が見えていたら」ではなく「要素の中までスクロールをしたら」クラスを付与する』というようになっていますので、対象要素が連続していない一番最初のところではなんか違和感があるかも。 （もともとがそのような考え方で作られてはいるのですけれど…）
こんにちは 私の環境が、js doitをキチンとみられない環境なので、ちゃんと確認したわけではないのですが・・・ ご利用のスクリプトはライブラリ化されているようで、オプション指定で見え方や機能を制御できるようになっているものと想像されます。 配布元サイトがわかりませんが、そのサイトにオプション等の説明がありませんでしたでしょうか？ わざわざカスタマイズしなくても、それを利用することでご質問の内容のかなりの部分は対応可能ではないかと想像しますが。 （スクリプトを解析して調べるのは面倒なので…あくまでも想像です。） 一方で、ご質問程度の内容であれば、機能限定にすればそれほど複雑にはなりませんので、以下にサンプル的なものを作成してみました。 ※ #articles内のリストの各項目（ＬＩ）を1ページとして考えています。 ※ クラスpaginationの要素内にページネーションが作成されます。 　（複数あっても可） ※ ページの両端ではprev、nextの表示にdisabledクラスを付与しています。 　（サンプルではCSSでグレー表示でカーソルは通常になるようにしています） ※ スクリプトの最初のprevText、nextTextを変えれば表示テキストが変わります。 ※ 1ページ分の表示でスクロールが発生することはないと想定していますが、必要な場合は該当項目のtopへスクロールする方がよいのかも知れません。（コメントアウトの行がその機能になっています） ※ おまけとして、ページ内から他のページへのリンクを可能にしてあります。 　（HTMLを見ればわかりますが、リンク先を#pageNo○○のように指定します） 以下、ご参考まで。 （インデントを全角空白にしてあるので半角に戻してください） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #articles { margin:0; padding:0; list-style-type:none;} #articles>li { width:600px; height:400px; background-color:#DFD; } .pagination { color:black; font-weight:bold; } .pagination .prev, .pagination .next { cursor:pointer; } .pagination .disabled { color: #BBB; cursor:auto; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ 　var prevText = "&#60;", nextText = "&#62"; 　var disabl = "disabled"; 　var articles = $("#articles>li").hide(); 　var current, pageMax = articles.length -1; 　var page = $(".pagination").html(""); 　var prev = $("<span>").appendTo(page); 　prev.html(prevText + "　").addClass("prev"); 　var pageNo = $("<span>").appendTo(page).addClass("pageNo"); 　var next = $("<span>").appendTo(page); 　next.html("　" + nextText).addClass("next"); 　var setPage = function(n){ 　　if( n<0 || pageMax<n ) return; 　　var elm = articles.hide().eq(n).show(); //　 $(window).scrollTop( elm.offset().top ); 　　pageNo.html( 1 * n + 1 ); 　　current = n; 　　0==n? prev.addClass(disabl): prev.removeClass(disabl); 　　pageMax==n? next.addClass(disabl): next.removeClass(disabl); 　} 　prev.on("click", function(){ setPage(current-1);}); 　next.on("click", function(){ setPage(current+1);}); 　setPage(0); //以下おまけ（削除可能） 　$("#articles").on("click", "a", function(e){ 　　if(n = /^#pageNo(\d+)$/.exec($(e.target).attr("href"))){ 　　　setPage(n[1] - 1); 　　　return false; 　　} 　}); }); </script> </head> <body> <div class="pagination"></div> <ul id="articles"> <li>*** 1 *** <p><a href="#pageNo6">6ページへ</a> </li> <li>*** 2 ***</li> <li>*** 3 ***</li> <li>*** 4 ***</li> <li>*** 5 ***</li> <li>*** 6 *** <p><a href="#pageNo1">1ページへ</a> </li> </li> </ul> <div class="pagination"></div> </body> </html>
たとえばリストのデータ形式を var list={ "卵":{ "焼く":{"name":"目玉焼き","width":600,"height":700} ,"ゆでる":{"name":"ゆで卵","width":600,"height":900} }, "じゃがいも":{ "焼く":{"name":"焼きイモ","width":500,"height":800} ,"蒸す":{"name":"ふかしイモ","width":700,"height":600} }, "にんじん":{} }; のようにして、 if(typeof(list[zairyo])=="undefined" || typeof(list[zairyo][chouri])=="undefined"){ text="未設定"; }else{ text=list[zairyo][chouri]["name"]; window.resizeTo(list[zairyo][chouri]["height"],list[zairyo][chouri]["width"]); } 的な処理をすることになりますが window.resizeTo()はブラウザによって動作条件があるので すべての環境で想定したとおりに動かないかもしれません
短く var Q = d=>document.getElementById(d), s = Q('hogehoge').value; var m, r = /(\d\d)(\d\d)(\d\d)\.mpg\b/g, t = 0, G = v=>parseInt(v,10); while (m=r.exec(s)) t += G(m[1])*3600 + G(m[2])*60 + G(m[3]); var R = function(a){return ()=>('00'+a.shift()).substr(-2)} Q('となりあたりのinputタグid').value ='@:@:@'.replace(/@/g, R([t/3600|0, (t/60|0)%60, t%60]));
生きている (live) とは * 文書構造の変更が直ちに反映される最新の情報 反対語は静的 (static) となり * ある時点でのスナップショット情報 document は文書構造そのものなので、普通はわざわざ生きているとは呼びません。 一般には document.getElementsByTagName() した結果の HTMLCollection のオブジェクトのことを、 静的なコレクション情報でないことを強調するために「生きている」と呼びます。 オブジェクトの解説にも明記されています。 https://developer.mozilla.org/ja/docs/Web/API/HT … ただし、生きているコレクション情報というのは、 情報を反映するために余分な処理が生まれたり、 並列処理や分散処理などで問題になるため、 扱いが難しい面があります。 なので、生きているコレクションを殺す...もとい、静的に変換してから使用したり、 https://www.google.com/search?q=htmlcollection+a … そもそも静的なコレクションにて取得できるような手段が用意されたりと、 https://developer.mozilla.org/ja/docs/Web/API/No … 最近は生きているのがつらいご時勢のようです。 > どのような場面で利用するべきものなのでしょうか。 過去の規格で定められた仕様なので実装されていますが、 もう活用できる局面が思いつきません。
たとえばこんな感じ？ <script> try{ document.addEventListener ('click',function(e){clickfunc(e)},true); }catch(e){ document.attachEvent('onclick',function(e){clickfunc(e)}); } function clickfunc(e){ var t = (e.srcElement || e.target); var myurl=location.host; var reg=new RegExp('^http://(?!'+myurl+')'); if(t.nodeName=='A' && t.href.match(reg)){ var yn=confirm('外に飛んでよい？'); if(!yn){ if(e.preventDefault)e.preventDefault(); else e.returnValue = false; } } } </script> <a href='http://www.yahoo.co.jp'>yahoo</a> <a href='http://mysito.exsample.co.jp'>mysito</a> <a href='test.htm'>test</a>
こんにちは ＞下記の画像のwidth="217" height="89"の部分をJavascriptでどうやって ＞レスポンシブに対応できますか？ ご提示のサイズが217×89なのでどうなさりたいのかよくわかりませんが、サイズを変えたいってことでしょうか？ 　var img = document.querySelector("#logo img"); 　img.style.width = xx + "px"; みたいな方法で可能だと思います。 実際には、ユーザーエージェントの種類や画面サイズなどで判定して、対応することになるのでしょうけれど… http://idotdesign.net/blog/web/js/responsive-if- … http://blog.sntn1217.com/archives/168/ http://black-flag.net/jquery/20120808-4047.htmlj … 0;
JavaScript だけで実現する具体的な方法。 お知らせ表示程度ならば、これで十分でしょう。 <style> .notice .new { font-weight:bold; } /* 注目表示 */ .notice .expiration { display:none; } /* 期限切れ */ </style> <script> document.addEventListener('DOMContentLoaded', function(ev){var _=0; _; function A(a){return Array.prototype.slice.apply(a)} _; function QQ(s){return A(document.querySelectorAll(s))} _; var DAY = 1000*60*60*24; _; var attent = DAY * 1 / 24; // 最初の1時間は注目表示 _; var KEY = 'noticeFirstView'; _; var now = new Date().getTime(); _; var p = localStorage.getItem(KEY); _; var record = p? JSON.parse(p): {}; _; var neo = {}; _; QQ('.notice *[id][data-days]').forEach(function(e){ _; _; var period = DAY * parseFloat(e.dataset.days); _; _; var first = record[e.id]; _; _; if (first && now < first+attent) e.classList.add('new'); _; _; if (first && first+period < now) e.classList.add('expiration'); _; _; neo[e.id] = first? first: now; // お知らせを最初見た日時を記録 _; }); _; localStorage.setItem(KEY, JSON.stringify(neo)); // 閲覧記録をブラウザに保存 }, false); </script> <ul class=notice> <li data-days=1 id=hogehoyohoe>1日だけ掲載したいお知らせ <li data-days=2 id=foobarbazqu>2日だけ掲載したいお知らせ <li data-days=4.5 id=issyhatrsgt>4日半だけ掲載したいお知らせ </ul>
関数 onRequest のなかで req.url == "/" ならば、200 text/html の応答として HTML を返し req.url == "/img/cat.jpg" ならば、200 image/jpeg の応答として画像バイナリを返し それ以外なら 404 を返しましょう 画像バイナリを返すには、 https://nodejs.org/api/fs.html#fs_fs_readfile_fi … を活用するとよいでしょう
こんにちは google apps scriptは存じませんので、ご質問文を見た範囲での回答となっており、はずしているかも知れませんが・・・ ＞「TypeError: undefined からプロパティ「15」を読み取れません。」 とのことなので、 sheet_values[i]がundefinedかあるいは読み取れないなどと推測できます。 データを読み込んで解析するのに、いきなり「lastRow」や「15」を指定して読み出そうとなさっていますが、元データに空の行があったり、空のセルがある場合に、そもそも、どのような値が返されてくる仕様になっているのでしょうか？ 通常で考えれば、（どこか他で決めている？）lastRowではなく、sheet_values.length等を用いてループするのが妥当ではないかと思いますが… googleのリファレンスで見てみると、データサイズは当該配列のサイズを参照してループしていますし、個々のセルの値についても存在をチェックして処理を行うようにしているようです。 https://developers.google.com/apps-script/refere …
ANo1、2です 当たるも八卦の割には近かったみたいですね。 投稿時のタイポかも知れませんが、jqueryではなくjQueryではないでしょうか？（javascriptでは大文字と小文字は区別されます） エラーが出ていないかどうか確認してみてください。 できるなら、フレームワークを統一した方が良いように思いますけれど…
＞■質問1 $(function(){ var li = $('<li>').text('サンプル'); alert(li); $('ul > li:eq(1)').before(li); }); すればわかる通り挿入しているのはオブジェクトです var li = "<li>サンプル</li>"; のようにテキストを無理やり突っ込むのとやっていることは全然違います。 オブジェクトの挿入のほうがDOMライクでよいかもしれません ＞■質問2 $('li')は既存のliをつかむ処理です
>正しい結果 定義されてないものなんだから拾えないのが正しい結果 つまりwindow.toolbarは未定義=null nullに対してvisibleプロパティを参照するから 命題のようなエラーになってる
私の環境ではウインドウサイズ縮小で画面外にカードが行きましたが 最大化では中ほどに表示されました。 現象は違いますがLeftを起点に位置を固定しているのが原因だと思われます。 スクリプトを以下に変更してください。 <script type="text/javascript"> function changeEasyCart(){ var easyCart = document.getElementById("easycart"); easyCart.style.position="fixed"; easyCart.style.left=""; easyCart.style.right="0px"; window.addEventListener("mousemove", easyCartRelocate); } function changeEasyCartLater(){ setTimeout("changeEasyCart()", 300); } //ウインドウからはみ出したら戻す function easyCartRelocate(e){ var easyCart = document.getElementById("easycart"); var windowWidth = parseInt($(window).width(), 10); var windowHeight = parseInt($(window).height(), 10); var cartY = parseInt(easyCart.style.top, 10); var cartX = parseInt(easyCart.style.left, 10); var cartHeight = parseInt(easyCart.clientHeight, 10); var cartWidth = parseInt(easyCart.clientWidth, 10); if(cartY < 0){ easyCart.style.top = "0px"; } if(cartY + cartHeight > windowHeight){ easyCart.style.top = (windowHeight - cartHeight); } if(cartX < 0){ easyCart.style.left = "0px"; } if(cartX + cartWidth > windowWidth){ easyCart.style.left = (windowWidth - cartWidth); } } </script> ~~~~~~~~~~~~~~ <input type="button" value="カートを表示する" onClick="EasyCart.cartShow();changeEasyCartLater();" />
<script> window.addEventListener('DOMContentLoaded', ev => { _ var form = document.getElementById('abcde'), items = form.elements['g'], i, v = ''; _ for (i = 0; i < items.length; i++) if (items[i].checked) v = items[i].value; _ form.dataset.prevG = v; // 変更前の値を form に覚えさせる _ form.addEventListener('change', event => { _ _ var t = event.target, f = t.form; if (t.name != 'g' || !t.checked) return; _ _ var v = f.dataset.prevG; _ _ if (v && v != t.value) alert('change!'); // 変更前の値があり、変更前後で異なるなら alert _ _ f.dataset.prevG = t.value; // 次回のために、変更前の値を更新 _ }, false); }, false); </script> <form id=abcde> radio は form 配下でなければ意味が無い <input type=radio name=g value=1>item1 <input type=radio name=g value=2>item2 <input type=radio name=g value=3>item3 </form>
ANo2です。 ANo2で説明した方法で、あとから手動で画像ファイルを放り込むことで試してみましたが、予想通りに動作するようです。 しかしながら、ANo2にも書きましたように、この処理方法ってあまりほめられたものではないように感じます。 スクリプト云々よりも、全体のフローを考え直した方がよろしいのではないでしょうか？ ＞html側に ＞<script>yobidashi('sample','test/123456.jpg');</script> このURLは固定のURLなのでしょうか？ それともサーバから可変で出力されるものなのでしょうか？ ＞上のtestフォルダにサーバー側のプログラムがjpg画像をドロップします サーバから上記のURLを返して（出力して）おいてから、画像を出力しているのなら、順序を逆にするだけでjavascriptで後読みする必要がなくなりませんか？ ＞previewImg.srcで一度onerrorの方にいってしまいonerror内で再度 ＞yobidashiをリトライして、testフォルダに【123456.jpg】があっても ＞onerrorの方にいってしまいます。 私がざっと試した時も、ローカル環境でIE（ver11）では似たような事象が発生しました。 原因は調べていませんが、fxでは発生していません。 一方で、いずれのブラウザもサーバ環境であれば予定通りに動作しました。
こんにちは。 現在のURLを取得して、そのURLをエンコードできれば解決すると思いました。 仕事で行ったことはないですが、簡単に以下の様なテストページを作って確認したところ、できました。 <script> var URL = window.location.href ; document.write('<a href="http://www.facebook.com/sharer.php?u='+encodeURI …(URL)+'" target="_blank"></a>'); </script> これをHTMLのシェアボタンのソースのところにコピペでそのまま使えると思います。 ただ、使ったencodeURIComponent()はUTF-8でエンコードするので、shift_jis、euc-jpでエンコードする場合はライブラリが必要みたいです。 頑張ってください。
こんにちは。 状況をきちんと把握できていない部分もありますが・・・ ＞divのinnerHTMLとしてPHPから動的に書かれたものなのです。。。 $(function() { ～～ はHTMLソースの読込とパースが終わった時点で関数内のスクリプトが実行されますが、その時点ではまだ #employee_name の要素が存在しないってことですよね？ 存在しない要素に対して、処理を設定しようとしてもうまくいかないというご質問と解釈しました。 ＞divのinnerHTMLとしてPHPから動的に書かれたものなのです。。。 ＰＨＰへのリクエストをどのようなタイミングで行っているのか不明ですが、スクリプトを利用したajaxなどで該当する要素を生成しているのではないかと想像します。 それなので、生成するタイミングさえスクリプト側で把握できるのであれば、その後の処理としてautocompleteの設定を行うことで、意図なさっている動作をするのではないでしょうか？ （ajaxと仮定して）具体的には、ajaxのcallback内やsuccess時の関数内で設定処理を行うようにすればよろしいかと思います。
こんにちは fancyBoxはよく知りませんが、いろいろな表示形式が用意されているようですね。 質問者様がどの方法で子ウィンドウを表示しているのかがわかりませんが・・・ ＞親ウインドウを指定のページに移動表示させ、 通常のリンクを設定しておけばページ遷移がおきるはずと思います。 iframeのタイプで表示している場合などは、targetを指定しておく必要があるかも ＞ 同時に子ウインドウは閉じるといった動作です どうせ遷移するのですから、閉じなくても同じことだとは思いますが… fancyBoxにはいろいろなオプションやメソッドが用意されているようですので、それを利用すれば可能と思います。 下記の解説ページの下の方に閉じるメソッドの説明があります。 http://fancybox.net/api 対象のリンクをクリックした際に、 　$.fancybox.close()　を実行すればよいみたいです。 確認したわけではありませんが、fancyBoxでモーダルに表示される要素は、HTMLソースのクローンの可能性がありますので、idなどは用いない方がよろしいかと思います。（同一id要素が複数存在してしまう可能性がある） fancyBoxの表示用の親要素に固定のidがあると思いますので、それを要素の識別に利用するのが良いのではないかと推測します。 ※ 試したわけではありませんので、違っていたらばご容赦ください
refresh が必要です。 $('#chk1').prop('checked', true).checkboxradio('refresh');
こんにちは。 では、テキストボックスにフォーカスされている場合、 ウィンドウのどこを押してもvalを取得するというふうに変えてもダメですかね？ $(function(){ $("input:text").on("focus", function(){ $(window).on("click blur keydown keyup keypress change touchstart", function(){ var new_val = $("input:text").val(); $(".text").text(new_val); }); }); }); さっきご飯食べながらだったので、 今ちょっと、作ってみました。 テキストエリアのリアルタイム取得で下のテキスト<p>に反映するみたいなのを。 私のアンドロイド5.1.1は大丈夫だったんですけど、iosは自信ないです。
ANo1様がすでにご回答のように不可能ではないと思いますが、動的なサイトの場合、動的な何の情報を取得したいのかが問題になると思います。 スクリプトなどで初期表示に補追している状態を得るだけであれば、単純にエミュレートができれば可能とは思いますが、状況によって変化するようなケースでは情報取得のタイミングや状態をどのように設定するかで結果が異なったものになってくる可能性が高いのではないでしょうか。
たとえばsearchを使うならこんな感じ //parent.htm <html> <head> <title>parent01</title> </head> <body> <a href="child.htm?x=apple" target="content">apple</a><br> <a href="child.htm?x=orange" target="content">orange</a><br> <a href="child.htm?x=banana" target="content">banana</a><br> </body> </html> //child.htm <html> <head> <title>child</title> <script> window.onload=function(){ var reg=new RegExp("(?:\\?|&)x=(.+?)(&|$)"); var x=location.search.match(reg)[1]; document.getElementById("content").innerHTML=x; } </script> </head> <body> <div id="content"></div> </body> </html>
jQueryとか使わないなら、以下のようなベタな感じでやってください 同じform内で完結しているなら <input type="checkbox" name="AllCheck" onClick="AllChecked(this);" />全選択<br> として function AllChecked(obj){ var check = obj.checked; var f=obj.form for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox" && f[i].name=="'check[]"){ f[i].checked=check; } } } みたいな感じ
repairのonchangeでthis.form.elements["warning"].style.displayの値を変えてあげましょう
この手の処理を行うならば、HTML解析した後で DOM や XPath を使うことをお勧めします。 そうすればつまらない問題に悩まされることも無く、間違いの無い処理ができるでしょう。 が、多少の間違いには目をつぶっても、正規表現で簡単に行いたいならば、 単語区切りの \b と、最短一致数量子 *? を使えば、まずまずの結果が得られると思います。 var re = /<p\b.*?>.*?<span\b.*?>(.*?)<\/span\b.*?>(.*?)<\/p\b.*?>/g; var m = re.exec(文字列); if (m) 結果表示(m[1] + ' ' + m[2]);
こんにちは。 ＞f.elements["nen","tuki"].style.display=(obj.value=="A")?"block":"none"; 要素の指定にカンマ区切りで並べて全部を指定したい意図かと想像しますがそのようにはなりません。 （文法的に間違ってはいないので、javascriptの値の評価として[ ]内は"tuki"として評価されます） https://developer.mozilla.org/ja/docs/Web/API/HT … ご質問の内容を実現する方法はいろいろあると思いますが、要素が2つだけなのでそのままベタに2回記述すればよろしいかと。 f.elements["nen"].style.display=(obj.value=="A")?"block":"none"; f.elements["tuki"].style.display=(obj.value=="A")?"block":"none";
divで調整しなくてよいならformのnameでオブジェクトを選択できます <script> function myfunc(obj){ var f=obj.form; f.elements["g"].style.display=(obj.value=="MT")?"block":"none"; } </script> <form> <select onchange="myfunc(this)"> <option selected>シフトを選択</option> <option value="AT">AT</option> <option value="MT">MT</option> </select> <select name="g" class="giahi" style="display:none"> <option value="">ギア比を選択</option> <option value="2" >2速</option> <option value="3" >3速</option> <option value="4" >4速</option> <option value="5" >5速</option> <option value="6" >6速</option> <option value="7" >7速</option> <option value="8" >8速</option> <option value="0" >その他</option> </select> </form> <form> <select onchange="myfunc(this)"> <option selected>シフトを選択</option> <option value="AT">AT</option> <option value="MT">MT</option> </select> <select name="g" class="giahi" style="display:none"> <option value="">ギア比を選択</option> <option value="2" >2速</option> <option value="3" >3速</option> <option value="4" >4速</option> <option value="5" >5速</option> <option value="6" >6速</option> <option value="7" >7速</option> <option value="8" >8速</option> <option value="0" >その他</option> </select> </form> 同じフォーム内でやるばあいはセレクトボックスのnameをユニークにするとよいでしょう
javascriptを使ってすべて可能です。
こんにちは。 確認できる環境にないので、イメージの回答になってしまいますが… 複数セットある場合は、各単位毎にdiv要素などで括っておくと処理がしやすくなります。 また、セット数が増減しても対応可能なように、文書構成を利用した相対的位置関係で処理するような記述をしておくと便利だと思います。 具体的には、まず、その(親)div要素を探して、後は、その要素の子孫要素だけを対象に操作するような記述にしておけば、そのセットだけを対象にすることができます。 さて、ご提示のHTMLのままで処理することももちろん可能です。 処理が少しだけ面倒かもしれませんが、 ＞numContが取得できていません。 セットの順序は文書の中でのul.tabの順を得れば良いと思いますが、thisはli要素ですよね。 var numCont = $(".tab").index($(this).parent()); のようにすることで取得できると思います。 全体を改めて考えてみるなら、 $(".tab li").click(function() { var ul = $(this).parent(); var idx = $(">li", ul).removeClass("select").index(this); $(this).addClass("select"); var content = ul.next(".content_wrap"); for(var i = 0; i < $(">li", ul).length; i++){ if(i == idx) content.removeClass("non"); else content.addClass("non"); content = content.next(".content_wrap"); } }); ※ 実行を確認していませんのでタイポやミスがあるかもしれません。ご参考まで。
確認できる環境にないのですが・・・ 普通にFormのresetボタンではダメなのでしょうか？ https://developer.mozilla.org/ja/docs/Web/HTML/E … スクリブトで行うにしても同様では？ https://developer.mozilla.org/ja/docs/Web/API/HT …
body = body.replace(/(利用開始日時\d\d\d\d\/\d\d\/\d\d) (\d\d:\d\d)/g, '$1\n$2');
＞javascript機能を無効にした状態で表示される情報だけしか、スクレイピング出来ないないのでしょうか？ 理論上そうなりますよね。 たとえばjavascriptでタイマーをつくっていて1から100までカウントするページがあったとき 質問者さんはどの数字が欲しいなんていえないでしょ？
こんにちは。 File APIは使ったことがありませんが・・・ 各ファイルオブジェクトが取得できていれば、name、size、typeなどは取得できるのではないでしょうか？ （実装状況は確認してはいませんが） https://developer.mozilla.org/en-US/docs/Web/API … 以下にサイズ取得の例が載っているので、ご参考にでもなれば。 https://developer.mozilla.org/ja/docs/Using_file …
こんばんは。 ご承知とは思いますが、 　$(document).ready(function() {～～ は、document.ready時に、function() {～以下の匿名関数を実行するようにイベント処理としてバインドするものです。 このバインドの処理が実行されている時には、まだ匿名関数の内容は評価されていません。また、ご提示のスクリプトでは、99個のイベント処理がセットされることになります。 (後でも述べますが、同じことをするにしても、あまりこのような方法はとられないと思います。) さて、ready状態になってからこれら99個の匿名関数が実行されることになりますが、そのときになって初めて内容が評価されます。 変数iの値はバインド終了時点で100になっていますので、匿名関数が実行される時には100として扱われ、99個の関数すべてで同じことを繰り返すことになります。 id=btn100 などの要素が存在しない場合は、jQueryではエラーを出さず、無視するようになっていますので、何も起こらないということになります。 では、どうすればよいでしょうか。 ひとつの解決方法としては、99個の関数をバインドせずにひとつの関数をバインドして、その関数の中でループさせて目的とする99個のsubmitをセットするようにすればうまくいくと思います。 ご提示のような場合は、このような方法を取るのが一般的ではないかと思います。 他にも、ご提示のようなやり方をして、匿名関数が実行される時にも変数iの値がバインド時の値のまま評価されるように、iの内容を固定化してバインドするような方法もあります。 スクリプト的には上記のようなことになりますが、実際の処理の内容を見てみると「ボタンをクリックしたらsubmitする」なので、スクリプトを用いなくてもHTMLだけで記述できる内容ですし、その方が普通で、よりスマートな解決方法になるのではないかと思います。
ANo3です。 たびたびすみません。 ANo3のスクリプト中、カンマが余分なところがありました。 　var current = slider.getCurrentSlide(),; 　　　　　　　　　　↓ 　var current = slider.getCurrentSlide(); 最後のほうのカンマが不要です。
「テキストＢ」を抽出する条件が、タグに囲まれていないテキストとなると 普通にspanとspanの間にある改行マークも拾っちゃうけどOK？ $('#A1001').contents().filter(function(){return this.nodeType === 3}).text()
こんにちは。 three.isって知りませんでしたが、面白そうですね。 ご提示のサイトで説明しているうちの、球体の部分だけ使えれば良いという意味ということで良いのでしょうか？ ちょこっと見てみただけですが、そちらのサイトでは他にもパララックスの処理とかいろいろと付け加えているようですので、対象部分だけを利用したければ、そのサイトが利用しているベースとなっているサイトのものを利用なさったほうが、必要な部分だけになっているので簡単なのではないかと思います。 ご提示のサイトでも説明されていますが、元サイトのものを基に 　・ 元素記号の代わりにパネルを質問者様が必要な内容にする 　・ 質問者様の必要な数に合わせてグリッドの数を調整 　・ レイアウトをデフォルトで球体にする を行うことで実現できると思います。 上記の内容は、デフォルト設定以外は、ご自分のサイトに合わせる際に必ず必要となる修正とも言えます。 球体以外のレイアウトが必要なければ、とりあえずはメニュー部分のHTMLを非表示にすることで実現可能だと思います。 きちんとやるなら、不要なレイアウトに関連する設定やスクリプトなどを併せて削除することで、全体をスリム化できるはずです。 質問者様の知識の程度がわかりませんが、元サイトのスクリプトのうち外部ファイル化されていないスクリプト部分に、これらの設定がまとめて記述されているようですので、比較的やりやすいのではないかと思います。 （…というか、こちらでも基本的な仕組みはthree.jsベースのライブラリを利用しているようですね） ＞その部分だけ説明されてなくてわかりません。 単純なコピペ以外はわからないという場合は、ご提示のサイトの上下に、そのような方のための一助が示されているかも。
$('ふたつの imput フォームなるものを特定するセレクター').attr('value', function(index){var vals=[4,5]; return vals[index]}); 参考 https://api.jquery.com/attr/#attr-attributeName- … もうひとつ参考 https://www.google.com/search?q=%E6%8E%A8%E6%95%B2
こんにちは。 ご提示のサイトは紹介サイトなので、使い方などを調べたければ配布元のサイトに行ってみるのが一番だと思います。 とは言っても、改訂されているみたいなので、質問者様がご利用のものが最新版なのか旧版なのかわりませんが・・・ とりあえず、現在のもののドキュメントを見てみると、 https://code.google.com/archive/p/slideshow/wiki … optionの説明の下の方に、サムネイルのオプションに関する記載があるようです。 　thumbnails1 - (boolean or Fx options object: default false) Whether to show thumbnails. デフォルトでは表示されないようなってるみたいですが、違うのでしょうか？ （私は英語がさっぱりなので、読んだだけではよくわからないのですが・・・）
当該のサイトを見る限りスクリプトでいろいろ制御してますね そうなるとスクリプト実行後の値を得るのは難しいんじゃないですか？ （ためしにjavascriptを実行させない状態でブラウザで確認すると状況がわかると思います）
<script> window.addEventListener('DOMContentLoaded', event=>{ function A(a){ return Array.prototype.slice.apply(a) } var spans = A(document.querySelectorAll('span.suuji')); var total = spans.map(s=>s.textContent).map(s=>s.replace(/\s|,/g,'')).map(s=>parseInt(s,10)).filter(n=>!isNaN(n)).reduce((p,v)=>p+v).toString().replace(/(\d)(?=(\d{3})+$)/g,'$1,'); A(document.querySelectorAll('span.total')).forEach(s=>s.textContent=total); }, false); </script>
java送信（？）したなら戻ってくるhtmlに チェックした状態をjava側で付加するのが一般的 もしそうできないなら、javaへの送信を非同期処理で行う 非同期処理ならリロードはおこらない それもいやなら、クッキーに保持しておいてロード時に適用するとか 送信がgetならsearchを解析してロード時に適用する
こんにちは jQueryを普通に２度読み込むと、後からのもので上書きされます。 それなので、その前に行った処理のうち、関数の拡張などは上書きされて機能しなくなってしまいます。 jQuryは最初に一度読み込むようにしましょう。 実際に、試したわけではないので、以下は一般論ですが・・・ 大抵のライブラリは上位のバージョンのjQueryで動作すると思います。（まれに、あるバージョンでないと動作しないものもあります） それなので、まず、それぞれを単独で設置してみて、同じjQueryのバージョンで個別には動作することを確認してみてください。 単独で動作すれば、たいていの場合はそのまま併せて設置しても問題はないはずです。 上記がうまくいかないケースとして・・・ 1）同じバージョンのjQueryでは動作しない 2）それぞれのライブラリが干渉してしまう 3）処理の対象となる要素が同じ（又は親子など）で動作が干渉してしまう などが無いとは言えません。 1）、2）は稀ではありますが起こり得ます。 この場合は、jQueryのnoConflict()を利用することで解決できることがあります。 http://api.jquery.com/jQuery.noConflict/ 3）はスクリプトの問題というよりは、利用する側の問題なので、それぞれのライブラリの動作を理解した上で干渉を避けられるように設置するしかありません。
こんにちは ご存知のように、map APIには関連要素にイベント処理をバインドする方法として、 　event.addListener() 　addDomListener() などが用意されています。 https://developers.google.com/maps/documentation … 一方で情報ウィンドウに設定されているイベントには、「closeclick」や「position_changed」などしかなく、マウスオーバーは設定されていないようです。 https://developers.google.com/maps/documentation … それなので、上記のメソッドではマウスオーバーのイベントは取得できないものと考えられます。 ご質問のようなことを実現する方法として思いつくのは、 1）マウスオーバーイベントが設定されているオブジェクトで、情報ウィンドウの代用をする。 　（Data、Marker、Polyline、Polygonなど） 2）情報ウィンドウに対応するDOMを調べて、DOM要素に直接イベントをバインドする。 　（情報ウィンドウは「gm-style-iw」クラスのdiv要素として生成されるようですので…） といったところでしょうか。 2）はマップの構造をきちんと把握しないといい加減にはできないので、とりあえず、1）の方法で試してみました。 とは言っても、吹き出し状のものをゼロから自作するのも面倒なので、超簡単にテストする材料として、同じgoogleさんのDynamic Iconsを利用させてもらいました。 https://developers.google.com/chart/image/docs/g … アイコンなので、勢いマップのマーカーを利用することになります。 （両方ともマーカーになってしまうので、なんだか紛らわしいですけど・・・） ※ あくまでも、以下のようなことが可能であることの確認として試しています。 　・情報ウィンドウ以外で情報ウィンドウもどきが表示できる 　・マウスオーバーのイベントが取得できる ※ 実際には、マーカーではなく他のクラスを利用したほうが管理しやすい気がします。 ※ 以下、試してみたサンプルです。 　どのような方法が適切かわからないですが、ご参考にでもなれば… 　・情報ウィンドウ（もどき）にマウスオーバーすると、情報ウィンドウが非表示になる。 　・マーカー（本来のマーカー）をクリックすると、情報ウィンドウ（もどき）が表示される。　 ※ スクリプト中iconのurl（ｈｔｔｐ～～）が小文字のままだとリンクに変換されてしまうので、一文字目をｈ（全角のh）に変えてありますのでご注意ください。 <div id="map" style="width:600px; height:600px;"></div> <script type="text/javascript"> var point = new google.maps.LatLng( 35.681, 139.767 ); //　マップ表示 var map = new google.maps.Map(document.getElementById("map"), { zoom: 16, center: point, mapTypeId: google.maps.MapTypeId.ROADMAP }); //　マーカー表示 var marker = new google.maps.Marker({ map:map, position:point }); //　インフォ(＝マーカーで代用)作成 var info = new google.maps.Marker({ map: map, position: point, icon: { anchor: { x:64, y:128 }, url: "ｈttp://chart.apis.google.com/chart?chst=d_fnote&chld=balloon|2|880000|h|Tokyo Station|" } }); //　イベント設定 google.maps.event.addListener(info, "mouseover", function(){ info.setVisible(false);}); google.maps.event.addListener(marker, "click", function(){ info.setVisible(true);}); </script>
こんにちは。 指定のプラグインは使ってないですが以下はどうでしょう。 HTMLは質問者様の提示したものに添っています。 不要クラスは削除したので、デザインで必要な場合は再度追加してください。 【HTML】 <div id="example"> <ul class="nav"> <li><a href="first" class="current">1st</a></li> <li><a href="second">2nd</a></li> <li><a href="third">3rd</a></li> </ul> <div class="list-wrap"> <ul id="first" > <li>1st-内容1</li> <li>1st-内容2</li> <li>1st-内容3</li> <li>1st-内容4</li> <li>1st-内容5</li> <li>1st-内容6</li> <li>1st-内容7</li> <li>1st-内容8</li> <li id="anker1">アンカーポイント1 ここに移動したい</li> <li>1st-内容10</li> </ul> <ul id="second" class="hide"> <li>2nd-内容1</li> <li>2nd-内容2</li> <li id="anker2">アンカーポイント2 ここに移動したい</li> <li>2nd-内容9</li> <li>2nd-内容10</li> </ul> <ul id="third" class="hide"> <li>3rd-内容1</li> <li>3rd-内容2</li> <li id="anker3">アンカーポイント3 ここに移動したい</li> <li>3rd-内容9</li> <li>3rd-内容10</li> </ul> </div> <!-- END List Wrap --> </div> <!-- END (Example) --> <p>スクロール確認用削除してください<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></p> 【CSS】 <style> .hide{ display: none;} .current{ background: #FF0;} </style> 【jQuery】 <script> $(function(){ var $tabs = $(".nav a"); var $content = $(".list-wrap ul"); //①基本のタブの挙動 $tabs.click(function() { var num = $tabs.index(this); $content.hide(); $content.eq(num).fadeIn(1000); $tabs.removeClass('current'); $(this).addClass('current'); return false; }); //②外部アンカーリンクから来た時の該当タブの表示関連 var p = location.hash; var hashId = p.indexOf("#"); if(0 == hashId){ $content.hide(); $(p).parent("ul").show(); var num2 = $(p).parent("ul").index(); $tabs.removeClass('current'); $tabs.eq(num2).addClass('current'); } //③該当タブを表示後に、アンカーへのスクロール var p = location.hash; var q = $(p).offset().top; var hashId = p.indexOf("#"); if(0 == hashId){ $('html,body').animate({ scrollTop: q }, 'slow'); } }); </script> --------説明--------- jQueryのところにもコメント書いてますが、 ①タブとコンテンツの基本の挙動をまず設置。プラグイン使わなくてもこれだけでタブは動きます。 ②そして、外部からのアンカーリンクのときに、該当のタブとコンテンツがアクティブになっていないとダメなので、そのための挙動。 URLから#ハッシュを取得してその親要素の.list-wrap ulの表示と何番目の.list-wrap ulかを取得して、同じ番目の.nav aもアクティブにする。 ③最後にアンカーリンクの該当箇所にスクロールします。 これで動くはずです。ちなみに①②③の順番は変えるとうまく行きません。 あともしかしたら、③はブラウザによってはうまくいかないかもしれないです。 アンカーリンクに飛ばすタイミングがブラウザによって違っているので、咬み合わないと、変な位置にアンカーしてしまうことがあります。IEとかfirefoxとか。 もしその場合は、③だけ$(function(){});から外して、javascriptの window.onload = function() {--ここに記述--};で囲ってあげたほうがよいかもしれません。 がんばってください。
スタイルシートにいくつかの致命的なミスがありfirefoxでは動作しませんね。 画像の変更はjavascriptですが、画像サイズの変更はtransitionプロパティを使用しています。 この場合は、動作を開始するセレクタの変化がないためにanimationを使うべきです。 　それが原因で動かない。 CSS Animations( https://www.w3.org/TR/css3-animations/ ) サンプル ★タブは＿に置換してあるので戻してください。 <!doctype html> <html> <head> ＿<meta charset="utf-8"> ＿<title>サンプル</title> ＿<meta name="description" content=""> ＿<meta name="author" content="ORUKA"> <style media="screen"> <!-- section{ ＿background-image:url(./images/1000.png); ＿background-size:100% auto; ＿min-height:400px; ＿animation-name: anime1; ＿animation-duration: 10s; ＿animation-timing-function: ease; ＿animation-iteration-count: infinite; } ＿@keyframes anime1 { ＿0% {background-size: 100%; height: auto;} ＿100% {background-size: 150%; height:auto;} } --> </style> </head> <body> ＿<header> ＿＿<h1 id="title">Your title</h1> ＿＿<nav> ＿＿＿<ul> ＿＿＿＿<li><a href="#">Some</a></li> ＿＿＿＿<li><a href="#">navigation</a></li> ＿＿＿＿<li><a href="#">links</a></li> ＿＿＿</ul> ＿＿</nav> ＿</header> ＿<section> ＿＿<aside> ＿＿＿<h3>Something aside</h3> ＿＿</aside> ＿＿<h2>A smaller heading</h2> ＿＿<p> ＿＿</p> ＿</section> ＿<footer> ＿＿<h3>A nice footer</h3> ＿</footer> </body> </html>
ANo1です。 反応がないようなので、ご覧になっているのかわかりませんが・・・ なさりたいことがよくわからないので、最小限で、一応動作するプリミティブなものを作ってみました。ご参考まで。 どうなさりたいのかわからないので、勝手に以下を想定 　・スライドして切り替わるタイプのスライドショー 　・自動でスタートし、循環して継続表示する 　・サムネイルをクリックすると、それに対応する画像に瞬時切り替えてストップ 　　（以後は、クリックすれば切り替わる機能になる） 　・画像数はHTMLの変更をすることで、自由に増減可能 ※ 「一定の数値で0位置に戻す」については、意味がわからないので何もしていません。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Slider Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #slider * { margin:0; padding:0; list-style-type:none; } #slider { position:relative; overflow:hidden; margin-bottom:0.5em; } #slider ul { position:absolute; top:0; left:0; } #slider ul li { float: left; } #slider, #slider img { width:200px; height:200px; } #thumbnail img { width:50px; height:50px; cursor:pointer; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery", "1");</script> <script type="text/javascript"> $(function(){ var duration = 500, pause = 2000; var box = $("#slider"), panel = $(">ul", box), slides = $(">li", panel); panel.append(slides.eq(0).clone(true)); var activeslide = 0, slides = $(">li", panel), width = slides.width(); panel.width(width * slides.length); var timer = setInterval(function(){ if(++activeslide >= slides.length){ panel.css({left:0}), activeslide = 1; } panel.animate({ left: -activeslide * width }, duration); }, duration + pause); $("#thumbnail").on("click", "img", function(evt){ clearInterval(timer); panel.stop().css({ left: -$(evt.target).index() * width }); }); }); </script> </head> <body> <div id="slider"> <ul> <li><img src="A.jpg" alt=""></li> <li><img src="B.jpg" alt=""></li> <li><img src="C.jpg" alt=""></li> <li><img src="D.jpg" alt=""></li> </ul> </div> <div id="thumbnail"> <img src="A.jpg" alt=""> <img src="B.jpg" alt=""> <img src="C.jpg" alt=""> <img src="D.jpg" alt=""> </div> </body> </html> ※ 一つの方法としての例を示すための原理的な単純なものですが、実際は、一般化してみたり、複数のスライダーを動作させたり、スタート、ストップが自由にできるようにするなどのようにして使うことになると思います。
マウスロールオーバーは実現方法が山ほどあります。 まず、あなたの実現方法をみせて下さい。
こんにちは。 ご提示のソースのコピペ（外部ファイル読込み部とHTMLの不足部分を修正）と手元のBxSlider（vr 4.1.2）で試してみましたが、ちゃんと動作するようです。 スライダーの動作、及び、navi部分のリンクの動作も確認できました。 ＞ＣＳＳで組み込んでいるhoverも無効になります。 は内容が不明なので、試していません。 どこか他に原因があるのではないでしょうか？
＞バックグラウンド動作 とは具体的にどのような動作を想定しているのでしょうか？ タイマー処理？非同期処理？
こんにちは。 回答がないみたいなので・・・ ご質問が漠としているので、回答も同様にならざるを得ないのですけれど、スクリプト利用のスライダーであれば実現は可能でしょう。 「〇〇をクリックすると△△する」というのをスクリプトで記述するには、〇〇（＝要素）のクリックイベントを利用して処理（＝△△）を実行させるような仕組みを作ります。 具体的には、HTML要素のonclick属性を利用するか、javascriptのaddEventListenerなどを利用してイベントが発生した際に（＝クリックした時に）特定の処理が実行されるようにしておくということです。 その処理の中で、表示したい状態（定位置？）になるようにスライダーをセットすればよいですね。 想定なさっている「画像スライダー」がどのような仕組かにもよりますが、例えば、overflow:hiddenの表示用ボックスの中に画像を並べたものがセットされていて、CSSのleftやmargin-leftなどを変えることで全体をスライドさせているようなタイプだとすれば・・・ 　・自動スライドなどで動いている場合は停止する 　・所定の位置（定位置？）へ移動（直接指定するかスライドして移動） のような処理を行なうことで、ご質問のような結果が得られると思います。 スライダーを自作なさっているのなら、多分、今回のようなご質問にはならないと思いますので、何らかのライブラリ等をご利用なさっているということでしょうか？ ライブラリにもいろいろ種類がありますが、「表示中のスライドを取得する」、「指定のスライドに移動する」などのメソッド（API）が用意されているタイプのものの方が、上記のような処理が可能なメソッドが備わっていると想像しますので、簡単に実現しやすいです。 そのようなメソッドが無いタイプのライブラリの場合は、内部を解析してカスタマイズすることが必要になる可能性が高いので、それなりに面倒な作業になることがあります。（きちんとやれば、もちろん実現可能です）
とりあえず#1さんと指摘通り、SOFAの指定と、 elementsの小文字化でなんとかなると思いますが ＞for (i=1;i＜5;i++){ としているのは、配列は0からはじまるので実際には B,C,Dが追加されて、存在しないar[0][4]が参照されています あまり良い書き方とは言えません。 もし勘違いされているならせめて for (i=0;i＜4;i++){ としましょう また、formで値を受け渡すのであれば valueの指定も必要になるので new Option(ar[0][i],ar[0][i])); 的な書き方をしてしてください
HTMLについてであれば、私はここをお勧めします。 >HTMLクイックリファレンス http://www.htmq.com/
直接実行するのでもよいのであれば、こんな感じでしょうか？ （とりあえず、alert表示にしてあります） var selector = "#itmlst .ptData1 a"; var elms = document.querySelectorAll(selector); var ary = Array.prototype.map.call(elms, function(node){ 　return node.href; }); alert(ary.join("\n")); ブックマークレットらしい（？）記述にするなら、 javascript:var s="#itmlst .ptData1 a";alert(Array.prototype.map.call(document.querySelectorAll(s), function(n){return n.href;}).join("\n"));
こんにちは。 ＃1様の回答の通りですし、仮にdocumentが取得できているとしても、ご質問の『38607』ってURLの最後の番号と一致するようになっているのではないでしょうか？ それなので、わざわざ文書から要素をたどって取得するよりも、URLから抜き出した方が簡単ではないでしょうか？ この方法なら、documentが取得できなくても、URLさえわかっていれば処理が可能なように思いますが・・・
#1さんの考え方で問題ないとおもいますが 折衷案として、GETで渡しているのであれば location.search からパラメータの初期値をセットすることはできると思います （多少面倒ですが）
#1です ＞httpヘッダー監視ツール等を利用しましたが ん？ 監視ツールなど使わなくても、結果が表示された時のアドレス バーにURLが表示されていませんか？ それとも、アドレス バーの内容が変わらないということでしょうか？ 変わらない場合は、ページ全体は遷移していないものと思われます。 例えばフレームを使ったページで、フレーム内だけを遷移しているとか。 この場合は、結果表示時のフレームのアドレスを調べるとか、あるいは、対象フレーム内にフォームがあるなら、そのページだけを表示した状態でsubmitするとかで調べられると思います。 フレーム以外の方法としては、Ajax（javascriptを利用）で送受信しているのかも知れませんね。 その場合は、返されるデータがHTMLとは限りませんので、そのままの形でブラウザが表示できるようになってるとは限りません。 （テキスト表示はできると思いますが・・・）
PDFのスクリプトはほとんど触ったことがありませんが、ざっと見てみると、OpenやPrintのメソッドは用意されていますし、ページ指定での出力も可能なようです。 （以下の資料は、少々古いかもですが・・・） http://www.adobe.com/jp/support/products/pdfs/ac … 一方で、ディレクトリを走査したりすることができるかどうかは不明ですので、出力の対象とする文書があらかじめわかっている場合は問題なくできるでしょうが、走査が必要な場合は何らかの工夫が必要になると思われます。 ・・・と思っていたら、バッチ処理の機能を利用することで、ある程度までは可能みたいですね。 http://www.openspc2.org/reibun/Acrobat7/javascri …
こんにちは 少し調べてみただけなので、ヒントにでもなれば程度ですが・・・ ＞一覧の商品画像が並んでいて、その画像をクリックすると、 ＞その商品の他の画像も見れて、そこには、簡単な商品情報を ＞写真の下にHTMLで記載できるようなタイプを探しています。 LightBox系のプラグインは数多くあるので種々様々ですが、画像のグループ化ができて、キャプションを付けられるものが多くあります。 画像グループの一つだけを表示して（残りは非表示）おいて、利用すれば似たようなことが実現可能と思います。 ただし、大抵の場合、キャプション部分はtitle属性やrel属性を利用していると思いますので、テキストになってしまいます。 ＞ポップアップのみ実装して、そこにスライドショーをはめ込み、 ＞下に詳細をHTML・CSSで作成していたのですが、どうしても ＞ポップアップしてからのスライドショーがうまく動かず～ この方法もありのように思います。 ポップアップの実装はライブラリを利用したのでしょうか？ LightBox系のライブラリの多くは、背景レイヤや表示レイヤなどの構成があるので、先にこれらの要素を作成しておいて、その中に表示する要素の『コピー』を作成して表示しているものが多いと思います。 それなので、最初のHTML要素にスライドショーを設定しても、コピーには反映されないということが起こっていたりしませんか？ 表示の際のイベントを取得できるAPIを用意しているプラグインを利用すれば、セット後に表示用の要素に対してスライドショーの初期設定を行うようにすれば実装可能ではないかと想像します。 ただし、この場合は画像ではなくコンテンツを表示できるタイプのプラグインである必要がありますね。 ＞詳細情報をHTML・CSSで実装できないものばかりです。 上にも述べましたが、画像専用ではなく、コンテンツを表示できるタイプのものを選べばHTML、CSSともに利用可能と思います。 ただし、要素のコピーが表示される可能性があるので、CSSの要素指定には少しだけ注意が必要かもしれません。 ＞ポップアップした写真をクリックすると、外部リンクへいき、 ＞矢印をクリックすると次の画像が見れる仕様にできるものを探しています 通常のLightBox系のものでは、対象の指定が 　<a href="one.jpg" title="Image Caption"> 　　<img src="one_thumb.jpg" alt=""> 　</a> のような構造になっているものが多いと思いますので、これに対してさらにリンクを設定しようとすると、別途工夫が必要になりそうです。 それよりも、インラインコンテンツなどを表示可能なプラグインを利用なさる方が、HTMLでのリンク設定が可能になるので、扱いは楽になりそうですね。 数は少ないかも知れませんが、コンテンツ表示でグループ化できそうなものもあるようです。 配布サイトの雰囲気を見ただけで、実際にはテストしていませんので明言できませんが、例えば・・・ http://www.no-margin-for-errors.com/projects/pre … 下の方にある「Inline content」の例を見ると、複数のコンテンツをページングしていますので、このような利用方法で実現の可能性があるのではないかと推測します。 あるいは、 http://fancybox.net/home fancyboxもコンテンツ表示が可能なプラグインですが、一番下の「manual call 」で、manual2の指定では直接に複数の画像を指定しています。 exampleは画像なのですが、対象の指定にインラインコンテンツ（またはjQuery オブジェクトやHTML要素など）を指定できるなら、同様に実現できそうに思えます。 ただし、このタイプの書式の説明がサイト内をざっと見ても見当たらなかったので、残念ながら可能なのかどうかがわかりません。 ※ 簡単に調べてみただけなので、とてもお役には立たないと思いますが、少しはご参考にでもなれば・・・
こんにちは。 ご提示のスクリプトは、条件判定をしているだけで、実質的には何も行っていないので、何ら変化はないと思います。 ＞PC用に指定しているjQueryプラグインを、 ＞スマホでは指定しない方法を知りたいです。 レスポンシブの仕組みをどのようになさっているか不明ですが、機種判定で振り分けているのなら、同様の判定でプラグインの初期設定を実行するか決めれば良いのではないでしょうか？ 　if(機種判定でPCなら){ 　　プラグインの初期設定のスクリプト 　} のような構文で可能だと思います。 このような考えで良いのなら、同じようにして、jQueryやプラグイン自体を読み込まないようにしておくほうが効率的かもしれません。 ＞640px以下はjQueryプラグインを動かさない、 ＞といった感じです。 PCではブラウザのサイズをユーザが変えられますので、機種で判定するのとは異なる動作になります。 最初にも書きましたが、レスポンシブの仕組みと考え方を合わせておいたほうが良さそうに思います。 こちらの場合は、ブラウザのサイズによるフラグを設けておいて、プラグインの処理を制御するようなことになるでしょう。 ブラウザのリサイズ時に、サイズを判定してフラグを書き替えるようにしておきます。(ブラウザのサイズ取得だけなので、わざわざフラグを設けるまでもなく、都度判定してもよいですね。) プラグインがどのように作られているか不明ですが、処理の停止／実行ができるようなAPIが用意されているなら、それを利用すればよいので簡単です。 そうでない場合は、実行を制御するのになんらかの工夫が必要かも知れません。
選択肢を取っ替え引っ替えする場合 <form name=selector> <select name=v> <option value=1> Alpha <option value=2> Brabo <option value=3> Charlie <option value=4> Delta </select> <button name=z value='1,2,3,4'>Full</button> <button name=z value='1,3'>A/C</button> <button name=z value='2,4'>B/D</button> </form> <script> window.addEventListener('DOMContentLoaded', function(){ _ function handler(ev) { _ _ ev.preventDefault(); _ _ var button = ev.target, vals = button.value.split(','); _ _ var sel = button.form.elements['v'], opts = sel.options; _ _ var indexS = sel.selectedIndex, indexN = -1; _ _ if (indexS >= 0) sel.dataset.originalIndex = indexS; _ _ var indexO = parseInt(sel.dataset.originalIndex); _ _ for (var i = 0, o; o = opts[i]; i++) { _ _ _ if (vals.filter(function(x){return x == o.value}).length > 0) { _ _ _ _ o.style.display = ''; _ _ _ _ o.removeAttribute('disabled'); _ _ _ _ if (i == indexS || i == indexO && indexN < 0) indexN = i; _ _ _ } else { _ _ _ _ o.style.display = 'none'; // IE11 miss _ _ _ _ o.setAttribute('disabled', 'disabled'); _ _ _ } _ _ } _ _ sel.selectedIndex = indexN; _ } _ Array.prototype.slice.apply(document.forms['selector'].elements['z']).forEach(function(e){ _ _ e.addEventListener('click', handler, false); _ }); }, false); </script>
基本的に外部のページの入力欄に文字をいれて検索するのはjavascriptではむり （サーバーサイドのプログラムで工夫をすればできないことはないけど いまの質問者さんにはハードルが高いと思います） 一度そのサイトで検索文字を実際にいれて検索してみて、GETで渡しているなら 同じ様なパラメータをつけて検索すればよいでしょう POSTだとjavascriptでやるのはちょっと難しいかな・・・ 場合によってはフレームを使えばできる場合もありますが、きょうび フレームの対象にならないように制限をかけているところも多いので できないものと考えた方がよいかと
#3です。 ＞サイドナビはナビと別々に固定にならないといけないので ん？ サイドナビはナビとは別個に制御していますよ。 ただし、ご質問文の説明を読む限りは、ナビの下における間はそこに表示されるようにしか読み取れなかったので、たまたま一体のように見えているだけす。 現状の内容だと、サイドナビがフッターにぶつかった時に、別に動く様が見えるかと思います。 制御の内容を変えたければ、その部分だけ修正していただければ宜しいと思います。 サイドナビの位置を調整しているのは、function内の終わりの3行です。 （実は、ナビはfixedとrelativeの切替のみで制御していますが、サイドナビはposition:absoluteで自由に位置の制御が可能なようにしてあります。）
こんな感じ？ <script> function viewtext(){ var f = document.getElementById("myfile").files[0]; if (f.type == "text/plain"){ var reader = new FileReader(); reader.readAsText(f, "utf-8"); reader.onload = function(evt){ document.getElementById("myresult").value += evt.target.result; } reader.onerror = function(evt){ alert("エラー発生："+evt.target.error.code); } } } </script> <input type="file" id="myfile"> <input type="button" onclick="viewtext()" value="ファイルを表示"> <textarea id="myresult"></textarea>
hoge.phpの戻り値が「{"hoge":"fuga"}」のようにちゃんとjsonになっていますか？ データの括りはシングルクォートはNGなのでダブルクォートをつかってください $(function() { $('#selectbox').on('change', function() { var select_val = $(this).val(); $.ajax({ url:"hoge.php", type:"post", dataType:"json", data:{"value":select_val}, success: function(msg){ console.debug(msg); }, error: function(XMLHttpRequest, textStatus, errorThrown) { console.log( textStatus); } }); }); }); hoge.php <?PHP print "{\"test\":\"".$_POST["value"]."\"}"; ?> みたいな感じでエラーがparseerrorになっているようなら 戻り値のjsonデータがおかしいのだと思います
こんにちは。 参考であげておられるサイトにも書いてありますが、そちらで利用しているスライダー（bxslider）はコンテンツをスライドできるタイプのものです。 ＞2段でスライドさせることはできますか？ 見た目に２段なだけで、スライドの１単位に画像2枚をセットで入れて、スライドさせているだけです。 極端に言ってしまえば、1枚に２つの図がある画像をスライドさせていると思えば良いかも。 それなので、実質的には１段のスライドだけれど、表示されている内容が２段に見えるようにしてスライドしているということになります。 実は、bxsliderはページ内に複数設置が可能なので、それこそ２つのものを上下にくっつけて並べて、別々にスライドさせることも可能なはずですけれど、ご質問はそういうことではなさそうですね。 ＞lightboxや画像リンクは必要ありません。 ということであれば、スライダー（bxslider)だけ設置できれば良いことになります。 設置の解説サイトは数多くありますので、検索すればいろいろヒットすると思います。 （とは言っても、一番確実な説明は配布サイトなのですが・・・） http://bxslider.com/ 設置する際に、上にも述べましたように、画像２枚を1セットになるようにすれば宜しいかと。 ＞すべてコピーして作ってみましたが動きませんでした。 正しいディレクトリの位置関係にそれぞれのファイルを置かないと、動作しない可能性があります。 lightboxは不要とのことなので、まずはbxsliderを設置してみて、動作するかを確認してみるのがよろしいでしょう。 ＞また、スライトは自動で永遠にスライドしてほしいです。 bxsliderにはいろいろなオプションが用意されていて、これらを指定することで見え方や動作を変えられるようになっています。 例えば、スライドする速度を変えたり、一度に表示されるコンテンツの単位の数（画像の数的なもの）を指定したり、縦方向にスライドさせたり・・・ 自動で繰り返し（ループして）スライドさせたいなら、AutoとCarouselあたりを指定しておけば良さそうです。 http://bxslider.com/options
A#1～#3です こんな感じでどうでしょうか？ ※ CSSも含め、全体に少しずつ修正しています。 ※ リンクの際のスクロール制御に関しては#1と同様です。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .tab_set, .tab_set * { margin: 0; padding: 0; } .tab_menu { position:relative; z-index:10; } .tab_menu > a { display: inline-block; margin-right: 2px; padding: 2px 6px; text-decoration: none; background-color: #DDD; border: 1px solid #888; border-radius: 5px 5px 0 0; } .tab_menu > a.active { background-color: #FFC; border-bottom: 1px solid #FFC; } .tab_contents { width: 600px; height: 200px; padding: 5px; border: 1px solid #888; background-color: #FFC; position:relative; top: -1px; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ var active = "active"; $(document).on("click", "a[href^='#']", function(){ return changeTab($(this).attr("href")); }); $(".tab_set > .tab_menu > a:first-child").click(); changeTab(location.hash); function changeTab(id){ var target = $(id); if(target.length == 0) return; var set = target.parent(".tab_contents").parent(".tab_set"); if(set.length == 0) return; var index = $(".tab_contents > div", set).index(target); $(".tab_menu > a", set).removeClass(active).eq(index).addClass(active); $(".tab_contents > div", set).hide().eq(index).show(); } }); </script> </head> <body> <p>◆タブのテスト（タブ内でリンク） <div class="tab_set"> <div class="tab_menu"> <a href="#tab_content1">TAB1</a> <a href="#tab_content2">TAB2</a> <a href="#tab_content3">TAB3</a> </div> <div class="tab_contents"> <div id="tab_content1">TAB1の内容 <a href="#tab_content2">TAB2へ</a></div> <div id="tab_content2">TAB2の内容 <a href="#tab_content3">TAB3へ</a></div> <div id="tab_content3">TAB3の内容 <a href="#tab_content1">TAB1へ</a></div> </div> </div> <p>◆複数タブのテスト(タブ1へリンク） <div class="tab_set"> <div class="tab_menu"> <a href="#hoge1">TAB4</a> <a href="#hoge2">TAB5</a> <a href="#hoge3">TAB6</a> </div> <div class="tab_contents"> <div id="hoge1">TAB4の内容 <a href="#tab_content1">TAB1へ</a></div> <div id="hoge2">TAB5の内容 <a href="#tab_content1">TAB1へ</a></div> <div id="hoge3">TAB6の内容 <a href="#tab_content1">TAB1へ</a></div> </div> </div> </body> </html>
ANo1です。 よくわからないけれど、バラバラに動かす場合の考え方のサンプルを作成してみました。 （他にも方法はいろいろあると思いますので一例です） ※ 『図形』がどのようなものを想定しているのか不明なので、とりあえずDIV要素で代用。 ※ ゆっくりとのことなので、ゆっくり目に設定してあります。 （インデントは全角空白にしてあります） <!DOCTYPE HTML> <html lang="ja"> <head><title>sample</title> <style type="text/css"> #hoge div { width:20px; height:20px; position:relative; left:0; background-color:#F00; } </style> </head> <body> <div id="hoge"></div> <script type="text/javascript"> (function(){ //移動用アニメーション関数 var move = function(elm, duration){ 　var endPos = 300, step = 1; //終了位置、移動時の増加ピクセル数 　var position = 0, id; 　id = setInterval(function(){ 　　position += step; 　　if(position > endPos) position = endPos; 　　elm.style.left = position + "px"; 　　if(endPos == position) clearInterval(id); 　}, duration); } //#hoge内にdiv要素を作成して、順に速度を変えて呼び出してみる var box = document.querySelector("#hoge"); var e, item = document.createElement("div"); for(var i = 0; i<30; i++){ 　e = item.cloneNode(); 　box.appendChild(e); 　move(e, 30 + i * 5); } })(); </script> </body> </html> ＃1にも書きましたが、バラバラに動かすのでなければ、#hogeを移動させればよいので、もっと簡単になりますね。
qa配列を拡張して解説文をつけておき、 正解時にそれを表示するだけでは？
こんにちは。 なんだかパッチワーク感満載ですね。 ご質問の事象の直接の原因は、hoge()が呼び出されるのはwindow.onloadで定義している最初の1回だけだからでしょう。 onload時には、（明示がないので）デフォルトとして最初のoptionが選択されていますが、value=""なのでnodataがセットされます。 前回の質問は見ていませんが、そちらの回答ではセレクトの状態が変わったら実行されるようになっていたのではないでしょうか？ 差し出がましいですが、全体的に気付いた点を・・・ 1）leanModalというライブラリを利用なさっていると推測しますが、これはjQuery利用のライブラリなので、どうせ使うなら全体をjQueryで記述したほうが簡単になることでしょう。 （特にname属性をそのまま要素名として特定に用いるのは、失敗するケースがあるので、あまりお勧めできません） 2）window.onloadが3箇所に見られますが、登録できる関数は一つなので、定義する毎に上書きれることになります。結局、実行されるのは、最後のものだけとなります。（ご提示の場合は、hogeだけが実行される） 3）＞①と②の内容は問題なく表示出来るのですが 　②は正しく動作しているとは思えません。なぜならoptionが4つあるのに対して、処理が明示されているのは3種類のみなので。 　4番目は、その前の成り行きで・・というのが意図的でしたら、正しく処理されていることになりますが… 4）処理全体として、個々のHTML要素にイベントを設定していますが、リアルタイムに処理しても、実際に使われるのはモーダルウィンドウ表示時ですので、値の反映は表示時（表示直前）にまとめて行えば充分ではないでしょうか？ 一方で、leanModalはクリックで自動実行されてしまい、直前を拾えるイベント等が用意されていないようですので、次善の考えとして、formが変わったら（change時）まとめて処理するといった方法が考えられます。 5）Modalクリック時のイベントとしてonButtonClickが設定されていますが、イベントを複数設定した場合の実行順序は保証されていなかったと記憶していますので、ご提示のスクリプトで「onButtonClickの処理が表示前に必ず実行される」とは必ずしも期待できないような気がします。（記憶が曖昧なので、自信はありませんが・・・）
画面で入力（または選択）した結果を処理するサーバー側のプログラム機能を考えた場合、お試し商品の場合は1個から4個までどれを選ぼうがSampleという変数に値1がセットされて（サーバへ）飛ぶというのは何が何だかわからないことになる、、、と考えませんか？ 私なら、とりあえずプロダウンメニューが選択操作されたらonselectでJavascript関数を呼び出し、その中で商品IDの変数とその商品の注文数の変数に値をセットするようにします。 その辺はJava（サーバ側のプログラム記述言語）ではなく、HTMLとJavascriptというブラウザ上での動きの世界です。それには最初に書いたように「目的とする機能（出力）を実現するには何を入力とし、それに対しどういう処理（何をどういう順序で）を行えばよいか」を考えて日本語でまとめることです。 参考まで。
たとえばこんな感じ <style> #lean_overlay{ position: fixed; z-index:100; top: 0px; left: 0px; height: 100%; width: 100%; background: #000; display: none; } .modal{ display: none; background: none repeat scroll 0 0 #FFC0C0; box-shadow: 0 0 4px rgba(0, 0, 0, 0.7); display: none; padding: 30px; width: 780px; } </style> <script src="js/jquery.min.js"></script> <script src="js/jquery.leanModal.min.js"></script> <script> function hoge(){ var r=$('[name=r]:checked').val(); var s=$('[name=s]').val(); var list={ "1":{"5":"text_1_5","6":"text_1_6","7":"text_1_7"} ,"2":{"5":"text_2_5","6":"text_2_6","7":"text_2_7"} ,"3":{"5":"text_3_5","7":"text_3_7"}//3の6は設定しなければnodata }; if(typeof list[r]!=="undefined" && typeof list[r][s]!=="undefined"){ return list[r][s]; }else{ return "nodata"; } } $(function() { $( 'a[rel*=leanModal]').click(function(){ $('#mymodal').html(hoge()); }) $( 'a[rel*=leanModal]').leanModal({ top: 50, // モーダルウィンドウの縦位置を指定 overlay : 0.5, // 背面の透明度 }); }); </script> <input type="radio" name="r" value="1">1<br> <input type="radio" name="r" value="2">2<br> <input type="radio" name="r" value="3">3<br> </select> <select name="s"> <option value="">-</option> <option value="5">5</option> <option value="6">6</option> <option value="7">7</option> </select> <a rel="leanModal" href="#mymodal">Modal</a> <div id="mymodal" class="modal"></div>
こんにちは。 以下でどうでしょう。 <script type="text/javascript"> $(window).scroll(function (){ 　var hogeTop = $("#hoge").offset().top; 　var scroll = $(window).scrollTop(); 　var windowHeight = $(window).height(); 　　if (scroll > hogeTop - windowHeight + 200){ 　　　alert("hoge到着"); 　　} }); </script> if()内が質問者様の言う「ID「hoge」がウインドウに表示されたら」です。 これの+200はウィンドウの下から何ピクセル出てきたらたらっていう数字なので、調整してください。 あと今回のalert指定はサンプルだと思うのですが、 このままだと当然アラートを閉じてもスクロール位置によっては、また少し動かしただけでアラートが出て邪魔になると思いますので、 それを避けたい場合はif()で調整が必要になります。 頑張ってください。
スマホの標準ブラウザでログインできませんか？ もしダメというのなら、他のスマホ用ブラウザをいろいろ入れて試してみてはどうでしょう。 軽さ重視なら「HabitBrowser」、安定度重視なら「Google chrome」や「Fireｆox」がおすすめです。
#1、2です。 ちょっと時間ができたので、試してみました。 確かに、なんかおかしいですね。 少しテストしてみましたが、#1のようにstartSlideを指定しても同様の事象がおきるようです。 表示されているslide番号を取得してみると、こちらがslideのインデックスのつもりのものがpagerのインデックスとして解釈されているようです。 勝手な想像では、1枚表示のスライダーを想定していて、複数枚表示のケースを考慮し忘れている様にも見受けられます。 （1枚表示の場合は、pagerとslideのインデックスは一致するので正常になる） randomStartの内部処理では、予想通りslide数のインデックスをランダムに発生しているようですが、表示処理の中でこれがpagerのインデックスとして使われてしまっているようです。（未確認） それなので、ご質問のケースではslide番号0では（slide1、slide2）が表示され、1～3では（slide3、slide4）が表示されてしまうようです。 しかも、2、3の場合は対応するpageがないので、位置の表示（濃くなる）がされないものと思われます。 （全部の処理を追いかけてはいないので、半分は想像ですが・・・） この結果として、slide番号はランダムに発生しているものの、page0が25%、page1が75%の割合で表示されることになってしまうようで、ご質問の内容と割合もほぼ符号しますね。 ・・・ということで、多分、作者さんが複数枚表示の場合をうっかりしたのではないかと考えたのですが・・・ 作者の以下のサンプルをよく見ると、7枚目のslideを表示するのにstartSlide：2の指定をしていますので、pagerの指定であることは意図的なようにも見受けられます。 （説明でslideとpageを使い分けているので、それならオプション項目名をstartPageとでもしておくべきだと思いますが・・・） http://bxslider.com/examples/carousel-demystifie … それはそれとして、とりあえずの対処方法としては・・・ 1）#1の方法で、startSlideにpagerのインデックス（ご質問のケースでは 0 or 1 )を指定する。 2）randomStartの処理で発生する番号を表示枚数で除して、pagerのインデックスに相当するようにしておく。 などが考えられます。 全体を解読してはいないので、少々いい加減ですが、2）の方法としては142行目あたりの 　Math.random() * slider.children.length 　　　　　↓　↓　↓ 　Math.random() * slider.children.length / slider.settings.maxSlides とする感じです。 ちょっと小手先の調整なので、根本的に修正するほうが好ましいですが、ライブラリ全部を読解しないとならないので・・・ まぁ、上記1）の方法（＝#1の回答の方法）の方が、安全と言えば安全かも。
jQuery instagramはまったく存じませんが、すでに表示できているとのことですので、javascriptの問題というより、HTML、CSSの問題ではないのでしょうか？ 想像するところ、画像がリストやdiv要素のようなブロック要素内に設定されているのではないでしょうか？ 設置例のデモで見てみると <div> 　<a href="～～"> 　　<img src="～～"> 　</a> </div> のようになっていましたので、何の指定もなければ、ご質問のように縦並びで表示されると思います。 横並びになさりたいのであれば、float:leftやdisplay:inline等を指定すればよいのではないでしょうか？（未検証です） ＜CSSで要素を横並びにする方法まとめ＞ 　https://www.halawata.net/2011/10/css-float-displ …
XML では、アンバサンド(&) は特別な意味を持つ文字なので、 エスケープしなければいけません。 <url>click.php?aid=123&amp;iid=123</url> もしエスケープが面倒なら、全体を CDATA で囲むのも手です。 <url><![CDATA[click.php?aid=123&iid=123]]></url>
ANo1です。 ANo1の最後のリンクが、オプションへのリンクではなくなってしまっていました。 正しくは 　http://bxslider.com/options でした。すみません。 訂正のついでに・・・ jQueryをご存知なら、簡単なものであれば、自作するのも大した手間ではありません。 原理としては横（または縦）に要素を並べておいて、その一部だけ見えるようにサイズを限定した枠をoverflow:hiddenでかぶせておいて、要素（群）をスライドさせるという感じです。 この（↓）図のようなイメージでしょうか。 http://www.atmarkit.co.jp/ait/articles/1304/19/n … （↑）もスライダーの作成解説のページですが、比較的簡単なものであればこんなの。 http://refirio.org/view/304?continue=1 http://www.hp-stylelink.com/news/2014/04/2014040 … 最近のCSSではアニメーションも可能になりましたので、スクリプトを使わずに実現することも可能です。 http://css.programming.jp/?p=933 http://lopan.jp/css-slideshow/ ※ 解説のサンプルは画像を対象にしたものも多いですが、要素を置き換えてあげれば、block要素をスライドすることが可能です。また、そのようになっているものも多いです。
ANo1、2です。 jQueryの場合、$(selector) で取得するのは、jQuery独特のjQuery objectというものです。 対象が単数でも複数でも同じように扱えるように考えられていて、その要素数を取得するにはlength属性を参照すればよいようになっています。 http://api.jquery.com/length/ それなので、if(td.length) では要素があること（1以上である）をチェックしていましたが、jQueryの場合は該当要素が無い場合は、メソッドが無視されるようにできているので、チェックも不要であったという意味です。 通常のjavascriptでは単数の要素と複数の要素（要素リストなど）では扱いが変わりますし、要素が無い場合に何らかの処理をしようとすると、そこでエラーとなる場合があるので、ついうっかりと、いらぬチェックを書いてしまった次第です。
こんにちは 直下のテキストだけを取得したいという意味でしょうか？ 要素から子要素を除いてあげれば、テキストだけ残るのでは？ でも、HTMLのマークアップが内容と合ってないのがそもそもの原因のような気もしますが・・・ てのは置いておいて・・・ ※ とりあえず、改行やタブ等はテキストとして残っています。 （インデントは全角空白にしてあります） var hogehoge = (function(getText){ 　return function(elm){ 　　var p = $(">p", elm); 　　return { 　　　url : $(">a", p.eq(0)).attr("href"), 　　　title : getText(p.eq(0)), 　　　content : getText(p.eq(1)) 　　} 　} })(function(elm){ 　var e = $(elm).clone(); 　while(e.children().length) e.children().eq(0).remove(); 　return e.text(); }); var res = hogehoge($("div.content").eq(0)); console.log(res);
こんにちは 非同期処理（ajaxなど）の場合、結果を利用して処理するタイミングに時間差がありますので、それに関する処理は全てコールバック（.done以下のfunction）内に記す必要があります。 また、結果を表示するのに 　document.write を用いていらっしゃいますが、想像するところHTML読込後に実行していると思いますので、document.writeを用いると新しい文書を作成することになってしまいます。（もとから表示されていたものは消えてしまう） http://blog.3streamer.net/html5-css3/document-wr … http://www.pablos.jp/digital-marketing/be-carefu … では、どうするかと言うと、方法はいろいろありますが・・ 　<div id="count"></div> のようなHTMLに表示したいのであれば（div要素は既にあるものとします）。 jQueryを利用しているなら・・・ 　$("#count").htm(cnt); のような方法で可能です。 結局、 .done(function( data ) { 　$("#count").html(data.items[0].statistics.viewCount); }) ってな感じで、とりあえずできるはずと思います。 ※ 参考サイトでは実行のタイミングを制御していないようですが、ページ読込み後に全体を実行なさるのが確実です。 具体的には全体を 　$(function(){ 　　～～～ 　}); で囲うような方法です。 http://semooh.jp/jquery/api/core/jQuery/callback/ http://api.jquery.com/jQuery/#jQuery3
こんにちは 課題とのことなので、ヒントのみですが・・・ 「リンク先へのページの訪問回数、前回訪問日時」はリンク元のページを辿った場合をカウントするのか、それとも別のルートを辿った場合も含めてカウントするかによって考え方が変わりますね。 前者であれば、リンク元のページで完結することが可能で、そのページ内でリンクがクリックされたら、時間や回数をカウントするようにしておけばよいことはわかりますよね。 一つのページ内で（複数の）リンクがクリックされるのを監視するには、以下のような方法で可能です。 document.addEventListener("click", function(evt){ 　var t = evt.target; 　if(t.nodeName == "A"){ 　　//リンクがクリックされた場合の処理 　　alert("Clicked! href=" + t.href); 　} }, false); 後者の場合は、記録を保存するのはそれぞれのページで行い、表示は「元ページ」ということになりますね。 こちらの場合は、各ページに保存を行うスクリプトが必要になりますので、スクリプトを外部ファイル化しておいて、各ページで読み込むような方法が考えられます。 読み出すのが固定のページであるなら、その部分は上の外部ファイルとは別に作成しておくのがよいでしょう。 いずれの場合でも、（複数あると思われる）ページを区別できるように、ページ毎の符号や番号を設けておいて、訪問回数などを区別できるようにしておく必要がありますね。 ＞他のページで保存された情報を引用する方法がわかりません Web Storageは同一ドメイン内では共通して利用が可能なようです。 https://developer.mozilla.org/en-US/docs/Web/API … 例えば以下のスクリプトは、記録されている内容をコンソール出力するものですので、ディレクトリを変えて試してみてください。 （ただしhttpアクセス時です。ローカルでfileアクセスなどする場合は同一ディレクトリのみのようです（未検証）） var ls = localStorage; for(var key in ls){ 　if (ls.hasOwnProperty(key)) console.log(key + " / " + ls[key]); } ところで、『訪問回数』と一口に言っても、考え方はいろいろあると思います。 　1）ページを表示すればカウントする 　2）1回/日を限度としてカウントする 　3）最後の表示から一定時間経過していたらカウントする などなど。 なぜこのようなことを考えるかというと、1）のような方法だと、リロードしたりページ間を行き来するだけでカウントが増加してしまうので、本当に『訪問回数』を数えていることになるのだろうかという疑問があるからです。 まとまりがありませんが、考える上でのヒントになれば・・・
分割回数の選択肢が10個程度なら、全部計算して表示させても性能的に問題ない気がしますが、 ご希望に沿う形で処理させるなら クライアント側 <script> function 分割を選んだ(sel) { _ var form = sel.form; _ form.elements['送信区分'].value = '分割回数を選んだ'; _ form.submit(); } </script> <form action=ほげ> <input type=text name=金額> ... <select name=分割回数 onchange='分割を選んだ(this)'> ... </select> <!-- 分割回数に従った入力欄 --> <input type=hidden name=送信区分 value=登録確認を押した> <input type=submit value=登録確認> </form> サーバー側 if ($_POST['送信区分'] == '登録確認を押した') { _ 登録処理 } if ($_POST['送信区分'] == '分割回数を選んだ') { _ 分割回数に従った入力欄を生成して画面再描画 }
・「.thread_id」 ・「thread_selected」 ・「<tr>内のhidden ID値」 など最初提示されたテーブルのサンプルに書いてませんよね ちょっとグダグダ過ぎて回答がつけられません クラスで処理したいのかダイレクトにスタイルをいじりたいのか 仕様をきっちり決めた方がよいのでは？
>（CGIで内容を更新したあとで呼び出した） >熊本県のチェックボックスに自動的にチェックが入った状態にはならないでしょうか？ CGIで熊本県にチェックを入れた状態で呼び出すのが普通です どうしてもjavascriptでというと、onload時にtextarea内の該当文字を探して マッチしたらチェックすることでしょう <script> window.onload=function(){ setcheckbox() } function setcheckbox() { var f=document.getElementById("f"); var v=f.elements["t"].value; for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ var reg=new RegExp(f[i].value); if(v.match(reg)){ f[i].checked=true; } } } } </script> <form id="f"> <input name="c[]" type="checkbox" value="熊本県">熊本県 <input name="c[]" type="checkbox" value="鹿児島県">鹿児島県 <input name="c[]" type="checkbox" value="沖縄県">沖縄県 <br> <textarea name="t" id="t" rows="6" cols="60">沖縄県熊本県</textarea><br> </form>
スクリプトでHTMLの要素を取得するには、innerHTMLかouterHTMLを使用します。 作成したdiv要素そのものを表示したいのであれば、alert(div.outerHTML);　などとすると表示できます
「30代・女性」ではありませんけれど・・・ え～～っと・・・ <div id="place1">～～</div>の部分が一つのタブを構成していて、これが複数存在するというふうになっているのでしょうか？ マップもそれに応じてname="#place2"やname="#place3"のものがあって、タブを表示し分けているということなのかな？ いずれにしろ、<area>タグのhref属性はページ内ジャンプでも機能するはずですので、これを生かしてあげればご希望のようになると思うのですが。 ということで、機能をキャンセルをしている 　return false; をやめれば動作しませんか？ 上記がうまくいかない場合は、area要素のhref属性を取得して、そのidを持つ要素に対して scrollIntoView() でも動作すると思います。 https://developer.mozilla.org/ja/docs/Web/API/El …
ANo3です。 現在は<table>で作成なさっているようですので、その方向で考えるとして・・・ ＞今どこから修正するかわからないです。 先生のおっしゃるように、「ひと月分のHTMLを返す関数」をまず作成してみるのがよろしいかと思います。 現在のものを修正するというよりも、使えるところを取り出して関数を化してみるという感じの方が分かり易いと思います。 次の部分を作成するときも、同様のやり方で、最終的には全体に（似ているけれど）別のものが出来上がるという感じでしょうか。 とは言っても、部分を作成するときにも全体のイメージがなければ、何を作るのかわかりませんね。 まずは全体像を考えることが大切です。そのうえで部分を作成する。 現在のものとは少し違いますが、例えば 　単純に、「ひと月分の7列の表のHTMLを作成する」 ようなものを考えたとします。 ANo3にも書きましたが、それを12回呼び出せば1年分になります。この12回呼び出す部分も関数化しておけば、それは「1年分を計算する関数」になるので、違う年を計算したければそれを呼び出せば良い。 ということになりそうですね。 例があるほうが多少はわかりやすいかと、「ひと月分を単純に返す関数」を作ってみました。 （計算方法は異なるとは思いますが、一つのサンプルとして・・・） ※ インデントを全角空白に置き換えてありますのでご注意。 <!DOCTYPE HTML> <html lang="ja"> <head><title>sample</title> </head> <body> <div id="contorol"></div> <div id="calendar"></div> <script type="text/javascript"> var Calendar = (function(){ 　var calendar = { 　　year: 2016, 　　getYear: function(){ return this.year; }, 　　setYear: function(yy){ this.year = yy; } 　} 　var monthly = function(mm){ 　　var yy = calendar.year; 　　var dayCount = 1 - (new Date(yy, mm-1)).getDay(); 　　var dayMax = (new Date(yy, mm, 0)).getDate(); 　　var html = "<table class='month'><caption>" + mm + "月</caption>"; 　　html += "<thead><tr><td>" + "日月火水木金土".split("").join("</td><td>"); 　　html += "</td></tr></thead><tbody>"; 　　while(dayCount <= dayMax){ 　　　html += "<tr>"; 　　　for(var i = 0; i < 7; i++){ 　　　　var holiday = isHoliday(yy, dayCount); 　　　　holiday = holiday?(" class='holiday' title='" + holiday + "'"):""; 　　　　html += "<td" + holiday + ">"; 　　　　html +=　(dayCount<1 || dayMax<dayCount?"":dayCount) + "</td>"; 　　　　dayCount++; 　　　} 　　　html += "</tr>"; 　　} 　　return html + "</tbody></table>"; 　} 　var isHoliday = function(yy, mm){ 　　return false; 　} //とりあえずの出力制御（1年分） 　var calc = function(yy){ 　　calendar.year = yy; 　　for(var i=1; i<=12; i++){ 　　　document.querySelector("#calendar").insertAdjacentHTML("beforeend",　monthly(i)); 　　} 　} 　return calc; })(); Calendar(2016); </script> </body> </html> 実行してみると・・・ 一応出力されるけれど、見にくいし色もついてないしレイアウトもされてない・・・なんじゃこりゃ～～！？？ でも、よく見てみれば『ひと月分のHTMLを返す関数』（monthlyの部分）としては機能してますよね？ そうは言うけど、計算できたって、こんなのじゃ・・・ 試しに、head内に以下を追記してみてください。 <style type="text/css"> table.month { border:1px solid gray; display:inline-block; vertical-align:top; margin:5px; } table.month td { text-align:center; font-weight: bold; } table.month td:first-child { color: red; } table.month td:last-child { color: blue; } </style> とりあえずのものですが、少しはそれらしくなったと思います。 機能ごとにスクリプトを関数化しておく方が、あとでその部分を修正したり入れ替えたりするのに便利だろうと考えてのことです。 例えば休日の計算を独立させておくと、そこだけを入れ替えれば日本以外の国でも使えるようになるだろうとか・・・ 上のレイアウトの例はスクリプトではなくCSSでの例ですが、見え方を変えるときはこの部分を別のセットに変えれば良い。 といった感じです。（現在のHTML文書の考え方もそうなっています。） 休日の情報や年を指定するためのＵＩなどは、上の例では省いていますし、1年分を計算する部分もテスト用のとりあえずのものです。 あくまでも「ひと月分を計算する」がメインなので・・・ （後を考えて、少し余分なコードがあちこちに入っていますが、気にしないように（笑）） ・・・ってな感じで、順次作成してゆくと、機能ごとに作成・テストができるので考えやすいのではなかろうかと思います。
あくまで以下私見で申し上げます たしかにnode.jsは局所的にブームになっており、将来性もあるとは言われていますが クライアントサイドのjavascriptとはやはり性質がちがうのもあり 他のプログラムより仕様が固まっていないのと、ライブラリが少ないのが課題ですね 一昔前のプログラマがperlガチガチなのと、ちょっと前のプログラマがphpで粘っているのにくわえ PythonとRubyがあって、node.jsは隙間をうめるわけでもなく、おきかえられるわけでもなく 抵抗勢力が根強くいるので伸び悩んでいると思いますけどね。 もちろんシフトに成功した人たちは、快適にnode.jsを謳歌しているのだろうと 羨ましく思いますが・・・ 個人的にはnode.jsへ移る勇気がないのでお勧めしませんし、フォローもできませんが やさしい先輩がnode.jsの素晴らしい世界を教えてくれるかもしれません。
node.js で JavaScript を実行する場合、 専用ドライバを導入しましょう。 https://github.com/felixge/node-mysql#introduction Java VM で JavaScript を実行する場合、 jrunscript から JDBC 経由で。 https://www.google.co.jp/search?q=jrunscript+mysql Windows で JavaScript を実行する場合、 Windows Scripting Host から ODBC 経由で。 https://dev.mysql.com/doc/connector-odbc/en/conn … Web ブラウザで JavaScript を実行する場合、 無理。 Flash とか Applet とか ActiveX とかは、すでに時代遅れなので諦めましょう。
$("#en").animate({ houkou[1] : y+"px" },1500); を、 var v = {}; v[houkou[1]] = y+"px"; $("#en").animate(v,1500); っとすると動いたりしませんか？ オブジェクトの初期化時のプロパティ名にはこのような形での変数の指定はできません。 ES6ならば可能ですが、それはまた別の話ですので、お調べください。
試してないけどこんな感じ？ $('div>ul>li>a').each(function(){ $(this).closest('div').html( '<a href="' + this.getAttribute('href') + '">' $(this).closest('ul').html() + '</a>' ); });
切り分けした方がいい ・ボタンをおしたらサイズや色が変わるのか ・ボタンを押さなくても最初からサイズや色を変えていいのか？ また、デザイン部分はCSSで処理することをお勧めします スタイルシートについて一度勉強してみてください <style> h5{margin:0px;} form{margin:0px;} div#viewspace{font-size:50px;color:#ff0000;} </style> <script> function ryouri(f){ var list={ "卵":{"焼く":"目玉焼き<br>補足....","ゆでる":"ゆで卵<br>補足...."}, "じゃがいも":{"焼く":"焼きイモ<br>補足...","蒸す":"ふかしイモ<br>補足...."}, "にんじん":{"焼く":"にんじんソテー<br>補足...."} }; var zairyo=f.elements["zairyo"].value; var chouri=f.elements["chouri"].value; var text=""; if(typeof(list[zairyo])=="undefined" || typeof(list[zairyo][chouri])=="undefined"){ text="未設定"; }else{ text=list[zairyo][chouri]; } document.getElementById("viewspace").innerHTML=text; return false; } function reset_viewspace(){ document.getElementById("viewspace").innerHTML=""; } </script> <h5>材料<h5> <form onsubmit="return ryouri(this);" onreset="reset_viewspace();"> <select name="zairyo"> <option value="">== 材料 ==</option> <option value="卵">卵</option> <option value="じゃがいも">じゃがいも</option> <option value="にんじん">にんじん</option> </select><br> <select name="chouri"> <option value="">== 調理 ==</option> <option value="焼く">焼く</option> <option value="ゆでる">ゆでる</option> <option value="蒸す">蒸す</option> </select><br> <input type="submit" name="search" value=" 検索" /> <input type="reset" value="リセット"> </form> <div id="viewspace">結果</div>
ANo1です。 apiに用意されているRendererのアイコンをそのまま使えばドラッグ＆ドロップに対応していましたね。 忘れてました。(^_^;) ご質問の、mapが再表示される理由は、セレクトを変えた時のイベント処理にあると思われます。 その処理の中では、 　1）マップの定義 　2）ルートの検索 　3）画面への表示 を行うようになっていますので、セレクトを変えるたびに1）のマップの（再）定義が行われ地図が描き直されることになります。 回避したければ、拡大・縮小の処理と同じように、2）、3）の処理だけを行うようにすればよいでしょう。 ただし、表示する内容が新しい地図（まだ読み込まれていない部分）であると、表示のために読み込みますので、再表示と似たようなことは起こります。 （地図をドラッグすると新しい部分が読み込まれるのと同じ状態です） また、1）の処理を事前に行っておく必要があるのは、もちろんです。 （マップの定義は一度行えばＯＫです） rendererOptionsのpreserveViewportについては、以下のＵＲＬに説明があります。 trueに設定すると地図の描き直しは行われないようです。 (デフォルトのままでよければ、わざわざ設定しなくても良いはず） https://developers.google.com/maps/documentation … map apiに関しては上記サイトに詳細な説明がありますので、わからないことはそこで調べるのが一番です。（それ以上の情報は、通常では得られませんので）
>管理まで質問したつもりはありませんので、批判は結構です。 別に批判したつもりはないが、まぁあとで苦労するのは自分なのでこれ以上なにもいうまい。 ＞var id = $('.id').val(); var id = $(this).find('.id').val(); としてみれば？
こんにちは 通常のスクリプトは質問者様がお考えの通りシークエンシャルに処理されますが、ajaxのような非同期処理はそうではありません。 （だから非同期といわれるのでしょう） ＞処理が終わってから次の処理とループで回す方法はないのでしょうか？ ２通りの方法が考えられます。 一つ目は他の方がすでに回答なさっているように、非同期処理を行わないこと（＝同期処理で処理すること）。 同期処理にすれば、シークエンシャルに処理されますので、通常のループの記法のままで順次処理がなされます。 もう一つは非同期処理を活かしてループと同じように処理できるようにする方法。 非同期の場合は、前述のようにシークエンシャルな処理は期待できませんので、通常のfor～～のようなループではうまくいきません。 非同期処理にはコールバックが設定されていると思いますが、これは非同期の処理が終わった時に続けて実行される内容を指定できるものです。 ですので、『カウンタを+1して、次のループを実行する』という関数を用意しておいて、これをコールバックとして呼び出すようにすれば、非同期処理でも順に処理することが可能となります。 （非同期処理を1ループ内で複数行っている場合は、制御がもう少し複雑になりますが、要領は同じです） 両者の違いは、同期処理で行う場合は待ち時間（ajaxの場合はレスポンスを待つ時間）の間もブラウザがスクリプトで拘束されるので、操作等を受け付けないのに対して、非同期処理の場合は待ち時間の間も別の操作や処理が可能になるという点でしょう。 Ｔｏｔａｌの処理時間については、ほとんがど待ち時間で決まってしまうので、単純なケースではどちらも同じと考えられるでしょう。 一方で、複数の非同期処理を並列で実行しているような場合は、全部を同期処理で処理するのに比して、速くなることが期待できます。
<!DOCTYPE html> <html lang="ja"> <head> <title>サンプル</title> </head> <body> <h1>サンプル</h1> <style type="text/css"> textarea { resize: none; } </style> <script> function ryouri(f){ var list={ "卵":{"焼く":"目玉焼き","ゆでる":"ゆで卵"}, "じゃがいも":{"焼く":"焼きイモ","蒸す":"ふかしイモ"}, "にんじん":{} }; var iro={ "目玉焼き":"red", "ゆで卵":"lime", "焼きイモ":"green", "ふかしイモ":"blue" }; var zairyo=f.elements["zairyo"].value; var chouri=f.elements["chouri"].value; var txt=""; if(typeof(list[zairyo])=="undefined" || typeof(list[zairyo][chouri])=="undefined"){ txt="未設定"; }else{ txt=list[zairyo][chouri]; } var obj=document.getElementsByName("waku")[0]; if(typeof(iro[txt])=="undefined") { obj.style.color="black"; } else { obj.style.color=iro[txt]; } obj.value="味付けは・・・\n"+txt; return false; } </script> <form onsubmit="return ryouri(this);"> <select name="zairyo"> <option value="">== 材料 ==</option> <option value="卵">卵</option> <option value="じゃがいも">じゃがいも</option> <option value="にんじん">にんじん</option> </select><br><br> <select name="chouri"> <option value="">== 調理 ==</option> <option value="焼く">焼く</option> <option value="ゆでる">ゆでる</option> <option value="蒸す">蒸す</option> </select><br><br> <input type="submit" name="search" value=" 検索" /> <input type="reset" value="リセット"> <br> <textarea cols="16" rows="2" name="waku" readonly></textarea> </form> </body> </html>
alert = Function(); Re: stolichnaya さん
たとえばこんな感じ あらかじめリストを作っておくとよい またnameには英数字のみを指定した方がよい <script> function ryouri(f){ var list={ "卵":{"焼く":"目玉焼き","ゆでる":"ゆで卵"}, "じゃがいも":{"焼く":"焼きイモ","蒸す":"ふかしイモ"}, "にんじん":{} }; var zairyo=f.elements["zairyo"].value; var chouri=f.elements["chouri"].value; var text=""; if(typeof(list[zairyo])=="undefined" || typeof(list[zairyo][chouri])=="undefined"){ text="未設定"; }else{ text=list[zairyo][chouri]; } document.getElementById("viewspace").innerHTML=text; return false; } </script> <form onsubmit="return ryouri(this);"> <select name="zairyo"> <option value="">== 材料 ==</option> <option value="卵">卵</option> <option value="じゃがいも">じゃがいも</option> <option value="にんじん">にんじん</option> </select> <select name="chouri"> <option value="">== 調理 ==</option> <option value="焼く">焼く</option> <option value="ゆでる">ゆでる</option> <option value="蒸す">蒸す</option> </select> <input type="submit" name="search" value=" 検索" /> <input type="reset" value="リセット"> </form> <div id="viewspace">ここに表示</div>
検索するのが決まった文字列で良いなら、以下で如何でしょう。 var d = "桑子真帆アナ「ブラタモリ」降板、報道キャスターへ"; if(d.indexOf("報道キャスター") != -1){ alert("Yes"); }
以下でどうですか？ <!DOCTYPE html> <html> <head> <title>スクロール</title> <meta charset="utf-8" /> <script type="text/javascript"> <!-- var msg = '文字のスクロールテスト　文字のスクロールテスト'; // メッセージ内容 var speed = 500; // スピード（ミリ秒） var fluency = 2; // なめらかさ（文字数） var swc = 0; function textscroll(){ msg = msg.substring(fluency, msg.length) + msg.substring(0, fluency); // テキストフィールドにデータを渡す処理 document.form1.scroll.value = msg; if(swc) setTimeout("textscroll()", speed); } function start() { if(swc) { swc = 0; document.form1.buton.value = "開始"; } else { swc = 1; textscroll(); document.form1.buton.value = "停止"; } } // --> </script> </head> <body> <form name="form1" action="#"> <input type="text" name="scroll" size="30"> <input type="button" name="buton" value="開始" onclick="start()"> </form> </body> </html>
onbeforeunload の使い方って何をみて学習しました？ もともと命題のような使い方は想定されていないと思いますが・・・
サンプルでは、「配列」の中に「連想配列」を設定している事になります。 連想配列の「キー：値」はオブジェクトなので、[object Object], [object Object]は当然の結果です。 求められている結果に近いものを表示するサンプルを作成してみました。 一般的に連想配列をfor文で使う場合、以下のように「for(キー in 連想配列)」といった使い方になります。 参考にしてみてください。 <script type ="text/javascript"> var list = [{id:"3", name:"aaa"},{id:"2", name:"bbb"}]; var ret = ""; for(num=0; num < list.length; num++){ ret += "["; for(key in list[num]){ ret += list[num][key] + ","; } ret += "]"; } alert(ret); </script>
＞ラジオボタンの値が取得できておらず、undefinedとなってしまいます。 前回質問の回答#1で対応していますよ
MixltUPって知らないので、ググってみただけですが、 ＞調べてみましたがどこも説明がなく、～～ 配布サイトに説明があるような気がしますが・・・ （英語が苦手なので、違ってたらすみません） https://mixitup.kunkalabs.com/learn/tutorial/adv … 質問者様がなさりたいことは、下の方の「Multi-Dimensional Filtering」に近いのでしょうか？ （andやorのみなら、対応している雰囲気ですが） 混在の場合は、フィルタリング部分を自作して返すようなことが書いてあるみたいですね。 それぞれにデモがあるようなので、内容をご確認ください。 （私の環境ではデモが見られないので、内容の確認ができませんでしたが・・・） ※ よくわからないままで回答していて、大変申し訳けありませんが、何かのお役にでも立てば・・
ANo1です。 ANo1の最後にあげたスクリプトでのサンプルを作成してみました。 実際の実装がどうなっているのかまったくわからないため、かなりいい加減ですので、あくまでも考え方のヒントとしてご利用ください。 ※ 動作を分かり易くするために、両方とも表示していますが、 　 上段のものは実際には見せない想定です。 ※ 下段の画像タイプのものをクリックすると、上段の 　　ラジオボタン（実際には見せない）が連動します。 ※ キー操作等は無視していますが、実際にはキー操作にも 　　対応する必要があるかも。 <!DOCTYPE HTML> <html lang="ja"> <head><title>sample</title> <style type="text/css"> #hoge input { margin-left:2em; } #hoge_clone img { width:20px; height:20px; margin-left:2em; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> var setLinkage = (function(){ var link = function(n, r, s){ this.send = $(s + " img." + n); this.recv = $(r + " input[name='" + n + "']"); } link.prototype.handler = function(e){ var elm = $(e.target); var idx = this.send.index(elm); this.send.each(function(){ this.src = this.dataset["off"]; }); elm.attr("src", elm.attr("data-on")); this.recv.eq(idx).click(); } var setter = function(name, receive, send){ var obj = new link(name, receive, send); $(send).on("click", "img." + name, (function(o){ return function(e){ o.handler(e); } })(obj)); return obj; } return setter; })(); </script> </head> <body> <article> <h4>ライブラリから参照する要素</h4> <form id="hoge"> <p>カテゴリ-1<br /> <input type="radio" name="category1" value="c1-1" />要素1-1 <input type="radio" name="category1" value="c1-2" />要素1-2 <input type="radio" name="category1" value="c1-3" />要素1-3 </p> <p>カテゴリ-2<br /> <input type="radio" name="category2" value="c2-1" />要素2-1 <input type="radio" name="category2" value="c2-2" />要素2-2 </p> </form> </article> <hr> <aside> <h4>実際に見せる(操作する）疑似ラジオボタン</h4> <div id="hoge_clone"> <p>カテゴリ-1<br /> <img class="category1" src="A.jpg" data-on="B.jpg" data-off="A.jpg" />要素1-1 <img class="category1" src="C.jpg" data-on="D.jpg" data-off="C.jpg" />要素1-2 <img class="category1" src="E.jpg" data-on="F.jpg" data-off="E.jpg" />要素1-2 </p> <p>カテゴリ-2<br /> <img class="category2" src="B.jpg" data-on="C.jpg" data-off="B.jpg" />要素2-1 <img class="category2" src="D.jpg" data-on="E.jpg" data-off="D.jpg" />要素2-2 </p> </div> </aside> <script type="text/javascript"> //連動を設定 setLinkage("category1", "#hoge", "#hoge_clone"); setLinkage("category2", "#hoge", "#hoge_clone"); </script> </body> </html>
えーと最初にC、mouseoverでB、mouseoutでAという仕様でOK？ <script> var events=["mouseover","mouseout"]; for(var i=0;i<events.length;i++){ try{ document.addEventListener (events[i],function(e){myfunc(e)},true); }catch(e){ document.attachEvent('on'+events[i],function(e){myfunc(e)}); } } function myfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="IMG" && t.parentNode.id=="bt"){ if(e.type=="mouseover") t.src="B.jpg"; if(e.type=="mouseout") t.src="A.jpg"; } } window.onload=function(){ document.getElementById("bt").getElementsByTagName("img")[0].src="C.jpg"; } </script> <div id="bt"><img src="A.jpg"></div>
こんにちは。 プラグイン使わなくても簡単なjQueryだけでできますよ。 以下参考まで。ソースはご自身のものに適宜合わせてください。jQuery本体は別途読み込んでくださいね。 【HTML】.prlxのところに視差背景を入れます。 <section class="a"> <h2>あいうえお</h2> <p>あいうえおあいうえお</p> </section> <div class="prlx"></div> <section class="b"> <h2>あいうえお</h2> <p>あいうえおあいうえお</p> </section> 【CSS】 .a, .b, .prlx{ width: 100%; height: 400px;/*適宜*/ } .prlx{ background: url("背景画像のURL") no-repeat; background-size: cover;/*これで背景画像を100％にします*/ } 【jQuery】 <script> $(function() { $(window).scroll(function(){ var y = $(this).scrollTop(); $('.prlx').css('background-position', '50% ' + parseInt( -y / 3 + 0 ) + 'px'); }); }); </script> これで.prlxの背景に視差効果が出ます。 説明として、 背景画像を100％にするのはCSSのbackground-size:coverで。 それで、背景画像を動かすのはjQueryで、ということになります。 jQueryはスクロールに合わせて.prlxのbackground-positionを動かすということをします。 まずX軸。50%というのはcenterということです。今回はCSSでbackground-sizeをcoverにしているので、ここの数字は0%でも100%でも同じことになります。 そして、Y軸です。ここが動的なものとなっていきます。 今回は-y / 3 + 0としています。お好みで変更してください。 /3は標準のスクロールの速度に対して÷3のスピードで動くということです。このスピードを変えたいときは個々の数字を変えてください。 また-ｙの-（マイナス）は背景画像が動く方向です。マイナスをつけると上に動きます。マイナスがないと下向きに動きます。 （といってもスクロールして画面自体が上にあがっていっているのでどちらも上に上がっているように見えますが。） 最後に+ 0は.prlxの領域上部からのオフセット値です。今回は背景ということで0にしていますが、たとえば背景でなく上部に少し空間も持たせたい時や、.prlx自体の位置が縦長ページ下部だった場合などにオフセットさせておく必要が出てきます。 簡単に書きましたが、結構ネットにもプラグインなしのこの方法についていろいろな方がブログで説明してくれているのでそういうのも見てみてください。 頑張ってください。
なるほど、IEでは「remove()」は使えないんですね。 Chromeを使っていたので・・・。 一応これで動作します。 function removeToTable() { var $tableObject = document.getElementById( "sampleTable" ); var elms = document.getElementsByName("delchk"); var len = elms.length; for(var i = len - 1; i >= 0; i--) { if(elms[i].checked) { $tableObject.removeChild(document.getElementById("addTbl" + elms[i].id)); } } }
あっ、済みません t_fumiaki　です。 ULをDIVで囲うのをコピーし忘れました。 <div id="content">　←忘れた！！重要 <ul> <li><a href="11.gif"><img src="1.gif" alt="背景1" /></a></li> <li><a href="12.gif"><img src="2.gif" alt="背景2" /></a></li> <li><a href="13.gif"><img src="3.gif" alt="背景3" /></a></li> <li><a href="14.gif"><img src="4.gif" alt="背景4" /></a></li> </ul> </div>　←忘れた！！ 動作確認済みの処理です。 マウスオン画像で固定されます。 ul li img　などが１意に出来なくて他と競合する場合はscriptのその箇所に#contentを付加して下さい。 （#content ul li imgの様に）
画像がボタンごとに違うとなると、データ管理がちょっと面倒ですね 本来の使い方と少し違いますが、lowsrcを使う手はあります。 こんな感じ <script> function myChange(obj){ var src=obj.lowsrc; obj.lowsrc=obj.src; obj.src=src; } </script> <img src="1.jpg" lowsrc="2.jpg" onclick="myChange(this)"> <img src="3.jpg" lowsrc="4.jpg" onclick="myChange(this)">
参考にしている解説ページでは画像をクリックするとなんという名前のjavascriptが呼び出されますか？ また、クリックされた際に表示する画像の枚数とファイル名は何処でどうやって決められて（生成されて）いますか？ まず、この二つをよく理解しましょう。 その上で、画像を1画面に2か所設け、それぞれに異なる画像を表示させようとする場合、参考にしている解説ページにあるjavascriptの何をどう変えればよいと考えたかを整理し理解しましょう。 プログラムは思った通りに動くのではなく、作った通りに動きます。 今作って質問に示されたjavascriptは作った通りに動いているはずです。 一方の画像だけを続けてクリックした時、両方の画像を交互にクリックした時、今の記述だとどう動きますか？
<form name=quiz> <input name=q><button type=submit>回答</button> </form> var 間違えた回数 = 0; document.forms['quiz'].addEventListener('submit', function(ev) { _ if (判定(ev.elements['q'].value) == 正解) { _ _ 告知('見所のある奴じゃ'); _ _ 次を出題(); _ _ 間違えた回数 = 0; _ } else if (間違えた回数 < 3) { _ _ 間違えた回数++; _ _ 告知('情けなや'); _ } else { _ _ 告知('お前の力はそんなものか'); _ _ 次を出題(); _ _ 間違えた回数 = 0; _ } }, false);
何回も済みません。 <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/ libs/jquerymobile/1.4.2/jquery.mobile.min.css" /> これも入れないといけないのですが、同じ様に外部参照をやめて、自分のcssへ取り込めませんか？ これがソースの全てなら外部リンクした物が読めないのが濃厚なんです・・・。 一部分だけなら、cssプロパティが競合している可能性も有ります。
勘違いだったらすみません。 これってjavascriptの質問というよりhtmlの質問ですよね？ 4列１行→4列2行 trで列をつくってtdでセルをつくればよいかと たとえばこう <TABLE> <TR> <TD colspan="4"><IMG src="001_l.jpg" name="myBigImage"></TD> </TR> <TR> <TD><A href="#" onmouseover="myChgPic('001_l.jpg')"><IMG src="001_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('002_l.jpg')"><IMG src="002_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('003_l.jpg')"><IMG src="003_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('004_l.jpg')"><IMG src="004_s.jpg"></A></TD> </TR> <TR> <TD><A href="#" onmouseover="myChgPic('005_l.jpg')"><IMG src="005_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('006_l.jpg')"><IMG src="006_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('007_l.jpg')"><IMG src="007_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('008_l.jpg')"><IMG src="008_s.jpg"></A></TD> </TR> </TABLE> また上の画像をしたにいどうするならこう <TABLE> <TR> <TD><A href="#" onmouseover="myChgPic('001_l.jpg')"><IMG src="001_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('002_l.jpg')"><IMG src="002_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('003_l.jpg')"><IMG src="003_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('004_l.jpg')"><IMG src="004_s.jpg"></A></TD> </TR> <TR> <TD><A href="#" onmouseover="myChgPic('005_l.jpg')"><IMG src="005_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('006_l.jpg')"><IMG src="006_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('007_l.jpg')"><IMG src="007_s.jpg"></A></TD> <TD><A href="#" onmouseover="myChgPic('008_l.jpg')"><IMG src="008_s.jpg"></A></TD> </TR> <TR> <TD colspan="4"><IMG src="001_l.jpg" name="myBigImage"></TD> </TR> </TABLE>
ANo1、2です。 ＞問題なく両方問題なく作動しますでしょうか？ 当方の環境では、両方とも動作しています。 回答のソースで動作しないとのことですが、そのままで試していますか？ （とはいっても、src属性などが省略表示されてしまうので、修復が必要でしたが・・・） 念のため、コピペ可能なようにして再掲しますので、そのままコピペで試してみてください。 （大勢に影響ないところの不備を少しだけ訂正してあります。） ※ 以下のソースをコピペの上、scriptタグのsrc属性とlinkタグのhref属性のURLの最初の一文字を「ｈ（全角のｈ）」→「h（半角英数のh）」に修正してから、試してみてください。 　（修正個所は、全部で５箇所あります） <!DOCTYPE HTML> <html lang="ja"> <head><title>test</title> <style type="text/css"> #navre a { background: #6C0; display: block; float: left; margin: 0 1px 0 0; padding: 8px 30px; text-decoration: none; } #navre a:hover { background: #DC0; } @media screen and (max-width: 740px) { #navre a { float: none; margin: 0 0 1px 0; width: 100%; } } #grid-content{ margin-top: 10px; } #grid-content div{ width: 200px; border: 1px solid gray; margin: 5px; padding: 5px; } #grid-content div h3{ margin:0 0 5px; } #grid-content div p{ margin:0; padding:0; } </style> <script type="text/javascript" src="ｈttp://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <link rel="stylesheet" type="text/css" href="ｈttp://studio-benkei.com/wp-content/themes/sb-theme/common/sample/css/jquery.fs.naver.css"/> <script type="text/javascript" src="ｈttp://studio-benkei.com/wp-content/themes/sb-theme/common/sample/js/jquery.fs.naver.min.js"></script> <script type="text/javascript" src="ｈttp://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script> <script type="text/javascript" src="ｈttp://blog.xlune.com/2009/09/vgrid/js/jquery.vgrid.min.js"></script> <script type="text/javascript"> $(function(){ $("#navre").naver(); $("#grid-content").vgrid({ }); }); </script> </head> <body> <div style="overflow: hidden;"> <nav id="navre"> <a href="#">home</a> <a href="#">piyo1</a> <a href="#">piyo2</a> <a href="#">piyo3</a> </nav> </div> <div id="grid-content"> <div><h3>hoge1</h3> <p>fugafugafuga</p> </div> <div><h3>hoge2</h3> <p>fugafugafuga</p> <p>fugafugafuga</p> </div> <div><h3>hoge3</h3> <p>fugafugafuga</p> </div> <div><h3>hoge4</h3> <p>fugafugafuga</p> <p>fugafugafuga</p> <p>fugafugafuga</p> <p>fugafugafuga</p> </div> <div><h3>hoge5</h3> <p>fugafugafuga</p> <p>fugafugafuga</p> </div> </div> </body> </html>
> hoverでハイライトするところまではいきますが、クリックしたことにはなりませんでした。。。 クリックは、その要素に対しclick()すれば良いのではないでしょうか？ var menu = document.getElementById('elCate23632') menu.className = 'hover'; menu.click();
> Google chromeのConsoleで試してみました。 > 画像のとおりやはり変化はありませんでした。。。 こちらも同じブラウザですが動作していますよ。 function test(){……} をコンソールで入力し、定義した後に test() [Enter] と入力して、functionの実行をさせていますか？ ご提示の画像だと、functionの定義しかしていない様に見えます。
getElementsByClassNameが返すのは単独の要素ではなくnodelistです。 https://developer.mozilla.org/ja/docs/Web/API/Do … クリックする対象を指定する必要がありますので、 getElementsByClassName("hoge")[0]などとしてください。
こんにちは。 こちらのスライダーはつかった事無いですが、別のプラグインスライダーで、 「スライダーを読み込みが終わるまでの間、非表示にする」という対応をしたことがあります。 ①まずスライダーを適当なdivで囲む（※下記.slider_box） <div class="slider_box"> <div id="slider1"> 省略 </div> </div> ②cssでslider_boxを非表示にする。 .slider_box{ visibility:hidden; max-height: 300px; /*max-heightはスライダーの高さです。リキッドだと思うのでmax-heightで指定 サイズ固定なら普通にheight指定でも良いです 高さを指定しないと、画像が縦に並ぶ状態で領域が縦長になり、読み込みが終わるまでに、非表示のままカクンとなると思います。*/ } ③HTMLのheadの最後あたりにjqueryで 「画像読み込み後に②のvisibilityをvisibleに変える」指示を書く。 書く場所は必ずここでなくても良いのですが、②のcss読み込みよりは後に置いてください。 またjqueryは$(function(){}とか$(document).readyとかで書くと実行タイミングが画像読み込み前になるので必ず下記の$(window).load(function(){}とかjavascriptのwindow.onloadなどで囲むようにしてください。 <script type="text/javascript"> $(window).load(function(){ $(".slider_box").css({ "visibility" : "visible"}); }); </script> これで、画像読み込みが終わるまではスライダー自体が非表示（visibility:hidden;）になり、 読み込みが終わり次第表示（visibility:visible;）されると思います。 また非表示とは言ってもdisplay:noneだとうまく行きません。スライダー適用のHTML自体がないものとして扱われるため。なので、ここはvisibilityを利用します。 あとは好みで、非表示の間は読込中のローダーgif（くるくる回るやつ）とかを表示させても良いと思います。 頑張ってください。
非同期処理の場合rsを得る前に関数が終わってしまう 同期処理でreadystateをチェックしてみて function html_get(url){ var request = new XMLHttpRequest(); var rs = "bad!"; var async=false;//async=trueにすると非同期 request.open("GET", url ,async); request.onreadystatechange=function(){ if((request.readyState == 4 ) && (request.status == 200 )){ rs = request.responseText; } } request.send(null); return rs; } ただし全てのブラウザがXMLHttpRequest()に対応しているわけではないので例外処理が必要
すでに回答が出ていますが・・・ 6×4の配列で一部に初期値（？）を設定しているようです。 サンプルでは添字を全てkで行っていますが、少しだけ分かり易くなるかもとi、jにして書き直してみます。 2次元配列をary[i, j]として（javascriptの表記ではary[i][j]となりますが）考えてみると・・・ //配列を定義（最初は1次元） var ary = []; //行に関してループ（0～5） for( var i = 0; i <= 5; i++ ) { //配列の要素（行）を配列として定義（これで二次元になる） 　ary[i] = []; //初期値として、ary[i, 0]（=1列目の各行要素）にiを代入 　ary[i][0] = i; } //列に関してループ（0～3） for( var j = 0; j <= 3; j++ ) { //初期値として、ary[0, j]（=1行目の各列要素）にｊを代入 　ary[0][j] = j; } console.log(ary); これを実行してみると、コンソールへの出力は [ [0, 1, 2, 3], [1], [2], [3], [4], [5] ] となります。 概念としては6×4の配列ですが、javascriptでは未定義の配列要素は生成されません。 （参照した場合は、未定義なのでundefinedが返されます）
＞window.confirmによって確認ダイアログが出たときに、自動でOK 質問の意図がよくわからないのですが confirmをつかわなければよいだけでは？ 逆にどうしてもconfirmを経由して実行で自動クリックが可能であれば 有料コンテンツへの自動誘導や、PC内ので全削除も自動でOKを押せることになりますが それでもよろしいですか？
たとえば、プログラムを指定して実行するならrunメソッド （ただしactiveXのコーションがでます） ローカル前提で、セキュリティ大甘にしないといけないので いろいろ自己責任でお願いします <script type="text/vbscript"> function test(v) text="c:\windows\system32\notepad.exe "+v msgbox text Dim oShell Set oShell = CreateObject ("WSCript.shell") oShell.run text Set oShell = Nothing end function </script> <input type="button" onclick="test('c:\trash\test.txt')" value="test"> 拡張子に関連付けられたデフォルトのプログラムをひらくなら cmdの子プロでstartを実行するとか・・・ <script type="text/vbscript"> function test(v) text="cmd /c start "+v msgbox text Dim oShell Set oShell = CreateObject ("WSCript.shell") oShell.run text Set oShell = Nothing end function </script> <input type="button" onclick="test('c:\trash\test.txt')" value="test">
こんにちは。 ＞～～切り替え画像はどうやって作るのでしょうか？ 通常はHTML、CSS、javascriptなどを利用して実現しています。 いわゆる「画像スライダー(image slider)」のような範疇になるものですね。 その中でも、循環（Carousel）できて、自動実行（auto）の機能を有しているタイプで、carousel sliderなどとも呼ばれているようです。 自作してもよいですが、スライダーのたぐいは数多くライブラリ化されたものがありますので、それを利用してもよいです。 ＞初心者なので出来るだけシンプルで簡単な方法だと～ とのことですので、検索して気に入ったものをそのまま使うのが簡単だと思います。 多くのライブラリは、それぞれオプション指定でいろいろなアレンジができるようになっていますので、その中で質問者様の好みの表示ができるものを探すと良いでしょう。 例えば、 　http://bxslider.com/ ご提示のサイトでもライブラリを利用しています。 通常のサイトのHTML、CSS、javascriptはソースを見ることができますので、どのような仕組かはそれをじっくり見ればわかるはずです。 ご提示のサイトの場合、ksksliderというライブラリを利用しているようです。（jQueryのプラグイン） 　https://github.com/ksk1015/jquery.kskslider HTMLでid="js-homeHero"となっているところが、スライダーとなっている部分に当たります。
swiperではパラメータにpaginationBulletRenderを設定することで、ユーザが自由にpagenationを生成することができるようになっているようです。 指定したfunctionから、設定したい内容のHTML文字列を返すようにすればよいと思われます。 http://www.idangero.us/swiper/api/ 具体的な例としては（ご質問のように、必ず3個で固定されているものとして） 　paginationBulletRender: function (index, className) { 　　return '<span class="' + className + '">' + ["昨日","今日","明日"][index] + '</span>'; 　} のような設定で可能と思います。 （質問者様の必要とするマークアップによって、調整する必要がありますが） 以前、似た内容の質問がありました。 https://oshiete.goo.ne.jp/qa/9116064.html
こんにちは。 ご提示のサイトではフリックの位置（＝見出しの内容）によって表示される内容が変わるので、単なるスライダーとは異なりますが、どのようにしてswiperで実装しようとしているのかがご質問文からはわかりませんが・・・ とりあえず、ご質問である ＞フリック時に横から矢印等の画像を表示する方法 という部分だけなら、swiperのパラメータにイベント処理を設定できるようになっていますので、それで処理をすればよろしいかと。 使えそうなのは、 　onSlideChangeStart　や　onTouchMove　や　onSliderMove　あたりでしょうか？ （実装方法が不明なので、何が適切なのかはわかりませんが） http://www.idangero.us/swiper/api/ イベント処理の中で、矢印の表示（その後に非表示）を記しておけば良いのではないでしょうか？
slickのサイトを読みましたか？ rtlの下に、ノートが記述されています。 Note: the HTML tag or the parent of the slider must have the attribute "dir" set to "rtl". rtlを使う場合は親属性に"dir"を設定しろと記述されています。 なので、問題はScriptの部分ではなくHTMLの部分です。 例） <ul class="sample" dir="rtl">　　　←ここに属性「dir="rtl"」が必要。 <li><img src="sample1.jpg"></li> <li><img src="sample2.jpg"></li> <li><img src="sample3.jpg"></li> <li><img src="sample4.jpg"></li> </ul> これで、左→右に流れるはずです。
＞<a href="images/hoge.jpg" data-title="あいうえお"><img src="images/ボタン.png" /></a> ライトボックスでは、「title="あいうえお"」となっており、それが画像を表示した際のタイトルとして表示されます。 それと同じことをやりたいと言うことですね。 ライトボックスがそうであるように、Javascriptを使っているから実現出来ている事です。 属性「title」は、本来ツールチップを表示する為の属性です。 なので、カーソルを乗せると「あいうえお」とツールチップが表示されます。 ライトボックスでは、その「title」属性を取ってきてタイトルとして表示しているのです。 このように、本来は属性には何らかの機能を持った物なのですが「独自データ属性」が追加され機能を持たないデータが付けられるようになりました。 しかし、これもJavascriptを利用した場合の話です。 本来の画面遷移では、PostやGetなどで送信するのですが、その方法でも実現出来ないことなので割愛します。 ちなみに、独自データ属性とは、DOMのDataSetオブジェクトです。 DataSetなのでデータの個数が無制限に設定出来ます。
初心者が XHTML に手を出すのはあまりオススメできません。 あえてやろうというならば、少々手を加えて以下の様に。 ■ question.xhtml <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html> <html xmlns="http://www.w3.org/1999/xhtml"> <head> <meta charset="UTF-8"/> <!-- xhtml で http-equiv は駄目 --> <title>24時間毎サイト画像更新</title> <script src="question.js"></script> </head> <body> <div class="box"> <p class="dailyImage">今日は何月何日?</p> <!-- xhtml で noscript は駄目 --> </div> </body> </html> ■ question.js var imglist = [ [ "image/1211.jpg", "page/1211.html" ] , [ "image/1212.jpg", "page/1212.html" ] , /* 以下略 */ ]; function setDailyImageLink() { var now = new Date(); var hour = now.getTime() / 1000 / 60 / 60 | 0; var day = (hour + 9) / 24 | 0; var item = imglist[day % imglist.length]; // 日付を元にどれか1つを選ぶ var elements = window.document.getElementsByTagName('p'); for (var i = 0; i < elements.length; i++) { var e = elements[i]; if (e.className == 'dailyImage') { // どこに出力するか選択 while (e.firstChild) { e.removeChild(e.firstChild); } var anchor = window.document.createElement('a'); anchor.href = item[1]; var img = window.document.createElement('img'); img.src = item[0]; e.appendChild(anchor).appendChild(img); // 画像とリンクを生成 } } } window.onload = setDailyImageLink; // 関数呼び出しを外部化するための記述
土日は簡単ですが、祝日はややこしいので配列に設定して比較する。 祝日の配列は、定期的にメンテナンスする。 という条件で作成してみました。 また、祝日も計算で求めるのであれば、以下が参考になると思います。 http://qiita.com/osamu_takeuchi/items/0623c8aced … これに、「長期連休」を追加すれば出来ると思います。 <!DOCTYPE html> <html lang="ja"> <head> <meta charset="UTF-8"> <title>sample</title> <style type="text/css"> </style> <script type="text/javascript"> function ShippingTime(){ // 祝日（定期的にメンテナンスする） holDay = new Array( "2015/12/23", // 天皇誕生日 "2016/1/1", // 元日 "2016/1/11", // 成人の日 "2016/2/11", // 建国記念の日 "2016/3/20", // 春分の日 "2016/3/21", // 振替休日 "2016/4/29", // 昭和の日 "2016/5/3", // 憲法記念日 "2016/5/4", // みどりの日 "2016/5/5", // こどもの日 "2016/7/18", // 海の日 "2016/9/19", // 敬老の日 "2016/9/22", // 秋分の日 "2016/10/10", // 体育の日 "2016/11/3", // 文化の日 "2016/11/23", // 勤労感謝の日 "2016/12/23" // 天皇誕生日 ); dayWek = new Array("日", "月", "火", "水", "木", "金", "土"); // 今日から４営業日先を求める dt = new Date(); for(i = 0; i < 4; i++) { dt.setTime(dt.getTime() + (1 * 24 * 3600 * 1000)); // 土日の処理 if( dt.getDay() == 6 || dt.getDay() == 0 ) i--; // 祭日の処理 for(j = 0; j < holDay.length; j++) { hd = holDay[j].split("/"); if(hd[0] == dt.getYear() + 1900 && hd[1] == dt.getMonth() + 1 && hd[2] == dt.getDate()) i--; } } // 求めた日付を表示する shpDt = "今日ご注文いただいた分は"; shpDt += dt.getYear() + 1900 + "年"; shpDt += dt.getMonth() + 1 + "月"; shpDt += dt.getDate() + "日（"; shpDt += dayWek[dt.getDay()] + "）"; shpDt += "発送予定です"; document.getElementById("ShpTime").innerText = shpDt; } </script> </head> <body onLoad="ShippingTime()"> <div id="ShpTime"></div> </body> </html>
こういうこと？ <form> <input type="text" name="hoge"> <select name="fuga" onchange="this.form.elements['hoge'].value=this.options[this.selectedIndex].value;this.selectedIndex=0;"> <option value="">-----</option> <option value="fuga1">fuga1</option> <option value="fuga2">fuga2</option> <option value="fuga3">fuga3</option> </select> </form>
こんにちは。 javascriptを利用しているのは確かなようですが、ご質問文だけからではjavascriptだけで実現しているのかどうかまではわかりません。 登録されている顔文字の量によっては、javascript以外も利用している可能性がありますし、もちろんjavascriptだけで実現している可能性もあります。 ＞ヒントで結構ですので教えていただけると嬉しいです。 ヒントにもなりませんが、ヒントにたどり着けそうな方法を・・・ ご覧になっているページのソースを見てみると、<script>タグがあると思います。 外部のファイルを読み込んでいるタイプと、HTML内に直接スクリプトが記載されているタイプとありますが、それらの中を探してみると、 　function initKaomoji(〇, ◇, △){ ～～～ とか 　var initKaomoji = function(〇, ◇, △){ ～～～ のような記述があるはずです。　（〇、◇、△は適当な変数名（=文字列）です。） その部分が、実際にアイコンをクリックした時の処理内容が記されているスクリプトに当たりますので、どのようなコードでどのような関数を利用しているかが大体わかるのではないかと思います。 上記以外の関数定義方法もあるので、万一、上記の記述が見当たらないような場合は、「initKaomoji」をキーにスクリプト内を検索してみれば、それらしきところに行き当たるものと想像します。
引数を２つ指定しているのですから関数側でもその通り処理すればよいのでは？ ＞onmouseover(マウスが要素の上に乗る)というマウスイベントをするとフォントサイズが100pxになる どの要素のonmouseroverに対して、どのフォントサイズを変更したいのでしょうか？ <html> <head> <title>sample</title> <script> function act(prop,val) { var obj =document.getElementById("p1"); obj.style[prop] =val; } </script> </head> <body> <h3 id="p1">test text</h3> <div onclick="act('color','#ff8800');" onmouseover="act('fontSize','100px');">click me</div> </body> </html>
ブラウザによってはページを戻るとボタンがdisable状態になってしまいますが それでOK？
出題の意図が正確にはつかみきれないのですが・・・ 課題のようなので、ヒントのみです。 具体的な書式などはウェブ上にたくさんありますので、御自分で調べてみてください。 ＞上のdiv要素に～～ まずは、対象となるdiv要素を取得する必要がありますが、そのままのHTMLで直接divを取得するのは難しいですね。 例に示されている方法を使うのであれば、divにidを設定しておくことで、getElementById()を用いて例示と同様に取得することができますね。 HTMLを変えることが許されないのであれば、目的とするdiv要素は、例で取得できているp要素の親要素にあたりますので、obj.parentNodeで取得することができます。 ＞枠線を指定し、背景色などを使って～～ 取得した要素のstyle属性を変更することで実現できると思います。 説明文にあるようにCSSとほぼ同様ですので、枠線はborder、背景色はbackgroundColorで指定することになります。 枠線は、太さ、線種、色をまとめて設定する方法と個々に指定する方法があるのもCSSと同様です。 ＞ページに色を付けなさい ページの一部に色が付けば良いという意味であれば、div要素に色を付けることで題意を満たしますが、文字通りページに色を付けることを求められているのであれば、body要素に背景色を設定するなどが必要なのかもしれません。 頑張ってください。
シェアをググっただけですが、少しはご参考になるかと・・・ https://webrage.jp/mobile/data/pc_browser_share. … http://lhsp.s206.xrea.com/misc/browser-share-ver …
＞}if ( i % 5 == 0){ctx.strokeText( (j % 12), ctx.lineWidth , 160) 行の先頭の「}」がループの終わりなので、ループの外に記していることになります。 一度は実行されるので一箇所だけ書かれているはずだけど、前回の私の回答の3）の理由で見えないと推測されます。 前の質問のＮｏ1様の回答通りに一度やってみてはいかがですか？ また、私の回答に記した留意点を今後1個ずつ聞いてゆかれるつもりなのでしょうか？
ANo2です。 ＞文字どころか文字は表示されません ANo2にも書きましたが、表示されるjの値が未設定状態なので、初期値を設定してあげる必要があります。 どのような表示になさりたいのかわかりませんが、 　var j = 6; などのような初期設定をしてみてください。 多分、表示はされるようになるはずと思います。
こんにちは。 使ったことがないので、ググっただけですが・・・ どのような環境でテストなさっているのか不明ですが、エラーメッセージを素直に読むと、タイポでもない限り『実装されていない』ってことではないでしょうか？ https://developer.mozilla.org/ja/docs/Web/API/Na … プレフィックスを付けることで利用可能な場合があるかも知れませんし、環境によってはパーミッションの設定が必要な場合もあるようです。
別ページなら問題なく設置できるはずです。 同じページの場合でも、大抵はうまくいくはずです。 しかし、ライブラリ同士の相性が悪いと、たまにそのままではうまくいかないことがありますが、その場合でも、競合を避ける工夫をすることで、解消できる可能性があります。 CSSについては、それぞれのライブラリが必要とする内容があるはずですので、それを満たすようにしてください。
----- ここから ----------- td.appendChild(document.createTextNode(txt)); if (j == 0) { td.style.color='red'; } tr.appendChild(td); ----- ここまでを ----------- ----- ここから ----------- var oDiv=document.createElement("div"); oDiv.appendChild(document.createTextNode(txt)); if (j == 0) { oDiv.style.color='red'; } td.appendChild(oDiv); tr.appendChild(td); ----- ここへ差替え -----------
こんにちは。 確認したところ、 style.css331行目の.thumb a{ transition: all 0.3s ease-in-out;}のとこで、これ以外に指示がないのが原因だと思います。 上記を .thumb a { transition: all 0.3s ease-in-out 0s; display: block; width: 128px; height: 128px; border-radius: 6px; overflow: hidden; } のようにブロック要素にしてきちんとサイズと表示領域を指定してみてください。 原因として思ったのは、 これに対してstyle.css335行目で.thumb a:hover{opacity:0.3；}とありますが、 もともとの.thumb aにサイズ指定などがないため不安定で、hover発動の0.3秒の間にちらちらと角丸が崩れて見えたのだと思います。 頑張ってください。
PCのローカル環境でざっと動かしてみただけなので、CSS等はほとんど理解してませんが・・・ ご提示のものは、結果的に「閉じたら終わり」というものになっていませんか？ ＞現在、動きは問題ない～～ とおっしゃってますが、それならアップしたソースが違ってるってことはありませんか？ アップされているものは、閉じるほうのトリガーはありますが、開く方のトリガーがないので、 　$(".onmenusp").click(function(){ 　　$('article#sidenav_sp').slideToggle(); 　}); が動作していないように見受けられます。 具体的な対処法として、開くトリガーのつもり（？）と思われる「メニュー」の部分にクラス設定をしてみてください。 また、当該部分がリンク要素になっていますので、（↑）のスクリプトのままですと、スクリプトの処理後にブラウザがリンク動作を行います。 これを中止したいのであれば、 　event.preventDefault() 等を実行するようにしてみてください。 http://api.jquery.com/event.preventDefault/ ＞開くときにぬるっと開かないのもちょっとおかしいですが～～ 当方では再現できませんでしたが、この原因はブラウザのリンク動作ではないかと推測します。
＞のiでエラーが表示されて止まっていたので、 下のソースでエラーが消えると思います。 alertの部分を考えてみてください。 function boxCheck(){ //チェックされた項目を記録する変数 var str=""; //for文でチェックボックスを１つずつ確認 for(var i = 0; i < 6; i++ ) { //チェックされているか確認する if( document.chbox.elements[i].checked ) { //変数strが空でない時、区切りのコンマを入れる if( str != "" ) str = str + ","; //チェックボックスのvalue値を変数strに入れる str = str + document.chbox.elements[i].value; } } //strが空の時、警告を出す if( str=="" ){ alert( "どれか選択してください。" ); }else{ alert( str + "が選択されました。" ); } }
出題状況からみるとDOMではなさそうな雰囲気ですが 仮にbodyの中に書く場合でもこんな風にかけます <!DOCTYPE html> <html lang="java"> <head> <meta charset="utf-8"> <title>sample</title> </head> <body> <script> var table=document.createElement("table"); table.setAttribute("border",1); var tbody=document.createElement("tbody"); for(var i=0;i<4;i++){ var tr=document.createElement("tr"); for(var j=0;j<7;j++){ var td=document.createElement("td"); var txt=i*7+j+1; td.appendChild(document.createTextNode(txt)); tr.appendChild(td); } tbody.appendChild(tr); } table.appendChild(tbody); document.getElementsByTagName("body")[0].appendChild(table); </script> </body> </html>
// メモの追加 function addMemo() { if(temp.length == 10) { alert('保存できるメモの上限は10件です。'); return; } var v = $('newMemo').value; if(v == '' || v == null) { alert('メモが入力されていません。'); return; } var dd = new Date(); var mm = dd.getMonth() + 1; var dt = dd.getDate(); var hh = dd.getHours(); var mn = dd.getMinutes(); if(mm < 10){ mm = "0" + mm; } if(dt < 10){ dt = "0" + dt; } if(hh < 10){ hh = "0" + hh; } if(mn < 10){ mn = "0" + mn; } temp[temp.length] = v + '　' + mm + '月' + dt + '日' + hh + '時' + mn + '分'; display(); } ----------- 日付もあったのですね。 // メモの追加 を差し替えてください。
function denwa(s) { var k = s.match(/(\d{2,4})/g); if(k == null) return "not found"; var ret = ''; for(var i = 0; i < k.length; i++) ret += k[i]; return ret; } var i; var adres = [ "taro 234-1111", "jiro 34-2222", "sburo (987)3333", "haruko 080(333)4444 keitai", "natuko,0789(555)6666,jitaku", "akiko03-1234-5678office" ]; for(i in adres) { print(denwa(adres[i])); }
こんにちは。 配布サイトのデモを見てみただけですが・・・ http://codeb.it/restable/ ご提示のライブラリは、スマホ表示などの際にはもとのtableではなくて、それをコピーした<ul><li>形式のリストに書き直したものを表示しているようです。画面の幅によって、これらを切り替えて表示していると思われます。 上記サイトの設置例の「Example C」を見てみると、メールアドレスのリンクがそのままリスト内にもコピーできています。 タイトルが、「Responsive Columns Table with html support」となっており、サンプルではkeepHtmlのオプションが設定されているようです。 想像するところ、各種オプションが用意されていると思いますので、ＤＬした時の説明書等で使い方を再度ご確認なさるのがよろしそうに思います。（試してはいませんので、未確認です）
こんにちは。 以下のサイトを利用すると、カウントダウンやカウントアップのスクリプトを作成してくれます。 いろいろ試してみると、参考になるかも。 http://countdown.reportitle.com/
そのポップアップインターネットエクスプローラーを閉じても残っていませんか？ 恐らくブラウザのポップアップではなく、パソコンに仕込まれてしまったウイルス・スパイウエアが原因ではないかと思います。 その場合はウイルス駆除ソフトやスパイウエア駆除ソフトを使用してください。 スパイウエア駆除ソフトにはSpybotなどがありますが、パソコンに不具合がでる可能性もありますのでご利用は自己責任でお願いします。
ANo2です。 ご質問のポイントが「連動のさせ方」なので、それに関しての簡単なサンプルを作ってみました。 方法はANo2に記した通りで、swiperの機能をそのまま利用しているだけとも言えます。 swiperのドキュメントを斜め読みしただけで作っているので、全体にテキトーです。特に、CSSは超テキトーなので、正しく設定してください。 あくまでも考え方としての一例なのでミニチュア版（幅320px固定）です。 動作はPC環境でクリック（=タップ）、ドラッグ（=スワイプ）として試しています。 <!DOCTYPE HTML> <html lang="ja"> <head> <title>sample</title> <style type="text/css"> .swiper-wrapper { position:absolute; } .swiper-slide { float: left; } #panel { position:relative; margin:0; padding:0; width:320px; height:400px; overflow:hidden; } #panel .swiper-wrapper { width:1400px; } #panel .swiper-slide { width:320px; height:400px; } #panel .swiper-slide p { margin:20px; font-size:40px; } #navi span { display:inline-block; width:65px; padding: 5px 0; font-weight:bold; font-size:16px; text-align:center; } #navi .swiper-pagination-bullet-active { color: #F00; } </style> </head> <body> <div id="navi"></div> <div id="panel"> <div class="swiper-wrapper"> <div class="swiper-slide" style="background-color: #FBB"><p>Panel 1</div> <div class="swiper-slide" style="background-color: #BFB"><p>Panel 2</div> <div class="swiper-slide" style="background-color: #BBF"><p>Panel 3</div> <div class="swiper-slide" style="background-color: #FFB"><p>Panel 4</div> </div> </div> <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/3. … <script type="text/javascript"> (function(){ var naviRenderer = function(index, cls){ return "<span class='" + cls + "'>Panel" + (index+1) + "</span>"; } var swiper = new Swiper("#panel", { paginationClickable: true, spaceBetween: 3, pagination: "#navi", paginationBulletRender: naviRenderer }); })(); </script> </body> </html> ※ メニュー下部にスライダーも設置する場合は以下を追加。 ＜ＨＴＭＬ＞ <div id="slider"></div> ＜ＣＳＳ＞ #slider { position:relative; width:260px; height:2px; overflow:hidden; margin-bottom:10px; } #slider .swiper-wrapper { width:1000px; } #slider .swiper-slide { width:65px; height:2px; } #slider .marker { background-color: #F00; } ＜ＳＣＲＩＰＴ＞ var i, n = swiper.slides.length; var div = document.createElement("div"); var d = div.cloneNode(true); div.className = "swiper-wrapper"; d.className = "swiper-slide"; document.querySelector("#slider").appendChild(div); for(i = 0; i<n; i++){ d = d.cloneNode(true); div.appendChild(d); } d.className += " marker"; var slider = new Swiper("#slider", { spaceBetween: 0, slidesPerView: n, slidesOffsetAfter: 65 * (n-1), onlyExternal: true }); slider.slideTo(n-1, 0); swiper.params.onSlideChangeStart = function(s){ slider.slideTo(n - 1 - s.activeIndex); };
ご提示の内容だけでは、なにをなさりたいのかよくわかりませんが・・・ ＞Dom生成から行数を数えた際のカウントがずれる～～ どこがずれているのかご質問に記してないので推測するしかないのですが、削除ボタンを押したときに1マスだけ削除したいけれど全部消えちゃうという意味なのでしょうか？ 以下、その仮定で回答します。 ご提示のコードで生成しているのは1行だけなので、その1行が削除されているので、おかしなところは見当たりません。（表示された状態で確認できると思いますが・・・） もし1セル（=td）を削除したいのであれば、削除するコードをtd要素を対象にするようにしてください。 ajaxで複数行生成したいのであれば、successの関数のなかで、複数行生成するようにしてください。 上記のどちらかで意図するようになるのではないでしょうか？ 「仮定」が違っていましたなら、無視してください。 ＜おまけ＞ 要素追加の際には「#tbl」とidで指定しているのに対して、削除では「tbody」と要素だけで指定しているので、表が複数あったりすると、やっぱりカウントがずれる（？）ことになりかねないように感じます。
No.1です。 バージョンではなかったってことですね。 あとはこんなのみつけたので良ければ見てください。 http://wind-mill.co.jp/iwashiblog/2014/05/bxslid … また、 ＞同ページ内に他にもjquery.dropdownやslidebars.minなどのjQueryも使用しているもの影響するのでしょうか。 他のjsが影響することは多々あります。 そういう私もつい最近、このbxslider使う予定だったサイトで、他との兼ね合いでIEどころかまったく使えず、別のスライダーをつかいました。 ＞ちなみにIEブラウザチェックはF12開発者ツールのエミュレーションから見ていますが・・・ 私も同じです。 そこに出てくるコメント見て、修正します。 ただ、自分で作ったjsとか超々軽量なプラグインとかならいいですが、プラグインはきちんと読み解いて修正しないと、今度は別のところがおかしくなって・・・と面倒なことになりかねないので、こういう場合は私なら他のプラグイン探します。。。 お役に立てず申し訳ないです。
こんにちは。 　<script src="～～"> 　<link href="～～"> scriptのsrc属性やlinkのhref属性は、丁度、img要素のsrc属性やリンク要素（<a>）のhref属性と同様に、対象となるファイルが存在する位置（URI）を示すものになっています。 　<img src="～～"> 　<a href="～～"> ですので、質問者様がjquery.bxslider.min.jsやjquery.bxslider.cssを置いているURIを記載すればよろしいです。 相対パスでもＯＫですし、ルートからのパスでも良いです。 絶対パス（ｈttp://～～)でもよいのですが、この場合は対象ファイルをサーバにアップしておかないと、実際には動作しないこととなります。
こんにちは ＞タブの項目をスライドするとそれに連動して ＞下の記事も切り替わるようにしたくて～～ 『下の記事』とおっしゃっているのがどの部分のことなのかよくわからないのですが、スライドする画像に重ねて表示しているキャプションのような文字の事でしょうか？ その他には、「連動して切り替わる」ものが見当たらないのですが・・・ もしも、そうであるなら「連動している」というよりも「まとめてスライドさせている」と言う方が実際に近いと思います。 ＞htmlの範囲はわかるのですが～～ とのことですので、ご提示のサイトを例にとれば、 スライドの動作は、Li要素を単位として動かしていますので、各々のLi要素が <li> 　<img src="～～"　> 　<div><div>text1</div><div>text2</div></div> </li> といった構成になっているのがわかると思います。 この状態で、Li要素をスライドさせてあげればご質問のような見え方になります。 それなので、フリックに対応しているスライドのライブラリであれば、同様の事が実現可能と考えられます。 ご提示のサイトでは、スクリプトの数が多い上にミニマイズしてあるものが多く、また、スクリプトから読み込んでいるスクリプトもあるようですので、ざっと見ただけではスライド処理に対応している部分がどこであるのかは特定できませんでしたけれど・・・ 画像要素だけに限定したスライダーではなく、コンテンツ（DivやLiなど）をスライドできる仕組みのもので、フリック動作に対応しているものであれば、同様のことができるものと思います。 ※ 『下の記事』とおっしゃっているものが違う意味だった場合は、私の勘違いですので無視してください。
二択フローチャートを作る、ということですね。 検索してみたらjQueryを使ったサンプルを紹介しているサイトがありましたが、こちらはいかがでしょう？ http://www.jquerystudy.info/sample/check/radio1. … http://ez-sparrow.com/jquery-yes-no/
＞どのようにプログラムを書けばJavaで呼び出せるようになるのでしょうか？ ごめんなさい意味がよくわかりません。 おそらく「どうやってもできない」というのが回答になりそうな気がしますが・・
imgタグのsrcを書き換えたいということなら下記で $("#img").eq(0).attr("src", "画像のURL"); 画像全てを置き換えるならこんな感じで for (var i = 0; i < $("#img").length; i++) { $("#img").eq(i).attr("src", "画像のURL"); } jqueryを調べるにはこちらのサイトがおすすめです。 http://semooh.jp/jquery/api/traversing/add/expr/
javascriptではnameにカッコをつけても当然配列としてみなされません formの要素であればelementsとしてnameでアクセスできます document.formSample.AA[2].checked ↓ そもそもAA[2]のどの要素のcheckedを見ているのか不明 要素ごとにチェックをするのでたとえばこう document.forms['formSample'].elements['AA[2]'][0].checked ・・・AA[2]という要素群の0番目の要素のcheckedをみる できればformにもidを振って、document.getElementById()でアクセスした方が確実
こんにちは。 jQueryの問題というよりもブラウザ側の差異のようですね。 通常の要素にスクロールバーを表示する際は、スクロールバーも要素の一部として扱われるようですが、windowの場合だけ特別扱いにしているブラウザがあるようです。 この場合、スクロールバーはdocument外とされてしまうのでスクリプトの及ぶ範囲外となってしまいます。 ご質問の機能を実現する方法として、少々無理やりではありますが、body直下にラッパーのdiv等を置いて、windowにスクロールバーを出させずにこちらの要素でスクロールバーを表示させるようにすれば、ご提示の方法で判定が可能になると推測します。 ただし、ラッパーのサイズが常にwindowと同サイズになるように調整してあげる必要がでてきてしまいますが。 各種のブラウザで確認してはいませんし、自分でもあまりスマートな案だと思えませんので、あくまでもご参考までに・・・ body直下に<div id="wrapper">があるものと仮定して、 $(function(){ 　var w = $(window), wrap = $("#wrapper"); 　var resize = function(){ 　　wrap.css({"width": w.width(), "height": w.height(), "overflow":"auto" }); 　} 　$("html").css("overflow", "hidden"); 　w.on("resize", resize); 　resize(); 　wrap.on("mouseleave", function(){ 　　alert("ウインドウを出ました"); 　}); }); ※あらかじめ、html, body{ margin:0; padding:0; width:100%; height:100%; } などとしておくとよろしいかと。
ここのコピペの改変？ http://blog.webcreativepark.net/2006/02/07-21510 … ＞google map api で下記のhtmlが動かないのは何故か。 原因は、質問者様が変えたところにある。 現に、上記サイトでは表示できている。 http://blog.webcreativepark.net/sample/google/01 … ただし、apikeyは正しいものに変える必要があるはず。 まぁ、v2のサポートは終了したような記憶があるので、表示できることにちょっとびっくり。
ブラウザによって反応が異なるようですが・・・ 以下を修正すれば、多分動作すると思います。 1）DOCTYPE宣言をいれてください。 2）<HTML lang="utf-8"> 　lang属性には言語コードを指定してください。 　ja(日本語)、en(英語)、de(独語)　など… 3）サイズをCSSで％で指定しているので、#mapだけでなく 　念のため　html, body, #map　で指定してください。 4）new google.maps.Latlng 　　　　　　↓ 　new google.maps.LatLng 5）google.maps.MapTypeId ROADMAP 　　　　　　↓ 　google.maps.MapTypeId.ROADMAP
不可能。 キーボードはiOS依存だからどうしようもない。
V2の時は必要でしたが、Ｖ3に切り替わった当初は不要とされていました。 その後、現在は必要とされるように再度変わりました。 https://developers.google.com/maps/documentation … 以下より抜粋 https://developers.google.com/maps/documentation … 『All JavaScript API applications require authentication using an API key.』 当初の名残で、今のところはkey無しでも動作するようですが、そのうちにしなくなるかも・・・ ＞それとも記事が古いのか、分からなかった物ですから。 ネット上の第三者の記事に右往左往しているよりも、配布元のgoogleを調べるのが常道でしょう。
@ITのAndroidで動く携帯Javaアプリ開発入門とか参考にしてみては？ http://www.atmarkit.co.jp/fsmart/index/android.h …
とりあえずmypageは自分の質問・回答なので、他人には別の内容が表示されるので参照できません javascriptで何かをやろうとしているのでしょうか？ サーバー側にデータ保存していなければ入力データが消えるのは普通ですが
ほぼそのままの説明サイトがありました。 （株価チャートではないけれど、その部分を入れ替えれば同じはず） http://yohshiy.blog.fc2.com/blog-entry-202.html
ＡＮo1です。 ＞プラグイン自体を作る練習をしてます。 なるほど。やっと状況がわかってきました。 ＞とりあえずクリックしたら属性がわかるといったものを～ 「要素をクリックして属性値を表示する」といっても、要素もいろいろあるし、属性値もそれぞれなので、そのあたりを指定できるようにするといったことがオプションとして考えられるかもしれません。 　・要素の選択オプション ： 全要素対象 / 特定の要素を対象 　・表示属性値のオプション ： 全ての属性値表示 / 特定の属性値表示 とか・・・ その機能で複数の指定を動作できるようにしてみるとか・・・ 例えば、「img要素のalt属性を表示」と「div要素の全属性を表示」を同時に実行可能なようにするといった感じ。 あるいは、属性値といっても、HTMLの直接の属性ではないものを確認したいこともあるので、拡張してあげるとか。 例としては、表示サイズ（width、height）や表示位置など。 さらには、それぞれの機能のon/offを制御できるようにしておくなど、など… といったふうに考えていくと、いろいろと試してみることができそうに思います。 がんばってください。
HTML的には「座標」なんて存在しないような気がするんだけど.... あなたのいう「座標」って, なんですか?
ほぼソースを読んでませんが ＞リンクにtarget="_top"を組み込みたいです。 これだけなら ＞document.location.href = url; window.open(url,"_top") にしてみては？
ひとつの案ですが・・・ 指定した割合でくじが出てくる関数を作っておいて、くじを引くときはそれを呼び出すとかでは？ 以下、そんな一例です ※　割合は比率（重み）を示すだけなので、合計が100である必要はありません。 ※　後半のテスト部分は不要なので、前半のomikuji関数の定義部分だけですね。 var omikuji = (function(){ 　var kuji = [ 　　["大吉", 10], ["吉", 50], ["中吉", 30], ["凶", 10] 　]; 　var i, k = 0, n = kuji.length; 　for(i=0; i<n; i++){ k += kuji[i][1], kuji[i][2] = k; } 　return function(){ 　　var r = Math.random() * k; 　　for(var j=0; j<n; j++) if(r<kuji[j][2]) break; 　　return kuji[j][0]; 　} })(); //テスト(1000回おみくじを引いてみる） var res = {}, result = ""; for(var i=0; i<1000; i++){ 　var r = omikuji(); 　if(res[r]) res[r]++; else res[r] = 1; } for(i in res) result += (result?" / ":"") + i + ":" + res[i]; alert(result); //　結果例 //大吉：100、中吉：297、吉：504、凶：99
ANo2です。 ＞ピンを立てる場所と言うのは、決めています。 ＞座標は分かるのですが、ピンを立てる方法が分かりません。 表示するものがあらかじめ決まっているのであれば、比較的簡単ですね。 ＞対象となるピンのオブジェクトを指定する方法と、 ＞地図にそのオブジェクトを反映させる方法が分かりません。 ANo1であげたサンプルの、『//マーカーを表示』以降の6行ほどがマーカー作成・表示の処理になっています。 座標値（myLatLng,）やマーカの画像（markerImage：アイコンのURI）などを適宜変えて呼び出すようにすれば、表示されるはずです。 座標値や画像URIを引数にして関数化しておき、必要な回数だけ呼び出せばよろしいかと思います。
No2です。 それでは、マクロの記録はわかりますでしょうか。 既に、オートフィルターが設定されている様なので以下の操作をしてみてください。 １、開発のリボンから、マクロの記録をクリック ２、オートフィルターで　C,D,E,FGを表示させる。 ３、マクロの記録の終了 同様にして ２、オートフィルターで　B,C,D,E,FGを表示させる。 も作成 それぞれを、ラジオボタンに登録してみては如何でしょうか。
＞サーバーの処理で出来るのならそちらに変えたほうが楽ですかね。 私もそう思います サーバー側の処理ならgetでもセッションでもクッキーでも好きな方法でいけるでしょう ただbbbからcccを呼び出すとき再読み込みをさせないようにすれば ２回目以降の呼び出し時にはダイレクトに子ウィンドウを操作できるはずです 今回の問題はbbbからcccをwindow.openで開いているため bbbでcccを操作した後にcccが再読み込みされて打ち消していることだと推測されます。 これはcccの再読み込みのタイミングによって動作が必ずしも一定ではないという 不安定さを含んでいます
検索なさればサンプルはたくさん見つかると思いますが・・・ 一例として、 　http://www.tam-tam.co.jp/tipsnote/javascript/pos … 　http://ja.d3js.info/alignedleft/tutorials/d3/mak … 簡単にやるなら、別々に作成したグラフを重ねてしまえばいいかも。 でも、目盛をいれたり項目を表示したりなどいろいろやっていくと、どうしてもそれなりのコード量になると想像されます。 さらに、それを汎用化しようとすればもう少し複雑になる可能性が高いと想像します。 以前にも書きましたが、D3はデータ可視化のための汎用ライブラリで、グラフに特化したものではないため、いろいろなことができる替りに敷居は若干高いとも言えます。 グラフ作成という目的が明確ならば、前にも紹介しましたように、Ｄ3ベースのグラフ用ライブラリを利用なさるのが手っ取り早いとも思いますが？ ＜以下再掲＞ http://nvd3.org/examples/linePlusBar.html
クライアントサイドはブラウザ上で動かすプログラム ブラウザの種類やバージョンによって若干挙動がことなるので、 それを吸収するためにあれこれ工夫が必要 サーバーサイドはサーバーで動かしてブラウザで結果を確認する仕組み CGI的なもの ただクライアントサイドのプログラムでもサーバーにデータを取りにいけるし サーバーサイドでもクライアントからデータを受けたせたりするので 見た目上挙動にあまり大きな違いはないかも サーバーサイドというとnode.jsのイメージ
>document.getElementByid('chart') document.getElementById('chart') じゃない？
ANo2です。 改めて見たらおかしなことになってました。 　setInterval →　setTimeout　にしないとおかしいですね。 また、要素生成をごく簡単にやるなら(ちょっと違うけれど）、以下でも可能です。 document.write("<img src='img/photo01.jpg' class='frame'>");
とりあえず単純なcheckIsKanaを使うとして return str.match(/^[ァ-ヶー]*$/); これは0文字以上なので最低限 return str.match(/^[ァ-ヶー]+$/); とする必要があるでしょう 通常スペースは\sであらわされますが タブ、改ページ、改行などスペース的なもの全てにマッチしますので 半角全角スペースだけであればそれを列記すればよいです return str.match(/^[ァ-ヶー 　]+$/); （ーの後ろに半角スペース、全角スペースを記載してあります） ただし、氏名のチェックとなると先頭や末尾のスペースや、 スペースが連続しているもの、スペースだけの文字列などは除外したいはずです。 また、普通は名字と名前の間のスペースだけですが、 ミドルネームを許すかどうかでも変わってきます 「山本 スーザン 久美子」とか・・・ まずは仕様をよく考えた方がよいと思います
回答がないみたいなので、 じっくり調べてる時間がないので、コピペで確認しようとしたのですが・・・ CSSがないせいか、通常リンク機能以外はなんの動作もみられませんね。 ＞これをアンカータグのリンクをクリックした場合でも自動でナビゲーションが閉じるようにしたいです。 とのことですが、とりあえず簡単な方法のご提示のみ。 ＞再度toggleボタンを押さないと閉じません。 仕組みを理解していませんが、ボタンをクリックした状態にすればＯＫなのだと解釈しました。 それならば、対象とする処理の終わりに、ボタンをクリックしたことにするスクリプトを追加してあげれば良いはず。 クリックイベントの発生には、clickメソッドを利用すれば良いです。 　　$("対象要素のセレクタ").click(); の1行を追加なさればよいのではないかと推測します。
最近の書き方にすれば可能です <script>document.write('Hello')</script>
良く知らないので、ちょっとググってみただけですが・・・ D3.jsはデータのビジュアル化を実現するのに便利なライブラリではありますが、汎用的なのでグラフ専用というわけではなく、覚えるのが大変かもしれません。 目的が「グラフ作成」と明確なので、そういった専用のものを利用なさる方が短時間で実現できるというメリットがありそうです。 ご質問もそのあたりを意図してのことかと思います。 グラフを好みにカスタマイズしたいなどの場合は、結局、基礎的なライブラリ利用になってしまうかも知れませんが・・・ ググって見たら、こんなサイトがありましたのでご参考まで。 http://www.fwoabw.info/entry/2013/09/24/008062 ccchartは一応日本語サイトなので、とっつきやすいかも知れません。 http://ccchart.com/#30 上記では紹介されていませんが、D3をベースにしたグラフ用のライブラリもあるようです。 http://nvd3.org/examples/linePlusBar.html
No.1 のお礼の回答 使用しているライブラリは CreateJS でしょうか。 それならば以下のプロパティにて、押されたボタンが特定できると思います。 http://www.createjs.com/docs/easeljs/classes/Eve … ボタンから変数 i の数字を特定する以下の様な処理はいかがでしょうか。 function fl_MouseClickHandler_1(event) { var ボタン = event.target; var i = 名前から数字を得る処理(ボタン.なにかの名前); alert(array_col[i]); }
this が何ものなのかよく分かりませんが、Function#bind を使いたければこんな感じ。 var array_col = [ [0, 0, 0, 1, 255, 255, 255], [0, 0, 0, 1, 255, 0, 0], ]; function handler(p) { // this は、bind の第一パラメータ // i = 0 : p = [0, 0, 0, 1, 255, 255, 255] // i = 1 : p = [0, 0, 0, 1, 255, 0, 0] ... } for (var i = 0 ; i < array_col.length ; ++i) { var btn = this["col_btn_" + i]; btn.addEventListener("click", handler.bind(btn, array_col[i])); } javascript でよく見かけるクロージャの書き方だとこんな感じ。 var array_col = [ [0, 0, 0, 1, 255, 255, 255], [0, 0, 0, 1, 255, 0, 0], ]; for (var i = 0 ; i < array_col.length ; ++i) { var btn = this["col_btn_" + i]; btn.addEventListener("click", (function() { var p = array_col[i]; return function() { // this は、btn の要素になる // i = 0 : p = [0, 0, 0, 1, 255, 255, 255] // i = 1 : p = [0, 0, 0, 1, 255, 0, 0] ... }; })() ); }
まず、「ジャバスプリクト」ではなく「ジャバスクリプト」(JavaScript)です。間違えないように。 スクリプとは英語としては台本とか原稿などの意味がありますが、コンピューター用語としてはC言語やJavaのようにソースコードをコンパイルして実行プログラム・ファイルを作成する方式の言語ではなく、ソースコードを読み込んで即時実行する方式の言語を言います。 で。本題ですが、JavaScriptを全く知らない、調べ方も勉強の仕方も何もわからない状態でこの課題を出されたのでしょうか？ そうでないのだとすると、あるいたそうであったとしても、問題を丸投げしてはあなた自身は課題をとく過程で何も習得できるものが無くなります。それでよいのでしょうか？ 正解のソースコードが分かり、内容を読んで「なるほどこうなのか！」と意味を全て理解できたとしても、次回、それとは少し異なる課題なり、実際の業務上の担当部分なりが来た時に自力で対処出来る様になっているのでしょうか？ 学生が研究室で出された課題について、先輩が同じ課題をやった時のノートを見せてもらって、、、というのとは分けが違うと私は思います。 仕事上の研修として出された課題を甘く考えていませんか？ 今後もずっとその方法でしのいでいかれるおつもりなのでしょうか？
動作をキチンと確認していないので、申し訳ありませんが・・・ window.openで新しいドキュメントを読み込んでいますので、その読み込みに要する時間と、getElementByIdでスクリプトから要素を取得しようとするタイミングとが逆転していると（まだ読込終了していないと）、要素を取得できないことになりそうです。 ANo2様の回答は、少し時間を置いて（=読み込んでから）、処理を行うようにしようという試みかと推測します。 実際の読込時間は環境に依存しますので、読込状況を確認して処理をするのが良いかも知れません。 https://developer.mozilla.org/ja/docs/Web/API/Do … イメージとしてこんな感じ？ var doc = sub.document; if(doc && doc.readyState=="complete") Func(); else sub.onload = Func; //Funcは実際の処理を行う関数 あるいは、readyState=="complete"になるまでwhile等で待つとか・・・ （この場合は、タイムアウトを設定しておいた方が良いですが・・・）
●HTMLの<div class="content_wrap disnon">のdisnonを削除。 ●jQueryは以下 <script> $(function() { $('.slider1').bxSlider({ slideWidth: 200, minSlides: 3, maxSlides: 3, slideMargin: 10, }); $(".content_wrap:not(:eq(0))").hide(); $("#tab li").click(function() { var num = $("#tab li").index(this); $(".content_wrap").hide(); $(".content_wrap").eq(num).show(); $("#tab li").removeClass('select'); $(this).addClass('select') }); }); </script> 【jQuery説明】 概要としては、スクリプトの実行の順序を変えるって感じで。 ①まず最初にbxsliderを実行。 ②その後にタブの非表示。 disnonを消したので代わりに、.content_wrapの1つ目以外を.hide()で隠す。 ③それからタブのスクリプト。 disnon消したし、クラスdisnonにほかの役目がなさそうだったので、 タブの表示非表示を.hide()と.show()に変えましたが、もともとのaddClass,removeClassのままでも良いと思います。 あとセレクタで何度も出てくるものは代入したほうが良いかも。。この程度ならしなくてもほぼ速度変わらないと思いますが。。 ※もしこれでうまく行かなかったら、②③はjＱueryじゃなくてjsのwindow.onload = function() {}で囲って試してください。あくまで順序のために実行タイミングを変えるだけですけど。 頑張ってください。
【結論】 以下説明が長いので動作するコードを最初に示します。html構造は後述しています。console.logはデバッグのためなので削除して大丈夫です。 $('[class*=desc-]').each(function () { var cls; $(this).hover(function () { // マウスが入った時の処理 cls = $(this).attr('class'); console.log('IN: ' + cls); $('.' + cls).toggleClass('hover'); }, function () { // マウスが出た時の処理 console.log('OUT: ' + cls); $('.' + cls).toggleClass('hover'); }); }); 【html】 <!DOCTYPE html> <html> <head> <style type="text/css"> .hover { background-color: #eff; } </style> </head> <body> <dl> <dt class="desc-1">名前</dt> <div><p>----- 色々なコンテンツ -----</p></div> <dd class="desc-1">田中美保</dd> <dt class="desc-2">生年月日</dt> <div><p>----- 色々なコンテンツ -----</p></div> <dd class="desc-2">1990年01月01日</dd> <dt class="desc-3">スキル</dt> <div><p>----- 色々なコンテンツ -----</p></div> <dd class="desc-3">Photoshop/Illusrator</dd> </dl> <script type="text/javascript" src="jquery-2.1.4.min.js"></script> <script type="text/javascript"> // ここにコードを書く </script> </body> </html> 【javascript】 ①最初に、次のようなコードがすぐに思いつくかと思います。.desc-1クラスの要素にhoverクラスを付け外しします。 $('.desc-1').hover(function () { $(this).toggleClass('hover'); }); ②このコードは簡単に理解できますが、現在ホバーしている要素しか背景色が変化しません。「1つの要素にホバーしたら、同じクラスのついた2つの要素が変化してほしい」のが希望です。そこで次のようなコードに改良します。 $('.desc-1').hover(function () { var cls = $(this).attr('class'); console.log(cls); $('.' + cls).toggleClass('hover'); }); ③一見問題なさそうですが、このコードは期待したとおりに動きません。chromeのコンソールを開いて確認するとわかりますが、マウスインした時のクラスの値(desc-1)と、マウスアウトした時のクラスの値(desc-1 hover)が異なっているためです。これによって、マウスアウト時のセレクタ「$('.' + cls)」が「$('.desc-1 hover')」(hoverの先頭にドットがない)状態となってしまい、jqueryが要素を正しく選択できないためです。 この問題を解決するためには、マウスイン時のクラスの値を、マウスアウト時の処理まで引き継がなくてはなりません。 そこでさらに次のようなコードに改良します。 var cls; $('.desc-1').hover(function () { // マウスが入った時の処理 cls = $(this).attr('class'); console.log('IN: ' + cls); $('.' + cls).toggleClass('hover'); }, function () { // マウスが出た時の処理 console.log('OUT: ' + cls); $('.' + cls).toggleClass('hover'); }); jqueryのhoverメソッドには、マウスイン/オーバーの間で値を引き継ぐ機能がないので、変数clsをマウスイン/オーバー両方の処理が参照できるように、関数の外側に用意し、マウスイン時とマウスアウト時の処理を分けて書きます。 これでマウスアウト時にも正しく値を取得できるようになり、期待通りに動作するようになりました。最後に、すべての項目で動作するように冒頭のスクリプトのように書き換えます。 【参考になるページ】 プログラミング関係で検索をかけるコツとして、日本語よりも英語で検索かけたほうが正確な情報が見つかりやすいです。今回は「jquery multiple divs with same id」や「jquery hover pass variable」などのキーワードで検索をかけてみました。jquery multiまで打つと検索キーワードの候補が出てきますので、ほとんどの場合思いついた適当な英語で大丈夫です。 https://teamtreehouse.com/community/using-jquery … http://stackoverflow.com/questions/4287324/jquer … http://stackoverflow.com/questions/4287324/jquer … 【もっと賢い書き方】 ②のコードでは、マウスアウト時に文字列「hover」の先頭にドット「.」がつかないことと、desc-1とhoverの間に空白があることが問題でした。そこで、javascriptでclsに代入された文字列「desc-1 hover」を「.desc-1.hover」に変換してしまいます。このやり方の方がスマートな反面、正規表現が理解できた人でないと理解できないので今回は採用しませんでした。どちらのコードを採用するかは、自分や一緒に働く人の技術レベルによって判断してください。興味があれば以下を参考に書きなおしてみてください。 https://developer.mozilla.org/ja/docs/Web/JavaSc … 【もっと効率のいい書き方】 冒頭に示した最終的なコードは、2度要素を調べているため若干の無駄があります。以下のようにマウスインした時に文字列ではなく要素そのものを変数に代入するようにすると、マウスアウト時に再度要素を調べ直さなくて済むため無駄がありません。 var $elm; $(this).hover(function () { // マウスが入った時の処理 var cls = $(this).attr('class'); $elm = $('.' + cls); $elm.toggleClass('hover'); }, function () { // マウスが出た時の処理 $elm.toggleClass('hover'); }); });
動作は確認していないので申し訳ないですが、以下の3点に留意すれば解決できそうな気がします。 1）すでにANo1様がご指摘のように、ご質問のスクリプトではjQueryオブジェクトとDOM要素の混乱が見られます。 jQueryのメソッドにはjQueryオブジェクトを、DOMのメソッドにはDOM要素を用いるようにしてください。 2）新しいドキュメントを読み込みますので、スクリプトの実行のタイミングによっては、読込み終了前に実行される可能性があります。 念のため、document.readyState などで状況を確認しながら処理を行うようにした方が安全かと思います。 https://developer.mozilla.org/ja/docs/Web/API/Do … 3）ご提示の記述方法だと、異なるドキュメント間で要素の移動（orコピー）を行っています。 この場合はimportNodeやadoptNodeなどを利用する方が良さそうです。 https://developer.mozilla.org/ja/docs/Web/API/Do … https://developer.mozilla.org/ja/docs/Web/API/Do … IEは対応していなかったようですが、最近のものは対応しているのかも https://msdn.microsoft.com/en-us/library/ms76752 … https://msdn.microsoft.com/en-us/library/ff97520 … 一方、ご質問文でご提示の内容ならば、要素の移動などせずに子ウィンドウのドキュメント上で直接要素の生成などを行うことで、上記の移動等は不要にできるものと思います。
すでに、ANo2様、Ano3様が丁寧な回答をなさっていると思いますが・・・ ＞具体的に、どこに、どのように書き込みますか？ スクリプトを使おうと思ったら、細かなことはご自分で調べたり確認したりできないと、常に一から十まで人に聞かなければできないことになってしまいます。 それって、「作る」のではなく「作ってもらう」ということを意味しています。 javascriptの処理は、画面の表示に関連がある場合が多いので、HTMLやCSSとも関係が深いため、HTMLやCSSも含めて全てを「作ってもらう」ことになりかねません。 まずは、ご自分で調べる方法を学ばれるのがよろしいかと思います。 以下、一例です。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> table{ margin: 20px; width: 200px; height:200px; border:1px solid #AAA; } </style> </head> <body> <table><tr><td>他の表</td></tr></table> <table id="hoge"> <tr><td>対象の表</td></tr> </table> <table><tr><td>他の表</td></tr></table> <script type="text/javascript"> var h = new Date().getHours(); //時間帯に対応した背景画像のアドレスを代入 var u = (5<=h && h<17)? "./img/A.jpg":"./img/P.jpg"; document.getElementById("hoge").style.backgroundImage = "url(" + u + ")"; </script> </body> </html>
http://oshiete.goo.ne.jp/qa/9084940.html で document.write("<b>Hello World!!</b>"); を実行可能な事を確認しました。 about:home や about:blank では使えませんが。 # Re: usui-2015さん
＞タブキーを押してもフォーカスが移動しないのは ブラウザによって微妙に誤差があるみたいですね とりあえずblur時に消し込みするとか <script> window.onload=function(){doFocus("x04");} function doFocus(aid){ document.getElementById(aid).focus(); } try{ document.addEventListener ('blur',function(e){myfunc(e)},true); document.addEventListener ('focus',function(e){myfunc(e)},true); }catch(e){ document.attachEvent('onblur',function(e){myfunc(e)}); document.attachEvent('onfocus',function(e){myfunc(e)}); } function myfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="A"){ if(e.type=="focus") t.style.outlineStyle=""; if(e.type=="blur") t.style.outlineStyle="none"; } } </script> <OL> <li><a id="x01" href="#" tabindex="1">150908-1504</a></li> <li><a id="x02" href="#" tabindex="2">150908-1515</a></li> <li><a id="x03" href="#" tabindex="3">150908-1518</a></li> <li><a id="x04" href="#" tabindex="4">150908-1811</a></li> </OL> その他一応問題を切り分けるために、以下対処しておいた方がよいでしょう ・数字だけのidはつかわない ・onfocusのような競合しそうな名前はつかわない ・idのような変数名は競合をさけるためつかわない ・タブで移動を想定するならtabindexを設定する
document.links[len-1] は、リンクオブジェクトです。リンクオブジェクトにsplitメソッドはないので、17行目がエラーになります。 リンクの文字列を得たい場合は、document.links[len-1].text にしてください。 ただ、150908-1811 を / でsplitしても意味ないと思いますけど。
ANo2です。 ご質問のHTMLはそのままで、for文を使わない例も・・ 画像のidから、divの番号を作成しています。 ※ top01→slide1と0が消えるのがちょっと感じ悪いですが・・・ ※ この方法でも、数が変わってもスクリプトはそのままでいけるかと。 $(function(){ $("img[id^='top']").on("click", function(){ $("#slide" + $(this).attr("id").replace(/top(0)?/,"")).slideToggle(); $(this).toggleClass("active"); }); });
ちなみにライブラリとかつかわなくてもpostで送りっぱなしでよいならこんな感じ <script> function createXMLHttpRequest(){ if( window.XMLHttpRequest ){ return new XMLHttpRequest(); }else if( window.ActiveXObject ){ try{ return new ActiveXObject( "Msxml2.XMLHTTP" ); }catch(e){ return new ActiveXObject( "Microsoft.XMLHTTP" ); } } return null; } function sendPostData( serverURL, param){ var ajax = createXMLHttpRequest(); ajax.open( "POST", serverURL ); ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); //「追加」はここ ajax.send( param ); } function test(){ var hiscore=100; sendPostData("HiscoreSave.php","name="+hiscore); } </script> <input type="button" value="test" onclick="test()"> 戻り値をつかわないとユーザーが不安になるので「追加」のところに ajax.onreadystatechange=function(){ if(( ajax.readyState == 4 ) && ( ajax.status == 200 )){ document.getElementById("hoge").innerHTML=ajax.responseText; } } のような記述をしておくと更新されたことがわかってベター
確認しました。 common.jsの４6行目から５１行目の $(function(){ $(".scroll a").click(function(){ $('html,body').animate({ scrollTop: $($(this).attr("href")).offset().top }, 'slow','swing'); return false; }) }); これが犯人な気がします。 ;が足りないのと、移動先の取得に不備があるので、スマホのブラウザだと動かなくなる。。。おそらく $(function(){ $('.scroll a[href^=#]').click(function() { // アンカーの値取得 var href= $(this).attr("href"); // 移動先を取得 var target = $(href == "#" || href == "" ? 'html' : href); // 移動先を数値で取得 var position = target.offset().top; // スムーススクロール $('body,html').animate({scrollTop:position}, 'slow', 'swing'); return false; }); }); これに書き換えて、ダメだったらお手上げです。 一応、この違いで私もサンプルファイル作ってテストしてみたのですが、 前者のソースだとPC画面からは動くけど、スマホだとダメでした。 ただ怖いので、書き換え前のファイルはバックアップとってからためしてください。
その要件ならば、書き換えるべきは HTML 構造ではなくスタイルだと思うので、 スタイルシートを切り替えるなり、クラス名を切り替えるなりの方式をオススメします。 それでもやりたいならば、DOM を操作する手順で実現できます。 var A = function(a){return Array.prototype.slice.apply(a)}; var Q = function(e,s){return A(e.querySelectorAll(s))}; function 二つに分ける() { _ Q(document, '.page_wrap').filter(function(e){ _ _ return Q(e, '.right').length; _ }).forEach(function(e){ _ _ var sect = document.createElement('div'); _ _ sect.className = e.className + ' sect'; _ _ e.parentNode.insertBefore(sect, e.nextSibling); _ _ Q(e, '.right').forEach(function(g){sect.appendChild(g)}); _ }); } function 一つに纏める() { _ Q(document, '.page_wrap.sect').forEach(function(e){ _ _ var origin = e.previousElementSibling; _ _ Q(e, '.right').forEach(function(g){origin.appendChild(g)}); _ _ e.parentNode.removeChild(e); _ }); }
追加 「メール」はWindows10のメーラーですか？（ThunderbirdやWindows　Live Mail2012などフリーソフトのメーラーですか？）
formがPOSTを指定しているのにわざわざスクリプトでGETにする必要があるのでしょうか？ どうしてもというならformのmethod自体をGETに変更したうえで普通にsubmitする方が現実的では？ とくにjavascriptにはurlエンコードのまっとうに使える機能がないので 命題のようなやり方は、かなり無理があるでしょう。
ざっと拝見しただけですが・・・ 例えば、ご提示のautoLink関数に、引数として文字列 　なんてったってhttp://www.google.comだよね を送った場合、返される文字列は以下のようになりますよね？ 　なんてったって<a href="javascript:void(0);" onclick="window.open("http://www.google.com", "", "")" target="_blank">http://www.google.com</a>だよね これって、window.openのダブルクォーテーションの中でダブルクォーテーションを使っている形となってしまっているので、ブラウザに正しく解釈されないものと推測します。 autoLinkが返す値をエスケープした文字列となるようにするか、あるいはシングルクォーテーションの形にしておけばよろしいのではないでしょうか？ 例えば return message .replace( /((http|https|ftp):\/\/[\w?=&.\/-;#~%-]+(?![\w\s?&.\/;#~%"=-]*>))/g, '<a href="javascript:void(0);" onclick="window.open(\'$1\', \'\', \'\')" target="_blank">$1</a>'); とか。
スクリプトをちゃんと見ていませんが、サイドメニューのアコーディオン動作を項目の数などに影響されずに記述したいということでしょうか？ 勝手なイメージでご提示のサイトとは関係なく記述したので、動作が若干異なるかもしれませんが、こんなのでは？ ※　構造は変わらないということなので、基本的にそのままです。 ※　スクリプトで必要とするid等は、包含要素のclass="acoordion"のみです。 ※　CSSはテストのための最小限でいい加減なので、作り直してください。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .accordion, .accordion *{ padding: 0; margin: 0; } .accordion ul, .accordion li { list-style-type: none; } .accordion dt, .accordion ul li { width:250px; height:50px; border:1px solid #8AC; } .accordion>dt { background-color: #8DE; } .accordion dl dt { color:#FFF; background-color: #8AC; } </style> <script type="text/javascript" src="http://www.google.com/jsapi" ></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ $(".accordion dl>dt").click(function(){ $(this).next("dd").slideToggle(); }).next("dd").hide(); }); </script> </head> <body> <dl class="accordion"> <dt><img src="hoeg.gif" width="250" height="50" alt="シャンプー"></dt> <dd> <dl> <dt>シャンプーについて</dt> <dd> <ul> <li><a href="#">おすすめシャンプー、</a></li> <li><a href="#">たまにはシャンプーも香りで選んでみませんか？</a></li> </ul> </dd> </dl> </dd> <dd> <dl> <dt>ノンシリコンシャンプー</dt> <dd> <ul> <li><a href="#">今だから知りたいノンシリコンシャンプーのあれこれ!?</a></li> <li><a href="#">ノンシリコンシャンプーとその効果まとめ</a></li> <li><a href="#">ノンシリコンシャンプーと髪の関係</a></li> <li><a href="#">ノンシリコンシャンプーできしみや枝毛などに効果はあるのか？疑問に迫る</a></li> <li><a href="#">ノンシリコンシャンプーの各種メリット</a></li> </ul> </dd> </dl> </dd> <dd> <dl> <dt>トリートメント</dt> <dd> <ul> <li><a href="#">トリートメントの使い方と効果</a></li> <li><a href="#">トリートメントの正しい知識を身につけ、美しく健康な髪の毛に！</a></li> <li><a href="#">トリートメントを選ぶ理由</a></li> <li><a href="#">トリートメントで髪を変える!!</a></li> </ul> </dd> </dl> </dd> <dd> <dl> <dt>アミノ酸シャンプー</dt> <dd> <ul> <li><a href="#">アミノ酸シャンプーの効果と正しい使い方</a></li> <li><a href="#">各種の頭髪・頭皮トラブルに対するアミノ酸シャンプーの効果</a></li> <li><a href="#">薄毛や育毛に効果的なアミノ酸シャンプーで髪の悩みから解放！</a></li> <li><a href="#">乾燥肌、きしみ、くせ毛のトラブルにも効果的なアミノ酸シャンプー選び</a></li> </ul> </dd> </dl> </dd> </dl> </body> </html>
こんにちは。 Bloggerはまったく存じませんが、ご質問文によればhead内の編集ができないということですよね？ ご提示の参考サイトでは、順を追って作り方が解説されていますが、現状は「3」の表示まではできているということでよいでしょうか？ そうでない場合は、HTMLlまたはCSS部分で問題がでている可能性があります。 http://allabout.co.jp/gm/gc/23969/3/ 「3まではできているものとして、 <script>タグは<body>内に記述しても動作するはずですので、<head>内が編集できないのであれば<body>内に移動して記述してみてください。 それでもうまくいかない場合は、記述したものがなんらかの編集を受けて出力されている可能性がありますので、作成したページを表示した状態で、「ソースの表示」などを利用して、実際の（=最終の）ソースがどのようになっているかを確認なさってみてください。 どこかに違うところができてしまっているのではないかと推測します・・・
おそらく下記がまざった不都合かと ・取得タイプが GET の場合、パラメータ cache を true にしないとキャッシュで取得値が毎回同じになる。 ・データタイプが html とあるのに、http://tamis.co/points.cgi が返している値が単なるテキストで、文字列に、HTMLエンコード対象文字が含まれている。データタイプを（誤って）htmlとしているため、ブラウザによって誤動作する可能性がある。 ・取得メソッドを POST にするか、GET のままならば cache を true にする。 ・データタイプを json として、json データを返却する。 ・テキストのままならば、区切子に変な記号を使わない
たぶん希望の動きをするプラグインがどこかにないかな？という質問なのでしょうが、これくらいなら、cssとの組み合わせでできますよ。 【HTML】 <html> <body> <div class="h_box"> <header>ヘッダーの中身のソース</header> </div> </body> </html> 【CSS】 .h_box{ position: fixed; width: 100%; top: 0px; left:0; height: 50px; /*ヘッダーの高さなので適宜*/ } header{ display: block; height: 50px; /*ヘッダーの高さなので適宜*/ position: fixed; width: 100%; top: 0; transition: all 1s ease; } header.hide{top:-50px;/*ヘッダーの高さ分上に隠す数値なので適宜*/} 【jQuery】 <script> $(window).scroll(function(){ if($(this).scrollTop() > 50){ $("header").addClass("hide"); $(".h_box").hover(function(){ $("header").removeClass("hide"); },function(){ $("header").addClass("hide"); }); }else{ $("header").removeClass("hide"); $(".h_box").hover(function(){ $("header").removeClass("hide"); },function(){ $("header").removeClass("hide"); }); } }); </script> こんな感じで私はできました。 elseのところにhoverメソッドを入れないと、何故か50未満のスクロールでも.addClass("hide");が効いてしまうので、まどろっこしいのですが、入れました。 もっとスマートにできるかもですが、とりあえずこれで希望の動きはまかなえると思います。 headerの呼び出し回数が多いので代入したほうがよいですかね。。。 あと個人的にはこれ、UIとして使いやすいと思えないんですけど… 頑張ってください。
CSS３と簡単なjqueryでできますよ。 【HTML】 <div id="wrapper"> <div class="main"> コンテンツ内容 </div> <footer> <div class="trigger"></div> <div class="f_inner"> <div class="f_01"><a href="#">フッター上部1行</a></div> <div class="f_02"> <a href="#">フッター中身</a><br> <a href="#">フッター中身</a><br> <a href="#">フッター中身</a><br> <a href="#">フッター中身</a><br> <a href="#">フッター中身</a><br> </div> </div> </footer> </div> 【CSS】 /*フッター固定*/ html,body{ height: 100%;} #wrapper{ position: relative; min-height: 100%; height: auto !important; height: 100%; } .main{padding-bottom: 150px; /*フッター高さなので適宜*/} footer{ max-height: 150px;/*フッター高さなので適宜*/ position: absolute; bottom:0; width: 100%; } /*フッター中身　数値は適宜*/ .trigger{ cursor: pointer; width: 30px; height: 30px; margin: 0 auto; } .f_inner{ overflow: hidden; height: 30px;/*上の１行分だけ見せる高さ*/ transition: all 0.5s ease;} .f_inner.active {height: 150px;/*全部表示*/} .active .f_01{display: none;} .f_02{padding-top: 50px;} 【jQuery】 説明：クラスtriggerクリックで.f_innerの表示切り替えのためのクラスactiveを追加したり削除したり <script> $(function(){ $(".trigger").click(function(){ $(".f_inner").toggleClass("active"); }); }); </script> 見た目とかは整えて貰えれば。 動きはこれで動くと思います。 アニメーション時の動きがただのeaseが嫌な場合も好きな動きに変えてください。 頑張ってください
ANo2です。 目的がわからなかったので、前回のような回答をしましたが、ANo2でもお断りしましたようにあくまでもスクリプトレベルでのイベントですので、実際のタブキー押し下げと全く同じというわけではありません。 追加でご質問の、 　『この場合は話を単純化して例えばタブキーを4回打鍵をした 　　場合は当然に４個目のボタンにフォーカスが移ります。』 ということがなさりたいのであるなら・・・ window.onload = function(){ 　document.getElementsByTagName("input")[3].focus(); } みたいなことで、よいのではないでしょうか？
なさりたいことがイマイチよくわかりませんが・・・ 以下のように若干の記述修正をして実行すれば、 　count2=0,　10,11,12・・・ として循環が続きます。 （ご質問のように止まることはないはずと思います） ＞ kansu1の中で、count2=0;としています kannsu1で.setIntervalでkansu2を呼び出している限りcount2は増加し続けます。 実は、count2>9になるまで10mmsecで10回繰り返すという制御にどういう意味があるのかよくわかりませんが・・・ javascriptのsetTimeoutやsetIntervalにそのレベルでの時間の正確さを求めても・・・という気がします。 ＜ご参考まで＞ var count1=0; var count2=0; var stid, siid; kansu1(); function kansu1(){ 　window.clearTimeout(stid); 　count1++; 　alert(count1 + " / " + count2); 　siid = window.setInterval(kansu2, 10); } function kansu2(){ 　count2++; //中略 　if(count2>9){ 　　window.clearInterval(siid); 　　stid = setTimeout(kansu1, 1000); 　} }
そういうものです。アンカーはiframeで使えません。 window.scrollToでスクロールさせることで対応可能です。 下記を参考にしてください。 http://sugutsukaeru.jp/support/320/
ANo2です No2で例に挙げたライブラリのうち、Ｄ3の例で地図の色を塗り替えているものがありましたので、ご参考まで。 ご質問の例と多少なりとも共通点があるような気がします。 http://bl.ocks.org/mbostock/4183330
何かいいプラグインがあるのかもしれませんが自力でやるとしたら・・ １．PHPでデータを取得、（行：日付、列：商品）の配列、日付と客の配列 ２．table、またはdiv等で表を作成する。tableは遅いのでdiv等にfloatを適用して作成するほうが良いかも ３．作成した表に「日付と客の配列」のデータを適用する。 　　→２で置いた要素を書き換えるもよし、上に重ねるもよし ・ドラッグ選択はmouseon、mouseupイベントでカーソル位置の要素を特定し、データを反映 ・月またぎは「翌週を表示」ボタンなどを設置してデータを再取得すると良さそう 意図している回答と違っていたらすみません。
デモページをざっと見ただけですが・・・ オリジナルのものはテーブル表記のカレンダーになっていて、特別複雑な指定はしていないようです。 　table - tbody - tr - td - div という構成になっていて、セル内のdivにだけCSSで指定をしているようですね。（あとは、ブラウザの編集に任せているというかたち） 直接サイズを指定してはおらず、divのフォントサイズ10pxでパディングを1px 15pxにしているようです。 単純に左右のパディングを0にすればその分だけ横幅は縮まります。 さらに小さくしたければ、セルに直接width、heightを指定すればそのサイズになるでしょう。 ただし、表示内容がはみ出す可能性があり、その際は表示が優先されますので、表示内容を調節するか、あるいはoverflow:hiddenなどで無視するようにするとか・・・ 全体のテーブルサイズだけ指定するとあとは調節してくれるといのが便利そうな気もしますが、文字サイズをどのように設定しておくかなどがちょいと問題になりそうなので、結局、とっちもこっちもかな。
ANo1、2です。 ＞モーダルというのが別ウィンドウではなくて、下記のようにソースが書かれています あらら・・・ いわゆる「モーダルウィンドウ」ではないのですね。 まるっきりの勘違い・・・というかわかりにくいご質問。 ＞ここが動きが近いです。 その参考サイトに作成方法が丁寧に書いてありますが、ここの限られた回答欄に私が書くよりもよほど情報量が多いはずと思います。 ＞localhashではうまく動きませんでした。。。 ページ内のコンテンツなので、別ウィンドウの時とは考え方がまるきり違います。 クリックによってその内容の表示/非表示を制御したり、重ねて表示するために位置の調整などが必要になります。 （詳しくは、ご提示の参考サイトをご覧になれば解説してあると思います） スクリプト等を自作するのが面倒だというのであれば、lightbox風のライブラリは数多く作成されていますので、気に入ったものをご利用なさるのが簡単かと思います。 大抵のものがinlineコンテンツや外部ファイルの読込にも対応していると思います。 例えば 　https://github.com/mjackson/shadowbox 　http://fancyapps.com/fancybox/
ちゃんとやるならajaxで定期的にボタンを取りに行くことです。 たんにjavascriptで時間を判断するとローカルPCの時間が適用されるため 意図しない誤差が生じます サーバー側で時間を管理し、その範囲内でサービスを提供するのが賢明です （よくわからないのは静的ページでセールはできるのでしょうか？）
<img> の中に、切り替わる画像URLを列挙できる、汎用的なサンプル <script> window.addEventListener('click', function(ev){ var e = ev.target; while (e && !/\bclickflap\b/.test(e.className)) e = e.parentNode; var flap = function(img) { var list = img.getAttribute('data-list').split(/\s*,\s*/), n = list.length; var point = 0, src = img.getAttribute('src'); for (var i=0; i<n; i++) if (src == list[i]) point = (i + 1)%n; img.src = list[point]; }; if (e && e.tagName == 'IMG') ev.preventDefault(), flap(e); if (e && e.tagName == 'A' && e.hash) ev.preventDefault(), flap(document.getElementById(e.hash.substr(1))); }, false); </script> A画像クリックで、B画像が切り替わる例 <a class=clickflap href=#gazou1><img src=A.png></a><img id=gazou1 src=B1.png data-list="B1.png, B2.png"> <a class=clickflap href=#gazou2><img src=A.png></a><img id=gazou2 src=B3.png data-list="B3.png, B4.png, images/B5.png"> B画像クリックで、B画像が切り替わる例 <img src=B1.png class=clickflap data-list="B1.png, B2.png"> <img src=B4.png class=clickflap data-list="B3.png, B4.png, images/B5.png">
こんにちは。 sortableを使ったことが無いし、検証もしていませんので確実ではありませんが・・・ ajaxで置き換えている、#ajax要素の中に#sortableの要素がある構成になっているのでしょうか。 同じタグやidの要素で置き換えたつもりでも、ブラウザ側では、「以前の要素を削除して、新しい（別の）要素を追加した」ものとして扱われます。 それなので、最初に定義したsortableの機能は削除された要素に対して定義されていて、新しく追加したものには何の定義もされていないことになります。 ・・・ということが原因であることは、わかっていらっしゃると思います。 対応として思いつくのは2通りの方法があります。 1）元の要素構造をそのままにしておく 　要は、html()メソッドでバッサリ入れ替えてしまうのではなく、各セルの内容だけを順次書き換える方法です。 　これなら、最初に定義されている機能は生きているはずなので、そのままで使えると思います。 　場合によっては行ごとバッサリ入れ替えてもいけるかもしれません。 （sortableの内部処理がどのようになっているかによるので、正確にはわかりませんが） 2）書き換えた時に再定義する（ご質問ではこちらをお求めのようですが） 　基本的に初期設定と同じスクリプトを、書き換え後に実行すれば良いはずです。 　2度同じ記述をするのが嫌であれば、sortableの設定部分を関数化しておいて、ロード時、書き換え時に呼び出すようにすれば良いでしょう。 　ただし、以前の定義がそのまま蓄積されてしまう（使われることはないのですが）可能性がありますので、書き換え前にsortableの以前の機能をキャンセルしておく方が良いと思われます。 　apiのメソッドを見てみると、幸いdestroyメソッドが用意されているようです。 http://api.jqueryui.com/sortable/ ＞　　$("#ajax").html(data); 　の前に一旦キャンセルをして、書き換え後に再定義の関数を呼び出すといった手順で可能ではないかと思います。
<script type='text/javascript'　src="script.js"></script> のsrcの前に全角スペースが紛れ込んでいます。 半角にすればちゃんとalertがでますよ。
こんな感じかな。 var reg = /^(0[5789]0\d{8}|0[1-9][1-9]\d{7})$/ - 050, 070, 080, 090 で始まる場合は、数字 11桁。 - 0 で始まって、2桁目が 1～9 の場合は、3桁目も 1～9 で、数字 10桁。 ＃ 携帯は 12桁じゃなくて、11桁ですよね　:-)
match()はヒットすればその文字、しなければnullを返すのはわかりますよね？ document.write('b'.match(/[^a-c]/));//null document.write('b'.match(/[^A-C]/));//b ＞これをtrueとfalseで分岐させたい だから「===null」でチェックしているんでしょ？ (この場合は「!==null」の方がよいかも) document.write('b'.match(/[^a-c]/)!==null);//false document.write('b'.match(/[^A-C]/)!==null);//true
インクリメンタルサーチっぽく実現 <script> window.addEventListener('DOMContentLoaded', function(){ var timerId = 0, preValue = '', field = document.querySelector('#quick-input'); function selectItems() { if (timerId) window.clearTimeout(timerId), timerId = 0; var a = field.value.trim(); if (preValue == a) return; else preValue = a; Array.prototype.slice.apply(document.querySelectorAll('ol#quick-items > li')).forEach(function(e){ e.style.display = (a.length>0&&e.textContent.indexOf(a)<0)? 'none': '' }); } field.addEventListener('keyup',function(ev){if (timerId) window.clearTimeout(timerId); timerId = setTimeout(selectItems, 1000)},false); field.form.addEventListener('submit',function(ev){ev.preventDefault();selectItems()},false); }, false); </script> <article> <p>送る言葉 <form name=quick><input type=text id=quick-input></form> <ol id=quick-items> <li>going my way <li>なせばなる なさねばならぬ <li>人の行く 裏に道あり 花の山 <li>のんびり行こうよ 人生は <li>美味しいお菓子を分けてあげたい友達 </ol> </article>
ANo1です。 私の勘違いがありましたので、まず訂正です。 速度が変わることはありませんね。 ごめんなさい。忘れてください。 ＞画面から消えてくれません。 スタイルでの指定は、ご提示のソースの場合はあまり意味がありません。なぜなら、onloadで直ぐにスクリプトで位置を制御し始めるからです。 スクリプト内の初期値も、同様に、window外に表示するようにしておけばよろしいと思います。 ＞早く動いたり微妙に震えていたりと これに関しては座標移動の計算ロジックによるところが大きいです。 計算方法とそれによる移動量を再チェックしてみてください。
ボタンをクリックした時に、両方のイベントが発生して両方の処理がおこなわれてしまうのが、ややこしくしている元ですが・・・ 実は、要素の包含関係によって、イベントの発生順序が決まっています。 http://vird2002.s8.xrea.com/javascript/DOM-Level … なので、button → document の順だと思っていたら、documentの方が上位要素なのに先に実行されていますね。 おやっ、と思って良く見たら設定がmousedownとclickとで異なっているので、mousedownイベントが先に起こり、続いてclickイベントが起きているからですね。 両方をクリックにしてみれば、処理順が逆転するので、お悩みが何もせずに解決することがわかるかと思います。 さて、イベント発生はそのままにしておくとして・・・ 対処法の一つとしては、質問者様がなさろうとしていたように、1個前の値を変数に覚えさせておいて、それを表示する方法が考えられます。 ご提示のスクリプトだと、残念ながらその意図の通りにはなっていません。 順序をよく考えてみれば、 　・値を記入する時に、記入する前に、前の値を変数に覚えさせておく 　・ボタンクリックの際は、常に（変数にある）古い値を表示 というような要領で行えばよろしいかと思います。 そうすると、こんな感じ。 var oldValue; //前の値を記憶するための変数 document.onmousedown = function(e){ oldValue = document.xx.client_x.value; document.xx.client_x.value = e.clientX; } function CL1(){ alert(oldValue); } ところで、実際のところどのようなことをなさりたいのかはよくわかりませんが、ややこしくなっている原因は上記のように重複した処理が別個に動作することにあります。 別の対策方法として、ボタンを特別に扱って ・documentのclick（やmousedown）の処理で、ボタンを押したときは何もしないようにする。 ことでも対処できるかと思います。（ボタンを押したときは値が変わらなくなる） イベント発生元の要素は、event.targetなどで取得することができますので、これによって処理を振り分けることで実現できます。 どうせ振り分けるなら、そこでボタンを押したときの処理を行うようにしてしまえば、ボタンクリックのイベント処理を削除できますね。 画面上のclick（やmousedown）は全てdocument要素で拾えますので、ここで包含的に処理することで、個別の処理する場合の順序などを考えなくても済むようになります。 そんな考え方の例（若干動作が変わっていますが） ※　ボタンを識別し易くするためにidを追加しています。 <!doctype html> <html lang="ja"> <head> <script> document.onclick = function(e){ var t = e.target, elm = document.xx.client_x if(t.id == "button1") alert(elm.value); else elm.value = e.clientX; } </script> </head> <body> <form name="xx"> <input type="text" name="client_x"> <input type="button" id="button1" value="CLICK!"> </form> </body> </html> 実は、上記のものでは動作しないブラウザがあります。 一つは、要素の指定の方法。 document.xx.client_x　のような方法はうまくいかない場合があります。 idやclassやtagNameを利用して、getElementById()やquerySelector()などで特定する方法をお勧めします。 もう一つはイベントの設定とイベント要素の取得 document.onclick = function(e){　～～ では、eにイベント要素が返されないブラウザがあったり、event.targetやevent.clientXでは意図する内容が取得できない場合があります。 これらは、ブラウザごとの個別の仕様によるバラツキが直接の原因なので、本質的ではないとはいうものの、実際には対処が必要で、面倒な要因の一つになっていると言えます。 ・・・って、ここまで書いている間に、ANo1様がブラウザごとの差を吸収する回答をなさっているようですので、このあたりに関してはそちらを参考になさってください。 長文失礼。
自分のアカウントでTwitterにログインして下記のページから検索ウィジェットを作成します。 https://twitter.com/settings/widgets/new/search 画面内の「検索クエリ」テキストボックスで、ハッシュタグと対象アカウントを設定すればやりたいことを実現できますよ。 例）映画.com(@eigacom）のアカウントのツイートでハッシュタグ"#映画"を含むツイートを表示したい場合 from:eigacom #映画 ※アカウント名を指定する時は"@"をつけないでください。日本語以外は全て半角英数字で入力してください
とりあえず抜け番を埋めない方が現実的なのでこんな感じでどうでしょ？ （submitしたあと配列でデータを受け取れているのがわかると思います） <script> try{ document.addEventListener ('click',function(e){clickfunc(e)},true); }catch(e){ document.attachEvent('onclick',function(e){clickfunc(e)}); } function clickfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="INPUT" && t.type=="button"){ if(t.name=="del") del(t); if(t.name=="add") add(); } } function getNextItemNumber(){ var t=document.getElementById("t0"); var inp=t.getElementsByTagName("input"); var maxNum=0; var reg=new RegExp("^item\\[(\\d+)\\]$"); for(var i=0;i<inp.length;i++){ if(inp[i].name.match(reg)){ var num=parseInt(RegExp.$1); if(maxNum<num) maxNum=num; } } return maxNum+1; } function del(obj){ var p=obj.parentNode; while(p.nodeName!="TR"){ p=p.parentNode; } p.parentNode.removeChild(p); } function addInput(node,txt,name,num){ node.appendChild(document.createTextNode(txt)); var inp=document.createElement("input"); inp.setAttribute("type","text"); inp.setAttribute("name",name+"["+num+"]"); inp.setAttribute("id",name+"_"+num); node.appendChild(inp); node.appendChild(document.createTextNode("\n")); } function add(){ var num=getNextItemNumber(); var t=document.getElementById("t0"); var td=document.createElement("td"); addInput(td,"注文種類:","item",num); addInput(td,"サイズ:","size",num); addInput(td,"個数:","itemnum",num); var inp=document.createElement("input"); inp.setAttribute("type","button"); inp.setAttribute("name","del"); inp.setAttribute("value","行削除"); td.appendChild(inp); var tr=document.createElement("tr"); tr.appendChild(td); var tbody=t.getElementsByTagName("tbody")[0]; if(tbody) tbody.appendChild(tr); else t.appendChild(tr); } </script> <form mothod="get"> <input type="button" value="行追加" name="add"> <input type="submit" value="送信"> <table id="t0"> <tr><td> 注文種類:<input type="text" name="item[0]" id="item_0"> サイズ:<input type="text" name="size[0]" id="size_0"> 個数:<input type="text" name="itemnum[0]" id="itemnum_0"> <input type="button" value="行削除" name="del"> </td></tr> </table> </form> <?php print_r($_GET); ?>
普通だとリンクをクリックすればページ遷移するので、ご質問の処理が有効なのかどうか不明ですが・・・ それはおいておいて、リンクだけ除きたいのであれば、クリックイベントの発生要素を調べて、リンク要素なら何もしないという処理にしてはいかがでしょうか？ （$はjQueryと仮定しています） $(document).on("click", ".chk", function (evt){ 　if(evt.target.nodeName == "A") return; //行いたい処理の内容を以下に記述 });
JavaScript 言語の文法やオブジェクトの説明 https://developer.mozilla.org/ja/docs/Web/JavaSc … http://www.oreilly.co.jp/books/9784873115733/ JavaScript 言語を規格化した ECMAScript の非常に厳密な定義 http://www.ecma-international.org/ecma-262/6.0/ Web ブラウザが提供するオブジェクトの説明 - Firefox の場合 https://developer.mozilla.org/ja/docs/Web/Refere … <script src> で読み込めば使える、ライブラリ jQuery が提供するオブジェクトの説明 http://api.jquery.com/
slick.jsのサイト見たところ、slick-theme.cssをいじればすべてできそうです。 前へボタンは　.slick-prev 次へボタンは　.slick-next 下のドット状のページャーは　.slick-dots 以下 なので該当のクラスのCSSを良いように変更すればできます。 質問の１は .slick-slider .slick-prev ,.slick-slider .slick-next{ opacity:0; cursor: default; } .slick-slider:hover .slick-prev ,.slick-slider:hover .slick-next{ opacity:1; cursor: pointer; } というふうな感じで書けば良いのかなと思います。 質問２はちょっとここで細かくは説明するには無理があります。 難しいとかでなく、デザインのCSSどうするかはご自分で頑張ってもらうしかないので。slick-theme.cssをすべて見て修正してください。 あと、質問の文章から思ったのですが、質問者様はコーディングの環境整っていますか？ FirefoxとFirebugがあれば、プラグインが書き足した全体のソースが見れるので、 普通に自分で作ったHTMLと同じように、CSSでどうデザインするかなどわかってくると思います。 がんばってください。
状況と質問の意図がよくわからないのですが javascriptでメールはおくれないと思います
いずれにしろ、どこかに状態を識別できるデータを残しておく必要がありますが、方法はいろいろあるかと。 クライアント側で処理するなら 　・クッキーを利用する　……　（これは×との条件） 　・DOM Storageを利用する 　・URL（クエリ部などを利用） などが考えられると思います。 でも、ご提示のサンプルではリンク先がみな個別のアドレスになっているようですので、ＵＲＬそのものを識別用に使うことも可能ですね。 ・・・って、よく見れば、『 ＵＲＬと同じリンクにactiveクラスを設定する 』といったことをすでにやっているようですから、それがちゃんと動作しているのなら、そこで特定された要素の親カテゴリだけ表示するようにしてあげるのが手っ取り早いのではないでしょうか？ 一方で、HTMLの出力元はみなphpのようですので（個別ファイルなのか一括対応なのかわかりませんが）、URLに応じてサーバ側で先にHTMLソースに設定（クラス設定などを利用）しておくといったやり方のほうがスマートかもしれませんね。
URLとJavaScript、どちらが悪いのかまずは問題の整理をした方が良いかと思います。 最初にURLだけをメモ帳などに作成して、ブラウザのアドレスバーに入力してみてください。 例）https://twitter.com/intent/tweet?text=テスト本文&hashtags=あいうえお&via=ingress&url=http://google.co.jp 想定通りのツイート内容、ハッシュタグ、アカウント、URLが表示されますか？ 表示されないのであればURLに問題があります。パラメータ等をもう一度確認してみましょう。 また、書かれている内容を見る限りリツイートをしたいように見受けられます。 リツイートをしたい場合は利用するURLが異なりますので、下記の公式サイトを確認してみてください。 https://dev.twitter.com/web/intents#retweet-intent hrefにバッククォートが書かれているのも気になります。 下記のように本文やURLをバッククォートで括らずにそのまま記述してください。 <a href="https://twitter.com/intent/tweet?text=テスト本文&hashtags=あいうえお&via=ingress&url=http://google.co.jp" target="_blank">テストリンク</a> サンプルコードを以下に示します。 参考になさってください。 <a href="https://twitter.com/intent/tweet?text=テスト本文&hashtags=あいうえお&via=ingress&url=http://google.co.jp" onClick="window.open(encodeURI(decodeURI(this.href)), 'tweetwindow', 'width=550, height=450, personalbar=0, toolbar=0, scrollbars=1, resizable=1'); return false;">テストリンク3</a>
＞IE11だと削除したはずのファイルが ＞アップロードされてしまい、エラーにすることができません。 うーん、存在しないファイルを送るのですから 送られてもファイルサイズが0になっているはず それで判定するというのはどうでしょう？
ODBC経由でおこなうのが妥当では？
ANo1です。 ＞次のイベントが発生し、次のスライドショーでの動きが始まってしまいます。 jQueryでアニメーションを行っているのだと想像しますが、普通に処理していれば、jQueryの場合は内部でアニメーションを制御していて、次のアニメーションの要求が来ても、一旦キューに溜めて順次処理しているはずと思います。 それなので、「時間が遅れて処理される」ことはあっても、ご説明なさっているようなことは起こりにくくなっているはずなのですが。 （通常のjavascriptで記述すると、うっかりするとそのようなことも起こり得ます） 上記の時間の遅れをなくしたいなどのために、stopメソッドが用意されており、実行中のアニメーションを停止（あるいは終了状態にjump)することができるようになっていたように思います。 同様に、処理のキュー自体も操作できるようになっていたかと・・・（曖昧な記憶ですが） ＞たしか、_thisはスライドショーの要素が入っていると思います 多分違うのではないかと想像します。 仮に、DOM要素（または要素のjQueryオブジェクト）だとすると、jQueryオブジェクトであればstopメソッドは備えられていますが、ご提示のスクリプトにあるgotoメソッドは素のjQueryには存在しないはずです。 オブジェクトに拡張定義などをしているのでしょうか？ 想像ですが、根本的な原因はご提示のコード以外のスクリプトにあるのではないかと思います。 ＞他のイベントが始まるとホバーからはストップできないのでしょうか。。。。 イベントの伝搬は制御可能ですが、発生済みのイベントを取り消すことはできません。 ただし、行っているイベント処理を中断することは不可能ではありませんが、そのようにスクリプトが作成されていなければ無理です。 上にも書きましたように、jQueryのアニメーションは中断することが可能なメソッドとして作られていますので、stopメソッドなどで中断することができるのです。 ※失礼ながら、質問者様の「イベント」という語句の概念が、一般的なものと少々異なるように感じます。 　一般的な言葉の意味を再確認なさっておく方がよろしいかもしれません。
多分、そのようなプラグイン等はないのではないかな。（汎用性がないので） 時刻の判定やテキストの内容を変える方法を知りたいのであれば、ANo2様もすでにご提示になっていらっしゃいますが、 http://www.bing.com/search?q=%E6%99%82%E5%88%BB% … ＞何か良いやり方がありましたら、教えて頂けましたらと思います 「良いやり方」は特に思いつきませんが・・・ 　1）時刻によってメッセージを変えて表示する関数を作成しておく 　2）load時に1）を実行し、setTimeoutなどで適当な間隔で再実行させる という考え方で実現できると思います。 時間の精度をどのくらいにしたいかで実行間隔が変わってきますが、たかだか一日2回しか変わらない表示のために何度も無意味に処理を繰り返すのもあまりにも非効率的なので、その時の時刻から次の表示変更時刻を計算してその少し前になったら、頻度を上げて繰り返すような処理にしておくのがよろしいかと思います。 また、ANo1様がすでにご指摘のように、クライアントの時計を利用するのは不正確の原因になりますので、正確さが必要な場合はサーバの時刻や以下のサイトなどを利用して、クライアントの時計を補正してあげるのがよろしいかと思います。 http://www.nict.go.jp/JST/JST.html http://www2.nict.go.jp/aeri/sts/tsp/PubNtp/clien … 実際の使われ方がよくわかっていないのと、検証はしていないので、以下は考え方・やり方のご参考までに 例では、表示変更の3秒前に再実行し、それ以後は0.1秒刻みで繰り返し監視するようにしています。 （インデントには全角空白を使用） window.onload = function(){ //表示メッセージリスト 　var message = [ 　　"只今タイムセール！", 　　"次のタイムセールは@曜の15時～15時30分に行います" 　]; 　var elm = document.getElementById("hoge"); //表示対象要素 　var dayList = "日月火水木金土".split(""); //表示曜日名リスト 　var anHour =　60 * 60 * 1000; 　var zoneOffset = -9 * anHour; //時差（日本：-9時間決め打ち） 　function getDate(){ //正確な時刻が必要な場合は補正した時刻を返すこと 　　return new Date(); 　} 　function setMessage(type, day){ 　　elm.innerHTML = message[type].replace("@", dayList[day]); 　} 　function checkDate(){ 　　var d = getDate(), type = 0, day = d.getDay(); 　　var def =　(15 * anHour) -　((d.getTime() - zoneOffset) % (24 * anHour)); 　　if(def > 0){ 　　　type = 1; 　　} else if((def += anHour / 2) <= 0){ 　　　type = 1; 　　　def += 23.5 * anHour; 　　　day = ++day % 7; 　　} 　　setMessage(type, day); 　　setTimeout(checkDate, def > 3000? def - 3000: 100); 　} 　checkDate(); }
CSS と JavaScript の使い分けはあなた自身が答えを書いてるじゃないですか、 > CSSファイルはHTMLの装飾、JavaScriptはHTMLで作ったページに「動き」をもった内容を表示 と。 確かに JavaScript で CSS を操作することは可能です。しかしそれは JavaScript での何らかの処理の結果をユーザーに通知するためのもので、処理によって変化しない箇所や初期状態の装飾を設定するものではありません（ただし初期状態としての要素の不可視化は例外：JavaScript を切った状態では不可視な要素へのアクセスができなくなるため）。 また、実際の表示の際 JavaScript で装飾を行うと、まずブラウザのデフォルトの装飾がページに施され、そののちに JavaScript による装飾変更が行われるため二度手間になります。それに対して CSS による装飾を行うと、ブラウザのデフォルトの装飾方法を CSS が修正してそれをページに適用するだけで済みます。
卵かニワトリかの話ですか？ サーバーサイドで仕様をきめてしまい それ以外のデータは受け付けないとすればよいのでは？ そうでなければ何が流れてくるかわからないものを サーバーサイドの解釈でなんとかするのは無理があるかと。
こんにちは。 2段目のリストはリンクに設定されているようですので、スクリプトで他を閉じても、リンクの結果ページ遷移してしまいますが・・・？ それとも、リンク先のページにも同じアコーディオンメニューを設置していて、そちらに結果を反映したいということなのかな。 ひとつの解決法としては、開/閉が排他的に行われる（開いているのは一つだけ）ようにするというのが考えられます。 動作自体は現状のままでよくて、リンクをクリックした時だけ他を閉じたいというのであれば、そのような処理だけを付け加えるという考えもあります。 ご質問は、多分、後者であると思いますので・・・ 言葉の通り、他のリストを閉じるというイベントを付け加えれば良いのですが、もとのスクリプトが「閉じる」という動作を明示しておらずみなtoggleで処理をしていますので、「開いているものをクリックする」という処理にするほうが簡単かな。 開いているものには"open"のクラスを付与するようになっているらしいので、それが利用できそうなのですが、何だかおかしいですね。 クッキーから読み込んで開いた時にはクラス設定をしておらず、その後はtoggleで処理してしまっているので、クラス設定がすっと逆転したままになってしまうものができてしまうようで、残念ながら利用できそうもないですね。 というわけで、開閉状態も自前で判断することにして、以下を追加すれば、一応ご質問のような動作になると思います。 （インデントは全角スペースにしてあります） $(".accordion ul a").click(function(){ 　var lis = $(".accordion>li"); 　var idx = lis.index($(this).parent().parents("li:first")); 　lis.each(function(i){ 　　if(i != idx && $(this).children("ul:visible").length) $(this).children("p").click(); 　}); }); 付けたしなので必ずしも効率的ではありませんし、クラス設定のこともあるので、全体を整理し直した方が適切なコードになると思います。
特定divのinnerHTMLを書き換えるだけならリストから参照させる方が楽でしょう <script> function pushbutton(num){ var list={ 0:"I pushed the button0" ,1:"I pushed the button1" ,2:"I pushed the button2" }; document.getElementById("push").innerHTML=list[num]; } </script>
すいません2つ目のコード例のコメント誤記しました。正しくは「jQuery(のメソッド)だけがこの変数にアクセスできる。開発者は直接アクセスできない」です。 ちなみに例に書いたコードはあくまでも雰囲気を伝えるためのもので、加えて完全なコードではないので動きません。
ANo1です。 ＞簡単なサンプルコードを貼っていただけると助かります ANo1で挙げたリンクのサンプルもたいして複雑ではないと思いますし、apiを使っている以上は、どうサンプル作ったところでリクエストの部分は同じようなものになるはずなんですが・・・？ ANo1のサンプルを簡略化して6行にしてみましたが、こんなのとかでは？ （あとは文字数を詰めるとか、変数を省略するとかぐらいでしょうか・・・。例えば：google.maps.GeocoderStatus.OK → "OK" などなど） //経緯度データ var lat = 35.680, lng = 139.766; //ジオコーダ インスタンス作成 var geocoder = new google.maps.Geocoder; //ジオコーディング リクエスト geocoder.geocode({ location: { lat: lat, lng: lng } }, function(results, status) { //ＯＫなら住所を表示 if (status === google.maps.GeocoderStatus.OK) alert(results[1].formatted_address); //エラーならエラーを表示 else alert("ERROR： " + status); }); 簡略化してはみたものの、使いようがなくなっちゃったかも？（汗） 当然ながら、google mapのjsは事前に読み込んである前提です。
$が何か不明ですがjQueryと想定して、2点ほど修正してみてください。 1点目はajaxの受信後の処理のタイミングを考えること。 送受信するのに何らかの時間がかかりますが、ajaxは非同期に処理を行いますので、ご提示のコードの 　success: function(data){～～ が実行される前に、 　document.write(data_array[0]); が実行されている可能性が高いです。 送受信を同期処理で行う（async: false）ようにするか、または、受信後の処理は全てコールバック内で行うようにしてください。 2点目はdocument.writeの使用法 非同期で処理を行う場合を想定すると、コールバックの処理が実行されるときはすでにdocumentの読込みが終わっていると考えられます。 その時に改めて、document.writeを実行するとブラウザは新しいdocumentを作成してしまいます。 多分、これは質問者様の意図とは異なる動作ではないかと思います。 ご提示のような処理で、結果を画面等に反映したい場合は、DOMを利用して内容を書き換えることで行うのが通常だと思います。
ANo1です。 誤解なきよう、念のため。 ＞メニューにマウスを持ってくると背景の画像が切り替わるjsはtop.jsだったんですか 正確には違います。 ご質問の機能は、ANo1で切り出したスクリプトとjQueryで実現されています。 一方で、top.jsには、その他にも何種類かの処理が記述されていますので、 　　「背景の画像が切り替わるjs」　≠　top.js ということになります。 また、top.jsと言っても、単なるファイル名ですのでstart.jsでもhajime.jsでも何でもよろしいです。 そのサイトでも利用されているjQueryなどのように、ライブラリに名前を付け、スクリプトもその固有名詞を利用して記述するような類のものとは違いますので。
ajaxにjQuery（？）を使っているなら、serializeメソッドを利用するのが簡単かと。 もちろんphp側で作成して送り返しても良いですが・・・ http://api.jquery.com/serialize/
HTMLソースそのものを切り出すのは、少々面倒な手順になると思います。 　1.表示中のソースをスクリプトで読み込む 　2.HTMLを解釈し、該当する部分を探す 　3.文字列として、対象とする部分を切り出す といった感じになるかと。 文字列として取得する目的が良くわかりませんが、比較的簡単な代替案として、（ソースそのものとは異なりますが）表示中のDOMのHTMLを取り出す例を以下に。 $(document).on('click', '.tblButton', function(){ 　var tr = $(this).parents("tr:first"); 　var str2 = tr.html(); 　var str1 = tr.get(0).outerHTML; 　alert("str1=\n" + str1); 　alert("str2=\n" + str2); }); ※jQueryには要素を含むHTML取得のメソッドが見当たらなかったので（あるのかもしれませんが）、outerHTMLを利用しています。
#1 です。補足を参照いたしました。いたしましたが……。 ……えーと、すみません、以下の点をはっきりさせたいので補足をお願いします。 (1) 「こういう風にコードを書きたい」ではなく「そもそもこういう動作をさせたい」という観点でお答えください。あなたがやりたいのは 　・"?form" (?=a, b, ...) という ID を持つ form を submit したときに『CHECK(?) を呼び出し、その結果を返す』という動作をさせたい 　・"?form2" (?=a, b, ...) という ID を持つ要素をクリックしたときに『BTN の値を 2 にする』という動作をさせたい 　の2点で、HTML の中に上記の形式の ID を持つものがいくつあるかわからないので上記をどうコーディングしたらいいかわからない、ということでよろしいでしょうか。 　また、"?form2" のほうでさせたい動作は ID （の1文字目）によらず一定のようですがそれでまちがいないでしょうか。 (2) HTML の方を書き換えることは可能でしょうか。また、"?form2" という形式の ID を参照している個所は JavaScript および CSS で他にございますでしょうか。
ANo1です。 読込処理はできているとのことですから、ｄ3のパース結果はANo1に示したような配列になっているはずです。 それなので、そのまま配列として使用できるはずと思います。（そうでなければ、パースする意味がない） ＞”　　”の連想配列の値だけを取り出す必要があるのですね わざわざ配列を作り直すのであるなら、パースしてから変換するといった二度手間をかけなくとも、前回のご質問のようにテキストで読み込んで、改行（あるいはカンマ）でsplitすることで簡単に配列化にすることが可能です。 ただし、データが複雑で単純なsplitではすまないという場合はまた別ですが、サンプルでご提示のデータはごく単純なものなので、問題なく可能ではないかと想像します。 　https://developer.mozilla.org/ja/docs/Web/JavaSc …
URLのハッシュ部分を変更することで、画像を切り替える方式のサンプル <script> (function(_){ _ ; var gallery = { index: 0, max: 4, prefix: 'sample', ext: 'jpg' }; _ ; gallery.getNextHash = function() {var n = (this.index + 1) % this.max; return '#img' + n}; _ ; gallery.displayHash = function(hash) { _ , _ ; var n = 0; _ , _ ; if (hash){ var m = /#img(\d+)/.exec(hash); if (m) n = parseInt(m[1]) } _ , _ ; this.index = n; _ , _ ; document.querySelector('img.gallery').src = this.prefix + (n+1) + '.' + this.ext; _ ; }; _ ; var loader = function(ev){gallery.displayHash(window.location.hash)}; _ ; window.addEventListener('DOMContentLoaded', loader, false); _ ; window.addEventListener('hashchange', loader, false); _ ; function readAnchorCommand(ev) { _ , _ ; var climb = function(elem,name){var e=elem; while(e && e.tagName!=name) e=e.parentNode; return e}; _ , _ ; var anchor = climb(ev.target, 'A'); if (!anchor) return null; _ , _ ; var cmd = anchor.getAttribute('href'); if (!cmd) return null; _ , _ ; return cmd; _ ; } _ ; window.addEventListener('click',function(ev){ _ , _ ; if (readAnchorCommand(ev) != '#nextimg') return; _ , _ ; ev.preventDefault(); _ , _ ; window.location.hash = gallery.getNextHash(); _ ; },false); })(); </script> <a href=#nextimg><img src=sample1.jpg class=gallery></a>
ANo3です。 どうやら、ANo4様のご指摘の通りのようですね。 Multifilterが初期設定をした後に、jQueryの再読み込みで上書きされてしまっているのが原因と思われます。 ANo4様がご呈示のリンク先に対処法が記されていますが、同様にMultifilter自体の初期設定も遅らせて行う必要がありますね。 jQueryの再読込み後に、Multifilterを読込む必要がありますので、スクリプトから追加読込みを行う（script要素を作成）ようにするか、Multifilter本体を関数化するなどしておいて、実行のタイミングを遅らせてあげるなどの必要がありそうです。
文字列から抽出するのであれば、indexOfを使うか正規表現かでしょうね 深く考えなければ前者、複雑なデータを取りたいなら後者でしょうか <script> var url='http://www.example.com?id=2&page=3'; if(url.indexOf("?")>=0){ var str1=url.substring(url.indexOf("?")+1,url.length); } document.write(str1+"<br>"); var reg=new RegExp("\\?(.+?)$"); if(url.match(reg)){ var str2=url.match(reg)[1]; } document.write(str2); </script>
こんにちは。 ご提示のサイトを眺めただけなので、試してはいませんが・・・ 　ｈttp://felixniklas.com/paperfold/ jsファイルは正しく読めているものと仮定して、 ご提示のコードだと括弧の対応関係がおかしいので、エラーをおこしているものと推測します。 ＞$(function() { ＞　var paperfold = $('.hidden').paperfold({ ＞　　$('.paperfold-toggle').click(paperfold.toggle); ＞　}); 配布サイトで例示しているように $(function() { 　var paperfold = $('.hidden').paperfold(); 　$('.paperfold-toggle').click(paperfold.toggle); }); としてみてください。 また、ご提示のHTMLでは開/閉のきっかけとなる要素が作成されていません。 上記コードの場合だと、paperfold-toggleクラス設定されている要素がそれに当たりますので、該当する要素を作成した上で、それをクリックしてみてください。
こんにちは ＞3)4)の制御がうまくいきません。 表示されたままになってしまう事象ということでよろしいのでしょうか？ ご参考のサイトのコードの下の方にある 　$(this).mouseout(function(){ 　　$(name).css({ "display":"none"}); 　}); に相当する部分がないので、マウスが外れても表示されたままになってしまいます。 付け加えてあげれば、それぞれに対応したものが表示されるようになると思います。 あと、ご提示のコードだと表示位置の計算が少々疑問なのですが、そのあたりはよしなに調整してください。
こんにちは！ 他ページから直接タブにアクセスするスクリプトですよね。 ええっと『"']"』　の部分ですか？ 『"[href='』から始まって『"']"』で終わるといった、指定の部分だと思います。 『"']"』単体では、何かを定義しているわけでないですし… 『"[』から『]"』で括ってるという認識でした。 　 参考にどうぞ：http://www.ideacd.co.jp/blog/858.html
複数の変数を渡すならば // 送信 location.href = "index.html?k=id&k2=id2"; // 受信 var params = {}; if (location.search) { _ var p = location.search.replace(/^\?/,'').split(/&/); _ for (var i = 0; i < p.length; i++) { _ _ var kv = p[i].split(/=/,2); _ _ var k = decodeURIComponent(kv[0]); _ _ params[k] = decodeURIComponent(kv[1].replace(/\+/g,' ')); _ } } alert( params['k'] ); // id alert( params['k2'] ); // id2
エンターはsubmitですからねぇ・・・ trimなど一部仕様外を含めバグっていたのをなおして こんな感じでどうでしょうか？ <style> li.hide{display:none;} </style> <script> try{ document.addEventListener('keypress',function(e){pressfunc(e)},true); }catch(e){ document.attachEvent('onkeypress',function(e){pressfunc(e)}); } function pressfunc(e){ var t = (e.srcElement || e.target); if(e.keyCode==13 && t.name=="keyword"){ searchword(); if(e.preventDefault){ e.preventDefault(); }else{ e.returnValue=false; } } } function searchword(){ var v=document.getElementById("keyword").value; var n1=document.getElementById("wordlist"); var n2=n1.getElementsByTagName("li"); for(var i=0;i<n2.length;i++){ var cn=n2[i].className; cn=cn.replace(/(^|\s)hide(\s|$)/,""); if(! n2[i].innerHTML.match(new RegExp(v))){ n2[i].className=(cn+(cn==""?"":" ")+"hide"); }else{ n2[i].className=cn; } } } </script> <form> <input type="text" name="keyword" id="keyword" value="いうえ"> <input type="button" value="検索" onclick="searchword()"> </form> <ul id="wordlist"> <li>あいうえお</li> <li>かきくけこ</li> <li>さしすせそ</li> <li>たちつていうえと</li> <li>なにぬねの</li> </ul>
そのカンマは、カンマ演算子ではなく変数宣言の一部です。 https://developer.mozilla.org/ja/docs/Web/JavaSc … 一文で二つの変数を宣言するために、カンマを使っています。 理解しやすいように、ご提示の for を分解すると var i = 0; var len = o.group_names.length; while (i < len) { _ なんらかの処理... _ i++; }
>if(!(TimeoutID1 | TimeoutID2 | TimeoutID3)){ きたないソースを書いてすみません ３つのボタンを押すたびにTimeoutID１~3がクリアされそれぞれ0になる仕様です。 TimeoutIDはクリアされないかぎり自然数がはいっています。 上記条件節では３つの変数の「ビット和(|)」をとり「否定(!)」しているので、 どれか一つでも0でないものがいるとfalseとなり、全てが0だとtrueになる仕組みです。 こういう書き方には賛否あるとおもいますので、冗長にかくと if(TimeoutID1===0 && TimeoutID2===0 && TimeoutID3===0)){ としても良いかと思います。
> document.writeln(delete obj2.x); obj2のxプロパティが削除できたので、「delete obj2.x」は、trueが戻り値になります。これが文字列化されて表示されます。 > document.writeln(obj2); obj2は文字列ではないので、「[object クラス名]」の文字列に変換されて、それが表示されます。 という回答で良いですか？ どのような結果を想定していたかを質問に書かれた方が、適切な回答がつき易くなると思いますよ。
xに3が入って、それをx++でプラス1しているから4になります。 入門書をちゃんと読んでいますか？基本的な文法を知らないとプログラムを読めませんよ。
ANo1、2です。 HTML5でFile APIが実装されているようです。 使ったことがないので、知りませんでした。 　http://www.html5rocks.com/ja/tutorials/file/dndf … 実際の実装状況はわかりませんが、javascriptだけでも対応可能かと…
分かりづらかった様で申し訳ありません。 以下の様になさって下さい。 ------------------------------ ブラウザで、URLを復元したい質問ページを開きます。 　　↓ ブラウザ上部の「アドレスバー」を右クリックし、URLを「コピー」します。 （「http・・・」と書かれたバーです。） 　　↓ 当該のバッチファイルを実行します。 ------------------------------ ですので、「どこに」という質問に関しましては、「クリップボードに」ということです。 クリップボードとは、「コピー」や「切り取り」行った際に使う、データの一時保管場所の様なものです。これは特に意識しなくて良いです。 当該のバッチファイルは、クリップボードに教えてgooのURLがあれば、それを自動で取得して処理を行います。 クリップボードに教えてgooのURLが無い状態でバッチファイルを起動しますと、起動した後にメッセージが表示されて止まりますので、その黒い画面を右クリックして、URLを「貼り付け」て頂いても構いません。
＞ドラムの上に結果を表示するにはどうしたら ああ、たしかに結果欄がありますね alert('あたり'); ↓↓↓ document.getElementById("skekka").innerHTML="あたり"; （はずれも同様）としてください
最近のＩＥはクリップボードを操作できるようになったみたいですね 環境をしぼっていいなら window.clipboardData.setData() などでコピーすればよいでしょう その他のブラウザに関しては以前も書いたみたいですが flashなどを利用したzeroclipboardなどのライブラリを使うのが 一般的みたいですよ あとは最近HTML5にclipboard APIが用意されいたりとか
以下の点補足願います。 1. index.html に絶対書き換えられない事情がございますでしょうか。 2. 「最新ブラウザに対応」とありますが、逆に古いブラウザに対応する絶対的な事情がございますでしょうか。 というのも、最新のブラウザであれば index.html の style タグの内容を以下のように書き換えれば detail.htc 無しでご呈示の内容と同様の動作が行えます。 <style type="text/css"> .hl:hover { background-color : #ffff00; } </style>
ANo1です。 ＞参考になりそうなページありましたら、教えていただけないでしょうか 検索するといろいろヒットすると思いますが、多分、上位10個くらいの中にまともなページが入っているものと思います。 すでに、サンプルコードを載せてくださっている方もいらっしゃるようですので、そちらも参考になるかと。 理解するのが面倒なら、ajaxの機能を持っているライブラリを利用するのもひとつの方法でしょう。 これまたたくさんありますが、とりあえずこの辺りがご参考になるかも。 　http://www.atmarkit.co.jp/ait/articles/0611/22/n …
web上のプログラムとしてjavascriptを使うのであれば おそらくクライアントPCのデータを抜けないと思います jsやvbsなどクライアントサイドで動かすならできそうな気はしますが
ANo1です。 補足を読みました。 どうやらまるきり勘違いをしていたようですね。 ご質問文のタイトルの方が正解だったみたいですね。 時間を待つだけであれば、時間が来るまで抜け出さないループを作成するなどの方法で、一応は実現可能と思います。 limitが指定時間になっているとして、 　while(new Date() - limit < 0) { ;}; とか・・・ ただし、この方法だとスクリプトエンジンが解放されませんので、素直にsetTimeout()等を利用する方が良さそうに思いますけれど・・・？ （API利用というのが通信処理などで、callbackで結果を受け取っていたりする場合に、支障が出る可能性がありますので）
もし、読み込み時やイベントの記述法を変えてもうまくいかず、なおかつ、どうしてもload（）でということであれば、「cookieを使って、ブラウザに状態を覚えこませる方法」が、うまくいくかどうかは未確認ながら、検討の余地があるかもしれません。 具体的には、ナビで移動するたびに、その情報をcookieに入れ、読み込み時(document ready時）にはその情報を見て、そのページを出すようにする、というものです。 これなら、戻るボタン後にJSの状態が保持されるブラウザなら、そのままでいいわけですし、再度読み込み（初期化）されてしまうブラウザは、上記のCookieでカバーできるかもしれません。 Cookieは下記のような方法で簡単に実装できると思います： http://www.tam-tam.co.jp/tipsnote/javascript/pos … 注意点としては、戻るボタンで戻った時だけでなく、普通にアクセスした時などにも、最後に表示した（=cookieに保存されている）ページが出てきてしまいかねませんので、Cookieの有効期限を、ブラウザを閉じるまでにするなど、対策が必要と思います。 ・・・あと、ナビで移動する以外にも、ページ内に「ホームページに戻る」ようなリンクがある場合は、それもナビ同様、JSにする必要が出てきますね。。 私としてはやはり、No1でご回答した原始的な構成をお勧めしたいところですが、load（）で表示する方式をお採りになる合の一つのアイデアとして、ご参考になれば幸いです。
ANo1です。 最終的にどのようなものを目指していらっしゃるのかよくわからないので、ごく簡単なものを勝手なサンプル的に作ってみました。 単純に、ユーザーとCPUのじゃんけんを模擬化しただけで、勝ち負けの判定などは行っていません。 recoveryで指定した時間（3秒）後にもとに戻ります。マークアップも勝手に作成しました。 少しは参考にでもなれば・・・ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #cpu, #you{ position: relative; width: 300px; height: 100px; color: red; font-size:18px; border: 1px solid gray; } #info{ width: 300px; height:30px; text-align: center; font-size:26px; margin: 8px; } .hand{ text-align: center; color: black; font-size: 42px; } .trigger{ position: absolute; top:75px; left:45px; } .trigger button{ width:60px; text-align:center; margin-right:5px; font-weight: bold; } </style> </head> <body> <div id="cpu"> CPU <div class="hand"></div> </div> <div id="info"> <span>ジャンケン・・・</span> <span>ポン！</span> </div> <div id="you"> YOU <div class="hand"></div> <div class="trigger" onclick="janken(event);"> <button type="button" value="0">グー</button> <button type="button" value="1">パー</button> <button type="button" value="2">チョキ</button> </div> </div> <script type="text/javascript"> var janken = (function(){ var trans = ["グー", "パー", "チョキ"]; var recovery = 3000; var ready = false; var setInfo = function(f){ var info = document.querySelectorAll("#info span"); for(var i=0; i<info.length; i++) info[i].style.display = i==f?"inline":"none"; } var setHand = function(id, hand){ hand = hand===undefined?"":trans[hand]; document.querySelector("#" + id + " .hand").innerHTML = hand; } var prepare = function(){ setHand("cpu"); setHand("you"); setInfo(0); ready = true; } var handler = function(evt){ if(!ready) return; ready = false; var t = evt.target || evt.srcElement; var yourHand = t.value; var cpuHand = Math.floor(Math.random() * 3); setHand("cpu", cpuHand); setHand("you", yourHand); setInfo(1); setTimeout(prepare, recovery); } prepare(); return handler; })(); </script> </body> </html>
innerHTMLに代入する直 = テキストエリアの値.split('\n').join('<br>')
$.fn.resetElm関数が受け取る引数の、関数内での名前です。例えば$.fn.resetElm(foo)というようにfoo関数(これだけでfooが関数かどうかはわからないですが)が引数として渡されるかもしれないし、$.fn.resetElm(bar)というようにbar関数が渡されるかもしれません。$.fn.resetElm関数を書いた時点ではどんな変数名の値(関数)が引数として渡されるかわからないので、渡されるであろう引数に仮の名前としてactionという名前をつけ、$.fn.resetElm関数内で扱えるようにしています。
案1 ページを再読み込みすれば、スクリプトの最初から実行される。 https://developer.mozilla.org/en-US/docs/Web/API … 案2 スクリプト内に無限ループを作り、良ければ脱出し、駄目なら繰り返す。 // 例 while (true) { // 無限ループ _ var ミス累積数 = ひととおり出題する(問題数); _ if (問題数 - ミス累積数 >= 問題数*合格率) break; // 無限ループを抜ける _ 告知( 'やりなおし' ); } 告知( '合格' );
「javascript csv パーサー」でぐぐってみてください。あるデータ形式をその言語で読み取れる形式に変換するライブラリを「パーサー」と言います。さすがにパーサーを作ることがプログラムの主題ではないかと思いますので、そこはあるものを使ったほうがいいかと思います。
Yahooはここしばらく使ってませんが、Googleの方が優れていると思います。画像を元に検索する事も出来ますし、特定のサイト内を検索する事もできます。以下のサイトが参考になるかと存じます。 https://support.google.com/websearch/answer/1344 …
「回答する」ボタンを押すと、二箇所に文言を表示させる具体的な例 <script> function 結果表示(id, message) { document.getElementById(id).textContent = message; } function 回答() { 結果表示('アラートっぽい枠', '次の問題にいきましょう！'); 結果表示('告知っぽい枠', '1回ミスで問題数は2'); } </script> <style> #アラートっぽい枠 { font-size:150%; text-align:center; border:thick solid red; border-radius:1em; } #告知っぽい枠 { font-size:100%; text-align:center; border:thick solid darkred; border-radius:1ex; } </style> <p id="アラートっぽい枠"></p> <p id="告知っぽい枠"></p> <button onclick="回答()">回答する</button>
CSSでdiv#moge div.Aを表示にすればいいのでは？
無理やりやりたいならwindowの要素を総当たりすればいけます <script> var a = 100; var b = 50; var c = 60; var d = 70; maxAray=[a,b,c,d]; var myData; myData=maxAray.sort(koujyun); for(prop in window){ if(window[prop]==maxAray[0]){ document.write("降順:"+prop+"<br>"); break; } } myData=maxAray.sort(shoujyun); for(prop in window){ if(window[prop]==maxAray[0]){ document.write("昇順:"+prop+"<br>"); break; } } function koujyun(a,b){ return b-a; } function shoujyun(a,b){ return a-b; } </script> ただし、既存のプロパティにヒットするリスクはあります。 どうしてもということであれば変数名を制限するなどしてリスクヘッジして下さい
同様にググってみただけですが・・・（他に方法が思いつかないので） 一応ここ（↓）にあるみたいですね。 （名称は同じですが、お探しのものかどうかは不明） 　http://haydarozay.com/ext/jquery/bxGallery/jquer … ミニマイズ前のものはこれかな？ 　http://www.dynamicdrive.com/forums/showthread.ph … ＞どれもリンク切れです。 というか、bxSliderのサイトに行きませんか？ 作者のサイトに行って見ても、bxSliderしか表示されていないみたいですね。 　http://stevenwanderski.com/ 想像するところ（調べていません）、最初にBxGalleryを作ったんだけど、同様の機能のものを作り直してbxSliderとしたとか、そんなところではないのでしょうか？ もしそうだとするなら、BxGalleryの方はメンテされていないのではないかな？
keydown、keyupなどは基本的にバブリングするようですので上位要素でも拾えるはずです。 https://w3c.github.io/uievents/#event-types-list fx37でごく簡単に試してみましたが、documentでもbodyでも以下で取得できました。 document.onkeydown = function(evt){ 　alert("keydown!　code=" + evt.keyCode); } よく知らないのですが、AndroidやiOSで同様かはちょっと疑問ですが… （入力欄なしで、keyイベントが発生するのかなぁ？）
ANo2～5です。 ひとまず無事に動作したようなので、あわてて書いた3～5は無いものにしてください（汗） ＞クォーテーションの有無で 何が違うのでしょうか？ setTimeout()には概ね２種類の書式があります。 　https://developer.mozilla.org/ja/docs/Web/API/Wi … ご質問文でご提示のクォーテーションで囲う書式は、第一引数に文字列を渡す書式で、実行する時に文字列がスクリプトとして評価されます。（実は非推奨です） それなので、変数の値なども実行時に取られている値になります。 ということは、500ms経過後のインデックス（iやiPlus）の値が採用されることになるので、その結果、ご質問のような状況が生まれていたことになるかと。 ANo2で提示したものは 　setTimeout(func, delay） 形式の書式で、指定時間経過後にfunc()が実行されるという書式ですが、変数の参照は実行時に行われるので、そのまま関数内でiやiPlusを参照すると同じことが起こってしまい、実は、解決にはなりません。（書式を変えただけ） ANo2は上記の書式ではありますが、第一引数が hantei_relief ではなく、hantei_relief(i)となっているところがミソで、setTimeoutの構文解釈時に hantei_relief(i)が評価されます。（この時点のiの値は使用して欲しい値をまだ持っていることはわかりますよね） そして、hantei_relief(i)を実行して返される匿名関数 function(){ hantei[i] = true; } が500ms後に実行すべき関数として保持されることになります。 えっ、でも結局、同じことでは？・・・と思われるかも知れません。 （変数iを重複して使ってしまったので、分かりにくくなってしまっていて申し訳ない） 実はこちらのiは、hantei_relief(i)を実行した際にすでに評価しているので、関数hantei_relief内のローカル変数になっていて、匿名関数を実行する際にも実行した時の値を保持しているのです。 　function hantei_relief(jj){ 　　return function(){ hantei[jj] = true; } 　} と置き換えて考えていただいた方が、多少は理解しやすいかもしれません。 main側でiやiPlusの値を変えても、匿名関数で参照するi（あるいはjj）は別の変数なので影響をうけないのです。 このような仕組みを内包（クロージャ）というらしいですが、私もたいして理解しているわけではないので、正しい説明ができないのと、誤解を与えてしまってはいけないので… 以下あたりをとっかかりに調べてみてください。 （javascriptの場合は、厳密な意味ではクロージャではないらしいですが…） 　http://www.atmarkit.co.jp/ait/articles/0708/21/n … とりあえずなんとかなったようなので、良かったですね。
ANo1です。 ちょっと時間ができたので、試してみました。 リファレンスをよく読んだら、StreetViewSourceを指定できるのは、StreetViewPanoramaではなくてStreetViewServiceのようですね。(~~;) というわけで、ちょっとまどろっこしいですが、StreetViewServiceを利用してOUTDOOR指定で返された座標を使って表示するということをやってみました。 上段表示が、座標そのままで表示。（東京駅内） 下段が、上記の方法で読み替えた座標で表示したもの。 （方向などは直接関係ないので、デフォルトのまま） どうやらできるようではありますが、上にも書いたように少々まわりくどいので、もっと直接的な方法があるかも知れませんね。 …というよりも、ANo1でお尋ねしたように、座標位置を路上にして指定すれば良いような気がしますが。 ＜以下、ご参考まで＞ (インデントは、全角空白になっています） <!DOCTYPE HTML> <html lang="ja"> <head> <title>Test Sample</title> <style type="text/css"> #pano1, #pano2 { width: 600px; height: 300px; margin-bottom: 50px;} </style> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false" … </head> <body> <h3>座標のまま</h3> <div id="pano1"></div> <h3>OUTDOOR指定</h3> <div id="pano2"></div> <script type="text/javascript"> (function(){ var point = new google.maps.LatLng(35.680, 139.766); var pano1, pano2; var panoramaDisp = function(id, latlng){ 　return new google.maps.StreetViewPanorama( 　　document.getElementById(id), 　　{position: latlng} 　); } pano1 = panoramaDisp("pano1", point); var viewS = new google.maps.StreetViewService; viewS.getPanorama( 　{ 　　location: point, 　　preference: google.maps.StreetViewPreference.NEAREST, 　　source: google.maps.StreetViewSource.OUTDOOR 　}, 　function(data, status){ 　　if(status=="OK") pano2 = panoramaDisp("pano2", data.location.latLng); 　} ); })(); </script> </body> </html>
そのような意味では、pythonとかもそうですね。 質問が多い割には、pythonも専用のカテゴリがありません。 かつて、rubyは専用のカテゴリがありませんでしたが、 5､6年頃前に専用のカテゴリが設けられました。 実際に専用のカテゴリを設ける場合、どのような基準で判断しているかは gooの管理担当の方以外はわかりませんが、問題として投稿されている言語がどれだけ多いか によるかと思います。 rubyの場合がそうだったように、jspに関する質問が増えるのと、jsp専用カテゴリ を設けてほしいという依頼が増えれば、jsp専用カテゴリが設けられる可能性はあると思いますよ。
https://oshiete.goo.ne.jp/qa/9017129.html ひどいな…
質問じゃなくてただの要望なので削除されて当然です。
>クリップボードから貼り付けても、 貼りつけるだけじゃキー入力の途中とかわらないので無理ですね たとえば「abc」と入力したいときにaを入力した時点でonchangeが 動いてしまったらウザくてしかたないでしょ？ 確定するまでonchangeは起動しません。 （その意味ではonblurに近い感じですね） キー入力の途中でチェックするときは通常onkeyup（場合によってはonkeydown） イベントを利用しますが、マウスからクリップボードの貼りつけをしても キー入力がないので反応しません 厳密にしたいなら、バックグラウンドでsetTimeoutやsetIntervalを利用して チェッカーを走らせることです
(1)URLからkeycode入力する (2)javascript付与する それぞれについて意味不明なのでもうすこし具体的になさったほうがよいかと
<%= request.getParameter("hoge") %> <script type="application/javascript"> var 値 = document.forms['name属性値'].elements['name属性値'].value; 自分自身のJSPページURLにAJAX送信するjavascriptの関数( {hoge:値} ); </script>
サーバーサイドのプログラムでonchangeは無理がありますね ajaxで処理するのが妥当かと。
javascriptで他人のサイトからデータを抜くのはかなり難しいです 別の方法を考えた方がよいでしょう。
HTMLやCSSが不明なので、実際の動作状況がよくわからないのですが・・・ どうやら、少し勘違いなさっているようです。 　setInterval( func, msec); は、『msec毎にfuncを呼び出す』という処理です。 それなので、理想的に動作した場合は、 ＞「アニメーション終了後に2秒経過してから再びアニメーションを行う。」 とはならずに、「2秒ごとにアニメーションを繰り返す」ようになるはずです。 でも、見た目は正常（？）に動作しているように見えているかもしれません。 試しに、 　＞timer = setInterval( function() { autoPlay(duration);} ,2000); を、 　timer = setInterval( function() { autoPlay(duration);} , 2100); あるいは 　timer = setInterval( function() { autoPlay(duration);} , 2200); などとして実行してみてください。 0.1～0.2秒の差のはずと思ってらっしゃるものが、違う結果になることがわかると思います。 実際には、スクリプトの処理に（わずかながら）時間がかかる等もあり、計算通りの時間にピッタリ処理が終わるとは限らず誤差が出ます。（エンジンの繁忙によって開始にも誤差が出ます） このため、jQueryのアニメーションでduration=2000と指定しても必ずしもピッタリその時間に終了しているとは限りません。 その状態で、別の時間計測により、autoPlayが呼び出された場合、 　＞$("#slide:not(:animated)") で無視するように設定しているのでスルーされていると思われます。 この結果、（次のインターバルまでの）約2秒間停止しているように見えているのではないでしょうか。 きちんと制御するなら、アニメーションの時間と停止の時間をそれぞれ指定できるような方法を考えるのがよろしいかと思います。（誤差をなくするのは大変なので、誤差は許容しています。ブラウザのアニメーション程度であれば、誤差はあっても問題ないでしょう(笑)) …という方向で考えると、まったく別のコードになっちゃいますので、できるだけご提示のコードを活かせるようにすると、以下のような方法でも制御できるようになると思います。 時間指定で繰り返すのではなく、終わったら繰り返すというように順序だけ制御することで（↑）のような誤差を吸収するようにしています。 　（以下、関連部分のみ。インデントは全角空白なのでご注意。） var delay = 2000; // 停止している時間(msec) var duration = 2000; // animationの時間（msec) autoPlay(); function autoPlay(){ 　$("#slide:not(:animated)").delay(delay).animate( 　　{ "margin-left" : -1*$("#slide li").width() }, 　　duration, 　　function(){ 　　　currentNum = ++currentNum % files.length; 　　　$("#slide").css("margin-left","0").append($("#slide li:first-child")); 　　　$('#paging li').removeClass('active'); 　　　$('#paging li').eq(currentNum).addClass('active'); 　　} 　); 　setTimeout(autoPlay, 0) } // timer = setInterval( function() { autoPlay(duration);} , 2000);
＞SNSが用意しているAPIとか利用するのは面倒なので避けたい ようはAPIをつかわないとなるとSNS側が所定のフォーマットされたデータを うけつければよいのですが、結局その仕組みがAPIなので APIをつかわない前提であればSNSの仕様書をよくよんでその範囲で やるしかないでしょう そしておそらくそれを受けられるSNSは皆無だと思います。
例えばgoogleなら https://support.google.com/webmasters/answer/166 …
不可能なので代案 <a href target=_blank>別タブで開く。開いた window を focus すると更によし</a> <form action target=_blank> <input type=hidden name value> <button type=submit>別タブに色々パラメーター付きで開く</button> </form> <button type=button id=xxxxx>疑似ポップアップ内に iframe を表示</button> <script> function makePopupListener(url){ return function(ev) { function R(d,s){if(s) for (var i in s) d[i] = s[i]; return d} function E(n,s){var e=document.createElement(n); if(typeof s=='string')e.appendChild(document.createTextNode(s)); if(typeof s=='object')R(e,s); return e} var B = document.body, ST = document.documentElement.scrollTop; var back = E('div'), pane = E('div'); R(back.style, {position:'absolute', top:'0px', left:'0px', width:'100%', height:'100%', backgroundColor:'black', opacity:'0.5'}); R(pane.style, {position:'absolute', top:'50%', left:'50%', width:'16em', marginLeft:'-8em', height:'10em', marginTop:'-5em', backgroundColor:'white', textAlign:'center', border:'thin solid black', zIndex:'1'}); var cont = pane.appendChild(E('iframe',{src:url})); R(cont.style, {width:'15em', height:'6em'}); var okey = pane.appendChild(E('p')).appendChild(E('button',{textContent:'OK',type:'button'})); okey.addEventListener('click',function(ev){window.scrollTo(0,ST); B.removeChild(back), B.removeChild(pane); ev.target.removeEventListener(arguments.callee)},false); B.appendChild(back), B.appendChild(pane); okey.focus(); window.scrollTo(0,0); }} window.addEventListener('DOMContentLoaded',function(){ document.getElementById('xxxxx').addEventListener('click', makePopupListener('http://www.example.com/'), false)},false); </script> 素直にライブラリを使う https://www.google.co.jp/search?q=lightbox https://www.google.co.jp/search?q=floating+popup
＞逃げ手が他に無いか ポップアップブロックさえ回避できるのであれば （特定のサイトでユーザーに任意にブロック解除させることができるなら） setTimeoutすればいけそうですけどね function func1(){ setTimeout(function(){document.getElementById('button2').click();},0); }
No.2です。 ご質問をよく読んでおらずに失礼しました。 既に回答がついておりますが、textsを配列ではなく連想配列として処理すれば良いです。 No.2を以下の様に修正してください。 form1.hta 変更前　var texts = ["One","Two","Three"]; 変更後　var texts = {"1":"にんじん","2":"じゃがいも","3":"キャベツ","A":"りんご","B":"ぶどう","C":"みかん"}; form2.htaのfor(){}を以下に置き換え for(var i = 0, c; i < inputText.length; i++){ c = inputText.charAt(i) v += c + " - " + texts[c] + "<br>"; }
オプション名を明記しないと2000がdurationかどうか解りにくいから という意図でしょうか？ それであればvar duration = 2000;と宣言しておいてdurationを引数に渡すのがよいかと思います。
https://oshiete.goo.ne.jp/qa/9002565.html で言ったことは、どうなのですか?
＞本日，テストを重ねて無事，思い通りのナビが出来ました。 ひとまず良かったですね。 ＞その場合変数ssの戻り値は.parents('li').children('a')のAとaだと思っていたのですが，thisのa-1も含まれているのが解りません。 サンプルのHTMLを対象に考てみます。階層別に番号を振って見ると、 <ul class="nav">　　　　　　　…① 　<li>　　　　　　　　　　　　…② 　　<a href="#">A</a>　　　　 …③-1 　　<ul>　　　　　　　　　　　…③-2 　　　<li>　　　　　　　　　　…④ 　　　　<a href="#">a</a>　　 …⑤-1 　　　　<ul>　　　　　　　　　…⑤-2 　　　　　<li>　　　　　　　　…⑥ 　　　　　　<a href="#">a-1</a>　…⑦ 　　　　　</li> 　　　　　<li><a href="#">a-2</a></li> 　　　　　<li><a href="#">a-3</a></li> 　　　　</ul> 　　　</li> 　　</ul> 　</li> </ul> のような感じになるかと思います。 $("ul.nav a").hoverでイベントを設定していますので、イベント発生の対象となり得るのは③-1、⑤-1、⑦・・・です。 仮にイベントが⑦（=this）で発生したとすると、$(this).parents("li")は⑦の祖先要素全体のうちからLI要素を返しますので、⑥、④、②が戻り値となります。 .children("a")でそれぞれの子要素のうちＡ要素を取得するので、⑥→⑦、④→⑤-1、②→③-1となり、結局、⑦、⑤-1、③-1が取得できる仕組みになっています。 前回の説明にも書きましたように、HTMLの構造を全体に同じ構成にすることで、単一の選択方法で、目的とする要素を取得できるようにしています。 また、このような構成にすることで、階層が何階層になっても同じ処理で対応することが可能になりました。
一般の Web ページの場合は、JavaScript から MySQL への接続は不可能です。 Windows 8 の ストアアプリでの提供でも、無理っぽいです。 Windows の HTML Application 形式で配布するなら、ADODB 経由の手段がありますが現実的ではありません。 クライアント側に Node.js or Rhino を入れて実行させるなら楽勝ですが、HTML5 の範疇ではないですね。 というわけで代替案 * 定期的にバッチ実行で MySQL を叩いた結果をテキスト保存し、JSONP で読み取り * Web サーバー側で MySQL を叩く Servlet or CGI or スクリプト を用意し、AJAX 呼び出し
こんなかんじでしょうか？ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ $("#gnav>li").click(function(){ $(">ul", this).slideToggle(); }); $("#gnav>li>ul").hide(); }); </script> </head> <body> <ul id="gnav"> <li><a href="">リンク1</a></li> <li>リンク2 <ul> <li><a href="">下層リンク1</a></li> <li><a href="">下層リンク2</a></li> <li><a href="">下層リンク3</a></li> </ul> </li> <li>リンク3 <ul> <li><a href="">下層リンク1</a></li> <li><a href="">下層リンク2</a></li> <li><a href="">下層リンク3</a></li> </ul></li> <li>リンク4 <ul> <li><a href="">下層リンク1</a></li> <li><a href="">下層リンク2</a></li> <li><a href="">下層リンク3</a></li> </ul></li> </ul> </body> </html>
環境変数 PATHを設定していないのでは？ http://kawachodev.hatenablog.jp/entry/2013/07/19 …
&を「%26」に置換するとか
＞セーブエディターってゆうバイナリエディタを編集するソフト の作者、もしくはコミュニティー（wikiなど？）に質問なさってはいかがでしょうか？ きわめてブラックに近いグレーな内容なのであまり公共の掲示板への質問にはそぐわないかと
ブラウザのデフォルトCSSが効いているようです。(ulにpadding-left:40px) そのため、右に40pxずれています。 #productList{ padding:0px; } をcssに追加すれば表示されるはずです。
原因に関係する情報があまりないけれど・・・ 勝手に想像してみると、 jQselectableは別に表示用DOMを生成しているのでしょうから、内容を変えると整合が取れなくなっているんではないの？ よくわかってないけれど、apiが公開されているようなのでrebuildすれば良いのでは？ 　https://code.google.com/p/jqselectable/ 余計なお世話ですが、jQuery使ってるならご提示のスクリプトでも利用した方が簡略化できそうな気がします。
ご指定の方法ですと htm+="<option value='"+j+"'>"+item[i][j]+"<\/option>"; でvalueを設定しています。(数値) いっその事、配列には下記のようにタグを入れてしまった方が解りやすいかもしれません。 var item = new Array(); item[0] = new Array(); item[0][0]="---------------------"; /* Fruits */ item[1] = new Array(); item[1][0]='<optgroup label="カテゴリ">'; item[1][1]='<option value="0">すべての商品<\/option>'; item[1][2]='<option value="1321">ファッション<\/option>'; item[1][3]='<option value="3656">食品<\/option>'; ~~~~ htm+=item[i][j];
少々汎用的に作るなら <script>(function(){ addEventListener('submit', function(ev){ var form = ev.target, name = form.name; if (name == 'anchor') { ev.preventDefault(); var n = form.elements['q'].value; var u = 'ttp://www.example.com/@/'.replace(/@/,n); window.location = u; } }, true); })()</script> <form name=anchor><input type=text name=n value=123><input type=image src=image1.png></form> <form name=anchor><input type=text name=n value=987><input type=image src=image2.png></form>
ANo2です。 ＞適用されなかった#sideには#mainにあるブログ記事を読み込ませています 全体がどうなっているかわかりませんが、察するところ、ご質問のスクリプト実行時にはまだ記事の読み込みが終了していないものと推測されます。 それなので、いくらセレクタで指定していても、該当する要素が（未だ）存在しないので、処理されていないように見えるということではないかと。 (ANo2で記した「IMG要素の入れ忘れ」に近い状態と言えます） というわけで、問題点は、多分、セレクタの問題ではなく、処理のタイミングではないかと思われます。 ＞読み込みではなく直接#sideに画像を貼った場合だとlightboxが反映されたので ＞これが原因だということは分かったのですが解決には至っていません。 この状況からも、原因は上記ではないかと推測します。 ＞上記のように別ページを読み込んでいる場合の複数セレクタはどう ＞指定すればよいのでしょうか？ ＞当たり前だとは思うのですが、.entryBodyを指定しても ＞反映されませんでした。 原因が推測通りだとすれば、セレクタの問題ではなく実行のタイミングの問題です。 対処法としては、#sideの内容に関しては読込が終わってからご質問の処理を行うということになるでしょう。 一方、#mainはdocument.ready時に処理可能ですが、遅らせても良ければ#sideと同時に（複数セレクタで）、そうでなければ、#sideだけ遅らせて処理をするというふうになさればよろしいかと。 #sideの読み込みが終わってから処理をさせるには、最初にご提示の 　$(function(){～～}); の中ではなく、補足でご提示なさっている 　$("#side").load("ブログ記事URL .entryBody", function(data) {～～}); の function(data){～～} 内に記すことで、そのタイミングで実行することができます。
タグを閉じる前に$('#contents').append(insert);を実行しているのでタグが自動保管されています。 修正方法１： insertの初期化をeachの前に行い、$('#contents').append(insert);はeachを抜けた後に行う 修正方法２： insertの初期化をeachの前に行う。1、7、15ページのときはinsert=''を設定 $('#contents').append(insert);を実行するのは6 、12、15ページの時のみ
javascriptではなさそうですね。 timeLabel.text = _loc5_;　となっているところを timeLabel.text = (mediaPlayer.streamType == StreamType.LIVE) ? "LIVE" : _loc5_; timeLabel.text = TIME_ZERO;　となっているところを timeLabel.text = (mediaPlayer.streamType == StreamType.LIVE) ? "LIVE" : TIME_ZERO; でどうでしょうか
年を使わないなら、Date オブジェクトを使わずに、 グレゴリオ暦の計算を独自に行う方が早そうです。 var m=[31,29,31,30,31,30,31,31,30,31,30,31]; if (year) { if (year%4!=0 || year%100==0 && year%400!=0) m[1]=28; } // 年が指定されたら閏を考慮 function B(n,a,b){return a<=n && n<=b} if ( B(month,1,12) && B(day,1,m[month-1]) ) { alert('有効') } else { alert('無効'); } 余談ではありますが 全て大文字の変数名は、JavaScript では慣習的に「定数」だけに使用されます。 もし何らかの特別な理由が無い限りは、変数名は小文字で命名することを、強くオススメします。
字句解析と構文解析を行う必要があります。 この手はコンパイラ技術の範疇なので、面倒に思えるかもしれませんが、 CSV程度に用いるならたいしたことはありません。 以下簡単なサンプルです // 字句解析 function Tokenizer(src) { this.src = src; this.index = 0; this.length = src.length; } Tokenizer.prototype = { seekC: function(){ return (this.index < this.length)? this.src.charCodeAt(this.index): 0 }, readC: function(){ var i = this.index++; return (i < this.length)? this.src.charCodeAt(i): 0 }, forwC: function(){ this.index++ }, backC: function(){ this.index-- }, readS: function (eoc){ var s = '', x = this.readC(); while (x) { if (x == eoc) { if (this.seekC() == eoc) this.forwC(); else break; } s += String.fromCharCode(x); x = this.readC(); } return s; }, TASK: { 0x00: function(c){ return {type:'eof'} }, 0x0A: function(c){ return {type:'eol'} }, 0x0D: function(c){ if (this.seekC() == 0x0A) this.forwC(); return {type:'eol'} }, 0x22: function(c){ return {type:'string', body:this.readS(0x22)} }, 0x27: function(c){ return {type:'string', body:this.readS(0x27)} }, 0x2C: function(c){ return {type:'separator'} }, }, nextToken: function(){ var c = this.readC(), f = this.TASK[c]; if (f) return f.call(this, c); var s = String.fromCharCode(c); for (c = this.seekC(); !this.TASK[c]; c = this.seekC()) s += String.fromCharCode(this.readC()); return {type:'string', body:s}; } }; // 構文解析 function parseCSV(text) { var pre, tok, t = new Tokenizer(text), flag = true; var records = [], record = [], s = ''; while (flag) { tok = t.nextToken(); switch (tok.type) { case 'string': s += tok.body; break; case 'separator': record.push(s), s = ''; break; case 'eof': flag = false; if (pre.type != 'eol') { record.push(s), s = ''; records.push(record), record = []; } break; case 'eol': record.push(s), s = ''; records.push(record), record = []; break; default: throw "error!"; } pre = tok; } return records; } // 使用例 var data = parseCSV("abc,'def','g h i'\n'jk''lmn''op','qrs\ntu',vwxyz");
ANo3です。 最初のご質問文で、かなりミスディレクションされてしまったようです。 PHPから返されるのは、短いテキストなのですね。 ANo3の補足に示されたHTMLの構造であるなら、 　function getJanJs( myElement, idForJan ) { 　　var elm = $(myElement).prevAll("input:first"); 　　$.get("../prog_api_itemLookup.php", "s1=getjan&s2=" + idForJan, function(getJanResult) { 　　　elm.val(getJanResult); 　　}); 　} で、多分動作するのではと思います。 ＜おまけ＞ id="hogehoge1"や class="blue small"が他に利用していない場合は設定する必要はありません。。 ANo2、3で例示したように、各ボタン全部に onclick="～～" を記述するよりも、スクリプトからイベント設定を行う方がより簡潔なHTMLになると思います。（idだけは要素属性として記述しておく必要がありますが）
その程度でしたら、jQuery を使わないで実装するほうが早そうです。 var copyTextToClipboard = function(txt){ var copyArea = document.createElement('textarea'); var body = document.body; copyArea.value = txt; body.appendChild(copyArea); copyArea.select(); document.execCommand("copy"); body.removeChild(copyArea); }
命題の通りであれば、こんな感じですが 月や日は必ずしも左を0で埋めた二桁であるとは限りませんが 運用でカバーしていますか？ <script> var str="2015年05月25日"; str=str.replace(/(\d{4})年(\d{2})月(\d{2})日/,"$1$2$3"); document.write(str); </script> 例えば上記「05月」が「5（一桁数字）月」や「(半角スペース)5月」にならないという 担保があるのか・・・によって処理が若干かわります
シンプルに作るとこんな感じですかね <body> <script> function getCheckTotal(){ $radio = $(':radio'); var total = 0; $radio.filter(':checked').map(function(){ total += Number(this.value); }); return total; } function calculate(){ //入力数値を取得 var inputPointString = $("#inputPoint").val(); //文字列で取得しているので数値に変換 var inputPoint = parseInt(inputPointString); var checkTotal = getCheckTotal(); var calculateTotal = 0; if(checkTotal >= 80){ calculateTotal = inputPoint* 1.5; } if(79 >= checkTotal && checkTotal >= 60){ calculateTotal = inputPoint* 1.3; } if(59 >= checkTotal && checkTotal >= 40){ calculateTotal = inputPoint* 1.3; } if(39 >= checkTotal){ calculateTotal = inputPoint; } if(isNaN(calculateTotal)){ $("#calculateTotal").val("未選択の項目があります"); } else{ $("#calculateTotal").val(calculateTotal); } } </script> 点数は？<input type="text" id="inputPoint" /> <fieldset> <legend>質問1</legend> <label><input type="radio" name="c1" value="10" /> はい</label> <label><input type="radio" name="c1" value="5" /> どちらでもない</label> <label><input type="radio" name="c1" value="1" /> いいえ</label> </fieldset> <fieldset> <legend>質問2</legend> <label><input type="radio" name="c2" value="10" /> はい</label> <label><input type="radio" name="c2" value="5" /> どちらでもない</label> <label><input type="radio" name="c2" value="1" /> いいえ</label> </fieldset> <fieldset> <legend>質問3</legend> <label><input type="radio" name="c3" value="10" /> はい</label> <label><input type="radio" name="c3" value="5" /> どちらでもない</label> <label><input type="radio" name="c3" value="1" /> いいえ</label> </fieldset> <button id="check" onclick="calculate()" >診断</button> 計算結果<input type="text" id="calculateTotal"/> </body>
Cの大文字と小文字が問題文中で不統一ですが、大文字だとすると、 replace(/(.+?)C\.(\d+)\.(.*C)/g,function(x,a1,a2){return a1+"_C"+(++a2);})
<div Id="main">内のみ更新できればベストなのですが構造上難しそうですね。 1.商品のURLにアンカーの情報を付与する。アンカーもつける ※<a href="../example/p17-045.html?anchor=p17-045" target="_top" id="p17-045"> 2.右ページの読み込み時に親のページのURLからアンカーを取得。 　スクロールを移動する。 参考： http://www.shoshinsha.com/hp/ref/html/a_name.html といったあたりでしょうか
ANo2です。 ご質問とは直接関係がないことなので、いらぬおせっかいというものですが・・・ ＞という意味なのですね。そんなことも知らずに使って ＞いたのがお恥ずかしいです。 サブミットのキャンセルを忘れていたのでなくご存じなかったとすると、ご質問文中では省略されていますが、「（エラーチェック部分は略）」となっている処理でエラーが発生した時にもサブミットをキャンセルする必要があります。 （キャンセルしないと、そのままサブミットされてしまいます。） さらに蛇足ですが、javascriptでの入力データチェックは完全ではありませんので、受信側（この場合はphp側）でもデータの整合性をチェックしておいた方が安全と言えます。 　http://q.hatena.ne.jp/1165754185
こんなかんじで如何でしょうか？ var src = 'http://www.a.com/a.html?url=http://www.t.com/x.p … var target = 'http://www.aaa.com/aaa.pdf'; var palam; var palams = src.match(/\?[^\?]+/g); // ?で始まる文字列(=パラメータ)を配列palamsに入れる for(i=0; i<palams.length; i++){ // 見つかったパラメータの中で if(/^\?yy=/.test(palams[i])){ // '?yy='で始まるパラメータをpalamにいれる palam = palams[i]; break; } } target += palam;
え～～っと・・・ ご質問への回答からは少し外れているかもしれませんが、 「画像」とおっしゃっているものは、いわゆる<img src="～～">で表示するようなたぐいのものでしょうか。 それとも線や丸、四角などの描画図形でしょうか？ というのも、もしも前者であるのなら通常のHTML上で対応したほうが簡単そうに思えるからです。 canvasですと、表示された結果は全体で一つの画像のようになってしまいますので、ANo1様の回答にもありますように、クリックされた位置から対象となっている画像をスクリプトで算出・特定し、消去（または再描画）することになります。 画像がタイリングされているような場合は比較的簡単ですが、重なっていたり移動できたりすると、それなりに面倒な処理になると予想されます。 一方で、DOM要素であれば、そのまま個別のオブジェクトとして認識されていますので、クリックされた対象の特定も簡単ですし、個別に表示/非表示することも簡単だからです。 どうしてもcanvas上でないとならない理由があるのであれば、ANo1様の回答のような方法になろうかと思います。 なさりたいことの全体像がつかめていませんが、線や丸なども含めてオブジェクトとして扱えるSVGを利用するという方法もあるかもしれません。 　http://ascii.jp/elem/000/000/585/585608/
特定のリンク <a href="test.pdf" class="特定のリンク">PDF</a> 特定のリンクにのみ、現URLのパラメーターを追加 var search = document.location.search; var targets = document.querySelectorAll('a.特定のリンク'); for (var i = 0; i < targets.length; i++) { _ var target = targets[i]; _ var url = target.href; _ url = url.replace(/\?.*$/,''); // 既存のパラメーターを削除 _ url += search; // 現URLのパラメーターを追加 _ target.href = url; } もし、現URLのパラメーターのうち 'q' と 'pdf' のみ追加したいなら、 関数 GetQueryString の戻り値から、変数 search を生成してください。
なさりたいこととその意味がいまいちわかってないのですが・・・ ドキュメント上で最上位に当たるＬＩ要素まで辿って、その子孫のinput[type='checkbox']に全てチェックをいれるってことと解釈しました。（チェックを外すときは処理対象外） ※ ご提示のHTMLはulの閉じタグの数が合わないので、構造が 　 はっきりしません。（適当に閉じタグを追加しました） ※ 一番外側のulは一つになると思えるのですが、そうはなって 　 いないので、包含要素としてdiv要素を追加しています。 最初に書いたようにあまり理解できていないので、ご参考までに・・・ （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> function hoge(evt){ 　var e = evt.target || evt.srcElement, li; 　if(e.nodeName != "INPUT" || e.type != "checkbox" || !e.checked) return; 　while(e){ 　　if(e.nodeName == "LI") li = e; 　　e = e.parentNode; 　} 　if(!li) return; 　var elms = li.querySelectorAll("input[type='checkbox']"); 　for(var i = 0; e = elms[i++];) e.checked = true; } </script> </head> <body> <div onclick="hoge(event)"> <ul> <li><input type="checkbox" name="A" value="">親A <ul> <li><input type="checkbox" name="B" value="" class="second">子A <ul><li><input type="checkbox" name="C" value="" class="second">孫A</li></ul> </li> </ul> </li> </ul> <ul> <li><input type="checkbox" name="A" value="">親B <ul> <li><input type="checkbox" name="B" value="" class="second">子B <ul><li><input type="checkbox" name="C" value="" class="second">孫C</li></ul> </li> </ul> </li> </ul> </div> </body> </html>
文字列を入れたら、文字列のサイズになるのは当然です。 arrays[0] = array1; arrays[1] = array2;
> "がなぜか抜けてしまって というのがどう抜けたのかが分からないので少々自信がありませんが、 > }else if(yourName= || yourName==null){ が 　}else if(yourName="" || yourName==null){ だとすると、こちら（Windows 7 + IE 11）で同一の現象を確認しました。 原因は == とすべきところを = としてしまったことです。 この結果、if 文の中の 　yourName="" || yourName==null は、あなたが想定したであろう「yourName が "" か null のいずれかか」の論理式の結果ではなく、「"" と 『yourName が null か』との論理和を yourName に代入する」の結果になります。 javaScript では "" も論理式では false とみなされますので、論理和の性質を考えるとこの式は「『yourName が null か』を yourName に代入する」という事になります。 したがって、問題の if 文は yourName に「yourName が null か」を代入し、その値によってその後の文の実行の是非を判断します。 参考 URL - いずれも MDN 演算子の優先順位 https://developer.mozilla.org/ja/docs/Web/JavaSc … 論理演算子 https://developer.mozilla.org/ja/docs/Web/JavaSc …
まずはブログを開設しているのでしょうか？ どこのアフェリエイトサイトのサービスでしょう？ たいていはアフェリエイトサイトで広告の貼り方も説明がされています。 ｈｔｍｌタグが指定されるので、これを貼り付けてください。 「ブログ」と一口に言われても操作手順は様々存在します。
たぶんですが。 i㎎ src　で呼び出すつもりの画像ファイルが同じ階層のディレクトリに存在しない可能性があるのではないですかね？ 　呼び出すｈｔｍｌファイルが存在する同じ階層のディレクトリにすべてのファイルをアップロードしたらどうなるでしょうか？ ＞<h1><img src="Kaleidoscope-logo.jpg"alt="Kaleidoscopeのロゴ"></h1> 　本当にこのファイルネームですか？ 　ネットの世界ではファイルネームの大文字と小文字は区別されます。 　念のためにファイルネームを小文字に統一してみてはどうだろうか？
いまいち何をやりたいかわかりませんが setTimeoutでtempvalueを渡していますが、配列で渡さずに 文字列でわたしてますよね？なんか変な処理です たとえばこうとか？ setTimeout(function(){test(tmpvalue)}, 1000); それとevalはいろんな意味でトラブルの原因になりがちなので 可能な限り排除する方向で・・・
ANo2です ＞複数の関数化が必要と思うのですが、関数化した場合、 ＞　　～～～～～ ＞として、呼び出し側ではどう関数を呼び出したら良いでしょうか？ hogehoge.js全体を一つの関数化して（匿名関数でもＯＫ）、それぞれの関数内で、hoge、fuga、status等を定義するようにして実行すれば可能です。（No2は一個限定なのでグルーバル変数にしているものを個別に定義するため） 対象が2～3箇所であるなら、個々に設定しても大したことはないでしょうが、多くなってくると一括で処理できる方が便利ですよね。 その際には、「クリックされた要素」、「対象とする要素」、「URL」などを特定できるような仕組みが必要となります。最初の回答は、多少それを意識したものでした。 （thisはクリック要素、idが対象要素、urlsがurlの連想配列などになっていました） 基本的にクリックイベントの発生時の処理として記述していますが、前回はHTML内に「onclick="～～"」を記述することで行っていましたが、ANo2ではスクリプト内からイベント設定を行っています。 　trigger.onclick = function(){　～～　} がこれにあたります。 ご質問文からは実際の使われ方がよくわからなかったので（HTML構成や複数あるのかなどなど）、手探りで（適当に）例として作成していました。 HTMLの構成にある程度のルールを決められれば、this値やidを使用しなくとも特定できるようになるので、スクリプトが多少複雑になっても、HTMLを単純化することが可能になります。 また、変更が生じる毎にスクリプトを書き直さねばならないとか、ページ毎にjsファイルを作成しなければならないという不便さも解消できます。 できるだけ個別の情報はHTML側に記載して、一般化した処理をスクリプトで行うようにしておく方が再利用しやすくなるでしょう。 何度か説明を頂いて、だいたいの雰囲気が分かってきましたのが、勝手に想定しましたが、下記のようなものが良いのかも知れません。 おまけ ＞trigger.innerHTML = status==1?str[1]:str[0]; ＞などという書き方は意味不明 「条件演算子（三項演算子）」と言われるもので、上記の例で言えば 　if(status==1) trigger.innerHTML = str[1]; 　　else trigger.innerHTML = str[0]; と等価です。 https://developer.mozilla.org/ja/docs/Web/JavaSc … 【構文ルール】 基本構成を以下のようなものにしています。 　<div class="linkLoader"> 　　<a class="open" href="piyopiyo.html">開く</a> 　　<a class="close" href="#">閉じる</a> 　　<div class="showbox"></div> 　</div> ※ クラスlinkLoader要素を単位として、.open、.close、.showboxを設置 ※ .open、.closeはＡ要素で、表示用の文字列は個別に記述できます ※ .openをクリックすると.showbox内にiframeが生成され（最初のみ） 　 Ａ要素のhref属性が参照するurlを意味します ※ 要素の位置関係は.linkLoader内であれば自由。階層が変わってもＯＫ。 ※ linkLoaderどうしや他のクラスもネストすることはできません 【HTML(サンプル)】 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .linkLoader .showbox iframe{ width:100%; height:300px; } </style> </head> <body> <div class="linkLoader"> 日経新聞 <a class="open" href="http://www.nikkei.com/">開く</a> <a class="close" href="#">閉じる</a> <div class="showbox"></div> </div> <div class="linkLoader"> 読売新聞 <a class="open" href="http://www.yomiuri.co.jp/">表示</a> <a class="close" href="#">隠す</a> <div class="showbox"></div> </div> <div class="linkLoader"> 朝日新聞 <a class="open" href="http://www.asahi.com/">オープン</a> <a class="close" href="#">クローズ</a> <div class="showbox"></div> </div> <script type="text/javascript" src="hogehoge.js"></script> </body> </html> 【hogehoge.js】 （全角空白は半角に） (function(){ 　var clsCheck = function(e, c){ 　　return new RegExp("(^| )" + c + "( |$)").test(e.className); 　} 　var searchLoader = function(e){ 　　while(e && !clsCheck(e, "linkLoader")) e = e.parentNode; 　　return e; 　} 　var dispControl = function(e, sel, disp){ 　　var i, e, elms = e.querySelectorAll(sel); 　　for(i = 0; e = elms[i++];) e.style.display = disp; 　} 　var handler = function(evt){ 　　var t = evt.target || evt.srcElement; 　　if(t.nodeName != "A") return; 　　var e = searchLoader(t); 　　if(!e) return; 　　if(clsCheck(t, "open")){ 　　　var box = e.querySelector(".showbox"); 　　　if(!box) return; 　　　if(!box.querySelector("iframe")){ 　　　　var frm = document.createElement("iframe"); 　　　　frm.src = t.href; 　　　　box.appendChild(frm); 　　　} 　　　box.style.display = "block"; 　　　dispControl(e, ".open", "none"); 　　　dispControl(e, ".close", "inline"); 　　} else if(clsCheck(t, "close")){ 　　　dispControl(e, ".close", "none"); 　　　dispControl(e, ".showbox", "none"); 　　　dispControl(e, ".open", "inline"); 　　} 　　if(evt.preventDefault) evt.preventDefault(); else evt.returnValue = false; 　} 　dispControl(document, ".linkLoader .close", "none"); 　dispControl(document, ".linkLoader .showbox", "none"); 　if(document.addEventListener) { 　　document.addEventListener('click', handler, false); 　} else if(document.attachEvent) { 　　document.attachEvent('onclick', handler); 　} })();
コードにおかしいところはありません。 Win7+IE11と、Firefox37では何の問題も無くアラートが10回出ます。
こんにちは。 スクリプトで行うのが適切なのかどうか不明ですが、とりあえずこんな感じでしょうか？ var dt = new Date(); var d = dt.getDay(), h = dt.getHours(); if(d == 0 || d == 6 || !(7 < h && h < 21)){ location.href = "http://www.yahoo.co.jp/"; }
> eachはセレクタで指定した要素数分、一度だけ処理をおこなうと理解していたのですが(li要素が2つあったとしたら2回each内を繰り返す。) この認識はあっています。しかし、 > 下記を実行してみるとフォーカスしたとき、フォーカスが外れたときに処理が行われ、その処理を何度クリックしても、その動作を繰り返します。 で実行しているのは each 文の直接の内部ではありません。 メソッドチェーンしているので blur の方を抜かし片方だけにして書きますが、 $(this).focus(function(){ if($(this).val()==labelText){ $(this).val(""); } }); という文は2つに分けて考えます。 一つは $(this).focus(...); で、これが each の中で実行されていることです。この focus() メソッドは、$(this) で表される要素にフォーカスがあった時に引数として渡された関数を実行するように設定します。いいですか、「設定」だけです。渡された関数はこのメソッドを実行した時点では実行されません。 もう一つは function(){ if($(this).val()==labelText){ $(this).val(""); } } で、上記の通り each の中を実行しているときにはこの関数は実行されません。実行されるのは、上記にある通り「フォーカスがあった時」です。フォーカスがあったなら何度でも実行されます。
ANo1、2です。 先程は時間がなかったので… 試みに、再編集する簡単なものを作成してみました。 リンク要素を単位として、li要素に2組ずつに再編集するものです。 ※ 元がjQueryを利用しているので、サンプルも利用しています。 ※ サンプルは確認できるようボタンクリックで処理していますが 　 実際はそのままsly実行前に処理すればよろしいかと。 ※ 3列などの場合は「if(items[i]) elm.append(items[i++]);」を 　 増やせばいいかな…（汗） ※ newの画像はとりあえず直に入れてクラスをつけていますが、リンク要素 　 の中で成立していれば、構成が変わっても影響はありません。 ※ CSSは最小限のいい加減なものですので、きちんと実際に合わせてください。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #smart { width:200px; height:600px; overflow:hidden; } #smart ul, #smart li{ list-style-type:none; margin:0; padding:0; } #smart ul{ width:200px; } #smart li a{ display:inline-block; position:relative; padding:10px; } #smart li a img{ width:80px; height:80px; border:0; } #smart li a img.new { position:absolute; top:0; left:0; width:32px; height:32px; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ //　テスト用ボタンイベント処理 $("#test").click(function(){ 　reEdit("#smart"); }); //　再編集処理 function reEdit(id){ 　var ul = $(id + " ul").eq(0); 　var items = $(">li>a", ul); 　var i, n = items.length, elm, li = $("<li></li>"); 　$("li", ul).remove(); 　for(i = 0; i < n;){ 　　elm = li.clone(); 　　if(0 == i) elm.addClass("active"); 　　elm.append(items[i++]); 　　if(items[i]) elm.append(items[i++]); 　　ul.append(elm); 　} } }); </script> </head> <body> <div style="margin-bottom:2em;"> <input id="test" type="button" value="再編集のテスト"> </div> <div id="smart"> <ul class="items"> <li> <a href="#"><img src="A.jpg" alt=""> <img class="new" alt="new" src="btn1.gif"></a> </li> <li> <a href="#"><img src="B.jpg" alt=""> <img class="new" alt="new" src="btn1.gif"></a> </li> <li> <a href="#"><img src="C.jpg" alt=""> <img class="new" alt="new" src="btn1.gif"></a> </li> <li><a href="#"><img src="D.jpg" alt=""></a></li> <li><a href="#"><img src="A.jpg" alt=""></a></li> <li><a href="#"><img src="B.jpg" alt=""></a></li> <li><a href="#"><img src="C.jpg" alt=""></a></li> <li><a href="#"><img src="D.jpg" alt=""></a></li> <li><a href="#"><img src="A.jpg" alt=""></a></li> <li><a href="#"><img src="B.jpg" alt=""></a></li> <li><a href="#"><img src="C.jpg" alt=""></a></li> </ul> </div> </body> </html> ※ 再度いらぬおせっかいですが、ご提示のソースのリンク要素の閉じタグがダブっているものがいくつかあります。タイポなのか、出力用プログラムのミスなのか・・・？
こんにちは。 雰囲気はわかりますが、実際の方法や状態がわからないので、とりあえず、わかるところだけ… ＞続きを読むをクリック→ファイル名の後ろに&continue=on#continue ＞が付きページが新しく表示される 推測するところ、URLのクエリやハッシュのことだと想像します。 多分、URLのアドレスの後ろに『?～～～&continue=on#continue』が付加されているという意味かと思います。 ＞『&continue=on#continue』が付いたページにアクセスした場合に ＞『style{display:"inline";}』が動作する #continueに対応するリンク要素がHTML内に用意されているのかどうか不明ですが、ご質問の意味合いから推測すると『continue=on』を判定すれば良いのかなと考えました。 ＞『style{display:"inline";}』が動作する とおっしゃっているものがどのように動作しているのかが、ご質問文からは不明ですので、以下は、判定するところだけの回答になります。 var params = {}, dec = decodeURIComponent; var qs = location.search.substring(1).split("&"); for(var i = 0; i < qs.length; i++){ 　var tmp = qs[i].split("="); 　if(tmp[0] != "") params[dec(tmp[0])] = dec(tmp[1]); } if(params["continue"] == "on"){ 　alert("onやで！"); 　// ここに『conteinue=on』の場合の処理を記述 }
ANo1です。　こんにちは。 ANo1の時は質問者様がすでに確認なさっているので、試してみることはしませんでしたが、スクリプトの作者さんのブログを見てみると初期設定のセットが1つに限らなくてもよさそうに思えますね。 　http://d.hatena.ne.jp/sutara_lumpur/20120509/133 … ・・・ということで、一応、確認してみることにしました。 サンプルの一番簡単なものを3行にして試してみたところ、初期設定時に複数の項目があってもきちんと動作するようです。 ご指摘の、 　＞「0，1，2」と３行あるフォームに追加しようとすると 　＞「0，1，1，2」となってしまいます のようなことは起こらずに、期待通り「0、1、2、3・・・」となります。 現在なさっている設定を、再度ご確認なさるのがよろしいのではないでしょうか？ 設定オプションの説明等はこちらにあります。 　http://www.usamimi.info/~sutara/sample/add-input …
エラーメッセージを見ると「nullのu_shipDate属性を参照できない」みたいな感じだと思いますが、ご提示のスクリプトではそのような属性値（u_shipDate）を参照しようとしているところは見当たらないようです。 それなので、推測するところ、別のスクリプトでエラーが発生しているのではないでしょうか？ 充分な情報がないのでよくわかりませんが、要素の取得に失敗していて（= nullになっている）その属性値を参照しようとしてエラーが出ているのではないかな・・・ ご提示のスクリプト実行時のエラーに間違いないとするなら、エラーメッセージの「u_shipDate」かスクリプト内の「u_buyDate」はどちらかがタイポで同じものだと仮定して ・・・myFormがnull値になっている。 ・・・すなわち、呼び出し側のthis.formに該当する要素が存在しないってことかも？ 念のため、安全サイドで記述するなら 　myForm.elements["u_buyDate"] ～ のような記述法のほうがより良いかも知れません。
何を抽出したいかによりますが、一般的にはWEB循環ツールなどをつかったりします javascriptはXSSの制限にかかる可能性があり安定してうごかないと思いますが
ANo1です。 反応がないので無駄なのかもしれないけど、勝手に・・・ どのような使い方をなさりたいのか不明なので適当ですが、一応ANo1の2)の方式のものを。 　※隙間は±1pxで、合計2px×2pxにしてあります。 　※要素サイズやマウス位置取得のクロスブラウザが面倒なのでjQueryを利用 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #hoge { height:300px; background-color:#FFC; } #fuga { height:400px; margin-left:200px; width:800px; background-color:#FCF; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ 　var id = "fuga"; //　←対象要素のＩＤ //初期設定・カーソル作成 　var elm = $("#" + id); 　var body = $("body"), spc = 1; 　var eStart = elm.offset(); 　var eEnd = {x: eStart.left + elm.innerWidth(), y: eStart.top + elm.innerHeight()}; 　var c = $("<div></div>"); 　c.css({ position: "absolute", top: 0, left: 0 }); 　var x1 = c.clone(); 　x1.css({ width: "1px", height: "1px", backgroundColor: "#F00" }); 　var x2 = x1.clone(), y1 = x1.clone(), y2 = y1.clone(); 　body.append(c.append(x1, x2, y1, y2)); //イベント設定 　elm.on("mousemove", cursorSet); 　if(elm != body && elm != $("document")) c.on("mousemove", cursorSet); //カーソル表示処理 　function cursorSet(evt){ 　　var x = evt.pageX + body.scrollLeft(); 　　var y = evt.pageY + body.scrollTop();　 　　x1.css({ left: eStart.left, top: y, width: x - eStart.left - spc }); 　　x2.css({ left: x + spc, top: y, width: eEnd.x - x - spc }); 　　y1.css({ left: x, top: eStart.top, height: y - eStart.top - spc }); 　　y2.css({ left: x, top: y + spc, height: eEnd.y - y - spc }); 　} //クリックテスト用アラート $("#fuga a").click(function(){ alert("clicked"); return false;}); }); </script> </head> <body> <div id="hoge">hoge</div> <div id="fuga"> <p>fuga <p><a href="#">click test</a> </div> </body> </html>
formをsubmitしたらページは遷移します。これは絶対です。 ページを遷移しないでのJavaScriptからのリクエストは、xmlhttprequest もしくは Ajax というキーワードで調べてください。
こんにちは。 情報にもなっていないかもしれませんが・・・ 立体的に見せたいとするなら、ご提示の事例のようにCSS3でperspectiveを指定してtransformを利用したアニメーションにするのが簡単だと思いますが、最近のブラウザが対象ということになってしまいますね。 （例示の4番目がうまくできているかと…） CSS3を利用しないで画像に奥行きを持たせる方法を、だいぶ以前に回答したことがありますが、 　https://oshiete.goo.ne.jp/qa/7608841.html こちらもcanvasを利用していますので、似たり寄ったりでしょうか・・・ 古いブラウザでも動くものとしては、例示の2番目のような平面的な回転をCSS3を用いずに行うことになるのかな・・・ （例示の2番目はCSS3を利用しているようですが…） 具体的には、 　1）画像の横幅を縮めるアニメーション 　2）幅が無くなったところで画像を入れ替え 　3）もとの横幅に戻すアニメーション を連続して行えば、そのように見えると思います。 ただし、奥行きの表現ができないので、単に画像が縮まって広がるだけに見えてしまうかも・・・ 速度を一定でなく、回転の時のように伸縮してあげれば、疑似的に回転しているように見えるかもしれませんね。 ＞クリックすれば動くものはあるのですが、自動でカルーセルの ＞ようなアニメーションをしてくれるものが見つかりません。 そのままで使えるものがあるのでしたら、ロード時にスクリプトからスイッチとなっている要素をクリックしてあげるか、あるいは、クリックしたら呼び出される関数を直接呼び出すなどすることで、自動で動作するのと同様に見えると思います。 この方法であれば、既存のものをそのまま利用できますし、付け加えるのも2～3行で済むのではないでしょうか。 （元のスクリプトの仕組みにもよりますが…）
ANo1です。 読込先のCSSやスクリプトも反映させたいのであれば、ajaxよりも要素を生成する方法の方が、ブラウザが処理をしてくれるので簡単でしょう。 ＞objectをスクリプトで生成するという方法はどの様なものがありますでしょうか？ 　・createElement()などを用いて要素を作成することが可能です。 　・innerHTML()を利用して文字列で流し込んでしまってもできます。 　（後者の方が簡単かもしれません） 以下に、createElementを利用した簡単なサンプルを作成してみましたのでご参考までに。 ※ object要素だとブラウザによっては読み込んでくれないものがあるようなのでiframe要素に変えています。 　（innerHTMLで書き込めば読み込んでくれるみたいですが…） ※ 一応、簡単なコメントをつけてあります。 （以下、全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> //読込先のURLデータ（複数化できるように） var urls = { 　fuga : "fugafuga.html" } //クリック時の処理関数 function hoge(e, id){ 　var elm = document.getElementById(id); //対象要素が存在しなければ何もしない 　if(!elm) return; 　var obj = elm.getElementsByTagName("iframe"); //「表示」処理 　if(e.value == "表示"){ //　　すでに読み込んでいる場合（CSSで表示する） 　　if(obj.length){ 　　　obj[0].style.display = "block"; 　　　statusSet("非表示→表示"); 　　} //　　最初に読み込む場合（要素を追加する） 　　else { 　　　var o = document.createElement("iframe"); 　　　o.src = urls[id]; 　　　elm.appendChild(o); 　　　statusSet("要素作成、読込み"); 　　} 　　e.value = "隠す"; 　} //「隠す」処理 　else { 　　obj[0].style.display = "none"; 　　e.value = "表示"; 　　statusSet("表示→非表示"); 　} //動作状況表示用（本来は不要です） 　function statusSet(str){ 　　var c, elm = document.getElementById("message"); 　　while(c = elm.firstChild) elm.removeChild(c); 　　elm.appendChild(document.createTextNode(str)); 　} } </script> </head> <body> <div> <input type="button" onclick="hoge(this, 'fuga')" value="表示"> &emsp;【 状態 】 <span id="message">初期状態</span> </div> <div id="fuga"></div> </body> </html>
ANo1、2、3です。 補足を見ました。 最初のご質問文のコードとは違うようですね。 補足でご提示のスクリプトでは最後の閉じ括弧が抜けているようですが、コピペのとき抜け落ちたものと解釈しました。 補足のスクリプトを見ただけですが・・・（テストしていません） ＞ var out = $("#slider li a").mouseout(～～) ＞ var over = $("#slider li a").mouseover(～～) は、bxsliderとは別個にautoHoverと同様のイベント処理を設定しているように思いますが、optionでもautoHoverが設定されているので、処理がダブっていることになりませんか？ （同様の処理を2回行うだけで、実害はないかもしれませんが…） ＞ただ、１０秒経過し止まってから、マウスアウトすると動いてしまいます。 一方で、10秒後にautoを停止しても、上記の（個別設定の）イベント処理は活きていますので、outで設定されている通り、マウスアウトが発生すればautoStartするものと思います。 これによって、ご質問の状況となっているのではないでしょうか。 ANo2の最後にも書きましたように、別個に設定しているイベント処理を止めたければ、これを停止（削除）する必要があります。 とはいうものの、ご提示のスクリプトの場合は、そもそもイベント処理を設定する必要がないように思えますが…？ 回答の最初の時点では、bxsliderをまったく知りませんでしたが、だいぶ勉強させていただきました。（笑）
個人的にはドラッグ＆ドロップの方が使いやすいように感じますが… 細かなところがよくわからないので適当ですが、こんな感じでしょうか？ ※ 少し古いブラウザも対象にしています。 ※ 最近のブラウザ限定ならquerySelectorやforEach、map等が使えるので 　 もっと簡潔にすることができるでしょう。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> ul.moveable, ul.moveable>li { list-style-type:none; margin:0; padding:0; } ul.moveable { padding-left:3.5em; } ul.moveable>li { position:relative; background-color:#ddd; margin-bottom:0.3em; } ul.moveable>li div.control { position:absolute; top:0; left:-3.5em; } ul.moveable>li div.control button { margin-right:0.3em; padding:0; font-size:x-small; } </style> </head> <body> <ul class="moveable"> <li><div>#1 item</div></li> <li><div>#2 item</div></li> <li><div>#3 item</div></li> <li><div>#4 item</div></li> <li><div>#5 item</div></li> <li><div>#6 item</div></li> </ul> <script type="text/javascript"> (function(){ 　var uls = document.getElementsByTagName("ul"); 　var ctrl = createControl(); 　var ul, i, lis, li, j; 　for(i = 0; ul = uls[i++];){ 　　if(ul.className == "moveable"){ 　　　addEvent(ul, "click"); 　　　lis = liList(ul); 　　　for(j = 0; li = lis[j++];) setControl(li); 　　} 　} 　function handler(evt){ 　　var t = evt.target || evt.srcElement; 　　if(t.nodeName != "BUTTON" || t.parentNode.className != "control") return; 　　var li = t.parentNode.parentNode; 　　var ul = li.parentNode, lis = liList(ul); 　　var idx = 0, cls = t.className; 　　while(lis[idx] != li) idx++; 　　if(cls == "_UP" && idx>0) ul.insertBefore(li, lis[idx-1]);　 　　else if(cls == "_DN") ul.insertBefore(li, lis[idx+2] || null); 　} 　function addEvent(e, typ){ 　　if (e.addEventListener) e.addEventListener(typ, handler, false); 　　else if(e.attachEvent) e.attachEvent("on" + typ, handler); 　} 　function liList(ul){ 　　var i, li, lis = [], elms = ul.childNodes; 　　for(i = 0; li = elms[i++];) if(li.nodeName == "LI") lis.push(li); 　　return lis; 　} 　function setControl(li){ 　　li.insertBefore(ctrl.cloneNode(true), li.firstChild); 　} 　function createControl(){ 　　var ctrl = document.createElement("div"); 　　ctrl.className = "control"; 　　ctrl.appendChild(createButton("_UP", "△")); 　　ctrl.appendChild(createButton("_DN", "▽")); 　　return ctrl; 　} 　function createButton(cls, txt){ 　　var b = document.createElement("button"); 　　b.appendChild(document.createTextNode(txt)); 　　b.value = txt; 　　b.className = cls; 　　return b; 　} })(); </script> </body> </html>
関数の再帰呼び出しで実現できます。 var 最下層まで表示 = function(o,n) { _ n=n?n:[]; _ if (typeof o != 'object') { _ _ console.log(n.join('.') + ' : ' + o); _ } else { _ _ for(var i in o) arguments.callee(o[i], n.concat(i)); _ } }; var オブジェクト = {a:1,b:{い:2,ろ:{i:3,ii:4}}}; 最下層まで表示(オブジェクト); // console 出力結果 a : 1 b.い : 2 b.ろ.i : 3 b.ろ.ii : 4
> 金額の欄がすごくせまくなってしまった 金額の <input> を修正してください。 案1: size の値をもっと大きい数にする 案2: 数量の <input> と同様に size を書かない 案3: <output name=field_total></output> に変換する、ついでに <td align=right> とする > 入力するとNaNとなってしまい document.form1.goods1.selectedIndex が間違いです 案1: parseInt(document.form1.goods1.value) ← 数量は必ず整数 案2: parseFloat(document.form1.goods1.value) ← 数量に半端な数を認める
こんにちは。 jqgridって知らないのと英語が苦手なので、斜めに眺めただけですが… jqgridのサイトによれば、2階層まではもともと想定されているのでは？ 下記参考サイトの、 ①　　＞ advanced ＞ Grid as Subgrid ②　　＞ advanced ＞ Subgrid ③　　＞ advanced ＞ Maqster Detail などがその例になっているように思います。 3層以上の場合は、③のMaster Detailを応用すれば、階層数を増やすだけでそのままいけるのではないでしょうか。 ①や②の応用でも可能そうに思いますが、jqgridの他の機能（ソート等）と整合できるように気を付ける必要がありそうですね。 【 参考サイト 】 http://www.trirand.com/blog/jqgrid/jqgrid.html
たぶん * 引用符の重複による文法エラー * 特定キーワードの混入による誤作動 が原因ではないかと 例) 誤: message:"<script src="テレポートのお供に梅仁丹216円.js"></script>" 正: message:"<scr" + "ipt src='テレポートのお供に梅仁丹216円.js'></scr" + "ipt>"
ご提示のサンプルでは出来ません やるとしたらこんな感じでしょうか // randomadv.js function createAdvertisementObject(_) { var neo = [], a = Array.prototype.slice.apply(arguments); function sum(a){ var i,t; for (t=i=0; i<a.length; i++) t += a[i].rate; return t } function find(a,n){ var i; for (i=0; i<a.length; i++) { n -= a[i].rate; if (n<0) return i } return 0} while (a.length > 0) neo.push((a.splice(find(a, Math.random() * sum(a)), 1))[0].message); return { data:neo, length:neo.length, index:0, getNext:function(){return this.data[this.index++ % this.length]} }; } var advertisementObject = createAdvertisementObject( { rate:80, message:"正太新聞 読もう"}, { rate:15, message:"正太ラジオ 聴こう"}, { rate:4, message:"週刊のび太 特別付録付きで定価100円"}, { rate:1, message:"ころばし屋 血も涙もない転ばせぶりです 依頼料10円"} ); // ページ <script src=randomadv.js></script> <body> ... <script>document.write(advertisementObject.getNext());</script> ... <script>document.write(advertisementObject.getNext());</script> ...
通常のjQueryです。 虫眼鏡を囲んだdiv#sarBoxをクリックした時に、リストの表示フラグを見てfeadOutとfadeInで表示or非表示しています。下記がその制御のコードです。 var isLinksShow = false; jQuery('#sarBox').click(function(){ if(isLinksShow){ jQuery(this).next('div').fadeOut("5000"); isLinksShow = false; }else{ jQuery(this).next('div').fadeIn("5000"); isLinksShow = true; } });
グローバル変数の window とまったく同じ物です。 これはブラウザを操作するためのAPIを提供しているオブジェクトでして、 jQuery の実行には不可欠なものです。 参考) https://developer.mozilla.org/ja/docs/Web/API/Wi … グローバル変数なので、単に window と書けば使える筈ですが、 わざわざ関数引数の window としている理由は、たぶん以下の二点 * 性能 グローバル変数の window より、 関数引数の window の方が、使用時の実行性能が良い。 * 将来のコード互換性の維持 ブラウザ以外の実行環境を考慮して、 グローバル変数の window が無くても 関数引数の window が使える余地を残した。 実際に最近の jQuery では Node.js 対策として活用しているようです。 もうひとつの引数である $ も似たような理由で引数化していると推測します
<input type="file"> とか 　<input type="file"　accept="image/*">　（未実装？） を利用して送信できると思いますが、このような質問をなさってるってことは、送れても受け取れないのでは？ 　https://developer.mozilla.org/ja/docs/Web/HTML/E …
スクリプトは見てませんが・・・ canvasを利用して表示しているようですね。 ＞テキストや画像と背景がそれぞれ単体（別々のブロック）で表示されてしまいます。 position:absoluteにして、重ねて表示するようにすればよろしいのでは？ 　https://developer.mozilla.org/ja/docs/Web/CSS/po … 　https://developer.mozilla.org/ja/docs/Web/CSS/z- …
スクリプトそのものは単純で、指定のLI要素に対してマウスエンターでスライドダウン、マウスリーブでスライドアップという内容になっています。 ＞すぐに引っ込んでしまったり、うまく選べません。 ご提示のソースを表示してみると、親メニューと子メニューの間に隙間ができていますので、そこをマウスが通るとマウスリーブとなって、メニューが閉じるという事象が発生します。 マウスを素早く動かすと、うまくいけば子要素のLIへのマウスエンターが間に合って、表示されたままとなります。 ご質問の「安定しない」とはこれではないかと推測しました。 スクリプトを修正して対応することも不可能ではないでしょうが、レイアウトの方法を修正する方が遥かに簡単そうです。 （スクリプトの修正で対応するにしても、レイアウトの方法を変えた方がやりやすそうに思います） 要は、隙間部分をなくすか、隙間を設けるにしてもその部分をLI要素の一部として評価されるようなレイアウトになさればよろしいのではないでしょうか。 一番簡単なのは、 　ul.child{ top:27px; } みたいに、位置を明示的に指定することで隙間をなくしてしまえば、とりあえずはご期待の動作になるのではないかと推測します。
関数 makeArr で return arr する直前にソートを追加 例) arr.sort(function(a,b){return 画面入力した条件でaとbを比較する処理}); 参考) https://developer.mozilla.org/ja/docs/Web/JavaSc … 関数 loadAjax にソート契機を追加 例) <div class="itemSort"><label><input type=checkbox>昇順</label> ... $('.itemSort input:checkbox').click(getAjaxData);
#1 特定バージョンの jQuery でしか動かないライブラリを使う等の理由で、 ある範囲内だけは $ を別バージョンの jQuery に差し替える または お手軽に変数スコープを作る #2 ローカル変数とグローバル変数の区別を明示する
ノータリンなら、そんなページは作らないで平易なページを作りましょう
極端に多いのはわかりませんが、普通の使用に困るような制限はなかったような・・・ 英語苦手なので、調べるよりも実験しちゃいましたが、表示されるようですよ？ （50×50＝2500までは表示されることを確認しました。重なって見えないけど…） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false" … </head> <body> <h3>テストサンプル</h3> <div id="map" style="width:800px; height:600px;"></div> <script type="text/javascript"> (function(){ var n = 20; var x, y, dx, dy, sx, sy, pos; var sw = new google.maps.LatLng(35.650, 139.700); var ne = new google.maps.LatLng(35.715, 139.795); var opt = { mapTypeId: google.maps.MapTypeId.ROADMAP }; var map = new google.maps.Map(document.getElementById("map"), opt); map.fitBounds(new google.maps.LatLngBounds(sw, ne)); dx = (ne.lng() - sw.lng())/n, sx = sw.lng() + dx/2; dy = (ne.lat() - sw.lat())/n, sy = sw.lat() + dy/2; for(x = 0; x < n; x++){ for(y = 0; y < n; y++){ pos = new google.maps.LatLng(sy + dy * y, sx + dx * x); new google.maps.Marker({ map: map, position: pos}); } } })(); </script> </body> </html>
$('#folder') とありますが、Y.Okano 氏のページに記載された HTML には id が folder の要素が見受けられません。すみませんが、あなたが処理を行おうとしているページの HTML をご呈示願います。 また、JavaScript のほうも Y.Okano 氏のページのそれと上記以外の差異があるのならばそれもご呈示願います。
危険な内容が～とかそういったメッセージが出るサイトは、 検索結果先のサイトが、検索ツール（GoogleだったりYahooだったり）で、 過去にウイルスの検知がされたとか、海外サイトの場合、使ってるブラウザのセキュリティ設定等によって出る場合がありますね。 また、各個別のサイト自体ではなく、サーバー自体がアウトになるところもありますね。 Facebookとかのページも、ガラケーで検索してアクセスしようとすると、 安全じゃないからアクセスさせませんよ的なメッセージで閲覧できなかったりします(´・ω・｀) ただ、最近はスマホに対応したウイルスも色々で回ってる様なので、 場合によってはサイトがウイルスに感染しているとかも考えられなくはないかと思います…。
……画像? あなたが言っている「JS Bin」が以下のページなら画像がどうこうという話は出ないはずですが…… http://jsbin.com/ 編集した内容のファイルへの保存方法なら (1) File - Save snapshot を実行 (2) File - Download を実行して保存先を指定 できると思いますが……って、ああ、ひょっとして snapshot を画像関連の用語だと思っちゃいましたか。 この場合の snapshot は入力したコードの「現状」という意味で、画像とは関係ありません。
No.2 は HTML5 環境を想定しているので、もし動かない場合はたぶんコレで window.onload = function(){ // IE8 function A(a,f){for(var i=0;i<a.length;i++) f(a[i]); } function Q(s,f){A(document.querySelectorAll(s),f)} function clicker(form, elem) { var sec = form.name; var val = (elem && elem.checked)? elem.value: null; function switchOpt(e){e.style.display = (val == 'all' || e.className.indexOf(val) >= 0)? 'block': 'none'} Q('*.opt.' + sec, switchOpt); } Q('form.opt input[name=t]', function(elem){elem.onclick = function(){clicker(this.form, this)};}); // Q('form.opt', clicker); // 初期化が必要な場合 };
音楽プレイヤーを起動させるのはまず無理でしょう。 Youtubeに音声をアップロードし、 バックグラウンド再生してもらう方法はだめでしょうか？
ウィンドウに名前をつけて開きます。PCもスマホも関係ないです。 1) ウィンドウ(匿名)においてa.htmlを開きます。 2) a.htmlでは、href="b.html" target="new"とてもして新しいタブ（ウィンドウ）newでb.htmlを開きます。 3) さらに、そのページ(b.html)内のリンクは、href="c.html" target="abc"とすると、クリックするとabcウィンドウでc.htmlが開きます。 4) c.htmlのリンクにtargrt="new"と書かれていたら、先のウィンドウ上に開かれます。 ★ウィンドウに名前がついていればそこで開きますから、原理的には一ページ無駄になります。 ＞表示はIPadやタブレットまたはスマホ(アンドロイド、iOS)で見ることを前提として制作しています。PCでの表示は想定していません。 　そうではなくて、ipadやスマホもmediaの種類はscreenです。著者の希望に関わらずPCでも開かれますし、検索エンジンも、あるいは携帯電話（media="handheld"）も訪問するでしょう。 　そもそもHTMLでウェブページを作成する目的は、 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 ・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より
ANo1です。 ＞対象とする数が変わることがあるので・・・ 引数を固定せずにargumentsオブジェクトを利用なされば、引数の数を可変にできます。 使う条件のバリエーションにもよりますが、単純変数でも配列でも受付けられるようにしておけば更に便利かもしれません。
見た目の印象は違うけれど、こんな感じなのでしょうか・・・ 　http://www.hi-ho.ne.jp/douton/coordinate.html 画像の入れ替えで実現しているみたいです。
Full Width Image Sliderを使ってはないのですが、 少しでもヒントになればと思ったので貼らせて頂きます。 良かったら見てください。 http://sedoriplan.com/jquery-slideshow-image/
こんなのはどうでしょう <!DOCTYPE html><meta charset=utf-8><title>枠を摘んで表を変形</title> <script>(function(){var _=0; _ ; function A(a,i) { return Array.prototype.slice.call(a, i?i:0) } _ ; function S(e) { return document.defaultView.getComputedStyle(e, '') } _ ; var resizingContext = null;_ ; _ ; function calcXY(e,x,y) { _ , _ ; var M = 5, h, v; _ , _ ; if (e instanceof HTMLTableCellElement) { _ , _ , _ ; var col = e.cellIndex, row = e.parentElement.rowIndex; _ , _ , _ ; h = (x < 0+M && 0 < col)? col-1: (e.offsetWidth-M <= x)? col: -1; _ , _ , _ ; v = (y < 0+M && 0 < row)? row-1: (e.offsetHeight-M <= y)? row: -1; _ , _ ; } _ , _ ; if (e instanceof HTMLTableElement) { _ , _ , _ ; h = (x < e.offsetWidth - M)? -1: e.rows[0].cells.length-1; _ , _ , _ ; v = (y < e.offsetHeight - M)? -1: e.rows.length-1; _ , _ ; } _ , _ ; return (h >=0 || v >= 0)? {horizon:h, vertical:v}: null; _ ; } _ ; function resizeFirst(ev){ _ , _ ; if (resizingContext) return; _ , _ ; var elem = ev.target, tab = ev.currentTarget, ctx = calcXY(elem, ev.offsetX, ev.offsetY); _ , _ ; if (!ctx) return; _ , _ ; ev.preventDefault(); _ , _ ; ctx.baseX = ev.pageX, ctx.baseY = ev.pageY; _ , _ ; if (ctx.horizon >= 0) ctx.cellX = tab.rows[0].cells[ctx.horizon], ctx.width = parseFloat(S(ctx.cellX).width.replace(/px$/,'')); _ , _ ; if (ctx.vertical >= 0) ctx.cellY = tab.rows[ctx.vertical].cells[0], ctx.height = parseFloat(S(ctx.cellY).height.replace(/px$/,'')); _ , _ ; resizingContext = ctx; _ , _ ; window.addEventListener('mousemove', resizeMid, false); _ , _ ; window.addEventListener('mouseup', resizeEnde, false); _ ; } _ ; function resizeCursor(ev){ _ , _ ; var m = calcXY(ev.target, ev.offsetX, ev.offsetY); _ , _ ; ev.currentTarget.style.cursor = m? 'move': 'auto'; _ ; } _ ; function resizeMid(ev){ _ , _ ; if (!resizingContext) return; _ , _ ; var m = resizingContext; _ , _ ; if (m.cellX) m.cellX.style.width = Math.max(1, m.width + ev.pageX - m.baseX) + 'px'; _ , _ ; if (m.cellY) m.cellY.style.height = Math.max(1, m.height + ev.pageY - m.baseY) + 'px'; _ ; } _ ; function resizeEnde(ev) { _ , _ ; if (!resizingContext) return; _ , _ ; window.removeEventListener('mousemove', resizeMid, false); _ , _ ; window.removeEventListener('mouseup', resizeEnde, false); _ , _ ; resizingContext = null; _ ; } _ ; window.addEventListener('DOMContentLoaded',function(){ _ , _ ; A(document.querySelectorAll('table[border]')).forEach(function(s){ _ , _ , _ ; s.addEventListener('mousedown', resizeFirst, false); _ , _ , _ ; s.addEventListener('mousemove', resizeCursor, false); _ , _ ; }); _ ; },false); })()</script> <style> th, td { padding:0.5ex; } </style> <h1>枠を摘んで表を変形</h1> <table border><caption>table #1</caption> <thead><tr><th>name<th>flaggschiff<th>grade <tbody><tr><td>Grillparzer<td>Eistla<td>Admiral <tr><td>Knappstein<td>Ulfrun<td>Admiral </table> <h2>表が複数あっても大丈夫</h2> <table border><caption>table #2</caption> <thead><tr><th>name<th>flagship<th>grade <tbody><tr><td>Morton<td>Achilles<td>Vice Admiral <tr><td>Karlsen<td>Diomedes<td>Vice Admiral </table>
Exampleのページの3番目がご要望のスタイルではないでしょうか？ http://bxslider.com/examples いろいろな調整がoptionの指定によってできるようになっているようです。 例えば、スライドをループさせないときは、 　infiniteLoop: false　とか。 http://bxslider.com/options
有料版のgooブログアドバンスですとエクスポート可能です。 http://blog.goo.ne.jp/info/advance/advance.html? … その他方法としては、他ブログサービスを経由…など面倒くさい手順になります。 初月無料ですので、エクスポートのみでしたら実質無料でできますよ。 つまり理由は、他サービスへの流出を防ぐ…とかそういうことかと想像しています。
データ属性の値とHTML上の属性値の両方を再設定し直したい場合には「ネイティブJavaScript」を使う必要があるとか。 IE：IE11よりサポート Chrome：Chrome7よりサポート Firefox：Firefox6よりサポート Safari：Safari5.1よりサポート Opera：Opera11.1よりサポート
不明な情報があるので、よくわかりませんが・・・ ajaxのような処理を行っているのではないかと推測しました。 （「requestモジュール」と書いてあるので、node.jsのたぐいでしょうか？） （仮にそうでも、node.jsを知らないので同じことなんですが（笑）） 　　 関数の戻り値は、呼び出し元に返されます。 ご提示の 　var a = Search(lat, lon, radius); の場合でみると、Search関数はreturn値をもたないので、aの値はundefinedとなります。 それなので、ご質問のような状態になっているのではないでしょうか？ （半分推測ですが…） また、forsquare.get（）の第二引数は、いわゆるcallback関数と仮定すれば・・・ callback関数は、通常、ある処理（例えば送受信）が完了した時点で実行されますので、 　＞var a = Search(lat, lon, radius);　//① 　＞console.log(a);　　　　　　　　　　//② ①でSearch関数から制御が戻った時点では、まだcallback関数が実行されていない可能性が高いと思われます。 それなので、②の処理の際にも同様にまだ結果は受け取っていないはず。 関数の仕組みと、実行のタイミングを再確認してみてください。 （かなりの憶測で書いてますので、外れてたらごめんなさい） ＞resultの参照範囲がforsquare.get以降にある無名関数の中に限られることが～～ 関数内部で定義された変数は、直接、関数の外部からは参照できませんが、return値は関数の呼び出し元に返されますよ。（そのためのreturn文のはずです） ご質問の場合、匿名関数の呼び出し元は、関数forsquare.get内にあると推測されます。
こんな感じでどうでしょう？ <script> var num=16; var lr=0;//l=0,r=1 var a=new Array(); var b=new Array(); for(var i=1;i<=num;i++){ var val=(lr==0)?i:num+1-i; a.push(val); } while(a.length>0){ var val=(a.length%4<2)?a.pop():a.shift(); b.push(val); } document.write(b) </script>
現在地を教えるのに何で近くのコンビニの場所を教えるんですか？ 私はGoogleの会員で自宅を登録してあるので、Googleマップを開けば、すぐ表示されます。 表示位置のURLが取得できますから、それを知らせます。 Googleの会員じゃなくても、地図を表示させてその場所のURLが取得できますから そのURLを相手に教えます。 東京駅なら、こんな感じ https://maps.google.co.jp/maps?q=%E6%9D%B1%E4%BA …
回答の内容を書いてください参考サイトとご質問文にご提示のスクリプトでは 　'-=10px'、'+=10px'　//増減指定 　"10px"、"-10px"　//絶対値指定 などの違いがありますが、ご提示のものを正として・・・ 少し視点を変えて、以下の点を修正してみました。 1）対象要素の特定は"p"のみだと、全てのp要素が対象となって 　 しまうので、限定の意味でクラスを設定。 2）時間指定（800+800＝1600）のような管理方法だと誤差が積み 　 重なる恐れがあるので、callbackを利用して順序で制御。 （ご提示の例の場合は誤差が重なっても、jQueryが内部で管理 　 しているので、問題は出ないと思いますが） 3）上記の結果、setTimeout()は用いない形式で記述 4）CSSで指定していないmarginTopではなく、topの値を用いて制御 ということで、以下のような感じではいかがでしょうか？ ※ このままだと最初の1/4サイクルのみ1/2の速度になっていますが、 　 改良する方法も考えてみてください。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> div{ position:relative; } p.yurayura{ position:absolute; right:0; top:0; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ 　var amplitude = 10; //1/2振れ幅 　var duration = 800; //1/2サイクル（mmSec) 　var target = $("p.yurayura"); //対象要素 　var flick = function(){ 　　amplitude *= -1; 　　target.animate({ top : amplitude }, duration, flick); 　} 　flick(); }); </script> </head> <body> <div> ああああああああああああああああああ・・・ <p class="yurayura"> <img src="yurayura.jpg" alt="ゆらゆら画像" width="100" height="100"> </p> </div> </body> </html>
※しばらくいろいろ悩んだ思考過程が並びます。結論だけを知りたければ回答の一番最後をご覧ください。 ------------------------------------------------------------------------------- > 回答ありがとうございました。残念ながらこれでもNullのままでした あれ、おかしいなぁ、これで（文字列）+（整数値）+（文字列）になるから、Javascript ではきちんと整数を文字列変換してくれるはずなんだけど。 ひょっとして+だけしか見えていなくってシングルコーテーションの追加もあるのを見落とされたのかなあ？……って、eval() は知ってるけど evaluate() なんて関数あったっけ？ つか、CasperJS って何？ ……おっけー、ぐぐったら公式サイトが見つかった。早速 API ドキュメントを調べて……お、あったあった、evaluate() の説明が。 http://docs.casperjs.org/en/latest/modules/caspe … ……えーと、そこにある図を見ると、関数を指定している環境と実際に実行する環境が違うっぽい？ とりあえず、「基本的に同じもの」と書いてある PhantomJS のほうの evaluate() の方を見てみるか。 http://phantomjs.org/api/webpage/method/evaluate … ……って、一番下に「クロージャ・関数・DOM ノードなどなどは使えません」って明記してるじゃないか。 つまり、CasperJS の実行環境と evaluate() の引数に渡された関数中の環境とは別のものだから、CasperJS のほうで定義された変数（この場合の i）は関数を実行する時点では全く別の所にあって値を知ることができない、という理解であってるのかな？ えーと、PhantomJS のほうのページの例2で変数を関数に渡す方法が書いてあるから、これを参考にすればいいのかな？ ------------------------------------------------------------------------------- というわけで、evaluate() の呼び出しを以下のように変えたらうまくいくのではないかと思います。 ただし、上記の試行錯誤にもあるとおり、私は CasperJS を初めて触れたものですので、これで本当にいいのか少々自身がありません。 var text = this.evaluate(function(idx){ return __utils__.getElementByXPath('//*[@id="username"]/div[' + idx + ']/a').innerHTML; }, i);
1. どうも実際にブラウザに表示させるしか方法がないようです http://mamesibaj.web.fc2.com/hp/HP_HPB19_315000. … 2. スクリプトはブラウザのみで完結するので、特に環境というものはありません。 あるとすれば、プログラマー向けのテキストエディタを用意する程度でしょうか http://sourceforge.jp/projects/notepad-plus/ 3. 無論自分で作るのが一番ですが、この手はブラウザ互換性とか日本語処理とかUXとか、かなり高度な情報処理の知識が必要となるので並大抵ではありません、 先達のライブラリを利用するのが現実的でしょう http://qiita.com/HieroglypH/items/37e384905bec03 … 4. 少々難しいですが、JavaScript を作った会社の入門ガイドなので、とっても正確です。 https://developer.mozilla.org/ja/docs/Web/JavaSc … おまけ ごく最近のPC用ブラウザ限定で、縦書き文書をホイールで横スクロールさせる簡単なサンプル HEAD 内に以下のスクリプト等を挿入 <style> article.tate { writing-mode:vertical-rl; -o-writing-mode:vertical-rl; -moz-writing-mode:vertical-rl; -webkit-writing-mode:vertical-rl; display:block; width:100%; height:50%; overflow:auto; } </style> <script>(function(){ function A(a,i){return Array.prototype.slice.call(a,i?i:0)} function S(sel){return A(document.querySelectorAll(sel))} window.addEventListener('DOMContentLoaded', function(ev){ S('article.tate').forEach(function(s){s.addEventListener('wheel', function(ev){ ev.preventDefault(); var elem = ev.currentTarget, amount = ev.deltaY, mode = ev.deltaMode; elem.scrollLeft -= (mode == 0? amount: 64*amount); }, false)}); }, false); })()</script> BODY 内に縦書きするながーい文章を挿入 <article class="tate"> <p>祇園精舎の鐘の声、諸行無常の響きあり... <p>遠くの異朝をとぶらえば... <p>近く本朝をうかがふに... (以下延々と) </article>
ajaxでやればよいでしょう。
document.write は便利な機能ですが、 残念ながらタイマーとの組み合わせはまず不可能です。 代替として DOM を使うことをオススメします。 https://developer.mozilla.org/ja/docs/DOM/DOM_Re … その他の気になる点も含めて修正したサンプル window.addEventListener( "load", loadFunc, false ); function loadFunc() { _ setInterval( countUp, 1000 ); // 文字列ではなく関数が望ましい } function countUp() { // キャメルケースが望ましい _ var a = Math.floor( Math.random() * 100 ) + 1; _ var b = Math.floor( Math.random() * 100 ) + 1; _ var top = document.body; _ while (top.firstChild) top.removeChild(top.firstChild); // 書き込む前に画面を消去 _ function write(text, color) { _ _ var s = document.createElement('span'); _ _ s.textContent = text; _ _ s.style.fontSize = '300%'; // fontsize の代替 _ _ s.style.color = color? color: 'black'; // fontcolor の代替 _ _ document.body.appendChild(s); // document.write の代替 _ } _ write(a, 'red'); _ write('+'); _ write(b, 'red'); _ write('='); _ write(a+b); }
スマホはよく知りませんが、回答がないみたいなので… ご質問のflipsnapってこれでしょうか？ http://hokaccha.github.io/js-flipsnap/ 仮にそうだとして・・・ documentを見てみるとAPIが公開されていて、ご質問に有効そうな 　hasNext()、hasPrev() などのmetodが用意されているようです。 サイト内のDEMOのうち「next, prev」というものが、ご質問とほとんど同様のことを行っていますので、demoのようにボタンの有効/無効を行う代わりに、矢印の表示/非表示を行ってあげればよいのではないでしょうか。 ※ライブラリが違っていた場合はスルーしてください。
#menuとID指定のクラスがあるのでそちらが優先されているようです。 #menu→.menu <div id="menu">→<div id="menu" class="menu"> で動くようになります。 ただし、 ＞addclassは追加というより書き換えと理解しておりますがあっておりますでしょうか。 addclassは追加です。 なのでaddclass("b")→addclass("c")→addclass("b")と動いた時に動作しません。 (bは既に追加されているので) attr("class", "b")で書き換えるか、removeClassを使用してください。 ＞また、さくっとtransform:scale(倍率);を使うことは可能ですが？ 可能のようです。ただ始点が中央になるのか位置がずれました。
いろいろ混乱しているようなので、考え方を変えましょう。 よく誤解されますが、JavaScript には配列が無いです。 配列っぽく使われる Array や [] がありますが、実はこれらは「オブジェクト」です。 一般に変数というのは、プログラムを書く人が変数名を決めて一つ一つ用意するものです。 例) var timerA = 123; var timerB = 456; ですがオブジェクトの「ロジックで変数名を決めて新しく変数を用意する」機能を使えば、 似たような変数をロジックにて沢山作れます。 例) n = 1; timers[n] = 123; // 変数 "timers.1" が作られる s = "ABC"; timers[s] = 456; // 変数 "timers.ABC" が作られる for (i=10;i<20;i++) { timers[i] = 789 + i; } // 変数 "timers.10" から "timers.19" が作られる ご提示のプログラムの場合ですが、timers は配列ではなくオブジェクトの意味で使っている様です。 なので、 変数 "timers.0" にて左スロットのタイマーIDを管理 変数 "timers.1" にて中スロットのタイマーIDを管理 変数 "timers.2" にて右スロットのタイマーIDを管理 と理解すれば、プログラムが読みやすいではないでしょうか。
スマホは全然わからないので、単にググっただけですが・・・ このあたりかな？ http://wikiwiki.jp/android/?%B2%E8%CC%CC%A4%CE%B … http://developer.android.com/guide/topics/manife …
移植すれば良いだけでは？ JavaScript： $(function() { $("#selects").change(function() { var tags = $("#selects option:selected").val(); $("#sortwrapper").children().hide(); if(tags == 'dogs') { $("#animal .dog").show(); } else if(tags == 'cats') { $("#animal .cat").show(); } else if(tags == 'birds') { $("#animal .tri").show(); } else { $("#sortwrapper").children().hide(); } }); }); HTML： <select id="selects"> <option value="all">全て</option> <option value="dogs">イヌ</option> <option value="cats">ネコ</option> <option value="birds">トリ</option> </select> プルダウンの中にボタンを入れたい訳ではありませんよね
files:[/*略*/] となっているので、filesは配列です。 data.result.files[0].name
背景色の設定だけであればCSSで十分ですね 動的に変更したい場合は、javascriptを併用することになるでしょう。
こんな感じでどうぞ $(function() { $("#selects").change(function() { var tags = $(this + 'option:selected').val(); $("#animal div").hide(); if(tags == 'dogs') { $("#animal .dog").show(); } else if(tags == 'cats') { $("#animal .cat").show(); } else if(tags == 'birds') { $("#animal .bird").show(); } else { $("#animal div").show(); } }); }); </script> <select id="selects"> <option value="all">全て</option> <option value="dogs">イヌ</option> <option value="cats">ネコ</option> <option value="birds">トリ</option> </select>
同じ現象が発生しないのでなんとも言えませんが 387行目、404行目の<form></form>を消してみてください。 <form>は入力・送信フォームなので再描画が走っているようです。
回答がないみたいなので・・・ ＞単純にテキストリンク（または画像リンク）というものを探しております。 って、普通のテキストリンクでいいんですよね？ ・・・であれば、スクリプトなど使わずに（使っても可能ですが）、リンクタグを用いてHTMLでマークアップするほうがはるかによろしいと思います。 http://www.htmq.com/html/a.shtml
fessの検索結果を直接参照するところでWebサーバーの制限にひっかかっていると思うのですが。 サーバーの制限が変えられないのであれば 検索処理の前にシンプルなInnerFrameを持つHTMLを開き、開いたHTMLのInnerFrameを表示対象にしてみては如何でしょうか？
document.forms["write"].elements["cats[1]"].checked = true;
昨今のブラウザに限りますが、これが一番素直です https://developer.mozilla.org/ja/docs/Web/HTML/U …
とりあえずidを振ってやるのが一番らくなので以下のようにしてみました 子ウィンドウを小さく開く場合は、window.openなどで別途child.htmlを開いてください //parent.html <html> <head> <title>parent window</title> </head> <body> <form method="POST" action="search.html" accept-charset="UTF-8" name="myFormA"> <input size="20" type="text" name="kashu_1" id="kashu_1" value="SMAP"> <input size="20" type="text" name="kashu_cd_1" id="kashu_cd_1" value=""> <a href="child.html" target="_blank">歌手コードを検索</a> </form> </body> </html> //child.html <html> <head> <title>child window</title> <script> window.onload=function(){ var v=this.opener.document.getElementById("kashu_1").value; document.getElementById("kashu_1").value=v; } function setParentWindow() { var v=document.getElementById("kashu_cd_1").value; this.opener.document.getElementById("kashu_cd_1").value=v; //this.close(); //子ウィンドから親に返したときに子を閉じる場合は上行を有効に return false; } </script> </head> <body> <form method="POST"> <input size="20" type="text" name="kashu_1" id="kashu_1"> <input size="20" type="text" name="kashu_cd_1" id="kashu_cd_1" value="001"> <a href="#" onclick="return setParentWindow();">歌手コードを親ウィンドウに入力</a> </form> </body> </html>
パターン２に少し手を加えれば動きます。 'li.oya a'→'li.oya > a' $(function(){ $('ul.kodomo').hide(); $('li.oya > a').on("click", function() { $(this).next('ul.kodomo').slideToggle(); return false; }); }); 一つずつ解説します。 【失敗したパターン１】 $(function(){ $('ul.kodomo').hide(); $('li.oya a').on("click", function() { $(this).next('ul.kodomo').slideToggle(); }); }); リンクが効いてしまうのでページ移動（＝アコーディオンが開いた瞬間に閉じる） 対応にはタグの変更が必要（TARGET="_blank"）を入れるなど。 ※'li.oya a'→'li.oya'にした場合は「li.oyaの子孫の全てのa」にクリックイベントが不可されるので next('ul.kodomo')が見つけられない 【失敗したパターン2】 $(function(){ $('ul.kodomo').hide(); $('li.oya a').on("click", function() { $(this).next('ul.kodomo').slideToggle(); return false; }); }); 'li.oya a'→'li.oya'にした場合は「li.oyaの子孫の全てのa」にクリックイベントが不可されるので アコーディオンの子要素のaタグにもクリックイベントが付加されていため。 ※'li.oya a'→'li.oya > a'にすると「li.oyaの子のa」に限定されるので希望している動きになります。 [失敗したパターン3] $(function(){ $('ul.kodomo').hide(); $('li.oya').on("click", function() { $(this).find('ul.kodomo').slideToggle(); return false; }); }); これは'li.oya'のタグがクリックされた時（子孫の要素も含む） 'li.oya'の子孫から'ul.kodomo'を探し出し、slideToggleを行い、 return falseする(ページ移動をキャンセル) という処理になっています。
こんにちは。 ＞一番上の階層を配列にしたいです の意味を正しく把握できてませんが・・・ オブジェクトで返ってきた場合でも、lengthが取れたり、連番の配列で扱いたいってことでしょうか？ よくわかってませんが、こんなことなのでしょうか？ チェックは大分いい加減ですが、取得するものはある構造を保っていると想像しますので、それに応じた形にアレンジすればいけるかと… function sample(obj){ 　var res = [], key; 　if(typeof obj == "object"){ 　　if(obj instanceof Array) res = obj; 　　else for(key in obj) res.push({key:key, data:obj[key]}); 　} 　return res; }
googleappsscriptについては、わたし自信不勉強で理解していませんが ＞sqlを投げて得た結果を sqlを投げる際、AAにヒットしないようなsqlを投げるようにするのが妥当では？ （where句で絞り込めない？） あとはご提示のデータをみるかぎり二重の配列の単純構造みたいですし、 非効率ではありますがもどってきたデータを走査して該当箇所にAAがある場合 それを含む要素を削除していけばよいような気もします
ddeanaです。補足を拝見いたしました。私の回答に言葉足らずのところがあって、nishikasaiさまが混乱しているなら、お詫びいたします。 2つのご質問へのお答えです。 >１．分野を問わず片っ端から見て行くタイプでしょうか？ 休日など、時間があって自分の興味のある分野以外にも質問をざっと見てみたい時があります。 その時は次のようにして最初のページから見ます。（PCの場合です） 自分のページの、IDの右にある→「ｖ」のドロップダウンメニューから「新着」をクリック。これで新しい順番にすべての質問が表示されます。 >２．自分の得意な分野の質問だけを表示させ、その分野だけの質問集を見るタイプでしょうか？ 時間が限られている時はこちらです。 自分のページの右側にある「マイカテゴリー」の中から分野を選びます。 例えば、今私のマイカテゴリーでは ・海外旅行（全般） ・Facebook ・Twitter などが表示されていますので、Facebookに関する質問だけを見たい場合は、Facebookの表示にカーソルをあわせてクリックします。するとFacebookに関する質問だけがすべて表示されます。 同じようにやっても、質問ページが見られないのでしょうか？　でしたらもしかしたらブラウザに問題があるのかもしれません。IEだと見られない場合があるそうですが、Firefoxですと問題なく出てきます。
動作確認していませんが文字列をシングル(ダブル)クォーテーションで囲っていないだけではないでしょうか？ <td class="{sortValue: タナカタロウ}">田中太郎</td> ↓ <td class="{sortValue: 'タナカタロウ'}">田中太郎</td>
show,hideの仕様です。 animateを使いましょう。 $('li div').animate({ height: 'show' }, "fast"); $('li div').animate({ height: 'hide' },"fast"); これで縦方向に表示・非表示されます。
>なんだかよくわかりませんのでgooはやめようと思います。 >なんでこんなことになたのでしょうか？ そのお気持ち良くわかります。たぶん、Yahooのまねをしているんでしょうが、改装するたび余計つかいずらくなっています。gooの良さは、回答者がきちんと回答しているところなのですが、 Yahooのまねをしていると、そのgooの良さも失われてくる気がします。
サンプルを作りました。 参考にどうぞ。 src配列に適当な画像パスを入れてください。 (jsfiddle : http://jsfiddle.net/3wnwztf1/ ) window.onload = function() { 　image1(); }; var src = [ 　'test1.jpg', 　'test2.jpg', 　'test3.jpg' ]; var currentIndex = 0; var currentImage; function image1() { 　var img = currentImage = new Image(); 　img.onload = function() { 　　if(currentImage === img){ 　　　var cnvs = document.getElementById('canvas1'); 　　　var ctx = cnvs.getContext('2d'); 　　　ctx.clearRect(0, 0, cnvs.offsetWidth, cnvs.offsetHeight); 　　　ctx.drawImage(img, 0, 0); 　　} 　}; 　 　img.src = src[currentIndex]; } window.back = function() { 　currentIndex = (currentIndex - 1 + src.length) % src.length; 　image1(); } window.foward = function() { 　currentIndex = (currentIndex + 1) % src.length; 　image1(); }
スコープとは『変数』がどこまで参照可能かという事です。 その為、returnのスコープというのはおかしな話です なぜなら、変数を宣言していないのに、どの変数の事を言っているのか？という話になります。 ここで勘違いしては駄目なのは、『変数』と、その中の『オブジェクト』は別物ということです。 オブジェクトは、変数に入れないと使う事が出来ません。 例えば { hoge : function(){} }; なんて書いても、変数に入れない限りhoge関数を呼べません。 var piyo = { hoge : function(){} }; piyo.hoge(); 変数に入れる事で、初めて使えるようになります。 そして、returnで返すのは変数ではありません、オブジェクトです。 この返却したオブジェクトを使用したければ、呼び出し元の変数に入れる事で使用可能になります。 function A() { 　var piyo = { hoge : function(){} }; 　return piyo; } function B() { 　var piyo = A(); } 最初に言ったとおりスコープとは変数がどこまで使用可能かということです。 A関数で宣言した『変数piyo』のスコープはA関数内 B関数で宣言した『変数piyo』のスコープはB関数内 そして、それぞれ関数で宣言したの変数piyoは別物です しかし、その中身の『オブジェクト』は同一です このように、変数とオブジェクトは違うものだという事を理解しましょう。 次に、ローカルスコープとグローバルスコープについて まず、javascriptの変数は関数内に変数の宣言が無ければ、親関数に探しに行き、そこにも無ければその親関数にと言うように、変数の宣言が無い場合親関数に探しに行きます。 function A(){ 　var x = 1; 　function B(){ 　　var foo = x + 1; 　} } B関数内で使用している変数(x)は、B関数で宣言していませんが、親のA関数で宣言しているので、A関数の変数(x)を使用します。 --- my.js ここから---- x = 0; function B(){ 　var foo = x + 1; } --- my.js ここまで---- 上記のようなjavascriptを作成した場合 それを包む(Auto)関数が自動的に作成されるとイメージしてください。 function Auto(){ 　x = 0; 　function B(){ 　　var foo = x + 1; 　} } 上で説明したように、変数宣言がない場合、親関数を探します。 どこにも宣言がなければ、最終的に(Auto)関数に探しにくる訳ですが この関数の親はいないので、ここに探しにくる変数はすべて（自動で）宣言されるようになっており この関数で宣言された変数のスコープをグローバルスコープといいます。 また、それ以外はローカルスコープです。 結局、スコープは、変数がどこまで参照可能かと言うことで グローバルスコープで宣言されている変数は、どこからでもアクセス可能なので、グローバルスコープという特別な名前を付けていますが、ローカルスコープにはできない何か特別な機能があるなどと言う事はありません。 # javascriptファイルを複数使用する場合、全ファイル結合しそれを包む(Auto)関数が作成されるイメージ # Auto関数は仕様で規定されているわけではなく、イメージしやすいように私が勝手に作った関数なので、Auto関数という名前で実際に作られていません。あくまでイメージです。
では設定を確認、変更してみましょう。 phpinfo(); と記述すると設定が表示されますので memory_limit post_max_size upload_max_filesize の設定を確認します。 あとは下記の記事のように設定を変更します。 3通りほどありますが、ini_setが楽かもしれません。 http://d.hatena.ne.jp/knowledgetree/touch/201102 …
01function A(){ 02　var x = 0; 03 04　function B(){ 05　　　var x = 2; 06　　　console.log(x); 07　} 08 09　function C(){ 10　　　console.log(x); 11　} 12 13　x = 1; 14　B(); 15　C(); 16　x = 3; 17　B(); 18　C(); 19} B/C関数を定義・・・4行目.9行目 B/C関数を実行・・・14行目.15行目.17行目.18行目 さて、各関数のxは何が表示されるでしょうか？ B関数は、A関数のxとはB関数のxを使用します。 対してC関数はxの宣言が無いので、A関数のxを使用します。 その為 14行目のB関数は2を表示 15行目のC関数は1を表示(13行目で1を入れている) 17行目のB関数は2を表示 18行目のC関数は3を表示(16行目で3を入れている) これを理解したら、質問の内容に戻って(2)を少し分解してみましょう。 $(function){ 　function A(index, element){ 　　var td=$(elem); 　　function B1(){ td.css('background-color','red'); } 　　function B2(){ td.css('background-color','');} 　　td.mouseover(B1); 　　td.mouseout(B2); 　} 　 　$('td').each(A); }; B1/B2関数のtdはA関数のtdが使われるのは理解できると思います。 A関数は$.each関数で何度も実行されますが、 B1/B2関数で使われるtdは各A関数が実行した時のtdなので、正しく動くわけです。 eachではなく、以下のようにA関数を実行したと考えると分かりやすいかもしれません。 var $td = $('td'); A(0, $td[0]); A(1, $td[1]);
いまいち質問の意味がよくわかりませんが こんな感じでどうでしょう？ <script> function go(){ var v=document.getElementById("before").value; var reg=new RegExp("^(\\d{3})(\\d{4})$"); if(v.match(reg)){ var ex=reg.exec(v); document.getElementById("after").value=ex[1]+"0"+ex[2]; } } </script> <form> before:<input type="text" name="before" value="1234567" id="before"><br> after:<input type="text" name="after" value="" id="after"><br> <input type="button" value="go" onclick="go()"> </form>
No.2 を少し単純にしました <!DOCTYPE html> <html lang=ja> <meta charset=utf-8> <script> function replaceShape(svg, name, atr) { // 名前空間付きの要素として生成しなければSVGは機能しない var node = document.createElementNS('http://www.w3.org/2000/svg', name); var pen = {fill:'red', stroke:'blue', 'stroke-width':'2px'}; // よく使う属性値 for (var i in pen) node.setAttribute(i, pen[i]); // よく使う属性値をあらかじめ設定 for (var i in atr) node.setAttribute(i, atr[i]); while (svg.firstChild) svg.removeChild(svg.firstChild); // <svg>以下を全て削除 svg.appendChild(node); } function drawToSVG(svg, form) { var z = form.elements['zukei'].value; if (z == 'circle') replaceShape(svg, 'circle', {cx:'60px', cy:'60px', r:'50px'}); if (z == 'rect') replaceShape(svg, 'rect', {x:'100px', y:'100px', width:'50px', height:'50px'}); } window.addEventListener('submit', function(ev) { // ページ内で発生したsubmitイベント var form = ev.target; if (form && form.name == 'controlpanel') { // 目的のformの場合 ev.preventDefault(); // submit を中断 drawToSVG(document.getElementById('svg'), form); // 代わりに図形描画 } }, false); </script> <form name="controlpanel"> <select name="zukei"> <option value="circle">円 <option value="rect">四角 </select> <button type="submit">表示</button> </form> <h3>この下に表示</h3> <svg width="250px" height="250px" xmlns="http://www.w3.org/2000/svg" id="svg"></svg>
<a href="#aaa" onclick="x = 100;"> ただし、IE で試したところ、var での変数宣言はできませんでした。
回答がないみたいなので、想像での回答を… 通常で考えればそのようにスクリプトが作成されているだけなので、それを修正すればよいだけと思いますが、実際のスクリプトがどのような構成になっているのかまったく不明なので、具体的なことはほとんど言えません。 想像では、スクリプトは大きく分けて、 　1）地図を表示する部分 　2）検索窓の値を読んで、ルートを表示する部分 とからなっていると思います。 さらに想像では、初期の表示で上記の1）2）が連続して処理されるようになっているのではないかと思われます。 対処法としては、初期表示では1）のみを実行するようにすればよさそう。 2）の部分は、想像では 　var searchRoute = function(){～～～} とか 　function searchRoute(){～～～} などで定義されていると思います。 1）の部分はどうなっているか不明ですが、その最後で 　searchRoute(); みたいにして、2）の処理を呼び出しているのではないかと想像します。 なので、その処理を行わなければ良いのではないかな・・・ ※読んでお分かりのように、想像に次ぐ想像に基づいた回答ですので、当たるも八卦です。
ああ、前回の回答で書き忘れていた、もっと大切なことがありました。 IE11 では document.all が無くなり、そのため IE の判定として使うことはできなくなりました。つまり、最初の方で _dom を設定している個所では、IE11 では 3 ではなく 1 が設定されます。 それ以外にも IE11 では各種の（Web 標準に合わせる方向での）変更が各種行われているので、まずは以下のページをお読みください。 https://msdn.microsoft.com/ja-jp/library/ie/bg18 …(v=vs.85).aspx
こんにちは。 ＞colorboxで非表示になっていたdivが表示になったときに地図をきちんと ＞読み込まれるようにするにはどのようにすればよいのでしょうか？ なんか誤解がありそうに感じますが・・・ ご提示のHTMLの<div id='inline_content'>の要素をcolorboxで直接に表示/非表示の制御ってできましたっけ？（見た目で同様のものが見えるとかではなく、その要素の表示/非表示） 記憶なので正確ではありませんが、colorboxは表示用のbox（div要素等）を別に設定していて、そちらの内容を書き換えたり、サイズを変更したりしていたと思いますが？ 直接の回答にはならないかもしれませんが、個々の部分に対して・・・ ＞非表示にしていたdivにgooglemapを読み込んでいるので～ それはその通りなのですが、読み込ませるには非表示にする方法を変えれば可能です。 display:noneを用いずに、 ・visibility:hiddenで非表示にする ・リバースマージン等で画面外に表示（見えないので非表示状態） ・他の要素の下に入れて隠す（これも見えない） ・透明度を0にして見えなくする などの方法をとれば、見えない状態でもgoogle mapを読み込むことが可能だったと記憶しています。 ＞～～のあたりも無理な記述になっています。 jQueryを用いているようですので、bodyの中に無理に入れなくても、document readyで実行させればよろしいかと思います。 通常よく用いられている方法ですね。 　$(function(){ initialize(); }); colorboxの枠内にmapを表示させるのは少し面倒かも知れません。 一番簡単そうなのは、colorboxの枠を先に表示させてからcolorboxの表示用要素に直接google mapを表示させるという方法でしょうか？ colorbox側にイベント用のフックが用意されているようですので、loadやcompleteのタイミングでmapを表示させるという方法になるかと思います。 ただし、これだと実際に表示されるまでに少しだけ時間がかかる可能性がありますが、表示内容をajaxで読み込む場合と似たようなものと言えるのでは・・・。 全体像がよくわからないので何をなさりたいのかちゃんと把握できてませんが、『リンクをクリックしたらmapがフェードインする』というようなものでしたら、フェードの部分だけ自作してあげればmapを先行して読み込んでおくことも可能と思います。 でも、jQueryのfadeIn/Outをそのまま利用したりすると、非表示時にdisplay:noneになりますので注意が必要かもしれません。
こんにちは ＞何か他に方法があったりするものでしょうか？ 基本的にはdisabled属性を操作することになるでしょうから、方法は同じと言えば同じでしょう。 全体の記述方法はいろいろあるかと思います。 ご提示のサンプルでは一意の要素を操作しているようなので、少しだけ一般化した一例を… <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #hoge select{ width:5em; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ $("#hoge").on("change", "input.fuga", function(){ var n = $(this).next("select"); if(this.checked) n.removeAttr("disabled"); else n.attr("disabled", "disabled"); }); }); </script> </head> <body> <form name="hoge" id="hoge" method="get" action="#"> <p><input class="fuga" type="checkbox" checked> <select name="sel1"> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> </select> <p><input class="fuga" type="checkbox" checked> <select name="sel2"> <option value="a">a</option> <option value="b">b</option> <option value="c">c</option> </select> </form> </body> </html> ※上記ではjQuery1.9.1を利用していますが、1.7以前の場合はonメソッドが使えないと思いますので、bind等で書き直す必要があります。
＞後は、goボタンで動くのではなく、selectboxの初期表示を今の週にします。 スクリプトの最初に window.onload=function(){setSelect();} を書いておけばいけるはずです。
<input type=checkbox> に onclick は不要 関数 remove_row に必要な以下の処理が不足 * 表 table1 内の全ての行を取り出す * 行内の checkbox が checked となっている対象行のみを抽出 * 対象の行のみ繰り返しで削除処理実行 関数 remove_row の引数は this ではなく "table1" が適切 おまけに 要素の属性 id が同じ値で複数存在するのは大変よろしくない。 解決案として以下のどちらかをオススメします * class と name だけで処理する * id=gyoumuname_1 などと数値を振る
同じ JavaScript であっても、ブラウザ上での実行とローカルでの実行とでは実行環境が全く異なり、片方で簡単なことがもう片方ではどうあがいてもできないというケースが多々あります。 hoge.js の内容にもよりますが、その hoge.js のうち CasperJS および PhantomJS に依存している部分を削除する方向で書き換えなくてはならないでしょう。また、ブラウザからではセキュリティの観点からローカルにあるファイルへのアクセスに制約がありますので、そのようなスクリプトは大幅な設計変更が必要になると思われます。 もっと簡単に言いましょうか? 「できません」
ちょっと再現できる環境にないのですが ＞<a href="javascript:callparent('img/hoge.jpg','画像タイトル')"> の個所を <a href="#" onclick="void(callparent('img/hoge.jpg','画像タイトル'));return false;"> 的な書き方に変えてみてもダメでしょうか？
ANo1です。 ＞画面スクロールのたびにリロードが走ってしまい～ 普通はスクロールでリサイズのイベントが発生するとは思えないのですが…？ どこか他のところで、スクロールイベントが発生した際にdisp関数を呼び出している可能性が高いのではないかと想像しますが、そのようなことはありませんか？ ＞カルーセルスライダーを使っていたのですが、 ＞画面を小さくしたときにした画面処理が ＞画面を大きく戻したときにどうしても元に戻らず ＞強制的にリロードして戻していました どのようなライブラリか不明ですが、内部の変数等の値がそのまま残っている可能性が高いと思います。 もしもユーザ用にAPIが解放されているのなら、リサイズ時に再初期化してあげれば、リロードする必要がなさそうに思いますが… あるいは自作のものなら、そのように改造するか表示の際に都度サイズを取得するような方法に変えてあげれば、そのままでリサイズに対応できるようになると思います。
難読化するツールを使うという手もあります。もしくはPHPを使うか。
<!DOCTYPE html> <script>(function(){_=0; _ ; var E = function(p,n){return p.appendChild(document.createElement(n))}; _ ; var R = function(d,s){for (var i in s)d[i]=s[i]; return d}; _ ; function addRow() { _ ; _ ; var tbody = document.querySelector('#table1 tbody'); _ ; _ ; var tr = E(tbody,'tr'); _ ; _ ; var td = E(tr, 'td'); _ ; _ ; R(E(td, 'input'), {type:'checkbox', name:'d', checked:false}); _ ; _ ; R(E(td, 'input'), {type:'text', name:'title', value:''}); _ ; _ ; R(E(E(tr, 'td'), 'input'), {type:'text', name:'content', value:''}); _ ; _ ; R(E(E(tr, 'td'), 'input'), {type:'text', name:'status', value:''}); _ ; } _ ; function delRows() { _ ; _ ; var rows = document.querySelectorAll('#table1 tbody tr'); _ ; _ ; Array.prototype.slice.apply(rows).filter(function(row){ _ ; _ ; _ ; return row.querySelector('input[name="d"]').checked; _ ; _ ; }).forEach(function(row){ _ ; _ ; _ ; row.parentNode.removeChild(row); _ ; _ ; }); _ ; } _ ; addEventListener('click', function(ev){ _ ; _ ; var b = ev.target; _ ; _ ; if (!b || b.tagName != 'BUTTON') return; _ ; _ ; if (b.name == 'table1add') addRow(); else if(b.name == 'table1del') delRows(); _ ; }, false); })()</script> <table id=table1 border> <thead><tr><th>title<th>content<th>status <tbody> </table> <button type=button name=table1add>add 1 line</button> <button type=button name=table1del>delete checked lines</button>
ANo2です。　こんにちは。 ＞他ページからのアクセスで、指定したパネルを開いた状態にすることは可能でしょうか？ 原理的には可能と思います。 考え方や方法は検索すればたくさん見つかると思いますが、ご提示のHTMLソースの場合、各H3.targetあるいはDIV.contentの要素に個別の識別子が設定されていないので、通常よく用いられている方法は使えないですね。 ソースを修正するか別の方法で行うかということになりそうです。 別の方法の案の一例として… 「location.hashで指定する内容はアコーディオンの順番を示す」というようなルールを決めて、#menu0、#menu1・・・などという指定の仕方にしておくなら、そこから0、1・・・部分を取得して、それに対応するh3要素をクリックしてあげればよくなります。 この処理をonload時に行うようにしておけば良いでしょう。 （hashの指定がなければ0を指定されたことにする） スクリプトをOFFにしている閲覧者に対して、できるだけ機能を損なわないようにすることを考えるなら、通常のページ内リンクが効くように、HTML内に識別子を設けておくほうがよろしいかと思います。
confirm の戻り値を参照せずに if(true) としているので、 かならず「ありがとうございます」になってしまいます。 正しくは var confirmResult = confirm(...); if (confirmResult) { ... } else { ... } 余談ではありますが JavaScript にて null/undefined/0/'' の比較は、面倒くさい問題が起きがちです。 今回の範囲では大丈夫なのですが、できれば以下の様にすることをオススメします。 if (num === null) { // 厳格に null と判定する ... } else if (num === '') { // 厳格に 空の文字列と判定する ... } else { ... }
将棋やオセロ等の実装を少し参考にして、あとは自力で作ることになるでしょう。 問題はコマを動かすときです。というのもこのゲームはどう転がすとどの目になるかを3Dで把握できるところが味噌なので、できれば3Dで再現したいですが、それが難しく2Dで再現する際には工夫が必要です。 コマの四方に手に応じた色を塗る、コマが選択されたらコマの上下左右に矢印を表示し、その上に進んだ際の種類を表示する等とすれば2Dのハンデは埋められるでしょう。 まあ１つ１つ作っていけばできます。
たとえばこんなかんじ <script> var list={ "---":["",""] ,"aaa":["111","xxx"] ,"bbb":["222","yyy"] ,"ccc":["333","zzz"] }; function select2textbox(obj){ var f=obj.form; if(typeof list[obj.value]!=="undefined"){ f.elements["t1"].value=list[obj.value][0]; f.elements["t2"].value=list[obj.value][1]; } } </script> <form> s1:<select name="s1" onchange="select2textbox(this)"> <option value="---">---</option> <option value="aaa">aaa</option> <option value="bbb">bbb</option> <option value="ccc">ccc</option> </select> </div> <div>t1:<input type="text" name="t1" value=""></div> <div>t2:<input type="text" name="t2" value=""></div> </form>
ページを戻る場合はイレギュラーな処理なのでブラウザごとに 対応が違うようです。 どうしてもということであればクッキーなどにデータを保存しておき ロード時にクッキーの値をみて表示を調整するのが妥当ですが 「戻れない」と考える方が合理的です。
＞一人だけたまにCookieが取得できない そのくらいの頻度であれば、そのユーザーのブラウザに問題があると 考えたほうがよいかも 別のブラウザを使ってもらうか、ブラウザをなんらかの方法で初期設定状態に するなどで対処するのが妥当です。 またクッキー自体はブラウザ側に保存されるものですので 不具合があったときにブラウザでクッキーを消す処理をすれば 一時しのぎになるかもしれません。
＞　オンロードイベントで確かに動作しましたが、エラーは消えませんでした。 私の手元ではエラーが出ません。 プログラムのどこかに、オンロードイベントに入れてない「ins( 'here' );」が残っていませんか？
そのドメイン名でwhois検索すると、有限会社シェルウェアが所有しているようです。 http://whois.ansi.co.jp/swcs.jp ここは検索順位をチェックするツールを開発している会社のようですね。 このツールを利用しているかどうか確認してみましょう。 http://seopro.jp/
こんにちは こんなかんじですね。 HTMLボディ内の特定の位置にユニークなid名をつけたタグを置きます。 あとはscriptでそのid名のタグをgetElementById()で抽出して、テキストを置き換えます。 ※ブラウザがfirefoxの場合はテキストの置き換えに、innerTextでなく、textContentを使用します。 ------------------------------------ <html> <head> <title>test</title> <script type="text/javascript"> function user(){ var str = prompt("名前を入力してください。"); switch(str){ case "": str = "入力欄が空です。"; break; case null: str = "キャンセルされました。"; break; } document.getElementById("name").innerText=str; //document.getElementById("name").textContent=str; // firefoxの場合 } </script> </head> <body> <a onclick="user()">ここをクリックして名前を入力してください。</a><br> <hr> <!--ここのテキストを置き換えます。--> <span id="name">名前</span>さん<br> 入力ありがとうございます。 </body> </html>
選択時に読み込ませることで遅延は気にならないでしょう（PCブラウザでは大抵読み込んでくれます）。 <select onchange="se=new Audio(this.value)"> <option disabled selected>選択してください <option value="hoge1.wav">A <option value="hoge2.wav">B <option value="hoge3.wav">C </select> <button onclick="se.play()">再生</button>
行末を現す正規表現は $ を使います。 今回のケースでは、以下の正規表現でうまくいくと思います。 /\s.*$/g ※繰り返し数 {1} 記述は、普通は省略します。 ※ちなみに、行頭を現す正規表現は ^ です。行頭・行末表現 　は利用頻度が高いので、ついでに覚えておかれると良いかと 　思います。
ローカル変数：(1), (3), (5) グローバル変数：(2), (4), (6) > 関数の中は全てローカル変数になる のはあいにくながら JavaScript 以外の言語の話です。 JavaScript の場合は、以下の場合のみローカル変数となります。 （１）以下の二つをどちらも満たす。 　(a) 何らかの関数の中で定義されている。 　(b) var キーワードを付加して定義されている。 （２）関数の宣言時の引数。 あなたが番号を付けた変数は（２）ではありませんが、いずれも（１）-(a)を満たします。 したがって、（１）-(b)で言う var の有無でグローバルか否かが決まります。 ……「でも (1) と (2) は関数の外にありますよね」と思われましたか? 1 行目に function(){ という記述があって、その鍵括弧が閉じる前に (1) と (2) が定義されてます。つまりこれらはその一番大外の関数の中で定義されています。したがってこれらも（１）-(a)を十分満たしています。 参考URL：http://builder.japan.zdnet.com/script/sp_javascr …
『JavaScript圧縮の処理内容』、『圧縮に入れようとしている PHP記述の内容』によります。 1. JavaScript圧縮の処理内容 　JavaScript圧縮の処理が『JavaScript コード内の空白や改行 　を削除して文字数を減らす』処理であれば、後述の 2. の問題 　に抵触しなければ PHP記述があっても大丈夫です。 　JavaScript圧縮の処理が「難読化」や「エンコード」などの 　処理も実行している場合は、PHP記述が壊されるのでダメです。 　(PHPとして動かなくなりますので) 2. 圧縮に入れようとしているPHP記述の内容 　JavaScript圧縮は、対象文字列が「JavaScriptのコード」で 　あることが大前提です。従って、PHP記述を含んだコードが、 　そのまま JavaScript コードとして成立するか (PHP記述を 　含んだまま動かしても構文エラーにならないか) が鍵になるで 　しょう。 　質問者さんの例の場合は、PHP記述は ” で囲まれて文字列に 　なってるので、これは構文エラーになりません。なので圧縮 　できます。 　以下のような場合は、動かすと構文エラーになります。従って 　このようなPHP記述が記載されたコードは圧縮できません。 　<script> if (foo == <? PHP処理 ?>) {/*省略*/} </script>
if (n == "aaaa"){ // n に「aaaa」が入った場合の処理 } else if (n == "bbbb"){ // n に「bbbb」が入った場合の処理 } else if (n == "cccc"){ // n に「cccc」が入った場合の処理 } else { // n に「aaaa」、「bbbb」、「cccc」以外の不特定の文字列が入った場合の処理はここに書く }
（グローバルオブジェクト以外の）どの～ です グローバルオブジェクトに入っていると言っても、グローバルオブジェクトはwith文でやるようにEnvironment Recordが露出したようなものなので、グローバルに存在するからといって、グローバルオブジェクトに結びついているでしょというのは微妙です。 それを言うとあらゆる変数はJSではオブジェクト的なものに格納されていますからね。本質はそれが触れられるか、触れられないかの違いしかないです。 ＞特定のオブジェクトを参照すること無くとは、所謂メソッドというものはそうするけれど、単発の関数のevalは違うということでしょう。
＞スクロールシステムをページの根幹にしたいがゆえに、コンテンツごとにアンカーをつけて、このURLにすれば、このコンテンツに飛べる。といった風にできたほうがいいかなと思っているのですが、それがちょっと出来なさそう・・ 検証はしていませんが、各画像を<a>タグでくくれば実現はできると思います。 ただ、スクロールとリンクの組み合わせはもしかしたら、うまくないのではという実験もありますのでこちらも参考にしてみてください。 http://www.e-agency.co.jp/column/20141212.html スクロールはあくまで「イメージ的な存在」でその他のナビなどには使わない方法もあります。 以下は参考サイトです。 http://arc-hairsalon.com/ http://pros-per.jp/ http://sushi-kiraku.com/
ひとつは以下で十分かと function kakunin(frm){ flag = confirm("本当に削除しますか?"); return flag; } どうしてもいまの処理でいきたいなら onClick="void(kakunin(this.form));return false;" とするか formのonsubmitを常にreturn falseにするかですね
object 要素には progid 属性はありません。 https://developer.mozilla.org/ja/docs/Web/HTML/E … また、マイクロソフトの独自拡張としてあるかもと思って MSDN を確認しましたが、そちらにも属性として progid はありませんでした。 http://msdn.microsoft.com/ja-jp/library/cc392144 … つまり、ProgId の名前を使って ActiveX を呼び出すのはできない、ということです。 まあ考えてみれば当然ですね、もし同一の ProgId で別のオブジェクトがあったならどっちを呼び出したらいいかわかりませんから。
ANo2,3です。 あいや～。見るたびに、タイポだらけだ・・・ (^_^;) 例1の条件式の等号は == または === でないとダメですね。 重ね重ね、申し訳ないです。 m(__)m
英語はよくわかりませんけれど… 作者のサポートページに「カスタマイズも受け付けます」みたいなことが書いてあるような気がするのですが・・・？（違ってたらすんません）
何をされたいのか今ひとつ掴めませんが・・・ <body> <div class="A">画面いっぱい100％</div> <div class="B">500px margin:0 auto;</div> <div class="A">画面いっぱい100％</div> <div class="B">500px margin:0 auto;</div> <div class="A">画面いっぱい100％</div> <div class="B">500px margin:0 auto;</div> <div style="position:fixed;top:10px;right:100px;background-color:gray;"> menu </div> こういうことでしょうか？ メニューの位置を変えたいのであればonloadやonresizeイベントで緑色のコンテンツの幅とウインドウの幅から メニューのrightやleftの値を変更すれば良いと思いますがどうでしょう。
「次の要素」というのが「次の兄弟要素」という意味で良ければ、基準とするelementに対して 　element.nextSibling で取得可能です。 自分の子要素を意味する場合は、「最初の子要素」ということでしょうから 　element.firstChild で取得してください。 いずれの場合もinput要素とは限りませんので、「最初に現れるinput要素」という意味であるなら、 順次チェックしていって、最初のものを特定すれば宜しいかと。 （存在しない場合の処理もお忘れなく） 要素がinputであることの確認は、element.nodeName又はelement.tagNameなどで要素名が取得できます。 また、typeのチェックはelement.typeでtypeが取得できますので、チェック可能でしょう。 削除する場合は、対象elementに対して、 　element.parentNode.removeChild(element); で削除できます。
配列変数に「あいうえお,かきくけこ,さしすせそ」と「たちつてと,なにぬねの,はひふへほ, 」を作ります。 次にselectboxA～Dのvalueを取得してif elseを使用してselectboxEのvalueに「あいうえお,かきくけこ,さしすせそ」か「たちつてと,なにぬねの,はひふへほ, 」を入れてあげればいいと思いますよ。 イメージ的には以下のような形だと思います。 selectboxA～Dのvalueがチェンジされた場合のイベントハンドラ { if(～～～) { selectboxE.value = 「あいうえお,かきくけこ,さしすせそ」 } else { selectboxE.value = 「あいうえお,かきくけこ,さしすせそ」 } }
属性のセレクタが用意されていますので、それで対応可能かと思います。 　http://api.jquery.com/attribute-equals-selector/ でも、独自属性を作らなくても、大抵のことなら通常のクラス設定で対応できるように思います。CSSでの指定なども考え合わせるとその方が便利ではないのかな・・・
No1と同意見かな Javascriptでローカルフォルダいじれたらセキュリティ上問題ある
ちなみに#4例で、0年1月-1日後でよければ以下 <script> var startDay = new Date(2014,0,31);// 1月31日 var endDay = new Date(2015,2,2);// 3月2日 function ddiff(s,e){ if(s > e) return false; var y1=s.getFullYear(),m1=s.getMonth(),d1=s.getDate(); var y2=e.getFullYear(),m2=e.getMonth(),d2=e.getDate(); var y0=y2-y1,m0=m2-m1,d0=d2-d1; y0-=(m1>m2 || (m1==m2 && d1>d2))?1:0; m0=(12+m0-(d1>d2?1:0))%12; d0+=d1>d2?(new Date(y2,m2,0)).getDate():0; return y0+"/"+m0+"/"+d0; } document.write(ddiff(startDay,endDay)); </script>
Windows のスクリプト関連で困ったことがあったらこう叫ぼう。 Hey, Scripting Guy! ……というわけで、マイクロソフトのスクリプト関連のページを検索してみたら以下のようなページが見つかりました。ご参考までに。 Hey, Scripting Guy! HTA で時間のかかる処理を実行しているときにメッセージを表示したりカーソルの表示を変更したりする方法はありますか https://gallery.technet.microsoft.com/scriptcent …
質問するときは「うまくいかない」じゃなくって こうなる想定だったのだが、こんなふうになっているにしないと、回答付きにくいよ。 まず、なぜ並び替えようとしているところで配列にliの値をとるのか。 先に取っておかないと。 function bubbleSort(){ var liVal = document.getElementsByTagName("li"); var array = []; for(var i = 0; i < liVal.length; i ++) array[i] = parseInt(liVal[i].innerHTML); for(var i = 0; i < array.length-1; i++){ for(var j = 0; j < liVal.length-i-1; j++){ if(array[j] > array[j+1]){ var n = array[j]; array[j] = array[j+1]; array[j+1] = n; } } } console.debug(array); } どこ直したかは自分で追ってみて。
>・ボタンを押す度に既存の画像の下側に随時読み込まれていく。 ボタンを押すたびにimgタグを追加すればいいでしょう 追加すべきsrcのファイル名はなんらかのサーバー側のプログラムで ajaxで受け渡ししてもらえばいいでしょう。 逆にファイル名がわかっているなら、あえてajaxを使う必要はありません。
ANo1です。 ＞とりあえず動くことは確認できるかと思うのですが とりあえず、コピペで動かすと手元のIE８では途中で止まるようです。 少しだけ調べてみると、どうやら7行目の document.getElementById('div2') でnullが返されているようです。（原因はパッと見ではわかりませんでした。一見問題ないようなのですが…） 後で fx34で確認したところ、動作しました。 勝手に雰囲気から想定した「表示を切り替える」ものの簡略サンプルをご参考までに。 ・HTMLの書き換えはしていません。 ・簡略化のためページ内リンクも省きましたが、残しても良いかも。 ・項目の数は可変です。（メニュー順とdiv順は整合しているものとしています） ・表示中メニューにはactiveクラスを設定しているので見え方等はCSSで制御可能。 （インデントが全角空白になっていますので半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #menu li{ color:black; cursor:pointer; background-color:#CCC; border-bottom:1px solid white; } #menu li.active{ color:blue; cursor:auto; background-color:#CCE; } #tabs>div{ display:none; } #tabs>div.active{ display:block; } </style> </head> <body> <ul id="menu" onclick="hoge(event)"> <li>メニュー1</li> <li>メニュー2</li> <li>メニュー3</li> <li>メニュー4</li> </ul> <div id="tabs"> <div>test1</div> <div>test2</div> <div>test3</div> <div>test4</div> </div> <script type="text/javascript"> var hoge = (function(){ 　var i, e, tabs=[]; 　var menus = document.getElementById("menu").getElementsByTagName("li"); 　var tmp = document.getElementById("tabs").childNodes; 　for(i = 0; e = tmp[i++];) if(e.nodeName=="DIV") tabs.push(e); 　return function(evt){ 　　var i, t = evt.target || evt.srcElement; 　　for(i=0; i<menus.length; i++){ 　　　var e = menus[i], f = e==t?"active":""; 　　　e.className = f; 　　　if(tabs[i]) tabs[i].className = f; 　　} 　} })(); document.getElementById("menu").getElementsByTagName("li")[0].click(); </script> </body> </html>
はっきり依存コンポーネントと書かれているのに、それを入れずに評価すると言うのも乱暴な話ですね。 jquery.cookie.js は超有名なプラグインなので、今さら説明などしないでしょう。 > 見てみたもののリンク切れなのかダウンロードボタンはありませんでした。 これGitHubのサイトですよ？　見たことなかった？ 「src」を開けばjsのソースがあるし、右側の「download zip」をクリックすればプロジェクト全体をzipで固めたものがダウンロードできるはず。 まずは jquery.cookie.js を入れてみてからですね。 WordpressはjQueryプラグインの読み込みに関していくつか問題があるのですが、そこはまあ後の話ということで。
Google で 『javascript 文字数 表示』をキーワードにして 検索すれば、サンプルコード付きの解説サイトがたくさん 出てきます。
.filesではなくfiles[0]のファイルを配列にでも貯めていってください。
ANo2です。 画像データを置き換えられないことはわかりました。 次善の策として考えられるのは、HTMLを修正することですね。 箇所数が少なければ手動でもたいした手間はかかりませんし、数がそれなりならエディタの置換機能などを利用すればよろしいかと思います。 どうしてもスクリプトでないとできない事情があるのであれば、 （何が適切な選択条件なのかよくわからないので、少々いい加減ですが…） var imageSrc = "http://file001.shop-pro.jp/PA01294/594/images/i_ … Array.prototype.map.call(document.querySelectorAll("img.new_mark_img2"), function(elm){ if(/new\/icons1.gif$/.test(elm.src)) elm.src = imageSrc; } ); あるいは、mapやquerySelectorが使えない古いブラウザも対象にするのなら、 var imageSrc = "http://file001.shop-pro.jp/PA01294/594/images/i_ … var imgs = document.getElementsByTagName("img"); for(var i=0, img; img=imgs[i++];){ if(/( |^)new_mark_img2( |$)/.test(img.className) && /new\/icons1.gif$/.test(img.src)) img.src = imageSrc; } なお、上記は両方ともjQueryは用いていません。 用いれば簡略化した記述が可能になりますが、この処理だけのためにjQueryを読み込むほどの事はないという気がしましたので（他にも利用していれば別ですが）。 ＞そこでreplaceを考えたのですが、うまく動かないため ＞ご質問させていただいた次第です replaceでも同様のことは可能ですが、replaceの対象となるのは文字列ですので、画像要素そのものではなく画像要素のsrc属性（=文字列）を対象に置換しなければいけません。
var excelApp = new ActiveXObject("Excel.Application"); var excel = document.getElementById("aaa"); excel.Workbooks.Open("C:\Users\satou\Desktop\weekreport.xls"); 直すところがずれてる。 意味も理解しないままソースを適当に追加しないほうがいいよ。 一生終わらない。 excelApp .Workbooks
IE11を互換モードにしたらどうでしょう。
ANo5です。 ＞ご推察の通り、自分の力量として、自作というのはハードルがかなり高いのです。 スクリプトで処理する以上は、ある程度の理解は必要となります。 ほとんど知らなくても使えるもの（=ライブラリ等）で、可能な範囲で我慢するか、少しだけ覚えるかのどちらかですね。 読み込みからテーブル表示までを何らかのライブラリでできたとして、その後で表示だけ変える例をご参考までに。 　・表の形式を標準的なテーブルにしていますが、 　　実際の表示の構造と合わせる必要があります。 　・便宜上ボタンのクリックで表示を変えるようにしてありますが、 　　実装は表示後続けて処理することになるでしょう。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> function change(tbl){ var bdy = tbl.getElementsByTagName("tbody")[0]; var i = 0, rw, cell, indent, pre; while(rw = bdy.rows[i++]){ indent = +rw.cells[1].innerHTML; if(indent){ indent--, pre = indent==0?"―":"∟"; } else { indent = 0, pre = ""; } cell = rw.cells[0]; cell.style.paddingLeft = indent*2.5 + "em"; cell.innerHTML = pre + cell.innerHTML; } } </script> </head> <body> <table id="hoge" border=1> <thead><tr> <th>コード</th><th>レベル</th><th>品名</th><th>規格</th> </tr></thead> <tbody> <tr><td>1234</td><td>1</td><td>AAA</td><td>aaa</td></tr> <tr><td>2345</td><td>2</td><td>BBB</td><td>bbb</td></tr> <tr><td>3456</td><td>3</td><td>CCC</td><td>ccc</td></tr> <tr><td>4567</td><td>3</td><td>DDD</td><td>ddd</td></tr> <tr><td>5678</td><td>3</td><td>EEE</td><td>eee</td></tr> <tr><td>6789</td><td>4</td><td>FFF</td><td>fff</td></tr> <tr><td>7890</td><td>3</td><td>GGG</td><td>ggg</td></tr> </tbody> </table> <div> <p><input type="button" value="change" onclick="change(document.getElementById('hoge'));this.disabled = 'disabled'"> ← クリックで表示を変更 </div> </body> </html>
スマホのスクリプトは知りませんけれど… マーカー作成時に座標を指定しているので、その値を記録しておけばよいのではないでしょうか？ 直前のものを覚えていれば良いのであれば、単純に変数 oldLatlng（←なんでも良い）に代入しておいて、常に更新してゆくようにしておけば宜しいかと。 あるいは、配列に時間と座標をセットで記録していって、〇〇秒前（に近い）データを探して利用するなどといったことも考えられます。 配列に記憶する場合は、容量が増加して行くでしょうから、使わないことが明らかな古いデータは削除するようにしておいたほうが宜しいでしょう。
URLの#AAAに当たる部分は、ページロード時に location.hash を参照することで取得できます。 　http://mdn.beonex.com/en/DOM/window.location.html 該当するsectionは（↑）に基づいてIDで取得可能でしょうから、その子要素の中でご質問のdivを取得するには、 　・div class="toggle"に該当するもので2番目の要素を取得 　・label要素の親要素を取得 　・div class="row"の親要素を取得 などの方法が考えられると思いますが、全体の文書構成を考慮して適切な方法で取得してください。 何かのライブラリを用いていて、要素選択のメソッドがあるならそれによっても良いですし、querySelector()などが使えるブラウザであればこれを利用、あるいはgetElementsByClassName()やgetElementById()等を組み合わせることでも取得可能なはずです。 ＞.addClass('active')というものを見つけたのですが～ おそらく何かのライブラリのメソッドだと想像しますが、それが、要素にクラスを追加するメソッドであるのなら、それを用いるのも良いでしょう。 構文などに関しては、そのライブラリの説明をご覧になってください。 （何のライブラリかわからないので、これ以上はわかりません） activeクラスが重複することがないことがわかっているのなら、直接に 　element.className += " active"; でも宜しいかと。
良く見てないけどddのdisplay: none;が無いからじゃないの？ 自分でカスタマイズしたいなら、まずは全部をコピーしてきてからカスタマイズしたほうがいいよ。
なさりたいことが良くわかりませんが… スタート地点固定で中継点が増減しなければ、結果が 　スタート→中継点（1）→中継点（2）→中継点（3）・・・ となるとして、 中継点（2）に最も近い中継点は、中継点（1）のはずなので、ご提示の条件の「最も近い」だと（1）に戻ることになり、質問文のようにならないかと… 仮に、2番目に近い中継点を（3）として選ぶようなルールに変えたとしても、スタートが固定ということなので結果はいつも同じになってしまい、毎回計算する必要もなく、事前に検証しておいた固定ルートを表示すればよいということになります。 それでよければ、mapに固定のルートを表示するという、普通の処理で可能になります。 どうもそれだとおかしいようなので、何か違うルールで選定させたいのであるなら、そのルールを整理してみるのがまず最初ではないでしょうか。 プログラム的に処理をさせたいのであれば、ルールが気まぐれでないことが最初の条件になるのかも知れません。 いずれにしろ中継点が増減するのでなければ、それぞれの位置関係のデータ等を事前に揃えておくことで、かなりの事は可能なのではないかと想像しますが、なさりたいことがよくわからないので、なんとも言えませんね。 質問文からは読み取れませんが、雰囲気から勝手に想像するとこんなことかも？ （ググってみただけで、内容は知りません） 　http://ja.wikipedia.org/wiki/%E6%9C%80%E7%9F%AD% … 　http://www.deqnotes.net/acmicpc/dijkstra/ 　http://nishiharayuugo.blog.fc2.com/blog-entry-14 …
こんにちは。 ＞(1)小数点第２の動きがおかしい。 少数2位（＝1/100秒）を表示するのに、計算の頻度を100msec（＝1/10秒）で行っているので、第2位の数値は成ゆきになります。 最小単位と同等（できれば半分）くらいの頻度で計算を行いたいところですが、5msecでは負荷が多すぎるかもしれませんね。 実際の表示はほとんど読み取れないので、10msecくらいがいいところでしょうか。 (setTimeoutやsetIntervalの時間間隔は必ずしも正確ではありません） ＞(2)一度リセットボタンを押さないとタイマーが動かない。 ところどころで変数などを表示させてチェックするか、ブラウザ組み込みのデバッグツールを利用なさると良いと思います。 　var statTime,　⇒　var startTime,
要素のstyle属性のdisplayをnone/block/inlineなどに指定し直すことで表示/非表示を制御できます。 レイアウトを維持したままであれば、visibilityをhidden/visibleでも同様になります。 （見えなくするだけなら、要素の透明度を0（=透明）にするという方法もあります） ＞このような形でチェックボックスを置き、チェックすると チェックボックスのchangeイベントを取得して、チェックされていたら上記の様な方法で非表示になさるとよろしいでしょう。
1. onmouseover と対になる onmouseout が指定されていない 2. 単引用符(U+0027)で囲まれた文字列の中に単引用符を使用するなら、エスケープが必要 例: '<img ... \'MAPsenntaku.png\' ... ' お節介ではありますが 3. 複雑なHTML要素を生成するなら、document.createElement を使いましょう 4. フォーム要素以外への属性 name の乱用は危険です。id/class で代用しましょう 5. <body> 内の <script> で実行するより、<head> 内で DOMContentLoaded するのがオススメです
透明画像等でマスキングしておくくらいでしょうか。 でも、いずれにしろ表示している時点でキャッシュには残りますし、ダイレクトに表示したりあるいはページを保存することでも誰でも簡単に保存できてしまいますが…… 画像のURLを暗号化したり、画像データ自体を暗号化して、解凍用のスクリプトも暗号化するなどしておけば、少しは保存しにくくはなるとおもいますけれど。
a[href^="http://japan.webike.net/products/" なリンクだけ抽出すればいいのではないでしょうか。 https://developer.mozilla.org/ja/docs/Web/API/do … https://developer.mozilla.org/ja/docs/Web/JavaSc … # Re: barusu0126さん
食べ物をはずして、ロード時にchangeFuncを実行してみては？ <script> window.onload=function(){ changeFunc(document.getElementById("genre")); } function changeFunc(obj){ var v=obj.value; var f=obj.form; var food={ "grain":["rice","soba"] ,"fruit":["apple","orange"] ,"meat":["pork","fish"] ,"hot":["rice","soba","pork","fish"] ,"cold":["apple","orange"] ,"red":["apple","pork"] }; for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ f[i].checked=false; if(v=="") f[i].disabled=false; else f[i].disabled=true; } } if(typeof food[v] =="undefined") return false; for(var j in food[v]){ for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ if(f[i].id==food[v][j] ) f[i].disabled=false; } } } } </script> <form> <select name="genre" id="genre" onChange="changeFunc(this)"> <option value="meat">生き物</option> <option value="fruit">果物</option> <option value="grain">穀物</option> <option value="hot">温かい</option> <option value="cold">冷たい</option> <option value="red">赤い</option> </select><br> <input type="checkbox" value="お米" id="rice">お米<br> <input type="checkbox" value="りんご" id="apple">りんご<br> <input type="checkbox" value="みかん" id="orange">みかん<br> <input type="checkbox" value="さかな" id="fish">さかな<br> <input type="checkbox" value="豚肉" id="pork">豚肉<br> <input type="checkbox" value="そば" id="soba">そば<br> </form>
ANo2です 「背景」というのを見落としていました。m(__)m ＞※現状このclassにbackgroundで画像を表示しています。 とのことなので、 elm.src = status?"img2.gif":"img3.gif"; 　　　　　　　　↓ elm.style.backgroundImage = status?"url(btn2.gif)":"url(btn3.gif)"; みたいな感じで。
あまり優れたサンプルとは言えないですね。 時間があったので少し書き換えてみましたがどうでしょう。 簡単に書きましたが、サンプルと比較して以下の利点があります。 ・htmlの各img要素にidを付与する必要がない。 ・画像の枚数によってJavaScriptを編集する必要がない。 ・サンプルより少しだけ高速に動作 ・JavaScriptの記述がシンプル ・リピート再生するかどうかを変数で設定可能 <script type="text/javascript"> $(function(){ //画像リスト var $img = $("img","#stage"); //カウンター初期値 var no = 0; //カウンター最大値 var maxNo = $img.length - 1; //画像切替間隔(ミリ秒で指定) var interval = 3500; //フェードイン・アウトの処理時間(ミリ秒で指定) var fadetime = 2000; //リピート再生するかどうか(true or false) var repeatFlg = false; //実行部 var timer = setInterval(function(){ if(no != maxNo){ $img.eq(no).fadeOut(fadetime); $img.eq(no+1).fadeIn(fadetime); no++; }else{ if(repeatFlg){ $img.eq(no).fadeOut(fadetime); $img.eq(0).fadeIn(fadetime); no = 0; }else{ clearInterval(timer); } } },interval); }); </script>
チェックがある場合だけ処理するように設定しているからではないのですか？ 　＞ .chk:checked
セレクトボックスで別の項目を選ぶたびにチェックをはずされるというのは ユーザービリティがかなり悪いとおもいます。 やるならこんな感じ <script language="javascript"> function changeFunc(obj){ var v=obj.value; var f=obj.form; var food={ "grain":["rice","soba"] ,"fruit":["apple","orange"] ,"meat":["pork","fish"] ,"hot":["rice","soba","pork","fish"] ,"cold":["apple","orange"] ,"red":["apple","pork"] }; for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ f[i].checked=false; if(v=="") f[i].disabled=false; else f[i].disabled=true; } } if(typeof food[v] =="undefined") return false; for(var j in food[v]){ for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ if(f[i].id==food[v][j] ) f[i].disabled=false; } } } } function uncheck(f){ } </script> <form> <select name="genre" onChange="changeFunc(this)"> <option value="">食べ物</option> <option value="meat">生き物</option> <option value="fruit">果物</option> <option value="grain">穀物</option> <option value="hot">温かい</option> <option value="cold">冷たい</option> <option value="red">赤い</option> </select><br> <input type="checkbox" value="お米" id="rice">お米<br> <input type="checkbox" value="りんご" id="apple">りんご<br> <input type="checkbox" value="みかん" id="orange">みかん<br> <input type="checkbox" value="さかな" id="fish">さかな<br> <input type="checkbox" value="豚肉" id="pork">豚肉<br> <input type="checkbox" value="そば" id="soba">そば<br> </form> 実際には、別途「全チェックをはずす」ボタンなどをつくって それが押された時に作用するような方法が妥当だと思います
onchangeで処理をするとしたら日本は一生おくられないですよね？ デフォ値を設定した方がよいかも (もう少し条件わけなどが必要になるのですが、今回の内容なら こんなもんで十分) それと自分のformを確認するときはthisで参照すると楽です <form> <select name="sel1" onChange="this.form.submit();" > <option value="">選択してね！</option> <option value="ni">日本</option> <option value="ame">アメリカ</option> <option value="igi">イギリス</option> <option value="su">スウェーデン</option> </select> </form>
他の方も言われるようにget、cookie、ヒドゥンパラメーターで渡すのが一般的と思います。
>・書き方が違うだけで同じことを出来るのでしょうか javascriptのbindの事がFunction.bindの事を指しているのであれば jQueryのbindとは機能が違います。 Function.bindに相当するのはjQuery.proxyになります。 逆に、jQuery.bindに相当するのはEventTarget.addEventListenerになります。 >・bindが記述されているとき、それがJavaScriptなのかjQueryなのかどうやって判断するのでしょうか？ 関数を呼ぶときにxxx.bind(...)と書くと思いますが。 xxx部分のオブジェクトが何かで判断します。 jQueryオブジェクトであればjQuery.bind functionであればfunction.bindとなります。 var $button = $('#id'); $button.bind('click', function(){ console.log('click'); }); ^^^^^ ここがjQueryオブジェクトなので、jQuery.bind var click = function(){ console.log('click'; )}; click.bind(this); ^^^^^ ここがFunctionなので、Function.bind --------------------------------------------------- ではなぜ,Funcion.bindやEventTarget.addEventListenerがあるのに、jQueryはそれに相当するjQuery.proxyやjQuery.bindを作るのか？ それは、Funcion.bindやEventTarget.addEventListenerはすべてのブラウザーで動かないのが原因です。 https://developer.mozilla.org/ja/docs/Web/JavaSc … 上のURLはFunction.bindの説明ですが『Polyfill』にこのような記載があります ＞bind 関数は ECMA-262 第5版に最近追加されたので、すべてのブラウザに存在するわけではありません。 https://developer.mozilla.org/ja/docs/Web/API/Ev … addEventListenerの説明も『古い Internet Explorer と attachEvent』の部分でこのような記載があります ＞IE9 より前の Internet Explorer では、標準の addEventListener ではなく、 attachEvent を使わなければなりません。 このようにブラウザー毎に、関数がなかったり、名前が違ったりします。 この挙動の違いをjQueryが吸収するように作れられていて。 jQuey.proxyでは、Function.bindが無くても問題ないように jQuey.bindは、addEventListenerとattachEventどちらを呼ぶか振り分けたりするよになっています。 ---------------------------------- 予断ですが、jQuery.bindは古い書き方で、今はjQuey.onに置き換わっています、 http://tacamy.hatenablog.com/entry/2013/03/03/21 …
> ・HTML描画を待たずに開始して良い処理は、DOMContentLoaded内ではなく、<script>タグ直下階層に書いても良いのでしょうか？ 良い。 > ・HTML描画を待たずに開始して良い処理、とは具体的にどのような処理でしょうか？ その時点で読み込まれているDOMに対しての処理、もしくはDOM以外の処理です。 > ・DOMが絡まない処理は全て、<script>タグ直下に直接書いても良い？ 複数のWebページで共通処理なら外部JavaScriptにすべきです。 > ・例えば、.alertは、DOMContentLoaded内ではなく、<script>タグ直下に書いても動作しますが、なぜでしょうか？ > ・windowオブジェクトはDOMではない？ script要素が読み込まれた時点では window が既に読み込まれているからです。 window は HTML5 からイベントバブリングの対象となり、正式に DOM となりました。 # Re: re97さん
こんな感じでしょうか？ <script> function onButtonClick(f){ var num = f.elements["textBox1"].value==="" ? null :(parseInt(f.elements["textBox1"].value)); var mylist=[ {name:"項目A",s_num:1,e_num:100}, {name:"項目B",s_num:60,e_num:100}, {name:"項目C",s_num:30,e_num:70}, {name:"項目D",s_num:1,e_num:40}, {name:"項目E",s_num:50,e_num:50} ]; var div=document.getElementById("display_mylist"); while(div.firstChild){div.removeChild(div.firstChild);} var ul=document.createElement("ul"); for(var i=0;i<mylist.length;i++){ if(num==null || mylist[i]["s_num"]<=num && mylist[i]["e_num"]>=num){ var li=document.createElement("li"); li.appendChild(document.createTextNode(mylist[i]["name"]+"("+mylist[i]["s_num"]+"～"+mylist[i]["e_num"]+")")); ul.appendChild(li); } } div.appendChild(ul); } </script> <div id="display_mylist"></div> <form> <input type="text" name="textBox1" value=""> <input type="button" value="決定" onclick="onButtonClick(this.form);"> </form>
×　before ○　unloadイベント
まあsrcを書き換えて画像が一旦消え、読み込んで表示されるまでのラグが気になるのであればXHRを使ってもいいかも。どうせ10行くらいでできるものだし。 ただしJSONは一般にバイナリを含めないので、もし画像データと情報を同時に返したいという場合は工夫が必要。 画像データと情報を同時に返したいのかが知りたい。
>この行が2行以上になると、ランダムになるはずなのに、なぜかなりません。 なぜって、2行以上になったら動かないもんこれじゃ。 document.saikoro.src=sai[rr]; これだとname="saikoro"のものしか変更できない。 だから、単純に行を増やしただけじゃダメ。 var sai=new Array("sai0.png","sai1.png","sai2.png","sai3.png","sai4.png","sai5.png","sai6.png"); var imgs = document.querySelectorAll('.saikoro'); for (var i = 0; i < imgs.length; i ++) { var r = Math.floor(Math.random()*sai.length); imgs[i].setAttribute('src', sai[r]); } こんな感じじゃないの？ こうすれば<img class="saikoro">がいくら増えても動く
>ブラウザ毎に定義されているかいないかを調べる必要があるもの >がまとめてあるサイト(ブラウザ毎の対応状況一覧) ご自分でお調べください。
"行番号"ってどこのこと言ってるの？ <tr>が1行ってこと？ $('.rd').change(function(){ var line = $(this).parents('tr').index(); });
まぁ余計なお世話ですので不要なら聞き流してほしいのですが evalを使っているウチはプログラミングは上達しないので できれば別の書き方をされることをお勧めします 今回のケースであればswitchで場合分けをするのが妥当かと
ファイルはinput.filesに入っています。 var file = input.files[0] if (file) とかで分かります。
こんにちは。 個々のデータに区切り文字（カンマ）が含まれていないことが保証されているなら、文字列のsplitメソッドをそのまま利用すればよさそうです。 https://developer.mozilla.org/ja/docs/Web/JavaSc … 出力されるデータの取り得る可能性がよくわかりませんが、数字とカンマということなので、カンマ（と改行かな？）でsplitすれば配列（=変数）に値を格納することができるでしょう。
これってonmouseoverとoutどうしても使いたいですか？ cssで十分かと <style> tr.color_Yes{background-color:blue;} #Active_row_Color tr:hover{background-color:red;} </style> <table border=1 id="Active_row_Color"> <tr class="color_Yes"><td>セル1</td><td>セル2</td></tr> <tr><td>セル3</td><td>セル4</td></tr> <tr class="color_Yes"><td>セル5</td><td>セル6</td></tr> <tr><td>セル7</td><td>セル8</td></tr> <tr class="color_Yes"><td>セル9</td><td>セル10</td></tr> </table>
こんにちは。 ＞いつもbxSliderやNivo Sliderを使用していますが～ 使ったことがないので、まったく知りませんけれど… それぞれに、onAfterSlideとかafterChangeなどのイベント処理設定が可能なように作られているみたいに見受けられます。 　http://docs.dev7studios.com/jquery-plugins/nivo- … 　http://bxslider.com/v3 この機能を利用して時間を再設定するということはできないのでしょうか？
JSLINTを使いましょう。私はあれなしでは怖くて JS のコードをかけません。
概ね、#1の方が仰るとおりですが、一つだけ訂正事項があります。 [] は "\" と "]" と "^" (先頭に限る) 以外はエスケープせずともメタキャラクタとして扱われません。 ただし、文字列リテラルとして扱う場合は "\" がメタキャラクタとなる為、new RegExp 内で "\\" を表現する為には "\\\\" と記述する必要があります(文字列リテラル、正規表現で2回エスケープが発生する為)。 従って、new RegExp('[\\?&]') は "?" または "&" にマッチする正規表現となります。 console.log(new RegExp('[\\?&]').test('\\')); // false console.log(new RegExp('[\\?&]').test('?')); // true console.log(new RegExp('[\\?&]').test('&')); // true 文字クラス内の "\\" は後続文字をエスケープする意味しかもたず、この場合はなくても結果が変わりません。 コード製作者のミスと思われます。 # Re: re97さん
ANo7です。 手元にあるIEがたまたまIE8なのですが、確かにご指摘のようになりますね・・・ （fx、chromeでは予定通りの表示になります） どうやら、親要素が高さを正しく認識してくれないみたいですね。 スライドが終わってから、親のタブをクリックしてみると、高さを再認識して予定の表示になるかと思います。 …ということから考えると、スライドが終わったところでブラウザに強制的に再レンダリングさせればよさそうに思えます。 slideDownのcallbackを利用すればタイミングをとることは可能ですが、実際にどのような処理をすればいいのかがすぐには思いつきません。（いずれにしろ、何かを変更したふりをするという無意味な処理になると思いますが…） 一方で、最初に提示したfloatでレイアウトする方法ならこのような事象は起きないようですので、これでラッパーの幅を指定するという方法に切り替えるか、上述の再レンダリングを何らかの方法で実現するか、はたまたIEは切り捨てるか（笑）・・・ 申し訳ありませんが、すぐにはお役に立てないようです。 ついでながら、HTMLでcategoryクラスなどを指定するのであれば、スクリプトでもそれを利用したほうが簡潔な記述になりますし、可読性もよくなると思います。 （ANo1のスクリプトを再確認願います）
Node.jsを使ってサーバサイドもJavaScriptで作ることが出来ます。 この記事で紹介されてるMeteorもNode.jsとクライアントサイドのコードを一緒に書けるようにしたようなものです。 ただチャットサーバを建てたいのであれば使う必要はありません。 Node.jsで2,30行も書けばできるでしょう。
jQuery のトラベリング関数 .find(selector) の事でしょか? http://api.jquery.com/find/ jQuery を利用した処理の場合、通常はセレクタのみで十分事足ります。 ですが、単純なセレクタだけでは難しい処理を行う際は、 トラベリング関数を組み合わせて処理する事になります。 <!-- 副題(h2)付きの記事(article)のみ、背景色を変える --> <article><header><h1>題名</h1></header><p>文章...</article> <article><header><h1>題名</h1><h2>副題</h2></header><p>文章...</article> <script> $('article').filter(function(){return $(this).find('header h2').size() > 0}).css('background','pink'); </script>
「連想配列」という言葉ですが、 私は「文字列をキーにして値を取得できるデータタイプ」の意味で使っているので 私の回答についてはそのように解釈してください。 （なので、Objectを「文字列をキーにして値を取得できるデータタイプ」として使える、のように言い換えても良いです。） また、私の回答の中では、「連想配列」の要件に lengthプロパティや配列のメソッド、順序保持は含めていないです。 「配列」も非負整数をキーにして値を取得できればよくて lengthとか各種メソッドが配列の本質的な要件とは考えてなかったですね。 （もちろんあったら便利だけど。） 実際C言語だと、配列にlengthやメソッドに相当するものは無かったし。
ANo2です。 ＞それは知っていたのですが、APIを利用したものでできるかどうか ＞考えております。 ANo1様もおっしゃっている様にAPIで可能です。 検索すれば似たようなものはいくらでも出てくると思います。 全部が全部apiをそのまま利用しているかどうかまでは不明ですが… ここの過去の質問でも似たようなものはあります。 （クリックでなくホバーで情報ウィンドウを表示するタイプです） 　http://oshiete.goo.ne.jp/qa/7894323.html その他の一例 　https://www.google.com/maps/d/viewer?oe=UTF8&ie= …
これ、きっと頻出ですね。 jQuery.validate は keyDown や change イベントを監視しているので、DateTimePicker などの「外部投入」型の もジュールでは値の変化を検出できない、と。 DatePicker終了時に強制的にフォーカスを当てるとか。 <script type="text/javascript"> $(function(){ 　$("#datepicker").datepicker({ 　　onClose : function(){ 　　　this.focus(); 　　} 　}) }); </script> ひょっとしたら一部のブラウザでonCloseのタイミングが合わないかも。ならば、 <script type="text/javascript"> $("#datepicker").datepicker({ 　　onClose: function() { 　　　setTimeout(function(){ 　　　　$("#datepicker").focus(); }, 500); } }); </script> でもいいかな。
ご提示のURLは、apiから吐き出された結果のデータじゃないの？ そのまま見ても、データ構成の想像はつくかと思います。 でも、想像なんかしているよりも、説明ページがあるみたいですね。 （質問に貼るのもこちらの方が適切でしょう） 　http://twitcasting.tv/indexapimoviestatus.php jsonデータを持ってcallback関数を呼ぶようになっているので、そちらで内容を取得すればよろしいかと。 取得の具体的な方法は、ANo1様がすでにご回答なさっている通りです。 （keyは説明サイトの「結果のパラメータ」に記されています。） ＞例えば１つ目の項目のmovieidの値を～ ご提示の例はid指定でリクエストしているようなので、返されるのは1項目分のデータみたいですが・・・？ それとも、「項目」とは属性（↑のパラメータ）のことを意味なさっているのでしょうか？ jsonデータなので属性の順番は基本的にほとんど意味がないものと思います。
resultNum = 1; if(totalPoint <= 1){ resultNum = 0; } else if(totalPoint >= 2){ var maxPoint = Math.max(a, b, c, d); if (a === maxPoint) { resultNum = 1; } else if (b === maxPoint) { resultNum = 2; } else if (c === maxPoint) { resultNum = 3; } else if (d === maxPoint) { resultNum = 4; } }
ANo1です。 ＞TEST_Accordion.dwtの部分のみ取得したいのですがどうすればよろしいのでしょうか 方法はいろいろあるかと思いますが… 正規表現を利用した例 　 location.href.match(/[^/]+$/) 　　https://developer.mozilla.org/ja/docs/Web/JavaSc … 　http://www.ecma-international.org/ecma-262/5.1/# … 前回も上げましたが、参考サイトはスクリプトのドキュメンテーションサイトですので、何かを調べたいときにご利用ください。（前者はmozilla系、後者はECMAのスタンダードです）
基本的な考え方として、元データを走査して結果用の配列（またはオブジェクト）に記録して行けば良いのではないでしょうか？ ＞また、元データが配列だった場合、同じ結果を求めるのはどうすれば良いでしょうか オブジェクトなら 　for(var key in array){ ～～ 配列なら 　for(var i=0; i<array.length; i++){ ～～ で走査する感じ。 配列であれば forEach() で処理する方がより簡単かと思います。 ご提示のオブジェクトの場合、key("0","1","2"…)は使わないみたいですので、その値（配列）の[0],[1]のデータのみを利用することになりそうですね。 keyの「"0","1","2"…」が保証されているのなら、連番のindex(=key)を用いて配列と同様の処理を行うこともできるでしょう。 重複を確認するには、結果のデータをオブジェクトにしておいて、 　{ 　 '東京': [13, 3], 　 '大阪': [3, 2], 　 '京都': [3, 1], 　　・・・・・ 　} のようにしておく方が、重複のチェックが簡単だと思います。 　・keyがすでに存在すれば、配列[0]の値に加算、配列[1]の値を+1 　・keyが存在しなければ、配列[0]に値をセット、配列[1]=1 として処理してゆけばよさそう。 結果を配列に直接収める場合は、 重複のチェックは、その時点での結果データをスキャンして同じものがあるかをチェックするという方法が異なるだけで、あとは上記のオブジェクトの場合と同様の処理を行うことでよいのではないでしょうか。
No.4の回答の通りに修正し、 tick()のswitch文のdefauleをdefaultに修正すれば想定通りの動きになるかと。
> aタグは、クリックできるようにつけました。 JavaScriptでclickイベントを設定することによって、どんな要素でもクリックが可能になります。 マウスポインタが指マークになるようにするには、cssでcursor:pointerを指定するだけです。 >onclick属性は、リンク先ページを再読み込みしないようにってことでつけました。 どうしてもaタグが必要な場合は、関数内でreturn falseを指定することで同様の効果があるため、すべてのボタンにonclick属性は不要です。というより、javascriptはjavascriptにまとめて書かれたほうが効率が上がると思いますよ。 function alertAlphabet(){ 　alert($(this).attr('id')); 　return false; };
jQuery.each は Array.prototype.forEach とほぼ同じ、単純な静的関数です。 http://api.jquery.com/jQuery.each/ https://developer.mozilla.org/ja/docs/Web/JavaSc … 質問文のコードを Array.prototype.forEach で表すと下記コードになります。 var sty = ["a","b","c"]; Array.prototype.forEach.call(sty, function (s, i) { // あえて call を使用しているが、sty.forEach でも良い $("body").append(i+":"+s+"<br>") }); # Re: yonbakukanさん
多分、もう終わってるんだろうけれど閉じていないみたいなので… ＞～の部分をもっと簡略化できないでしょうか？ 不要と思われるものを省いて、少し短くしてみました。 ＣＳＳは記載がないので適当に設定しています。 （違う方法も考えられるけれど、ご提示のままにしてあります） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <style type="text/css"> #s1 ul, #s1 li{ list-style-type:none; } #s1 ul{ position:relative; } #s1 li{ position:absolute; top:0; } #s1 li img{ width:300px; height:300px; } </style> <script type="text/javascript"> $(function(){ var ul = $("#s1>ul"), first = ">li:first-child"; $(">li", ul).hide().eq(0).fadeIn(3500); setInterval(function(){ $(first, ul).appendTo(ul).fadeOut(1500); $(first, ul).fadeIn(1500); }, 5000); }); </script> </head> <body> <div id="s1"> <ul> <li><img src="A.jpg" alt=""></li> <li><img src="B.jpg" alt=""></li> <li><img src="C.jpg" alt=""></li> </ul> </div> </body> </html>
>Use '===' to compare with '0' これは==演算子ではなく、===演算子を使った方が良いと警告しています。 javascriptは==演算子(等価演算子)と===演算子(厳密等価演算子)の２種類あります。 ==演算子より===演算子の方が厳密に比較されるので、極力===演算子を使った方が良いです。
・リスナーについて http://e-words.jp/w/E383AAE382B9E3838AE383BC.html var listener = function(){ /*ボタンが押された時の処理*/}; var button = document.getElementById("buttonのID"); button.addEventListener("click", listener , false); ボタンクリック時のイベントを登録した所です、 addEventListenerの2番目の引数が、clickしたときに呼ばれる関数です。 この関数の事をリスナーという別の言い方をしているだけで リスナーとは関数の事です。 --------------------------------------- ・「bind の付いたリスナーを削除」しないと何がマズいのでしょうか？ イベントを解除するにはremoveEventListenerを使います https://developer.mozilla.org/ja/docs/Web/API/Ev … removeEventListenerの第2引数は、addEventListenerに登録した関数（リスナー）を指定します。 removeEventListener("click", /*addEventLisnerに登録した関数*/, false); ---------- var button = document.getElementById("buttonのID"); button.addEventListener("click", function(){/*ボタンが押された時の処理*/ } , false); このように登録した場合、解除したいけどできません。 (removeEventListenerの第2引数に何をいれれば・・・ってなります) var listener = function(){ /*ボタンが押された時の処理*/}; var button = document.getElementById("buttonのID"); button.addEventListener("click", listener , false); このように関数を変数に『(参照を)覚えておく』事で、登録解除ができるのです。 button.removeEventListener("click", listener , false); -------------------------------------------------------------------- ・「リスナーへの参照を残しておく」って、具体的にどういうことなのでしょうか？ bind関数の戻り値は関数なので、上記の通り変数に覚えておかないと解除できないということです。 https://developer.mozilla.org/ja/docs/Web/API/Ev … この説明で以下のような処理があります。 element.addEventListener('click', this.onclick1, false); element.addEventListener('click', this.onclick2.bind(this), false); さて、イベント解除することを考えてみましょう 上はthis.onclick1関数を指定したので、以下のように解除できます。 element.removeEventListener('click', this.onclick1, false); (onclick1メンバー変数に関数を覚えている) 下はthis.onclick2.bind(this)で『戻ってきた関数』を登録していますが覚えていません その為、どこかの変数に覚えておかないと解除できません。 var listener = this.onclick2.bind(this); element.addEventListener('click', listener , false); ------------------------------------------ 余談ですが、ローカル変数は関数から抜けるとなくなるので、実際はメンバー変数なりに覚える事になります。 this.xxxx = this.onclick2.bind(this);
やりたいことがよくわからないのと、他の方のおっしゃるように疑問点やおかしな（？）点がありますが・・・ ◇インプット要素のnameを制御しているおつもりだと想像しますが、ご提示の制御だと同じ名前の要素が複数できる可能性がありますが予定通りでしょうか？ 例えば入力欄が3個ある状態から、中央のものを削除（_2を削除）して1個追加すると、_1、_3、_3の名前になりそう・・・ ◇変数countで入力欄を記憶しているのだと思いますが、DOM要素を数えていまうという方法もあります。（若干の時間ロスですが、いちいち制御する必要がないので簡単かつ確実です） なさりたいことがわからないので、勝手な想像で単純化した例を・・・ （hiddenの要素は確認のため表示にしてあります） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #tbl1 input{ width:320px; } span.add, span.delete{ margin:0 10px; color:blue; cursor:pointer; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function() { var tbl = $("#tbl1"); var row = tbl.find("tr:first-child").clone(true) .append("<td><span class='delete'>Delete</span></td>"); tbl.on("click", "span.add", function(){ tbl.find("tbody").append(row.clone(true)); adjust(); }).on("click", "span.delete", function(){ $(this).parent().parent("tr").remove(); adjust(); }); function adjust(){ var inp = $("#tbl1 input"); inp.each(function(i, e){$(e).attr("name", "emailAddress_" + (i+1));}); $("#cnt").attr("value", inp.length); } }); </script> </head> <body> <div> <h1>メールアドレス登録</h1> <form name="multi" method="put" action=""> <table id="tbl1"> <tbody> <tr> <td><input type="text" name="emailAddress_1"></td> <td><span class="add">Add</span></td> </tr> </tbody> </table> <p>count：<input type="text" id="cnt" name="cnt" value="1"> <p><input type="submit" value="次へ"> </form> </div> </body> </html>
アプローチはいろいろ考えられますが、画像保存を目的とした時、必ずしもキャプチャに限定する必要はないのではないでしょうか。 たとえば、組み合わせ数が少ないのであれば、あらかじめ全組み合わせの画像を用意しておき、組み合わせの結果に応じて、その画像を表示あるいはダウンロードさせればよいだけです。また、組み合わせ数が膨大な場合は、組み合わせの結果をサーバーに送信して、サーバー側で画像を生成するという方法も考えられます。更に、現在のサンプルはDOMレベルでアプリケーションを実装されていますが、最初からCanvasでつくることで、いわゆる画像を保存する作業はグッと楽になる、というよりCanvasにそういう機能が提供されています。 どうしても、今の状態でキャプチャを取りたいのであれば、html2canvasをカスタマイズする、あるいはhtml2canvasが使えるようにアプリケーションの実装を改修したほうが早いと思います。要するにjsによるレンダリング結果は考慮されないということでしょうから、jsからのレンダリング後にhtml2canvasが実行できるように修正するだけです。 もし、jQueryのプラグインの組み合わせのみでアプリケーションを実装しようとしてるならば、おそらく完成は難しいでしょう。質問者さんの制作レベルを超えていると考えるべきです。
ANo3です。 質問者様にはわかっている情報でも、私にはわからない情報がたくさんあります。 それは回答中に質問の形式で記述してはいますが、まったくお答えをいただけません。 例えば、タイミングの制御をどのような考えで行おうとしているのかが不明です。（そもそも何をしたいのかがよくわかりませんが・・・） ただ、タイミングを制御したいのだろうと推測して、制御可能な方法の例を提示したつもりですが ＞試してみたんですが、上手くいきませんでした。 とのお答えだけなので、動作しなかったのか、動作したけれど欲しいものとは違っていたのか、違っていたのならどのように違うのかなどなどがまったくわからないので、補足のしようがない状態です。 それなので、質問に対するお答えだけ・・・ 1）googleのサイトからjQueryをロードしています。 　コピペでも動作するように（こちらでは質問者様の環境がわかりませんので）、ネットに繋がっているブラウザであれば間違いなくjQueryをロード可能なように記述しています。 　それなので、普通に自分のサーバからロードする記述に変えても同じ動作をするはずです。 2）items.each(function(i, e){ $(e).css("zIndex", n-i);}); の記述のことではないかと推測しますが、この部分は 　function(i, e){ 　　$(e).css("zIndex", n-i); 　} という関数を一行に書いているだけなので、i、eは通常の関数の引数です。 ただし、jQueryのeachメソッドに渡す関数になっていますので、iには要素のindexが、eには要素が渡される約束になっています。 　http://api.jquery.com/each/ jQueryに関しては（↑）が公式サイトですので、調べたいことがあればここで調べるのがよろしいかと思います。 ＞本ではこれをオブジェクトなんて書いてあるやつもありますが、 通常オブジェクトといわれるものは 　object = new Object()や　object = {} などで生成されるものを言うと思います。 　functionを用いてユーザ定義し、new演算子で生成することも可能です。 「これ」が何を指しておっしゃっているのか不明ですが、オブジェクトは用いていません。iやeは単にローカルの変数（引数を受け取る変数）です。 ＞何分指導者いませんので 　私も暇つぶしの独学者です。 　最近はネット環境が発達しているので、大抵のことはネットで調べることが可能です。ただし、情報の真偽については自分で確かめる必要はありますが… 3）var c = 0, sequence = [1000, 3000, 4000, 5000];　は 　var c = 0; 　var sequence = [1000, 3000, 4000, 5000]; と同等で、変数の定義と初期値を設定しています。 提示したスクリプトでは、sequence（配列）が、リストの画像の表示時間（正確にはfadeの所要時間）を示しています。 簡単に書くと、 　1.画像Ａが1秒かけてフェードアウト（画像Ｂが見える） 　2.画像Ｂが3秒かけてフェードアウト（画像Ｃが見える） 　3.画像Ｃが4秒かけてフェードアウト（画像Ｄが見える） 　4.画像Ｄが5秒かけてフェードアウト（画像が見えなくなる） という順序で実行される際の 　「1秒、3秒、4秒、5秒」をデータにしたものです。 そのようになっていないでしょうか？ もしも、全部が同じ時間で良いのであれば単一の処理で良くなるので、スクリプトももっと簡略化できるでしょう。 ＞後にlenngthを使ってますが、苦手なハッシュのところですよね 文章の意味が分かりかねますが、lengthではあらかじめリストの項目数を調べているだけです。 提示したスクリプトは、項目数が変わってもHTMLに画像を付け足して、それに応じて上記の時間（fadeの所要時間）のデータを付け足しさえすれば動作するように考慮してあるつもりです。 ＞たぶんこれだと時間のコントロールができないのでは？と思います 何の時間をコントロールなさりたいのかが私にはわかりませんので、fadeの所要時間を個別に指定できるものを一例として作成してみたのですが・・・ 違う時間をコントロールなさりたい場合も、同様の方法で可能ではないかと想像します。 ＞.animate()とかsetInterval()とか今まで自分が ＞カールセルなんか作ってきましたが、これをフラッシュみたいにしたいのです 何をなさりたいのかよくわかってませんが、ANo2の補足のスクリプトから想像するものに比べると、『カールセルのスライドショー』を作成する方がものすごく大変だと想像しますけれど、違うのでしょうか？ フラッシュとはAdobe Flashのことでしょうか？ Flashもスクリプトでいろいろなことが実現できますので、フラッシュのようといわれてもどのようなものなのかまったく想像がつきません。
既に回答は出ていますが、少し違う言い方をしてみます。 動きのあるエフェクトは、CSS3以前なら間違いなくJavaScriptが使用されていましたが、CSS3の普及が進み、今ではかなりのエフェクトがCSSだけでできるようになっています。ただ、完全に100%CSSのみで実装するケースは多くなく、ほとんどの場合は、「きっかけ」にあたるスイッチをJavaScriptで実装します。100%CSSでも実装できますが、管理面などからJavaScriptを採用されるケースが多いです。 たとえば例の場合であれば、最初にアニメーションをCSSのclassで定義して、 .rotate{ //回転させる記述 } JavaScript側でクラスを指定してあげます。 $("#taget").on("click",function(){ 　//classを指定する記述 }); こうすれば、JavaScript側ではほんとに単純な記述をし、CSS側でアニメーションの内容を指定することができるため、管理的に分かりやすいです。
http://oshiete.goo.ne.jp/qa/8810003.html で回答したコードですね。 > th = th.cloneNode(true); th要素ノードを複製しています。 https://developer.mozilla.org/ja/docs/Web/API/No … オブジェクトは参照なので同じオブジェクトを使い回してappendChildしたら要素が移動するだけで複数の要素を生成できません。 createElementから作り直すのが一般的だと思いますが、同じような要素を何度も作るのは無駄なので雛形となるth要素ノードを生成しておき、cloneNodeで複製しています。 --- http://oshiete.goo.ne.jp/qa/8810003.html の件。 > ・innerTextを使用するようにしますー innerText はIEの独自拡張であり、全てのブラウザで使用できません。 innerTextを実装されている他のブラウザもありますが、標準化されていない為に挙動が同じ保証もありません。 似たプロパティとして textContent がありますが、innerText とは挙動が異なります。 http://d.hatena.ne.jp/cou929_la/20110517/1305644 … 代入する分には textContent, innerText を使い分ければ問題ないかもしれませんが、仕様を追ってないので私からはお勧めできないですね。 IE8- を保証するなら createTextNode が最も無難な選択肢だと思います。 何度か仕様にまつわる質問をされていると思いますが、調べ方を工夫してみて下さい。 仕様のURLをブックマークしておくとか、Google検索でサイト検索してみるとか。 innerTextの件は少し検索すれば分かると思うのですが、おそらくまともに調べていないのではないでしょうか。 http://www.quirksmode.org/dom/html/ https://developer.mozilla.org/ja/docs/Web/API/No … http://msdn.microsoft.com/en-us/library/ie/ms533 … # Re: re97さん
thisは基本的にはスコープチェーンに入っていないので thisのプロパティに設定しても this.AAAAAAAQWEとしないと参照できないですね。 （thisがグローバルオブジェクトの場合は、参照可能になります。） withを使えばオブジェクト名を省略して プロパティを参照できるようになります。 var array = ['AAAAAAAQWE','BACDCFRF','VZAAAWW']; var obj = {}; for(var i=0; i<array.length; i++) obj[array[i]] = array[i]; with(obj){ 　alert(AAAAAAAQWE); //withの中では、obj. を省略できる } withは非推奨なのであまり使いたくないですけどね。 > ・既存コード調整なので、存在意義はとりあえずおいといていただけると有難いです 変数を全部文字列に置換するような調整はできないのでしょうか？ （AAAAAAAQWE → 'AAAAAAAQWE' みたいに置換すれば、変数宣言自体不要。）
正直、コードに意図が不明な点がいくつかあります…。 初心者だからいろいろ間違えてるだけなんでしょうか。 そうだと仮定するならば、以下にすればいいんじゃないでしょうか。 var bar = $(foo).text().match(/>>(\d+)/);
table要素にはAPIが用意されているので活用してみてください。 http://www2u.biglobe.ne.jp/~oz-07ams/prog/dom-re … http://jsfiddle.net/6gjfbj9w/ > th.innerHTML = '見出1'; ただの文字列挿入に innerHTML を使用するのは好ましくありません。 # Re: re97さん
何種類か考えてみました。 基本的には最後のfieldsetを選択してafterで追加します $('.a > fieldset:last').after('<fieldset class="b">新規挿入</fieldset>') $('.a').children('fieldset:last').after('<fieldset class="b">新規挿入</fieldset>') $('.a').children('fieldset').last().after('<fieldset class="b">新規挿入</fieldset>') $('.b:last').after('<fieldset class="b">新規挿入</fieldset>') $('.b').last().after('<fieldset class="b">新規挿入</fieldset>') $('.c').before('<fieldset class="b">新規挿入</fieldset>')
ANo1です。 簡単なサンプルを作りましたので、どう違うかを確認してみてください。 （クリックすると共通の処理で色が赤になります） （インデントは全角空白になっています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> h3{ margin:2em 0 0 0; } ul{ margin:0; } li{ cursor:pointer; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ //初期要素にバインド $("#hoge1 li, #hoge3 li").bind("click", handler); //上位要素（ul）でイベントをキャッチ $("#hoge2").on("click", "li", handler); //ボタンクリック時の処理 $("#switch button").bind("click", function(){ 　append1("#hoge1"); //#hoge1に単に要素を追加 　append1("#hoge2"); //#hoge2に単に要素を追加 　append2("#hoge3"); //#hoge3にイベントをバインドした要素を追加 }); //単純に要素を追加 function append1(id){ 　var li = $("<li>追加内容</li>"); 　$(id).append(li.clone(true)).append(li.clone(true)); } //イベントをバインドした要素を追加 function append2(id){ 　var li = $("<li>追加内容</li>"); 　li.bind("click", handler); 　$(id).append(li.clone(true)).append(li.clone(true)); } //クリック時の処理（共通） function handler(){ $(this).css("color", "red"); } }); </script> </head> <body> <div id="switch"><button type="button">要素を追加</button></div> <h3>要素を単に追加する</h3> <ul id="hoge1"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> <h3>上位要素でキャッチ</h3> <ul id="hoge2"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> <h3>イベントをバインドして追加</h3> <ul id="hoge3"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> </body> </html>
ブラウザはHTMLを最初から順に解釈していきます。 <script>タグがあればスクリプトを読み込んで実行しますが、ご提示のHTMLだと、 　<script type="javascript" src="JS練習.js"></script> 　　　・・・・ 　<script src="ttp://code.jquery.com/jquery-1.11.0.min.js"></script> の順になっています。 従って、「JS練習.js」を読み込んで実行しようとする時点ではjQueryが読み込まれていない状態です。 この状態で 　$(function(){ 　　$('p').css('color' , 'red'); 　}); を実行しようとすると、最初の行でエラーとなり実行が中断されていると推測されます。 ＊ファイル名等はできるだけ英数半角にしておいた方が、いろいろな意味で確実かと思います。
組んでみたよ。参考までにどうぞ。 $('#button').click(function(){ $(this).val($('#input').children().toggle().is(':visible') ? 'hide':'show'); }); ここまでシンプルにできるよ。 #buttonがクリックされたら #inputの子要素の表示非表示を切り替えて(toggle()) 要素が表示だったらvalueにhide 要素が非表示だったらvalueにshow こんな動きになってる。
innerHTMLはW3Cで標準仕様として定義されています。 http://www.w3.org/TR/DOM-Parsing/#attributes
添付画像とHTMLが全然違うのでどうしたいのかよくわかりませんがサンプルとしてどうぞ JavaScript $("#move").click(function(){ $('html, body').animate({scrollTop:$("a[href = '#menu2']").offset().top}, 300); if($("a[href = '#menu2']").parent().children('ul').css("display") == "none") { $("a[href = '#menu2']").parent().children('ul').show(); } }); $('#sub01 h4').click(function() { $(this).toggleClass("open").next("div").slideToggle(); }); $("#nav * li.drop").click(function() { if($(this).children('ul').css("display") == "none"){ $(this).children('ul').show(); }else{ $(this).children('ul').hide(); } }); html <input type="button" id="move" style="margin-bottom:1000px"> <div id="nav"> <ul class="clear"> <li><a href="#menu1">メニュー１</a></li> <li class="drop"><a href="#menu2">メニュー２<span>▼</span></a> <!-- InstanceBeginEditable name="planList" --> <ul> <li><a href="#sub01">サブ1</a></li> <li><a href="#sub02">サブ2</a></li> </ul> <!-- InstanceEndEditable --> </li> <li><a href="#menu3">メニュー3</a></li> <li><a href="#menu4">メニュー4</a></li> </ul> </div> <div id="sub01" class="subcontent"> <h4><span>項目名</span></h4> <div style=""> 内容内容内容</div><!-- /planInner --> </div><!-- /planBox -->
＞サブミットにならないんではないでしょうか？ inputのtype="image"はサブミットをかねてます どうしてもonclickで処理するなら onclick="df1();if(df()) this.form.submit();" のようにdf()の戻り値がtrueのときだけsubmitするようにしてください
ANo1です。 ＞サービス提供者がアフィリエイトタグをいじって云々は技術的に無理です。 状況がまったくわかりませんが、質問者様が作成を依頼されているのではないのでしょうか？ （ご質問文からはそのように読み取れますが・・・） サービス提供者とは質問者様への依頼者のことだと思いますが、なぜわざわざタグをいじる必要があるのかわかりません。 質問者様はここで方法を質問をしてみただけで、実際の作業は全てサービス提供者が行うということなのかな？ それなら、仮に方法がわかったところで、先方にスクリプトがわかる人がいなければ無理ですね。 しかし、ご質問文を読む限りそのようなケースである印象は受けないのですが？ 仮に、質問者様がしくみを構築するのだとして・・・ 対象とするエリアがかなり限定的なのか広範囲なのかによって、若干、対応方法の選択に違いが出る可能性がありますが、とりあえず一般的に動的な対応をするものとして、 1）自社紹介の店舗をプロットしたマップを初期画面として表示 2）表示画面のエリア内の施設を楽天APIを利用して検索 3）検索結果をマップにプロット（リンク先をアフィリエイトURLにセット） のような処理をするスクリプトを組み込んでおけば良いのではないかと考えたのですが、そういう内容ではないのでしょうか？ なお、検索の際にIDを送信しておけばURLはアフィリエイトURLとして取得できると書いてありますよね？ また、閲覧ユーザが地図のエリアを変えたなら、2）、3）の処理を繰り返すようにしておけば宜しいかと。 マップのエリアが限定的な場合は、都度検索する必要もないので、あらかじめ検索しておいて常にその結果のデータを利用するようにしておくという方法もありかと。
大雑把に言って・・・ 　1）xmlを読み込む 　2）対象をランダムに選択（1つか2つか不明ですが） 　3）マップを表示 のどこがわからないのでしょうか？ ＞nameとgooglemapを表示 nameはどこかに表示するにしても、googlemapを表示とは何をしたいのでしょうか？ 　・lat,lngデータを含むエリアのmapを表示する 　・上記地図内のlat,lngの位置にnameを表示したい 　・上記地図にマーカーなどで位置を示したい などなどいろいろな方法が考えられます。 ＞２つ一緒にランダム表示 これもいろいろ解釈できます。 　・nameとlat、lngの一組で２つ（３つだけど）として表示（地図1つ） 　・mapタグのセットを2組表示する。（地図が二つ） 　・一つの地図に２つのnameに対応する何かを表示したい。 それぞれで具体的なスクリプトは違うものになりますが、考え方は基本的に共通していると言えるかも。 ご質問の焦点がよくわからないので、大雑把になりますが… 1）ajaxを利用して読み込んでください。 　「ajax xml」で検索すれば例はいろいろ見つかるでしょう。 　ライブラリ等を利用すると簡単かも知れません。 2）xml中のmapタグのリスト（配列）からランダムに抜き出してください。 　「Math.random()*配列要素数」をインデックスとして選択すればよろしいかと。 　複数選択する場合は、選択する毎にその要素をリストから抜けば良い。 　２つだけなら、重複していたら再トライとかでもいいかも。 3）基本的にgoogle mapに関してはgoogleのサイトに詳しい説明があります。 　どのような表示にしたいのか不明なので、サイトの紹介にとどめますが、 　ここの内容に沿ってスクリプトを作成すればなさりたい表示になるのでは？ 　https://developers.google.com/maps/documentation …
こういうこと？ だけど質問２の制御法は適当。 とりあえずgroup1以外が来たら終わる。 var html = ''; for(var i in hoge){ html += i + ' '; for( var j in hoge[i]) { html += hoge[i][j] + ','; } html = html.slice(0,-1) + '<br>'; } document.getElementById('test').innerHTML = html; var html2 = ''; for(var i in hoge2){ if(i !== 'group1') break; html2 += i + ' '; for( var j in hoge2[i]) { html2 += hoge2[i][j] + ','; } html2 = html2.slice(0,-1) + '<br>'; } document.getElementById('test2').innerHTML = html2;
dyn.keepa.com から JSONP 形式で価格情報を取得している様です。 ブラウザの開発ツールなどで、通信内容を確認してみてください。 このデータの product.AMAZON 配列から日付と価格らしき値が読み取れます。 例: callback=jQuery99999({"product":{ ... , "AMAZON":[12684,2162, 12762,2615, ...], ... }}); 推測するに、12684 が日時の値、2162 が価格、以後その繰り返し 日時の値は以下の計算で Date に変換 new Date((new Date(2011,0,1).getTime()) + 日時の値 * 36e5) 12684,2162 -> 2012-06-12 12:00 : 2162円 12762,2615 -> 2012-06-15 18:00 : 2615円
よくわかりませんが、こういうことでしょうか <!DOCTYPE html> <script type="text/javascript" src="https://www.google.com/jsapi"></script> <script type="text/javascript"> function 株価変数が取得できる関数() { var form = document.forms['rohsoku']; var inputData = [], V = function(n){return parseInt(n)}; for (var i = 0; i < 256; i++) { var g = form.elements[ i + 't' ]; if (!g) break; var d = form.elements[ i + 'a' ].value.split(/,/); inputData.push([g.value, V(d[0]), V(d[1]), V(d[2]), V(d[3])]); } return inputData; } google.load("visualization", "1", {packages:["corechart"]}); google.setOnLoadCallback(drawChart); function drawChart() { function 株価チャートを引く関数() { var data = google.visualization.arrayToDataTable(株価変数が取得できる関数(), true); var options = { legend:'none' }; var chart = new google.visualization.CandlestickChart(document.getElementById('chart_div')); chart.draw(data, options); } 株価チャートを引く関数(); document.forms['rohsoku'].addEventListener('submit',function(ev){ev.preventDefault(); 株価チャートを引く関数()}, false); } </script> </head> <body> <div id="chart_div" style="width: 900px; height: 500px;"></div> <form name=rohsoku> <table> <tr><td><input name=0t value=Mon><td><input name=0a value=20,28,38,45> <tr><td><input name=1t value=Tue><td><input name=1a value=31,38,55,66> <tr><td><input name=2t value=Wed><td><input name=2a value=50,55,77,80> <tr><td><input name=3t value=Thu><td><input name=3a value=50,77,66,77> <tr><td><input name=4t value=Fri><td><input name=4a value=15,66,22,68> </table> <button type=submit>株価を変化させて再描画</button> </form>
No.1 の補足に対して > window.innerHeight innerHeight というのは、スクロールバー等も含めた高さなので、 表示領域の高さを求めるなら document.documentElement.clientHeight が望ましいです。 ただかなり古いブラウザにて動かない問題もあるので、扱いは慎重に > -200した値を <table height=???> の var n = window.innerHeight - 200; document.getElementById("WinSize").setAttribute('height', ''+n); ですが、height 属性は使うべきでない、というのが最近の流行ですので、 何か特殊な事情があるのでなければ style の使用をオススメします。 document.getElementById("WinSize").style.height = n + 'px';
> Smessage.substring(2,Smessage.length) の()内は2と１つ目の空白 からここにメッセージを数えた文字数が入るのでしょうか？　 > 次のsubstring(0,2)は0番目から２番目の文字なので、「１・つ・目」の３文字？ これくらいは、自分で調べましょう。 ・マニュアルや解説サイトを探して、読む。 ・alertやデバッガを使って確認する。 など。 例えば上のプログラムの該当個所周辺を window.status = Smessage; // デバグ用 alert(Smessage); alert(Smessage.length); alert(Smessage.substring(2,Smessage.length)) ; alert(Smessage.substring(0,2)); // Smessage = Smessage.substring(2,Smessage.length) + Smessage.substring(0,2); // デバグ用 alert(Smessage); // とでもすれば、その2つの質問への答えになるはずです。
a = -b の+版ですよ valueOf()を呼んで数値に変換するだけです。
なんども、すみません。 とりあえずの修正。 pathAnalyzeの 　　if(subD >= secD){　～～　} 部分を以下に書き換えれば、No4に関しては修正できるかと… 　while(subD >= secD){ 　　subD -= secD; 　　var secP = interpolate(subPath, (sd - subD)/sd); 　　sd = subD; 　　$markers.setSector(secP); 　　subPath.setAt(0, new google.maps.LatLng(secP.lat, secP.lng)); 　}
＞もし可能でしたら、具体的なソースコードも教えて頂けますと非常に助かります。 ご要望の回答ではありませんが、jQueryを使用しているのであれば jQueryプラグイン「bgswitcher」をお薦めします。簡単にいろいろな 効果で背景の切り替えができます。 参考URL：http://peacepopo.net/blog-entry-123.html
自分も映像関係は門外漢なのですが、After Effects のような動画編集ソフトを使っているのではないかと思われます。 ちょっと検索してみたところ、以下のページのエフェクト例にあるものの組み合わせでできそうに見えます。 http://ae-style.net/tutorials/ 逆にプログラムでどうこうしているように思えるところは映像中に見受けられませんでした。 どうやって作るのかについては、こちらよりも「その他Adobe」カテゴリの方が適切な回答が得られるのではないかと思われます。 http://oshiete.goo.ne.jp/category/1040
んー、jquery.zip.jsを読み込んで $(function(){ $.get('test.zip', function(archive){ console.debug(archive.files); for (var i in archive.files){ var file = archive.files[i]; console.log('========='); console.log(file.name); console.log(file.filesize); console.log(file.inflate()); }}) }); これを試しただけでfile.inflate()でcsvの中身が表示されたけど。
こんにちは。 start_locationのlat、lngはそれぞれメソッドですから、値を求める場合は 　start_location.lat() 　start_location.lng() として実行してください。 　start_location.lat、start_location.lngとして使うと、メソッドそのもの（実体としてはfunction)を意味することになります。
jqueryにもeq()はあるようですよ alert($("[name=nn]").eq(2).val()); // (3) for(var i =0; i < $("[name=nn]").length; i++){ 　　alert( $("[name=nn]").eq(i).val() ); }
A1 undefinedという値が返されることになります。 A2 はい。ただし何も意味が無い（戻り値を利用しない）のにfalseを返したりするのは良くはないです。 A3 呼び出し側が返り値をどう利用しているかによります。 A4 関係ないです。 falseを返した時デフォルトの動作が無効になるだけであって、バブリングが無効になるわけではありません。 ただしjQueryで同じようにやるとバブリングまで止まります。 A5 全般です。 ただし、これは elem.onclick = function() { または <elem onclick="function(){ とかいた場合に限る、古い仕様なので、今ではあまり頼るべきではありません。 代わりに evt.preventDefault() を使ってください。 A6 特にないです。
jQuery1.3を読み込んでいるようだけど、ふるすぎる。 $('xxx').on('click',function() { }); を使いたいならOver 1.7
WEBVTTで十分です。 背景色などはCSSで調整できます。 <style> ::cue { background-color: transparent; } </style>
こんにちは。 方法はNo1様が回答した通りと推測します。 ごく簡単な例を・・・ ＜test.js＞ (function(){ 　var s = document.getElementsByTagName("script"); 　var obj = JSON.parse(s[s.length-1].innerHTML); 　var i, txt = ""; 　for(i in obj) 　　txt += i + " = " + obj[i] + "<br>"; 　document.getElementById("result").innerHTML = txt; })(); ＜html＞ <!DOCTYPE HTML> <html lang="ja"> <head><title>TEST</title></head> <body> <div id="result">result</div> <script type="text/javascript" src="test.js"> { "hoge": "hogehoge", "fuga": 111, "piyo": 222 } </script> </body> </html>
argumentsは引数の配列です。 jQuery.extend({ merge : function(){} }) extendを呼び出している部分は上記のようになっているため argument[0]はmerge関数をもったオブジェクトとなります。 それを踏まえて、extend関数を読むと 176行目　target = arguments[0] // targetはmerge関数を持っているオブジェクト 177行目　i = 1 178行目　length = arugments.length // 1 (引数は一つしか与えていないので) 196行目　if(i === length) // ↑よりifの条件に一致 197行目　target = this; // thisはjQueryのオブジェクト 198行目　i--; 　　　　　　　// i=0 201行目　if ( (options = arguments[ i ]) != null ) { // optionsにmerge関数を持っているオブジェクトが入る 205行目　for ( name in options ) { // optionsのプロパティー名でループ // mergeの場合は、name="merge"が入っている 206行目　src = target[ name ]; // targetはjQueryオブジェクト // jQuery["merge"]はまだないのでsrc=undefined 207行目　copy = options[ name ]; // copyにmerge関数が入る 229行目　target[ name ] = copy; // target["merge"] = merge関数　ここでjQueryオブジェクトにmerge関数が入る 難しいのはthisがjQueyオブジェクトだということだと思いますが javascriptのthisは関数を呼び出したオブジェクトが入ります。 extend関数はjQuey.extend({...})と呼び出されている訳ですから jQuery.extend ↑extendはこのjQueryが呼び出しているわけですから、thisはこのjQUeryオブジェクトという事になります。
classは、 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから class = cdata-list [CS] 　この属性は、ある要素に1つのクラス名を割り当てるか、または複数のクラス名を設定する。 幾つの要素に対してでも、同じクラス名あるいはクラス名群が割り当てできる。複数のクラス名については、空白文字によって区切らねばならない。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［The global structure of an HTML document (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より 半角スペースで区切られた値のリストとして機能します。 　よって <span class="btn01 bi"></span> ＞"btn01 bi"という要素内のspanを ではなくて 「class属性の値リストに(btn01,bi)をもつspan要素を指定する」 には、 $('span.btn01.bi').click(function(){ です。 「class属性の値リストに(btn01,bi)をもつ要素内のspan」 　　(例)<p class="btn01 bi"><span>・・・ の場合は、 $('p.span.btn01 span').click(function(){ または $('*.span.btn01 span').click(function(){ p要素に限定しない $('.span.btn01 span').click(function(){ p要素に限定しない あるいは、 　「class属性の値リストに(btn01,bi)をもつ要素の直接の子どもであるspan」 の場合は $('p.span.btn01>span').click(function(){ または $('*.span.btn01>span').click(function(){ p要素に限定しない $('.span.btn01>span').click(function(){ p要素に限定しない 　基本的には、 セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS … )と同じです。
こんにちは。前回の回答者です。 ＞具体的にどう累計していけばいいかも分かりません。 考え方を理解できないと、コーディングまでには程遠いことになってしまいますが… 簡単な原理として、経路が直線の区間の集合になっているものとして、各区間の距離と座標がわかっているとします。 　区間1：{始点座標：x1,y1, 距離：d1} 　区間2：{始点座標：x2,y2, 距離：d2} 　区間3：{始点座標：x3,y3, 距離：d3} 　　　・・・・・・・・・・・・ 　区間n：{始点座標：xn,yn, 距離：dn} d1からdnを加えたトータルが全区間の距離になっていることはわかると思います。 スタート地点からルートに沿って指定距離行ったところを求めたければ、実際に移動しながら測るのと同様に、始点から順に距離を計測していけばよいことになりますよね？ 仮に、d1+d2＜指定距離＜d1+d2+d3になったとすれば、求めたい地点は（x2,y2)と(x3,y3)の間にあることがわかり、この間は直線で近似していますので、補間して求めればよいということになります。 前回の回答時には、DirectionsServiceのレスポンスの各stepが直線になっていると勘違いしていましたが、実は、よく調べてみると、どうも各stepもポリラインで構成されているようです。 それなので、正確に求めたい場合は、結局このポリラインデータを解析することになりそうです。 （かなり大雑把でよければ、各stepを直線近似してしまってもよいかも） 　https://developers.google.com/maps/documentation … ポリラインデータを解析するには、Google Mapsのgeometry libraryを利用するのが便利です。 パスの取り扱いや距離・面積の計算などが簡単にできるようになっています。 とはいえ、ここまで詳細に経路を追いかけるとなると、DirectionsRendererを利用する意味も薄れてしまうので、経路表示も直接ポリラインで記すようにしても大した手間ではなくなりますね。 　https://developers.google.com/maps/documentation …
Node.jsでも立ててWebSocketでも使ってやってください。
＞ルートを表示することはできるのですが～ ルート検索と表示は、DirectionsServiceやDirectionsRendererを利用することで比較的簡単にできるようになっているかと思います。 　http://oshiete.goo.ne.jp/qa/8159078.html 質問者様がどのようになさっているのか不明ですが、(↑)に類する方法でなさっているのではないかと想像します。 ご質問のように一定区間ごとにマーカーを表示したいのであれば、DirectionsServiceのレスポンスにあるルートの情報を順に辿ることで可能だと思われます。 試してはいませんが、各ステップ毎に、 　distance: 当該区間の距離情報 　start_location: 当該区間の始点座標{lat,lng} 　end_location: 当該区間の終点座標{lat,lng} の情報が得られるようですので、距離を累計していって指定距離を超えたところで、その区間内を補間して座標を求めるといった感じでいかがでしょうか？ 詳しいDirectionsServiceに関する情報は以下にあります。 　https://developers.google.com/maps/documentation … 位置の算出は通常のjavascriptで、マーカー表示はmap apiを利用なさればよろしいかと。 　https://developers.google.com/maps/documentation …
-- javascript $(function(){ var overcells = $("table td"), overrows = $("table tr"), hoverClass = "hover", current_r, current_c, rowIndex; overcells.hover( function(){ var $this = $(this); (current_r = $this.parent().children("table td")); rowIndex = $this.parent().parent().children("table tr").index($this.parent()); (overrows.filter(":nth-child("+ (rowIndex + 1) +")")).addClass(hoverClass); //$("#a").text(rowIndex + 1); (current_c = overcells.filter(":nth-child("+ (current_r.index($this)+2) +")")).addClass(hoverClass); }, function(){ (overrows.filter(":nth-child("+ (rowIndex + 1) +")")).removeClass(hoverClass); current_c.removeClass(hoverClass); } ); }); -- css table td.hover {background:#cffbfb;} table td.hover:hover {background:#84f4f4;} table tr.hover {background:#cffbfb;} こんな感じで。 クロスする部分の色は切り替えていませんが。 色が濃くなっている箇所はクロスしているかどうかではなく、 オンカーソル（td.hover:hover）で判定しているようです。
数値とbooleanの関係を使ったコードですね。（あまり良いコードだとは思えませんが） 前提として、以下のルールがあります。 数値→Boolean： 0ならfalse、それ以外はtrue Boolean→数値： falseなら0、trueなら1 よって、「!(hoge%4)*6」は、 hogeが4で割り切れればtrueと見なし、true*6（つまりは1*6）で6。 hogeが4で割り切れなければfalseと見なし、false*6（つまりは0*6）で0。 という処理になります。
Firefoxにはプロファイラーと言うものが付いているのはご存知でしょうか？ これを使うと、呼び出された関数に使用した時間がわかるので どの関数が重たいのか調べられます。 詳しくは以下のサイトを参照 http://smellman.hatenablog.com/entry/2013/05/16/ …
10進数の整数を前提とする金額計算に、 2進数の浮動小数点数を使うのは、 精度とか丸めなどの問題により、 計算額に誤差が含まれるという問題があります。 ですので通常は整数で計算して、 表示だけを小数点っぽく見せる手段を使います。 var total = 2999 * 1 + 700; (total / 100 | 0) + "." + (total % 100) // "36.99" ですが以下の様にすれば、 大抵の場合で表示上は問題なく見せることができます。 var total = 29.99 * 1 + 7; total.toString() // "36.989999999999995" total.toFixed(2) // "36.99" ただしこれは誤差を見えにくくしているだけなので、 本気でやるなら必ず整数を使ってください。
クライアント側のMIME-typesはUA設定依存なのでマイナーなフォーマットになるとあまりあてになりません。 MIME Sniffingを読む限りではbinaryのMIME-types判定に重きを置いているようです。 http://www.hcn.zaq.ne.jp/___/WEB/File_API-ja.htm … https://mimesniff.spec.whatwg.org/ 正しいファイル名が付与されているという性善説に立つなら、簡易的には「拡張子」が適切だと思います。 ただし、拡張子だけでは不十分なので、最終的にはサーバサイドでファイル内の文字列をパースしてCSVフォーマットであることを確定させる必要があります。 サーバサイドの負荷を減らすためにJavaScriptでパースすると更に良いと思います。 # Re: suffreさん
結構時間が経っているのでもう見つけたかもしれませんが。。 http://css-eblog.com/javascript/floating-popup-w …
引数は座標変換のマトリックスを表していますので、単純な伸縮率とはちょっと違うかと思いますが… ご提示の引数は以下として処理されます。 　｜-1　0　0｜ 　｜0　 1　0｜ 　｜0　 0　1｜ 結果的に、 　Ｘ'= -x 　Ｙ'= y に変換されることになりますので、Ｙ軸に対する鏡像変換（ミラー）になるかと。 CANVASの解説は以下にありますのでご参考までに。 　http://www.html5.jp/canvas/ref.html 仕様書 　http://www.w3.org/TR/2dcontext/#transformations
今回の例をなるべく流用するとして price1もしくはprice2に金額がはいっているときだけprice3に500円を入れればいいのでは？ （さすがに何も選ばないのに送料だけかかるのはちょっとあれなんで・・・） <style type="text/css"> table {border-collapse: collapse;} table, th, td {border: 1px #808080 solid;} th, td {padding: 3px 10px;} th {background-color: #d3e9fa;} td {background-color: #ffffff;} td strong {color: #ff0000;} </style> <script> function keisan(){ var price1 = document.form1.goods1.selectedIndex * 500; document.form1.field1.value = price1; var price2 = document.form1.goods2.selectedIndex * 1000; document.form1.field2.value = price2; var price3 = (price1 || price2) ? 500: 0; document.form1.field3.value = price3; var total = price1 + price2 + price3; document.form1.field_total.value = total; } </script> </head> <body> <form action="#" name="form1"> <table> <tr> <th>商品名</th> <th>単価</th> <th>数量</th> <th>金額</th> </tr> <tr> <td>商品サンプル1</td> <td align="right">500円</td> <td><select name="goods1" onChange="keisan()"> <option>0</option> <option>1</option> <option>2</option> <option>3</option> <option>4</option> <option>5</option> </select></td> <td><input type="text" name="field1" size="8" value="0"> 円</td> </tr> <tr> <td>商品サンプル2</td> <td align="right">1,000円</td> <td><select name="goods2" onChange="keisan()"> <option>0</option> <option>1</option> <option>2</option> <option>3</option> <option>4</option> <option>5</option> </select></td> <td><input type="text" name="field2" size="8" value="0"> 円</td> </tr> <tr> <td>送料</td> <td align="right">500円</td> <td></td> <td><input type="text" name="field3" size="8" value="0"> 円</td> </tr> <tr> <td align="right" colspan="3"><strong>合計</strong></td> <td><input type="text" name="field_total" size="8" value="0"> 円</td> </tr> </table> </form>
どういう事を言っておられるのかいまひとつ理解できないんだけど、 ・初期表示でアニメーション表示 ・一定時間ごとに再描画 ということかな？ こんなの？ http://www.highcharts.com/stock/demo/dynamic-upd … これはhichartjsという超有名なライブラリだけど、リファレンス読む力があれば使えます。 ・一定時間ごとに再描画 というのは、新規追加分のデータを毎度Ajaxで取得してくるか、一定量を読んでおいてループさせるか、そういう処理になるでしょう。
<form name="js" value="Mapion" onsubmit="textbox(); return false"> <input type="text" name="txtb" value="" size=50> <input type="button"> </form> これでどうでしょう？確認してないけど大丈夫だと思います。
ポップアップのようにwindow.openで開かれたページはwindow.closeできますが 通常のページはセキュリティの関係でjavascriptで閉じることはできません
イベントで処理したほうが自然では $('#basicModa').on('show', function () { // }); 消した時は $('#basicModa').on('hide', function () { // });
こういうこと？ <script> function check(f){ var r={}; for(var i=0;i<f.length;i++){ if(f[i].type=="radio"){ if(typeof(r[f[i].name])=="undefined") r[f[i].name]=false; if(f[i].checked) r[f[i].name]=true; } } for(var i in r){ if(r[i]==false){ alert("未チェックあり！"); return false; } } return true; } </script> <form onsubmit="return check(this)"> <p> Q1: <input type="radio" name="q1" value="1">1 <input type="radio" name="q1" value="2">2 <input type="radio" name="q1" value="3">3 <input type="radio" name="q1" value="4">4 </p> <p> Q2: <input type="radio" name="q2" value="1">1 <input type="radio" name="q2" value="2">2 <input type="radio" name="q2" value="3">3 <input type="radio" name="q2" value="4">4 </p> <p> <input type="image" src="next.jpg"> </p> </form>
HTMLフォームのsubmitは、完全な「遷移」ですので、サーバ側に制御が移り、しかもサーバサイトノプログラムはローカル側への遷移指定ができないので、ご希望の動作を実現することはできません。 画面遷移と非同期に動作できるのは、submitではなく、Ajaxによる送信です。 サーバサイドのプログラムは、処理結果画面ではなく、処理レスポンス（処理結果）を返すように変更し、クライアントサイドは「コールバック」でそれを受け、画面を遷移させます。 なお、localhostから外部サーバへの送信となるため、JSONP形式での送信か、サーバサイド側でクロスドメインアクセスを通すような処理も必要になります。
振り分けを全部PHPでやるなら、こんな感じでしょうか。 <div id="header"> <?php if (isset($_COOKIE['ken']) && $_COOKIE['ken'] === 'kyoto'): ?> <?php include (TEMPLATEPATH . '/kyoto.php'); ?> <img src="test.html/kyoto.jpg" alt="京都" /> <?php else: ?> <?php include (TEMPLATEPATH . '/zenkoku.php'); ?> <img src="test.html/zenkoku.jpg" alt="全国" /> <?php endif ?> </div>
さらっと見た感じだとoptionにbeforeっていうコールバック関数を指定できるから、そこで現在の枚数を取得して 8枚目になったらSkipボタンを非表示とかすればまずは消せると思う。 んでSkipボタンのclickで最後のスライドに行けばいいんだけど、nextとprevはあっても先頭に戻るとか一番後ろとかは無い気がする。 function handleArguments ここの中が外から呼べるメソッドの定義だから case 'last' を追加して 最後の画像を表示、そしてstopするように作ればいいんじゃないかな？ $('#skip').click(function(){ $('#slide').cycle('last'); }); みたいな感じ
$.each(json, function(index) { console.debug(index+'番目'); console.debug(this.fields.kamoku); console.debug(this.fields.kamoku_hira); console.debug(this.fields.kamoku_alpha); }); こうじゃないの？ jsonを対象にeach それは何かというと {"pk":1} この単位のループ pk3まで。 だからその中のfieldsのxxxを取得 単純にこうじゃない？
ANo3です。 ＞新規HTMLファイルで実行すると、うまくいかないようでした。 どううまくいかないのかわかりませんが・・・ 1）ソースをコピペする 2）質問者様の環境に合わせてcharsetを設定 3）ソースの全角空白を半角に変更 4）外部スクリプト参照部分のタグを適切に修正 　（ここの掲示の関係でリンク形式になって省略されています） 　（jQueryとgoogle mapの2つを読み込んでいます） 以下をチェックしてみてください。 　外部スクリプトは読み込めているか。 　初期の表示はされているか。
今でもnode-webkitを利用することでバックエンドをほぼフロントWeb技術の範疇で構築することはできる。 それにフロント側でできることが大きくなってきていて、バックエンドはそれを支えるだけの構図になってきてるので、あまり心配することはない。
linkMenu(this.selectedIndex) のIndexが"l"indexになってました（笑）
JavaScriptというかjQuery? そのまま日本語で書いてあることをやってみればいいんじゃない？ 一つずつ考えてみたら？ //タイトルタグから取得 var title = $('title').text(); // id=titleのdivに反映 $('#title').html(title); // input name="titleにタイトルを反映 $('input name="title"を指定するセレクタ').val(title); // ぼたんをボタンに $('ボタンを特定するセレクタ').val('ボタン'); ま、全部書いたら練習もクソもないから。 セレクタについて調べてみるといいよ。 idは'#id' classは'.class' タグ名なら'tag' 属性なら[name="name"] ま、いろいろあるよ
Chromeの場合、「name」という名前を使うと意図しない動作になる事があるようです。（window.nameと干渉してるのかな？） IEなどでは、どちらの場合も正しく動作しますね。 参考までに、 Chrome上でnameという名前にした場合、"あだち,いのうえ,うえだ,えんどう,おおの" という1つの文字列に変換されています。 name1など他の名前にすると、 ["あだち", "いのうえ", "うえだ", "えんどう", "おおの"] という状態で格納されています。 細かい原因は分かりませんが、とりあえずnameという名前を使うのはやめておいた方が良さそうですね。
トップページのアドレスがどうのこうのっていうか onChange="linkMenu(this.selectedIndex);" でコンボ変更時に 選択されたオプションのインデックスを引数にlinkMenuを呼び出す。 linkMenuはそのインデックスを受け取って動作する。 if ( m == 0 )は０のとき、すなわち一番上の「クリックして選択してね」 が選択されたらなにもせず終了 if ( m == 1)は１のとき、すなわちe-supportが選択された時 そしたら http://www.k-support.gr.jp/index.html%22 がリンク先となる。 だからこの部分を http://homepage3.nifty.com/mtaiyo/9%E2%96%B3ABC. … にすりゃいい
どのようなマークアップを想定しているのかも不明なので、ひとつの考え方の例として簡略化したサンプルを… クッキーは考慮していませんが、その時の状態を保存する部分と、初期表示を追加する感じ。 ご質問文にいろいろと書いてはありますが、例えば『エリアＡ（非表示）、エリアＢ（表示）』の状態で、ボタンＢを操作するとどうなるのかなどが不明です。とりあえず、常にその時の状態の反転（トグル）になると仮定。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body{ width:800px; } div.articles{ width:700px; float:left; } div.article{ height:250px; position:relative; border:1px solid gray; } #A, #B, #C { width:500px; height:100px; position:absolute; 　　　　　　right:10px; bottom:10px; background-color:#DDD; } div.buttons{ width:95px; float:right; } div.buttons button{ width:100%; display:block; margin-bottom:10px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ 　$("div.buttons button").click(function(){ 　　$(this.value).slideToggle(); 　}); }); </script> </head> <body> <div class="articles"> <div class="article"> 　記事 　<div id="A">（area A）</div> </div> <div class="article"> 　記事2 　<div id="B">（area B）</div> </div> <div class="article"> 　記事3 　<div id="C">（area C）</div> </div> </div> <div class="buttons"> 　<button type="button" value="#A">area A</button> 　<button type="button" value="#A,#B">area A&B</button> 　<button type="button" value="#B,#C">area B&C</button> 　<button type="button" value="#A,#C">area A&C</button> 　<button type="button" value="#A,#B,#C">area A&B&C</button> </div> </body> </html>
こんにちは。 ＞しかし、下記のコードでどうしても実装できません。 どううまくいかないのか書いてないのでわかりませんが・・・ ざっと見たところ、動作しないわけではなくて開閉状態が思った状態と違ってしまうということでしょうか？ 仕組みはご承知のように、メニューの開閉状態をクッキーに保存して、遷移後のページでそれを読み込んで再現しようとしているわけですが、そのあたりが怪しいと思われます。 デバッグのために、都度クッキーの内容を表示させてみるか、あるいはスクリプトの動作を簡単にシミュレートしてみればおわかりになると思います。 ＞開くのは１つのパネルのみ という仕様とのことですが、ご提示のスクリプトでは全部の開閉状態を記録しようとしているのではないかと推測します。（多分これがうまくいっていません） 別案として。開いているメニューの位置だけを記憶しておくという方法も考えられます。 （インデックス番号などを記憶しておく＝記憶項目はひとつだけ） 想像するところでは、こちらの考え方の方が見落としが起きにくいので、勘違いや間違いの入り込む可能性が減るのではないかと思います。
>でもですよ、関数をreturn fakseにしてしまうと >ハンドラーが設定できないです。 何がどう設定できないのか意味がよくわかりませんが、 とにかく前回の話が伝わらなかったということのようですね…。 そうですか…。というかほぼ知識ゼロな方なんですかね。 <button onClick="df3(); return df4();"> と書いたらどうですか、という意味だったんですけど。
括弧というか、ブロックです。 letで宣言した変数はブロックスコープなのでそのブロックの中でのみ使えます。
PHP によるサーバー側処理が良いとは思いますが、 諸般の事情で JS によるクライアント側処理で対処するなら <!DOCTYPE html><html><head> ... <script> window.addEventListener('DOMContentLoaded',function(ev){ var a = document.getElementsByClassName('a')[0]; var b = document.getElementsByClassName('b')[0]; var n = parseInt(a.textContent); b.textContent = '' + (n*3); }, false); </script> ... <body> ... <p class=a>30</p> <p class=b></p>
return rec.split (/\t/g); を return rec.split (/,/g); にでもしましょうか？ ^^; いい加減な回答で申し訳ない。以下を理解しないと私は先に進めません。そろそろ忙しくなってもきましたし・・・。 http://www.ietf.org/rfc/rfc4180.txt
開発者ツールは試してみてくれたのかな？ 呼び出されているだろうjsとformの部分があれば大体追えるけど、 変に省略されるとかえって難しくなる。 まずはエラーが出ているのか出ていないのか。 出ているならそこら辺を見直すだけで済むし。
ざっと見ただけですが・・・ ご質問のようなことが起こる可能性は、 　img.splice(n,1); としているので、配列要素数が段々減少していって、空配列になった時点で「該当要素がない」というエラーになって止まっているのではないかと想像します。 類似するエラーが出ていないでしょうか？ 全体で何をどうしたいのかよくわかりませんが、とりあえずそのあたりをチェックしてみてはいかがでしょうか。
すでにANo1様が回答なさっていますが、ご質問の通りにやるなら、 $("#hoge1,#hoge2,#hoge3").click(function(){ 　 var n = this.id.replace(/^hoge/, ""); 　$('#piyo').load("puyo" + n + ".html"); }); とでもすれば可能です。 （数字であることのチェックはしてませんが、正規表現を変えれば可能です。） 使う目的にもよりますが、 1）まとめて処理しているのに個別IDによっている 　（ボタンの増減によってスクリプトを変更せざるを得ない） 2）URLがIDの連番に固定されていて汎用性に欠ける 　（外部リンクなどを含ませようとしても無理） などが気になります。 1)は連番のIDであれば、 　$("input[id^='hoge']")～～ のような識別方法も考えられますが、IDによらずクラスなどを利用することで汎用化できるでしょう。 2)はスクリプト側でURLの配列を持っておく方法もありますが、ANo1様もご指摘のようにHTML側に記述しておくのがわかりやすそうです。 inputのvalue値を使いたいところですが、表示値に利用されてしまうので、inputの代わりにbutton等を利用すれば表示値、URL(value)を個別に指定することができるのではと思います。 結果的に、 $("div.hoge button").click(function(){ 　$('#piyo').load(this.value); }); のようにすることでIDも不要になりますし、ボタンの増減にも対応可能になります。 ボタンが散在している場合は、 $("button.hoge")～～ とか。 クラスと機能が一致するので、理解しやすくなるのではないでしょうか。
後者は構文エラーですね。 Webコンソールを見ると『ReferenceError: goo is not defined』って出てるので、gooなんて知らね～よって怒られています。
あまりお勧めできませんがクロスドメインのajaxで処理してみては？ 他人のふんどしってやつ？
>alert(""); //--ここが呼び出せない この行の直前、またはこの行でスクリプトエラーで止まってるんじゃないですか？ 質問文や回答のお礼に書いていない部分に、スクリプトエラーがないか確認してみてください。 自分で探せない、または説明できないのであれば、略したり抜粋したりせず全文を書く事をお勧めします。
確かにピンポイントな情報は少ないだろうね。 別にJavaScriptだけじゃないよ。 Flash使ったり、技術的にはもう古いけどJavaアプレットでだってできる。 今ならhtml5のCanvasを利用したりかなぁ。
JavaScript側の形式はJavaScriptの組み込みの配列記述方式そのままなので，PHPからはJSONとして渡せばよいと思います。 PHP側のデータがおかしいですね。 配列の要素に複数のデータを直接入れることはできません。 PHP側のデータが， Array(Array('hoge', 4.3), Array('piyo', 5.6)) ならば，そのままjson_encodeすればよいでしょう。 # PHPでも [ [ 'hoge', 4.3 ], [ 'piyo', 5.6 ] ]と書けますが，話を単純にするためにArray関数を利用。
>カスタム背景を作成してそれを取得する感じですか。 カスタム背景というのはなにかわかりませんが、 背景色が取得できないなら、 クラス(class="#ff0000")や独自データ属性(data-bg="#ff0000")など出力されるようにして、これを取ればいいんではないでしょうか？ ということです。
こんにちは。 手元のIE8.0で試してみましたが表示されるので再現できませんね。 ＞IEではzero_resultsとメッセージが表示され表示がされません。 スクリプトの中でエラー処理を行っています。 geoResultCallbackの処理中の 　alert(status); が実行されていると思われます。要はサーバーからエラーが帰って来ているということです。 （原因はブラウザのセッティングや通信環境などにあるかも知れません） スクリプト中の送信データ 　var req = { 　　address: "新宿三丁目駅", 　}; の後ろのカンマを取り除いても表示されませんか？ 　　address: "新宿三丁目駅",　⇒　address: "新宿三丁目駅" なお、googleの各種サービスの説明はgoogleサイトに詳しく説明されていますので、そちらを参照するのが一番確実です。 　https://developers.google.com/maps/documentation … 　https://developers.google.com/maps/documentation …
ざっと見ただけですが・・・ ＞　$(location.hash).next(".bbb").slideToggle("slow"); が、クリックイベントの処理定義の中に書かれていますが、これだとクリックする度にこの処理が走ります。また、クリックしないとこの処理は実行されません。（初期設定として実行されない） ご質問の内容からすれば、この処理は読込後1度だけ初期設定として実行されれば良いはずですので、クリック時のイベントハンドラからは外す必要があります。 次に、 ＞　$(location.hash).next(".bbb") ですが、location.hashはidに相当する文字列になると想像しますが、対象としたいクラスbbbの要素はこの兄弟要素ではなく子要素になっているのではないでしょうか？ それなので、nextではなくfindなどを用いて取得する必要があるでしょう。 　$(child, parent)～～ の書式で取得しても同様の結果が得られると思います。 以上を修正したとして、 ＞　$(location.hash).next(".bbb").slideToggle("slow"); １回だけの処理なので、必ずしもToggleの必要はないでしょう。show（又はslideDown）などで良いと思われます。 また、クリック時の処理内容を見てみると、title要素にactiveのクラス設定/削除が行われていますが、最初の時にはこの処理はしなくても良いのでしょうか？ （Toggleで設定されているので、以降のクリック時に期待とは違う結果になる可能性がありそうです） もし、必要な場合は処理を追加する必要がありますね。 同じことをする別の方法として、『該当するtitle部分をクリックしたことにする』という考え方もありそうです。 　$(location.hash).find(".title").click(); のようにしておくことで、実際の処理は設定したイベントハンドラに渡すという仕組みにしておくのが簡単かも知れません。 （イベントの処理内容がいろいろとある場合は、この方が効率的な記述になるでしょう。）
img.src は場合によっては絶対パスに自動変換されます なので、一概には言えませんが直すとしたら 誤: if(img.src == arguments[i]) { 正: if(img.src.indexOf(arguments[i]) > 0) {
アコーディオン:（折りたたんで開く）というより、プルダウンメニューと言うほうがよいかも。 　別にjavascript使わなくてもできます。CSS2.1ならoverflow、CSS3を使うなら:target擬似要素 ＞dtにフロートをかけ並べ＜ddをwidth100%にしてみたのですが、下記のURLの様にくずれてしまします。 　ddをabsoluteで他から切り離せばよい ＞position:absolute;で設定したところdtの内容が、下のアコーディオンが優先されてしまい切り替わりません。 　z-indexでレイヤを指定すればよい どう表現（プレゼンテーション）しようかではなく、文書構造を示してください。 ナビゲーションのリスト <nav> 　<ul> 　　<li> 　　　<ul> 　　　　<li></li> 　　　　<li></li> 　　　　<li></li> 　　　　</li> 　　　</ul> 　　</li> ・・・ 定義リスト <dl> 　<dt></dt> 　<dd></dd> 　<dt></dt> 　<dd></dd> </dl> 本文 <section> 　章 　<section>項目</section> 　<section>項目</section> 　<section>項目</section> 　<nav>目次</nav> </section> ・・・・プレゼンテーションにHTMLが引きずられたらダメです。
とりあえずその文は途中で切れています。その下のリンクも文の一部で、 The jQuery illuminate plug-in can be freely used or modified. If you would like to share your updates and contribute to the plug-in, please feel free to Send Me a Message. がプラグインのライセンスに関する規定の全文です。だから、この文にしたがって利用してください。 ……という答では満足されないでしょうから、簡単に訳すと 　この jQuery illuminate プラグインは自由に利用・改変できます。もしあなたがこのプラグインに対するあなたの改良や記述を共有したいのならば、どうか気軽に私にメッセージを送ってください。 となります。 ですので、ライセンスやらなんやらを気にせずに自由に使って大丈夫でしょう。むろん作者には敬意を払うべきで、これをあなたが一から作ったと言うなどの行為は論外ですが。
＞わかんないことがあるたび、１日以上かけて考えそれでもわかんなければ、教えてgooで聞いてました。 基本はそれでいいんです。 ただし解決するまで他のことを一切やらないのはもちろんダメです。 何事も正しく分かりやすい説明さえあればすぐ理解できると思ってはいけませんし、正しく分かりやすい説明が必ずしもこの世に存在するとも限りません。 逆に言えばすぐ理解できないからといって、勉強の仕方や、参考情報が悪いと決めつけてはいけないということです。 分からないことは頭の片隅に置いておいて、機会のある度に繰り返し繰り返し何十回も何百回もそれに触れて、調べて、使ってくうちに馴染んでようやく分かってくることも数多くあるのです。 もし良い参考書さえあればすぐ理解できるようになると思っているのなら、考えを改めたほうがいいです。 もしくは義務教育の教科のように、誰でもやさしく体系立てて習得できるような教科書が存在すると思っているのなら、考えを改めてください。 プログラミングは、独学が基本です。 自分は分からないことをどうやって調べて、どのように取り組んでいったら理解できるのか。 それもプログラミングの勉強の一部なのです。 あなたはまだ、基礎をやらないといけない段階です。 望むゲームを作るため、というかゲームを作るための参考情報を理解するには、何年分もの力と経験が足りません。それが分かったということは収穫だと思います。 まず、色んな入門サイトの基礎サンプルでも見て、いろんな知識を少しずつ付けて行ってください。 そしてまた望みのゲームを作ろうとしてみればいいです。必ず前回より良く作れるようになっています。 それを繰り返していけば、力もついて、ゲームも完成させることができるようになります。
> ■下記コードで、hogeは配列でしょうか？ 配列です。 　alert( hoge instanceof Array ); はtrueになります。 > ・配列のコピーはどうやるのでしょうか？ 新しい空の配列を作って、 配列hogeの全要素を新しい配列にコピーすれば良いです。 var hoge2 = []; hoge2[0] = hoge[0]; hoge2[1] = hoge[1]; //普通はループを使う。 自分で処理を記述するなら上記の通りですが、 concatに何も指定しないと要素が同じ新しい配列が返ってくるので var hoge2 = hoge.concat(); でも同じことができます。
値が半角数字の場合、本来JavaScriptでは「文字列」と「数値」どちらとしてでも扱えるようになっています。 ですから、通常はそのまま計算しても、ちゃんと計算できる場合がほとんどです。 ところが、計算式の演算子が「＋」だけであった場合、この演算子は文字列の連結にも使用されるため、スクリプトエンジンは「文字列」なのか「数値」なのか判断できず、本来の型である「文字列」として計算（文字連結）してしまうわけです。 この場合、値を「数値」に変換する必要があります。 例1：整数変換「parseInt」や、数値型指定「Number」を使う var f1 = parseInt(document.form1.c1.value); var fi = Number(document.form1.c1.value); 例2：文字連結に使用しない演算子を使用し、数値と思わせる。 var f1 = document.form1.c1.value * 1; var f1 = document.form1.c1.value / 1; var f1 = document.form1.c1.value - 0; f2、f3も同様にします。 あと、フォーム要素から値を取得した後に、同じ値を同じフォーム要素に書き戻しているのは、何か意図があっての事でしょうか？ もし分からず書いているなら、その行は不要です。 var f1 = (document.form1.c1.value);　 document.form1.c1.value = f1 ;　←ここは不要 それと、「f1 = (document.form1.c1.value)」と（）で囲まれていますが、これも何の意味がありません。 それらを踏まえたうえで書き換えたのが以下です。 ※追加されたC行部分のみ記載します。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ var f1 = Number(document.form1.c1.value); var f2 = Number(document.form1.c2.value); var f3 = Number(document.form1.c3.value); document.form1.ctotal.value = f1 + f2 + f3; ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 最後に、要素をフルネームで記述するのは、最近のWebページではほとんど使用しないので、書き換えてみました。 各セルの値を配列に代入し、セルと配列を対応させて管理する方が、項目増えた時など編集が楽になると思うのですが、今回は省略。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ <BODY> <FORM name="form1"> <TABLE width="473" border="1"> <TBODY> <TR> <TD align="center"></TD> <TD align="center">A</TD> <TD align="center">B</TD> <TD align="center">C</TD> <TD align="center">D</TD> </TR> <TR> <TD>1</TD> <TD><INPUT type="text" id="A1" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B1" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C1" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D1" style="width:100px" value="0"></TD> </TR> <TR> <TD>2</TD> <TD><INPUT type="text" id="A2" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B2" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C2" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D2" style="width:100px" value="0"></TD> </TR> <TR> <TD>3</TD> <TD><INPUT type="text" id="A3" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B3" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C3" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D3" style="width:100px" value="0"></TD> </TR> <TR> <TD colspan="3" align="right">C合計</TD> <TD><INPUT type="text" id="ctotal" style="width:25px" value="0"></TD> <TD>D合計<INPUT type="text" id="total" style="width:100px" value="0"></TD> </TR> </TBODY> </TABLE> </FORM> </BODY> <SCRIPT type="text/javascript"> function keisan(){ // 計算に使用するデータの行数（1～3なので3行） var gyou = 3; // C列合計 var goukei_c = 0; // D列合計 var goukei_d= 0; // 以下計算を行数分繰り返す for(i = 1;i <= gyou;i++){ // 行計算 var keisanti = document.getElementById('A' + i).value * document.getElementById('B' + i).value * document.getElementById('C' + i).value; // 計算した行の値をD行合計に加算 goukei_d += keisanti; // 現在の行のC列の値をC行合計に加算 goukei_c += Number(document.getElementById('C' + i).value); // 計算結果をフォームに出力 document.getElementById('D' + i).value = keisanti; document.getElementById('total').value = goukei_d; document.getElementById('ctotal').value = goukei_c; } } </SCRIPT>
ユーザー毎にサブドメインで分けてください。 それ以上の解決策はありません。
#1さんの言う通り、一瞬しか変わらない原因はリロードされてしまうことですね。 なので、 <input type="submit" … とするのではなく <input type="button" … とすればOKでしょう。 submitは送信なので、結果的にリロードされるのは当然。 buttonはデフォルトでは何もしないので、こういう場面で使えます。 return false; して、クリックをキャンセルして送信を防ぎ(結果的にリロードも防ぐ)方法もないではありませんが、buttonというタイプがあるのにわざわざsubmitを使ってわざわざ後からキャンセルするのは美しくはない。 今後、<input>ではなく、たとえば<a>リンクを使って切り替えたいという場面があるかも知れないので、return false;でキャンセルできるということを覚えておくのはいいかな。 onClick="view('contents1','contensGroup');return false;"
http://ogre.mx/1232 上記のページの方法は使えないですか？ htmlのh4にあらかじめクラスをつけておいて（<h4 class="trigger">とか）、それに対してクリックイベントをつける。 上記ページの方法で、 $('iframe').contents().find('h4.trigger')で、以下を.removeClassとかに変えて、クリックイベントをつけたh4からクラスをとってしまう。 同じ方法でdisplay:noneにしたところを.findで取得して、.show()で表示させる。 これでアコーディオンは解除されるのではないでしょうか。 試してないのでなんともいえませんが。 あと、わざわざiframeを使うよりは.load()でhtmlだけ呼び出したほうがきれいに作れそうな気がしますが。 cssは新たに必要かもですが。 http://semooh.jp/jquery/api/ajax/load/+url,+data …
ANo.2です。 たまたま手元にあるＩＥが8なのですが… 例えば、 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <style type="text/css"> iframe.test { width:90%; height:90%; } </style> </head> <body> <div>Header</div> <iframe src="hogehoge.html"></iframe> <div>Footer</div> </body> </html> を読み込むと、iframeの高さはご質問文のようにデフォルトの300程度のものとなります。 CSSを html, body { height:100%; } iframe.test { width:90%; height:90%; } とすれば、ウィンドウの90%の高さとなります。 ANo2はまったくの推測で書いていますので、ご質問文からは読み取れない別のところに原因がある可能性も十分にあります。 ・・・と書いて、お礼のところをよく見たら、 『div.inlinef iframe』となっているようですが、ANo2にも書きましたようにサイズの相対指定の基準となるのは親要素のサイズです。 それなので、親要素のDIV（さらにその親があればそちら）を90%になるようにしておいて、IFRAMEは100%として指定する必要があるのでは？
細かいことを挙げればいろんな違いがありますが、ぶっちゃけ気分の問題です。 もっとちゃんと言えば、機能の違いではなく、意味の違いで使い分けられているのです。 つまり、(2)は変数に代入するということを強調しているのです。 例えばこういう例が考えられます。 function hoge() { 　var x = 1 　var y = function () { ...... } 　return {x: x, y: y} } これであればxとyが同列に見えた方が気持ちいいから代入の書き方を選んでいるのです。 それと、(2)は別に何も小難しくありません。 ただ関数を変数に代入しているだけで、どちらかと言うと独特の記法である(1)の方が特殊です。 JavaScriptでは関数はただの「呼ぶことのできる」オブジェクトであり、他の値と変わらない一級市民なのです。 むしろ、(1)のような書き方をする時こそ、特殊であり、関数を特別視し、宣言して「設置する」という強い意味が含まれてるとも言えます。
>どんな意味合いかと言うことはあまり気にしないほうが良いと言うことでしょうか？ そういうわけではなくて、jqueryのメソッド自体がそもそも、イベントで関数を呼び出すメソッド、パラメータを取得するだけのメソッドなどと、傾向が複数あります。 なので、それごとに記述ルールも違うということです。 最初の回答にも書きましたが、css()は「括弧内のパラメータを適用する」というメソッドなので、括弧内は直接cssの内容を書いているので、関数を呼び出すことはないですよね？ (状況として、関数を代入してその解をパラメータとして適用するということはありますが、今はそれ以前のお話なので厳密なことは省きます。) 以下のサイトの左のメニューバーを見てください。 http://semooh.jp/jquery/api/events/ メソッドをカテゴリ分けしています。 すべて同じ記述というわけではないですが、カテゴリ内のメソッドは比較的記述ルールが似ている傾向にあります。 質問者様があげていた例はイベント系メソッドといって、 マウスホバーで括弧内の関数のとおりにイベント実行するというものなので、function()が入っています。 >であれば.stop().animateが発動したら... その後が良く分かりません。 .animate()はエフェクト系メソッドなので、括弧内のパラメータどおりに影響を与えるもので、発動したらどうするという動きではないですよね？ >毎回リファレンスで、今回の関数は、ファンクションがつくと確認して、 なので、メソッドがイベント系なのかトラバース系なのかエフェクト系なのか・・・ という風にメソッドの概念がある程度わかっていてルールの傾向を覚えており、また慣れてくれば、毎回リファレンスを見なくてもだいたいわかりますが。。。 でも上記サイトを見ればわかるとおり、jqueryのメソッドはかなり数がありますので、誰だって、初めて使うメソッドがあれば記述ルールはある程度は確認してから使っていると思います。 HTMLやCSSもそうだと思いますが、とにかく実践で使って使って覚えていきますよね？ それと同じです。 記述ルールにメソッドの系統ごとに傾向があるので、まずはそれを確認してみては？と最初にお答えしましたがそういうことです。 失礼を承知で言うと(ごめんなさい)、質問者様はまだjqueryをつかうには大事な基本概念がまったくつかめていないと思います。 $(this).stop().animate(）←これもanimate()が癖のあるメソッドなのでその前にstop()をつけているというちょっと初心者が理解するには早いかなという内容です。 まずは例のようにメソッドをつなげたりしているものではなくて、 メソッドがひとつだけのものを実際に書いてみて記述ルールを覚えましょう。 動きがつかなくて勉強がつまらないかもしれませんが、基本が理解できないといつまでもその先は理解できません。 (※以下系統名称は参考書などによって異なることもあります) css系　css() 属性系　attr() エフェクト系　hide() show() トラバース系　prev() まずはこのあたりをしっかり理解してルールを覚えてから(メソッドは一例です）、 function()が入ってくるイベント系を勉強してみてください。 イベント系　click() 最後にfunction()入ってくる一例挙げますね。 【例】 クリックという動作をしたら、「文字の色を赤にする」という関数を呼び出す。 　　　　　　↓　　　　　　　　↓ $("#foo").click(function(){$(this).css("color", "red")}); 勉強がんばってください。
(1) > 下記で、property1はどこに存在しているのでしょうか？ > ・Hoge？ それとも、Hoge.prototype？ method1 を呼び出す時の呼び出し方によって this が変わります。具体的には■■.method1() と呼び出した時、this は ■■ となります。通常は var hogeInstance = new Hoge; hogeInstance.method1(); // …(i) などと呼び出しますので、this は hogeInstance になります。つまり、this.property1 は hogeInstance.property1 という事です。所で、もし仮に Hoge.prototype.method1(); // …(ii) 普通はしない とすると this は Hoge.prototype になりますので、this.property1 は Hoge.prototype.property1 を意味する事になります。普通はこの様な使い方はしませんが。また、 Hoge.method1(); // …(iii) Error の様な呼び出し方はできません。従って、普通の使い方 (i) をしている限りは、hogeInstance.property1 などを意味すると考えて下さい。 因みに、以下の3つは全て異なる物ですので区別して下さい。 ・Hoge ・Hoge.prototype ・hogeInstance などの様な Hoge のインスタンス (つまり、new Hoge で作成したオブジェクト) (2) > ・宣言していなければ自動的に作成される？ それともHogeまで遡る？ hogeInstance.property1 が定義されていない時、 ・値を読み出す時は Hoge.prototype.property1 が代わりに読み出されます。(Hoge.prototype.property1 も定義されていなければ undefined) ・値を代入する時は hogeInstance.property1 が新しく自動的に定義され、そこに値が設定されます。 (3) > ・そもそも、this.property1はどういう意味でしょうか？　これで宣言？ 「this に入っているオブジェクトの property1 という名のプロパティ」という意味です。宣言ではありません。 ※オブジェクトのメンバは明示的に宣言する事はありません。強いて言うならば代入の際に自動的に定義されます。従って、this.property1 = ～; と書いた時点で、未だ property1 メンバが this に定義されていなければ自動的に定義されるという事です。そういう意味で言えば "宣言+代入 と似たような効果" を持っているとも言えるかも知れません。"宣言" とは呼びませんが。
こんにちは。 ＞ただ、btn_upについてはどのように記述すれば良いかがわからず ほとんど、btn_downの処理と同じではないでしょうか。（方向が逆になるだけ） 簡単に整理すれば 　1）リストの最後から移動コマ分の複製をリストの前に追加 　2）リストの表示位置を調整（追加する前と同じになるように） 　3）リストの表示を移動（アニメーション） 　4）（コールバックで）リストの最後から移動分のリストを削除 みたいな感じ。 ＞var clone = target.find('li').slice(0,moveLength).clone(true); ＞このtarget.find('li')を変数に格納しているtargetListにすると ＞動作しなくなってしまいます。 最初にtargetListを定義したときは初期状態の要素構成で定義されています。 その後、アニメーションをするとクローン（初期の要素とは別要素）が追加され、もとからあった要素は削除され、順序も変わってしまいます。 それなので、後からtargetListを参照しても該当する要素がすでになかったり、その時の表示状態とは順序が変わっていたりするのでうまくいかないのではないでしょうか。 カルーセルの方法として、ご提示のように個々のリストをコピーしながら順次入れ替えてゆく方法と、初期設定で表示コマ分だけリストに追加しておいて、後はUL要素全体を移動することで表示位置を変えるだけ（LI要素は入れ替えない）という方法が考えられます。 後者の方法であれば要素が入れ替わることがないので、仮にtargetListを参照しても実際の構成と同じものが得られるはずです。 検索すると、先人たちのサンプルがいろいろ見つかると思いますので、考え方の参考にすると良いのではないでしょうか？ また、上記の両方の方法で作成してみるというのも勉強に役立つかもしれません。
emを使えば？？ 親になる要素でfont-sizeを10pxと指定しておいて、あらためてfont-size:1.6emとすれば一つですむ。
ANo1です。 ごく一般的なタブ機能のようですから、検索すればサンプルはいくらでも見つかるはずと思います。（考え方や方法はいろいろあると思いますが） また、jQueryをご利用のようですが、jQuery UIにも標準的なタブ機能が備えられています。 　http://jqueryui.com/tabs/ とはいえ、簡単なサンプルを一例として… <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .tab_set *{ margin:0; padding:0; list-style-type:none; } .tab_set{ width:600px; margin-bottom:30px; } .tab_menu li{ width:86px; display:inline-block; padding:4px; margin-right:4px; text-align:center; color:#888; background-color:#E8E8E8; border:1px solid #AAA; } .tab_menu li.active{ color:#000; background-color:#FFF; border-bottom:1px solid #FFF; } .tab_box{ position:relative; top:-1px; z-index:-1; } .tab_box>div{ height:300px; padding:10px; border:1px solid #AAA; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ var active = "active"; $(".tab_set").each(function(){ $(".tab_menu li", this).click(function(){ var tabs = $(this).parent(".tab_menu").children(); tabs.removeClass(active); $(this).addClass(active); var contents = $(this).parents(".tab_set").find(".tab_box").children("div"); contents.hide().eq(tabs.index(this)).show(); }).eq(0).click(); }); }); </script> </head> <body> <div class="tab_set"> <ul class="tab_menu"> <li>タブ1</li><li>タブ2</li><li>タブ3</li> </ul> <div class="tab_box"> <div>タブボックス1</div> <div>タブボックス2</div> <div>タブボックス3</div> </div> </div> <div class="tab_set"> <ul class="tab_menu"> <li>タブ1</li><li>タブ2</li><li>タブ3</li><li>タブ4</li><li>タブ5</li> </ul> <div class="tab_box"> <div>タブボックス1</div> <div>タブボックス2</div> <div>タブボックス3</div> <div>タブボックス4</div> <div>タブボックス5</div> </div> </div> <div class="tab_set"> <ul class="tab_menu"> <li>タブ1</li><li>タブ2</li><li>タブ3</li> </ul> <div class="tab_box"> <div>タブボックス1</div> <div>タブボックス2</div> <div>タブボックス3</div> </div> </div> </body> </html>
１ページ内にタブボックスをたくさん設置 - JavaScript - 教えて！goo( http://oshiete.goo.ne.jp/qa/8743314.html ) との関連だと思いますが、できません。 ・HTML内に同じIDは複数置けません。 　class名にしても、異なる動作をさせることはできません。 　　一番目のボックスと二番目のボックスは異なる動作になります。表示位置などが違う 　そのjavascriptで動作させるページ。画面を上にスクロールさせてから、リンクを押したら元の位置に戻るでしょ!!!。なぜならリンク先のターゲットの位置がウィンドウ左上を原点にしているからです。 　ですから、二つの理由で、複数のタブボックスを一つのページには不可能なのです。 ★HTMLが文書構造だけを明瞭にマークアップされていれば、スタイルシートで行なうほうが簡単でしょう。それでもタブボックスとして機能するボックスは一箇所だけです。 　羅列されている異なるsectionについて、ひとつのビュー枠に表示させることになるでしょう。 　わからやすいようにHTML5風に書くと <section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> を、 <section> ┌<section> ┐ │　 <nav>　│次のsub sectionへのリンクも含む ├─────┤ │<section> │ └─────┘ 　　以下のsub sub sectionは見せない。 　
　１ページ内に　複数のタブボックスを設置するために・・・ 　あの～何が問題なのか判りかねますが、私なりに解釈して回答してみますが、一枚のウィンドウにタブを表示させたいのでしょうか？OSもわかりません。もし、WIN７でしたら Internet Explorer を起動してツール、インターネットオプションをクリックするとプロパティダイアログの中心にタブとあります。これをクリックして、内容をよくみて「常に新しいタブで開く」にチェックを入れると新しいウィンドウが開かない代わりに新しいタブが開きます。質問の主旨はこういったことでしょうか。 　仲々お詳しいようなので、HTMLタグは私にはさっぱりです。
こんにちは ＞ while文のなかで番号に連番を振るやり方がわかりません って、ご提示のスクリプトにはwhile文がはありませんけど・・・？ 普通に番号付けしたいのなら、こんな感じ？ var start = 1; var end = 10; var data = [], i = start; while(i<=end){ 　data.push("連番：" + (i++)); } alert(data.join("\n"));
jquery を使えるのであればもっとみじかくかけます。 一行です。 http://webhako.net/jquery/select-set-value/
$(document).ready(function(){ var 一定時間 = 5000, 指定時間 = 8000; $('.slideImg img:gt(0)').hide(); var f = function(){$('.slideImg :first-child').fadeOut(1000).next('img').fadeIn(1000).end().appendTo('.slideImg')}; setTimeout(function(){f(); setInterval(f, 一定時間)}, 指定時間); });
いくつかイケテない点を併せて修正 function on(text) { var ev = window.event; // TODO Mozilla 系へ対応。できれば addEventListener へ移行 var x = ev.pageX || ev.clientX + (document.documentElement || document.body).scrollLeft; var y = ev.pageY || ev.clientY + (document.documentElement || document.body).scrollTop; var frame = document.getElementById('frame'), banner = document.getElementById('banner'); banner.innerHTML = text; frame.style.left = (x + 10) + 'px'; frame.style.top = (y - 10) + 'px'; frame.style.display = 'block'; } 要素の位置がよろしくない <head><div id=frame> ... <body> ... 一般的には <head> ... <body><div id=frame> ...
　CSS3のtransformを使うととっても簡単ですよ。ホーバーではなくクリックでしたら:target擬似クラスを使いましょう。javascriptじゃないのでjavascriptを禁止しているユーザーにも仕えます。(ただし古いブラウザには無効ですが、それこそJSで対処する。)
LINQ.jsを紹介した元凶です（笑 var selected_array = ＿Enumerable.From(array) ＿＿.Where(function (item) { ＿＿＿return Enumerable.From(item.title).Contains('あ'); ＿＿}) ＿.ToArray(); titleの文字列値から特定の要素を抽出する部分は、文字列をEnumerableに分解して、Contain()メソッドを使うのがLINQ的かと。
■A.html------------------------------ <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>A.html</title> <script> /** * バリデーション */ function _check(){ var name = document.getElementById("name").value; if(name.length < 6){ alert("名前は6字以上でお願いしますだ。") return false; } return true; } /** * 送信 */ function _submit(){ var name = document.getElementById("name").value; // セッションストレージに一時保存 sessionStorage.setItem("formdata",name); alert("送信データ:" + name); return true; } </script> </head> <body> <div> <form action="B.html" method="post" onsubmit="return _submit();"> 名前：<input type="text" id="name" name="name" value=""><br> <input type="submit" value="送信" onclick="return _check();"><br> </form> </div> </body> </html> ■B.html--------------------------------- <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>B.html</title> <script> function _load(){ var name = sessionStorage.getItem("formdata"); alert("受信データ:" + name ); //受け取ったら消す sessionStorage.removeItem("formdata"); } </script> </head> <body onload="_load()"> <div> B.html </div> </body> </html>
よくわかってませんが・・・ ドキュメントレベルでのイベント処理なので、バブリングをキャンセルしても処理されてしまっているのかな？ 確認はしていませんが、キャンセルできない場合の対処法のアイデアとして、ctr+＋が入力されたらctr+－のキーイベントを発火させるといった要領で打消すことができるのではないかと想像します。 ただし、ご提示のようにkeydown、keyupの両方を取得して発火させると、キー入力に対して打消すイベントを起こしすぎになると思いますのでご注意を。
まず、ご質問の内容についてですが・・・、 実際のコードを示せば、すぐに的確な回答がついたかもしれません。 本題に戻ります。たぶんどこかで構文ミスをしているのでしょう。 私もよくやってしまうのですが、NaN や undefined が出ます。 内容が複雑ではないので、私なりに作成してみました。 入力フォームということで、テキストボックスで良いでしょうか。 <html><head> <script type='text/javascript'> function keisan(){ var price1 = (document.form1.tanka1.value) * (document.form1.suryo1.value); document.form1.kingaku1.value = price1 ; var price2 = (document.form1.tanka2.value) * (document.form1.suryo2.value); document.form1.kingaku2.value = price2 ; var price3 = (document.form1.tanka3.value) * (document.form1.suryo3.value); document.form1.kingaku3.value = price3 ; document.form1.total.value = price1 + price2 +price3; } </script></head> <body> <form name='form1'> <table border='1'> <tr><td align='center'>商品</td> <td align='center'>単価</td> <td align='center'>数量</td> <td align='center'>金額</td></tr> <tr><td>商品1</td> <td><input type='text' name='tanka1' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo1' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku1' style='width:100px' />円</td></tr> <tr><td>商品2</td> <td><input type='text' name='tanka2' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo2' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku2' style='width:100px' />円</td></tr> <tr><td>商品3</td> <td><input type='text' name='tanka3' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo3' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku3' style='width:100px' />円</td></tr> <tr><td align='right' colspan=3>合計</td> <td><input type='text' name='total' style='width:100px' />円</td></tr> </table> </form> </body></html>
新しい機種、古い機種に関係なく、ただ表示するだけよりも何らかの処理を加えて表示する方が重くはなります。 しかし、サーバーで並べ直したHTMLを再読み込みする通信時間に比べれば、再表示までの時間は速いです。
配列の配列です。 配列の中の各要素が配列という構造になっています。 二次元配列、または多次元配列と言います。 配列の中に配列があるというのは 電車の車両と座席をイメージすれば解りやすいかと。
確かに現象は再現しますね。 よくわかりませんがalertを出すせいでmouseleaveが2回発火しているように思えます。 alertでなくてconsole.logだと1回しか発火してません。 正しいかわかりませんが下記のようにすれば１回だけ発火します。 setTimeout(function(){ alert('○○○'); },0); ただし、コードの実行順序が変わってくるので要注意です。 http://d.hatena.ne.jp/yinkyweb/20110704/1309754803
下記の方法が思いつきました。 詳しい実装方法はググれば見つかります。 sessionStorageが簡単かと思いますが、注意としては古めのブラウザは非対応です。 方法1. URLパラメータに持つ 方法2. クッキーに持つ 方法3. sessionStorageに持つ
やりたい事はこういうことですかね。 http://getbootstrap.com/javascript/#collapse-exa …
126行目 _this.$elem.wrapInner('<div id="'+_this.config.page_id+'" />').find("#"+_this.config.page_id).before('<div id="build-menu" />'); ↓ _this.$elem.wrapInner('<div id="'+_this.config.page_id+'" />').find("#"+_this.config.page_id).after('<div id="build-menu" />'); before→afterに変えただけです。 検証はしていませんがどうでしょう？
IE8/9あたりが非対応の機能のようなのでどちらにしろ オープンに公開しているサイトの機能としてはつかいものにならないでしょう。 むしろ対応ブラウザを列挙しておけばあとはユーザー判断でいいのでは？ Macのsafariは問題なさそうなのでWinならsafari以外のブラウザで やってもらえば済むので・・・ 正直100もファイルおくるならむしろftpにするなり アーカイブしておくって受けた側で解凍するなりが妥当だとは思いますが
Ajaxがどうのこうのという話ではなく、そもそも単純にSQLがきちんと書けていないだけではないかと思いますけど。 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`=$pwd_e」 というコードだったら「$pwd_e」の値が「p3kchds243j5」の場合 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`=p3kchds243j5」 になりますよ。 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`='p3kchds243j5'」 にはなりませんよ。 以下のようなコードにするのがいいのではないかとPHPの公式マニュアルには書いてあります PHP: mysql_real_escape_string - Manual http://php.net/manual/ja/function.mysql-real-esc … $query = sprintf("SELECT * FROM users WHERE user='%s' AND password='%s'", mysql_real_escape_string($user), mysql_real_escape_string($password));
GETパラメータ展開なら以前作りました。 https://gist.github.com/think49/605899/ <script> 'use strict'; var uri = new URIParameter('http://example.com/?name=Hanako&age=20&day=20'), parameters = uri.parameters; if ('age' in parameters) { alert(parameters['age']); // 20 } </script> # Re: alcxpさん
＞if(document.form1.text_1.value.match(/[^0-9]+/)){ if(document.form1.elements["text_"+i].value.match(/[^0-9]+/)){ ちなみに「match(/[^0-9]+/)」で「文字である」という判断は微妙ですね たんに数字以外の文字が含まれているというだけです また含まれているだけのチェックなので、この場合は「+」はなくても大丈夫です
>トリガーを一定時間ごとに呼び出すとは、どのようにしたらよいのでしょうか？ スクリプトエディタの「リソース」メニューに、「現在のプロジェクトのトリガー」というのがあります。これを選び、新しいトリガーを追加して下さい。そこで実行する関数を選び、例えば「時間主導型」「分タイマー」「１分ごと」と設定すれば、指定した関数が１分毎に実行されるようになります。
>alertを常時全画面表示というのはできないのでしょうか？ alert()ではなくレイヤー表示（<div>などでダイアログっぽいデザインにして表示する）にしてるならrequestFullScreen()で全画面表示できます。 （全画面表示を終了させないと他のウインドウやアプリケーションにフォーカスを移す事が出来ません。使い方によっては極端なユーザビリティの低下を招きます。） >またはｎ秒後に自動でalertを閉じることって、できないでしょうか？ alert()では不可能です。 上述のようにレイヤー表示しているならタイマーを使って.style.display = 'none'するなどすれば消せます。 もしくは、<meta>を使わずに、 alertを閉じてからタイマーを起動させ、JavaScriptで再読み込みをするという処理順、処理方法にしてみるのはどうですか？
ANo2です。 ＞ご指摘通りhtmlファイルが複数出来ますが私のスキルの限界でhtml ＞のファイル名を決めるだけで中身に手を入れず、ファイル名と同じ ＞フォルダを用意し中に１～のpngファイルとdata.jsを放り込むだけ ＞でページ作成が可能になるように考えた結果であります サーバサイドのプログラムは使わないにしても、ANo2でも書きましたように、HTMLファイルを複数作成しなくても良いのではないでしょうか？ 　hogehoge.html?date=20140623 のようなアクセス方法が可能であれば、HTMLファイルは一つのものですむと思います。 ご質問でご提示の方法で「HTMLファイル名（URL）から参照データを作成する」部分を「URLのクエリ部から参照データを作成する」といったように変えればあとは同じで済むと思います。 後者はlocation.searchから取得することが可能ですし、データファイル名を作成した後はまったく同じ処理で済むと思います。 ＞理想は、data.jsに該当する物は一つで配列名を可変出来れば・・・ ＞もっとシンプルになるのですが このイメージがどのようなものなのかよくわかりませんが、dataファイルが一つということは全情報が1ファイルになっているということでしょうか？ 無理やりやるなら、 　window["fuga"] で、グローバル変数fugaにアクセスができるので、できないことはないと思いますが、document.writeと同様お勧めはできません。（グローバル変数に限っています） 変数名を変えたいような場合の解決法の一つとして、変数を配列にしておいてそのindexを変えることで対応可能かと思います。（変数名は固定、indexが可変） （ご提示の変数がすでに配列ですので、配列を配列化することになります） それによって、indexを渡せばそれに応じたデータを取得することが可能になります。 でも、1ファイルにある全てのデータを一旦読み込んでから、その（ごく）一部のみを利用するのでは、無駄な通信を増やすことになりませんか？ その意味からも、データは別ファイルにしてあるほうが宜しそうな気がしますが… ＞ちなみに、メニューのスクロール機能のためにajax？は利用していますが～～ であれば、その関数を利用することでデータファイルの形式もかなり自由にできますね。 実行順序の制御も、コールバックを利用することで確実になります。 まぁ、このあたりはデータをどのように作成しているかやそのデータを他に利用しているかといったことも関係してきますので、ご質問の文章だけでは判断はできませんが…
String の replace 関数は、 置換後の値として関数を受け付けますので、 高度な変換を行いたい場合に便利です。 var 置換関数 = function(s, g1, g2){ var url = 'file://' + g1 + (g2? g2.replace(/\\/g, '/'): ''); return '<a href="' + url + '">' + s + '</a>'; }; var 新しいHTML = str.replace(/\\\\([^\s\/\\]+)(\\[^\s\/\\]+)*/gi, 置換関数); 余談ながら UNC 形式のファイルリンクを表す正規表現は、 ホスト名とパス名でルールが異なるので、 分離して記述したほうが良いと思います。
#1です すみません、曲解していたようで単なるjavascriptの話でしたね nameで要素にアクセスするとロクなことがないので 手っ取り早く処理するならidを振ることです。 ざっくりこんな感じで <script> function go(){ var get = 1; for(var i=1;i<5;i++){ var answer=document.getElementById("a"+i.toString()); var start_time=document.getElementById("s"+i.toString()); answer.value=parseFloat(start_time.options[start_time.selectedIndex].value)-get; //answer.value=parseFloat(start_time.value)-get; //これでもいけるはず } } </script> <?php $day = 1; while ($day < 5){ ?> <form> <tr> <td><select name="<?php echo $day ?>[start_time]" id="s<?php echo $day ?>" onblur="go()"> <option value="1" >1</option> <option value="2" >2</option> <option value="3" >3</option> <option value="4" >4</option> </select> </td> <td><input type="text" name = "<?php echo $day ?>[Answer]" id="a<?php echo $day ?>" readonly value="" style=width:40px></td> </tr> </form> <?php $day++; } ?>
動くと思うんですがね・・・ nameCとnameDが逆になってるのかも？ 下記と比較してください。 function copyToC() { var nameC = document.getElementById("nameC"); var nameD = document.getElementById("nameD"); nameD.value = nameC.value; } function copyToD() { var nameC = document.getElementById("nameC"); var nameD = document.getElementById("nameD"); nameC.value = nameD.value; } ※余談 スクリプトをシンプルにしたいなら下記でもOK タグ <input name="name" id="nameA" onkeyup="copyTo('nameA','nameB')"> <input name="name" id="nameB" onkeyup="copyTo('nameB','nameA')"> <input name="name" id="nameC" onkeyup="copyTo('nameC','nameD')"> <input name="name" id="nameD" onkeyup="copyTo('nameD','nameC')"> スクリプト function copyTo(fromId, toId) { var fromTag = document.getElementById(fromId); var toTag = document.getElementById(toId); toTag.value = fromTag.value; }
修正したところだけ、書きますね。 <script type="text/javascript"> var prod_name=["リラックスチェア","リラックスデスク","ブックスタンド"]; var prod_price =[4000,12000,800]; </script> ↑まず、この部分は、中かっこ「{」ではなく、大かっこ「[」で囲います。 　また、文字列はダブルクォーテーション「"」で囲います。 <script type="text/javascript"> document.open(); document.write("<tr>"); document.write("<td>"+ prod_name[0]+"</td>"); document.write("<td>"+ prod_price[0]+"</td>"); document.write("</tr>"); document.close(); </script> ↑次にこの部分、documentを使う場合、open()、close()を書きましょう。 　あとは、ダブルクォーテーションにするだけです。 　ループして、配列の他を表示する等、いろいろ練習してください（＾＾）
初期表示させたい選択肢のみを、選択状態にする 例) 変更前: <option value="http://ascii.jp/biz/rss.xml">ビジネス</option> 変更後: <option value="http://ascii.jp/biz/rss.xml" selected>ビジネス</option> 画面読み込み時に、現在の選択肢でフィードを読み取る処理を追加 <script> function initialize() { var sel = document.querySelector('select[name="url"]'); // var sel = document.getElementsByName('url')[0]; // 古い環境の場合 if (sel) loadFeed(sel); } google.setOnLoadCallback(initialize); </script>
既にNo.1さんが回答されていますが、clickが有効にならない件について、横から失礼します。 有効にならない理由はNo.2さんが述べられていますので、その解決策として違うアプローチを書いてみます。 単純に言うと、inputをclickしないとelementに要素が入らないわけなので、element.clickの宣言がinputのclick後であれば問題はないわけです。 従って、以下のように関数を使わずにinput click内に直接clickイベントを書くか、 $("input").on("click",function(){ 　element = $(this); 　element.on("click,function(){ 　　alert(element.val()); 　}); }); clickイベントを外部関数に持ち出したいのであれば、elementを引数にして渡せばよいです。 $("input").on("click",function(){ 　element = $(this); 　clickEv(element); }); function clickEv(element){ 　element.on("click",function(){ 　　alert(element.val()); 　}); } ただ、例の場合、elementの対象がinput、つまり、初回にクリックする要素と同じなので、本当に例の通りの実装ならば無意味な記述ですね。
(1) a = sin(x) (2) c = a + b (3) print c というような、処理があったとすると、三角関数の計算をするのはどのタイミングだと思いますか？ もし、(1)のタイミングだと思うのなら、あなたの質問もそれと同じ事です。 もし、(1)と思わないのなら、説明するのは私の手に負えません。
#2 です。補足を読みました。 > 前の補足にも書いたのですが、第1引数がなぜ０なのかわかりません。 index なのだから配列と同じように 0 から始まるものだと思いますが、「どういう理由で何が入るはず」とお考えなのでしょうか？ # Re: tezzo047さん
結局、parents, children(find), siblingsなどを使って目的のタグを指定すれば良いのです。 以下、未検証ですがこんな感じかと。 $(this).toggleClass('active'); $(this).parents('ul').find('dt').not($(this)).removeClass('active');
勝手ながら少し手を入れて実現 jQuery 1.7 以上です <script>$(function(){ // 現状を読み取って、下のラジオボタンを操作する function switchEnable(){ var cond = ($('input[name="sample1"]:checked').val() == 'R'); $('input[name="sample2"]').prop('disabled', !cond); } // ページ読み込み後に一回だけ実行 switchEnable(); // 特定の要素が変更される毎に実行 $('input[name="sample1"]').on('change', switchEnable); })</script> <p> <label><input name=sample1 type=radio value=L checked>左ラジオボタン</label> <label><input name=sample1 type=radio value=R>右ラジオボタン</label> <p> <label><input name=sample2 type=radio value=1>1</label> <label><input name=sample2 type=radio value=2>2</label> <label><input name=sample2 type=radio value=3>3</label> <label><input name=sample2 type=radio value=4>4</label>
http://oshiete.goo.ne.jp/qa/8700647.html オーソドックスな方法がNo.3で詳しく書かれていますのでご参考にどうぞ。 >var times = [2, 10, 8, ・・・] この部分をMySQLから取り出した値にすればいいです。
「IE9 で保護モード有効時、target="_blank"で指定されたリンクが別ウインドウで開く仕様である」という情報を見つけましたが、参考になるでしょうか。 http://answers.microsoft.com/ja-jp/ie/forum/ie9- … 保護モードを無効にする、もしくは target="_blank" を諦める、が現実解のようですね。 ユーザにウインドウを開く手段を選択させるという意味で target="_blank" を避ける考え方もあるので一考してみると良いかもしれません。 HTML5 では非推奨ではなくなりましたが、問題点は依然として残っています。 http://standards.mitsue.co.jp/archives/001277.html # Re: poppo002544さん
ifの条件がわかりにくいので、外に出してフラグ用の変数や判定用の関数を定義したほうが見やすいです。 同じ物も繰り返しが多いのでなるべくひとかたまりにしたいですね。 あんまりいいとは思えないけど、実装例です。 contentとnavを対応付けるようにマークアップして、関数で紐付けるというようなイメージです。 if(inView($obj)){ var nav_selector = getNavSelector($obj); changeNavStatus(nav_selector); } こういうのは一般にScrollSpyというようですね。 自分の場合は、こういうのは自前で実装しないでライブラリを使っちゃいますねー。 http://iaarchiver.net/post/2012-03-14-1550 https://github.com/uikit/uikit/blob/master/src/j …
ANo3です ＞「:」とはどんな意味があるのでしょうか セレクタの記述方法は基本的にCSSの記法に準ずるようになっています。 「:」は要素を修飾するセレクタの記法で、a:linkや a:hoverと同様です。 ただし、ご使用の「:input」はCSSにはありません。 jQueryによる拡張で、form内の子要素全体を表すものとされています。 （Selects all input, textarea, select and button elements.） ANo3で紹介したサイトはjQueryのドキュメンテーションサイトですので、大概のことはそこで調べることができます。（というか、そこに無い情報は他にも無いといって良いでしょう） 　http://api.jquery.com/category/selectors/ 　http://api.jquery.com/input-selector/
IE9 以上なら <script> addEventListener('DOMContentLoaded', function(){ var checkAgree = function(ev) { var agreed = document.forms['chbox'].elements['cBox'].checked; if (!agreed) { ev.preventDefault(); alert('同意して'); } } var Q = function(s){return Array.prototype.slice.apply(document.querySelectorAll(s))}; Q('a.agreed').forEach(function(a){a.addEventListener('click', checkAgree, false)}); Q('form.agreed').forEach(function(f){f.addEventListener('submit', checkAgree, false)}); }, false); </script> <form name="chbox"> <label><input type=checkbox name="cBox"> 上記、「システム利用規約」に同意します。</label> </form> <a href="page1.html" class=agreed>リンクで遷移する場合</a> <a href="page2.html" class=agreed>複数でも大丈夫</a> <form method=GET action="page3.html" class=agreed> <button type=submit>サブミットで遷移する場合</button> </form> <form method=GET action="page4.html" class=agreed> <button type=submit>複数でも大丈夫</button> </form>
#1 です。お礼をよみました。 > 画面が一度消え再表示される、いわゆるページリロードのようになってしまいます。 form送信が発行され、画面が再描画されている為と思われます。 onclick でも同様の問題は発生するはずですが、form要素がなかったのでしょうか。 デフォルトアクション(form送信)を無効化する為、event.preventDefault() を追加してください。 https://developer.mozilla.org/ja/docs/Web/API/ev … # Re: whitebeltさん
ご提示になっている内容は、表示を切り替えなくとも、ComputedObservable で制御できる内容です。 また、（薦めませんが）ご提示のようにあらかじめ表示要素を用意しておき、その可視性を切り替えるのであれば、visible バインディングや、css バインディングが使えますので、さほど苦労なく実装することができるかと思います。 > 普通のjavascriptのようにdisplayでの切り替え というのは、javascript で CSS の diplay 属性値を none などに直書きする、といった意味に受け取れますが、コードの改良や再利用性を考えると、 knockoutjs を使う以前に、かなり力攻めの泥臭い方法論だと思います。 そういう発想そのものが knockout 的な「ビューモデルによる UI 反映自動化」という理念にそぐわない、と思うのですが。
別にjavascript使わなくても・・ 普通にHTML書いて、スタイルシート記述するのが簡単。 ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) 　にて、ブラウザの表示メニューから、スタイルシートを選択してみる。 ・画像下 ・テスト 　がそれに当たる。 　javascript使わないので、javascriptが無効なブラウザでも動作するし・・・ 　要はHTMLさえちゃんと書いてあれば、どうにでもなる。
#3 です。 > 「javaを使わない」という条件だと、XMLのリクエストのみで実現は可能でしょうか。 DB上にあるデータを全てXML化して置いておけば出来なくはありません。 ただ、その場合は静的データ(XML)で管理することになるので、DBを使用する意味がなくなると思うのですが…。 DBを利用するならサーバサイドスクリプトの存在は必須です。 1. DBの内容をサーバ意サイドスクリプトで出力 2. 出力データを JavaScript で受け取り、カレンダーに描画する このような処理が必要になります。 出力データのフォーマットは JSON, XML 何でも良いですが、JavaScript で認識しやすいデータが望ましいですね。 DBデータがあらかじめキャッシュして置ける内容なら初めからJavaScriptに全データをObjectとして渡しておくのが理想だと思います。 月が変化する毎にリクエストを発行する必要がなくなりますので、コードを単純化できます。 その場合は、カレンダーを出力するHTMLをサーバサイドスクリプトで書いて、JSONを出力しておくのが楽な実装ですね。 # Re: mifu223さん
ざっと見ただけなので、全体をちゃんと把握してませんが… ＞html += "<li>"+link+"<input id='del_btn' type='button' value='削除'>"+"</li>"; だと id="del_btn" の要素が複数生成されてしまいますが、HTML文法違反になります。 class設定などを利用するか、個別にイベントを設定するかなどにしてください。 その結果、 ＞$("del_btn").onclick = del_btn_clickHandler; のイベント設定も不適切になっています。 （save_btnのほうは一つでしょうから、このままでＯＫです） 削除の処理に関しては、クリックされた要素の親要素（LI要素）を削除するという内容にしておけば宜しいかと思います。 個別にイベントを設定する場合、onclickなどだとイベントハンドラにイベントオブジェクトが渡されないブラウザがありますので、 　onclick="del_btn_clickHandler(this)" 　onclick="del_btn_clickHandler(event)" などとしてハンドラ側で引数として取得できるようにしておくのがよさそうです。 addEventListnerなどを用いて設定すれば、第一引数にイベントオブジェクトが渡されます。 function del_btn_clickHandler(elm){ //elmにクリック時の要素が渡されると仮定すると 　while(elm && elm.nodeName != "LI") elm = elm.parentNode; 　if(elm) elm.parentNode.removeChild(elm); } のような要領で、ご希望の動作になると思います。
クロスドメインで作業しようとしています？ jquery.xdomainajax.jsあたり使ってみてはどうでしょうか？
新規ドキュメントで調べてみたところ、スウォッチ９個（「なし」含めると１０個）に対して、colors.lengthは14。 つまりスウォッチになってないColorオブジェクトが５つほどあるみたい。 そういうColorオブジェクトを取得して、duplicate()してから各プロパティを変更するってのはどうでしょう。
前に確か回答したと思いますが……。 ２つのセルに日付のフォーマットが設定されているのでしたら、それをもとにDateオブジェクトを作成し、そこからgetTimeでミリ秒換算した値を取り出して引き算すればいいです。得られた結果を１日のミリ秒数で割れば日数が得られます。 function testfunc(e) { var sheet = SpreadsheetApp.getActiveSheet(); // とりあえずアクティブシートを指定 var r1 = sheet.getRange(1, 1); // １つ目のセル var r2 = sheet.getRange(2, 1); // ２つ目のセル var d1 = new Date(r1.getValue()); // Dateを作成 var d2 = new Date(r2.getValue()); // Dateを作成 var dt = Math.abs(d1.getTime() - d2.getTime()); // ミリ秒数値を引き算 var d = dt / (1000 * 60 * 60 * 24); // １日のミリ秒数で割り算 Logger.log(d + "日 "); // ログに出力 }
> data: {'key': key}, > call($(this).next(), $(this).val()); この2つだけ直し漏れですね。 data: {'key': parent_id}, call($(this).val(), $(this).next()); としてください。 恐らくそれで動くのでは。
スタイルの指定で単位をきちんと付けてますか？
webkit～とかいうベンダープレフィックスは、昔成熟してない機能を提供する時に仮に付けられていたものです。 近年新しく付けられることはなくなりましたし、今までついていたものもほとんど外れたAPIがリリースされています。 なのでこれからの認識としては、そういったAPIは使わない、そういったAPIを使った解説は古いものと考えたほうがいいです。
>どの様な、スクリプトを記述すれば、 >実現するでしょうか？ 質問文にあったスクリプトと基本的には大差ないと思いますよ。 var ss_copyFr = SpreadsheetApp.openById( コピー元のID　); var ss_copyTo = SpreadsheetApp.openById( コピー先のID　); var sheet_copyFr = ss_copyFr.getSheetByName(　シート名　); var sheet_copyTo = ss_copyTo.getSheetByName(　シート名　); var d = sheet_copyFr.getRange(　範囲指定　).getValues(); sheet_copyTo.getRange(　範囲指定　).setValues(d); こんな感じでできるはずです。
セレクタがクラス指定だけなので、全部に反映されてしまうのはご推察の通りでしょう。 APIなどから処理中の要素が取得できれば簡単なのですが、このプラグインはその様には作成されていないのかも。 （thisは自分を返すみたいだし、ドキュメント情報が見つからなかったので不明ですが） とりあえずの方法として、個別に設定することにすればなんとかなるのではないでしょうか。 ANo1様と同様の発想ですが、jQuery利用なので繰り返し記述する必要はないでしょう。 （classは現状のままで、id等は不要です） （全角空白は半角に） $(document).ready(function(){ 　$('.gallery').each(function(){ 　　var obj = $(this); 　　obj.touchSlider({ 　　　mode: 'index', 　　　center: true, 　　　prevLink: 'a.prev', 　　　nextLink: 'a.next', 　　　single: true, 　　　onChange: function(prev, curr) { 　　　　$('.counter', obj).html((curr+1)+'/'+ obj.get(0).getCount()); 　　　} 　　}); 　}); }); ※ start時にはchangeのイベント処理も呼ばれているようなので省略。 ※ ご提示のサンプルで要素idが重複しているのは文法違反ですのでご注意。
ANo3です。 書き忘れました。 (^_^;) ANo3は、右上を基準にスタンプを押す場合を想定しています。 getPageBox()でそのページのサイズを取得していますので、スタンプの位置が左上、右下などの場合は計算を修正すれば同様の方法で可能かと思います。
原理的な考え方のみですが・・・ 切り替えの時間をHTMLの要素やスクリプトの配列などで持っておいて、スライドの切替をsetTimeoutで行うようにし、次の切替までの時間を個別に指定するようにすればよいのではないでしょうか？ 例えば、 　切り替え処理を　function change(){ ;} と仮定して、 　表示画像のインデックスを　var index 　表示時間の配列を　var times = [2, 10, 8, ・・・] などとすれば、 　setTimeout(change, 1000 * times[index++]) のような処理で、changeの中でループする仕組みにしておけば実現できそうに思います。 （実際にはindexがmaxになったら終了するとか、0に戻すとかが必要ですが）
> resetCategoryとrequestCategoryにはどういった構文の意味があるのでしょうか？ 関数の名前です。 どういう処理を行う命令なのかを明記すべきでしょう。 > あと、なぜresetCategory、requestCategoryのCは大文字なのでしょうか？ キャメルケースと呼ばれる命名記法です。 言語によって利用する記法セオリーが異なりますが、JavaScriptはキャメルケースです。 http://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3% … 確認してたときのコードが混じってました。 console.log(val); は不要です。
No.4 の補足に対して querySelectorAll('body *') <p id=kara> の内部を全部対象とするなら → querySelectorAll('p#kara, p#kara *') <p id=kara> の内部に<a>とか<span>とか<script>があって、 そちらは対象外にしたいなら → querySelectorAll('p#kara')
>・処理の結果をreturnすると思っていたのですが、returnメインでそこに処理を記述していくやり方のメリットは？ これは、勘違いをしています。return { a:function(){……} } というのは、結果をreturnしているのです。このa:function……というのは、処理ではなく「関数オブジェクト」です。 この{……}という書き方は、JSON形式によるオブジェクトリテラルです。つまり、オブジェクトを値として記述したものです。長くて内部に関数処理などが書かれていますが、それらもすべて「値」なのです。オブジェクトを結果としてreturnする際には、こうした書き方になってしまう、ということです。 >・hoge.aでアクセスしているのですが、関数定義＝オブジェクト定義でしょうか？ この場合のaは、hogeオブジェクトのメソッドですね。aの関数定義そのものもオブジェクトです。JavaScriptでは、関数はFunctionオブジェクトというオブジェクトですから、関数を値として設定したものはすべてオブジェクトです。 >・下記aメソッドは、同じ意味？ hoge = { 　a: function(){ これは、hogeオブジェクト内にaというプロパティを用意し、それに関数オブジェクトを設定しています。つまり、aというメソッドをオブジェクト内に用意しています。 hoge = function(){ 　//中略 　　return { 　　　a : function(){ 　　}, これは、aというメソッドを持つオブジェクトをreturnする関数オブジェクトをhogeに代入しています。 最終的にhoge.a()と使う場面においては同じですが、後者の場合、hoge()とすることでaメソッドを持つオブジェクトを返すことができます。前者は関数オブジェクトではなく一般的なオブジェクトがhogeに設定されていますからhoge()することはできません。 おそらく、{……}という記述がオブジェクトの記述であるということ、関数は基本的にオブジェクトであるということをしっかり理解すれば、これらの記述もわかってくると思います。
成功したときに出力するphpでscriptを記入して openerに対して処理すればいけるはずですが・・・・ たとえば //main.htm <script> function pop() { wobj = window.open("sub.htm", "pop","scrollbars=yes,width=480,height=360"); wobj.focus(); return true; } </script> <input type="button" onclick="pop()" value="open"> <textarea id="hoge"></textarea> として、 //sub.htm <script> window.opener.document.getElementById("hoge").value +="test\n"; </script> とし、mainのボタンをおす度またsubをF5で更新するたびに mainのテキストエリアに追記されますよね？ （そういうことじゃない？） ただしポップはなにかと制限があるのと、死ぬほど嫌う人がいるので 自分や仲間内だけしか使わないサイトなど以外で運用するのはやめた方がいいでしょう
// JS1.6 or ES5 or IE9 function uniq(a) { var compare = function(x,y){ for (var i in x) if (x[i] !== y[i]) return false; return true }; var makeCondition = function(o){return function(x){return compare(x,o) && compare(o,x)}}; var callback = function(p,c){if (!p.some(makeCondition(c))) p.push(c); return p}; return a.reduce(callback, []); } 重複がまとめられた配列A = uniq(配列A);
option.parentNode optgroupは考慮していません。
＞Date関数で取得したデータをdate変数に入れたいのですが 言葉通りで良いのなら… 　date = myMess1; で十分。（フォームから再取得してはいませんが、同じ値なので） ユーザがformに入力した値を取りたければ、入力後の処理で取得するようにするしてください。
slick.js(slick.min.js)、slick.cssと同じディレクトリに、fonntsフォルダーおよび その中身（slick.ttfなど）が正しくアップロードされていますか？ これが正しく（正しい位置で）ないと、→マークが表示されません。
>hh:mm形式にするには 得られるのは秒数換算された値です。値を１時間の秒数（60 * 60）で割れば時数が得られます。そのあまりを１分の秒数（60）で割れば分数が得られます。
質問文を素直に実行するのなら。 $("span:not([class])").each( function(i){ var childNodes = this.childNodes; $(this).replaceWith(childNodes); }); 検証データ 動作前 <div> <p> <span class="a">あいうえお</span> <span>かきくけこ</span> <span class="b">さし<span>す</span>せそ</span> <span>たち<span>つ</span>てと</span> なに<span>ぬ</span>ねの </p> </div> 動作後 <div> <p> <span class="a">あいうえお</span> かきくけこ <span class="b">さしすせそ</span> たちつてと なにぬねの </p> </div> 改行コードは半角スペースとして表示されます。（HTMLの文法に準拠。） .children()にtextNodeが入っておらず、意外と苦労しました。
なんかつっこみどころがかなりあるのですが とりあえずsize.htmlのbody(?)関数をこんな風にしてはどうでしょう？ function body(n) { opt=window.opener.document.myForm.selection01[parseInt(n)-1].checked=true; window.close(); }
いまいちモダンじゃないブラウザを相手にしなければならない特別な事情がおありなら <script>(function(){ ; var proc = window.onload; ; window.onload = function(){ ; ; var prefix = 'http-xxxxx/'; ; ; var hoge = document.getElementById('hoge'); ; ; if (hoge) { ; ; ; var imgs = hoge.getElementsByTagName('img'); ; ; ; for (var i = 0; i < imgs.length; i++) { ; ; ; ; var img = imgs[i]; ; ; ; ; var src = img.getAttribute('src'); ; ; ; ; if (!/^http/.test(src)) img.src = prefix + src; ; ; ; } ; ; ; var links = hoge.getElementsByTagName('a'); ; ; ; for (var i = 0; i < links.length; i++) { ; ; ; ; var link = links[i]; ; ; ; ; var href = link.getAttribute('href'); ; ; ; ; if (/^ooo/.test(href)) link.href = prefix + href; ; ; ; } ; ; } ; ; if (proc) proc(); ; }; })()</script>
お好きにダウンロードしてくださいという物しかWebで公開することはできません
$("#list1, #list2").sorable({ items:":not(.disable)", connectWith:".sort" }); connectWith:".sort"のsortにドットを付けるのを忘れてました。 しかし、この方法だとアイテム２を動かすと１と３の間には 挿入することができなくなりますね。 １の前に挿入することもできませんね。
>問題はタグ指定でdiv id指定の場合 >$("#3 img").attr("src",画像ファイル) これは、こういう構造になっていると考えていいわけですね。 <div id="3"> <img src=""> </div> まぁ、<div>でなくて<p>とかかも知れませんが、id="3"内に<img>タグがある、という構造であれば、$("#3 img")であっているはずです。 それ以外のところだと、画像ファイルのパスが正しいかどうか。あと、そもそもちゃんとスクリプトは呼び出されているかどうかも確認してみるとよいでしょう。
基本的には不可能です。 　ウェブの根幹を成すHTTPプロトコルは、ファイルを要求する。それを受け取ったら、改めてそのファイルの描画動作に必要なファイルをHTTPプロトコルを使用して要求する・・の繰り返しです。 　Firefoxをお使いでしょうが、アドオンのLive HTTP Headersで確認するとよくわかります。javascriptも画像もスタイルシートも、必要なだけ何度も要求しています。 　その要求は、最初からそのファイルを直接要求するのと変わりません。 　☆要求ヘッダーのReferer:が追加されるだけです。 ★もしアクセス制限を行なえば、当然ブラウザでの閲覧に支障が生じます。 　対策として、HTTP\REFERER、Refererを用いた制限だと、直接URLを記述しての利用は出来なくなりますが ・セキュリティソフトの設定で、リンク元情報Refererを禁止しているユーザーには利用できなくなります。 ・また、Firefoxでしたら、FireBugやJsViewでブラウザ経由でダウンロードされた物は見れます。 　そもそも、そのファイルが使われているという事は、その時点でユーザーにダウンロードされているのですからね。 　他人のスクリプトに興味のある人は、かならずそれを見れる方法を知っていますから、意味ありません。 　よって、結論から言うと ＞外部からjsファイルを直リンクなどで、見られないようにできないかと考えています。 　は不可能です。 　というか、それで支障が出てくる人が現れることも含めて、すべきではありません。ウェブを考案したバーナーズリーが、 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 　私が構想していたのは、自分の知識や考えを共有させることが、他人の知識を 学ぶのと同じくらいに容易であるようなシステムであった。... すべての文書を ある意味で「等価」にすることもまた不可欠である。システムはユーザーを制約しては ならない。どの文書についても、それがたまたまどこに保存されていようと、 同じようにたやすくリンクできるようになっていなければならない。(pp.49-50) 　Webの背景をなす基本的な原理は次のようなものである。どこかの誰かが、 ひとたび文書、データベース、画像、音声、動画あるいはある程度まで インタラクティブな画面を準備したなら、もちろん使用許諾の範囲内のことだが、 いかなる国のどのようなコンピュータを使っている誰もが、この画面に対して アクセス可能でなければならない。そして、ほかの人たちが見つけることができる ように、リファレンスすなわちリンクをつくれるようにしなければいけない。(pp.53-54) 　Webは技術的な創造物というよりは社会的な創造物である。私はWebを技術的な おもちゃではなく、人々の共同作業の手助けとなるような社会的効果を生むものとして 設計した。Webの最終目標は、世界中に散らばっている私たちが織りなしている 網の目のような存在を支援し、改善することである。(p.156) ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［リンクについて「リンクは自由!」( http://www.sal.tohoku.ac.jp/~gothit/webpolicy.html )］より 　あなたが苦労して書かれたスクリプトだって、その元となる知識は公開された資料が元になっていると思います。それどころか、HTTPやHTMLだって、誰かが考案して皆が自由に使ってここまで発展してきたのですよ。 　自分は、それを自由に手に入れたのに、私の知識は見られるのは嫌だというのは、なんとなくおかしい気がします。 　私は、ここでスタイルシートやHTMLのソースをたくさん紹介しています。他所には絶対ないような内容のものも公開しています。 　なぜなら、私が身につけた恩を返すのは当たり前だと思っているからです。それによって、このウェブの世界が発展すればよい。 　そんな狭い了見ではなく。 　ウェブって、そんなのです。 『Webは技術的な創造物というよりは社会的な創造物である。私はWebを技術的な おもちゃではなく、人々の共同作業の手助けとなるような社会的効果を生むものとして 設計した。Webの最終目標は、世界中に散らばっている私たちが織りなしている 網の目のような存在を支援し、改善することである。』 　Refererによって制限はかけられますが、支障の方が大きいのですべきではない。
規約上問題ないなら、どこかにオフにするオプションがあるのでは？ 運営に確認してみてください ちなみにscriptタグをあとから削除することはできますが、 読み込まれたときに解析ツールがうごくのであれば、 動いた後の削除なので、ご希望の「実行させない」とはならず 無駄かもしれませんね たとえば、こんな感じ window.onload=function(){ var n=document.getElementsByTagName("script"); for(var i=n.length -1;i>=0;i--){ if(n[i].src.match("hogehoge\.js$","i")){ n[i].parentNode.removeChild(n[i]); } } } </script>
<div id="area_hoge2"> のところに style="display:none;" を追加。 <a ～>表示</a> のところの style="display:none;" を削除。 <a ～>非表示</a> のところに style="display:none;" を追加。
前にどこかのサイトで書かれていたものの受け売りですが。。。 //　ここから　 var w = window.innerWidth; var x = 900; if( w <= x) { viewtype = 'sp'; } else { viewtype = 'pc'; } //　ここまで 　 あとは目的の場所に書き込めばOKだと思います。 たぶん。
その手法は間違い。そもそも私たちがHTMLでウェブページを作成する最大の理由は!! 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 　HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 もし【相互運用性確保の】努力が成されなければ、Webは互換性のないフォーマット毎に分け隔てられた世界に分割され、すべての関係者にとっての商業的可能性が減少することとなるであろう、大きなリスクを負うこととなる 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［2.2.1 HTMLの略歴( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より 　でしたね。 　たった一つのウェブページを作成して、「どんな環境からもWebの情報を利用できるように」するへきです。 　そのためには、「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )」が必要で、文書構造だけを記述したHTMLを作成して、メディア別( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )にスタイルシートを記述し、必要ならCSS3のMediaqueryでデザインを変える。screen(PCやスマホ)にはリキッドで表示し、携帯電話(handheld)にはシンプルに、印刷用には白黒でとすればよい。 　表示確認には、firefoxの FireMobileSimulator( https://addons.mozilla.jp/firefox/details/8519 )や User Agent Switcher( https://addons.mozilla.org/ja/firefox/addon/user … )を使えばよい。 　javascriptはナビゲーションが関係する部分には使わないのが鉄則です。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから Lynx などのテキスト ブラウザを使用して、サイトを確認します（ほとんどの検索エンジンのスパイダーには Lynx で見えるようにサイトが映ります）。JavaScript、Cookie、セッション ID、フレーム、DHTML、Flash などの特殊な機能が使用されているためにサイトの一部がテキスト ブラウザで表示されない場合、検索エンジンのスパイダーがサイトをうまくクロールできない可能性があります。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［ウェブマスター向けガイドライン（品質に関するガイドライン） - ウェブマスター ツール ヘルプ( https://support.google.com/webmasters/answer/357 … )］より
HTML5 で実装できるなら フラグを保存する var STOREKEY = 'stump_rally_status'; function storeStatus(status) { window.localStorage.setItem(STOREKEY, JSON.stringify(status)); } function readStatus() { var str = window.localStorage.getItem(STOREKEY); var status = (str && str != 'null' && str != 'undefined')? JSON.parse(str): {}; return status; } 画像がクリックされたらイベント function recordStump(id, pswd) { var status = readStatus(); status[id] = pswd; storeStatus(status); } window.addEventListener('click', function(ev){ var elem = ev.target; if (elem instanceof HTMLImageElement) { if (elem && elem.dataset && elem.dataset.stump) { var m = /(\w+)\/(\w+)/.exec(elem.dataset.stump); if (m) recordStump(m[1], m[2]); } } }, false); <a href="一覧表のページ"><img data-stump="hoge/abc" src=stump_hoge.png></a> <a href="一覧表のページ"><img data-stump="boke/ijk" src=stump_boke.png></a> <a href="一覧表のページ"><img data-stump="fuga/xyz" src=stump_fuga.png></a> フラグをチェックし、全て立っていたらリンクを表示 チート対策として、判断にダイジェスト値を利用する function createDigest(str) { var M = 0x1FFFFFFF; var v = 123456789 & M; for (var i = 0; i < str.length; i++) { var c = str.charCodeAt(i); v = (v * c * 2 + 3) & M; // TODO もっと難しく! } return v; } function checkRallyGoal(status) { var KEYS = 'hoge,boke,fuga'.split(/,/); var GOAL = createDigest('abc,ijk,xyz'); // TODO 定数に置換して var passwords = KEYS.map(function(x){return status[x]}).join(','); var digest = createDigest(passwords); return digest == GOAL; } window.addEventListener('DOMContentLoaded', function(ev){ if (checkRallyGoal(readStatus())) { var a = document.getElementById('goal').appendChild(document.createElement('a')); a.href = 'ゴールのページ'; // TODO チート対策 a.textContent = 'ゴール'; } }, false); <p id=goal></p>
No.1 の補足について > 値が代入されませんでした。 スクリプトは特に問題はありません。 実際のJSONデータですが、もしかして全角スペースが混入されていませんか? ブラウザの開発者ツールなどで、エラー内容をご確認ください。 http://www.htmlhifive.com/conts/web/view/study-r …
おそらく、prototypeが理解できていないのだと思いますが、ECMAScript の仕様書を理解できるまで読み進めることをお勧めします。 http://www2u.biglobe.ne.jp/~oz-07ams/prog/ecma26 … http://es5.github.io/#x15.11.3.1 prototype についてはMDNがわかりやすいかもしれません。 https://developer.mozilla.org/ja/docs/Web/JavaSc … # Re: re97さん
>「戻る」でのページ表示時に選択したものを取得する方法 onsubmit時にクッキーにチェック状態を保存しておき onload時にクッキーの状態をみてチェックを設定する というのが妥当 むしろ「戻る」をさせないようにすれば、そんなことを悩む必要もなくなります ただしその場合セッション的な処理になるのでjavascriptだけでは厳しいかも
document.URL で取得できます。 送信方法はJSONP、Ajax、<form>とiframeやwindow.open、img要素などいくつかありますが、サーバーの受信方法と、受信完了の返信（応答）方法によって送信方法を変えなければなりません。 サーバーのプログラムを作っている人に、どういう送信方法を使えばいいか聞いてみてください。
ためしてませんがこんなかんじではなかろうか。 divでeachで回した後に各div内のinputに対してeachでまわす。 $.each('div', function(){ $(this).find('input').each(function(i){ $(this).attr('name', 'hoge' + i); }); });
まとめてやる方法もあるけど、今のHTMLとスクリプトそのまま使うなら HTMLの方の　matchNum()　を全部、matchNum(this) として、 function matchNum()　を　function matchNum(objNum) とでもして、 n = eval(document.myFORM1.myTEXT1.value)　を　n = eval(objNum.value) にしたら、どう？
＞恐らくCSSではそこまでは無理ですよね？ 　CSS3のtransformを使えば簡単です。 　いずれにしてもHTMLには文書構造しか書かれていないほうがデザインの自由度も変更も楽になります。 　例えば、 <header> 　・・・ 　<nav> 　　<ol> ・・・ [HTML4.01など]は文書構造を示す要素が用意されていませんでしたから、 「id属性及び class属性と併用することで、文書に構造を付加( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )」してきましたから、 <div class="header"> 　・・・ 　<div class="nav"> 　　<ol> ・・・ 　とマークアップさえされていれば、 ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) 　で、[表示]→[スタイルシート]のようにスタイルシートで好きなようにデザインできます。(Chromeは代替スタイルシートに未対応) 後方互換のためHTML4.01だとして、---先のサンプルは下記の形に修正 <div class="header"> 　<div class="nav"> 　　<ol> 　　　<li><a href="/">Top</a></li> 　　　<li><a href="/Books">Books</a> 　　　　<ol> ・・・【中略】・・・ 　　　</li> 　　</ol> 　</div> </div> [スタイルシート] div.header{position:relative;} div.header div.nav{ width:100%;line-height:40px;height:40px; text-align:center;/* 中央に並べる */ font-size:0;/* すき間 */ } div.header div.nav ol,div.header div.nav ol li{list-style:none;margin:0;padding:0;} div.header div.nav ol li{ font-size:16px; display:inline-block; width:20%; position:relative; /* text-align:left; *//* 文字を隠すとき */ } div.header div.nav ol li ol{ position:absolute; top:40px;left:0;width:100%;/* 位置とサイズ */ } div.header div.nav ol li ol li{ width:100%;display:block;height:0; overflow:hidden; /* 時間的変化 */ transition-property: height; transition-duration:2s; transition-timing-function:ease-in-out; } div.header div.nav ol li:hover ol li{height:40px;} div.header div.nav ol li a{ display:block; width:100%;height:100%; /* text-indent:-100em;*//* 文字を隠すとき */ } div.header div.nav ol li a{background-color:yellow;} div.header div.nav ol li a:hover{background-color:orange;} これが基本です。 背景に画像を指定するときは、 div.header div.nav ol li a[href]{background-image:url();} div.header div.nav ol li a[href]:hover{background-image:url();} div.header div.nav ol li a[href="/Books/001.html"]{background-image:url();} div.header div.nav ol li a[href="/Books/001.html"]:hover{background-image:url();} div.header div.nav ol li]hover a[href="/Manual"]{background-image:url();} など、要素セレクタなどを使って指定するなど御自由に・・
ご期待とまったく反する回答になりますが、 　フォームのコントロールと言うユーザーインターフォース(UI)は、そのデザインを変えてはなりません。やりすぎです。初心者が懲りたい気持ちは分かりますが、javascriptが無効のユーザーはワケワカメになってしまいます。 　CSSでも、フォームのUIを変更するプロパティが用意されていません。 　CSS3の:checkedなどで、背景は変更できますがデザインは変更すべきではありません。 　
スクリプトで生成された要素にはクラス設定がされていませんので、CSSで指定したつもりかも知れませんが、対象とはなりません。 また、他の方もご指摘のように 　mozi { font-size:40px; } は、　.mozi{ ～～ }　でないとクラスが対象とはなりません。 ＤＯＭの構造がご提示のままなら、クラス設定などなくても 　#cells span { font-size: 40px; } とか、 　#cells { font-size: 40px; } で、充分事足りるように思いますが・・・
こんにちは。 プラグインを利用する際はそのjsを別途読み込む必要があります。 さて、提示いただいたソースで試すとこちらの環境では動いているように見受けられます。 １．textボックスとaddボタンが表示されている ２．Addボタンを押下すると2つめのtextボックスが表示、さらに1番目と2番目のtextボックスの横にDeleteボタンが表示される ３．Deleteボタンを押下するとその行のtextボックスが削除される IE11,GoogleChromeで確認しています。 開発者ツールでエラー等が出てないか見てみてください。
非標準のメソッドが使われています。 Fileを扱うためには基本FileReaderを使わなければなりません。 それよりもっといいのが、BlobURL化することです。 写真を指定してください： <form> <input type=file onChange="this.form.disp.src=window.URL.createObjectURL(this.files[0])"> <br><img name=disp> </form>
チェックボックスをおすと、tdでつけられたチェックがチェックボックスを おすことで外されるのでは？ どうしてもというのであればtd内のチェックボックスに「何もしない」属性を つけることです
10秒、5秒、15秒というのがＡ、Ｂ、Ｃと対で固定なら配列等にまとめて定義しておいて、切替えのスクリプト（多分、setTimeoutなどを利用しているでしょうから）の時間制御にその値を用いる。 時間が固定でなくその都度適当（ランダム）なら、都度発生させて、setTimeoutなどで利用する。 ＞均等な時間表示方法しか、参考ページを見つけられずに困っております 基本的な方法はその参考ページを利用できると想像します。 できればsetTimeoutを利用しているもののほうがよろしいかと。 　setTimeout( func, time) の、timeの値を実行する度に変えられるようにすればご希望の動作になるかと。
__utma、__utmc、__utmzはGoogle Analyticsが出しているCookieですので、cookieそのものは取れていると思います。 ASPサービスが出したCookieだけが取れていないのであれば、ASPサービスのCookieの出し方が標準ではないか、 または、最初のアクセスの場合はCookieは保存されていませんから、まず最初にCookieを保存する必要があるのではないでしょうか。
No.6 の補足 > 展開されないことがあります。 こういうことでしょうか? 左の #title1 リンクを押す → 展開 右の #title1 見出しを押す → 閉じる 左の #title1 リンクを押す → 展開されない ならば function open(hash) { $(hash).parent('li').find('.content').show(300); location.hash = '#opened'; //【追加】 }
他の型が回答されている用に「(?:)」で１つです。何にもマッチしない空の正規表現と等価です。 RegExp.prototypeはES5.1では空のRegExpオブジェクトということになっています。 ""+RegExp() // "/(?:)/" で分かるように、空のRegExpオブジェクトはRegExp.prototype.toStringを通して結局"/(?:)/"になります。 これはtoString()された時、ちゃんとした正規表現リテラルになったほうが望ましいだろうということからです。 もし"//"だとコメントの用になってしまいます。 因みにChrome等で、/\//が"///"と表示されるのは誤りです。Firefoxの用に"/\//"か、"/\u002F/"を返さないといけません また、ES6ではRegExp.prototypeは通常のオブジェクトなので、RegExp.prototype.toString()は今のところエラーです。 ここで問題提起がされています http://esdiscuss.org/topic/standard-builtins-pro … 要するに、このあたりは微妙な問題を抱えている部分ということです。 そんなに気にしないでいいでしょう。
よくわかりませんが… ＞if(element.options[i] === 'tantou'){　～～ だと'tanntou'という文字列と比較してしまっているので、多分、一致することはないでしょう。 変数tanntouの内容と比較するのでしょうから、 　if(element.options[i] === tantou){　～～ とすればうまくいくかも… あと、質問文からはわかりませんが、DOM構築後にスクリプトを実行するようになっていますよね？ ところで、 ＞var tantou = "<%=Rs("作業担当者")%>" って、サーバーサイドで処理しているのでしょうから、わざわざクライアントサイドで選択する処理をしなくても、出力するときに担当者をselectedにしておくとか、あるいはセレクトタグなどでなく担当者は固定にしてしまうとかでもよさそうに思いますが…
ブラウザ間のござをなくそうとされているのでしたら、当然 HTMLはstrictで作成し、Docymentスイッチも標準モードで動作するように指定されていると思います。 1999年の勧告以来、「HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。」-- http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401 … DOCTYPE スイッチ( https://www.google.co.jp/search?q=DOCTYPE%20%E3% … ) <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> ・最低限、これを守られていると思いますが、それをまず確認してください。 Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) でチェックすると早い。 　javascript一部は確かにIE7で動作しないものもありますがjQeryは対処されているので大丈夫でしょう。
コメントを読んだだけですが… ＞// 移動を変数に入れる。引数がtrueなら-lw,falseならlw と書いてあるので、slide()の呼び出し側で引数をfalseにしておけばよいのでは？ timer = setInterval(function(){ //　slide(true) 　　slide(false) // 書き換え }, options.interval); 未検証です。
どんなスクリプトを書いてるの？　それをさらさないと回答は受けにくいじゃろう。 タッチを検知するのみだったら（以下のコードはC#です） void Update () { 　// ↓マルチタッチ対応のため全タッチを順番に確認する 　foreach (Touch touch in Input.touches) { 　　switch (touch.phase) { 　　case TouchPhase.Began: 　　　// タッチが初めて検知された（タッチダウン） 　　　// touch.positionとScreenとか見比べて左右を判定 　　　// 右に2つタッチされたらどうする？ 　　　break; 　　case TouchPhase.Moved: 　　　// ここでタッチダウン→指を動かして左から右へとかやってもいいだろう 　　　// touch.fingerIdをキーにタッチダウン時のtouch.positionを覚えておく事で追跡可能 　　　break; 　　case TouchPhase.Ended: 　　　// ここでタッチダウン時と同じエリアを指さしていたら 　　　// そちらのパドルを動かす動きにすればいい 　　　// touch.fingerIdをキーにタッチダウン時のtouch.positionを覚えておく事で追跡可能 　　　break; 　　case TouchPhase.Canceled: 　　　// なぞり途中でトラッキング不可能になったとかだと思われる 　　　break; 　　} 　}　 } みたいな構造でそれぞれの「イベント」を適当に処理すれば余裕のよっちゃんだろう。 同じ指でなぞり続ける限りfingerIdが変わらないのでそれをHashMap的なもので管理すると良かろう。 JavaScriptにHashMapがあるのかは分からんが、C#の場合はHashMapを自作するのは簡単なので合わせて検討されたい。
もう既に答えが出ているので、私はそもそも論を展開します。 なぜ、こういう質問が出るのかといえば、re97さんがデバッグ(確認)の方法を知らないからです。 hoge = function(a, b) { 　return (piyo[b] && piyo[b][a]) || 0; }; ならば、 console.log(hoge(1,2)); たったこれだけの記述で、何が返されるか確認できるため、箇条書きにされた疑問はほぼ解決します。 参考までに。
結論から書くと、successの箇所でalertすれば、正常にalertされます。 少し説明が難しいですが、プラグラムは必ずしも上から下に実行されるわけではありません。 別の方も言われていますが、ajaxは非同期で行われるためです。 平たく言うと、読み込み後に行われるべき処理はすべてsuccessの中に書きなさいということになります。 たとえば、外部に関数を置いて、successの中ではそれらの関数を呼び出すだけ。というような使い方が考えられます。 ただ、処理が長くなると、複雑になり(ネストが深くなる)がちなので、jQueryの場合は、$.deferredというものを用いて、コードを扱いやすくします。この場での説明は冗長的になってしまうので、ご興味があれば、「jquery deferred」で使い方を検索してみてください。
最初のulにある、先頭のliを指定するということでしょうか？ $("ul:nth-of-type(1) li:nth-of-type(1)") それぞれのulにある先頭のliの場合は $("ul li:nth-of-type(1)") cssの話ですが、nth-of-type(n)でn番目の要素を指定できます。 IE8以下では使えません。
ご質問の内容がよくわからないので、近いかどうか不明ですがごく簡単な例を… ＊タブで開くか別ウィンドウで開くかは閲覧者側の設定によります。 ＊ポップアップブロックにかかる場合があります。 （インデントは全角空白になっています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> var url = [ 　"https://www.google.co.jp/search?hl=ja&q=", 　"http://search.yahoo.co.jp/search?ei=UTF-8&p=" ]; var addkey = "+新しい"; function search(elm){ 　var u, i = 0; 　var key = elm.parentNode.getElementsByTagName("input")[0].value; 　if(key != ""){ 　　key = key.replace(/[ 　]+/,"+") + addkey; 　　key = encodeURI(key); 　　while(u = url[i++]) window.open(u + key, "_blank"); 　} } </script> </head> <body> <div> <p>キーワード<input type="test"> <input type="button" value="検索" onclick="search(this)"></button> </div> </body> </html>
this と ".class_td"が逆です 入れ替えても直らない場合は、正しくthisが指しているかも確認して下さい 参考URL：http://api.jquery.com/index/
http://www.atmarkit.co.jp/ait/spv/1002/12/news10 … この辺使えばいけるでしょう
Promiseを使ってもいいかもしれませんね。 Promiseは一度解決するとそれっきりなので。
タグは .prop("tagName") で取れるのでそれで条件分岐してもいいかも。 その他、prev()のカッコ内でタグを指定してもいいと思います。
> CSSのデーターも渡されています なぜ、渡されたデータを見せてくれないのでしょうか。 むしろ謎が深まります。
jqueryではなく普通にCSSだけでよいのでは？？ 　スマホはHTML5,CSS3に対応していますので・・ 　そのプルダウンメニューのソースを提示してください。 <header> 　・・・ 　<nav> 　　<ul> 　　　<li><a href="/">Top</a></li> 　　　<li><a href="/Products">Products</a> 　　　　<ul> 　　　　　<li><a href="/Products/a.html">製品A</a></li> 　　　　　<li><a href="/Products/b.html">製品B</a></li> 　　　　　<li><a href="/Products/c.html">製品C</a></li> 　　　　</ul> 　　　</li> 　　　<li><a href="/Manual">Manual</a> 　　　　<ul> 　　　　　<li><a href="/Manual/a.html">説明A</a></li> 　　　　　<li><a href="/Manual/b.html">説明B</a></li> 　　　　　<li><a href="/Manual/c.html">説明C</a></li> 　　　　</ul> 　　　</li> 　　　<li><a href="/ContactUs">ContautUs</a> 　　　</li> 　　</ul> 　</nav> </header> <!-- header,navはHTML4などでは、div class="header"のようになります。 --> そのうえで、 ・ニ階層目のリストは隠しておいて ・focusまたはhoverの時に二階層目が開くようにする。 ＞タッチして下の階層が開ける仕様になっているため、 　この意味が分からないのですか、タップではなくタッチですか？？タップ/クリックだとリンク先に飛んでしまうので、hocus,hoverでないとまずい気がしますが？？？ 　jqueryではなく、スタイルシートを使うほうが良いでしょう。スタイルシートでリキッドでデザインし、それ以上のことがしたければmediaqueryでスタイル自体を変更できますからね。 　HTMLをデザイン目的で書いたら、それに制約されてメディアごとにデザインを変える事を始め何もできなくなります。HTMLには文書構造しか書かない。そのための 『文書の構造をプレゼンテーションと切り離すことで広汎なプラットフォームや多様なメディアでの文書提供コストを低下でき、文書の改訂も容易になる---2.4.1 構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )』 ですから・・
お礼への追記の意図がよく分かりませんが、 $("#s1").click(function(){ $("#s2".animate({marginLeft:parseInt($("#s2").css("marginLeft"))-200+"px"},"slow","swing", function(){ $("ul:first").appendTo("#s2") $("#s2").css("marginLeft","0px") }); }); を $("#s2".animate({marginLeft:parseInt($("#s2").css("marginLeft"))-200+"px"},"10000","swing", function(){ にしたということでしょうか？ 「slow」を任意の数字に変えるという回答なのですが。
ご使用のものはライブラリというわけではなさそうなので、作者にお尋ねになるのが一番よさそうですが… 表示位置の計算は 　function resize(){　～～　} で行っています。 考え方はほぼそのままでよさそうですが、通常なら親要素（div#slider10）のサイズを基に位置を計算すべきところをwindowサイズから計算しているようです。 親要素をウィンドウ幅いっぱいに定義している場合は、結果的にほぼ同様になりますが、divのmargin、paddingの分だけ計算がずれることになりそうです。 ご質問のずれの原因は、デフォルトのpaddingにあると思われます。 ＣＳＳの最初で、marigin、padding等をクリアしておくことで、中央に表示されるのではないでしょうか。 また、layer（左右の薄墨半透明の部分）の幅は、計算では画像と同サイズと想定されていると想像できますが、ご提示のサンプルでは画像の幅が970pxに対してlayerの幅が1000pxになっているので、上記の修正をしてもその差分のずれが残ることになると思います。
HTML5のようですので、率直にCSS3で行ないましょう。
こんな感じじゃない？ <script> var d=new Date(); var d1=d.getDate();//今日は何日 d.setDate(14);//14日にセットして var d2=21-d.getDay();//今月の第3日曜 d.setMonth(d.getMonth()+(d1<=d2?0:1));//第3日曜日以降は月に1日たす for(var i=0;i<2;i++){ document.write(d.getFullYear()+"年"+(d.getMonth()+1)+"月"+(21-d.getDay())+"日 (日曜日)"); d.setMonth(d.getMonth()+1); } </script>
jqueryではなく、mediaqueryの話だと思うのですが・・ IE,IE8はCSS3のmediaqueryに対応していませんから、javascriptを使用しなければなりません。 　いずれにしてもスマホを含めてブラウザ間の誤差をなくするためには ・strictで作成する。 ・標準モードで起動するようDOCTYPEを正しく指定する。 ・media=screenに対してはリキッドで製作する。 　・・・mediaquery使わなくても利用できるように ・mediaがhandheld(携帯電話)、print(プリンー)に対しては指定しない。 　ここまでが大原則です。 　そのうえで <!--[if lt IE 9]> <script src="http://css3-mediaqueries-js.googlecode.com/svn/t … <![endif]--> 　とjavascriptを読みこんだあと、普通にmediaqueryで指定するほうが楽です。
document.writeはページが新たに生成される際に書き出すものです。既にできあがった内容を書き換えることはできません。これは、表示させるタグのオブジェクトを取得し、そこにテキストをせっていする、というやり方をします。例えば、こんな感じです。 <p id="msg"></p> <button onclick="a()">書込</button> <script type="text/javascript"> <!-- function a(){ var b=prompt("入力",""); var obj = document.getElementById('msg'); obj.innerHTML = b; } //--> </script> これで<p id="msg">タグ内にpromptで入力したテキストが表示されます。
　リンクによって個別に色を変えたい場合は、属性セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS … )で指定するのが楽です。いちいちidを振るのは馬鹿げています。後々メンテナンスで困るのが目に見えている。 　なお、製作する立場になるとホムペなんて変な略語は使わないようにしましょう。 　ウェブサイトとかウェブページとか・・ ホームページとは、ブラウザを最初に起動した時に表示されるホーム(基点)のページです。「私はホームページはgoogleにしています。」と使います。 　ホームページ - Wikipedia( http://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC% … ) 　まだ、始めたばかりのようですから、アドバイスを まず基礎となる仕様書 HTML 4.01 仕様書邦訳( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … ) CSS 2.1仕様（日本語訳）( http://momdo.s35.xrea.com/web-html-test/spec/CSS … ) 　は一応、目を通しておきましょう。巷には本当にたくさんの？？？？のマニュアルサイトがたくさんあります。基本を身につけていれば、無駄なおかしなものを身につけて、本堂に戻るのに苦労するなんて事は減ります。 　DIVやSPANはclassやidを併用して文書構造を補完するためのものでデザインのためじゃない。その文書構造に基づいてスタイルシートでデザインする。という基本中の基本すら説明されていないことが多い。
navigatorでブラウザを調べる１－JavaScript入門( http://www.pori2.net/js/navigator/1.html )
少々難解になりますが、関数型プログラミングっぽい記述は如何でしょう function getUrl(pname){ return function(img){return img.src[pname]} } function process(url){ alert('imgsrc=' + url); } // IMG の配列 → 特定プロパティ値の配列 → 配列内容で繰り返し処理 data.IMG.map(getUrl('url1')).forEach(process); data.IMG.map(getUrl('url2')).forEach(process); data.IMG.map(getUrl('url3')).forEach(process);
<form name=さあ選びたまえ><select name=今年の第三日曜を></select></form> <script> /** * 曜日指定で日付を生成します. * <pre> * makeDate(2014, 0, 1) // 一月一日 * makeDate(2014, 6, 'mon3') // 七月の第三月曜 * makeDate(2014, 11, 'sun-1') // 今年最後の日曜 * </pre> * @param {number} year 西暦年数 * @param {number} month 月数(0-11) * @param {number|string} day 数字または曜日文字列 * @return {Date} 生成した日付 */ function makeDate(year, month, day) { if (typeof day == 'string') { var W = 'sun,mon,tue,wed,thu,fri,sat'.split(/,/); var m = /([a-z]+)([\+\-]?\d+)/i.exec(day); var week = W.indexOf(m[1].toLowerCase()); var no = parseInt(m[2], 10); if (no < 0) { month++; } // 来月から逆算 if (no > 0) { no--; } // 第一を0と換算 var firstDay = new Date(year, month, 1); var delta = (7 + week - firstDay.getDay()) % 7; day = 1 + delta + no*7; } return new Date(year, month, day); } addEventListener('DOMContentLoaded', function(ev){ var year = new Date().getFullYear(); var element = document.forms['さあ選びたまえ'].elements['今年の第三日曜を']; for (var m = 0; m < 12; m++) { var date = makeDate(year, m, 'sun3'); var opt = element.appendChild(document.createElement('option')); opt.textContent = date.toLocaleDateString(); opt.value = date.toDateString(); } }, false); </script>
回答ではありませんが、 だから、jQuery ですって～。
理想のものを探してもそっくりそのままのものを誰かが用意してくれているとは限りません。 とは言え、こんなのは？ http://blog.net-king.com/downloads/imagenavigati … デモだけ見て違うとか判断するのでなく、ご提示の二番目の参考ＵＲＬのものには、止めたい人のためのpauseする方法の説明があるようですよ。（下の方） http://webdeveloperplus.com/jquery/featured-cont … 最初の参考ＵＲＬのものが理想なら、それを参考に作成するという方法もあるかと。
http://docs-jp.unity3d.com/Documentation/Compone … http://uniteatime.blogspot.jp/2012/07/object-res …
そもそもいきなりサブミットするのはよくありません。 まず、クライアントサイドでチェック＋もしDB参照がいるならAjaxで問い合わせをして、それでOKならサブミット、NGならそのページのままでエラーを表示します。 そうすればサブミット時にNGになるのは、故意に無理矢理不正な値を送信した場合のみですので、単にエラーページを表示するだけでよくなるのです。 ページの遷移やはなるべく抑えなければなりません。抑えれば抑えるほど構造が簡単になります。
jquaryではなくjQueryです。 カラーをアニメーションするには別途プラグインが必要です。 以下は古いバージョンのjQueryで言及してますが、色のアニメーションについて述べています。 http://h2ham.seesaa.net/s/article/107837321.html 質問1 突然マージンと言われてもなにがしたいかわかりません。 marginLeftではなくmargin-leftでは？ 質問2 数値ならばいりません。px, %などがある場合は文字列となるので必要です。基本的にはくくっておけば問題ありません。
消したい（親）要素に class="del" にする querySelectoAll, classList, Array.map が使えること 配列はちょっと変更す。 <!DOCTYPE html> <meta charset="utf-8"> <body> <ul> 　<li class="del"> 　　<a href="http://example.com ">A</a> 　<li class="del"> 　　<a href="http://example.net/subdirectory/post.html ">B</a> 　<li class="del"> 　　<a href="https://example.org ">C</a> 　<li class="del"> 　　<a href="http://example.jp/subdirectory/post.html ">D</a> </ul> <a href="https://subdomain.example.org" class="del">E</a> <script> var ary = [ 　"http://example.com/", 　"http://example.net/", 　"https://subdomain.example.org", 　"http://example.jp/subdirectory" ]; function makeSelectorString (href) { 　return 'a[href^="' + href + '"]'; } function getParentByClass (e) { 　if (! e) throw new Error; 　 　return e.classList.contains (this) 　? e 　: getParentByClass.call (this, e.parentNode) } function delChild (e) { 　e.parentNode.removeChild (e); } Array.prototype.map.call ( 　document.querySelectorAll (ary.map (makeSelectorString).join (',')), 　getParentByClass, 'del' ).forEach (delChild); </script> </body>
関数内の this は、関数を実行する方法によって、指し示す値が異なります。 Container1.drawPicture(); と実行された場合、 関数 drawPicture 内の this は Container1 を指し示します。 img.onload がイベント発生時に呼び出されて実行される場合、 関数 onload 内の this は img を指し示します。 というわけで、関数 onload にて実行する this.ctx は、 Container1.ctx ではなく img.ctx と解釈され、 その様なプロパティが存在しないエラーが発生します。 対処方法はいろいろありますが、二つほど例示します // this の値を変数 that に格納して onload から参照する var that = this; that.img.onload = function(){ that.ctx.drawImage(...) }; // this を束縛した関数を onload として使用する var handler = function(){ this.ctx.drawImage(...) }; this.img.onload = handler.bind(this);
こんにちは。 リファレンスを見れば引数として渡せるものがわかります。 http://js.studio-kingdom.com/jquery/effects/anim … 1.animate( properties [, duration] [, easing] [, complete] ) 2.animate( properties, options ) という二つが準備されていることがわかります。(jQuery1.9) 同ページ内の引数の説明を見てください。 どちらのメソッドも第一引数が必須となり、 「最終的に変化させるCSSのキーと値のマップ値を指定します。 」 となっています。 よって $(object).animate({ opacity: 1 }); と指定する必要があります。 .css()については http://js.studio-kingdom.com/jquery/css/css 1.css( name ) 2.css( names ) 3.css( name, value ) 4.css( name, function(index, value)) 5.css( map ) といろいろな引数をもらうメソッドが用意されています。 ｃｓｓだと({ backgroundColor:"#00ffff" }) {}がない.css("backgroundcolor","#00ffff") が出来るのは前者が5番目のメソッド、後者が3番目のメソッドを使うように出来ているからです。 >時間を記述する時に,1500とか書く場所が後者はどこに書いて解らないです。 こちらは1のメソッドの場合は第二引数、2のメソッドの場合は第二引数へオプションとして渡します。 １の場合 $(object).animate({ opacity: 1 },1500); ２の場合 $(object).animate({ opacity:1 }, { duration: 1500 }); のような書き方です。 リファレンスを見ることが出来るようになるとほかのメソッドでも迷うことがなくなると思います。
>inp・・・・これはnullではないでしょうか。戻り値を格納する 違います。nullになることは絶対にありません。戻り値も関係ありません。入力数字です。数値ではなく数字です。「5」が押されると「"5"」という文字がinpに代入されます。もう一度「5」が押されると「"5" + "5"」で「"55"」という文字列が代入されます。 >cal・・・これがよくわかりません。なぜ+なんでしょうか？ calが「＋」なのは ・最初 ・「＝」が押されたとき ・「C」が押されたとき の3パターンです。あとあえていうなら「＋」が押されたときも。で「－」「×」「÷」が押されたらそれぞれの文字が入ります。 「＋」が押されたときではない上記3パターンで「＋」が入っているのは、一言で言うと他の計算処理と同じロジックを使うための工夫でしょう。それ以上は自分で考えてみてください。 >flg・・・・これもよくわかりません。 数字を入力した直後なのか、記号を入力した直後なのかの状態のフラグですね で、本の解説を読んでもわからないということなので、上記の説明でも分からないかもしれませんね。それでも分からない場合には、「この変数は何か」を考える前に、具体的な動きを考えてみましょう。 ・最初に3のボタンが押されたらどうなるか ・次に「×」のボタンが押されたらどうなるか ・次に4のボタンが押されたらどうなるか ・最後に「＝」のボタンが押されたらどうなるか とか。自分の頭で考える事は大事ですよ。
　javascriptでも良いですが、javascriptが無効にしている場合は当然動作しません。CSS3だとCSS3に対応していないブラウザでは無効です。 　スタイルシートではidはあまり使わなくてできるので簡単・・
入力フォーム内と言う事は <body onload="chgImg();"> <img src="/common/img/icon_02.gif" alt="#" id="chageImg" width="40" height="20" /> は違いますよね。 <form action="./"> 　<p><img src="" width="" height="" alt=""></p> とかですよね。 　なら、その時に<input type="hidden" name="backImg" value="../../common/img/icon_01.gif">の値も書き換えて、再度フォームを作成する時に順番変えればよい。 　重要なフォームのあるところに、(jQueryを含む)javascriptを使うべきでないとお考えなら、もっとも良いのはCookieとサーバー側での処理です。画像を選択した時点で一旦その内容をサーバーに送り、cookieを書き換えてフォームを再提出。そのときに画像自体を変更してしまう。../../common/imgのいうスクリプトを用意して、cookieの値によって/出力される画像をicon_02.gifを他のものに変える。
>No.1補足 そのソースコードを見てください。 私が知る限りでは全てsetTimeout()が使われています。
＞上記を、 ＞var img = $(this).find('img'); ＞とした場合、なぜか画像が切り替わりません。 そうしてしまうと、aの値が設定されないから、下のほうにある a.hover(function(){ が正常に動作しなくなる。
要素 <button type=submit> が押されたならば、 ブラウザの挙動は以下の様になります。 1. 属性 onclick の値を、イベント関数の中身と看做して実行 2. イベント関数の戻り値が false でないので、処理続行 3. button を囲む要素 form に、イベント submit が発生する 4. form の挙動として、現在のページを再度読み込む 5. 再読込されたので、DOM内容も初期化される というわけで、ご質問の回答としては <button type=submit> → <button type=button> # スクリプト以外のイベントが発生しないボタン または onclick="add()" → onclick="add();return false" # 戻り値を付けて後続の処理中断
同じHTML構造の要素に対する処理なので、固有の名称（idなど）を用いずに、クリックされた要素に対する位置関係や属性などを基に記述する方法にすれば、まとめることができると思います。 具体的な記述はいろいろあると思いますが、一例です。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ 　$("ul.menu img").click(function(){ 　　alert($(this).attr("alt")); 　　return false; 　}); }); </script> </head> <body> <div class="header"> <ul class="menu"> <li><a href="index.html"><img src="dog.png" alt="Dog"></a></li> <li><a href="index.html"><img src="cat.png" alt="Cat"></a></li> <li><a href="index.html"><img src="bird.png" alt="Bird"></a></li> </ul> </div> </body> </html>
.＞javascriptでコメントアウトができません どっからどう見ても、HTMLにしか見えませんが・・・ <!-- <body style="margin:0px; padding:0px;" onload="load()"> ・ ・ ・ ・ </FORM> --> とするか、 <!-- body style="margin:0px; padding:0px;" onload="load()"> ・ ・ ・ ・ </FORM --> とするか。
変数 form ですが、スクリプトの途中で上書きされています var form = document.getElementById("upload_file1"); var form = document.getElementById("upload_file2"); イベント関数 onchange の内部にて変数 form を使っています form.submit(); イベントが発生して関数が実行されると、この form の中身は 「イベント関数を宣言した時点の値」ではなく、 「イベント関数が実行された時点の値」と評価されます。 このため フォーム upload_file1 でファイルを選択すると、 フォーム upload_file2 が submit されて送信。 という訳のわからない状態になっています。 修正するならば * 変数名を form1,form2 と分ける * onchange 内部で this.form.submit() とする * フォーム毎に (function(){ ... })() で囲んで変数スコープを分ける
function wtWeek(d) { if (d.getDay() == 0) {d.setDate(d.getDate()-6-d.getDay());} // 日曜用 ↑これなら既存触らず１行追加でいいかも。
スクリプトのためにブラウザを判別したいのだと想像しますが… 「ブラウザを判別」→「ブラウザで分岐」→「対応するスクリプトを実行」 とお考えと思いますが、 ＞だけに対応しているプロパティが見つからないためif文が書けません ブラウザのバージョンによっても対応状況が異なります。 それよりも、目的的に考えて、使いたいオブジェクトやメソッドが存在するかどうかを判別条件にした方が良いのではないでしょうか。 単に、どのブラウザかを知りたいだけなら、userAgentを見るのが一般的ではないでしょうか。
＞　１． javaで言うところの class Hoge { void Hoge (int ranking)　{～} ・・・} Hoge getPobability = new Hoge(); の方がイメージが近いと思います。 JavaScriptは全てがオブジェクトという、他の言語とは異なる考え方で作られている言語なので、functionで宣言されていても単純な関数では無い場合があります。 ＞　２． ＞　この処理で返ってくる値がほしい時は ＞　getPobability(～) ＞　で大丈夫なのでしょうか？ 大丈夫です。
ボタン要素で値を送信ではなく、 隠し要素をフォーム内に埋め込んで送信、 はいかがでしょうか $('#form2 input[type=button]').click(function(){ var v = $(this).val(); $('<input type=hidden name=volume>').val(v).appendTo('#form2'); $('#form2').submit(); });
window.open はポップアップと呼ばれる別ウィンドウにて、 指定 URL のページを表示する機能です。 ただし最近のブラウザの傾向として、 安全上の観点から制限されてしまう事が多いです。 制限されずにポップアップの様な機能を実現させたいなら、 最近ですと lightbox 系と呼ばれるスクリプトを ページ内に埋め込むことをオススメします。 一般的には画像ファイルを表示させるものですが、 ポップアップの代用としても使えますので。 http://google.co.jp/search?q=lightbox+iframe
EventSpSheet.getSheets()は、すべてのSheetを配列で返します。ActiveSheetに設定できるのは１つだけですから、getSheetsで取得した配列から１つを選んで指定しないといけません。 var sheet = EventSpSheet.setActiveSheet(EventSpSheet.getSheets()[n]); 例えば、これでインデックス番号n番のSheetがActiveSheetに設定されます。
その記述は $$ という関数を、引数 "div" を与えて呼び出しています。 その記述自体にはそれ以上の意味はありません。 例えば、$$を以下のように定義しておけば alertがでます。 function $$(a){ alert(a); } $$("div");
開発者ツールは関係ないと思うんですけどね…。 ローカルファイルの実行だけが問題なら、もしかして メニュー→インターネットオプション→詳細設定→セキュリティ→ マイコンピューターのファイルでのアクティブコンテンツの実行を許可する* のチェックがはずれているとか？
パターン1は各要素郡にイベント定義する為、メモリを多量に消費します。バブリング順序を踏まえれば、パターン2より早い段階で検地します。 パターン2は document 一つにイベント定義する為、メモリ消費量は少ない。場番部リング順序としてはパターン1より遅い。 処理速度はコードや環境に依存する為、自分で計測してみてください。 # Re: nakayama7さん
var fuga = (function(){})(); は var fuga = function(){}(); と同じです つまり関数を定義してすぐ呼んでいるだけです
関数内のtargetは実行時に外のtargetを参照します つまりそれまでにtargetが変わってしまっていた場合思った通りに実行されません このコード以外にtargetを弄る部分がないとしても、 ５回呼ばれる関数内でのtargetは５回ともobj[4]を指します なぜなら実行時にはtargetはobj[4]となっているからです つまり結論をいうとその書き方ではダメです 治すパターンはおそらく５つくらいはありますが、 setTimeoutの場合第三以降の引数を使うといいでしょう for(var i = 0; i < 5; i++){ target = obj[i]; setTimeout(function (target){ target.css('background-image', 'fuga'); }, 100 * i, target); } こうすれば毎ループ毎に期待通りのtargetが関数に渡されるようセットされ、 関数内のtargetはその渡されるtargetの方を参照するのでうまく行きます
if desiredjobtype = "" then desiredjobtype = "未入力" のあとにEnd Ifが足りないのでは？ チラッと見ただけなので問題が本当にそこなのか、 またそこだけなのか自信がありませんけど。 あとコメントって 「<!--」じゃなくて「--」か「'」じゃなかったっけ？ それから日本語コメントで「POSTで遅れないので」じゃなくて「POSTで送れないので」。
PHPの実行をjavascriptでやろうとしているように見受けられますが そんなことはできませんので、よくよく考えてみてください
順不同です。 ネットワークやOS、ブラウザなどの状態によって変わります。
ECMAScriptの仕様では定められていないということです。 しかし、長い歴史の中でデファクトスタンダードができて、各環境も大体それに添っています。 ただし、その通りでない（バラバラな順序で返す）環境があっても文句は言えないよということです。 ここで提案されているものがデファクトスタンダードです。 http://wiki.ecmascript.org/doku.php?id=strawman: … 要は、配列のインデックスとなる0から4294967295までの整数キーを先に数値順に列挙して、 その後は加えられた順に列挙するというものです。 ただし、まだ正式な仕様にはなっていませんし、現状各環境で微妙なズレがあるので、過信は禁物です。 もしも順序が保証されるテーブルが欲しい時はMapを使ってください。 http://people.mozilla.org/~jorendorff/es6-draft. … こちらはキッチリ挿入順に列挙できます。
回答がないみたいなので・・・ ＞書き込んだのですがスルーされてしまったので、～ スルーするというよりも、皆さん（私も含めて）回答できないだけではないかと想像します。 ＞アマゾンの左のメニューのような物～ とありますが、 　　http://www.amazon.co.jp/ には「左メニュー」らしきものは見当たらないし、なさりたいことが不明なので回答のしようがないのではないのかな… 質問文もコードの一部のみですし、HTMLの構成もわからないので、想像して回答しようにもヒントが少なすぎるということではないでしょうか？ ということで、表示されている内容からめいっぱい想像をたくましゅうしてみると… ・closeInstantが何を行っているのか不明ですが、それが何か悪さをしていないでしょうか？（実行時エラーをおこしていないか等） ・表示/非表示を切り替える処理だけのように見えますが、なぜわざわざsetTimeoutを利用しているのか不明です。単純に、表示/非表示の切替処理だけにすれば不具合は生じないのでは。 ＞メニュー間の移動をすると、移動先のメニューが出てきません （以下は、想像100％ですが…） イベントのセットがどのように（どの要素に）されているのか不明ですが、mouseover、mouseoutが連続して発生すると仮定すれば、setTimeoutで指定された処理内容の前にこれらが連続して処理されることになります。 単純に、同じイベントが設定されている二つの要素間でover→out→overが0.1秒以下で発生した場合を考えてみれば、 　*closeInstantは内容が不明なので無視しています。 　*対象要素が不明なので、特定せずに考察 1）mouseover（要素1） 　(1) 以前の非表示処理をキャンセル 　(2) 表示処理を0.3秒後にセット 2）mouseout（要素1） 　(3) 表示処理のキャンセルを0.1秒後にセット 　(4) 非表示処理を0.3秒後にセット 3）mouseover（要素2） 　(5) 非表示処理をキャンセル（(4)をキャンセル） 　(6) 表示処理を0.3秒後にセット 4）約0.1秒後 　・ (3)が実行され、(6)がキャンセルされる 5）約0.3秒後 　・ (2)が実行され表示 となるので、結果的に(2)で指定された要素が表示されていませんか。 質問文には記載がありませんが、どこかのメニュー（上例では要素1のmouseoverの際に表示される要素）が表示されているのではないかと想像します。 （全てがn=1として設定されているのか、違う処理になっているのか不明ですし、n=1以外の場合どのような処理になっているのかも不明ですが…） （↑）の順序は操作のタイミングに大いに依存するので、タイミングが異なれば違う結果になりますし、処理がもっと多重に重なった場合も同様です。 スクリプトが実行時エラーで停止しているような場合も、上記とは異なった処理内容になると考えられます。 普通のサイトであれば、ソースを見ることでどのようなHTML構成やスクリプトで処理を実現しているのかがわかりますので、サンプルサイトがあるのであれば、それを見本に作成するのが手っ取り早いと思います。
うむ。JavaScriptで文字をあらわす時には普通ダブルコーテーション「"」という文字を使うよね。 "aaa" ところが、String.match(pattern)のpatternは文字をあらわすはずなのにダブルコーテーションがない！ JavaScriptで「この部分は正規表現ですよ」という事をあらわす時に、スラッシュ「/」を使うのだ。つまり、正規表現を書くときの決まりごとと言える。なぜそう決まったかは歴史的経緯もあるがここでは割愛。とにかく、なんで「/」か、というのは、日本語で犬を犬と言うようにそういうもんなんだと思ってくれ。 で、次にハット「^」だが、これは正規表現においては2つの意味がある。 ・正規表現パターンの先頭にあらわれた場合は、「先頭にマッチする」という意味になる。 ・正規表現パターンの途中にあらわれた場合は、「このハットの次の文字以外にマッチする」という意味になる。質問文の中ではこれは後者を表し、 /[^0-9]+/ というのは、半角ゼロから半角キュウ「以外」の文字が一文字以上続く文字列にマッチするという意味になる。つまり、 document.ad.ad1.value.match(/[^0-9]+/) はdocument.ad.ad1.valueに0123456789以外の文字が入っていたらtrueとなり、びっくりがつくのでifはその逆になるわけだな。 先ほどのハットだが、例えば document.ad.ad1.value.match(/[^0-9]+/) を document.ad.ad1.value.match(/^[0-9]+/) とすると、「先頭から0123456789が1文字以上続く」というのにマッチするようになる。 正規表現の色々な書き方には全て意味があり、正直それらは人間が定義したものなので「なぜ」というのにはあまり明確な回答ができない。そういうもんになるように人間がそう決めたんだよとしか。
ログを表示する所に <div id="console_log"></div> とか作って、スクリプトに console.log = function (log) { document.getElementById('console_log').innerHTML += log + "<br>"; } って追加すれば出来ます。
極々簡単な例を ★タブは＿に置換してあるので戻す。 ★HTML4.01strict + CSS2.1 8627355.html 8627355-2.html 8627355-3.html 8627355-4.html と四つのHTMLを下記部分だけ書き換えて置く。 navi.cssを同じ場所に置く [navi.css] @charset "Shift_JIS"; html,body{margin:0;padding:0;} h1,h2,h3,h4,h5,h6{margin:0;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{width:90%;min-width:630px;max-width:900px;margin:0 auto;padding:5px;} div.section{position:relative;min-height:300px;} div.section div.nav ol{position:absolute;top:0;left:0;width:160px;list-style:none;margin:0;padding:0;line-height:2em;text-align:center;} div.section h2,div.section p{margin-left:170px;} div.section div.nav ol li{margin:2px 0;padding:0;position:relative;} div.section div.nav ol li a{display:block;width:100%;height:100%;text-decoration:none;border:ridge 2px blue;background-color:aqua;} div.section div.nav ol li a[href]:hover{background-color:silver;} [8627355.html～8627355-4.html] <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>トップ</title><!-- それぞれ書き換える。 --> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rel="stylesheet" type="text/css" media="screen" href="./navi.css"> ＿<style type="text/css"> <!-- div.section div.nav ol li a[href="./8627355.html"]{background-color:gray;}/* ここも書き換える*/ --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>トップ</h1><!-- それぞれ書き換える。 --> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>ここには本文記事が入る。</p> ＿＿<div class="nav"> ＿＿＿<ol> ＿＿＿＿<li><a href="./8627355.html">Top</a></li> ＿＿＿＿<li><a href="./8627355-2.html">2ページ</a></li> ＿＿＿＿<li><a href="./8627355-3.html">3ページ</a></li> ＿＿＿＿<li><a href="./8627355-4.html.html">4ページ</a></li> ＿＿＿</ol> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2013-03-03</dd> ＿＿</dl> ＿</div> </body> </html> 書き換える部分 [8627355.html] div.section div.nav ol li a[href="./8627355.html"]{background-color:gray;} [8627355-2.html] div.section div.nav ol li a[href="./8627355-2.html"]{background-color:gray;} [8627355-3.html] div.section div.nav ol li a[href="./8627355-3.html"]{background-color:gray;} [8627355-4.html] div.section div.nav ol li a[href="./8627355-4.html"]{background-color:gray;}
Javascriptが途中で落ちてますね。 流し読みして気になったところを直すと、IE、Firefox、Chromeで動作確認が取れました。 そもそもValueを呼びに行かずに数字じゃダメなのかとか、JSONにまとめたりしなくていいのかとか思いますが。 以下、改変後ソースです。 /////////////////////////////////////////////////// <!DOCTYPE html> <html lang="ja"> <head> <meta charset="UTF-8"> <title></title> <script type="text/javascript"> function check() { var msg = ""; var msg2 = ""; var str = document.form.id.value; var str2 = document.form.pass.value; if (str.match(/[^0-9]+/)) { alert("客番号は数字のみ"); return false; } else if (str.length > 5 || str.length < 4) { alert("客番号は4～5桁"); return false; } if (str === "") { msg += "客番号が未入力です。\n"; } else { msg2 += document.form.id.value; } if (str2 === "") { msg += "パスワードが未入力です。\n"; } else { msg2 += document.form.pass.value; } var val;//ここに値を格納しています if ((val = radioCheck()) === false) { msg += "(1)が未入力です。\n"; } else { //どこにアクセスしてるの？ msg2 += document.form.eng.value; msg2 += "ちなみに内容は" + val + "でした。"; } if ((val = checkboxCheck()) === false) { msg += "(2)が未入力です。\n"; } else { //そもそもlang[]の間違い msg2 += document.form.lang.value; msg2 += "ちなみに内容は" + val + "でした。"; } if (textareaCheck() === false) { msg += "(3)が未入力です。\n"; } else { msg2 += document.form.opinion.value; } if (selectCheck() === false) { msg += "(4)が未入力です。\n"; } else { msg2 += document.form.age.value; } if (msg !== "") { //メッセージを出力 alert(msg); return false; } if (msg2 !== "") { //メッセージを出力 alert(msg2); } return true; } function radioCheck() { var count = 0; //アクセスの仕方が変わった？ var eng = document.getElementsByName("eng"); for (var i = 0; i < eng.length; i++) { if (eng[i].checked) { //Checkboxは一つだけしかチェックされない return eng[i].value; count++; } } if (count !== 0) { return true; } else { return false; } } function checkboxCheck() { var count = 0; var checkbox_value = ""; var checklist = document.getElementsByName("lang[]"); for (var i = 0; i < checklist.length; i++) { if (checklist[i].checked) { checkbox_value += checklist[i].value; count++; } } if (count !== 0) { return checkbox_value; return true; } else { return false; } } function textareaCheck() { var textarea = document.getElementById("demand").value; if (textarea !== "") { return true; } else { return false; } } function selectCheck() { var selectValue = document.getElementById("age").value; if (selectValue !== "選択されていません") { return true; } else { return false; } } </script> </head> <body> <form action="http://localhost" method="post" name="form" onsubmit="return check();"> <h1>アンケート</h1> <p><label>客番号：<input type="text" name="id" required></label></p> <p><label>パスワード：<input type="password" name="pass" required></label></p> <h2>（１）</h2> <p> 食べたいですか？<br> <br> <input type="radio" name="eng" value="yes" required> はい <input type="radio" name="eng" value="neither"> どちらでもない <input type="radio" name="eng" value="no"> いいえ </p> <h2>（２）</h2> <p> 食べたい物<br> <br> <input type="hidden" name="lang" value="langというnameは存在しない。"> <input type="checkbox" name="lang[]" value="apple"> りんご <input type="checkbox" name="lang[]" value="banana"> バナナ <input type="checkbox" name="lang[]" value="pasta"> パスタ <input type="checkbox" name="lang[]" value="pizza"> ピザ <input type="checkbox" name="lang[]" value="supu"> スープ </p> <h2>（３）</h2> <p> 意見（自由記述）<br> <textarea id="demand" name="opinion" cols="40" rows="4" maxlength="20" required></textarea> </p> <h2>（４）</h2> <p> 年齢を選択 <select id="age" name="age" required> <option selected value="選択されていません">以下から選択</option> <option value="10～19才">10～19才</option> <option value="20～29才">20～29才</option> <option value="30～39才">30～39才</option> <option value="40～49才">40～49才</option> <option value="50～59才">50～59才</option> <option value="60～69才">60～69才</option> <option value="70才～">70才～</option> </select> </p> <p> <input type="submit" name="button" value="送信" onclick=""> <input type="reset" value="クリア"> </p> <!-- body と form のとじタグが逆 --> </form> </body> </html>
スクリプトを読み込んだ後に下記のコードを読み込めばいいみたいです。 var gallery = Galleria.get(0); var totalImages = parseInt(gallery.$('total').html()); gallery.bind("loadfinish", function(e) { if (e.index == 0 || e.index == totalImages - 1) { gallery.pause(); } }); http://stackoverflow.com/questions/8500950/stop- …
場所を変えたい場合、CSSは下記のようにしましょう。 preserveは背景画像とは違うよと区別するためのクラスとしてCSSでは触らずに、他のクラス名を指定しましょう。 また、idやclassは数字から始めてはいけないので、他の名前がいいですね。 (imgタグのborderのrが抜けていました。borderはスタイルシートで定義しましょう。) <img class="preserve photo1" src="画像URL" width="236" height="236" > <img class="preserve photo2" src="画像1URL" width="262" height="30" > .photo1{ position:absolute; top:20px; left:20px; border:none; } .photo2{ position:absolute; top:300px; left:20px; border:none; }
＞リターンを押したときsubmitされてしまうのを防ぐ為に、 ＞送信ボタンをinput type="submit"から"button"に変更し、 エンターの回避するだけならこんな感じでどうでしょう？ <script> try{ document.addEventListener ('keydown',function(e){keydown(e)},true); }catch(e){ document.attachEvent('onkeydown',function(e){keydown(e)}); } function keydown(e){ var t = (e.srcElement || e.target); if(t.nodeName=="INPUT" && t.type=="text" && e.keyCode==13){ if(e.preventDefault)e.preventDefault(); else e.returnValue = false; } } </script> <form id="index" name="index" action="index.php?=thanks#page" method="POST"> <p> <input type="text" name="a"> <input type="submit" value="x" class="button wide green" id="btn_dammy"> <input type="submit" value="y" class="button wide green" id="btn01"> </p> </form> やはりバリデートするならsubmit時に内容チェックするのが妥当かと
No.3 は根本的な間違いがありましたので修正します。 関数 replace は一回のみ適用でなければ、置換結果を再び置換してしまう可能性があったので。 var 入力 = "ABC of APC"; var 条件 = [ ['a', 0], ['b', 1], ['c', 2] ]; var LC = function(s){return s.toLowerCase()}; var RP = function(s){var i=1,a=arguments;return s.replace(/%/g,function(){return a[i++]})}; var cx = 条件.reduce(function(o,c){o[LC(c[0])]=[c[1],0]; return o}, {}); var re = new RegExp(条件.map(function(c){return c[0]}).join('|'), 'gi'); var 結果 = 入力.replace(re, function(str,ofs,src){ var c = cx[LC(str)]; return c? RP('<span id="no%-%">%</span>',c[0],c[1]++,str): str; });
どのくらいの数なのか不明ですが… ＞直接option value部分に書けばできそうですが、 ＞データの量が膨大な為、直接コードに書くのは難しそうです それだけ種類が多いのであれば、一つのセレクトで選択させるというUIそのものが問題ではないのでしょうか？ 入力コードをサーバーに送信してDBからレコードを得たいのであれば、ajaxあたりをキーにググればいろいろと見つかると思います。 数が少なければ、最初にスクリプトに全データを渡して、あとはクライアント側で処理してしまうという方が簡単です。 ご質問の内容なら、数が1000くらいあってもデータ量として100kbにはならないくらいでしょうから。 一方で、1000個もあるプルダウンを操作するなんてとても私には考えられません。
なぜjavascript？？？ 適当な画像ソフトで切り取ったので良いのでは？？
ANo2です。 もう少し新しいドキュメントがみつかりました。 　http://kb2.adobe.com/jp/cps/511/511727/attachmen … これによれば、disclosed属性の設定はファイルオープン時に行う必要があるみたいですね。 （ファイル属性値として保持しているものだと勘違いしていました。） それなので、対象となるPDF側のスクリプトに 　this.disclosed = true; を登録しておいて、open時に実行されるようにしておけばＯＫです。 あとは以前の回答通り、開く側のPDFから 　var d = app.openDoc("hogehoge.pdf"); 　d.pageNum = 2; のような要領で呼び出せば、指定ページを開くことができます。 （pageNumは0スタートです） 開くだけであれば変数を介さずに、 　app.openDoc("testSample.pdf").pageNum = 5; のような記述でも、指定ページが表示されます。 また、上記ドキュメントによれば、対象PDF側にnamed destinationが設定してあれば、disclosedの設定がされていなくても 　app.openDoc({ cPath: "hoge.pdf", cDest: "myDest" }); といった構文で、直接表示することも可能なようです。 （こちらは試していません）
enchant.js の動作要件は満たしているようですね。 https://github.com/wise9/enchant.js 原因は下記のいずれかでしょう。 - IE11のみに存在する機能を使用している - Google Chrome のバグ - enchant.js のバグ デバッガで切り分けてください。 # Re: snowman88さん
＞if(r=1){ rに1を代入する条件式はかならずtrueになりますがよろしいのでしょうか？ ＞return ture; trueね ＞document.w1.ww2 のような参照のしかたもあまりお勧めできない ＞onSubmit="return vwe();df16();" vweやdf16という謎の関数がでてきて微妙、dgの存在意義は？ onSubmitがreturnでかえすのですから return (vwe();df16()); 的な処理になるのかな・・・ イベントリスナーで処理すればもう少しわかりやすいかも
ちゃんと見てはいませんが… ＞どのようにスクリプトを記述すれば、いい感じに実現できるでしょうか 「いい感じ」というのは人によって違いますので、何がいい感じなのかはわかりませんが、想像では、以下のことを見落としていらっしゃるのではないかと。 現状は ・NAVクリック時 　「NAV画像の変更」と表示位置調整の「スクロール処理」 ・ウィンドウスクロール時 　表示位置を示すために「NAV画像を変更」 といった仕組みをパラで設定していると思いますが、「NAV画像クリック時」のイベントハンドラが画面をスクロールさせると、そのスクロールにより「スクロール時」のイベントハンドラが呼び出されることになります。 その結果、それぞれがほぼ同じときにNAV画像をアニメーションしようとするので、思った通りの動作になっていないのではないでしょうか？（jQueryは同じ要素に対するアニメーションは、順にキューに溜めていたような気がしますが…） この辺を踏まえた上で制御を考えるなり、表示方法を考えたり、アニメーションの方法を考えたりすれば、予定通りの動作になるのではないかと思います。
表の形式をご提示のものだけに限定して良いのか不明ですが、とりあえず・・・ （全角空白は半角に） $(function(){ 　$('.sample tr').each(function(i){ 　　if(i == 0) $(this).prepend("<th rowspan='2' valign='bottom'>No.</th>"); 　　else if(i > 1) $(this).prepend("<td>" + (i-1) + "</td>"); 　}); });
まったく詳しくありませんが・・・ ＞コピーしたデータをPHPのプログラムでデータとして処理しているため～ 何をどうしているのかわかりませんが、わざわざIEを介するような手間をかけずに、PHPで直接読み込んで処理する方が簡単ではないのでしょうか？ 手動で他にいろいろやるのであれば、Ctr+A、Ctr+Cの操作だけをブックマークレットにしたところであまり意味はなさそうですし…
xxx.style.display = ""; //? <style> xxx { display:; } /* ? */ </style> -- input.value = '0'; if (input.value) { ;// ? }
setIntervalで呼び出している関数の中にブレイクポイントを入れれば良いのでは？
あ、あと質問とは関係ないのですが、 　juary ではなく 　jQuery です。 以前同じ間違いをされていたのを見たときは単なる書き間違いかなと思ったのですが、 http://oshiete.goo.ne.jp/qa/8610267.html 同じ間違いをされているのを見て、名前を間違って覚えているのではと老婆心ながら心配しております。
atest を英単語として抜き出すために、 単語の前に単語境界の文字クラス \b を指定すればよいかと 結果1 = 文字列.replace(/\btest\/\d+/, "ttp://$&"); 結果2 = 文字列.replace(/\batest\/\d+/, "ttp://$&"); 文字列)ふぁぇいじょatest/12345えあいふぉあいじぇふぉtest/23456だふぉえ 結果1) ふぁぇいじょatest/12345えあいふぉあいじぇふぉttp://test/23456だふぉえ 結果2) ふぁぇいじょttp://atest/12345えあいふぉあいじぇふぉtest/23456だふぉえ
slimbox2ってまったく存じませんので、内容を知らずに空想してみただけですが、回答が無いようなので・・・ ＞可能であればコメント部分のみスクロールさせる 想像では、コメント表示の部分が一つの要素になっていると思います。（divなど） ＞一行二行ですと影響はないのですが、 とのことなので、heightを1行または2行に固定する、あるいはmax-heightを2行に設定するなどしておいて、overflow:scroll等としておくことで、実現できそうな気がしますがいかがでしょうか？ 元のスクリプトがコメント欄のstyleを書き換えたりしていなければ、この方法ならCSSのみの変更で実現できる可能性があります。 ＞表示された画像のウィンドにカーソルを置くとコメントが表示される 上と同様に、コメント部分を通常時は非表示（display:none)となるようにしておいて、マウスオーバー時のイベント部分のスクリプトを追記することになるかと。 この場合は、元からあるコメント欄を利用するか、整合をとるのが面倒なら元のものは非表示のままで、新しいコメント欄を作成し表示するということも考えられます。 いずれにしろ、コメント部分がフロートして表示するようにしておく必要があると思われますので、position:absoluteなどにしておいて、位置を画像との相対位置で固定しておくかスクリプトで計算するかなどが必要となるでしょう。 そのままではうまくいかない可能性も高いですが、何かのヒントにでもなれば幸いです。
こんにちは 既に実験済みかもしれませんが、 input type="text" が空文字のままフォーカスが外れたらエラーにする方法はどうでしょうか？ サンプル <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>exValidationサンプル 2</title> </head> <body onload="fc()"> <div class="pagebody"> <h1>exValidation</h1> <form name="js" action="test.php" method="post"> <p class="attention">*は必須項目です</p> <table> <tbody> <tr> <th>Name<span>*</span></th> <td><input type="text" id="name" name="name" value="" onblur="ot(1)"></td> </tr> <tr> <th>Kana<span>*</span></th> <td><input type="text" id="kana" name="kana" value="" onblur="ot(2)"></td> </tr> <tr> </table> <p class="submit"><input type="submit" value="Submit" class="button" /></p> </form> </div> <script type="text/javascript"> function fc(){ document.js.name.focus(); } function ot(n){ if(n==1){ var nam=document.js.name.value; if(nam==""){ alert("ここは必須項目です。"); } }else if(n==2){ var kan=document.js.kana.value; if(kan==""){ alert("ここは必須項目です。"); } } } </script> </body> </html>
rand = Math.floor(Math.random()*5); var rand = Math.floor(Math.random()*5); -- var 全ての枠 = document.getElementById('omikujiwaku').querySelectorAll('td'); var 全ての枠 = document.querySelectorAll('#omikujiwaku td'); -- Array.prototype.slice.apply(全ての枠).forEach(枠毎の処理); Array.prototype.forEach.call (全ての枠, 枠毎の処理); -- <form><input type="button" value="クリック" onclick="hoge()"></form> -- <script> var omikuji = (function (list) { 　var len = list.length; 　var rnd = Math.random; 　return function () { 　　return list[rnd () * len | 0]; }; })('ABCDE'); function hoge () { 　var b = document.querySelectorAll('#omikujiwaku td'); 　var c = function (td) { td.textContent = this () }; 　Array.prototype.forEach.call (b, c, omikuji); } </script>
質問の意味がよくわからないのですが… 「OK」ボタンを押してもダイアログを閉じたくないという意味でしょうか？ alertを用いる以上、そういう仕様でできているので変えるのは無理でしょう。 そのようなことをしたいのであれば、ダイアログを自作すればよいのでは？ jQueryを使用しているようですので、jQueryUIのDialogを利用すれば比較的簡単に実現可能と思います。 ◇サンプル 　http://jqueryui.com/dialog/#default ◇API ドキュメント 　http://api.jqueryui.com/dialog/ ＞表示されるダイアログを消すとエラーメッセージも消えてしまう。 ダイアログにメッセージを表示する限り、「ダイアログを消すとメッセージも消える」のは仕方のないことですので、これを避けたければダイアログ以外の部分にメッセージを表示すればよろしいかと思います。 どこがよいのかは質問者のご判断によりますが、現在の表示内容に挿入するとか・・・ 　http://alphasis.info/jquery-api/manipulation/dom …
$(function() { setInterval( "slideSwitch()", 5000 ); }); の部分を $(function() { slideSwitch(); setInterval( "slideSwitch()", 5000 ); }); としてしみてはいかがでしょう。
DirectionsRendererのoption設定で、色や太さを設定できます。 ＞ネットで調べてますと map apiに関しては本家のgoogleから詳細なドキュメントが公開されていますので、そちらを調べるのが一番です。 （この回答もそこを見ただけです。） https://developers.google.com/maps/documentation … 具体的には、初期設定で、 directionsDisplay = new google.maps.DirectionsRenderer(); directionsDisplay.setOptions({ 　polylineOptions: { strokeColor:"#f00", strokeWeight:6 } }); とか。 以前、似たようなルート検索の質問がありましたので、ご参考までに。 　http://oshiete.goo.ne.jp/qa/8159078.html
できればよいのでしょうか？　それとも作成しようというのでしょうか？ 前者であれば、lightbox風のライブラリはたくさん作られていますので、そのなかでiframeやinlineでHTMLを表示する機能のあるものを利用すればよいでしょう。 検索すればいろいろ見つかるはずです。 ＜一例＞ Colorbox 　http://www.jacklmoore.com/colorbox/example1/ fancyBox 　http://fancyapps.com/fancybox/#examples
コードは見てませんが・・・ jQueryはgoogleのサイトから読み込むおつもりなのですよね？ URLを再確認してみてください。 ＞　//ajax.googleapis.com/～～ 　　　　　　↓ 　　ｈｔｔｐ://ajax.googleapis.com/ では？ （英数を全角にしてあります）
どうしても無名関数でなければなりませんか？ 名前付き関数にすれば Strict Mode で実行できるのですが…。 (function sample () { 　'use strict'; 　// 処理 　setTimeout(sample, 600); }()); # Re: 3466349さん
ご使用のライブラリの種類やHTNMLの構造が不明なので、まったくわかりませんが、当たるも八卦のエスパー推測で・・・ ＞のぶぶんが実はよくわかってません。 全体の仕組みをきちんと理解しましょう。（と言いながら、勝手な推測ですが。） styleのmarginを変えることで要素を移動させてスライドしていると推測されます。300や200は移動量で現在の位置から相対的に計算しているのではないですか？ -300は左へ+200は右へとなると思いますが、なぜ絶対値が違うのかは質問者様にしかわかりません。 いずれにしろコールバックで最終的にmarginの値を調整していますので、現在位置からの指定をする必要もないように思えますが… 想像では、コードの前半は動作するけれど、後半部分が動作しないということでしょうか？ 後半のコールバックで最後の子要素を先頭に移動し、leftの値を初期値に戻しているつもり思いますが、まずセレクタの:lestが違っていると思われます。また、appendTo()では最後に追加されるので結局なにもしません。先頭に移動する必要があるのではないでしょうか？ さらに、処理の順序を逆にしないと（移動させてからスライド）、スライド中は空白が見えていて、スライド終了時に要素が表示されることになると推測されます。 ざっと見ただけですが、アニメ処理の終了前にイベントが複数回発生した場合はどうなるんだろうか？ （キューに溜めておいてくれる方式なら良いですが、そのまま処理される場合は計算位置がずれそう…） いちいち、要素を移動しないで最初に要素を一つ複製・追加しておいて、スライドのための値（例ではmargin)が常に一定範囲内にあるように制御しておくという方法もあると思います。 こちらのほうが、手順を気にする必要がありませんし、位置も単純にmodをとるだけですみますので、簡単といえば簡単かと。 まぁ、当たるも八卦なので、読み飛ばしてください。
filterが使えるなら・・・ var filter0 = function(e){ return !(e["prop1_2"] == 2); } var result = objLst.filter(filter0); とか。
１．アンダーバーの途中で入力されると面倒なので 　　keydownイベントでフォーカスをテキストボックスの先頭に移動する。 　　正規表現を使って半角数字以外が入力されたら無視する。 ２．keyupイベントで文字数をカウントし、９桁になるように調節する 　　(10桁以上だったらアンダーバーを削除、BackSpaceなどで文字が減ったらアンダーバー追加)
右の方から左に移動した後、下に移動する(拡大はしない) という動きなら下記のように。 動きを連続する場合はanimateイベントを複数定義しましょう。 <html> <head> </head> <body> <img id="anime" style="position:absolute;left:500px;top:0px" src="ooo"> </body> </html> <script> jQuery(function(){ $('#anime').animate({ left : '0px' },15000).animate({ top : '500px' },15000); }); </script>
google mapに関してはgoogleさんに聞くのが一番でしょう。 apiに関しての情報は以下に（ここが一番確実です） https://developers.google.com/maps/documentation … マーカのアイコンを別の画像に変えるだけなら、optionのiconプロパティに使用画像のURLを指定してあげればよいです。 https://developers.google.com/maps/documentation …
一応こんな感じでチャレンジしてみてください <script> function setHoge(str){ var t=document.getElementById("hoge"); var p=0; if(!document.selection){ window.getSelection(); p = t.selectionStart; }else{ t.focus(); var range = document.selection.createRange(); range.moveStart( "character", - t.value.length ); p = range.text.length; } var v=t.value; v=v.substr(0,p)+str+v.substr(p); t.value=v; } </script> <input type="text" value="abcxyz" id="hoge"> <a href="#" onclick="setHoge('10:00')">10:00</a>
#2での動作確認はとれているのですが・・・ ご提示されたソースなら下記のようにしてみてください。 同じくKeyupイベントで表示・非表示を切り替えています。 <script> <!-- $(function(){ $(":input").css("backgroundColor","#ff3300") .click("focus",function(){ $(this).css("backgroundColor","#fff") }) .blur(function(){ if($(this).val()==""){ $(this).css("backgroundColor","#ff3300") } }) .keyup(function(){ if($(this).val()==""){ $(this).parent().next().css("display","inline") } else { $(this).parent().next().css("display","none"); } }); }); $(function(){ if($(":input").val()==""){ $("em").text("記入漏れ") } }); --> </script> </head> <body> <form action="#" method="POST"> <p>氏名<input type="text" size="20px"></p> <em></em> <p>住所<input type="text" size="20px"></p> <em></em> <p>電話番号<input type="text" size="20px"></p> <em></em> </form> </body> またはこうすると解りやすいでしょうか。 こちらだとフォーカスが外れたとき（背景色を赤にするのと同じタイミング）に emの表示・非表示を変更しています。 $(function(){ $(":input").css("backgroundColor","#ff3300") .click("focus",function(){ $(this).css("backgroundColor","#fff") }) .blur(function(){ if($(this).val()==""){ $(this).css("backgroundColor","#ff3300"); $(this).parent().next().css("display","inline"); } else { $(this).parent().next().css("display","none"); } }) }); $(function(){ if($(":input").val()==""){ $("em").text("記入漏れ") } }); -->
＞しかしながら、なぜこれでうまくいくのかは結局分かりません。 質問者様がご提示のコードは、「新しいセレクトを生成する」コードになっています。 例えば、最初のコードで 　＞setSelect(1, 10); 　＞$(document.body).append(select); 　＞setSelect(2, 6); 　　$(document.body).append(select); //追加 などとしてみれば、セレクト要素が追加されるのがわかるでしょう。 一方で、なさりたいことは、「同じselect要素に対してオプションの内容を入れ替える」ということかと推測します。 その場合は対象となるselect要素は固定なので、最初にselect要素を作成しさえすれば良く、また、入れ替えるためには一旦内容を空にしてから必要なものを追加するようにしておく必要があります。 別の考え方として、ご提示のコードのように新しくselect要素を作成し、それまでのものとそっくり入れ替える（もとのものを削除し、新しいものを追加する）ようにしても、ご希望のような結果になると思います。
function insert(html) { _ var target = $('#warpper'); _ var items = target.children('div.box'); _ var n = items.length; _ var i = Math.random() * (n+1) | 0; // 0以上n以下の数 _ if (i < n) _ _ items.eq(i).before(html); // i番目の子要素の前に追加 _ else _ _ target.append(html); // 末尾に追加 } insert('<div id=hogeA></div>'); insert('<div id=hogeB></div>'); insert('<div id=hogeC></div>');
改行とコロンで分割してあげればよいのではないでしょうか。 データとしてどのような文字列があり得るのかがよくわからないので、基本的な考え方のみですが… var separator = " : "; var responseText = ["~ A ~", "a : aa", "b : bb", "c : cc", "~ B ~", "d : dd"].join("\r\n"); alert("responseText =\n\n" + responseText); var obj = {}, i, a; var r = responseText.replace(/\r?\n/g, "\r").split("\r"); for(i=0; i<r.length; i++){ 　a = r[i].split(separator); 　if(a.length >= 2) obj[a[0]] =　a[1]; } alert(obj["a"]); //aa alert(obj["c"]); //cc
> プログラムの文字列表現から抜け出したい document.write → 親要素.appendChild <td onclick="処理"> → td要素.addEventListener('click',処理,false) 以下サンプルです <div id=kokoniTableKake></div> <script>(function(){ var _; _ ; var User = function (name, age) { _ , _ ; this.name = name; _ , _ ; this.age = age; _ , _ ; this.show = function(){ alert(this.name +" ("+ this.age+")") }; _ ; } _ ; var UsersTableBuilder = function(users) { _ , _ ; this.makeListener = function(user) { return function(event){user.show()} }; _ , _ ; this.appendTableTo = function(id) { _ , _ , _ ; var tab = document.createElement('table'); _ , _ , _ ; tab.setAttribute('border', true); _ , _ , _ ; for (var uid in users) { _ , _ , _ , _ ; var td = document.createElement('td'); _ , _ , _ , _ ; var tr = document.createElement('tr'); _ , _ , _ , _ ; tab.appendChild(tr).appendChild(td); _ , _ , _ , _ ; var listener = this.makeListener(users[uid]); _ , _ , _ , _ ; td.addEventListener('click', listener, false); // onclick の代替 _ , _ , _ , _ ; td.textContent = uid; _ , _ , _ ; } _ , _ , _ ; document.getElementById(id).appendChild(tab); // write の代替 _ , _ ; }; _ ; }; _ ; var users = { NkxyZ: new User("Taro", 41), BkcSk: new User("Hanako", 17), HnViOj: new User("Harushige", 8) }; _ ; var builder = new UsersTableBuilder(users); _ ; builder.appendTableTo('kokoniTableKake'); })()</script>
#1さんの回答通りですね。 jQueryのバージョンを1.8.3にすれば問題なく動作すると思います。 Web上に流通しているプラグインや、ノウハウサイトの情報は、メンテナンスされていないものはほとんど1.9.x以降で使えません。
こんにちは。 setTimeoutなどを利用して一旦ブラウザに処理を渡すことで、ディスプレイに表示が反映されることと思います。 setTimeout(function(){ 　　//続けて行う表示後の処理 }, 10);
出来ないと思ったほうがいいです。 ブラウザアプリなら可能性があります。
jqueryですよね。 jqueryもjavascript、そのものですけど・・・ プログラムミスしてない限り、それらのみならず他の言語でも衝突しないようにすれば動作します。
ご質問の意味をよくつかめてませんが… ＞下記サイトのスライドショーを作成したい すでに出来上がっているのではないでしょうか？ どこかを変えて改良したいということ？　あるいは、似たものを自作したいということでしょうか？ ご提示のサイトもjQueryを利用しているようですので、そのままでご質問の回答になっているともいえるかと。 自作するにしても、どこまでできているかによって、アドバイスできることが変わってくると思います。 内容を確認したわけではありませんが、とりあえずご提示のサイトの考え方に近いもの 　1）表示用の外枠としてwidth:100%; overflow:hidden; のdivを用意 　2）その中でfloat:leftのli要素を並べておいて、親のul全体をスライドさせる仕組み ここまでは、スライドショーで一般的に用いられている方法だと思います。 センタリングをする際の工夫として 　3）ulのleftを調整して3枚目くらいの画像のセンターとdivのセンターを合わせておく 　4）スライドさせるときはleftの値ではなく、margin-leftを変えることでスライド このようにすることで、スライドの機能とセンタリングの機能を個別に制御できるようにしていると思われます。 また、ウィンドウサイズの変更がスライド中に起こっても、調整する値が干渉することを避ける工夫と思います。 　5）センタリングされるのは3枚目と固定しているので、スライドが終わった時点で、 　　 li要素を最初（最後）にひとつ送るという方法をとっているようです 　6）リサイズされた場合には、3）と同様の調整をしてセンタリングを保持する ・・・といった仕組みにすることで作成可能かと思います。 もちろん、違う考え方でも同様のものを実現することは可能でしょう。 ＞中央画像のみのスライドショーしかみつけられませんでした ほとんどのスライドショーはその両側に前（次）の画像がレイアウトされていると思いますので、表示範囲と位置を調整すれば仕組みはほとんどそのままでもいける可能性があります。
＞ちなみに、時間の指定は中途半端な　 　上記のスクリプトだと 　$min に0～59入ってます。 　秒なら $sec 　　ランダムに表示させることもできるし。
そういったケースでは、IDを１つ１つ付けるべきではありません。 行数、列数が分かっていれば('#board td')で一連のリストとして取得するか、 どうしても二次元リストが良ければ('#board tr')で取得してその後('td')で取得すればできます。
ローカル保存は無理。googleのTOPアニメ等は全てHTML5で作成され動いてるので、基本web上に設置され、googleにアクセス出来る環境下で無いと表示or動作しません。 P.S. google歴代のTOP画像は全て、以下の「Doodles」にアーカイブされます。 ＞http://www.google.com/doodles 今回の「ルービックキューブ」ももちろん、TOPから消えた後もココに収蔵され、何時でもアクセス可能な状態として保存されます。キモチは分からない事も無いですが、貴方のしようとしてる事は相手が望んでいない使い方なのです。googleのサービスは基本、全て無料ですが。「無料=勝手に盗んでも良い」ではありません。
window.onload = kansu; 例えばこのようにした場合、 kansu関数を呼び出したいのはonloadイベントの時であって この文が実行された時点ではないはずです。 この文の時点では、onloadイベント時に実行したい関数（コールバック関数）を設定するだけで関数呼び出しはしないので、 関数呼び出しのための()は不要です。 onloadイベント時に、プログラマには見えないところで window.onload(); が実行されると言えば分かりやすいでしょうか > hoge.onload = kansu; いったん、このような代入をしておけば、 hoge.onload(); のようにして関数を呼び出せますね。 その必要がある場合はそうするすることもあるでしょう。
> alert(document.getElementById("pulldown").length); この文が実行されたときには、 pulldownというidを持つ要素はまだ構築されていませんから getElementByIdは失敗します。 要素構築後のタイミングで実行するように変更して見てください。 例えば window.onload=function (){ alert(document.getElementById("pulldown").length); };
まずsetTimeoutはダメです requestAnimationFrameを使ってください
ページ利用者が正規表現を理解できるならば、 var myWD = $("#my01").val(); を var myRE = mew ErgExp($("#my01").val()); に、 if(myTD[0].indexOf(myWD,0) > -1 || i==0){ を if(myRE.test(myTD[0]) || i==0){ に変えれば正規表現によるあいまい検索ができます。 正規表現については以下のページを参照願います。 https://developer.mozilla.org/ja/docs/Web/JavaSc … （以下、独り言） しかし、質問のページの、全ての変数名を my で始めて以下大文字という命名規約は何なんだかなぁ……
#2 です。補足読みました。 > 左側のソースコードの進み具合で、右側の店データの100件が絞り込みされていく様を、 何か勘違いされているようですが、ソースコードは1行ずつ読み出して逐次実行する仕組みではないですよ？ もし、そうなら下記コードは実行できないですよね？ ---- a(); // 関数呼び出しを試みるが、関数宣言はこの行よりしたなので実行できない！ function a () { // 処理 } ---- 内部動作を確認したいのでしたら、開発者ツールを使いこなすことをお勧めします。
No.2 の回答に追記です > 閲覧から編集を押すとWindowsのメモ帳みたいに書き込んだ内容も表示され... 関数 onShowLink は、閲覧ページに内容を表示する処理ですが、 編集ページにも表示させる様に処理を追加しましょう これで閲覧から編集にページが移っても内容はそのまま表示されます $("#UpdateId").val(id); $("#UpdateText").val(text); id/text の中身ですが、推測するにこのような感じでしょうか var id = $li.data("id"); var text = $li.find("p").text();
Geolocation API を使用すればクライアント端末に搭載されているGPSを利用して現在地を取得できます。 http://www.w3.org/TR/geolocation-API/ https://developer.mozilla.org/ja/docs/WebAPI/Usi … ただし、クライアント端末にGPSが搭載されており、ユーザがGPS情報を送信することを許可した場合に限ります。 これはユーザのプライバシーを守るための措置ですので、ユーザの同意なしに現在地を取得することは出来ません。 https://www.google.com/intl/ja/chrome/browser/pr … # ぐるなび系のサイトで現在地に近いレストランを案内してくれたら便利そうですね。
こんにちは。 PCの時間は、一応ミリ秒（1/1000秒）単位になっています。 ご提示のスクリプトでは 　＞diff = Math.floor( 　＞( point.getTime() - now.getTime() ) / 1000 ); としているところで、最初に 1/1000 にしているので、秒単位にしていることになります。 ここを1000で割らずに、ミリ秒単位のままにしておいて、そのかわり後の計算をこれに応じて修正し、1000以下の数値分をミリ秒として追加表示すればご質問のようなことが可能になります。 ただし、計算速度がそれほど速くはないと思いますので、計算のインターバルを1/1000秒にすることはナンセンスでしょう。 それなので、精度が表示に見合っているかといえば、それは期待できないことになりそうです。 （仮に表示できたとしても、人が1/1000秒を読みとれるとも思えませんが…）　
こういうことでしょうか？ $(function(){ var ul = $("ul.update-scroll"); $("li", ul).click(function(){ ul.animate({ scrollTop : ul.scrollTop() + $(this).offset().top - ul.offset().top }, "fast"); }); });
</input>って、ひつよう？むしするのは、かまわないが。 <table border="1" class="long_width"> 　<tr> 　　<td><input type="checkbox">少なくとも質問へのお礼はすべきだ。</td> 　<tr> 　　<td><input type="checkbox">好きで回答者をしているのだから、スルーしても良い</td> </table> <script> /*@cc_on@*/ function handle (e) { 　var t = e./*@if(1) srcElement @else@*/ target /*@end@*/; 　var r, c; 　if (t.tagName === "TD") { 　　r = t.parentNode.rowIndex + 1; 　　c = t.cellIndex + 1; 　　alert(['R',r,'C',c," のTDだよ！"].join ('')); 　　alert(['中身は、', t./*@if(1) innerText @else@*/ textContent /*@end@*/].join('')); 　} } document./*@if(1)attachEvent('on' + @else@*/addEventListener (/*@end@*/ 'click', handle, false); </script>
こんにちは。　ANo1、2です。 ＞「test_image」という白画像が表示されます 画像要素のaltに設定している「test_image」が表示されているものと思われます。 （スクリプトのaltを設定する文字を変えてみることで、確認できます） 要は、画像が表示できないのでブラウザが代替としてalt属性を表示しているのではないでしょうか。 原因としては 　1）画像指定のURLが間違っている、または、画像データが壊れているなど 　2）画像の読み込みに時間がかかっていて、まだ表示できない状態である 等が考えられます。 ANo1にも書きましたが、2）への対処方法としては最初に画像をプレロードしておく方法があります。 「画像　プレロード」などをキーに検索してみてください。 前回のご質問ではHTMLが「テンプレート」とのみ記されておりどれだけの自由度があるのか不明でしたが（今でも不明ですが）、HTML内に画像要素を記述できると仮定し、かつ、「次の回に同じものを表示をしない」という制御も不要として、以下のような考え方もありかと。 ・スクリプトは単純に画像要素をシャッフルしているだけです。 ・最初の5個のみの表示はCSSで行っています。（CSS3に対応していないブラウザでは全部表示されますが） *補足のように画像が表示されない場合は、CSSのdisplay;noneの部分を外してご確認ください。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #hoge img{ width:150px; height:100px; padding:1px; } #hoge img:nth-child(n+6){ display:none; } </style> <script type="text/javascript"> window.onload = function(){ var target = document.getElementById("hoge"); var images = target.getElementsByTagName("img"); var i, imgs = []; for (i=0; i<images.length; i++) imgs[i] = images[i]; setInterval(function(){ 　shaffle(imgs); 　for(var i=0; i<imgs.length; i++) target.appendChild(imgs[i]); }, 5000); function shaffle(a){ 　var n = a.length; 　while(n){ 　　var j = Math.random()*n | 0; 　　var t = a[--n]; 　　a[n] = a[j]; 　　a[j] = t; 　} } } </script> </head> <body> <div id="hoge"> <img src="img/photo00.jpg" alt="test_image1"> <img src="img/photo01.jpg" alt="test_image2"> <img src="img/photo02.jpg" alt="test_image3"> <img src="img/photo03.jpg" alt="test_image4"> <img src="img/photo04.jpg" alt="test_image5"> <img src="img/photo05.jpg" alt="test_image6"> <img src="img/photo06.jpg" alt="test_image7"> <img src="img/photo07.jpg" alt="test_image8"> <img src="img/photo08.jpg" alt="test_image9"> <img src="img/photo09.jpg" alt="test_image10"> <img src="img/photo10.jpg" alt="test_image11"> </div> </body> </html>
onclick="onClk("1");" となっていますが onclick="onClk('1');" の打ち間違いでしょうか？ onclick="onClk("1");" ですと文法エラーで実行できません。 修正するか 下記のように直接関数を呼んでしまいましょう。 var inputs = document.getElementsByTagName("input"); for (var i = 0, l = inputs.length; i < l; i++) { var input = inputs[i]; if (input.value== "OK") { onClk("1"); break; } }
<script type="text/javascript" src="パス"/> <script type="text/javascript"> <!-- --> </script> こういう風に きちんと書けば解決する気がする
document.MainForm.submit() じゃダメなの？ あとは document.MainForm.elements[0].click() とか document.getElementsByTagName("input")[0] とか var inputs = document.getElementsByTagName("input"); for (var i = 0, l = inputs.length; i < l; i++) { var input = inputs[i]; if (input.type == "submit") { input.click(); break; } } とかしてもいいわね
こんにちは。 ＞『hoge』が変数として認識されず hogeがkeyの文字列なら、以下の例のような指定方法でためしてみてください。 ＞column』の部分は変動する為、～～値は別の処理で取得することができます 対象オブジェクトから直接そのkeyも取得できますよ。 ＜参考例＞ var jsonData = [{"ID":"1","hoge":"aaa"},{"ID":"2","fuga":"bbb"}]; var i, j, k, data = ""; for(i = 0; j = jsonData[i++];){ 　for(k in j) data += "[ " + k + " : " + j[k] + " ] "; 　data += "\n"; } alert(data);
たとえば基本的に隠しておいて、任意のデータが選ばれた時だけ 表示をすればいいのでは？ styleを直接いじってもいいし、class名を調整するのでいいでしょう たとえばhogeの2を選んだとき、fugaが表示されるのならこんな感じ なお表示しないものをサブミットしたくないならdisableを調整する必要があります <style> input.hide {display:none;} </style> <script> function display_fuga(){ var hoge=document.getElementById("hoge"); var fuga=document.getElementById("fuga"); var reg=/(^| )hide( |$)/; var c=fuga.className.replace(reg,""); var v=hoge.options[hoge.selectedIndex].value; fuga.className=c+(v!="2"?((c==""?"":" ")+"hide"):""); } </script> <form> <p> <select name="hoge" id="hoge" onchange="display_fuga()"> <option value="">-</option> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> </select> <input type="text" name="fuga" id="fuga" class="hide"> </p> </form>
「前者」の考え方のとおりです。 変数 sample には jQuery オブジェクトが代入されています。 そのため sample.each(...); といった書き方が可能ですし、そう書いたほうが良いでしょう。 処理量を減らすためと、素直で読みやすいコードにするためです。 $(sample).each(...); でも動作するのは、引数に jQuery オブジェクトを渡すことができるからです。 結果は同じだし便利ですが、そうする必要がない場合は多くあります。 この例などもそうです。 プログラミングに詳しくない方が書いたのでしょう。 プログラミングに詳しくない（詳しくなる時間を用意できない）方でも簡単に利用できるのが jQuery の魅力です。 反面、サンプルコードを見極めることが重要になってきます。 まとめ： jQuery(...) の戻り値は jQuery オブジェクトですから var sample = jQuery(window); sample.each(...); と書くことができます。
javascriptはスクリプト言語(スクリプトとは台本)でそれを読み込んで動作するプログラムです。 　ブラウザがそれをしたって、サーバーには何も起きない。 　サーバーに対して、何らかの(javascriptでもよい)アプローチをしなければならない。サーバー側には、それを受け取って処理するプログラムが必要となります。 　PerlなりPHPなり、Rubyでも、AWK、C、Java(javascriptじゃない)なり、サーバーで使えるプログラム言語なら何でもよい。
ストップウォッチなので、小数部は0埋めしたほうが見やすいでしょう 修正前) Math.round(sec*100)/100 修正後) sec.toFixed(2) https://developer.mozilla.org/ja/docs/Web/JavaSc … 「スタート」を連続して押すと挙動が怪しくなるので、 処理前に現在の状態を確認すべきです var timerId = 0; function start() { 　if (timerId) return; // 動作中ならなにもしない 　timerId = 開始処理(); } function stop(){ 　if (!timerId) return; // 停止中ならなにもしない 　停止処理(); 　timerId = 0; } 変数と関数が増えると、変数名の競合が不明確なバグがおきがちですので、 JavaScript らしくオブジェクトに纏めては如何でしょうか <input type="button" onclick="stopwatch.start()"> <input type="button" onclick="stopwatch.stop()"> <script> var stopwatch = { 　sec: 0, 　timerId: 0, 　start: function() { this.timerId = setInterval(...); }, 　stop: function() { clearInterval(this.timerId); }, } <script> ボタンを装飾するのは良いのですが、 background: -moz-linear-gradient( ... ); background: -webkit-gradient( ... ); color: #FFF; では、mozでもwebkitでもないブラウザでは見づらくなると推測します。 なので、最低でもこれを併せて指定してください background: #09C; // どんな環境でも最低限には表示 background: linear-gradient( ... ); // CSS3形式
画像のロード時間のせいみたいなので、 最初に 　.hide { display:none}のようなcssを定義。 　photo0～phpto10まで、全てのimgタグを作り、class=hide をつける。 としておき、setIntervalの中で、 　#area > img にeach()でhideをつける。 　見せたい１つのimgだけはhideを外す。 としてはどうでしょうか。
ブラウザ判定には、主にnavigator.userAgentを参照します。 ieのバージョンで区別するなら、navigator.appVersionも見る必要があります。 html自体も、ブラウザのバージョンも日々変わっているので、 常に学びなおす必要はありますね。 今のご時世、問題さえはっきりしていれば、大抵のことはネットで検索するだけで 情報がでてくるので、敢えて本を買う必要もありません。 他の回答にある通り、jqueryなどのライブラリを使えば、 そういったブラウザごとの違いを意識せずに一定の書き方ができます (だからそんなのはjqueryでやれ、というのは決めつけすぎな気もしますが)。 今後新しくプログラムを書く機会があれば、検討してみてください。
こんにちは。 ＞テキストエリアにidをつけて保存する 任意のidでよければ、順に番号を付けてhoge0、hoge1、hoge2・・・とでもすれば良いですが、そもそもこのidって意味なくないですか？ いっそのこと１データにしてしまい、キー入力できないコード（たとえばtabとかesc)をセパレータとしてつなげておいて、読込み時にはsplitで分割するとかにすれば、keyは固定の一つですむと思います。 ＞テキストエリアの個数が決まっていなく あるだけ読み出せるはずです。 現在の方法でやるなら、localStorage.lengthで個数が取得できますので、それぞれに対して localStorage.key(n)でkeyが、localStorage[n]で値が取得できるはずです。 ＞改行して表示するにはどうすればいいのでしょうか？ ANo1様がすでにお答えのように、テキストエリアをブロック要素の子要素として位置づけるか、CSSで直接display:blockに設定するとかで可能かと。
＞ボタンを押すたびにテキストボックスを追加できるようにしたいです ＞functionで呼び出すにはどうすればいいのですか？ なかなかざっくりした質問ですね 基本的にはこんな感じ <script> function func(obj){ var tb=document.createElement("input"); tb.setAttribute("type","text"); tb.setAttribute("name","hoge"); tb.setAttribute("value","hoge"); obj.form.appendChild(tb); } </script> <form> <input type="button" value="add textbox" onclick="func(this)"> </form> nameやvalueの設定をどうするか仕様が提示されていないのでなんとも・・・
﻿<!DOCTYPE html> <title></title> <meta charset="utf-8"> <body> <form onsubmit="color(event)"> <p>好きな動物は？ <p> <label><input type="radio" name="q1" value="A">うさぎ</label> <label><input type="radio" name="q1" value="B">カメ</label> <label><input type="radio" name="q1" value="C">イルカ</label> <label><input type="radio" name="q1" value="D">くま</label> <p>好きな場所は？ <p> <label><input type="radio" name="q2" value="A">空</label> <label><input type="radio" name="q2" value="B">森</label> <label><input type="radio" name="q2" value="C">海</label> <label><input type="radio" name="q2" value="D">畑</label> <p>好きな食べ物は？ <p> <label><input type="radio" name="q3" value="A">豆腐</label> <label><input type="radio" name="q3" value="B">ブロッコリー</label> <label><input type="radio" name="q3" value="C">なす</label> <label><input type="radio" name="q3" value="D">ハンバーグ</label> <p> <input type="submit" value="診断"> </form> <script> function color (event) { 　var col = {A: '白', B:'緑', C:'青', D:'茶色'}; 　var form = event.target; 　var list = [ 　　form.querySelectorAll ('input[type="radio"][name^=q][value="A"]:checked'), 　　form.querySelectorAll ('input[type="radio"][name^=q][value="B"]:checked'), 　　form.querySelectorAll ('input[type="radio"][name^=q][value="C"]:checked'), 　　form.querySelectorAll ('input[type="radio"][name^=q][value="D"]:checked') 　]; 　var radio = list.reduce (function (a, b) { return a.length < b.length ? b: a}); 　var result = radio.length ? col[radio[0].value] + 'が好き': 'ひねくれもの'; 　 　alert ('あなたは、' + result); 　 　event.preventDefault (); } </script>
普通、そういうものには「タグ」を使って識別します。たとえば「jump_object」というようなタグを作って、ジャンプさせたいゲームオブジェクトにそのタグを設定しておきます。そして、クリックしたGameObjectのtagをチェックし、それが指定の名前ならAddForceさせればいいわけです。 if ( [チェックするGameObject].tag == 'jump_object'){ ……AddForceなどの処理…… }
＞labelの位置は　文字をクリックしたときにチェックボックスも・・・・点線で囲まれていてほしい、と言われたのでその位置にしてあるそうです。 どうしてもということであれば、とめませんが・・・ 某世界で一番普及しているクズなブラウザだと、１クリックでチェックは入れられても もうワンクリックしてもチェックが外れなかったりしてUI最悪ですがよろしいですね？
parentNodeやfirstChild、nodeNameなどの内容を、HTML構造に合わせて書き直してください。
＞iPhoneの画面は９００PXもないので 　すが、iphoneは自動的に解像度を変更する機能がありますから。 　全体が小さくなって表示されるはずです。 <meta name="viewport" content="width=device-width, initial-scale=1.0"> スタイルシート html {-webkit-text-size-adjust: 100%} @media screen and (max-width: 900px){ img.bigSize{ display:none; }/* 必ず基点となるセレクタを書く癖をつける */ } 　なお、画像を消すのではなく画像の大きさをリキッドにするほうが良いです。 　900px程度で分けるのでしたら、ページ自体をリキッドで製作したので十分だと思います。 [HTML4.01](XHTML1.0,XHTML1.1含む) <body> 　<div class="header"> 　　<h1><img src="[画像へのパス]" width="900" height="120" alt="このページのタイトル"></h1> 　</div> 　<div class="section"> 　</div> 　<div class="footer"> 　</div> </body> div.header,div.section,div.footer{ width:90%;min-width:630px;max-width:1000px; margin:0 auto;padding:5px; } div.header h1{ position:relative; } div.header h1 img{ display:block; width:100%;height:auto; } div.header{ background-image:url([背景画像へのパス]); background-size:cover; }
最終的に何をしたいのかによりますが、単純に、「ページ遷移を含む自動操作がしたい」ということならば、私ならUserScriptを使います。 このURLの時にはこの処理を実行する、とif文で書き分ければ1枚のファイルで対応できます。 各ページ用の処理を別のファイルに書き@includeを指定しすれば、複数のファイルを用意する事になりますが、if文での処理わけはしなくて済み、内容をシンプルに書けます。 UserScriptの書き方メモ - Miuran Business Systems http://www.m-bsys.com/code/userscript-memo ChromeでUserScriptを動かしてみた - 積極的にメモっていく姿勢 http://tomio2480.hatenablog.com/entry/20130706/1 …
全体が何をやっているのかわかってませんが… ＞特に平方根の処理(Math.sqrt)が全く分かりません;; 単純に、ピタゴラスの定理(三平方の定理)を利用して、2点間の距離を算出しているのではないのでしょうか？ http://contest.japias.jp/tqj2002/50027/page182.h … http://ja.wikipedia.org/wiki/%E3%83%94%E3%82%BF% …
残念ながらできません。 規定のダイアログが表示されるのみです。 閉じるという操作の制御はかなり限定されています。 悪意のあるコードを実行させないためです。 おせっかいですが、閉じる前にお知らせを出す行為がユーザーに嫌われないかもう一度考えてみては。 最低限の場面でシンプルな規定の画面を出すだけで十分効果があるのではないでしょうか。 詳細は「javascript beforeunload」と検索し調べてください。
なんでもかんでも jQuery をもちださなくても。 script 要素も移動する必要がありますか？というかそこに必要なのか？ テキストノードは適当に何かの要素で囲んでね。 （＊）の手前の要素には、id="piyo" を追加！ そのうち、insertAfter を使った回答が… function i (e) { 　this.parentNode.insertBefore (e, this); } function hoge () { 　var c = document.querySelectorAll ('body > table:nth-of-type(1) td > *'); 　var b = document.querySelector ('#piyo').nextElementSibling; 　 　Array.prototype.forEach.call (c, i, b); } hoge ();
F12 開発者ツールのコンソールにエラーが出ていたりしませんか。
何をどうしたいのかよく読み取れませんが・・・ ajaxとjsonの両方に誤解があるようです。 （jQueryを使用していると仮定） 　＞$.getJSON('hoge.json', function(data) { ご質問文通りの構成であるなら、上の文で指定しているファイルはJSONファイルではなくスクリプトファイルになっています。 getJSONで取得したいのなら、JSON形式のデータファイルを用意するか、サーバサイドのプログラムからJSONデータを出力するなどが必要です。 あるいは、元のデータがご提示の「hoge.json」のようなスクリプトファイルになっているのであれば、ご提示の例のように 　＞<script type="text/javascript" src="hoge.json"></script> でスクリプトとして読み込めば十分で、ajaxなど用いる必要もなくクロスドメインも気にする必要がなくなります。 　＞コンソールにJSONは出力されているのですが、 ご提示の通りだとするなら、スクリプトタグで実行されたデータがコンソールに出力されているのであって、getJSONで取得しているわけではありません。 　＞$.getJSONにこの出力結果(json_text)を指定するためには、 　＞どうすれば良いでしょうか？ ご提示の内容では、json_textは出力結果ではありません。（どこにも出力されていない） （javascriptの処理結果です。また、javascriptはクライアントサイドで実行されるスクリプトなので、サーバサイドでは処理されません。） 先にも書きましたように、ajaxでjsonを取得したいのなら、指定URLからのレスポンスがJSONになるようにする必要があります。
JSONはNotation（データ形式）であり、プログラムではありません。 プログラムコードを書いてもプログラムとは見なされません。
ご提示のサイトではjavascriptを利用しているようです。 大雑把に言えば、カルーセルタイプの画像スライダーと同じような仕組みと言えます。 使用している画像が左右つながる形にしてあるもの（例えばパノラマ撮影など）であるところが、普通の画像ビューアーとちょっと違うところ。 似たようなものに、マンション販売サイトなどで室内を上下左右に見られるものが良くありますが、こちらは3次元的になっている分複雑ですし、クイックタイムなどが使われていることが多いようですが… 通常の画像ビューアはスライドしたら一旦停止しますが、これを停止せずにスライドの速度を遅くしてautoで動き続きるものをイメージしてみると、似ているということが理解できると思います。 具体的な仕組みとしては、画像要素を直接動かしたり、要素に背景画像を設定しておいて要素を移動させたり、最近のブラウザであれば背景画像の表示位置を変えることでもアニメーションが可能です。 ごく簡単に言えば、CSSでposition:absoluteにしておいてleftの値を逐次変えていくような感じです。 画像ビューアでは矢印やボタンをクリックすることで画像がスライドしますが、これをカーソルの位置やスマホの傾きによって移動速度を変えるようにしておけば、ほぼご質問のようなものになると言えるのではないでしょうか。
こんにちは。 http://www.geocities.co.jp/SiliconValley-Oakland … 参考にしてみてください。 結論から言いますと、タブで開くかウィンドウが新規で開くかJavaScriptから指定することは難しいということです。
>・それとも、文はずっと続いている？ それが正解です。JavaScriptでは、変数の宣言をするとき、カンマで複数文を区切って記述できます。 var a = 1, b = 2, c = 3; 　↓ var a = 1; var b = 2; var c = 3; こういうことです。
すでに回答がでているけれど… var dateString = "0429"; var fileName = dateString + ".txt"; $("#test_text").load(fileName); とか。
こちらでどうでしょう。 //チェックボックスの追加 var cb = document.createElement("input");//チェックを作成 cb.type = "checkbox"; cb.value = todo_id; //CSSを指定する場合 cb.className = "LargeRadio"; //直接スタイルを書き換える場合 cb.style.width = "24px"; cb.style.height = "24px"; cbItems.push(cb);
onchange の要素は、どこで指定する？まさか window にではなさそうですが・・・ a.view ();が呼ばれる度に、同じイベントをくっつけるのは、どうでしょう？ １回きりの呼び出しで、しかもbodyの最後に追加していくだけなのなら、別な方法がよいかも　？ 細かいことですが、body要素の直下に、テキストノードがあるのも、どうでしょう？ this.foo を、xxxxx.addEventListner ('change', this.foo.bind(this), false);みたいにするのは、どうでしょう？ こそっと、違いがわかりません。
デベロッパーツールを拡張する方法があるようです。 https://developer.chrome.com/devtools/docs/integ … 読み込み時間はデベロッパーツールの標準機能に、ネットワーク監視ツールが入っていますので、それを見てください。
これ、「goo.gl/I9bEQf」と実際の画像と、どちらでやってます？ IEで画像見ると、リンクを開いた時の画像のURLと、実際の画像のURLが違うんですが・・・ 変数”URL”に、どっちのURLが読み込まれているか確認してみて下さい。 多分「goo.gl/I9bEQf」が入ってるんじゃないかなぁ・・・ CGIやらでContents-Typeを”image/jpeg”でデータ送ってきてるから、ブラウザはJpeg画像として認識してるんだろうけど、「I9bEQf」って、普通に見たら何か分からないファイルですよね？ だから、直接「I9bEQf」見に行って画像じゃないから 0x0 で出してる・・・・と思ってみたり。
ご呈示のままだと、関数addとinputのname=addが競合する可能性が高いです。 また、jQueryをご利用なら、イベントのバインドもjQuery側から行ったほうがよさそう。 それはおいておいて… 　function hogeAdd(elm){ 　　alert($(elm).prev("select").get(0).value); 　} とかではどうでしょうか？
簡単に言うと、$ という名前が prototype.js と iQuery とで衝突しています。 対処法は多分以下のページがわかりやすいかと思います。 http://www.casleyconsulting.co.jp/blog-engineer/ …
一連のものができているとの前提で・・・ 最後の「駅」の複数選択は、単純にselectをmultipleにすれば実現できます。 「沿線」も同様ですが、その際に選択された内容に応じてループ処理などで「駅」のselectを複数作成するといった仕様でよいのでしょうか？ 実際には、上記のままのような処理だと、「沿線」を選択するごとに「駅」の既入力内容が初期化されてしまい、不便になる可能性があるのと、すでに表示済の駅データを何度も取得するのでは無駄が多すぎます。 それなので、「沿線」の選択内容を変数等で記憶しておいて、差分を見ながら対応する「駅」のselectを作成・削除するような処理にしておけばよろしいのではないでしょうか。 個々の処理に関しては一連の場合とほとんど同じなので特別なことはないと思いますが、複数になっている関係から、ajax時の取得内容を反映する対象（駅select要素）との対応関係に気を付ける必要があるかも。
0010は2進数リテラルではありません。 0～は旧8進数リテラルです。 0b～が2進数リテラルです。
＞印刷用にcssを作れないほど複雑になってしまっている それはないでしょう。HTMLがまずいとしか言いようがない。 　通常は印刷用(スタイルシートなしの状態)を想定して--言い換えれば検索エンジンやテキストブラウザで利用できるようにHTMLを記述して、screen用にデザインしていくものです。 　そのため、印刷用スタイルシートは、基本的にシンプルで簡単なものになるはずです。 　⇒CSSの三段組みレイアウトについて教えて下さい。。( http://oshiete.goo.ne.jp/qa/8567423.html ) 　参照。 　⇒ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) 　のサイト、表示→スタイルシートで様々にデザインが変わりますが、印刷はシンプルなものになるのでスタイルシートは簡単なはずです。
randomI グローバル変数で、中身は関数オブジェクトです。 オブジェクト指向言語である JavaScript では、関数もオブジェクトの一種です。 グローバル変数なので、一度生成されたら廃棄されません。 nTo / nFrom 関数内のローカル変数で、中身は関数の呼び出し元が指定したオブジェクトです。 randomI(2,7) と実行されたら、nTo = 2, nFrom = 7 ですね ローカル変数なので、関数が呼び出される毎に生成されて廃棄されます。 var n = randomI(2,7) 上記が実行されると、グローバル変数 randomI の中身である 関数オブジェクトが以下の様に実行されます。 * ローカル変数 nFrom に 2 を設定する * ローカル変数 nTo に 7 を設定する * ローカル変数 f に 6(=7-2+1) を設定する * システム関数 random を実行し、テキトーな0以上1「未満」の実数を取得 * ローカル変数 f(=6) と乗算して、0以上「6未満」の実数を取得 * システム関数 floor を実行し、0以上「5以下」の「整数」を取得 * ローカル変数 nFrom と和算して、2以上7以下の整数を取得 * 計算した「2以上7以下の整数」を関数の戻り値とする というわけで、 「最小値と最大値を指定すれば、その範囲内でテキトーな整数を考えてくれる」 処理を行ないます ローカル変数 n はその後の処理で、描画する多角形の辺の個数に使用するので、 最小値や最大値を変更すると、描画される図形の形状にいろいろと影響するでしょうが、 うまく言葉にできません。
#1さんのに加えて できれば type=submit ではなく type=button がいいかも？
knockout.jsが最適かと思います。 日本語版解説 ttp://kojs.sukobuto.com/ 本家 http://knockoutjs.com/
まずは過去の質問はきちんと締め切った方がいいわよ onloadイベントで 今日の曜日を取得して 対応するタブを document.getElementById("wd1").click(); のように実行すればいいと思うわ
イベントハンドラは、発生したイベントの詳細を知りたい場合があります。 たとえば「画像をクリックした際の座標」が必要な場合です。 むかーしのブラウザでは、こう書いていました イベントの詳細はグローバル変数である window.event で調べています <img src=hoge.jpg onclick="alert(window.event.offsetX + ',' + window.event.offsetY)"> その後、マルチスレッド安全性とか整合性とかのために、 イベントの詳細はイベントハンドラの引数で調べられるようになりました 要素.onclick = function(event){ 　alert(event.clientX + ',' + event.clientY); }; ですが、ブラウザによっては引数に渡さない仕様のままだったので、 安全の為に以下の様に記述するようになりました。 要素.onclick = function(event){ 　event = event? event: window.event; // 引数がないならグローバル変数を取る 　alert(event.clientX + ',' + event.clientY); }; というわけで、「昔のクロスブラウザ対策におけるイベントの詳細の取り方」と推測します。 ちなみに現在では、すべてのブラウザで以下の記述になります。 要素.addEventListener('click', function(event){ 　alert(event.clientX + ',' + event.clientY) }, false);
数字文字列を数値化しているだけです s = "123" n = -s とすればsは-123になります +だと符号を替えず単に数値化することが出来ます その後の処理で===を使っているので数値化は必須です ==ならいらない処理ですが
var nowDate = new Date(); var weekNumber = nowDate.getDay(); で、曜日の数字(0=日、1=月・・・)が取得できるので 取得した数字によってタブを切り替えてください。
タブの切り替えをどうやっているのかわからないので このままでは誰も回答することができないと思うの
こういうではダメですか？ [].forEach.call(document.getElementsByTagName('pre'), function (elem) { elem.outerHTML = '<button onclick=disp(this)>隠す</button>' + elem.outerHTML }) function disp(bt) { var pre = bt.nextElementSibling bt.textContent = (pre.hidden = !pre.hidden) ? '表示' : '隠す' }
GridViewそのものを知らないのですが、（↓）これのことでしょうか？ 　http://www.jqwidgets.com/jquery-widgets-demo/dem … APIのリファレンスによれば、rowclick、rowselect、rowdoubleclickなどのイベントが用意されているようですので、特に何かをしなくてもそのまま利用できるのではないですか？ （ちゃんと読んではいませんし、確認もしていませんが）
こんにちは。　ANo2です。 広い目で見れば、ご質問の内容と処理内容はかなり似ているといえるので、Ｎｏ1様がおっしゃるように「参考になるようで、ならないようで・・・」かと思います。 なので、スクリプトを流用したり部分修正でできるかというと、まず難しいでしょう。 （そもそもの目的が違うので…） とはいっても処理に関する方法については似ている部分が多いので、スクリプトで何をやっているかがある程度わかれば、似たような方法で実現できることがおわかりになると思います。 ただし、目的や内容が異なりますので、上にも書きましたように、流用するというよりは全部作り直した方がよろしいでしょう。 参考の回答は、当時、二人ともお勉強がてらに回答していたものなので、必ずしも読みやすいスクリプトではありませんし、要領が良いとも言えないものです。 それなので、じっくりとは参考にしない方がよろしいかと思います。（Ｎｏ1様ごめんなさい） 一方で、どうせご質問のような機能を作成するのなら、入力用のＵＩとして再利用が可能なように一般化して、パッケージ化してしまったほうが後々便利なのではないかと思います。 参考サイトに挙げていらっしゃるものもそうですが、jQueryなどを利用することで、作成の手間を大分簡単にすることは可能かと思います。
あまり漠然とした回答も無責任な話ですが。 【質問主様へ】 質問の範囲が広いので、まず、どの部分がわからないのか明確にしてください。 具体的な話はそれからに。 １．json文字列パースによるのObject配列への変換（Ajax使っているならOKみたいですが） ２．現在時刻の文字列整形（抽出比較のため） ３．効率的な抽出処理 ４．３をさらに掘り下げた処理（指定時刻に現番組、次番組がない場合など） ５．取得したObject配列要素の出力形式への整形 ６．出力要素への反映（これは誰でもわかるかｗｗｗ） どの部分？
とっても簡単なサンプルを作ってみました。 　こんなにシンプルで簡単にできることをjquey使うこと無いと思う。WindowsXP/IE7以前はほとんどないし 適当なフォルダーを作って下記ファイルをすべて同階層に入れる。 index.html　book.html　manual.html　styleSheet.css ★<head>内の一部、<div class="nav"></div>内、<div class="footer"></div>内は共通なのでコピペする 　(注意)実際には、SSIなどを使用する。その場合すべての他のファイルへのパスは絶対配置にする。 　そのほうが階層を一切考えないで済むので製作は楽です。今回はサーバー経由しないので相対パス・同階層にしてある。 ★javascriptは使用していませんから、印刷やテキストブラウザ、検索エンジン、携帯電話もOK 　もちろん、スマホも幅広ディスプレイも・・。印刷プレビューやスタイルシートな詩で確認 ★Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html# ) 　でチェック済みHTML4.01strict + CSS2.1 ★サブディレクトリへのリンクもあるが今回は省略 ★背景画像の置換は省略しています。 ※タブは＿に置換してあるので戻す。 [index.html] <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>トップ</title> <!-- 以下共通 --> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<link rel="styleSheet" media="screen" href="./stylesheet.css"> <!-- ここまで共通 --> ＿<style type="text/css" media="screen"> <!-- div.header div.nav ol li a[href="./index.html"]{background-color:fuchsia;} div.section div.nav ol li a[href="./index.html"]:after{content:"　←今ここ!";} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>ようこそ</h1> ＿＿<div class="nav"><!-- ここから --> ＿＿＿<ol> ＿＿＿＿<li><a href="./index.html">Top</a></li> ＿＿＿＿<li><a href="./book.html">著書</a> ＿＿＿＿＿<ol> ＿＿＿＿＿＿<li><a href="./book/1.html">本1</a></li> ＿＿＿＿＿＿<li><a href="./book/2.html">本2</a></li> ＿＿＿＿＿</ol> ＿＿＿＿</li> ＿＿＿＿<li><a href="./manual.html">マニュアル</a> ＿＿＿＿＿<ol> ＿＿＿＿＿＿<li><a href="./manual/1.html">マニュアル1</a></li> ＿＿＿＿＿＿<li><a href="./manual/2.html">マニュアル2</a></li> ＿＿＿＿＿</ol> ＿＿＿＿</li> ＿＿＿</ol> ＿＿</div><!-- ここまでは共通 --> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>本文はsection</p> ＿＿<div class="nav"> ＿＿<!-- 共通に付き省略 --> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2013-03-03</dd> ＿＿</dl> ＿</div> </body> </html> [book.html] <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>著書</title> <!-- この間共通 --> ＿<style type="text/css" media="screen"> <!-- div.header div.nav ol li a[href="./book.html"]{background-color:fuchsia;} div.section div.nav ol li a[href="./book.html"]+ol{display:block;} div.section div.nav ol li a[href="./book.html"]:after{content:"　←今ここ!";} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>著書</h1> ＿＿<div class="nav"> ＿＿＿<!-- 共通に付き省略 --> ＿＿</div> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>本文はsection</p> ＿＿<div class="nav"> ＿＿＿<!-- 共通に付き省略 --> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<!-- footer共通に付き省略 -->> ＿</div> </body> </html> [manual.html] <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>マニュアル</title> <!-- この間共通 --> ＿<style type="text/css"> <!-- div.header div.nav ol li a[href="./manual.html"]{background-color:fuchsia;} div.section div.nav ol li a[href="./manual.html"]+ol{display:block;} div.section div.nav ol li a[href="./manual.html"]:after{content:"　←今ここ!";} --> ＿</style> ＿<style type="text/css" media="screen"> <!-- --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>マニュアル</h1> ＿＿<div class="nav"> ＿＿<!-- 共通に付き省略 -->> ＿＿</div> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>ここに本文記事</p> ＿＿<div class="nav"> ＿＿＿<!-- 共通に付き省略 -->> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<!-- footer共通に付き省略 -->> ＿</div> </body> </html> [styleSheet.css] @charset "Shift_JIS"; html,body{margin:0;padding:0;} h1,h2,h3,h4,h5,h6,p{margin:0;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{width:80%;min-width:630px;max-width:900px;margin:0 auto;padding:5px;position:relative;} div.nav{line-height:30px;text-align:center;} div.nav ol,div.nav ol li{list-style:none;margin:0;padding:
>タイプスクリプトで作ったクラスやネームスペースはどうなってしまうのでしょうか？ JavaScriptにはクラスやネームスペースの概念はありませんので、それぞれFunction、Objectのプロパティで代用します。 ですから、クラスはFunctionに、ネームスペースはObjectに変換されるはずです。
「特定の<a>要素のhref属性」に書かれているURLに飛びたいなら location.href=特定の<a>要素のhref属性値 と書けば良いです。 どうしてもイベントでやりたいのなら、 var mouseevent = document.createEvent("MouseEvent"); mouseevent.initMouseEvent("click",true,true,window,1,0,0,100,100,false,false,false,false,0,null); document.getElementById(　特定の<a>要素のid属性値　).dispatchEvent(mouseevent); id以外は全く同じで良いです。
No.1の方の回答がベストだとは思いますけど参考までに。 このスクリプトはソースを見るとimgタグを順番にフェードさせているようです。 なので、javascriptとcssでimgを指定している箇所を aに変えてしまえばいけると思います。 多分。
* Chrome のデベロッパー・ツールを表示させる * スクリプトの中から意図する表示させる処理の行に、ブレークポイントを設定する * 実行がブレークポイントで止まったら ** 処理で使用する変数の値を検証する ** ブレークポイントから一行ずつステップ実行し、挙動や変数の値を確認する ** 必要ならば変数の値を書き換えてから、ステップ実行する
■ 追加の質問1の回答 addEventListener の第2引数に渡した関数は、 システムから実行される際に、引数としてオブジェクトを一つ渡されます オブジェクトの内容) http://www.w3.org/TR/DOM-Level-2-Events/events.h … 使わないのであれば引数 event を省略しても言語仕様上は問題ありません。 ただ、この関数はリスナー用である、を暗示するために書いています。 ■ 追加の質問2の回答 addEventListener や onload などに指定するコールバック関数は、 一般的に呼び出し元を指定されずに実行されます。 そのため例示したクロージャー等を使った対策で「this を束縛する」のが一般的です。 ■ bind を使った対策 ECMA-262 5th の新機能である Function.prototype.bind を使います 最近になって追加された機能なので、古いブラウザでは使えません var bound = this.foo.bind(this); window.addEventListener( 'load', bound, false ); ■ EventListener インターフェース を使った対策 addEventListener の第2引数は、DOM仕様上は 「EventListener インタフェースを実装するオブジェクト」 でも大丈夫です。 参考) http://www.w3.org/TR/DOM-Level-2-Events/events.h … ですので、ある特定のプロパティをhogeオブジェクトに追加(実装)し、 hogeオブジェクト自体を引数に渡せば、一般的なオブジェクト指向言語っぽくなります function hoge(){ this.handleEvent = function(){ this.foo() }; // 追加 this.view = function(){ window.addEventListener( 'load', this, false ) }; }
別にOSは関係ありません、そういうものではありません ChromeのF12の話であればスクリプトタブではなくコンソールタブです エンターで実行、Shift＋エンターで改行です まあ、ちょっとしたのを試すのにはそこで十分ですが 一般的にはHTMLファイルを作って、その中にスクリプトを書いて、ブラウザで開きます ここのレッスンでも参考にして下さい http://dotinstall.com/lessons/basic_javascript_v2 もしそれでもわからない場合はPCの基礎的な操作の問題です
No1で回答したものです。諸事情により、再回答となります。 恐らく仕様は満たしていると思いますが、やっつけ仕事なのでプログラムの質は低いです。 どういった経緯でご質問されたかは分かり兼ねますが、なるべく処理ごとにコメントを入れましたので、しっかり解析し自分の知識として取り入れて頂ければ幸いです。 プログラムに関してご質問がありましたら遠慮なくどうぞ。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> <html lang="ja"> <head> <meta http-equiv="Content-Language" content="ja"> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <script type="text/javascript" src="http://code.jquery.com/jquery-latest.js"></script> <script> /* 追加関数 */ function addBtn(obj){ // 複製要素ID var slcId = $(obj).parents("div").attr('id'); // 追加要素ID var apdId; // 複製要素取得 var elm = $("#" + slcId).clone(true); // 追加要素id変更 var idFlg; var divIdList = []; var divList = $("body div"); $(divList.each(function() { divIdList.push($(this).attr('id')); })); for(var i = 1; i <= 5; i++) { if($.inArray(i.toString(), divIdList) == -1) { elm = $(elm).attr("id", i); apdId = i; break; } } // 追加セレクトボックス要素取得 selectElm = $(elm).children("select"); // 追加セレクトボックス要素id変更 selectElm.attr("id", "example" + apdId); // 選択された項目を削除 selectElm.children("[value=" + $("#example" + (slcId)).val() + "]").remove(); // セレクトボックス追加 $("#" + slcId).after(elm); // 追加ボタン非表示 $("#" + slcId).children("input[name='add']").css("display","none"); // 取り消しボタン表示 $("#" + slcId).children("input[name='cancel']").removeAttr("style"); // セレクトボックスの項目が1つになったら追加ボタン非表示、かつ取り消しボタン表示 if(selectElm.children().length == 1) { $("#" + apdId).children("input[name='add']").css("display","none"); $("#" + apdId).children("input[name='cancel']").removeAttr("style"); } // 削除値保存 $("#select" + slcId).val($("#example" + (slcId)).val()); } /* 取り消し関数 */ function cancelBtn(obj){ // 削除要素ID var slcId = $(obj).parents("div").attr('id'); // 削除値取得 var delVal = $("#select" + slcId).val(); // 取り消し要素削除 $("#" + slcId).remove(); // 1番新しい要素取得 var lastElm = $("body div:last-child"); // 削除された項目を追加 if(slcId != 5) { // 最後の要素以外が選択された場合 var addFlg = true; // optionに項目が既に存在するか判定 $(lastElm.children("select").children()).each(function() { if($(this).val() == delVal) { addFlg = false; } }); // optionに項目が存在しない場合 if(addFlg) { lastElm.children("select").append($('<option>').html(delVal).val(delVal)); // optionを昇順にソートし再追加 var sortOptionList = lastElm.children("select").children().sort(function(a, b){ var x = a.value; var y = b.value; if (x > y) return 1; if (x < y) return -1; return 0; }); lastElm.children("select").children().remove(); lastElm.children("select").append(sortOptionList); } } // div要素が残り2つで最後の要素が選択された場合 if($("body div").length == 1) { lastElm.children("select").children().remove(); for(var i = 1; i <= 5; i++) { lastElm.children("select").append($('<option>').html(i).val(i)); } } // 要素が1つになったら追加ボタン表示、取り消しボタン非表示 if(lastElm.children("select").children().length == 5) { lastElm.children("input[name='add']").removeAttr("style"); lastElm.children("input[name='cancel']").css("display","none"); // id初期化 lastElm.children("select").attr("id", "example1"); lastElm.attr("id", "1"); } } </script> </head> <!-- 削除値保存用 --> <input type="hidden" id="select1" value=""> <input type="hidden" id="select2" value=""> <input type="hidden" id="select3" value=""> <input type="hidden" id="select4" value=""> <body> <div id="1"> <select id="example1"> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> <option value="4">4</option> <option value="5">5</option> </select> <input type="button" onclick="addBtn(this);" name="add" value="追加"> <input type="button" onclick="cancelBtn(this);" name="cancel" style="display: none;" value="取り消し"> </div> </body> </html>
apiそのものをカスタマイズしようというのではないですよね？（笑） google mapのAPIに関してはgoogleのサイトに説明が豊富に用意されていますので、そこを参考にするのが一番かと思います。 説明だけでなく、サンプルコードもたくさんありますし、ご質問の内容をそのまま行っているものはないかも知れませんが、部分的な機能例はかならずあるものと思います。 ◇APIリファレンス 　https://developers.google.com/maps/documentation … ◇サンプルコード 　https://developers.google.com/maps/documentation … ◇デモ ギャラリー 　https://developers.google.com/maps/documentation … アイコンのカスタマイズはアイコン画像を用意するのが一般的かと思いますが、google chartのDynamic Iconsを利用してもいろいろ可能になります。 　https://google-developers.appspot.com/chart/info … ＜おまけ＞ 大分以前の回答ですが、ルート検索やdinamic Iconsの利用の参考になるかも… 　http://oshiete.goo.ne.jp/qa/8159078.html
＞片方のみtarget="blank"にて開いている ああ、たしかにtargetを指定していましたね・・・失礼しました。 ただし別ウィンドウを開くとポップアップ処理としてはじかれる可能性があるので微妙です。 それとブランクでひらくなら昔ながらの「_blank」の方がいいかも
まちがえた！ <title></title>がぬけてました。 >簡単に見破れないようにBase64化とかシーザー暗号 ざんねんだなぁ、じかんがあればな～w。
はっきりいってそれだけ張られても動きを確認できないのでほとんど分かりません。 一応、最後から2行目がおかしいようなので行末に「;」を書けばそれだけで直るかもしれません。 if($('select[name="use_kindOfCourse"] option:selected').is(':hidden')) ↓ if($('select[name="use_kindOfCourse"] option:selected').is(':hidden')); これでダメな場合、もっと大規模に何かが削除されているのかもしれません。そうなら作った人に見てもらわなければ復旧は難しいと思います。
単純に 　positon ⇒　position で動作しませんか？ （iphoneは持ってないので、ＰＣで確認）
別案で… (2種類程度なら直接記述した方がよさそうですが） var data = [ { id:"#prev", param0:{ rignt:-50 }, param1:{ right:0 }}, { id:"#next", param0:{ left:-50 }, param1:{ left:0 }} ]; $.map(data, function(d){ 　$(d.id).hover( 　　function(){ $('body').css(d.param0); }, 　　function(){ $('body').css(d.param1); } 　); });
Ajaxの処理プロセスに対する認識が間違っています。 $.ajaxで定義するオブジェクトの"success"属性に指定しているのは、「コールバック」としての関数定義です。 「コールバックバック関数」というのは同期であれ非同期であれ、「応答があれば実行される」イベントハンドラのようなものであり、リニアな処理手順とは別の流れを定義するものです。 なので、その中で"true"や"false"を返しても意味がありません。 主処理の最後に"false"を返すか、submitイベントの既定動作を停止する、"preventDefault();"を使うかして、まずformの自動submitを停止してください。 そのうえで、successコールバックの中で、検証結果がOKであれば、formをsubmit()します。 function(){ _ $.ajax({ _ type: "POST", _ url: "/customercheckclosingdate", _ data: {"closingDate":strClosingDate,"year":strYear,"month":strMonth,}, _ dataType: 'text', _ success: function(request){ _ // 送信結果の評価　検証OKならば、$('#myForm').submit(); _ }, _ error: function(msg){} _ }); _ return false; }
#1です、わかりづらいということなのでざっとサンプル <script> function jump(url){ window.hoge.location.href=url; window.location.href="#top"; } </script> <div><a id="top" name="top">top</a></div> <div><iframe name="hoge" id="hoge" src="http://okwave.jp"></iframe></div> <div style="height:800px; background-Color:lime;">free space</div> <div> <input type="button" value="yahoo" onclick="jump('http://www.yahoo.co.jp')"> <input type="button" value="goo" onclick="jump('http://www.goo.ne.jp')"> <input type="button" value="okwave" onclick="jump('http://okwave.jp')"> </div> ちなみにiframe自体が今はもう廃れてきている技術なので 社内利用など限定的な方法以外ではあまりお勧めできないです。 （とくにクロスサイトでブロックしているところも多々見受けられますので）
for文は左のような処理をしています。 初期化→判定→＜処理＞→i++→戻る これの、処理の中に同じ処理を放り込むと右のようになりますので、 中の変数jはiで回るたびに初期化されます。
まったく個人的な思いとして、jQuery 関係はパスしたいです。 ajax　とありますが非同期でもありません。 そして、document.write の完了を知る方法を知りません。 なのでベタに doc.close () の後で発火。（初めて使ったｚ） 他のURLを拾えるかは調べていません。 <!DOCTYPE html> <meta charset="utf-8"> <title>IFRAME SCANNING</title> <script src="http://code.jquery.com/jquery-1.8.2.min.js"></sc … <script src="jquery.xdomainajax.js"></script> <body> <script> function fuga () { 　var doc = this.contentDocument; 　var es = doc.getElementsByClassName ('en'); 　var text = Array.prototype.map.call (es, getTextContent); 　 　alert (text.join ('\n')); } function getTextContent (e) { 　return e.textContent; } function hoge (url, cbFunc) { 　var iframe = document.createElement ('iframe'); 　var html = $.ajax ({ url: url, async: false }).responseText; 　var doc; 　 　iframe.style.display = 'none'; 　document.body.appendChild (iframe); 　 　doc = iframe.contentDocument; 　doc.open (); 　doc.write (html); 　doc.close (); 　cbFunc.call (iframe); } //---- hoge ('test.html', fuga); </script>
アンカーを設ければできます。 iframeの部分に、id（またはname）を設ける。たとえば<iframe id="frame_name">としておきます。 この部分に、リンクをかけるため、下記の記述が必要です。 同じHTML内であれば ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ <a href="#frame_name">iframeへ</a> 他のHTML内であれば ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ <a href="hogehoge.html#frame_name">iframeへ</a> と記述すればできます。 なお、古いブラウザを支援するためname要素を使う場合もありますが、idで指定する方が正しい方法です。
https://developers.google.com/feed/v1/jsondevgui … なるほど。プロパティが入ってない物は無理ですね。 XMLDocumentの方を使ってみるか、 それでも無理なら他のサービスを使うか、Google Feed APIに相当する物を自分で作るかしかないと思います。
DOMでやる気がないならただの文字列の置換でしょう <script> var elem = '<div class="box"><div><span></span></div><img /></div>'; elem=elem.replace('<img />','<img src="hoge.jpg" width=200 height=100 />'); alert(elem); </script>
＞canvasのwidthより、canvas2Dオブジェクトのwidthが大きかったらどうなるのでしょうか？ 何もおきません。canvas2Dに概念上の制限はないはずなので、canvasの領域でトリミングされるだけです。 ＞それとも、canvasのwidth自体を変更するのでしょうか？ 描画してからcanvasのサイズを変更すると、座標の対応関係が変わるのでご質問の意図のようなことにはならないと思います。 無理やりやるなら、サイズを先にセットしてから再描画するか、canvas要素をoverflow:hiddenのDIVなどでラップしておいてそちらのサイズを変更することでコントロールするかでしょう。 canvasに描画した内容は図化されるので、サイズを調べたいのであれば、スクリプトでスキャンしてサイズを調べることになるでしょう。 でも、扱う対象がテキストであるのなら、そんな面倒なことをしなくても、HTMLのspan要素やdiv要素を利用した方が遥かに扱いが簡単だと思いますが・・・
やはりわからないです。 ＞page1でリストを作成して page1、page2とすれば、当然二つは異なるページです。 　page1の外部リンク---この意味がわかりませんが ・他のウェブサイトへのリンク ・他のページへのリンク 　のいずれかがリンクです。Refarence 　・・・リンクとリソースの存在を意味するsrcとは異なります。 ＞page2で表示して、表示した（外部リンク）を操作できるようにしたいのですが。。。 　リンクを操作とは、クリックするという意味なので、その移動先の新しいページで表示されているリンク・・・をクリックすればよいかと。 以前回答した 　⇒フルスクリーンについて・・・ - JavaScript - 教えて！goo( http://oshiete.goo.ne.jp/qa/8137881.html ) 　のようなもの想定しているのかな・・ 　
HTMLSelectElement の value プロパティは、割と最近になって追加されたので、 とっても古いブラウザを考慮しなければいけない非常に特別な事情がおありなら、 このようにしなければいけません。 var select = form.K; var k = select.options[select.selectedIndex].value; どうせなら、以下の様に汎用化すると便利です function readSelect(select) { return parseFloat(select.options[select.selectedIndex].value); } var k = readSelect(form.K); それとは別に、いくつか改善点を 計算途中の数値保存は、<input type=hidden> を使用しないで、JavaScriptの変数を使う 悪) form.W.value = 値; 良) var w = 値; データ型の自動変換はバグの温床なので、正確に変換する 悪) form.K.value * form.Q.value 良) parseFloat(form.K.value) * parseFloat(form.Q.value) できうればもっと計算途中の変数を作ると見通しが良い 例) var e = (w + a) * p; form.E.value = Math.round(e); form.F.value = Math.round(e * 30); form.G.value = Math.round(e * 365); フォーム要素を操作するなら、できれば新しい方法で(古いIEでも有効) 悪) form.E.value 良) form.elements['E'].value
こんなかんじ <script> function calc(f){ var t1=parseInt(f.elements["t1"].value,16); var t2=parseInt(f.elements["t2"].value,16); var t3=t1+t2; f.elements["t3"].value=t3.toString(16).toUpperCase(); } </script> <form> <input type="text" name="t1" value="75DA593C"> <input type="text" name="t2" value="10"> <input type="text" name="t3" value=""> <input type="button" value="calc" onclick="calc(this.form)"> </form>
ロジック的には ・アクセス時にクッキーをチェック ・クッキーに履歴がなければ適当な変数に現時刻を入れる ・履歴があれば特になにもしない ・setIntervalで数秒に１度クッキーをチェックし想定期間を超えた場合 location.hrefでとばす という感じ。 クッキーの生存期間を設定しておかないと、そのページには二度とアクセスできない 逆にクッキーはしょせんブラウザ側に保存されるので、ユーザーがクッキーを 消してしまえばすきにアクセスできる
JavaScript には「関数オブジェクト」なる存在があります。 addEventListener の第二引数は、このオブジェクトを指定しなければいけません。 関数オブジェクトの書き方 var funcObject = function(){ 処理内容 }; ゆえに 誤) addInput1.addEventListener("click",hyoji(0), false); 正) addInput1.addEventListener("click", function(event){ hyoji(0) }, false); 個人的には、この様に書けば理解しやすいのでお勧めします var funcObject = function(event){ hyoji(0) }; addInput1.addEventListener("click", funcObject, false); 余談ではありますが、以下の処理は addEventListener と被っていますので削除すべきかと var addOnclick1 = document.createAttribute('onclick'); addOnclick1.nodeValue = "hyoji(0)"; addInput1.setAttributeNode(addOnclick1); 余談の余談ですが、onclick ならもっと良い書き方があります addInput1.onclick = function(){ hyoji(0) };
> よく「onload は DOM 木を全て読み込んだ後で実行される」と聞きますが、違うのでしょうか？ これ自体は正しいです。 しかし、window.onload = kansuu; と書いたときの話で、window.onload = kansuu(URL); と書いたときに kansuu(URL) の実行を DOM 木の読み込みが終わるまで待ってくれる訳ではありません。 以下の例を実行してみてください。 function func() { alert("関数が呼ばれました。"); } var f; alert("f = func;"); f = func; alert("f = " + f); alert("f();"); f(); alert("f = func()"); f = func(); alert("f = " + f); alert("f();"); f(); // f には何も入っていないので、エラーが発生します。 // (window.onload は何も入っていないときは実行されないので window.onload に何も入っていないときには // 特にエラーは発生しません。 これを実行すると、 1. 「f = func;」と表示される 2. f = func の行では何も表示されない (func() は実行されていない) 3. f = function () { ... } と表示される (関数が代入されている) 4. f(); を実行すると、f = func; で代入した func(); が実行され、「関数が呼ばれました」と表示される 5. 「f = func();」と表示される 6. f = func(); の行で「関数が呼ばれました」と表示される (この時点で func() は実行されている) 7. 「f = undefined」(ここでは、 fには何も入っていない、と思ってください)と表示される 8. f(); の行では f に何も入っておらず、何も表示されない (func()は実行されていない。ブラウザによってはエラーが表示されるかもしれません) となります。これと同様に ・window.onload = kansuu; と書けば DOM 木が読み込まれた時点で kansuu が実行される ・window.onload = kansuu(URL); と書けば、この行で kansuu(URL); を実行し、 DOM 木が読み込まれた時点では何も実行されません。 > onload の時点では、 > kansuu = function (url){} の代入は行われていませんが、 > なぜ動くのでしょうか？ kansuu(URL); を実行しようとした時点では kansuu に値が入っているので、問題ありません。 1. window.onload = function () { ... }; で window.onload に関数(「関数1」と書くこととします)が代入される。 2. kansuu = function (url) { ... }; で kansuu に関数(「関数2」と書くこととします)が代入される。 3. DOM 木の読み込みが完了する。 4. ブラウザが window.onload に指定された関数(関数1)を実行する 5. 関数1で kansuu(URL); を実行しようとしたときには kansuu には関数2が代入されているので、 　関数2を実行する。 6. 関数2でURLが表示される。 window.onload = function () { alert(num); }; num = 123; としたとき、num = 123; が実行されて num に 123 が入ったあとに window.onload が実行されて 「123」と表示されるのと同じです。
WebGLはライブラリじゃ無いですし、最新のIEで使えます。 またWebGLを使わないと3D制作ができないわけでもありません。 それこそ同じGLSLを使ったCSSカスタムシェーダから、2DCanvasやCSSTransformを使ってもできます。 そしてこれらの機能を抽象化するのがライブラリというものです。 3Dといってもゲームなのか、デザインなのか、いろいろありますから、まずそこをハッキリさせたほうがいいです。
ui mapは知りませんので、まったくの山勘のみの回答ですが… ＞インフォウィンドウが開かず、「undefined」となります。 インフォウィンドウが表示されないという意味でしょうか？ それだとインフォウィンドウの設定方法に問題がある可能性もありますが、ご質問の文章から勝手に推測すると、表示用のコンテンツ評価時にエラーを起こしているか、エラーにならなくとも「undefined」が表示されてしまうという現象ではなかろうかと思います。 これまた勝手な推測で、以下の例と同じようなミスではなかろうかと… ＜例＞ for(var i=1; i<5; i++){ document.getElementById("button" + i).onclick = function(){ alert(i); } } みたいにして、各ボタンにクリックイベントを設定しても、１～４が表示されずに、みな5と表示されてしまう。 要は、変数iが実行時に評価されているので、定義時とは値が異なっているということが原因ですが、ご質問の場合はdata[i]を評価しようとして範囲外なのでundefinedとなり、さらにdata[i].nameを評価しようとしてエラーになっているかあるいはundefinedなどが返されているか、ではないでしょうか？ 山勘なので、当たるも八卦ですが…
サーバにアップするか、ローカルでhttpdを動かしてテストすると正常に動作すると思います。 セキュリティー等の問題で、ローカルファイルへのAjax通信が制限されているブラウザではjQueryのloadでローカルファイルを読み込めない場合があります。
ぼそっと、たぶんこっち。 data.push (data.shift ());
難解なプログラムは、一部分を変数化することによって理解しやすくなります。 (function (factory) {'use strict'; ...} (function ($, tmpl, loadImage) {...})); 即時関数を変数化して var objA = function ($, tmpl, loadImage) {...}; (function (factory) {'use strict'; ...} (objA)); さらに変数化して var objA = function ($, tmpl, loadImage) {...}; var objB = function (factory) {'use strict'; ...}; (objB (objA)); あまり意味のない括弧を外して var objA = function ($, tmpl, loadImage) {...}; var objB = function (factory) {'use strict'; ...}; objB(objA); というわけで、 「関数オブジェクト(objB)を実行する。引数は関数オブジェクト(objA)」 という処理のようです。
targetObj は目的の HTMLElement オブジェクトなのでしょうが、 jQuery のオブジェクトではないため、children メソッドが http://js.studio-kingdom.com/jquery/traversing/c … ではなく https://developer.mozilla.org/ja/docs/Web/API/Pa … とみなされています 誤: targetObj = document.getElementById('TargetId'); 正: targetObj = $(document.getElementById('TargetId')); 正: targetObj = $('#TargetId');
>hoge(,"できるかな")； そういう引数の省略をする言語もありますが、javascriptでは 文法上間違っているのでエラーで処理されます どうしてもやりたいならnullでも与えてあげてください (まぁ省略になっていないですが・・・) hoge(null,"できるかな")； あとは姑息に無理やり配列で渡すなどすれば似たようなことは できないことはないですが、あまりお勧めはできません。 <script> function func(){ var a=arguments[0][0]; var b=arguments[0][1]; document.write("1st:"+a+"<br>"); document.write("2nd:"+b+"<br>"); } func(["hoge","fuga"]); func([,"piyo"]); </script>
単に <input type="button" value="ロード" onclick="hx8D.load();" /> と同じことを window.onload = function(){ 処理 } でも行えばOKです <script> var hx8D = function(){ ... }(); window.onload = function(){ hx8D.load() } // 今風なら: window.addEventListener('DOMContentLoaded', function(){ hx8D.load() }, false); </script>
必要なときにだけローカルでWebサーバーを立ち上げ、 送信されたフォーム内容をExcelファイルに保存するスクリプトを動かす 例) Java + POI 例) IIS + ASP.NET + OpenXML ブラウザを HTML Application にして、 フォーム内容を送信せずにExcelファイルに保存するスクリプトを動かす 参考) http://gallery.technet.microsoft.com/office/248b … 少々方向性が異なりますが、 HTML5 の新機能 WebStorage とか File API:Writer を使う 参考) https://developer.mozilla.org/ja/docs/DOM/Storag … 参考) http://www.w3.org/TR/file-writer-api/
日本語で処理内容を順番に書いてみて、それをJavaScriptに翻訳してみればいいのでは。 >ページ読み込み直後にtrueだったらチェックあり。falseだったらチェックなしの状態にするにはどのように書けばよろしいでしょうか。 ページ読み込みが完了した時に以下の処理を行う 　　もしも（何が true だったら）{ 　　　何をチェックありにする 　}そうでなければ{ 　　何をチェックなしにする 　} 処理終了
ぱっと見このコードでは特に置き換えをする意味はないように思えます まぁ引数の初期値を保持するために別の変数に受けるのは意味はあるかも
動くと思いますよ。 具体的にどのように設置しているのかわかりませんが、質問者様が考えていないところに問題があるのかも。 簡略化してテストしました。 （要素にidが同じものがありますが、HTMLの文法違反です） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> function cleartest(btnNo){ if(btnNo == 1){ document.getElementById("TextBox1").value = ""; } else if (btnNo == 2) { document.getElementById("TextBox2").value = ""; } } </script> </head> <body> <div> <textarea id="TextBox1">text1</textarea> <input type="button" tabindex="1" value="クリア" onclick="cleartest(1);"> </div> <div> <textarea id="TextBox2">text2</textarea> <input type="button" tabindex="2" value="クリア" onclick="cleartest(2);"> </div </body> </html>
何が聞きたいのかよくわかりません X.constructor === Function とも取れますし typeof X === "function" とも取れます
いつまで「勉強」するつもりなのですか? ある程度覚えたら実践です。実際にプログラムを作りましょう。
単にこういうことをしているというイメージで良いでしょう。 <script> for (var i = 0; i < 10;){ document.write(i);//実処理 i++; } </script> 結局、変化式であるi++が先に実行されると初期化式でわざわざ初期値を 設定しているのにそれが利用されなくなってロジックがブレるので 伝統的にfor構文は初期値を利用して繰り返し処理をすることになっています。
「thisで変数宣言」？ this.name = n; をnameという変数の宣言だと思っているのでしょうか？それは間違いです。 これは、プロパティーの設定です。 もし、これが変数宣言であると書いてあるような入門書を読んでいるなら、その本は捨てた方が良いと思いますよ。 プロパティについて調べると違いがわかるかと思います。
lengthで要素数を数えることが出来ます。 $(".wrap *").length で、class=wrap の中の要素の数がわかります。 <li>のみの数を知りたいなら $(".wrap li").length でわかります。 なので、例をあげれば下のようになるかと。 var wrap_width = $(".wrap li").length * 100 +"px"; $(".wrap).css("width":wrap_width); cssでなく、attrで指定しても良いかもしれません。 ただ、class=wrapがいくつかあると、それらの要素すべてをカウントしてしまうので、idもつければ回避できるかと。
A No1です。 ＞要素が先頭へ移動することは見受けられませんでした。。。 一応、fx27とie8で確認したのですが… 念のため、テストしたＨＴＭＬ全文を載せておきます。 こちらの環境では下の二つ（5番、6番）が先頭に行きます。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ $("#hoge p:gt(-3)").prependTo("#hoge"); }); </script> </head> <body> <div id="hoge"> <p>１番目 <p>２番目 <p>３番目 <p>４番目 <p>５番目 <p>６番目 </div> </body> </html>
ビット演算してるわね x = x + a を x += a って書くことができるの つまり hoge |= 1 は hoge = hoge | 1 のことね ~はNOTのこと 0x はアスキーコードの16進数表記ねきっと 0x0c は改ページを意味していて 0x03 は文章の最後を意味している と思われるわ 全文がないので推測だけど
なんとも言えませんが var name = "tanaka" ; 的な文字列をクォーテーションで囲うところから始めてみれば？
前、回答者も説明しているように、仕様書を読めば詳しく書いてある。 element＝要素　要素は２種類、インライン要素とブロック要素がある。 すなわち、すべての要素＝すべてのタグ＝すべてのelement 参考URL：http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401 …
＞実際にたっているかとか参照可能かという次元での質問です。 実際にアクセスで正常が返ってくるURLかどうかと言うことなら、実際にアクセスしてみないとわかりません。 ブラウザ上で動くJavaScriptではチェック不可能です。サーバーサイドなら可能。
A No1です。 ＞$ajax()の引数を指定したいと言うより、$ajax()を含んだユーザー関数に ＞引数を指定してそれで、urlを指定したいというか よくわかりませんが、普通にユーザー関数の引数をそのままajaxのurlとして指定するのではダメなのでしょうか？ 上記回答はそういう意味のつもりですが、私が質問の意味を理解できていないのかな？
Operaブラウザはいかがでしょうか。 http://www.opera.com/ja Prestoエンジンの最終版である、12.16なら、なお良いかも。 http://www.opera.com/download/guide/?ver=12.16
押せなくすればよいのであれば、当該ボタンをdisabledにしてあげればよいのでは？ 表示も変わるので、閲覧者にもわかります。ただし、リロードすればもとに戻ってしまいます。 リロードしても継続したい場合は、サーバ側で管理するとか、cookieを利用するとか… 一定時間経過すれば押せるようにするなら、disabledをセットする時に、同時に解除の予約を行っておくとか… とりあえず、単純にdisabledにする例 (submit時に当該ボタンの情報は送られなくなります。送りたいなら送信後にdisabled） function post(elm){ 　elm.disabled = "disabled"; 　var postform = document.getElementById("form_name"); 　postform.action = './link.php?no=1'; 　postform.submit(); } <input type="button" value="LINK" onclick="post(this);">
愚直にやるなら var msdata = (function(){ 　var temp = [ms.split(/,/), pilot.split(/,/), cost.split(/,/)]; 　var o = {}, n = temp[0].length; 　for (var i = 0; i < n; i++) { 　　var m = temp[0][i].trim(); 　　var p = temp[1][i].trim(); 　　var c = temp[2][i].trim(); 　　o[m] = { pilot:p, cost:c }; 　} 　return o; })(); 本格的にやるなら、以下のようなライブラリを利用することになります。 https://www.google.co.jp/search?q=csonv.js
ざっとみてみました このサイトを参考にin_arrayを組み込んでみると楽です http://akinov.hatenablog.com/entry/2013/08/23/00 … jQueryとの競合がなければ動くと思います。調整してみてください。 （window.onload処理あたりがちょっと怪しいかも） <script> Array.prototype.in_array = function(val) { for(var i = 0, l = this.length; i < l; i++) { if(this[i] == val) { return true; } } return false; } window.onload=function(){ set_disable(); } function set_disable(){ var d=document.getElementById("delivery"); var v=d.options[d.selectedIndex].value; var f=d.form; var delivery_list=["レターパック350","レターパック500","定形外郵便","はこboon"]; var name_list=["delivery_time","delivery_Month","delivery_Day","namekisai"]; for(var i=0;i<f.length;i++){ if(name_list.in_array(f[i].name)){ f[i].disabled=delivery_list.in_array(v); } } } </script> <form> <label for="delivery">配送方法</label> <select name="delivery" id="delivery" onchange="set_disable()"> <option value="クロネコヤマト元払" selected>クロネコヤマト元払</option> <option value="クロネコヤマト着払">クロネコヤマト着払</option> <option value="ゆうぱっく元払">ゆうぱっく元払</option> <option value="ゆうぱっく着払">ゆうぱっく着払</option> <option value="レターパック350">レターパック350</option> <option value="レターパック500">レターパック500</option> <option value="定形外郵便">定形外郵便</option> <option value="はこboon">はこboon</option> </select> <br> <label for="delivery_time">配送希望時間</label> <select name="delivery_time" id="delivery_time"> <option value="指定なし" selected>指定なし</option> <option value="午前中">午前中</option> <option value="12-14">12時～14時</option> <option value="14-16">14時～16時</option> <option value="16-18">16時～18時</option> <option value="18-20">18時～20時</option> <option value="20-21">20時～21時</option> </select> <br> <label for="delivery_Month">配送希望日</label> <select name="delivery_Month" id="delivery_Month"> <option value="指定なし" selected>指定なし</option> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> <!--略--> </select>月 <select name="delivery_Day"> <option value="指定なし" selected>指定なし</option> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> <!--略--> </select>日 <br> 伝票に商品名の記載は <input type="radio" name="namekisai" value="OK" id="a1" checked><label for="a1">OK</label> <input type="radio" name="namekisai" value="NG" id="a2"><label for="a2">NG</label> 　　※「NG」の場合は「雑貨」と記載します </form>
まず何か勘違いしているのかもしれない点について。 jQuery は JavaScript のライブラリです。したがって、jQuery でコードを書くというのは必然的に JavaScript でコードを書くことになります。 まあ、今回の質問は、jQuery を使う場合と使わない場合で文字列処理はどう変わるのか、（例えば）あなたが提示されたコードを jQuery の機能を使った処理に書き直すことができるか、 という事でしょう。 さて、上記の質問の答えですが「（例外を除いて）変わらない」です。 javaScript には素の状態で十分な文字列処理機能があり、汎用ライブラリの一部として提供しなくてはならないほどの欠落した機能はありません。 したがって、こと文字列処理については jQuery は機能を追加していません。唯一、トリム機能を除いては。 http://api.jquery.com/jQuery.trim/ したがって、文字列だけが絡む処理は素の JavaScript で書いても jQuery を利用した環境で書いても上記のトリム処理以外変わりません。
ダウンロード中のマークをページに表示させるだけならajaxやphpは関係ないですね。 ただ、ページを読み込んでから任意のタイミングでmp4をダウンロードさせたい時に、ajaxが必要になるだけです。 実装方法ですが、試したことはないけれど、たぶん画像と同じじゃないかな。 ネイティブjavascriptならonload、jqueryなら$("#mp4").on("load")でいけると思います。 例に出されたことは、随一読み込み進捗を確認する必要がないので、ただ、読み込み完了時に「読み込み完了」だけを取得すればよいと思います。 イメージとしては、 1.　ダウンロードボタンクリック　→　ダウンロード開始 & 読み込み中画像表示 2.　読み込み完了通知取得　→　読み込み中画像非表示 こんな感じだと思います。 参考URL：http://www.pxt.jp/ja/lab/themes/webtech/javascri …
一般的にはモーダルウィンドウは自作すると思いますよ。 まったく難しくないですし。 単に要素をウィンドウ風にデザインして、その要素を表示・非表示にするだけです。 そのjavascriptが分からないと言われてしまうと、回答のしようがありません。。
＞これをこのnameだけ同一に動かすのはどうしたら宜しいのでしょうか？ ああ、失礼しました。nameをチェックするのでしたね こんな感じでしょうか？ <script> function setall(obj){ var f=obj.form; for(var i=0;i<f.length;i++){ if(f[i].type=="select-one" && f[i]!=obj && f[i].name.indexOf(obj.name+"_")>=0){ f[i].selectedIndex=obj.selectedIndex; } } } </script> <form method="post"> <p> <select name = "no" onchange="setall(this)"> <option value = "1">1</option> <option value = "2">2</option> </select> <select name = "no_1"> <option value = "1">1</option> <option value = "2">2</option> </select> <select name = "no_2"> <option value = "1">1</option> <option value = "2">2</option> </select> <select name = "no_3"> <option value = "1">1</option> <option value = "2">2</option> </select> <select name = "no_4"> <option value = "1">1</option> <option value = "2">2</option> </select> <select name = "jogai"> <option value = "1">1</option> <option value = "2">2</option> </select> <input type="submit" value="go"> </p> </form>
最初の子ノードは必ずしもタグだとはかぎりません。 単純に改行文字を最初の子ノードだと認識しているのでしょうね function findElement() { var element = document.getElementById("sample"); var child = element.getElementsByTagName("*")[0]; alert(child.innerHTML); } のようにすれば、最初のタグを拾ってもらえると思います
別フレームを操作するなら 誤: window.location = url; 正: window.top.frames['contents'].location = url; ただし昨今はフレームについて厳しくなりましたので、 上記の処理を行うと場合によってはセキュリティエラーが発生する危険性もあります。 参考) https://developer.mozilla.org/ja/docs/HTTP/X-Fra … 余計なお節介ではありますが 大量にあるリンクをまとめるなら、プルダウンメニューより ツリー型メニュー とか treeview とか呼ばれる方法が望ましいと思います。 あとWebブラウザのフレーム機能は、将来性がよろしくないので 今のうちから代替手段を考慮すべきではないでしょうか。
[[Construct]]はnewでのインスタンスを作成する為の内部関数です constructorプロパティとは関係ありません
> 後ろに++付けたときの挙動について教えてください まさにあなたが経験したとおりの挙動をします。 インクリメント演算子はただ単に変数に 1　を足すだけではなく（なにしろ演算子ですから）何らかの値を返します。 後置で使用した場合はその返す値は 1 を足す前の変数の値になります。 内部的にはこんな感じでしょうか（ただし以下のコードは JavaScript の正しいコードではありませんし、関数内の引数に対する演算が呼び出し元に影響するという javaScript ではありえない動作をしていますが）。 ++ = function(i) { 　var retval = i; 　i = i + 1; 　return retval; } 一方、以下のように前置で使用した場合は 1 を足した後の変数の値を返します。 var hoge=1; console.log(++hoge);
array自体に意味は無いですね。 実際のプログラミングでは、var my_point_array =[1, 2, 4];と言った感じで分かりやすい変数名にします。 まあ、「my_point_array 」は微妙ですが・・・・。
＞document.getElementById("TextBox1"; "Number1").value == "" document.getElementById("TextBox1).value = "" document.getElementById("Number1").value = "" と分けて書いてはいけないの？ ちなみに代入のときはイコールは一つ
かならずもれなく合致するオブジェクトが存在するなら バージョンなどの問題の可能性もあるので document.getElementById(code[i][1]).readOnly="readonly"; をより一般的な document.getElementById(code[i][1]).readonly=true; などの表現に変えてみてはどうでしょうか？
配列もオブジェクトです ["A", "B", "C"] は {0:"A", 1:"B", 2:"C", length:3} のようなものです 一方 new Array(3) は {length:3} のようなものです {0:undefined, 1:undefined, 2:undefined, length:3} とは違います 要するに穴が開いた配列なのです 配列を文字列化するとjoinメソッドが呼ばれます toStringでそういう表記になるのはjoinメソッドの仕様ですし、 console.logでそういう表記になるのはconsole.logメソッドの仕様だからとしか言えません undefinedとならないのはどちらも穴とundefinedを区別した表記にしようとしているからです べつに "undefined, undefined, undefined" と返すものがあっても不思議ではありません 結局 ({abc:undefined}).abc も ({}).abc もundefinedを返しますしね ですが実際にundefined値が入っているわけではありません
よくわかってませんが… AAA.jsがご提示の通りdocument.writeで要素を追加しているのなら、その直後にスクリプトで 　var inps = document.getElementsByTagName("input"); 　var inp = inps[inps.length-3]; とすることで、ご指定の要素を取得できます。 　要素ごと削除してしまうとか、desableにするとかいろいろ方法はあると思いますのでご自由に。
『documentオブジェクトに紐づいているものとそうではないものの違い？』 はい、その通りです。 リンク先のユーザ定義の createElement は、定義文の書かれたスコープ内に変数のように存在しています。 これは document オブジェクトの持つメソッドとは異なるため、とくに干渉し合いません。 『ユーザ定義関数は、documentオブジェクトに紐付けることはできないのでしょうか？』 いいえ、ある程度は可能です。 たとえば document.createElement は置き換えることができます： eg) document.createElement = function() {return 0}; 一方で、document.body などは置き換えられません。 プロパティ・メソッドの書き換えの可否はオブジェクト毎に決まっています。 *) 正確には、置き換えより重ね書きのイメージに近いものです。 document.createElement の実体は Document.prototype が持っています： document.hasOwnProperty('createElement'); // -> false Document.prototype.hasOwnProperty('createElement'); // -> true 普通は document.createElement() によって Document.prototype.createElement が呼ばれますが、document.createElement = ... と独自に定義するとそちらが呼ばれるようになります。 オブジェクトに直接メソッドが定義されている場合はそれを、オブジェクトが直接メソッドを持つわけではない場合はプロトタイプの中から該当のメソッドを呼び出す、という動作になっています。
> XMLは勉強したことがないですが、XMLを使わないならスラッシュみたいのは不要ということでしょうか。 ちょっと気になって調べてみたら、以下のページを見つけました。 http://stacktrace.jp/jquery/api/core/jquery%28ht … このページの「終了タグに注意」によると、以前のバージョンでは / なしでは要素を作れなかったようです。 現在ではそのようなことはないようですが、わけあって古いバージョンを使わざるを得ない場合や、やっぱり作成する要素指定を厳密にするという変更があるかもしれないことを考えると、つけておいた方が安心と思われます。
jQueryに限らず、一般論として『ライブラリ』を使っていても組み込み関数（いわゆるJavaScript）を忘れる必要はありません。 ただ、両方を併用していると、「同じ事をやっているけど違う書き方」が点在する可能性が出てきて、 機能追加や変更などで何をやっているのかがわかりづらくなります。 そのため、同じ事をするのであれば同じ書き方にするという統一性を持たせた方が、後々作りやすくなっていきます。
バイナリデータではなく文字列ですか。 IE10以上なら、JavaScript組み込み関数にbtoa()、atob()というBASE64変換する関数（メソッド）がありますよ。 https://developer.mozilla.org/ja/docs/Web/API/wi … JavaScriptでUnicode文字列をBASE64に変換する場合は、概ね他のエンコード方式で変換してから改めてBASE64にしなければなりません。 たぶんJavaScriptの文字列はバイト単位ではなく、1文字ずつの扱いだから変換できないんでしょう。 MDNではencodeURIComponentとescapeの両方を使っていますが、片方だけで良いと思います。
Objectのkeyの列挙順を制御したいのなら配列化すればいいですが、それなら初めから配列であるべきではないかなと。 Object.keys(obj).sort().forEach(function (value) { console.log(value); }); 元々、Objectは順序のないデータの集合体です。 順序を求めるなら初めから配列であるべきだと思います。 その為に Array.prototype.sort や Array,prototype.forEach 等のメソッドがあるのですから。 # Re: hp_win7 さん
No.2 の補足に対して 関数 getSelectedText ですが、名前が実態を表していないので変えましょう 例) <select name=year onchange="onChangeYearSelect(this)"> function onChangeYearSelect(selectElement) { ... } 要素 <select name="month"> ですが、直に内部処理を呼ぶのではなく、 変更された値を処理するイベント関数を一段かませましょう 例) <select name=month onchange="onChangeMonthSelect(this)"> function onChangeMonthSelect(selectElement) { イベント処理; goCalender(); } セレクトボックスが onchange されたら、内部処理用の変数を更新しましょう 例) function onChangeYearSelect(selectElement) { goCalender.year = 選択された値; } function onChangeMonthSelect(selectElement) { goCalender.month = 選択された値; } プログラム中の記号の打ち間違えは致命的です。 > var selYear = me.year; // ピリオドなのでOK > var selMonth = me,month; // カンマなのでNG 参考) http://d.hatena.ne.jp/kmori58/20051208/p3 間違ったコメントは事故の元です > monthArray['y2009'] = new Array ( 10, 11, 12 ); // 2012年が選択された場合に表示する月
この手のことをやったことはありませんが、興味があったので試してみました。 スクリプトとは関係なしに、ブラウザ側の機能として表示中の要素をドラッグしようとすると移動禁止マークが出るように、ドラッグに対しての反応が組み込まれているようです。 ＞ドラッグ動作自体も、移動禁止マークが出てちょっとおかしいし、～ 上記のブラウザ側の処理が働いていると想像します。 これをキャンセルしておかないとドラッグ＆ドロップの制御はうまくいかないようですね。キャンセルするには、イベントの伝搬を止めておけばよさそうです。 というわけで、こんな感じ？ （クリックした位置が変わらないように、少しロジックを変えています） （全角空白は半角に） <!DOCTYPE html> <html lang="ja"> <head>Sample</head> <style> #chr{ position:absolute; left:100px; top:100px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.11 … <script type="text/javascript"> (function(){ 　var drag = { flag:false }; 　$(document).mousedown(function(e){ 　　if($(e.target).parent().attr("id")!="chr") return; 　　var o = $("#chr").offset(); 　　drag.deff = { x:o.left - e.pageX, y:o.top - e.pageY }; 　　drag.flag = true; 　　e.preventDefault(); 　}).mousemove(function(e){ 　　if(!drag.flag) return; 　　$("#chr").css({top: e.pageY + drag.deff.y, left: e.pageX + drag.deff.x}); 　　e.preventDefault(); 　}).mouseup(function(){ 　　drag.flag = false; 　}); })(); </script> </head> <body> <div id="msg"></div> <div id="chr"> <img src="parts/usl470.jpg"> </div> </body> </html> 参考URL：http://api.jquery.com/event.preventDefault/
個人的には ellipsis が好みです https://developer.mozilla.org/ja/docs/Web/CSS/te …
…とりあえず質問に直接答えます。 >・PHPのbase64_encodeとjavascriptのbase64エンコードは >一般的に方式が違うのでしょうか。 一般も何もありません。Base64はこの世で一つです。言語の違いは関係なく、どの言語でも必ず同じ結果になります。 あなたは期待する結果にならない原因を言語の違いに求めようとしているようですがその可能性はまずありません。あなたのプログラムに間違いがあるのでしょう。その前提で何度も見直しましょう。 どうしても自分では見つけられないという場合には、ソースコードを張りましょう。そしてどのようなデータでうまく行かないのかを明示しましょう。 ※個人的には、「バイナリデータ」と言っているのが実はマルチバイトの文字列の事で、サーバ側とクライアント側で文字コードが違ってしまっているだけという初歩的なミスである可能性が高いのではないかと推測します。
id="MainPhoto"という要素を対象にして処理をしていますが、id="MainPhoto"が複数あるので同じように処理されてしまっているようです。 そもそも同じidが複数あることが文法違反ですけれど。（jQueryではエラーとしてはいないようですが） 解決方法としては、イベント処理の記述を要素の相対的な位置関係を利用して記述するか、または、オブジェクト化しておいて複数設置するかでしょうか。 前者の例として…（全体に簡略化しています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .changeBox * { padding:0; margin:0; list-style-type:none; } .changeBox{ padding:0 10px; width:30%; float:left; } .changeBox img{ width:100%; } .changeBox .thumBox li{ width:20%; float:left; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.10 … <script type="text/javascript"> $(function(){ $(".changeBox .thumBox img").click(function(){ $("div.mainImg img", $(this).parents(".changeBox")).attr("src", $(this).attr("src")); }); }); </script> </head> <body> <div id="container"> <div class="changeBox"> <div class="mainImg"><img src="test/image-l-01.jpg" alt=""></div> <ul class="thumBox"> <li><img src="test/image-l-01.jpg" alt=""></li> <li><img src="test/image-l-02.jpg" alt=""></li> <li><img src="test/image-l-03.jpg" alt=""></li> </ul> </div> <div class="changeBox"> <div class="mainImg"><img src="test/image-l-04.jpg" alt=""></div> <ul class="thumBox"> <li><img src="test/image-l-04.jpg" alt=""></li> <li><img src="test/image-l-05.jpg" alt=""></li> <li><img src="test/image-l-06.jpg" alt=""></li> </ul> </div> <div class="changeBox"> <div class="mainImg"><img src="test/image-l-07.jpg" alt=""></div> <ul class="thumBox"> <li><img src="test/image-l-07.jpg" alt=""></li> <li><img src="test/image-l-08.jpg" alt=""></li> <li><img src="test/image-l-09.jpg" alt=""></li> </ul> </div> </div> </body> </html> なお、一旦hide()してからfadeIn()するような場合、hide()した時にレイアウトが変わらないようにしておかないと、画面がちらつきますよ。
Amazonのこのページは、Shift-JISで書かれています。 ゆえに文字化けしているのだと思いますが？・・・ これは、このページを作成しているコーダーに問題があるだけです。 ご自身が作成しているのでなければ、笑ってやりすごすことがいいのでは？・・・ もし、読み取った文字コードがShift-JISならばUTF-8に変換するという、１ステップが必要では？ 今回、回答をしていて、 正しいことを書いても理解度の乏しい人が質問している場合もあることを、最近悟りました。 あなたではありませんよ！ 同じ日に回答をした人に、わからないなら回答するな！と書き込まれてしまい思ったことです。 WEB25周年の日に、このレベルの人に言われるとは、思ってもいなかった・・・ 参考URL：https://www.amazon.co.jp/gp/offer-listing/B002HJ …
全てのバージョンが必要となる場合はかなり限られたケースではないでしょうか。 たいていのものは上位バージョンでも動作することと思いますので（確かに一部のものはバージョンが変わると動作しないようです）、まずは必要なバージョンを限定した上で、複数必要であるならANo1様のご回答のような措置を取る方が全体の効率化が図れると思います。 上位バージョンを一回読み込めば済んでしまうケースがかなりあるのではないかと想像いたします。 （1.xと2.xでは少々違いがあったかも知れません。例えば以下） 　http://jquery.com/browser-support/
・hogeという変数が既に宣言されていること(宣言されていない場合はundefinedになる) ・hogeが関数オブジェクトであること(関数でなければ"hoge()"という書き方はできない) をチェックしたいんじゃないですか？ なくてもいいかどうかはコード全体を見ないと何とも言えません。
できないです。 そもそもCGI側に渡すための物ですから (郵便番号など入力欄を二つにわけるが送信時は一つにまとめるなど） 入力ページから送信された物は一旦CGI側で、 $postcode="120-1135"; とかになって、 <input type="hiidden" name="zip-code" value="120-1135"> ・・・・・ <th>郵便番号</th><td class="zip-code">120-1135</td> とtableか、 <input type="text" name="zip-a" value="120" readonly>-<input type="text" name="zip-b" value="1135" readonly> とかの再フォーになっているはず。 　<input type="text" name="zip-a" value="120">-<input type="text" name="zip-b" value="1135"> 　で修正を受け付けても良い。 ＞クライアントサイドでの処理が難しそうならサーバーサイドでの処理にしますができれば避けたいと思っています 　これ、根本的に間違っています。 　javascriptなどはユーザー側に制約されるので、可能な限り楽な方法--CGI側で処理すべきです。そのほうが楽です。
jQueryを利用しているのであれば基本下のコードで開閉できます。 $(function(){ $(".btnToggle a").click(function(){ $(this).next('div').toggle(); }); }); http://api.jquery.com/toggle/
beforeunloadなるものもあるそうですが・・・ iframeは定義しないでおいて bodyなどのloadイベント等でiframeの参照先をセットするのも良さそうですが如何でしょう。
ANo1です。 例えば、以下のようにすることで、呼び出す毎に順番に実行する関数を定義することも可能です。 var Func = (function(){ 　var i = 0. funcs = [ 　　function(){ alert("s1"); }, 　　function(){ alert("s2"); }, 　　function(){ alert("s3"); } 　]; 　return function(){ 　　funcs[i](); 　　i = ++i % funcs.length; 　} })(); Func(); // s1 Func(); // s2 Func(); // s3 Func(); // s1
> 具体的には、ブラウザにどのような設定をすれば宜しいのでしょうか？ cookie マネージャーが標準装備されているブラウザを使う、以外の方法を 思いつく限りで幾つか挙げます ページ内でなんとかする * ドメイン内に専用ページを用意して、表示させれば自動的に設定するスクリプトを埋め込む * 商品ページ内のどこかをクリックするとスクリプトが... 環境でなんとかする * 専用のリバースプロキシサーバーを立ち上げる * デバッグ用プロキシ(例:Fiddler)を使う ブラウザでなんとかする * 「主要ブラウザでCookieを編集する方法」で検索 * 以下のURLを bookmarklet として登録し、ドメイン内の適当なページにて実行 (オススメ!) javascript:(function(x){x.document.cookie="name=value"})(window)
ANo1です。 無駄してました。 function set(t, type){ 　var d = data[images.index($(t))]; 　if(!d.flag){ 　　if(type == "click"){ 　　　images.each(function(i){ 　　　　$(this).attr("src", data[i].off); 　　　　data[i].flag = false; 　　　}); 　　　d.flag = true; 　　} 　　$(t).attr("src", d[type]); 　} }
「再帰呼び出し」そのものについて、理解できていますか? ・まったく別の関数を呼び出しているつもりになる ・機能だけで考える というあたりがコツだと思ってます。 ループ同じように同じ行を行ったり来たり、と考えていると理解できません。 function partition_0() { for ( var i = 0; i < N; i++ ) { // （1）対象の配列から数字を一つ取り出して、他の数字と入れかえる Swap(i,0) // （2）呼び出し permutation_1(); // （3）入れ替えた数字を元に戻す Swap(i,0) } function partition_1() { for ( var i = 1; i < N; i++ ) { // （1'）対象の配列から数字を一つ取り出して、他の数字と入れかえる Swap(i,1) // （2'）呼び出し permutation_2(); // （3'）入れ替えた数字を元に戻す Swap(i,1) } と考えます すると、(2)で呼び出された partition_1 で(3')を実行したあと、戻ってきたpartition_0の(3)が実行される、ということがわかるかと思います。 同じ「関数」で連続実行されているわけではありません。 「別の関数」でたまたま同じような動きがあったために、連続実行しているように見えるだけです。 順列になる理由ですが a0,a1,...,aN の順列は次のようにして求められます。 (1)N=0 なら a0 の一通りだけです。 (2)N>0 なら a0 + (a0以外の順列) a1 + (a1以外の順列) ... aN + (aN以外の順列) となります。ここで、(a0以外の順列)、(a1以外の順列) .. を求めるのに、今示した「順列の求め方」を使います。
グローバル変数名とHTML内のID名がバッティングしても、その表示になるらしいよ。 なのでちゃんとvar宣言して局所化すればいいかも。 もちろん、jsファイル内の話ね。 <p id="hoge">test</p> var hoge;//これがないとエラーになる hoge = 1;
>hs = (h < 10)? "0" + hs: hs; http://www.tohoho-web.com/js/operator.htm 条件演算子です。 (h < 10)が真ならば"0" + hsを、偽ならはhsを返します。 真つまり10未満(1桁)ならば頭に"0"をくっつけて2桁にし、 偽つまり10以上(2桁)ならばそのまま返す。 陽はhsが1桁であっても2桁であっても文字型2桁にするようにしているのだと思います。
多次元配列のループ処理は慣れです 頑張ってください
よくわかっていないのと、jQeryの処理内容を確認していないので半分推測での回答ですが… 確かに 　event.dispatchEvent(new CustomEvent('my.event')); では、イベントを捕捉できないようで、カスタムイベントに関しては別に処理をしている可能性がありますね。 ただし、jQueryのメソッドである 　$(element).trigger("my.event"); を用いれば、捕捉可能なようです。 （こちらを用いることで、ブラウザ互換の利点もあります） この際に、ご指摘のようにmy.eventでもmy.event2でもevent.typeはmyとされてしまうようですが、listenerにはちゃんと区別して渡されているようです。 イベント処理側で名前空間を確認する必要がある場合は、event.namespaceで取得できそうです。 少々いい加減な回答なので、ご自身で確認なさってください。 何かのヒントにでもなれば幸いです。
java scriptだと処理が遅いのでC#がいいと思いますが、当然学ばなければいけません。 でも、ゆっくりゆっくり理解すればそんなに難しいものでもないですよ。大切なのは、焦らず理解する事です。一週間でやろうなどと考えてはいけません。作りながらゆっくり。ある程度の基礎知識をつけたら参考として、asset storeなどで無料のものをダウンロードし、その中に入っているコードを読むのもいいかも知れません。
こんにちは。　なんだかいろいろ… とりあえず、 ＞i = hiddenI.value; でiの内容は文字列になっていますので、その後 ＞i += 1 とすると値は、"5"+1 → "51"などになります。 ＞どうすれば、5ピクセルずつ値を増やせるのでしょうか 増加する値を5にしたいとしても、ご提示のコードでは ＞i += 1 のように増し分が1で固定されているから ＞キーを押すたびに、値が倍増されます ↑の最初の理由で、値は約10倍になっているはずです …といったあたりを修正すればよろしいかと。 他にも修正したほうがよさそうなのは… 1）canvasでラインを引くには、最初にポイントへ移動（moveTo）の後、lineToではないでしょうか。また、線を引くだけなのでclosePathは不要かと。 2）event変数をシステムで持っているのはＩＥの仕様なので、他のブラウザでは動作しない可能性があります。 3）input:hiddenの要素が増し分を制御するためのものなのか、座標の記録場所なのか不明ですが、いずれにしろスクリプトの変数で保持していれば不要のはず。 4）canvasの取得などをイベント処理の中で毎回行っていますが、無駄なので最初に一回だけで。
#1です。 ちゃんとソースを読まずにjavascriptのことばかりと勘違いして回答してしまいました。 すいません。 #2さんのおっしゃるとおりです。 forはhtml要素のlabelの属性なので、「label for」と検索すればよかったですね。
フォームに、イベント change のリスナーを加える 例: window.addEventListener('change',function(ev){リスナー処理()},false) リスナーにて、発生したイベントがラジオボタンの「使用」ならば 例: if (ev.target.checked && ev.target.value == 使用) ラジオボタンに対応するオプション要素を生成してプルダウン要素に追加 例: var opt = プルダウン要素.appendChild(document.createElement('option')); 例: opt.textContent = "ev.target.nameとか"; リスナーにて、発生したイベントがラジオボタンの「不使用」ならば 例: if (ev.target.checked && ev.target.value == 不使用) プルダウン要素から対応するオプション要素を抹消 例: var opt = プルダウン要素.querySelector("ev.target.nameに対応する要素"); 例: プルダウン要素.removeChild(opt);
じゃこんな感じで処理してみてください <script> var imgs=[ {"img_id":"a_img","org_img":"a.jpg","new_img":"a2.jpg"} ,{"img_id":"b_img","org_img":"b.jpg","new_img":"b2.jpg"} ,{"img_id":"c_img","org_img":"c.jpg","new_img":"c2.jpg"} ]; function imgchange(t){ for(var i=0;i<imgs.length;i++){ var img=document.getElementById(imgs[i]["img_id"]); var oImg=imgs[i]["org_img"]; var nImg=imgs[i]["new_img"]; img.src=(t==img)?nImg:oImg; } } </script> <img src="a.jpg" id="a_img" onclick="imgchange(this)"> <img src="b.jpg" id="b_img" onclick="imgchange(this)"> <img src="c.jpg" id="c_img" onclick="imgchange(this)">
A No1です。 コピペした時に、宣言や何かが落ちてしまったみたい。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head> <title>test</title> わざわざ書くまでもないとは思いますが…。
リンク先のフォルダをそのまま書くと、現在のフォルダの下にあるフォルダと解釈されてしまいます。 目的のフォルダ「lightbox」は親フォルダの下にあるのだから一旦親フォルダに戻る必要があります。 書式は「<a href="../lightbox/index.html"> という書き方。「../」が上（親）のフォルダを表します。
単純に変数がいつ評価されるかという問題なのですが、確かに少し難しいと思います。 元のあなたのコードだと、全コード中に「i」はfor文の中にあるものだけしか存在しません。で、onclick時にこの世のどこかの「i」を表示するという意味なので、for文の中で定義されているiをonclickされるたびに見に行くのです。 「el[i].onclick=function(){…」の部分を以下に変更してみてください。無名関数を返す関数をループごとに実行しているわけですが…自分で言っていても伝わらなさそうだと思います。関数を返す関数というものがそもそも概念的に難しいと思いますので最悪、今は分からなくてもいいと思います。もう少し勉強していけばそのうちわかるようになる日も来ると思います。 el[i].onclick = (function(n) { return function() { flip(n); } })(i);
jqueryに限らず、アニメーション前の遅延は概ねのライブラリ(CSS含め)では、delayで設定できるようになってるよ。
this.href の部分を (''+this.href).replace(/#.+$/, '') とか (''+this.href).replace(/#.+$/, '#top') で置換しましょう
JavaScript以前に、inputのvalueにhtmlを入力することはできません。 厳密に言えば、inputに入力されたhtmlは、htmlではなく単なる文字列として解釈されます。 従って、CSSそのものが使えないのです。 javascriptを使わずに、手作業で <input value="<span>残り</span>" type="text"> としてみれば、どのように表示されるかわかりますよ。
クリックしたときにマーカーと情報ウィンドウが同時に表示されるのか、クリックするごとにマーカーは増えてゆくのかなど不明なところはありますが、勝手に、マーカー表示は一個のみで情報ウィンドウも同時に表示されると解釈して、ご参考までに。 （表示方法を変えないと、このままではマーカーと重なってしまっていますが…） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false" … <script type="text/javascript"> function initialize(){ //地図を表示 　var latlng = new google.maps.LatLng(35.69, 139.70); 　var map = new google.maps.Map(document.getElementById("map"),{ 　　zoom : 16, 　　center : latlng, 　　mapTypeId : google.maps.MapTypeId.ROADMAP 　}); //InfoWindow定義 　var infoWnd = new google.maps.InfoWindow(); 　function showInfo(){ 　　var pos = marker.getPosition(); 　　var content = "<p style='width:100px; height:30px;'>lat=" 　　　　　+ fix(pos.lat()) + "<br>lng=" + fix(pos.lng()); 　　infoWnd.setOptions({ 　　　position: pos, 　　　content: content 　　}); 　　infoWnd.open(map); 　} 　function fix(num){ return (num*10000 | 0)/10000; } //Marker作成 　var marker = new google.maps.Marker({ 　　position:latlng, 　　map: map, 　　draggable: true, 　　visible:false 　}); 　google.maps.event.addListener(marker, "click", showInfo); //clickイベント処理 　google.maps.event.addListener(map, 'click', function(evt){ 　　marker.setPosition(evt.latLng); 　　marker.setVisible(true); 　　showInfo(marker); 　}); } google.maps.event.addDomListener(window, 'load', initialize); </script> </head> <body> <div id="map" style="width:800px; height:600px; "></div> </body> </html> マーカーを追加していくなら、新しいオブジェクトを作成するようにすればよろしいかと。 （上のサンプルでは一つを使いまわしています） google mapに関しては以下に情報が公開されていますので、たいていのことはここで調べればわかります。 （この回答も、ここを見ながら作成しました） https://developers.google.com/maps/documentation …
<a href="https://twitter.com/share" class="twitter-share-button" data-lang="ja" data-url="http://◯◯◯◯◯◯◯◯◯◯◯◯◯/">ツイート</a> 　　↓ <script type="text/javascript"> <!-- (function(){ var element=document.createElement("a"); //aタグ生成 element.setAttribute("href","https://twitter.com/share"); //属性を設定 element.setAttribute("class","twitter-share-button"); element.setAttribute("data-lang","ja"); element.setAttribute("data-url",url); //URLはここで設定 element.appendChild(document.createTextNode("ツイート")); document.write(element.outerHTML); //aタグのHTML書き出し })(); //--> </script> というような方法しか思いつかないですね……。 ちなみに、 <script type="text/javascript"> <!-- document.write('<a href="https://twitter.com/share" class="twitter-share-button" data-lang="ja" data-url="' + url + '">ツイート</a>'); //--> </script> とするとセキュリティホール(DOM-Based XSS)を作ることになるのでNGです。 >>#1 > <div・・・・・data-href=url> > とすればいいでしょう。 残念ながら、そう書くと 　<div …… data-href="url"> と解釈されます。
No.1 の回答から 行削除が2行 行修正が1行 にて時分秒の表示になります
form要素をスクリプトでカスタマイズしているライブラリがありますが、それと同様のことを行えば可能と思われます。 要は、ブラウザの機能を使わずにスクリプトでそれとほとんど同じ機能を実装し直すといった感じでしょうか。その際に、質問者様の思う仕様にしておくことで、実現可能になるのでは。 　http://ryanfait.com/resources/custom-checkboxes- … 　http://www.givainc.com/labs/linkselect_jquery_pl … 　http://www.ay-sys.com/contents/form_select しかしながら、利用者は通常の表示と異なるためわけがわからず混乱する、というものをわざわざコストをかけて制作するようなことになる可能性があることをお忘れなく。
作ってみました。 jquery.cookie.jsというプラグインを使っているので、それだけダウンロードしてください。 jquery.cookie.jsに関しては http://www.tam-tam.co.jp/tipsnote/javascript/pos … 乱数に関しては http://fnya.cocolog-nifty.com/blog/2007/01/javas … を参考にさせていただきました。 IEとFireFoxでは簡単に動作確認したのですが、とりあえず動いているようです。 chromeではcookieを読むときにundefinedになってしまったのですが、同じような問題にぶつかっている人がいたので、chromeはローカルでは確認できないのかもしれません。 http://stackoverflow.com/questions/8105135/canno … よろしくお願いします。 <html> <head> <script type="text/javascript" src="http://code.jquery.com/jquery-1.11.0.min.js"></s … <!-- https://github.com/carhartl/jquery-cookieからダウンロード --> <script type="text/javascript" src="./jquery.cookie.js"></script> <script type='text/javascript'> $(document).ready(function() { var imgSrc = ""; var url = ""; if($.cookie("repeat")) { //もし将来的に乱数を増やしたくなったらこの変数を変える。 var randomTo = 3; //1から3の整数をランダムに生成。javascriptは乱数の作り方が複雑。 var num = Math.floor(Math.random()*randomTo+1); if(num == 1) { //画像Bのパス imgSrc = "./b.jpg"; //対応するURL url = "dummyb"; }else if(num == 2) { //画像Cのパス imgSrc = "./c.jpg"; //対応するURL url = "dummyc"; }else{ //画像Dのパス imgSrc = "./d.jpg"; //対応するURL url = "dummyd"; } }else{ //画像Aのパス imgSrc = "./a.jpg"; //対応するURL url = "dummya"; //cookieの寿命は7日間にしておく。 $.cookie("repeat", 1 , { expires: 7 }); } $("img#sample_img").attr('src',imgSrc); $("a#sample_url").attr('href', url); }); </script> </head> <body> <a id='sample_url' href=''><img id="sample_img" src="" /></a> </body </html>
<script>addEventListener('load',function(ev){ var mode = Math.random() * 100 | 0; var html = HTML文字列を取得する関数(mode); document.getElementById('test').innerHTML = html; },false)</script>
↓これですか？。 参考URL：http://www.kiyoty.com/blog/download/droppy.zip
A No3です。 意味が通じていなかったようなので… ＞あちこちに試しに挿入したり抜いたりを繰り返しているのです。 意図はわかりますが、ベースがよくないという意味の回答でした。 ＞alert("ちゃんと来てる場合は"+memoa); ではなく、 　alert("ちゃんと来てる場合"); とか、 　alert("OK"); などなら、カット＆ペーストでも良いのではという意味です。
＞id名をそれぞれ変えて設定してみます。 id指定でなく、class指定にすればよいのではないですか？。 class指定であれば、同一ページ内の複数箇所で指定可能です。
"for each" というと、Mozilla の JavaScript1.6 で追加された独自仕様の構文でしょうか https://developer.mozilla.org/ja/docs/Web/JavaSc … この構文はリンク先の説明によると「ECMA バージョン」が「なし」とされているので、 firefox 系統でしか使えないローカル仕様となります。 なので一般的に使用するのはおススメできません。 それは兎も角として 簡単に言えば、オブジェクトの各プロパティを繰り返し処理するのに 「名前」を使うのが "for in" 「値」を使うのが "for each" 例 var obj = { "愛":"それは甘く", "我が名": "オスカル" }; for (var 名前 in obj){ alert(名前) } // 「愛」と「我が名」を表示 for each (var 値 in obj){ alert(値) } // 「それは甘く」と「オスカル」を表示 // for each 構文を代替するおススメの記述 for (var 名前 in obj){ alert(obj[名前]) } // 「それは甘く」と「オスカル」を表示
http://wiki.fc2.com/about/ http://wiki.fc2.com/ http://php-beginner.com/practice/file_ope/file_o … http://php-beginner.com/practice/file_ope/file_o … https://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A3 … Wikipedia　が近い処理なのではと思いました ページを作成して　公開して　修正もできる wikiは　個人でも無料のサービスで始められます 自分で独自のものを作るなら　PHPなどサーバプログラムが必要です http://www.tagindex.com/html_tag/form/form_actio … 入力フォームからPOST/GETで送信して　サーバプログラムで受ける http://sitemix.jp/ http://atpages.jp/ PHPが動くサーバをレンタルして　プログラムを置けばできます シンプルで簡単なものならすぐにできると思います
変数の値が、ご提示以外の部分で操作されているようで、実際の値がどうなっているのか不明なので、想像だけですが… 単に、条件判定ではじかれているだけというのではないでしょうか？
「カルーセル」をどのような意味に使っていらっしゃるのかわかりませんが… javascript、slideshow。carouselなどをキーに検索すれば、いろいろなライブラリがヒットすると思います。 　http://www.bing.com/search?q=javascript+slidesho …
意図としては型変換をしたいのではないでしょうか？ <script> var ctrl=new Object(); ctrl.x1 = "100"; ctrl.y1 = "-200.5"; document.write(typeof ctrl.x1+"<br>"); document.write(typeof ctrl.y1+"<br>"); ctrl.x1= +ctrl.x1; ctrl.y1= +ctrl.y1; document.write(typeof ctrl.x1+"<br>"); document.write(typeof ctrl.y1+"<br>"); </script> ちゃんとやるならparseIntやparseFloatなどできちんとやった方がよいですね
まずは x = (event.pageX - offset.left - w / 2) * ((w > h)? h / w: 1), 置き換えると x = (マウスの位置 - 要素の座標 - 要素サイズの半分) * ((w > h)? h / w: 1), x = (要素の中心からの距離) * ((w > h)? h / w: 1), x = (要素の中心からの距離) * 要素の縦横比（アスペクト比）, x = アスペクト比を考慮した円周上の点 　　　※縦横が同じ比なら真円、異なれば楕円上の座標 つぎは direction = Math.round((Math.atan2(y, x) * (180 / Math.PI) + 180) / 90 + 3) % 4; direction = Math.round((Math.atan2(y, x) * (180 / 円周率) + 180) / 90 + 3) % 4; direction = Math.round(ラジアン * (180 / 円周率) + 180) / 90 + 3) % 4; direction = Math.round(角度 + 180) / 90 + 3) % 4; この段階で、中心からの角度となりますが、負の値も含むので、１８０度足して正の値の角度にします direction = Math.round(角度 ) / 90 + 3) % 4; で/ 90で４方向に分け、+3で端数切り上げ roundで四捨五入して% 4でふたたび４等分 ※ここの計算はかなりくどいですね、なんでもっと簡単な式にしないのだろうか？
$(document).unbind('contextmenu'); もしくは var お控えください = true; $(document).bind('contextmenu', function(e) { return !お控えください; }); // 再開時 お控えください = false;
タブレットは知らないのですが、イベントの種類が違うのでは？ 　http://kudox.jp/java-script/javascript-touch-event
なんとなく問題が分かりました。 JavaScript における for-in 句で取得できるキーは、 仕様書を読む限り "the name of the next property" となっています。 つまりキーは文字列型に変換される、と読み取れます。 実際に確認しましたが、for-in 句は必ず string 型を 取得するようです。 というわけで、 // 比較演算子は、型の自動変換を行うのでOK if ('8' <= 10) // switch句は、厳密な比較(===)を行うのでNG switch('8'){ case 8: ... } // parseIntすれば、number型で同じ値なのでOK switch(parseInt('8')){ case 8: ... } 余談ではありますが 型の自動変換に頼った比較演算をするプログラミングは、 いずれ必ず間違いの元になりますのでご注意ください。
拾ったのはhtml5のコードでしょうか？ それくらい書きましょう。 表示されないのは当然で、 リンクがhttpから書かれていないからです。 js.src = "//connect.facebook.net/ja_JP/all.js 「//」から書かれているのは、httpのページに埋め込んだ場合にはhttpで、 httpsに埋め込んだ場合にはhttpsで表示させるようにできる記述ですが、当然ローカルでは確認できません。 これをこのように変更すると、ローカルでも確認できるようになります。 js.src = "http://connect.facebook.net/ja_JP/all.js 色々なページに置くなら、アップ時にはhttp:は外しておいた方が無難かもしれません。 また、上記の「ja_JP」を「en_US」に変更すれば、 英語表記になります。 iframeの場合も同じで <iframe src="//www.facebook.com/plugins/like.php?… の「//」を「http://」に変更すればローカルでの確認が可能です。
ANo1です。 回答してから気付きました。 　backgroundをtransparentにするのが一番簡単かも。
こんにちは。 どの部分がサーバ側で処理されて、どの部分がクライアント側で実行されるかをきちんと理解すると、動作しない原因がみえてくると思います。
単純に 　(".datepicker")　→　$(".datepicker") とかではなくて？
もともとIEの独自仕様らしいので他のブラウザでの挙動については 標準化はむずかしいかと キー操作時の処理をわけるのではなく、入力後のデータをチェックする方が 重要なのですから。IMEのon/offは結局後からでも変えられるし
jQuery における get() とは、 「HTML要素を表すDOMオブジェクト」 を格納した配列を生成する処理です HTMLのテキストを取得するならば jQuery の html() がありますが、 これは 「"最初"のHTML要素の中身HTML」 を文字列で返す処理なので、 「"全て"のHTML要素の中身HTML」 を格納した配列を生成する必要があるならば jQuery の map() を併用しなければいけません 例: var 配列 = $(対象).map(function(){return $(this).html()}).toArray(); 余談ではありますが JavaScript において、 [123, 'abc', true] のようなデータを「配列」と呼びますが、 {a:1, 'b':'xyz'} のようなデータは「オブジェクト」または「連想配列」と呼びます。 お間違いなきようお願いします
挙動がおかしいときはfirefoxのfirebugかchromeのツールのjavascriptコンソールで エラー状況を確認するとよいですよ
Unicode前提の JavaScript において、 半角の文字、が何を指すのかは実は曖昧ですので、 思いつく限り回答します // ASCII文字 の場合なら var 結果 = /[\u0020-\u007E]/.test(入力内容); if (結果) alert("半角文字が入力された"); // ASCII文字+半角カナ の場合なら var 結果 = /[\u0020-\u007E\uFF61-\uFF9F]/.test(入力内容); if (結果) alert("半角文字が入力された"); // ASCII文字+Unicode互換用半角文字 の場合なら var 結果 = /[\u0020-\u007E\uFF61-\uFFDC\uFFE8-\uFFEE]/.test(入力内容); if (結果) alert("半角文字が入力された");
javascriptを使用するとSEO的にも、javascriptを停止しているブラウザにもまずいですので、通常は使用しませんけど？？？ 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから JavaScript、Cookie、セッション ID、フレーム、DHTML、Flash などの特殊な機能が使用されているためにサイトの一部がテキスト ブラウザで表示されない場合、検索エンジンのスパイダーがサイトをうまくクロールできない可能性があります。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［ウェブマスター向けガイドライン（品質に関するガイドライン） - ウェブマスター ツール ヘルプ( https://support.google.com/webmasters/answer/357 … )］より 　マウスオーバーによるプルダウンでしたら 　⇒ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) 　のようにHTMLさえきちんと書かれていたら、CSSで行うほうが良いです。 　　上記サイトで[表示]メニュー→[スタイルシート] 　それともブラウザのアドオンのように検索文字列と検索エンジンを組み合わせようとされているのですか？ <script language="JavaScript" type="text/JavaScript"> <!-- function search(){ q = document.forms[0].q.value; engin = document.forms[0].engin.value; if(q!=''){ if (engin == 'yahoo') { //alert ('yahoo'); window.open('http://search.yahoo.co.jp/search?p=' + q,"searchwindow"); } else if (engin == 'google') { //alert ('google'); window.open('http://www.google.co.jp/search?hl=ja&q=' + q,"searchwindow"); } } } //--> </script> ・・・・・・・・・・・・・・・・ <p><form name="searchEngineChange" method="get" action="" onSubmit="search();return false;"> <select name="engin"> <option value="yahoo">Yahoo</option> <option value="google">Google</option> </select> <input type="text" name="q"> <input name="" type="submit"> </form></p> 　ただ、検索エンジンによってキーワードの入力方式が異なるので、googleとyahoo!japanのようにgoogleエンジンを利用している物でないと使えません。・・・ということは検索エンジンを切り替える必要がない・・・ 　他の検索エンジンも使用したいなら、一旦CGIを経由しないとなりません。
addedをどのように計算しているのかわかりませんが、 if(added < fillter.length) が意図通り動作するということであれば、 その逆は if(added > fillter.length) ではなく if(added >= fillter.length) です。 つまり、addedの計算の仕方によりますが、 addedの値とfillter.lengthの値が等しいケースは 点数を超えているという判断にする必要があるのでは ないでしょうか?
私もプロじゃないので具体的なの書こうと思うと大変なので書きませんが、私ならアニメートさせたい要素ID(#記号が頭についてるのがIDで.記号が頭についてるのがclass)を配列に格納して、もしもクリックされた要素IDがその配列のリストに含まれていればアニメートするっていうスクリプト書きます。それならアニメートさせる要素が増えてもスクリプトのを今の行数1/3くらいに減らせるんじゃないでしょうか。 ちなみに質問者さんが質問しているのはjsはjsでも、jsを利用したライブラリであるjqueryなので、くわしい文法はjqueryとしらべてみてください。
一般的にコードは何をやっているのかが即座に分かった方が後から読むのが楽です。 その観点では2. のコードには以下の2点に問題があります。 (1) 　　コードとして途中まで何をやっているのかがわかる事は文字列を作っていることで、 　最後のinnnerHTMLの部分でようやくこのコードでid=feedな要素の中を書き換えていることが 　わかります。 (2) 　　そうやって何をやっているのか分かったところでその中身がどのように書き換わったのかを 　知るにはコードをさかのぼってhtmlsrcがどのように作られているかを確認する必要があります。 　つまり同じコードを2度読むことになります。 　　また、きちんと文書構造が整った文字列になっているかをきちんと検証する必要があります。 1. のコードはそれに比べてDOMによる要素構築という2. の方法よりも学ぶべき事が多い事をやっています。しかしその結果、このコードで何がしたいのかが早めに察することができます。また、どのような風に書き換わったかを処理の流れと使用しているメソッド名で即座に理解でき、きちんとした文書構造になることも適切なメソッドを使うことで保障されます。
＞クリックしただけの場合無反応です。 ページ内リンクのクリックのことでしょうか？ 状況がよくわからないので、ご提示の処理内容でOKなのでしたら、クリックした場合も同じ処理が走るようにしてしまえばいいのでは？ ただし、クリックした瞬間に処理してしまうと、まだ移動前の可能性があるのでわずかな時間差を設けておくほうが無難でしょう。 現状はscroll時の処理が無名関数になっていますが、これを 　　var scrollFunc = function(){ ～～～ とでもしておいて 　　$(document).click(function(){ setTimeout( scrollFunc, 10): }); みたいな感じではどうでしょうか？
一旦特定のタグを他のマーカーに変換した方がよいかと・・ <h1>・・<b>・・</b>・</h1> 　~h1~・・<b>・・</b>・~/h1~ 　　~h1~・・・・・~/h1~ 　　　<h1>・・<b>・・</b>・</h1> テキストエディタ使いな者で・・・(^^)
ブラウザのスクロール量を、その記事のトップになるようにアニメーションしていますので、 　animate({scrollTop:target_top}, 1200) 指定する位置を「記事のトップ-85px」にしてあげればよろしいかと。
$('.quotelink').ballon() の瞬間に別のイベントハンドラを割り込ませcontentsを取得投入するｗｗｗｗ 何という瞬間芸 aタグなんか、javascriptでballon定義した瞬間にどっか失せてますよ。 jquery.baloon.js のドキュメントを読むと、自力でイベント処理して汎用メソッド呼べと書いてある。 $('.quotelink').on("mouseover", function () { var link = $(this).attr("href"); content = $("aside#" + String(link).split("#")[1]).html(); content = content.replace(/\r\n/g, "");//IE content = content.replace(/\n/g, "");//Firefox $(this).showBaloon({ contents:content }); });
前者は基本的にそうです。後者の場合はobj.portalを呼ぶと上位スコープにgooが出てくるので obj.portal(),goo()でlogが呼ばれます ・最後に()演算子がないので、内側のgoo関数を実行することが出来ない ・外側のportalで、内側のgoo関数を呼び出していれば実行できるがその記述もない 付け加えるならばportalがgooを返していれば有用です var obj = { 　portal : function() { 　　var goo = function(){ 　　　console.log("a"); 　　}; 　　return goo; 　} } obj.portal()() 関数を返す関数は極めて重要なテクニックです
> dav.src = "gpikumin3.png"; 変数 dav とはなんでしょうか? おそらくは<div>の子要素の<img>を指すと思いますが、 それならば変数 div とは別に用意しなければいけません。 var dav = div.firstChild; または var dav = div.querySelector('img'); または var dav = document.querySelector('#setumei2 img'); あたりでいかがでしょう
InputText1に「あいうえお」という文字列が入っていたとしましょう。 このときのformCheckをトレースしてみます。 function formCheck(){ 　var flag = 0; 　if( document . Form1 . InputText1 . value . match ( /[^0-9a-zA-Z_]+/ ) ){ 　　//**半角英数以外の文字が入っているのでこちらへ** 　　flag = 1; 　　document . getElementById( 'notice-input-text-1' ) . style . display = "block"; //警告表示 　}else{ 　　document . getElementById( 'notice-input-text-1' ) . style . display = "none"; 　} 　if( document . Form1 . InputText1 . value == "" ){ 　　flag = 1; 　　document . getElementById( 'notice-input-text-1' ) . style . display = "block"; 　}else{ 　　//**InputText1は空ではないのでこちらへ** 　　document . getElementById( 'notice-input-text-1' ) . style . display = "none"; //せっかく表示した警告を非表示に…… 　} (略) } 1つの入力項目に複数のチェックをかける場合、 「エラーがあった時点でその入力項目はそれ以上調べない」ようにすると このようなミスを防ぐことができます。
ANo1です。 ＞ボタンを押すなど何かのきっかけで、青い丸に変えることをしたいと考えております。 イベント処理の中で、マーカーのアイコンを変えてあげればよろしいかと。 具体的には、マーカーオブジェクトのsetIconメソッドを利用するのが簡単かと思います。 　https://developers.google.com/maps/documentation …
"content_scripts" : [ { "matches" : [ "*://mail.google.com/*", "*://*.mail.yahoo.co.jp/*" ], "js" : [ "hogehoge.js" ], } ]
関数について以下のことをしっかり抑えておきましょう。 (１)関数の定義 　　var hoge = function(){return 5;}; (２）関数の実行 　 hoge();//関数が実行され、５が返される。 次に関数の定義と実行を纏めて行う方法。 (3)関数の定義と同時に実行(最後に()が付くのがポイント) var hoge = function(){return 5;}(); 　　最後に()を付けることで、定義と同時に関数が実行される。 この時、hogeには、関数の実行結果である5が格納される。 (4)　関数の定義と実行(引数あり) 　　var hoge = function(fuga){return fuga;}(10); 最後の()内の10がfugaに入り、関数はその数(10)を返し、hogeに代入。 定義時実行の書き方としては、以下の2パターンが有る。 (function(){})(); function(){}();
keyupをチェックしてみてください こんな感じ？ <script> try{ document.addEventListener('keyup',function(e){keyupfunc(e)},true); }catch(e){ document.attachEvent('onkeyup',function(e){keyupfunc(e)}); } var esc_count=0; function keyupfunc(e){ if(e.keyCode==27){ if(esc_count>=3){ alert("event!"); esc_count=0; return true; } esc_count++; }else{ esc_count=0; } } </script>
Math.random()は、 0 以上 1 未満 ということで、0 になることもあります。1にはなりません。 「 | 0 」は、0 と or でビット演算をするということですが、演算結果は整数となります。 Math.random()は、小数になるので、小数点以下を切り捨てるために、「 | 0」が付いているんですね。 breakは、switchのみを抜けます。breakが無いと、case 0の処理の後にcase 1の処理も実行してしまいます。
こんにちは。 どちらかというとJavaScript側でどうのこうのするのではなく、サーバ側の処理(post.php)で行う話になります。 また、表示だけ0にリセットするのか、記録については毎日取っておくのか、いろいろ要件が不確定な部分があります。 通常このようなシステムを作る場合、JavaScript側は取得してくるだけでサーバ側で時間等を制御し、値を返すように作ります。 もし自分が作るなら、0:00にcronやタスク等で起動し、日付ごとのデータをローテートするように作っておきます。 >これを累計の数ではなく、１日ごとにカウントするには、以下のコードをどのように変えたらよいでしょうか？ 上で述べたように、JavaScriptを変更するだけでは実装は難しいです。
No.2です。 ＞私のソースのどこが問題だったかは結局わかりませんでした。 　比較されるとわかると思いました。 div.section ol li div.figure div.figcaption{position:absolute;} 1)絶対配置にして親ブロックから独立させないとならないこと 2)そのときの基準は、直近のsttic以外の親コンテナブロック だけです。 9.6 絶対配置( http://momdo.s35.xrea.com/web-html-test/spec/CSS … ) 　そのためには、HTMLが文書構造をきちんとマークアップされていないとならない。 『メモ: CSSスタイルシートを意図した通りに機能させるには、正しい文書解析木が必要です。つまり、正当なHTMLを用いるべきです。( http://jigsaw.w3.org/css-validator/#validate_by_ … )』 　ということ。 　再度、ソースを確認して、firefoxのfirebugなどを用いてもひとつひとつのスタイルシートの意味を再確認してください。それが手間のようでも最も早く上達できる。
＞＞どういう処理が走るのでしょうか？ 普通にこれが上から順に実行されます var hoge = function(arg){ 　return function() {} }(arg); hoge(); ＞＞初めに実行されるのは？ 無名関数部分でhogeにfunction() {}が入ります 次にhoge()でその関数が呼ばれます ＞＞引数は渡らない？ はい
JavaScript の文法ですが、ザックリ言うと * 数字(0-9)で始まる単語は、数値型(number)の値 * 引用符("')で始まり引用符で終わる単語は、文字列型(string)の値、ただし引用符は除く * 英字(A-Za-z$_)で始まる単語は、同名の変数が指し示す(格納されている)値 * カギ括弧([])で囲まれた単語は、直前に示されたオブジェクト内の同名のプロパティが指し示す値 と解釈されますので // 引用符で始まっている単語 "i" は文字列型の値なので、そのまま表示 alert("i"); // 「i」を表示 // 英字で始まっている単語 i は変数なので、指し示す数値型の値(3)を文字列にして表示 alert(i); // 「3」を表示 // 英字で始まっている単語 j は変数なので、指し示す配列型オブジェクト(Array)の、 // カギ括弧で囲まれた単語 2 と同名のプロパティ(2)が指し示す、 // 数値型の値(3)を文字列にして表示 alert(j[2]); // 「3」を表示 // 英字で始まっている単語 sample_i と同名の変数を作成し(中略)値を代入 var sample_i = i; 「sample_i」の例ですが、書き換えるとしたら -- eval("sample_" + i + " = " + i + ";"); // 行儀良くない -- window["sample_" + i] = i; // 割とマシだがやはり良くない -- var sample = new Array(); ... sample[i] = i; // かなり良い -- var obj = new Object(); ... obj["sample_" + i] = i; // 応用性があってオススメ
document.fm.answer1.value = (answer1 /100).toFixed(2); document.fm.answer2.value = (answer2 /100).toFixed(2); 参考URL：https://developer.mozilla.org/ja/docs/Web/JavaSc …
たとえばこんな感じでランダム数をもとに場合わけしてみては？ <script> var cssurl= [ {"css":"hoge.css","max":0.7} ,{"css":"fuga.css","max":0.8} ,{"css":"piyo.css","max":0.9} ,{"css":"other.css","max":1} ]; var n=Math.random(); for(var i=0;i<cssurl.length;i++){ if(cssurl[i].max>n) break; } document.write(cssurl[i].css+":"+n.toString());//参考 </script>
str = "\n[名前] りんご\n[色] 赤\n[種類] 果物\n[値段] 100円\n" obj = str.match(/[^\n]+/g).reduce(function (obj, str) { 　var arr = str.match(/\[(.+)]\s*(\S+)/) 　obj[arr[1]] = arr[2] 　return obj }, {}) // Object {名前: "りんご", 色: "赤", 種類: "果物", 値段: "100円"}
こんにちは。 >ローカルPC上で開発しているときはルートより上を指定しても大丈夫だったので >サーバーにアップしてから気づきました。 xamppなりで開発環境としてローカルにもWebサーバを作っておいたほうが、確実に開発できますよ。
普通にやるとポップアップブロックに引っかかりそうですが こんな感じでどうですか？ <html> <head> <script> var w1=window.open("","w1"); var w2=window.open("","w2"); var w3=window.open("","w3"); function openWindow1(){ w1.location.href="http://yahoo.co.jp/"; w2.location.href="http://www.google.co.jp/"; w3.location.href="http://ja.wikipedia.org/wiki/%E3%83%A1%E3%82%A4% … } setInterval(function(){openWindow1()},10000); </script> <head> <body> ・・・ </body> </html>
こういうときは原文を参照することが理解の助けになることがあります。 https://developer.mozilla.org/en/docs/Web/JavaSc … global object→グローバルスコープでのthis(＝window) global objects→global objectの中にあるオブジェクト(Array, Mathなど)
#2です。 ミスった。 function ary1sort (a, b) { return a[1] > b[1]; }
> 同一ページ内全てのリンクを判別し、全ての対象の各リンクへ自動的にクエリ文字列を渡す方法をお聞きしたいです。 そういう仕様に作っていますが……。 #2のコードは試されましたか？ ページの<head>タグ内あたりに入れてみてください。 <script type="text/javascript"> <!-- window.addEventListner("load",function(){ //#2のコード }); //--> </script>
(c.querySelector ('*') || c).textContent = (m === t)
id は名称であって、データを入れるとロクなことがありませんよ 独自データ属性を使ってはいかがでしょうか http://www.html5.jp/tag/attributes/data.html == js addEventListener('load', function(){ _ var f = function(v){document.querySelector('div#report').textContent='ここは'+v+'階です'}; _ f('0'); _ document.querySelector('img.hogehoge').parentNode.addEventListener('click', function(ev){ __ f(ev.target.dataset.level); __ ev.preventDefault(); _ }, false); }, false); == html <div> <a href='#'><img class=hogehoge data-level=3></a> </div> <div id=report> </div>
>外部Javascriptファイルから読み込むと、 .jsファイルにHTMLタグを書いてはいけません。
CGIのPostDataを受け取るときもd4_buyで見てますか？
何と同期させるのでしょうか。 onloadはonloadイベントが発生したときに呼び出されます。 言い換えればonloadイベントと同期しているとも言えますね。 setTimeoutは時間と同期（現在時刻から何ミリ秒後）しています。
<meta name="viewport" content="initial-scale: 0.7"> これでどうでしょうか。 むしろ、何もしなければ全体表示になったと思いますけどね。
function disableButton(){ submitForm(); document.form1.button1.disabled = true; } disabledは「無効」なので先にtrueにすると値が参照できません。
こんなかんじですかね $("#btn").click(function(){ if($("#navWarp").css("left") === "200px"){ $("#navWarp").stop().animate({"left":"0px"},500); } else{ $("#navWarp").stop().animate({"left":"200px"},500); } });
関数 check はグローバルスコープに定義されるので、二番目の check が一番目を上書きしています。 対策としては * 別の名前に分ける * 一つの関数で条件分けする * 一つの関数にして、function check(form, textName, checkClassName) の様に汎用化する * 一つの関数にして、text と checkbox に専用のクラスを追加して汎用化する 下に行くほど大変ですがお勧めです
全然試してないけど以下のようにすると動くんじゃないかな。 function onResize()とvar onResize = functionとか、$(function() {});の書き方などは私の好みでこうしているだけなので適宜良いように書き直していただきたい。 ごにょごにょの中身は一切いじってないっす。 <script type="text/javascript"> function onResize(){ //ごにょごにょを行うファンクションを定義 　　var h = $(window).height(); 　　var w = h * 1.5; 　　//alert('縦幅' + h + 'なら横幅は' + w + 'pxになります'); 　　var bodyW = document.getElementsByTagName('body'); 　　var bW = bodyW.item(0); 　　bW.style.width = w + 'px'; 　　var contentBox = document.getElementById('content-box');//別のjs適用の都合による分離 　　contentBox.style.width = w + 'px'; } $(function () { 　　$(window).resize(onResize); // ウィンドウサイズが変わったときにごにょごにょするようにイベントハンドラを登録 　　onResize(); // ロード完了時にもごにょごにょする }); </script>
　HTMLはHyper Text Markup Languageの略で、文書をそれを構成する要素に分解して、それぞれがどのような要素であるかをマークアップする言語です。 　<h1>ここは見出し(heading)</h1><p>ここは段落(paragraph)</p>とね。いっぽう、スタイルシートは、それをどのようにプレゼンテーションするかを指定するものです。スタイルシートのひとつがCSS(カスケーディングスタイルシート)。 　文書構造と、それをどのように表現するかは別個の物です。<h1>見出し</h1>と書いたら大きな文字で表示されるのは、ブラウザ自身が初めから持っているスタイルシートに由来するだけです。 　それが、HTMLでいうところの「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )」です。 　transitinalでなくstrictを薦めるのは、HTMLを書くのがとっても楽で、かつデザインが自由に出来るからです。 　実際の物を見ないと理解しがたいと思いますので、サンプルを上げておきます。HTMLさえ、きちんと文書構造に基づいてマークアップされていたら、スタイルシートでどのようにもなる実例です。 ★./imagesホルダーに480×360pxの01.jpg,02.jpg,03.jpg,04.jpgを用意する。 　./images/thumbnailフォルダーに80×60pxの01.jpg,02.jpg,03.jpg,04.jpgサムネイルを用意する。 ★HTML4.01strict + CSS2.1です。 ★タブは＿に置換してあるので戻す。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- div.section ul,div.section dl{list-style-type:none;} div.section ul,div.section ul li, div.section dl,div.section dl dt, div.section dl dd,div.section h3, div.section p{ margin:0;padding:0; } div.section ul,div.section dl, div.section div.section{ width:600px;height:380px; border:solid 1px gray; margin:10px auto; position:relative; background:url(./images/01.jpg) 10px 10px no-repeat; } div.section ul li, div.section dl dt, div.section h3{ width:100px;margin:10px 5px 10px 500px;; } div.section ul li p, div.section dl dt+dd, div.section div.section h3+p{ display:none;position:absolute; top:10px;left:10px; } div.section ul li:hover p, div.section dl dt:hover+dd, div.section div.section h3:hover+p{ display:block; } --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>順不同リストとしてマークアップされている</h2> ＿＿<ul> ＿＿＿<li><img src="./images/thumbnail/02.jpg" width="80" height="60" alt=""> ＿＿＿＿<p><img src="./images/02.jpg" width="480" height="360" alt=""></p> ＿＿＿</li> ＿＿＿<li><img src="./images/thumbnail/03.jpg" width="80" height="60" alt=""> ＿＿＿＿<p><img src="./images/03.jpg" width="480" height="360" alt=""></p> ＿＿＿</li> ＿＿＿<li><img src="./images/thumbnail/04.jpg" width="80" height="60" alt=""> ＿＿＿＿<p><img src="./images/04.jpg" width="480" height="360" alt=""></p> ＿＿＿</li> ＿＿</ul> ＿＿<h2>定義リストとしてマークアップされている</h2> ＿＿<dl> ＿＿＿<dt><img src="./images/thumbnail/02.jpg" width="80" height="60" alt=""></dt> ＿＿＿<dd><img src="./images/02.jpg" width="480" height="360" alt=""></dd> ＿＿＿<dt><img src="./images/thumbnail/03.jpg" width="80" height="60" alt=""></dt> ＿＿＿<dd><img src="./images/03.jpg" width="480" height="360" alt=""></dd> ＿＿＿<dt><img src="./images/thumbnail/04.jpg" width="80" height="60" alt=""></dt> ＿＿＿<dd><img src="./images/04.jpg" width="480" height="360" alt=""></dd> ＿＿</dl> ＿＿<h2>単にdivで囲んであるだけ</h2> ＿＿<div class="section"> ＿＿＿<h3><img src="./images/thumbnail/02.jpg" width="80" height="60" alt=""></h3> ＿＿＿<p><img src="./images/02.jpg" width="480" height="360" alt=""></p> ＿＿＿<h3><img src="./images/thumbnail/03.jpg" width="80" height="60" alt=""></h3> ＿＿＿<p><img src="./images/03.jpg" width="480" height="360" alt=""></p> ＿＿＿<h3><img src="./images/thumbnail/04.jpg" width="80" height="60" alt=""></h3> ＿＿＿<p><img src="./images/04.jpg" width="480" height="360" alt=""></p> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
>var bodyW = document.getElementsByTagName('body'); >var bW = bodyW.item(1); >bW.style.width = w + 'px'; > >上記のように書き換えましたが、変数bWがnullと言われました。 NodeList、配列などのインデックス（添字）は0から始まります。
提示されたソースコードの修正ではなく、自分で作成したものですが、 参考になりそうでしたら、ご利用ください。 尚、このページの単純コピペだと、変なところで改行されて動作不良と なることがあるようなので、適宜修正してください。 //////////　以下ソース <!DOCTYPE html><html><head><title>サンプル</title> <meta http-equiv='Content-Type' content='text/html; charset=shift_jis'> <script type='text/javascript' src='http://maps.google.com/maps/api/js?v=3.13&sensor … <script type='text/javascript'> var LatLng,mOptions,pOptions,map,pano; function initialize(){ LatLng = new google.maps.LatLng(35.681382, 139.766084);　//位置の初期値 mOptions = { zoom: 16, center: LatLng, mapTypeId: google.maps.MapTypeId.ROADMAP }; map = new google.maps.Map(document.getElementById('mcanvas'), mOptions); pOptions = { position: LatLng, pov: {heading: 0, pitch: 0, zoom: 1.34 }　//方角、仰角、ズームの初期値 }; pano = new google.maps.StreetViewPanorama(document.getElementById('pcanvas'), pOptions); marker = new google.maps.Marker({ map: map, position: LatLng, draggable: true }); google.maps.event.addListener(marker, 'position_changed', function(){ LatLng = marker.getPosition(); pano.setPosition(LatLng); }); } </script></head> <body onload='initialize()'> <div id='mcanvas' style='width:640px; height:240px'></div> <div id='pcanvas' style='width:640px; height:240px'></div> </body></html> 追記： ・ＡＰＩはバージョン３．１Ｘを使用（私は３．０のマーカーが嫌いなので） ・初期位置は東京駅ですが、ビューがないので空白になります
基本的にできないものと考えて差し支えないかと
Issuesに同様の質問がありました。 https://github.com/bchanx/slidr/issues/12 addメソッドで少し細工する必要があるようです。 自分は英語が苦手ですが、具体的なコードも書いてあるので助かりますね。 slidr.create('slidr-img', { 　controls:'none', timing: { 'fade': '3s ease-in' }, transition: 'fade' }).add('h', ['one', 'two', 'three', 'one']).auto(); こんな感じでしょうか。
ちなみにこの場合、document.write()は使えないと思った方がよいです。 divにidを振ってinnerHTMLを書き換えたり input type="text"の要素のvalueを書き換えたりするのが妥当
＞1のoptionを選択したならAと表示する ＞2のoptionを選択したならBと表示する... 対比表をオブジェクトとして定義しておけばよいでしょう。 こんな感じ？ <script> function selectFunc(obj){ var arr={1:"A",2:"B"}; var val=obj.options[obj.selectedIndex].value; var txt=(typeof arr[val]=="undefined")?"":arr[val]; document.getElementById("hoge").innerHTML=txt; } </script> <select onchange="selectFunc(this)"> <option>選択してください</option> <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> <option value="4">4</option> </select> <div id="hoge"></div>
スタイル設定で 　style="background-color:black; color:orange;" とでもしておけばいいんではないの？ スクリプトで設定してもいいけど、色が変化するわけでもなさそうなので、意味がないですね。 ちなみに、ご提示のソースだけでは動作しません。
・リンク先に「DOMのノードリスト(HTMLCollectionやNodeList)の配列化」という記述があるのですが、意味が分からないので、教えてください NodeList等はJSのArrayを継承していないので、配列のメソッドが使えず、扱うに不便なことがよくあります。 JSの配列操作のメソッドは、制限が緩いので、いくつかは配列のようなオブジェクトに対しても適応可能です。 それを利用して、配列をコピーして新しい配列を作るメソッドを、NodeList等に適応すれば、純粋な配列に変換できることが期待できます。 ただ、コピーするメソッドというものはないので、複製して変化を起こすメソッドを、変化を起こさないよう指定して代わりに使います。 例えば、sliceメソッドに何も渡さない、arr.slice()は、arrをコピーすると同等の働きをします。 ただ、NodeList等は配列のメソッドをもってないので、関数を大元のArray.prototype.sliceから持ってきて、callでthis(処理対象)を挿げ替えます。 arr.slice()はArray.prototype.slice.call(arr)と書けるように、Array.prototype.slice.call(list)とすることで、listに対してsliceメソッドを適応でき、結果NodeList等を配列化することができます。 ・そもそも「JavaScript」と「DOM」は異なる概念 ・JavaScript… ECMAScriptに基づく ・DOM … Document Object Model Level Specificationに基づく DOMは、仰るとおりJSとは分離されていて、JSに対しAPIが提供されている形になりますが、なんだかんだ言って今も昔もJSを一番重視しており、完全に別物とも言い切れません。 そもそも「JavaScript」という言葉自体の定義が「ECMAScript」や「DOM」に比べてあやふやです。 ECMAScript＋DOM≒JavaScriptという見かたがされる時も多くあります。 ・JavaScript … 「オブジェクト型」「プリミティブ型」に分類可能 ・DOMオブジェクト … JavaScriptオブジェクトとは等価でない？ オブジェクトはオブジェクトですが、区別しようと思えばいろいろできます。 例えば今までは「ネイティブ」と「ホスト」という分け方がよく使われてきました。 語感でなんとなく意味はわかると思いますが、ESで定義されてなくて、ホスト環境で提供されるDOMオブジェクトは「ホスト」オブジェクトです。 また、最近では「ネイティブ」と「ホスト」は「一般的」と「特殊」という用語に置き換わっています。 何の事はないですが、DOMは「特殊」なオブジェクト、ただそれだけです。あまり深く考える必要はありません。 ・NodeList … JavaScript配列オブジェクトとは等価でない？ ・外見上は同じに見える「NodeList」「配列オブジェクト」判断の方法は？ 前後の文脈から？ ・HTMLCollectionとNodeListとの違いは？ NodeListとHTMLCollectionは微妙に異なりますが、あまり深く考えず、NodeListの方をメインとして、両者同じものとして考えていいです。 この２つについて知っておかないといけないことは、Arrayを継承していないので、配列のメソッドを使えない残念仕様ということだけです。 JSには今まで、仕様上外部からArrayを正当に継承出来なかったりしたので、このようなややこしい配列もどきが生まれたわけですが、ES6になってその部分が克服されたので、後に述べるように改善されようとしています。 ・リンク先は関係あるでしょうか？ なぜオラクル？ Java版のDOM実装仕様のページです。 ・もしかしてブラウザによって返す型が異なるのでしょうか？ そうであったりそうでなかったりします。 気にせず、気にしないといけないようなことをしないのが一番です。 ・結局「HTMLCollection型」「NodeList型」どちらが正しいのでしょうか？ あるいは同じ意味？ ２つともありますが、同じようなものです。 また、新しい仕様では、両者はArrayを正統に継承したElementsに一本化されることにもなりました。 既存のNodeList/HTMLCollectionが置き換えられることはありませんが、今後追加されるAPIではElementsが使われることになります。 つまり来年辺りからは３種類を扱っていかなければならなくなるわけですが、真APIはほとんどのケースで旧APIをより良く置き換えられるものなので、NodeList/HTMLCollectionを徐々に見なくて済むようになっていくとは思います。 また、既存のNodeListをArrayを継承させるよう仕様変更しようとする計画もありますが、これは実際テストしてみて既存のスクリプトで問題が出ないかどうかによるでしょう。
そのまんまではありませんが、Directions serviceを利用したルート表示の例 　https://developers.google.com/maps/documentation … gogleのサイトにはmapの解説やapiリファレンス及び上記のようなサンプルが豊富にありますので、参考にできるものがいろいろ見つかると思います。
正規表現では"|"が「または」という意味になります。 記載の正規表現の最後でも.jpgまたは.JPGまたは・・という風になっていますよね。 ですので、 >var imgCheck = entry.content.match(/(src="http:){1}[\S_-]+((\.jpg)|(\.JPG)|(\.gif)|(\.png))"/); これを var imgCheck = entry.content.match(/(src="(http:|https:)){1}[\S_-]+((\.jpg)|(\.JPG)|(\.gif)|(\.png))"/); にすればいいのではないかと思います。
お示しのサイト　 html ソースファイルの先頭行の最後が下記のように　”ＥＮ”　になっています。 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ＥＮの部分を　ＪＰ　(多分）　に変えるとＯＫかもしれないです。 ご存知のように　ＥＮ　→　Ｅｎｇｌｉｓｈ　　ＪＰ　→　Ｊａｐａｎｅｓｅ ですね。　ＪＰにするだけでは間違っているかもしれないので言語設定のマニュアルで確認してみてください。
クライアントで実行される JavaScript にサーバー依存の問題はないので、 思いつく原因としてはスクリプト以外の要因でしょうか 1. 通信先の設定がテストサーバー直指定なので、AJAXが失敗 2. HTTPサーバーの設定により、Content-Type が環境によって異なり、AJAXが失敗 3. HTTPサーバーの設定により、charset が環境によって異なり、文字化けで失敗 4. スクリプトを動的に生成(JSPやPHP)していた場合、環境依存のバグでスクリプト生成に失敗 検証方法は難しいですね... ブラウザの開発用ツールで地道にデバッグするしかないでしょう AJAX あたりの通信内容、特にヘッダ部なども監視しましょう
さっそく訂正。 　['月曜日', ['08:00-12:00', '13:00-18:00']], 　['火曜日', ['10:00-13:00', '14:00-20:00']], 余計な大括弧を消してください。 > jQuery を希望 はぁ～？なにそれ？必要なの？という立ち位置（今年も！）
javascriptとCSSの知識が必要になりますが、 window.print(); で印刷できます。 こちらのページが参考になると思います。 参考URL：http://bost.bostudio.co.jp/2013/05/post-7.html
＞・どういう時にプロパティが存在するか分かっていないのですが、プロパティは「オブジェクト」にしか存在せず「変数」にはない、という理解で合っているでしょうか？ ＞・区分すると「オブジェクト」「オブジェクト以外(＝変数)」みたいな分類は可能？ 　もう、この質問で、様々な概念が完全に混乱しているのが解ります。 　まず、最初に、型があります。例えば、数字であるとか、文字列であるとか、オブジェクトであるとかいったものです。関数だって、一つの型だと思えば、型になるんです。とにかく、javasctiptに登場するありとあらゆる物には型があります。 　この型を二つに分けます。 　プリミティブ型とオブジェクト型です。 　プリミティブ型は、簡単に言うと、単純な型です。正確に言うと、数値型・文字列型・undifind型・null型・真偽型のことです。これは、全ての型の中で基礎的な役割を果たします。 　そして、オブジェクト型は、他の全ての型です。オブジェクト型は、基本的には、データと操作を一つの型の形にまとめた物です。データのことをプロパティーと言い、操作のことをメソッドと言います。もちろん、プロパティーだけのものも作れますし、メソッドだけのものも作れますし、実際に両方とも存在します。 　プロパティーというのは、オブジェクト型に対して定義されたものですから、当然、オブジェクト型にしか存在しません。メソッドもしかりです。 　さて、型は、種類を表しただけで、実態を表しません。全ての型は、何らかの形で、生成して実体化する必要があります。生成して実体化した物をインスタンスと呼びます。 　例えば、int型と言えば、全ての整数を表します。単なる種類です。 　ここで、5と言えば、これは、一つの具体化された整数型の定数です。 　実体化して、初めて、演算子の適用も出来ますし、存在するのであればプロパティーの操作やメソッドの呼び出しが出来ます。 　さて、インスタンスには、実態を置く場所が必要です。この場所のことを「変数」と言います。（かなりアバウトな表現です。念のため。） 　変数には、何でも入れることが出来ます。プリミティブ型でも、オブジェクト型でも、特殊事例として、関数だって入れることが出来ます。 　 　ここで、演算子に関して、補足しておきます。 　全ての演算子には、演算子に対して使用できる型が定義されています。（正確には、全ての型には、自分自身に対して使用できる演算子が定義されています。） 　あなたが引っかかっていた、メンバー参照のための演算子「.」は、オブジェクト型に対して使用することが出来る演算子です。 　 　さて、変数には、何だって置くことが出来ますから、「何を」おいたかによって、その挙動は全く異なります。 　int型を格納した変数に対して、プロパティーを参照しようとしても無駄ですよね。Document型のインスタンスを格納した変数であれば、多数のメソッドとプロパティーが参照できます。 　最後に、文字列型に関してだけ補足しておきます。この型は一見、少々風変わりな挙動をします。プリミティブ型なのに、メソッドがあるように見えるんです。「一見」と言ったのには、からくりがあるからです。実は、string型という立派なオブジェクト型が存在します。そして、メソッドやプロパティーの呼び出しがあると、自動的にオブジェクト型に変換されているのです。その時々では、確実にどちらの形かが決まっていますが、文脈に依存するので、識別は少々面倒です。
>■質問1 >逆にプラグイン内で、jQuery.hoge = function() { と書くのはどんな時なのでしょうか？ この書き方をすると、 jQuery.hoge() という呼び出し方をしなければなりませんが、通常は、 var hoge=function(){} と書いて、 hoge() と呼び出せばいいので、よほどの理由がない限りは、jQuery.hoge = … という書き方をする事はありません。 グローバル変数を使うこと（変数名の重複）を気にするのであれば、 第三者の変数のプロパティ／メソッドを使うのではなく、自分で固有のオブジェクト（変数名）を作成し、 var re97; if( !re97 ){ re97 = {}; } re97.hoge = function(){}; とすることをお勧めします。 第三者のオブジェクト配下に入れると、 jQuery.hoge という変数名が、第三者が作成した物と重複の可能性が出てきます。（なお、この問題はプラグイン作成時のメソッド名でも同様です。） ですが、自分でオブジェクトを作成しておくと、 「re97」という変数名にだけ気をつければ、その配下は他人との重複を気にする必要が無くなります。 この変数名には、製品のブランド名、商品名、商標、またはドメイン名などを使えば、必ずと言っていい程他人と重複する事がありません。 >■質問2 >・「jQuery.fn.extend」「「jQuery.extend」は、上記とはまた別の話なのでしょうか？ jQuery.extend = jQuery.fn.extend = function() {} という作り方になっているので、内部的には同じ物ですが、 何をしているかというのを明示するために、以下の様にルールが作られています。 jQuery.extend()は第一引数を第二引数で拡張する時に使用します。 jQuery.fn.extend()はjQuery.fnを引数で拡張する時に使用します。（jQueryプラグインの作り方の１つです。） http://api.jquery.com/jQuery.extend/ http://api.jquery.com/jQuery.fn.extend/
getElementsByNameで同一name属性のエレメントを一度に取得できます。 あとは各エレメントに対して操作してあげれば良いでしょう。
■質問1 オブジェクト指向のインスタンスという意味であれば、javascriptにもオブジェクト指向はあるので答えは「あります」です。 ■質問２ そういう訳でhoge1もhoge2もint型ですので、インスタンスではありません。 javaでいう原始型ですね。 ■質問３ newすればできます。 ■質問４ javaでいうequalsメソッドはないので===で問題ないと思います。 参考URL：http://www.ajaxtower.jp/js/ope/index12.html
>最初の$1の部分はバックスラッシュを入れればドットが文字として認識されるという事ですかね されますが、それで何をやろうとしているのかは意味不明。 この処理でやろうとしていることは、拡張子を抜いたファイル名の後ろに"_on"を追加したファイル名に置き換えることです。順を追って解釈していきます。 ^(.+) 意味：先頭から（＝「^」）、任意の文字が（＝「.」）、1個以上続く（＝「+」）。 どこまでかというと、次の検索条件までですので、次を見ないとわかりませんが、 ここでは先に言っておきます、質問では「gnav_01」にあたります。 (\.[a-zA-Z]+）$ 意味：正規表現の記号ではなく、文字としてのドット（＝「\.」）の後ろに任意のアルファベットが（=「[a-zA-Z]」）、1個以上（＝「+」）、末尾まで（＝「$」）続く。 質問では「.png」にあたります。 そして、正規表現でカッコをつけることによって、置換えで「$数字」を使ってその部分を再利用できるようにしています。数字はカッコの順番になります。 "$1_on$2" 意味：1つ目のカッコの中身（＝「$1」）の後ろに「_on」をつけて、その後ろに2つ目のカッコの中身（＝「$2」）をつける。質問では「gnav_01」の後ろに「_on」をつけて、「.png」をつけて、「gnav_01_on.png」の出来上がりです。 ポイント：正規表現での1つ目のドットは任意の文字を意味する記号、2つ目のドットはエスケープ（＝「\」）された文字としてのドットです。
できると思います　 アンドロイドマーケットで画像編集ソフトがあるのでそこで調節するか 機種に内臓している画像編集があるのでそこで出来ます
JavaScript変数 は JavaScript でしか使えないので、 せめてテンプレートっぽく記述しては如何でしょう。 <script>(function(){ // 変数の定義 var templeVars = { yourName: [ 'textContent', "山田"], param: [ 'href', "abc"], }; addEventListener('load', function(ev){ // テンプレXXXを変数の内容に置換 for (i in templeVars) { var d = templeVars[i], s = document.getElementById(i); s[d[0]] = s[d[0]].replace('XXX', d[1]); } }, false); })()</script> <body> あなたの名前は<span id=yourName>XXX</span>です。 <a href="./index.php?room=XXX" id=param>コチラ</a>から。
> しかし、答えがすべて１になってしまうんでが… parseIntで小数点以下を切り捨てていますからね……。 parseIntを使わずに計算してください。
HTML+Javascriptです。 またはPHP/CGIを使用して作成することも可能。 自分なら HTML+CSS3+Javascript(最近ではjQuery)+PHP+MySQL でユーザの診断結果のとかMySQLに保存とかして グラフで統計とか。色々できる。
IEでのおまじないだったと記憶しています。 参考URLも貼っておきますね。 参考URL：http://memories.zal.jp/WP/blog/20100910_1918.html
phonegap等を使えばJavascriptで作成したアプリをJavaに変換して実行できますよー。
語句簡単な例 ※fixedを使うときは、隠れてしまう要素がないようにmarginを忘れず指定すること 　下記サンプルだと、section h2{margin-top:100px;}と#subsection3{margin-bottom:50px;} 　(下記サンプルのように)リキッドにするときは、fixedされた要素内で幅を指定すること 文字コードはUTF-8 ★タブは＿に置換してあるので戻す。 ★リキッドなので、スマホのような小さな画面から幅広ディスプレイまで、このままで利用できる。 <!doctype html> <html> <!doctype html> <html> <head> ＿<meta charset="utf-8"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA"> <style media="screen"> <!-- html,body{margin:0;padding:0;height:100%;} h1,h2,h3,h4{margin:0;} section{width:80%;min-height:100%;min-width:470px;max-width:900px;margin:0 auto;padding:5px;position:relative;} section h2{margin-top:100px;} section section{min-height:300px;width:auto;min-width:0;} #subsection3{margin-bottom:50px;} section h2,section p,section section{margin-right:130px;} header,footer{position:fixed;width:100%;z-index:100;} header{top:0;height:70px;} footer{bottom:0;height:50px;} header h1,header nav,footer h3,footer address{width:80%;min-width:470px;max-width:900px;margin:0 auto;padding:0 5px;} header h1{height:40px;line-height:40px;} header nav{height:30px;line-height:30px;text-align:center;} header nav ul,header nav ol li{margin:0;padding:0;} header nav ul li{width:20%;display:inline-block;position:relative;} header nav ul li a{display:block;text-decoration:none;width:100%;height:100%;} footer h3{height:30px;} section aside{width:120px;position:absolute;top:75px;right:0;} header h1,header nav{background-color:aqua;} section{background-color:yellow;} footer h3,footer address{background-color:lime;} header nav ul li{background-color:rgb(220,255,255);} --> </style> </head> <body> ＿<header> ＿＿<h1 id="title">Your title</h1> ＿＿<nav> ＿＿＿<ul> ＿＿＿＿<li><a href="#">Some</a></li> ＿＿＿＿<li><a href="#">navigation</a></li> ＿＿＿＿<li><a href="#">links</a></li> ＿＿＿</ul> ＿＿</nav> ＿</header> ＿<section> ＿＿<h2>A smaller heading</h2> ＿＿<p> ＿＿＿記事 ＿＿</p> ＿＿<section id="subsection1"> ＿＿＿<h3>A smaller heading</h3> ＿＿＿<p> ＿＿＿＿記事 ＿＿＿</p> ＿＿</section> ＿＿<section id="subsection2"> ＿＿＿<h3>A smaller heading</h3> ＿＿＿<p> ＿＿＿＿記事 ＿＿＿</p> ＿＿</section> ＿＿<section id="subsection3"> ＿＿＿<h3>A smaller heading</h3> ＿＿＿<p> ＿＿＿＿記事 ＿＿＿</p> ＿＿</section> ＿＿<aside> ＿＿＿<h3>目次</h3> ＿＿＿<ol> ＿＿＿＿<li><a href="#subsection1">1</a></li> ＿＿＿＿<li><a href="#subsection1">2</a></li> ＿＿＿＿<li><a href="#subsection1">3</a></li> ＿＿＿</ol> ＿＿＿ ＿＿</aside> ＿</section> ＿<footer> ＿＿<h3>A nice footer</h3> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</footer> </body> </html>
クリックしたときに表示状態をcookieで覚えておいて、location.herf=http://○○.com/sample.html?testとなるようにして、再度表示された時にcookieの値を取得して… ということをすればできると思います cookieはjQuery.Cookieとかを使えば比較的簡単に扱えます ※HTML5限定ですが、WebStorageを使うという手もあります
何を勘違いされてるのかわかりませんが。 jqueryはjavascriptのライブラリですよ。
C++やC#などを経験されていれば、「名前空間」と言えば理解できるでしょうか。 JavaScriptでシングルトンと名前空間を実現しようとすると、同じ物になります。 クロージャーを使うと直接値を変更（代入）できない変数を作る事ができます。 （Javaで言うところのプライベート変数） 以下の３つはほぼ同じになります。 1つめの例は、myApp.point = 5; としてpointに直接代入できます。 ---------------- var myApp = { 　point: 0, 　setPoint: function(p){ 　　this.point= p; 　}, 　getPoint: function(){ 　　return this.point; 　} }; myApp.point = 5; alert( myApp.getPoint() ); ------------------- var myApp; (function(){ 　var point = 0; 　myApp = { // varを付けていないので、function(){}の外のmyAppに代入する 　　setPoint: function(p){ 　　　point= p; 　　}, 　　getPoint: function(){ 　　　return point; 　　} 　}; })() myApp.setPoint(5); alert( myApp.getPoint() ); -------------------- var myApp = (function(){ 　var point = 0; 　return { 　　setPoint: function(p){ 　　　point= p; 　　}, 　　getPoint: function(){ 　　　return point; 　　} 　}; })() myApp.setPoint(5); alert( myApp.getPoint() );
if(i % 4 === 0) でした。失礼。
少し違うかも… こんなのでは？　（って、判じ物じゃあるまいし…） jQuery(function($){ 　　var openP; 　　$("ul.panel>li").hide(); 　　$("ul.tab>li>a").click(function(){ 　　　　var p = $(this).attr("href"); 　　　　$(openP).slideUp(); 　　　　if(openP === p) openP = null; else $(openP = p).slideDown(); 　　　　return false; 　　}); }); （全角空白は半角に）
＞if(isNaN(frm_txt){ ＞どうなるのでしょうか？ やればわかると思うんですけど。丸括弧の数が合ってないので動きません。 まあそれはともかく、isNaNですからfrm_txtが数値じゃない場合だけ{}の中の処理を行います。 ちなみにisNaNは数値だけでなく「数字」でもfalseになるので注意してください。 isNaN(3) //=>false isNaN("5") //=>false
とりあえず、var定義をfunctionの外に出してしまえば参照可能にはなると思いますが… 値が変化するので、参照するタイミングによっては取りたい値にならないかもしれません。 特別に複雑な計算をしているわけではないので、スクリプト実行時の同様の値を求めたいだけなら、参照しなくても同様の方法で求めればよろしいかと思いますが。
サイズの調整は、オリジナルの機能にあるので簡単にできそうです。 コンテナのサイズを事前に指定しておいて、それに応じてxPos、yPosの値を指定してあげればよろしいかと。 解説には、xPos、yPosとも円の中心のようなことが書いてある様に思いますが（英語苦手なので違うかも）、yPosは円の上端になっているみたいですね。 リンクを変えるのはもともとの機能にないでしょうから、スクリプトの中を読んで正面にあるかないかで処理を分けるように変更するしかないでしょう。
ブラウザによる id/name の混同は悪習ではありますが、 互換性の為に今後も残る可能性がありますので、 ちょっとした契機でバグが発生する要因として、 これからも生き残っていくのでしょう。 残念ながら なので、この手の対策として * id と name で被らない様な名前付けをする を今後も心がけたほうが良いでしょう。 そもそも目的の異なる属性なので被らない筈です。 <input type=text name=hoge id=hoge> なんて実装は論外ですよ!
$(".number").each(function(){ $(this).html(parseInt($(this).html())-1); }); かな。ポイントはeachと$(this)です。
提示されたコードをChromeで試してみましたが、ちゃんと動作しましたよ。 そもそも、JSで動的にセットされたmetaを何に使うのかが不明ですが、 クローラはJSを実行できないと思いますので、contentにセットしても意味がないような。
isNaN() はNumber型の関数で、NaNかどうかを判定しbooleanを返します。 NaNはNot a Number（だったかな？）の略で、この変数が何かのオブジェクトを持っている（nullやundefined でない）けど、数字として認識不可だよ、みたいな状態です。 なので、 var a = parseInt( "a" ); → NaNが入る var b = parseInt( "10" ); → 10が入る である場合、 isNaN( a ); → true isNaN( b ); → false になり、あとは数値になっている場合のみ、つまり、isNaNがfalseを返す場合のみ偶数奇数チェックをすればいいので、if文のelse内で偶数奇数チェックをすればいい、ということになります。
＞相変わらず最後の文字が消えないのですが… Jqueryおよびスクリプトの記述位置・記述方法が誤っていると思われますよ。 （当方のテストでは問題なく動作しています）
setCenterの呼び出し位置がまずいですね。 ジオコーディングに成功して座標がとれた段階で実行するように変更すればうまくいきます。 var map; var geocoder; var Slat = null,Slng = null,Glat = null,Glng = null; // add function initialize() { geocoder = new google.maps.Geocoder(); var latlng = new google.maps.LatLng(35.699338,139.705146); var myOptions = { zoom: 12, center: latlng, mapTypeId: google.maps.MapTypeId.ROADMAP } map = new google.maps.Map($("#map_canvas").get(0), myOptions); } // add function function moveCenter(){ if(Slat && Slng && Glat && Glng){ latCenter = (Slat + Glat)/2; lngCenter = (Slng + Glng)/2; map.setCenter(new google.maps.LatLng(latCenter,lngCenter)); } } function codeAddress() { var address = document.getElementById("start").value; var info = document.getElementById("geocoder_info"); Slat = Slng = Glat = Glng = null; //add geocoder.geocode( {'address': address},function(results, status) { info.innerHTML = results[0].formatted_address + "<br>" + results[0].geometry.location; if (status == google.maps.GeocoderStatus.OK) { Slat = results[0].geometry.location.lat(); Slng = results[0].geometry.location.lng(); var marker = new google.maps.Marker({ map: map, position: results[0].geometry.location }); moveCenter();//add } else { alert("次の理由でジオコーディングに失敗しました: " + status); } }); var address2 = document.getElementById("goal").value; var info2 = document.getElementById("geocoder_info2"); geocoder.geocode( { 'address': address2},function(results2, status2) { info2.innerHTML = results2[0].formatted_address + "<br>" + results2[0].geometry.location; if (status2 == google.maps.GeocoderStatus.OK) { Glat = results2[0].geometry.location.lat(); Glng = results2[0].geometry.location.lng(); var marker2 = new google.maps.Marker({ map: map, position: results2[0].geometry.location }); moveCenter();//add } else { alert("次の理由でジオコーディングに失敗しました: " + status); } }); }
イベント登録が重複しています。 クリックイベント登録は1度で。 var point = 0; var question; function setQuestion(questionId) { question = questions[questionId]; $('#question').text(question.text); $('#point').text(point); $('#optionA').text(question.options[0].text); $('#optionB').text(question.options[1].text); } $(function() { setQuestion('1'); $('#optionAButton').click(function() { point += question.options[0].point; setQuestion(question.options[0].next); }); $('#optionBButton').click(function() { point += question.options[1].point; setQuestion(question.options[1].next); }); })
<body> <p id="mess" style="display:none">ちょっと、待てよ～</p> <script> function test () { 　n = 1000; 　var i, j, k; 　for (i = n; i--; ) 　　for (j = n; j--; ) 　　　for (k = n; k--; ) ; 　 　return; } function wait (func) { 　var cbFunc = function () { 　　setTimeout (func, 5); 　　setTimeout ("mess(0);", 5); 　}; 　 　mess(1); 　setTimeout (cbFunc,5); } function mess (state) { 　document.getElementById ('mess').style.display = state ? 'block': 'none'; } wait (test); </script>
サンプルに挙げられている感じでよいのであれば、左右の画像をそのまま断面がギザギザの左と右に置き換えれば、ほぼいけるのではないでしょうか？ 断面がギザギザであっても、最初は二つの透明png等をうまくつながるように表示しておけばよろしいかと思います。 ＞パキっと動かしたいのですが・・・ ご提示のサイトではjQueryを利用していますので、動きそのものは同じで速度を変えたいだけなら、アニメーションのdurationを変更すればよろしです。 動きは同じでも速度にムラのある感じ（エフェクト）にしたいのであれば、jQueryのeasingを利用することで比較的簡単に実現可能です。 　http://alphasis.info/2011/05/jquery-easing-plugin/ 割れる感じを表現するのに画像の回転も組合せて表したい場合は、HTML5のcanvasを利用するのが良さそうです。 仕組みは同じで画像を表示しておいてアニメーションすれば良いのですが、canvasでは表示軸をそれぞれ回転させることができたと記憶していますので、かなり違った印象にすることもできると思います。 　http://www.html5.jp/canvas/ref.html
alert()メソッドの括弧忘れ、ではないですかね？
>return falseをしているせいなのだと思いますが、回避策を教えて 質問の意図がわからないのですが、 わかっているならreturn falseをはずせばいいだけでは？
＞できればリンクを擬似的にクリックできたらと思い調べています。 onclickを使うと、ポップアップブロックを回避できるという記事を見かけました。 試してみてはどうでしょうか。 参考URL：http://sadakitchen.blogspot.jp/2010/11/iefirefox …
>No.1お礼 >ラッパーファイル ラップというのは、「包み込む」という意味です。（サランラップ、クレラップなどの「ラップ」です） ラッパーというのは何かを包み込んでいる物です。 >example.jp/home/index.htmlにアクセスするとそのindex.htmlの中でhome/main.htmlとheader.html, footer.html, menu.htmlがJavascriptによって読み込まれるようになっています。 このように、他のファイルを読み込んでいるファイルを、ラッパーと呼びます。
ほとんど同じなのと、ループ内で同じ計算をしてしまっていますが・・・ var icoPos = ($(window).width() / 4); for(var i=0; i<16; i++){ 　var selector = "li.icon" + (i<9?"0"+(i+1):i+1); 　var position = (-icoPos * (i%4)) + "px "; 　　　position += (icoPos * (i/4|0)) + "px"; 　$(selector).css("background-position", position); } ところで、background-positionの指定ってこれでいいんでしたっけ？ （キャメルケースだったかも…）
firefoxのアドオンに 　⇒ Dafizilla Table2Clipboard( https://addons.mozilla.jp/firefox/details/1852 ) 　⇒ TableTools2 - Copy/Sort/Chart/Filter Table&More!( https://addons.mozilla.jp/firefox/details/296783 ) があります。お好きに・・ 　ブラウザ経由で何かしたいときは、firefoxのアドオンをまず探してみましょう。 Firefox アドオン | Mozilla Japan の公式アドオン紹介サイト( https://addons.mozilla.jp/firefox/ )
惜しい……！ anim関数内のsetInterval(draw, 60);でアニメーションが開始されます。 なので、setIntervalを呼ぶ前に初期値を設定してください。
各要素にロールオーバーを設定する前に、画像が存在するかを確かめればよいのではないでしょうか？ 画像の存在を確認するには、よく行なわれている画像のプレロードを試みて成功すれば存在、失敗なら存在しないと判断すればよさそう。 画像の読み込みには多少なりとも時間を要するので、コードの書き方に注意が必要です。
fillとstrokeがごちゃごちゃになっていませんか？ fillStyle→塗りつぶしの色。fill()を呼ぶことで塗りつぶす strokeStyle→線の色。stroke()を呼ぶことで線を描画する
> <script> > gettext = document.location.search; > gettext = gettext.substring(1, gettext.length); > // document.receive.textfield.value = decodeURI(gettext); > alert(gettext); > </script> > > 以上のコードでアラートに出力できたのですが、コメントアウトしてるスクリプトでtextareaであるname属性がtextfieldにテキストとして出力したいんです。 > > 　FC2のホームページでformタグを使いたいので、調べてみたんですが、上のようなスクリプトになりました。 > > どうしたら良いでしょうか？ name="receive"なフォームがあって、 その中にname="textfield"なテキストエリアがあるなら 　document.receive.textfield.value = decodeURI(gettext); で設定できます。
可変であるならIDは指定できると思います。 固有のオブジェクトを示すものなので被らないようにしましょう。 現状ですと親のIDを固定名で指定しているので全ての子セレクトボックスにイベントをバインドしても 親が同じになってしまいます。 HTMLは変更できるけどjQueryの書き方がわからないという話であれば 下記でできると思います。 $(document).ready(function(){ //セレクトボックスのうち、idが_childで終わるものを取得 var children = $('select[id$="_child"]'); //各小セレクトボックスにイベントをバインド for (var i = 0; i < children.length ; i++) { $(children[0]).dependent({ //idから_childを除き、親のidを指定する。 parent:children[0].id.replace('_child', ''),//親のid名 group: 'selectable' }); } <select name="id1" id="id1" class="selectable"> <option value="">-- select --</option> </select> <select name="id1_child" id="id1_child" class="selectable"> <option value="">-- select --</option> </select> <select name="id2" id="id2" class="selectable"> <option value="">-- select --</option> </select> <select name="id2_child" id="id2_child" class="selectable"> <option value="">-- select --</option> </select>
経験ありませんが、 スマホかＰＣかで分けるなら、userAgentで振り分け。 　http://rfs.jp/sb/javascript/js_lab/smartphone_us … 　http://halapper.seesaa.net/article/256638716.html 画面サイズで分けるなら、そのまま画面サイズを取得して振り分け。 ・・・で、ご質問のツールチップの動作/非動作を決めればよいのではないでしょうか？
スクレイピングと聞くと（笑 最近のWebサービスはスクレイピング逃れに真剣で、次から次へとAjaxにしやがる 最近はセッション情報まで参照して、httpモジュールで直に呼んでも取得が面倒になってきた Selenium2　が回答かな。 これ使われたら、サービス側では防ぎようがないかも 今のところ全勝です
回答がないみたいなので・・・ どのような方法をとっているのかわかりませんが、文字列全体を変換するのでしょうから正規表現などを用いなくても、頭から1文字ずつ変換してゆけばいいのでは？ string.substr(n, 1) でn文字目の一文字が抽出できます。（最初のindexは0） 画像がどの範囲まで用意されているのか不明ですが、入力値に漢字が入っていたら変換「×」とするなどを考慮して、変換表を作っておいてそれをもとに変換してあげるとか… 文字と画像名（url）に規則性があれば、そのような表も不要になりますが… 方法はいろいろあると思いますが、簡単な一例を… （”あいうえお”のみ対象で、変換表を用いるサンプルです） var test = 'あいうえおabc'; var table = { 'あ' : 'A.jpg', 'い' : 'I.jpg', 'う' : 'U.jpg', 'え' : 'E.jpg', 'お' : 'O.jpg', 'other' : 'None.jpg' }; document.getElementById('hoge').innerHTML = test.split("").map(function(letter){ return '<img src="' + (table[letter]?table[letter]:table['other']) + '" alt="">'; }).join('');
ここに書いたソースコードそのままを実行しましたか？ そうであれば「ajaxの外」が「forの外」より先に表示されませんでしたか？ たしかajaxメソッドはデフォルトが非同期実行だと思いました。 同期実行にすれば解決すると思います。
アカウントではなくブラウザに紐付けられた、または一時的なカートならJSだけでできます。 商品選択側ではlocalStorageにデータを追加して、カート側ではload時に一覧作成とstorageイベント発火時に追加の処理をして下さい。 そういう流れで、後は行を増やしたり情報を<td>ごとに振り分けたり、好きなように１つ１つ解決していって下さい。 あとこの手の事はローカルでは上手く動かないことがあります。 もしそのようなら起動フラグを調整したりいろいろ工夫して下さい。
if you need more games find new html5 games here: http://www.newhtml5games.com and Friv games here: http://www.frivgamy.com
ANo1です。 ＞こちらはあくまでtargetに入るのはhref属性(http://www.hogehoge.com) ＞だと思うのですが、 すでに、No2様が詳しく説明してくださっている通りですが… そもそもご提示のコードでは、clickイベントはページ内リンクのあるリンク要素にだけ設定されています。 それなので、イベント処理が実行されるのはページ内リンクがクリックされた時だけです。 ページ内リンクは基本的に#fugaといった形式になっており、targetにはこの値が代入されます。 その状態でtargetをセレクタとして利用すると、$(target)は$("#fuga")と同じ意味となり、結局のところ、id="fuga"を持つ要素を意味することになる。 という仕組みです。 まとめて $( $(this).attr('href') ) と記述しても同様です。
単純に<head></head>内に、 <meta http-equiv="refresh" content="5;URL=http://www.newcredge.com"> とでも書いておいて、正月が終わればこの部分削除すればよい。 javascriptを利用できない端末にも有効ですし、確実です。 数字は秒数!!
ご提示のページがおおもとの説明ぺーじでしょうから、それ以上の情報があるところはないのでは？ ここの解答欄で書けるよりも、よほど情報量は多いですし。 ＞APIの呼び出し方が分かりません。 参考ページによれば、 　ｈttp://jlp.yahooapis.jp/MAService/V1/parse にappid、sentence、resultsなどをセットしてリクエストすればよいと書いてあるように思えますが… サンプルコード http://developer.yahoo.co.jp/sample/jlp/sample2. … サンプル動作ページ http://cgi.geocities.jp/ydevnet/sample/jlp/sampl … 漠然とした質問でなく、内容を限って質問すれば、ここの限られた文章量でも回答が得られるかもしれません。
以下なら可能です。ちょっと質問内容から外れますが $(function(){ function test(){} $(対象のP要素).click(test); });
No.1 ですが、例示内容が少々分かりづらい内容だったので修正します。 // 最初のアニメの番号 var index = 0; (function(){ // index番目のアニメ 処理(index); // 次のアニメの番号に更新 index = index + 1; // 次のアニメの番号が条件を満たすなら、Nミリ秒後に再実行 if(条件(index)) { window.setTimeout(arguments.callee, N); } })();
うまく伝わっていないみたいですな。 Output.aspxとTestJson.aspxの2つに分けてください、ということです。 (Javascriptをjsファイルに入れるのはそれで構いません) サンプルのページでは ・Output.aspx(ブラウザ表示用) ・TestJson.aspx(Ajax用) ・TestJson.aspx.cs(TestJson.aspxへのリクエストを受けた時に実行するコード) の3つのファイルが用意されています。 表示するページは1つだけなのに、Output.aspxとTestJson.aspxの2つがあるのはなぜかというと、 その方が ・ページ表示時はhttp://localhost/Output.aspx ・Ajax通信時はhttp://localhost/TestJson.aspx と、URLを見るだけでページ表示がしたいのか、Ajax通信がしたいのかを区別できるからです。
こんにちは。 ・カレンダーの表示は出来ましたか？ できているならそのソースを提示ください。（回答するのにそれにあわせる必要があるかもしれないため) ・クリックした日の情報はどのように持つ想定ですか？ 　データベース、日付ごとのhtml(yyyymmdd.htmlみたいな)、JavaScriptの配列等 実装方法は多岐に渡ります。
UL要素の一覧を取り、個々にLI要素を勘定し、結果を配列とする簡単なやり方 var 結果 = [].map.call( 　document.querySelectorAll('ul.myClass'), 　function(ul){return ul.querySelectorAll('li').length} ); // 質問の HTML を対象に実行すれば、結果 = [2, 3] 余談ではありますが、以下の関数は間違いやすいのでご注意ください document.querySelector() - 該当する最初の一件だけをとる document.querySelectorAll() - 該当する全てをとる
同時・複数ユーザがアクセスする環境であること、パフォーマンスの問題、リソースの節約など、すべての点から見て、「中間ファイル」を作って処理することは良いソリューションとは言えません。 アクセスが（例えば管理者機能など）ただ一人のアクセスが保障されており、中間データを使用することによりアプリケーションの単純さが保たれる場合には、あえて中間データを作ることもあります。 （xml/js/jsonあるいはDBのテーブルなど） GoogleMapの場合、地図のズームやパンなど、クライアント側で発生するイベントに対応するには、javascriptのイベントハンドラ内部で、サーバにAjaxリクエストを行い、結果をJSONで取得し、javascriptオブジェクトとしてコールバックメソッドを実行、再描画するのが普通です。 中間ファイルは絶対に使いません。 ASP.NET WebフォームでJSONを返す方法は、WCFのWebサービスで行う方法や、JSON.NETを使う方法、文字列を直接生成してレスポンスとして返す方法など、色々な方法があります。 ご指摘の手法は、なかなか簡潔でしゃれた方法ではないかと思います。 また、ASP.NET Webフォームでしたら、あらかじめその辺りの機能をラップしたサーバコントロールを使う手もあります。 けっこう有名なサーバコントロール：Google Maps Subgurim http://en.googlemaps.subgurim.net/
0個以上の複数対象に同一の操作を行う簡単な記述 var a = Array.prototype.slice.apply(document.getElementsByClassName(クラス名)); a.forEach(function(e){e.innerHTML = 中身}); もっと簡単な記述 Array.prototype.forEach.call(document.getElementsByClassName(クラス名), function(e){e.innerHTML = 中身}); さらに簡単な記述 [].forEach.call(document.getElementsByClassName(クラス名), function(e){e.innerHTML = 中身});
#2,5,6 です。#5 は古いバージョンのURLだったので下記URLに訂正します。失礼しました。 http://jsfiddle.net/JrxR3/4/
var を付けない変数宣言では Strict Mode 時に SyntaxError になります。 https://developer.mozilla.org/ja/docs/Web/JavaSc … var は変数のスコープを明示する為に常につけるべきです。 http://cou929.nu/data/google_javascript_style_gu … 複数人での作業ならvar必須の規約で統一します。 常識や暗黙で通じるのは、お互いによく見知っており、途中で人員の変更が起きないことが確定している場合に限定されます。 # Re: re97さん
カードが不揃いの場合を「3枚目以降は何もしない」状態にすれば、 次のカードが開けません。 switch(card_c) { case 0: card_c++; 1枚目を開いた処理(); break; case 1: card_c++; 2枚目を開いた処理(); break; default: 3枚目以降は何もしない(); } card_c を 0 に戻すタイミングですが、 二枚がそろった場合は、2枚目を開いた処理() の中で 二枚がちがった場合は、bunki() の中で -- 回答とは関係ありませんが、せっかくなので提案です。 間違えた場合に簡易アニメーションをしているので、全部裏返す処理も、 1枚目裏返す→N秒後に2枚目裏返す→...→N秒後に8枚目裏返す とアニメをしてはいかがでしょうか。
英語はさっぱりなのでよくわかりませんが… このnextSelectorとかって違うのでしょうか？ http://bxslider.com/options
window.onloadが3回設定されていますが、この方法だと最後に設定した 　window.onload = function(){ 　　hideForm3(); 　} しか有効になりません。 　hoge = 1; 　　(中略) 　hoge = 2; 　　(中略) 　hoge = 3; というコードがあったときに、window.onload実行時点でのhogeの中身が3であるのと同じです。 1つのイベントに対して複数のイベントハンドラを設定したい場合はaddEventListener関数を使用してください。 https://developer.mozilla.org/ja/docs/Web/API/Ev … 　window.onload = function(){ 　　hideForm1(); 　}; 　　　↓ 　window.addEventListener("load", hideForm1); 　　または 　window.addEventListener("load", 　　function(){ 　　　hideForm1(); 　　} 　);
Hoge はグローバルスコープの変数で、 変数が指し示すのが名前空間「っぽい」オブジェクトです。 そもそも JavaScript には言語的に名前空間がありませんが、 慣習的に名前空間「っぽい」オブジェクトの書き方があります。 この名前空間「っぽい」オブジェクトを導入する利点としては、 ・他人の作ったスクリプトと並存したときの危険性が下がる (グローバルスコープの汚染が少ないので変数名が被りづらい) ・関連する変数や関数が集まっているので管理がしやすい ・コーディングが綺麗になる (全ての関数名に長ったらしい前置詞を強制されない) があるので、ある一定の規模のライブラリを作るなら採用するのが常識になっているようです。 jquery.js なら $ とか jQuery とかですね。 Hoge.getPerson() の挙動ですが、詳しく整理するならば グローバルスコープの変数 Hoge → が指し示すオブジェクト (即時関数の戻り値である名前空間っぽいオブジェクト) → のプロパティ getPerson → が指し示すオブジェクト(ローカルスコープの_getPersonに入っていた関数オブジェクト) → を実行 余談ではありますが、 Hoge というのは命名規則的にどうかと思います。 JavaScript は一応は Java っぽい言語なので、命名規則も大体は Java に準じています。 で、Java の推奨される命名規則といえば、 パッケージ: hoge.boke クラス: HogeBoke 関数名: doHogeBoke 変数名: hogeBoke 定数名: HOGE_BOKE ですので、JavaScript でも名前空間っぽいオブジェクトは hoge とすべきでしょう。
JavaScriptで実現できるかどうかは分かりませんが、 一般的には ・テクスチャフィルタリングでズームによる画像の荒さをごまかす ・ミップマップ といったテクニックが使われることが多いかと思います。
＞前後の文字で判断する そういうときこそ「正規表現のreplace」だと思うのですが… alert("1234五6789".replace(/(\d)五/,"$15")); alert("1234五67891234五67891234五6789".replace(/(\d)五/g,"$15"));
日付を拾いたいっていうことでしょうか？ いずれにしろ、入力行は必ずしも分割する必要はないと思います。 とりあえず　数字（2個以下）/数字（2個以下）　みたいなのを拾い出す例 正しい日付かどうかのチェックは行っていません。 （一発で出来るかもしれませんが、正規表現が苦手なので2回に分けてます） function tester(){ 　var i, s, str = document.getElementById('input_text').value; 　str = str.match(/(^|\D)\d{1,2}\/\d{1,2}(\D|$)/gm); 　if(str) for(i=0; s=str[i]; i++) str[i] = s.match(/\d{1,2}\/\d{1,2}/); 　alert(str? str.join(" "): "no Mathch"); }
URLが変わっているのなら、読み直しているはずです。 テキストだけのページなど、サイズ指定の無い画像とかが無ければ、HTMLを読みながらレイアウトできるので画面が高速に書き換わり必ずしもいったん白い画面にはならないと思います。
そのままMapOptionsで指定すれば、maxZoom、minZoomともに動作しているように思いますが・・・？ https://developers.google.com/maps/documentation … 何か特殊な環境でテストなさってますか？ ＞mapType.maxZoom = 19; mapType.minZoom = 2;のようなものを記入しても何も変化しません。 mapTypeってご提示のコードにはないけれど…？？ ご提示のコードで言えば、optsがMapOptionsに該当するはずです。
>>スマホのページでもPCのページでもサイトの幅にぴったり収まるように幅を自動調整させたいのですが、どうすればいいでしょうか。 自動調整するように、CSSやPHP、javascriptなど、創意工夫して対応するプログラムを書くことです。
#1です。 ＞window.open=$(this).find("a").attr("href"); 自分で試すのはとてもいいことですが、ちゃんと調べてからやってください。 openはプロパティではなくメソッドですから window.open($(this).find("a").attr("href")); です。
#2です。 締め切られてないので追記。 「置き換えている」まさにその通りです。 それはそれで覚える必要がありますが、クロスブラウザ対策を自前で書かなくて済むメリットの方が大きいと思いますよ。 ＞本当にやりたかったことはstyle変更だったのですが これはattr()やcss()メソッドで行います。 まあ、詳しい使い方は検索するなり http://semooh.jp/jquery/ リファレンスを見てもらうということで。
onclick="(function(){var koko='koko';hoge(koko);})();" これでkokoをローカル変数にすることが出来るはずです。 当然この関数内でしかアクセス出来ないので、他の場所で設定したい場合はグローバル変数にする必要があります。
onsubmit はフォームのイベントなので、ボタンに付けても意味がありません。 今回の例ならば、送信ボタンの onclick にてチェックと送信を纏めて行うのが簡単かと。 <script> var _ = 0; // 読みやすくするオマジナイ function send() { _ ; function chk1(frm, names){ _ , _ ; var r = true; _ , _ ; for (var i = 0; i < names.length; i++) r &= (frm.elements[names[i]].value != ''); _ , _ ; return r; _ ; } _ ; var r = true; _ ; r &= chk1(document.forms['nform'], ['kaitouran11','kaitouran12','kaitouran13','kaitouran14']); _ ; r &= chk1(document.forms['nform2'], ['kaitouran21','kaitouran22','kaitouran23','kaitouran24']); _ ; r &= chk1(document.forms['nform3'], ['kaitouran31','kaitouran32','kaitouran33','kaitouran34']); _ ; if (r) { _ , _ ; document.forms['nform'].submit(); _ , _ ; document.forms['nform2'].submit(); _ , _ ; document.forms['nform3'].submit(); _ ; } else { _ , _ ; alert('解答欄に空白があります'); _ ; } } </script> (中略) <input type="button" value="送信" onclick="send()">
シンタックスエラーはNo1様の指摘の通りです。 （コピペのミスかもしれませんが、「(」が閉じていない） あとは想像ですが、ご提示のままだとすると 　<div id="map"><!-- 地図の埋め込み表示 --></div> は高さがなくなるので見えないため、表示されていないように感じるのではないでしょうか？ 例えば、高さを500pxのように指定してあげれば、見えるようになるかと思います。 あるいは、上位要素にもheigth:100%; を指定してあげるとか。
> jQuery File Uploadの設置で悩んでいるのではなく、 > 設置後のロジックで悩んでいるので > 別カテゴリで再度質問するとなっても同じ内容になるのです。 うむ私が言っているのはそういう話ではなくアップロードされたファイルをサーバー側で何のプログラムが受け取っているのか教えてくれないと答えようが無いよって事。 「ワープロで一行の文字数を指定する方法が分からなくて困ってます。どうすれば良いですか。」と聞かれても答えられないよね。Microsoft WordなのかLibreOffice Writerなのか一太郎なのかが分からないから。 なのでまず↓の話を教えてくれないと誰も答えられないよ。 １．jQuery File Uploadでアップロードされるファイルを受け取るプログラムは何ですか。PHPですか、Javaサーブレットですか、Rubyですか、Ruby on Railsですか、PerlのCGIですか。 ２．サーバー側のプログラムをあなたが改変する事はできますか（プログラミング技術があるかどうかではなく、使っているサーバー側のプログラムのライセンスやソースコードの提供の有り無しなど）。 ３．具体的なプログラム名があると答える側は大変楽になる。業者に委託で作らせたものだ、とかだとお手上げだけどね。その場合はその業者に頼んでねって事になる。 ～～～～～～～～ もう少し詳しく背景を説明しておくと、jQuery File UploadやjQuery本体はサーバーに設置するけど実行されるのはクライアント（Webブラウザー）側だ。なのでjQuery File Uploadのプログラムを改変してメール送信を行うという事はできない。で、ファイルをアップロードするには必ずそれを受け取るサーバー側の（jQuery File Uploadではない）別のプログラムがある。受け取った時にメールを送信するにはそちらを改造する必要があるんだ。なので、この質問の話題はjQuery File Upload云々ではなくって、ファイルを受け取ってサーバー側のディスクに保存するプログラムのお話になるって訳。
＞これはどのようなことから起きるのでしょうか？ 変数を外に出しても参照はできていますが、値の内容が参照したい値と違うものであることが直接の原因です。 変数を外に出した場合は、imglast、imgfirstなどは常に固定の要素を示すことになります。 一方で、setIntervalで指定している関数では画像の順序を入替えていますので、setInterval内で変数定義を実行した場合は、その都度最新の状態でのimglast、imgfirstが取得されます。このため固定での要素指定とは違った結果となります。 このためアニメーションの対象となる要素が異なってしまうといったことが起きます。 DOM要素の順序を変えるようなことはせずに、参照する場所をindexのような順番値で保存しておくようなロジックにすれば、ご質問のように変数定義を外側に出しても意図通りに動作すると思います。 また、順序を記憶しておかなくても、要素に"active"などのクラス設定をすることで、これを目印にするという方法もよく用いられているようです。
HTML部分のソースが表示されていないので不確かですが、たぶん 　　("h1+ul+ul a") の指定が誤っていると思われます。（下記、サンプルを参照しました） また、targetの指定も怪しそうですね。 参考URL：http://kwski.net/jquery/815/
ご質問のようなことは充分可能ですが、 ご提示のスクリプトはそのようなことを考慮していないものなので、どこかをちょいと修正してというわけにいかないと思います。 全体に作り直したほうが早いといっていいくらいではないでしょうか。 方法としては、 指定したdiv（あるいはその中に作成した同サイズのdiv）に対して、position:relative/absolute; overflow:hidden;などを設定しておいて、その中に「☆」の要素を作成して、ご提示のものと同様に動かす。 といったところでしょうか。 具体的には、document.writeで要素を作成しているのをDOMから追加・作成するようにする。移動の範囲の計算に利用する値をウィンドウサイズではなく指定divのサイズにする。 などを変えればよろしいかと。 ついでに、ご提示のスクリプトは少々古いブラウザを対象としているように見受けられますので、そのあたりも修正したほうがよろしいかと。 （このあたりを修正していると、ほとんど全部になってしまいますが） そんなことやってられないというのであれば、divの代わりにiframeを利用するという方法もあるかも…
ああ、ごめんなさい。 既に質問者さんは気づいておられますね。
サイト内リンクだと判別できたら、アニメを飛ばす処理ですね。 1. HTTP 要求の referer を見る 2. サイト内からは "http://hoge.com/?from=in" の様に引数を付ける 少し意味が異なりますが 3. 1時間だけ有効なcookieを発行し、cookieがあれば初回訪問とみなさない 個人的には案2が好みですが、 実装が容易なので、案3が現実的かもしれません。
ANo1です。 繰返しの1回分を、setTimeoutなどを利用して書いてしまうとややこしくなります。（出来ないことはないですが…） 普通にanimate関数とそのcallbackを利用して1回分を記述しておいて、それをsetTimeouｔやsetIntervalなどで繰り返すのがわかりやすいかと思います。 ANo1もそのようなつもりで、回答いたしました。 （もちろん、方法は他にもいろいろあると思います） 待つ時間や動きの内容がご質問文と補足で違うので、どれが本当なのか不明ですが、とりあえず単純化したサンプルを以下に。 （全角空白は半角に） $(function(){ //初期設定 　var target = $("#light").css({width:0, opacity:0}); //繰り返しの1回分を定義 　var repeat = function(){ 　　target.delay(1000).animate({ width: 398, opacity:1 }, 3000, function(){ 　　　target.delay(1000).animate({ width:0, opacity:0 }, 3000); 　　}); 　} //repeatを繰り返す 　repeat(); //最初はすぐに実行 　var intervaId = setInterval(repeat, 8000);　//8秒後から繰返し }); ※時間やタイミング、アニメーションの内容などは適宜調整してください。
開くたびに新しい窓/タブで開く方法は幾つかあります。 ただし窓なのかタブなのかは環境によって変わるのでご注意ください。 * window.open の第二引数に '_blank' を指定 * 要素 <form> の属性 target に '_blank' を指定して、改行キー or ボタン押下 or submit() * 要素 <a> の属性 target に '_blank' を指定して、クリック or click() それにしても、ご提示のサンプルソースがあまり良い教材ではありません。 えらく古いし冗長だし命名も変だし文字コードもUTF8で十分だし... 昔のブラウザを考慮しなければいけない特殊な事情があるなら別ですが、 今ならもっと簡単にすっきり書けます。 <form name=fm> <input type=text name=k size=60> <button type=reset>Reset</button> <br> <button type=submit name=ggl>Google</button> <button type=submit name=yho>Yahoo! Japan</button> </form> <div style="display:none"><!-- 見せたくないから見せない --> <form name=subggl method=get target=_blank action="http://www.google.co.jp/search"> <input type=text name=q><a href="http://www.google.co.jp/" target=_blank>top</a></form> <form name=subyho method=get target=_blank action="http://search.yahoo.co.jp/search"> <input type=text name=p><a href="http://www.yahoo.co.jp/" target=_blank>top</a></form> </div> <script> addEventListener('load', function(){ var _=0; // 読みやすくするオマジナイ _ ; function searchOnNewTab(name, v) { _ , _ ; var form = document.forms['sub' + name]; _ , _ ; if (v === '') { _ , _ , _ ; form.getElementsByTagName('A')[0].click() _ , _ ; } else { _ , _ , _ ; form.getElementsByTagName('INPUT')[0].value = v; _ , _ , _ ; form.submit(); _ , _ ; } _ ; } _ ; document.forms['fm'].addEventListener('click', function(ev){ _ , _ ; if (ev.target.type != 'submit') return; // 目的のボタン以外は処理しない _ , _ ; ev.preventDefault(); _ , _ ; var form = ev.currentTarget; _ , _ ; var name = ev.target.name; _ , _ ; var valu = form.elements['k'].value; _ , _ ; searchOnNewTab(name, valu); _ ; }, false); }, false) </script> ご参考まで
#1です。 > ＩＥのブラウザのツールバーやＰＣ下部分のツールバーもない状態での > test.htmlだけが別ウィンドウででてきます。 fullscreenオプションは「ウィンドウを最大化で表示する」のではなく、 「ウィンドウをフルスクリーンモード(ツールバーなどを表示しないモード)で表示する」というオプションです。 なので、ウィンドウを最大化で表示したい場合は、こちら(http://hitoxu.com/095 )で紹介されているように、 ウィンドウサイズを指定してopenするという方法をとることになります。 ただし、#2のご回答にもある通り、「toolbar=1」という指定の仕方は標準ではないので、 「toolbar=yes」という書き方で試してみてください。
dataStorageって使ったことがないので、わからないのですが… これでもだめでしょうか？ （全角空白は半角にしてください） Fxで動作確認 $("#load_button").click(function () { 　var base64 = window.localStorage.getItem("saveKey"); 　var image = new Image(); 　image.onload = function(){　　//念のため順序を入替え //　canvas.drawImage(image, 0, 0);　　//以下に変更 　　canvas.getContext('2d').drawImage(image, 0, 0);　//←変更 　} 　image.src = base64; }); [ 参考 ] http://www.html5.jp/canvas/ref.html
split()関数の手もありますよ。 以下用例― var a=["日本東京","アメリカワシントン","イギリスロンドン"]; document.write(mytest("アメリカ")); function mytest(s){ b=","+a+","; c=b.split(","+s); d=c[1].split(","); return(s+d[0]); }
location.hrefの部分に指定したいurlを入れてください。 <a onclick="window.open('http://exsample.com='+encodeURIComponent(document.title)+' '+encodeURI('http://oshiete.goo.ne.jp/'));" href="javascript:void(0);"> こんな感じです。
＞javascriptでテキストで作ったデータベース ajaxで処理できないこともないですが データを外部スクリプト形式で持った方がいろいろ楽かも //datas.js var datas={"りんご":100,"メロン":200,"みかん":80}; //hoge.htm <script type="text/javascript" src="datas.js"></script> <script> var a = "りんご"; document.write(datas[a]); </script>
う～ん。。 <script type="text/javascript" src="xxxx.js"></script> は、javascriptの呼出しタグであって、内容ではない、ということですかね。 ご提示のような外部呼出しタグは、サーバサイドで動的処理を行い、jsを生成するもので、スクリプト本体の取得は難しいかと思います。 で、Drupalに限らずWordPressなんかでも、TinyMCEを使っているCMSは全部、記事に直接<script>や<css>を打てないので、そういったモジュールが用意されているんですが、また勝手な挙動をします。 恐らく、そいつは入力した項目の前後に、<script type="text/javascript"></script>を入れるのかな。 なら、逆手にとって、 </script> <script type="text/javascript" src="//dwkjexg5kaiww.cloudfront.net/planbcd/*****/**.js"> とでも入れてみてはどうでしょう？（JSinjector使ってなくて推測です。ごめんなさい） <script type="text/javascript"> </script> <script type="text/javascript" src="//dwkjexg5kaiww.cloudfront.net/planbcd/*****/**.js"> </script> となればしめたもの。最初の<script></script>は内容が空なので無視されます。 ただ、勝手にアンチスクリプトフォージェリとか噛まされてサニタイジングされると化けます。 そうなったらテンプレートにjs書くしかありませんね。
まず、◯分間隔自動更新をする関数を記述します　・・・　(1) 更新処理の直前に、チェックボックスを見に行きます ＞チェックが入っていればそのまま更新処理を行います ＞チェックが入っていなければ1分後、(1)の関数を実行します これでいいんじゃない？
ANo2です。 ちょっとわかりにくかったかも。 『hogeメソッドを実行するhogehoge関数を作る』と言ったほうが良かったかもしれません。 さらに、そのhogehogeをメソッド化しておくという考えもあるかと思いますが、多分、必要ないのではと思います。
Web ブラウザ上で実行される JavaScript から、SQLite を参照する方法でしょうか。 案1. ブラウザに内蔵されている Web SQL Database を使う http://dev.w3.org/html5/webdatabase/ ただし規格としてダメ出しされたので将来性はありません 案2. Webサーバーに CGI/Servlet/ASP などの手段で WebAPI サービスを作成する JavaScript からは AJAX で「アイテムの値段を教えろ」の要求を投げ、 WebAPI サービスは SQLite を参照した結果の応答を返す 案3. フォームから個数をPOST送信して、計算結果の画面に遷移する 送信先は CGI/Servlet/ASP で作成し、SQLite を参照した結果を元に計算して、 金額を含むHTML画面の応答を返す お勧めは案3、次いで案2です
jQueryの例です。ページを開くと自動的に開始され、５秒ごとに表示／非表示を 繰り返します。 [スクリプト]　（＿を半角スペースに変更してください） $(function(){ ＿setInterval(function(){ ＿＿$('.tenmetsu').toggle(); ＿},5000); }); [HTML] <div class="tenmetsu"><p>５秒ごとに点滅</p></div>
document.getElementsByClassName( class )は、引数「class」に指定した クラス名を持つ全ての要素への参照を格納した配列を返すメソッドです。 したがって、個々の配列の内容のstyle要素を変更するロジックが、必要です。 ちなみに、jqueryを使用すると簡単にできますので、jqueryを勉強されたら良いと 思います。 参考URL：http://alphasis.info/2013/07/javascript-dom-docu …
＞<script type="text/javascript" src="sample.js"></scrip> ちゃんと<body>じゃなく<head>に入れて、閉じタグのスペルミスを直しても駄目でしょうか？
訂正の訂正。 先ほどの回答で提示したヘルプをよく読んだら 「Google+ ローカルで何度も間違った場所が表示されないように、ユーザーが修正した場所が Google アカウントに保存されます。」 って書いてあるので、やっぱり、googleのアカウントに「現在地情報が関連付け」されているみたいです。 結局は ・ログインしている場合、アカウントに現在地情報が登録されていれば、それを使用。 ・ログインしていない場合や、ログインしていてもアカウントに現在地情報が登録されていなければ、IPアドレスから推測。 って事になってるようで、fatalには飛んでこないと思います。 ですが、万が一、IPから推測しようとしてIP-geolocationに失敗すれば、もしかしたら、fatalに飛んでくるかも？
まずお使いの用語に間違いがあるので、訂正させていただきます。 > JSPの中でフラグを定義し、 JSPはサーバサイドJavaで使用されるテンプレート・ファイルですので、間違いです。 正しくはJavascriptです。 > 画面遷移するときは、この手法でいいのでしょうか、それとも、画面遷移の時も2重submit防止手法を組み込んだほうがいいのでしょうか。 ご提示になっているのは「フォーム送信」であり、一般的な遷移であれば、HTML的には<a href..>等によるものを指します（javascriptではlocation.href="..."です）。 function idou() { location.href="..."; } で事足りるのと違いますか？ a href="..." とは、「コンテンツの取得」であり、form.submit()は「移動」なので、ニュアンス的にはsubmitが「遷移」という意味で間違いはないのですが。。。。あくまで慣用的に。 また、「登録」と「検索」は、出力される結果が大幅に異なるように思いますので、サーバサイド処理を簡略にする意味で、 form.action = "regist.py"や、form.action = "search.py"などとして、サーバサイド呼び出しを分けたほうがいいと思います。 submit系の処理は、データの正確な送信がもっと重要なので、いかなる場合も多重投稿を防止します。
＞もう少し簡略化して記述する方法はないでしょうか ある程度意味的にまとめてください それから途中のあまり重要でない変数の名前は思いつかなければ numやstrなど適当でもいいと思います var input = $(this).text();　//読み込み var num = +input.replace(/,/g, ""); //テキスト文字を数値に直す var price = Math.floor(num * tax); //税込み価格を出す var output = price.toLocaleString() //３桁区切りにする $(this).text(output); //書き込み もしくは正規化やパースの部分、入力出力の部分はもっとまとめてもいいと思います var zeinuki = +$(this).text().replace(/,/g, ""); //税抜き価格を取得 var zeikomi = Math.floor(zeinuki * tax); //税込みにする $(this).text(zeikomi.toLocaleString()); //税込み価格を出力
＞例えばサイト管理者側で設定した変数を使う場合などは==だけでいいでしょうか？ javascriptは型宣言がない言語ですので、絶対に例外などない自信があり どうしてもあいまいな比較をしたいという特殊な場合をのぞき かならずイコール３つの比較演算子をした方がなにかとハマりにくいです。 認識できるほどスピードの違いはないと思います とくに「0」を判断するときに以下のようにかなり柔軟にマッチしますので 厳密な比較の方がよいと思いますよ <script> if( 0 == 0 ) document.write("1"); if( 0 == "0" ) document.write("2"); if( 0 == "0000" ) document.write("3"); if( 0 == 0x00 ) document.write("4"); if( 0 == "0x00" ) document.write("5"); if( 0 == "" ) document.write("6"); if( 0 == false ) document.write("7"); if( 0 == [] ) document.write("8"); document.write("<hr>"); if( 0 === 0 ) document.write("1"); if( 0 === "0" ) document.write("2"); if( 0 === "0000" ) document.write("3"); if( 0 === 0x00 ) document.write("4"); if( 0 === "0x00" ) document.write("5"); if( 0 === "" ) document.write("6"); if( 0 === false ) document.write("7"); if( 0 === [] ) document.write("8"); </script>
こんにちは。 >セレクトで選択したときに項目名（<option value="1">りんご</option>の場合、りんごという文字）をJqueryで指定した箇所（<div id="samole"><div>）にリアルタイムで表示させたいと考えています。 であれば、以下の記述で実装できます。 $(function() { //selectオブジェクトを取得 var $select = $('select[name="search_price"]'); //選択項目が変更されたら $select.bind ( 'change', function() { //id="search_price"に // select内のselectedされているタグのテキストをセットする $('#search_price').html ( $(this).find(':selected').text() ); }); });
配列リテラルですね。正確には配列初期化子といいます。 http://ecma-international.org/ecma-262/5.1/#sec- … 要は new Array() して push() を繰り返してくれる処理の簡略記述です。 JSONでも使われるほどに一般的です。 個人的には以下も良く使います。 '文字1,文字2,文字3'.split(',') // ["文字1","文字2","文字3"] 'abcdefg'.split('') // ["a","b","c","d","e","f","g"]
サーバサイドの実装を抜きにしては語れない問題なので、何とも言えないのですが、 基本的には、 ■フォームからの送信であれば、フォームを１つに束ねる ■物理的にフォームが分離している場合は各フォームの内容を、「仮想的に」１フォームに束ね送信する ということになります。 ■１フォームの場合 この場合、「商品」と「属性」のnameを、配列で定義します。 <fieldset> <select name="item[0]"><option..></option></select> <select name="attribute[0]"><option..></option></select> </fieldset> ..以降繰返し （サーバサイドがphpの場合には、配列添字はなくても自動的に処理されます） 「商品」が変更された場合、「属性」の設定可能値値を変更するjavascriptは、「同じfieldsetに属するattribute[x]」をターゲットにします。 ■個別フォームの場合 別に１つの送信用フォームを作成し、商品ごとのhiddenな項目を作って、個別フォームの値を入れ、送信します。 自分は項目メンテが面倒くさいので、jQueryのserialize()で、文字列にまとめてしまいます。 jQuery serialize http://jquery-master.net/ajax/serialize.php jQueryであれば、送信時に「臨時に」フォームを作って送信することもできるので、serialize文字列を"&"で連結すれば仮フォームも、hidden項目も不要になります。 処理内容のためにHTMLコードを歪曲するのはＮＧです。 フォームは「見栄え良く、入力しやすく」することが第一で、送信形式はサーバが理解できれば何でもよいのです。
当たり前ですが、「行番号」というのは存在しません。 また、「行を抽出したいです」なので「↑処理をかけて」以降はシカトします。 狙った行目を取り出す一般的な方法は、改行でsplitした配列を作ってやることです。 取得した文字列がtextsだとして、 texts.split(/\r\n|\r|\n/) と改行でsplitすると各行の文字列からなる配列となるので、「行番号」とやらを配列のインデックスに置き換えれば取り出せます。 まあ、ググって http://javascript.g.hatena.ne.jp/py4s-tnk/201105 … こういうサイト見てもらったほうが早いです。
>大文字の件は、単なる例示として一般名詞に置き換えただけです。 <input type="radio" name="Status" value="1" > としているかぎり var Choice = document.Ask.status; ではアクセスできないという指摘をしたつもりですが var Choice = document.Ask.Status; としないと意味がない例示です ちなみにマッチした時点で別ページに飛ぶのであれば、breakする必要はないです マッチしなかった場合サブミットされないようfalseを戻してやる方がいいでしょう <script> function RadioCheck() { var Choice = document.Ask.Status; for (var i=0; i < Choice.length; i++){ if(Choice[i].checked){ //SendData( Choice[i].value ) ; alert("out of loop"); GoNext(); } } return false ; } function GoNext() { location.href = "nextPage.html"; } </script> <form name="Ask" > <input type="radio" name="Status" value="1" > 1 <br> <input type="radio" name="Status" value="2" > 2 <br> <input type="submit" value="Enter" onclick = "return RadioCheck()" > </form > ちなみにSendData()の仕様が書いてないので、その部分は割愛します
私もやってみましたが、return ではダメなようです。 　→Javascriptについては、自分も素人ですが 以下のコードでGoogle Map が表示できますので、 基本的な構成を変えてみた方が良いと思います。 ---------------------------------- <!DOCTYPE html> <html><head><title>現在地取得</title> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"> … <script type="text/javascript"> var options; var position_options; var map; function geoLocate(){ position_options = { enableHightAccuracy: true }; navigator.geolocation.watchPosition(success, fatal, position_options); function success(position){ alert('位置情報の取得に成功しました'); options = { zoom: 15, center: new google.maps.LatLng( position.coords.latitude, position.coords.longitude ), mapTypeId: google.maps.MapTypeId.ROADMAP }; map = new google.maps.Map(document.getElementById('canvas'), options); } function fatal(error){ alert('位置情報の取得に失敗しました'); } } </script></head> <body onload="geoLocate()"> <div id="canvas" style="width: 480px; height: 480px;"></div> </body></html>
JavaScript というのは、1995年にブラウザ Netscape2 に実装された独自機能が元です。 その後各ブラウザで後追い実装され、HTML3.2 あたりで仕様として盛り込まれたはずです。 canvas というのは、2004年にパソコン Macintosh のシステム内で実装された独自機能が元です。 その後各ブラウザで後追い実装され、このたび HTML5 で正式な仕様になる見通しです。 ちなみに canvas 以外でも絵をかける機能はイロイロありましたが、現在では廃れたか縮小気味です。 Sun のアプレットに使う <applet> Macromedia(現Adobe) の Flash に使う <embed> または <object> Microsoft 等の VML に使う <v:*> その後継となる SVG に使う <svg> いずれも JavaScript から操作できる様に API が提供されているので、あたかもスクリプトの機能として絵を描いているようにみえますが、実際にはHTMLまたはブラウザ拡張の機能です。
こんにちは。 追加や削除しているソースが無いと的確なアドバイスが出来ないので補足してください。 個人的にはいちいち振り直す必要性が感じられません。 一つの識別用のフィールドを持つか、サーバ側の処理でどうにかすると思います
こんにちは。 自分の環境では出力されていますので、何か原因があるとは思いますが。 とりあえず、全文貼っていただけませんか？
【質問1】 リファレンスといえば、私にとってはこちら https://developer.mozilla.org/ja/docs/Web/API/wi … こちらには以下の記述があります。 「ユーザが OK ボタンをクリックすると、入力フィールドに入力されたテキストが返ります。」 簡単に文字列を入力させる手段として、昔からよく使われています。 ただ概要が 「ユーザにテキストを入力することを促すメッセージを持つダイアログを表示します。」 なので、たしかにピンとこない気もしますね。 【質問2】 一般にブラウザで window と記述しているものは、JS のグローバルオブジェクトを意味します。 グローバルオブジェクトは省略して書くことが出来ますから、グローバルオブジェクトのプロパティである prompt は "window." を省略できます。
bunki がグローバルスコープに存在しないため、第一引数を eval できずに失敗しています 誤: setTimeout("bunki()", 500); 正: setTimeout(bunki, 500); このあたりのスコープに関する説明は少々敷居の高いので省略しますが、 そもそも(誤)の記法はすでに非奨励なので、 この機会に(正)の記法を覚えていただければ幸いです。 参考) https://developer.mozilla.org/ja/docs/Web/API/wi … 余談ではありますが... 二枚目をめくった後に0.5秒以内に次のカードをめくるとバグる問題が残っています。ご注意ください
ご質問の「インクリメント」の意味が不明ですが、同じ処理を繰返し記述するのを避けたければ、No2様がご提示なさっているような方法があります。 しかし、同じ処理なら普通は個別にidを振るようなことはせずに、まとめて記述できる方法を考えます。 （個別のidに対する処理にした時点で、同じ処理ではなくなるので…） どのようなHTMLを想定しているのかまったくわかりませんが、以下、簡単な一例です。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #navi li a{ color : #000; text-decoration : none; display : block; padding : 5px; font-weight : bold; width : 200px; background-color : #bbd; border : 1px solid #666; border-color : #eee #666 #666 #eee; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function(){ 　$("#navi li a").click(function(){ 　　$(this).next("ul").slideToggle("slow"); 　　return false; 　}) 　.next("ul").slideUp(0); }); </script> </head> <body> <ul id="navi"> <li><a href="#">navi1</a> <ul> <li>navi1 sub1</li> <li>navi1 sub2</li> </ul> </li> <li><a href="#">navi2</a> <ul> <li>navi2 sub1</li> <li>navi2 sub2</li> <li>navi2 sub3</li> </ul> </li> <li><a href="#">navi3</a> <ul> <li>navi3 sub1</li> <li>navi3 sub2</li> </ul> </li> </ul> </body> </html>
「typeof 変数」の結果はstring(文字列型)で返ってきます。 ですから、 　switch(type){ 　　　case "boolean": //typeの中身が「booleanという文字列」と等しかったら実行 　　　　　(略) 　　　　　break; 　　　case "string": //typeの中身が「stringという文字列」と等しかったら実行 　　　　　(略) 　　　　　break; 　　　default: 　　　　　break; 　} と書く必要があります。
素直に考えるならば context.drawImage(aaa, 10, 10); context.drawImage(bbb, 50, 50); ↓ context.drawImage(i[0], 10, 10); context.drawImage(i[1], 50, 50); // 画像を入れ替える処理 i.reverse();
> 10個、100個という複数の埋め込みに適用したい場合、 > いちいちhead内に座標を追加しなければならないので、 > 効率が悪い この意味がわかりません。100箇所表示するのであれば 100個のデータが必要です。 > 座標指定行 > [var latlng=new google.maps.LatLng(35.6652470, 139.7123140);] > を省き そうすると表示できないと思いますが。
プログラムの流れとして、 1. 要素 Book の一覧を取得 2. Book 毎に繰り返し処理 2.a. 要素 Title を一つだけ読み取り 2.b. 要素 Author を一つだけ読み取り 2.c. 要素 Price を一つだけ読み取り 2.d. a-c の text を元に、表示用文言を編集 2.e. HTML 内に文言を出力 ここで 1) var books = xmldoc.documentElement.getElementsByTagName('Book'); 2) for(i=0; i<books.length; i++) { var book = books.item(i); /*...*/ } とするならば 2.a) var title = book.getElementsByTagName('Title').item(0).text; 2.d) var str = "書籍" + i + " Title:" + title + /*...*/; で望みの結果が得られるでしょう
これでどうでしょう <script> // ファイル名の羅列を用意 var files = [ "xx.html", "yy.html", ... ]; // 画面内に埋め込む window.onload = function(){ files.forEach(function(s){ var f = document.createElement('object'); f.setAttribute('data', s); f.setAttribute('width', 20); ... document.getElementById('どこかの要素ID').appendChild(f); }); }; </script>
細かいアルゴリズムまでは見ていませんが、気になるところを。 × if(card_c=0){ //１枚目 ○ if(card_c==0){ //１枚目
＞("文字列A" + 変数 + ); と変数の前後に「+」が必要なのは ＞どうしてでしょうか？ それは有り得ない。もっと前の方で「"」を忘れている行があるんじゃないかな？ 当方が試した限り alert("はずれ ！　こたえは "+myKotae+" です !"); でも alert("はずれ ！　こたえは "+myKotae); でも alert(myKotae+" です !"); でも alert(myKotae); でも、ちゃんと動きましたよ。 逆に alert("はずれ ！　こたえは "+myKotae+); って書いたら動かなくなっちゃったよ。 因みに alert(+myKotae+" です !"); でも alert(+myKotae); は、最初の「+」は、演算子じゃなくて「正負の符号」として働くから、エラーにはならないよ。
よくわかりませんが、どうも勘違いなさっているようです。 ＞onclick処理結果は、どうやって受け取るのでしょうか？ イベントハンドラは処理の最上位にある関数ですので、その返り値はブラウザに渡されます。 クリックした要素によっては、ブラウザはその真偽によって処理を変えたりします。（リンク処理等） イベントハンドラ内で別の関数を呼んだ場合の話であれば、その返り値は呼び出し元で取得できます。 タイミングを変えて、他のスクリプトから値を利用したければ、両方からのスコープにある変数などに内容を一旦保存しておけば参照が可能となります。（一番簡単なのは、グローバル変数など） ＞document.write(data);」すると画面が切り替わってしまうので、dataをreturnした上で改めて「document.write」したい document.writeの動作を再確認してください。 HTMLソースの読込みが終わった後では、document.writeは新しい文書に書き込みを行います。 想像するところ、質問者様のなさりたいような手順に変えても、同様の結果になると思います。 ブラウザに何かを表示したいのであれば、DOM制御を利用して表示してください。 何をなさりたいのかよくわかりませんが、イベント処理結果をどこかに表示したいのであれば、イベント処理の中で行うのが普通でしょう。 イベントによって状態が変化し、その状態を他から参照するために保存しておきたいのであれば、上記のように変数に保存するか、DOMやクッキーなどを利用して内容を保持しておけばよさそうに思います。
'['+[].slice.call(obj)+']'
つまり前と今を比較して、国県区名の二行を表示する可否を判断するのですね。 問題点として、 1. 国県区名と町名の行の編集を一緒くたにしている。バグの遠因 2. 前回データの保存が失敗している 問題点を直して、ちょっぴりアレンジしてみました function textcopy(){ var words = [], naiyo = ''; var vals = document.forms['f'].elements['a1']; for (var i=0; i<vals.length; i++) { if (vals[i].checked) { var source = vals[i].value; var kekka = source.split("*"); if (kekka[0] != words[0] || kekka[1] != words[1] || kekka[2] != words[2]) { // 前と比較して、国県区が一つでも違えば二行分を表示 naiyo += kekka[0] + kekka[1] + '\n　' + kekka[2] + '\n'; } naiyo += '　・'+ kekka[3] + '\n'; // 比較せずとも必ず町名の一行を表示 words = kekka; // 今回データを、次の前データとするため保存 } } document.f.log.value = naiyo; }
細かいコードは見てませんが、それ以前の話として……。 Calendar APIは、利用可能になっているでしょうか。現在、GoogleのAPIは、利用の際にGoogle Cloud ConsoleでAPIを認証しておかないといけません。そのあたりは大丈夫でしょうか。 https://cloud.google.com/console ちなみに、JavaScriptからGoogle Calendar APIを利用しようとされているようですが、Calendar APIでJavaScriptがサポートされていたのはver. 1.0の時代です。現在はver. 3.0になっており、既に現行バージョンではJavaScriptはサポートされていません。ですので、APIを認証しても、上記のコードで動くかどうかは疑問です。 現在、APIは、Java、Python、PHP、.net、Rubyがサポートされてますので、サーバーサイドにこれらでプログラムを設置して利用するのが基本だろうと思います。 あるいは、どうしてもJavaScriptで、というのであれば、Google Apps Scriptというサーバーサイドスクリプト環境を使って、サーバー側で動くJavaScriptプログラムを作成して使う、というのは可能なようです。 http://libro.tuyano.com/index3?id=660002
javascriptは色々な問題がありCSSで可能な物はCSSで行ったほうが良いです。特に企業の場合はSEOを考慮すると、javascriptでのナビゲーションは避けるべきです。 「JavaScript、Cookie、セッション ID、フレーム、DHTML、Flash などの特殊な機能が使用されているためにサイトの一部がテキスト ブラウザで表示されない場合、検索エンジンのスパイダーがサイトをうまくクロールできない可能性があります。google-ウェブマスター向けガイドライン（品質に関するガイドライン）( https://support.google.com/webmasters/answer/357 … )」 　HTMLがきちんと書かれていたら、CSSで色々にデザインできます。 　￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ ★ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) ★タブは＿に置換してあるので戻す。 ★リキッドなのでPCでもスマホでも、ウィンドウ幅に関わらずそのまま サンプル <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- div.nav ol{ list-style:none;width:80%;min-width:480px;max-width:840px; margin:0 auto;padding:0; text-align:center; line-height:40px; postion:relative; } div.nav ol li{ width:23%; border:2px solid red; display:inline-block; position:relative; } div.nav ol li ol{ position:absolute; top:42px;left:-2px;width:100%; min-width:0; display:none; } div.nav ol li:hover ol{display:block;} div.nav ol li ol li{width:100%;} div.nav ol li a{display:block;width:100%;height:100%;text-decoration:none;} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<div class="nav"> ＿＿＿<ol> ＿＿＿＿<li><a href="/">Top</a></li> ＿＿＿＿<li><a href="/Products">製品</a> ＿＿＿＿＿<ol> ＿＿＿＿＿＿<li><a href="/Products/A">製品A</a></li> ＿＿＿＿＿＿<li><a href="/Products/B">製品B</a></li> ＿＿＿＿＿＿<li><a href="/Products/C">製品C</a></li> ＿＿＿＿＿</ol> ＿＿＿＿</li> ＿＿＿＿<li><a href="/Support">サポート</a> ＿＿＿＿＿<ol> ＿＿＿＿＿＿<li><a href="/Support/A">A</a></li> ＿＿＿＿＿＿<li><a href="/Support/B">B</a></li> ＿＿＿＿＿＿<li><a href="/Support/C">C</a></li> ＿＿＿＿＿</ol> ＿＿＿＿</li> ＿＿＿＿<li><a href="/Profile.html">会社情報</a></li> ＿＿＿</ol> ＿＿</div> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>・・・</p> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿＿<dt id="LAST-MODIFIED">Last Modified</dt> ＿＿＿<dd>2012-08-10 12:00:00 (JST)</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
引用符が付け間違えしています 誤: <img src="none.jpg" id="c_1" onclick="conce(c_1)" /> 正: <img src="none.jpg" id="c_1" onclick="conce('c_1')" /> 誤: document.getElementById("aaa").src = "3.jpg"; 正: document.getElementById(aaa).src = "3.jpg"; 本質ではありませんが、一緒にこれも直しましょう 誤: <img width="100px" height="100px" 正: <img width="100" height="100"
BOOKBLOCKって知りませんけれど、配布サイトを見てみると public methodで、ページ指定ができそうなことが書いてあります。（英語よくわかりませんが） これを利用すればいいんでないかな。 http://tympanus.net/codrops/2012/09/03/bookblock …
こんなのでどうでしょう ○ playerApiId と 要素id の対応表を作る var table = { "player1": "myplayer1", "player2": "myplayer2", ... }; ○ 対応表を使って flash を埋め込む var a = "player1"; swfobject.embedSWF(url + "&playerapiid=" + a, ... , { id: table[a] }); var b = "player2"; swfobject.embedSWF(url + "&playerapiid=" + b, ... , { id: table[b] }); ... ○ 関数 onYouTubePlayerReady 内で、対応表から操作すべき要素のIDを引く if (playerId in table) { var player = document.getElementById( table[playerId] ); if (playerId == "player1") player.setVolume(0); if (playerId == "player2") player.playVideo(); ... }
たとえばこんな風に処理します <?PHP $select["num"]=array(); $option["num"]=array("nodata","5","7"); $request["num"]=(isset($_REQUEST["num"]) and in_array($_REQUEST["num"],$option["num"]))?$_REQUEST["num"]:"nodata"; foreach($option["num"] as $val){ $select["num"][$val]=($request["num"]===$val)?" selected=\"selected\"":""; } //print_r($select); //チェック用 ?> <html> <head></head> <body> <form> <p> <select name='num'> <option value=''<?PHP print $select["num"]["nodata"];?>>選択する</option> <option value='5'<?PHP print $select["num"]["5"];?>>5</option> <option value='7'<?PHP print $select["num"]["7"];?>>7</option> </select> <input type=submit value='送信'> </p> <form> </body> </html>
#1 です。 > canvas を、JavaScript 以外で処理することは可能でしょうか？ 「JavaScript以外」の具体的な名称を明らかにしないと調べようがありません。その実装の仕様書をあたってみてはどうでしょうか。 インターフェースは公開されているのですから、JavaScript以外でも実装することは可能だとは思います。 # Action Script にcanvas用APIが用意されているようです。 http://help.adobe.com/ja_JP/FlashPlatform/refere …
指定要素の子要素の順番をランダムに入替えるごく単純な例です。 ランダムに入替えているので、同じところに同じものがくる可能性があります。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #test img{ width:200px; height:80px; margin:0; padding:0; } </style> </head> <body> <div id="test"> <img src="img/photo01.jpg" alt=""> <img src="img/photo02.jpg" alt=""> <img src="img/photo03.jpg" alt=""> <img src="img/photo04.jpg" alt=""> <img src="img/photo05.jpg" alt=""> <img src="img/photo06.jpg" alt=""> </div> <script type="text/javascript"> var exChange = (function(){ 　var targets = function(id){ 　　this.id = id; 　} 　targets.prototype.change = function(){ 　　var i, e, items = []; 　　var pa = document.getElementById(this.id); 　　var ch = pa.childNodes; 　　for(i=0; e=ch[i++];) if(e.nodeType == 1) items.push(e); 　　while(items.length){ 　　　i = Math.floor(Math.random()*items.length); 　　　pa.appendChild(items[i]); 　　　items.splice(i, 1); 　　} 　} 　return function(id, interval){ 　　var t = new targets(id); 　　setInterval(function(){t.change();}, interval); 　} })(); exChange("test", 5000); //親要素のid、設定時間 </script> </body> </html>
とりあえず、「jQueryを使えるようにする」ということを考えてください。 ギャラリーは、しばらく忘れてください。これはjQueryを拡張するプラグインのようなもので、jQueryがまともに使えることを前提にしています。jQueryがわからない人間がいきなり「使いたい」といっても、どうしようもありません。泳げなくて自転車に乗れない人が「トライアスロンをやりたい」といったら、「まず泳げるようになりましょう。自転車に乗れるようになりましょう」というしかありません。 ちなみに、jQueryを使うだけならライブラリをダウンロードしたりする必要はまったくありません。<head>タグの中に以下のタグを書くだけです。 <script src="http://code.jquery.com/jquery-1.10.1.min.js"></s … 後は、普通にJavaScriptのスクリプトの中でjQueryオブジェクトを使えばいいだけです。……JavaScriptはわかりますよね？　それもわからないとすると、「jQueryなんかやる前に、まずJavaScriptを覚えてください」というしかないのですが……。
どのような実装をなさっているのか不明ですが・・・ （1）スクリプトが無効の際に表示されるソースを作成します。 （2）上記に対して、スクリプトが有効な際に表示される内容になるよう 　　スクリプトで変更するようにします。 これによって、スクリプトが 　無効 --- （1）の表示 　有効 --- （2）の表示 が表示されることになります。
誤: rows[i].cells[6].checked 可: rows[i].cells[2].firstChild.checked 誤: rows[i].getElementByTagName("sendF[]").checked 可: rows[i].getElementsByName("sendF[]").checked 正: document.getElementById('sendF[' + (i-1) + ']').checked 悪: id/name を無意味に指定している 良: スタイル/スクリプト/フォーム送信で使用するもの「だけ」指定する 悪: 入力要素の取得方法が、不必要に面倒 悪: 何のための id="sendF[' + i + ']" なのか... 良: getElementById / getElementsByName / form.elements で一発取得
これだけのコードだと正しいかどうかわかりませんが、ようは画像をアップロードしたときに動的に「削除する」というリンク文字もJavascriptで吐き出しているということでしょうか。 それであればclickイベントでは動作させる事ができません。 Javascript、jQuery、DOMに関して詳しく調べていただいた方がいいと思いますが、単純に動作させるだけであれば以下のスクリプトで動きます。 $(document).on('click', '.unlink', function(){ alert('unlink'); return false; }); そもそもJavascriptやjQueryのclickイベントなどはDOMが構築された時点（ページが読み込まれた直後）に存在しているDOMしか操作する事ができません。 ページが読み込まれた後に動的に追加された要素は、onメソッドを使って操作する必要があります。
普通にCSSじゃまずいのですか？？ 　⇒ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) にて、ブラウザの[表示]メニューから[スタイルシート]⇒「横並びプルダウン2」を選択した状態・・で、画像を置き換える形に変更すればよい。 　★Chromeは代替スタイルシートが利用できないため、他のブラウザで確認
style は現状そのものを表す値ではありません window.getComputedStyle() なら望みの結果が得られるでしょう 使用する際は、古い環境だとグダグダがありますのでご注意ください
誤っています。 　jQuery.noConflict();　←　これは不要 　jQuery("#camera").camera({ 　　height: "50%",　　←　カンマは不要 　　}); 　}); 　　　　　↓ 　jQuery(function(){　←　これがない。 　　jQuery('#camera').camera({ 　　　height: "50%" 　　　}); 　});
#2 のお礼への回答 hoge_a = "あああ,いいい,うううう"; hoge_b = "hoge,foo,dummy"; ならば // jQuery 的 var ids = hoge_b.split(','); var targetTab = $.map(hoge_a.split(','), function(value,index){ return {name:ids[index], val:value} }); // ES5 的 var ids = hoge_b.split(','); var targetTab = hoge_a.split(',').map(function(value,index){ return {name:ids[index], val:value} }); // ES3 的 var targetTab = []; var a = hoge_a.split(','); var b = hoge_b.split(','); var s = Math.min(a.length, b.length); // ちょっと丁寧に for (var i = 0; i < s; i++) targetTab.push({name:b[i], val:a[i]}); で、オブジェクトの配列 targetTab に変換できます。 しかし自分で書いててなんですが泥臭いコーディングだと思いますので、 データは最初からオブジェクトの配列、というより JSON 文字列で用意することをオススメします。
１行が好きなのなら。 /* @cc_on@set@_=@_jscript_version<9;*/document./*@if(@_)attachEvent('on'+@else*/addEventListener(/*@end*/'mousedown',function(b,c){c=b./*@if(@_)srcElement@else*/target/*@end*/;'A'!=c.tagName||!c.href||(location.href=(b./*@if(@_)returnValue=false@else*/preventDefault()/*@end*/,c.href))},!1); 「&」同じページにスクリプトがあるのなら？
あまりAjaxやJSONの事は知りませんが、obj.innerHTMLでHTMLの内容を設定する前に「$('#sendF[' + i + ']').prop('checked', true);」を行っているからではないでしょうか？document上に出力されていないobjectには値は設定できません。 出力・設定の順番を変えれば設定はできると思います ただ、今のままだと判定に使っている「json[i].sendF」をTABLE要素構成完了後に確認する為に再度ループしてチェックしなければいけません (1)ループで行数分<tr>～</tr>を構成 (2)obj.innerHTMLに出力 (3)再度ループを回して「json[i].sendF」を確認し1なら「$('#sendF[' + i + ']').prop('checked', true);」を実行 となります。 2回ループを回すのは勿体無い！と思います。 なので素直にTABLE要素構成中に「json[i].sendF == 1」を発見したらcheckedを設定する事にしてはいかがでしょうか？ res += '<tr>' + '<td style="text-align: center;">' + json[i].personId + '</td>' + '<td style="text-align: center;">' + json[i].personName + '</td>' + '<td style="text-align: center;">'; if(json[i].sendF == 1){ res += '<input type="checkbox" id="sendF[' + i + ']" name="sendF" checked />'; } else { res += '<input type="checkbox" id="sendF[' + i + ']" name="sendF" />'; } res += '</td >' + '<td style="text-align: left;>' +'<input type="text" id="memo" name="memo" value="' + json[i].memo + '" />' + '</td >' + '</tr>';
ごめんなさーい、勘違いしていたー!!　（何をとち狂っていたんだろう…） No１の回答は無視してください。 setTimeout →　setIntervalを利用すれば、繰り返しますよ。
回答がないみたいなので… もとのスクリプトを解析してカスタマイズすれば一番よいのでしょうけれど、それができないのなら、 「エリアからマウスがはずれた時に、表示しておきたいメニューにホバーのイベントを発生させる」 というスクリプトを別個付加えるという方法でもよさそうに思います。 イベントの発生方法はブラウザによって異なりますが、例えばfirefox系であれば、 　$("#image-navigation").mouseleave(function(){ 　　var evt = document.createEvent("MouseEvents"); 　　evt.initEvent("mouseover", false, true); 　　$("a", $("#image-navigation ul li").eq(2)).get(0).dispatchEvent(evt); 　}); みたいにすることで、とりあえずご質問のような動作になります。 （上例では、3番目のメニューが選択状態になる）
本当の意味ではイロイロあるんでしょうが、素直に「名前をかぶらせない仕組み」と覚えるのが簡単です。 複数人でソフト開発をすると、関数名やクラス名の名前かぶりが発生する可能性があります。 例) 太郎さんと calc_kiriage を実装 → 次郎さん calc_kiriage を実装 → コンパイルエラー! これを避けるために、命名規則を設けて名前がかぶらないように調整します 例) 太郎さんは TARO_calc_kiriage を実装 → 次郎さん JIRO_calc_kiriage を実装 → OK しかしこれでは、名前が無駄に長くなる可能性があります 例) えぐざんぶる株式会社の銀行向けソフトの金額計算関数 EXAMPLE_CO_BANK_LIB_KEISAN_kiriage だからといってコード化して短縮するのも感心しません 例) えぐざんぶる株式会社(C1)の銀行向けソフト(S2)の金額計算(F3)関数 C1S2F3_kiriage そこで言語仕様として用意されている名前空間を使えば 例) えぐざんぶる株式会社の銀行向けソフトの金額計算関数 jp.co.exmaple.bank.lib.keisan.Kiriage 名前空間の省略記法が使えるので、書きやすく読みやすいコードになります 例) import jp.co.exmaple.bank.lib.keisan.*; 例) Kiriage obj; // jp.co.exmaple.bank.lib.keisan.Kiriage と同様 さて JavaScript には名前空間が言語仕様として存在しません。 なのでオブジェクトを多段定義して名前空間「っぽい」書き方をすることを、名前空間と呼ぶのが普通です。 例) var name = { space:{ func:function(){return name.space.value}, value:123 } }; 例) name.space.func(); // 123 名前空間の省略記法「っぽい」も可能です。 例) var f = name.space.func; 例) f(); // 123 JSDoc も書いとけば万全でしょう 例) /** @namespace えぐざんぶる株式会社の名前空間 */ var example = {}; 例) /** @namespace ダイジェスト計算の名前空間 */ example.digest = { calc:function(){} };
サーバーのトップページを表示した際に、 おそらくブラウザのコンソール(例:IE10なら、F12ツール/コンソール)に、 以下のいずれかの原因が表示されているので調べてみてください。 画像(*.jpg)やスクリプト(*.js)のファイルが、一緒にアップされていないため存在しない トップページ内のファイル指定が誤っている 誤: <script src="c:/Documents and Settings/taro/hoge.js"></script> 正: <script src="./hoge.js"></script> サーバーを確認したブラウザが古いブラウザ(例:WinXPのIE6)だったため、スクリプトが中断した 最近のブラウザ(例:Win7のIE10)なら大丈夫かも
ANo1です。 ＞これはどのように変更すれば良いでしょうか？？ えっと…、ご提示のスクリプトでその前のxpx、ypxの算出でランダムになっていると思いますが、それをどのように変えたいのでしょうか？ 変える必要がなければそのままでよろしいかと… もっとも、ランダムにしているために、画像が重なったり偏ったりということが起きることが想像されますが、これを制御しだすと、そもそも『ランダム』ではなくなってしまいますので… ※HTMLやCSSが提示されていないので、その辺はよしなに想像して回答しています。
忘れてました。 色の変更程度なら、CSSのスクロールバー指定をサポートしているブラウザでスクロールバーの色が変えられます。 http://www.tagindex.com/stylesheet/page/scrollba …
colorboxはよく知りませんが、表示先のurlを指定できるようになっているみたいなので、それを利用すればいいんでは？ http://www.jacklmoore.com/colorbox/ iframe: true, href: XXX ～～　とか （iframeのurlがどうなっているのか、ご質問文では不明なので・・・） ご提示のスクリプトの前半のものは何をしたいのかよくわかりませんでした。
[間違い] 二度以上の訪問時に、訪問日が保存されていない(最終行あたり) sorry の条件に、訪問回数が三回より大、の条件が不足 前回訪問日が今日より前なら、訪問回数の初期化が必要 [戯言] 変数に var を付け忘れてるのでデバッグが大変 eval ダメ絶対 getYear 非奨励なので getFullYear を そもそも全体的に古い書き方だから、もっといいコピペ元を探すべき
var config = {}; が抜けています 余談ではありますが、このサンプルは関数名が defineProp だという点がいけてません。 内容から見ると、削除も変更も列挙も出来ない様な読み取り専用のプロパティの定義なので、 これは「オブジェクトに定数を追加する」関数である defineConst とすべきでしょう。 素直にこっちを参考にしてください https://developer.mozilla.org/ja/docs/Web/JavaSc …
経験的に、head 要素にいれておけば、ちゃんと読み込んでくれると思ったからです。 なぜ、他のところではダメなのか、検討はつきませんが。。
「やりたいこと」を素直に実装してみました。 HTMLフォームを使う場合は submit イベントで全てを処理するのが綺麗だと思います。 「選び直した際は前回入力した数値は消える」の改善をなさるなら、フォームに対する change イベントをオススメします。 <!-- HTML5 --> <form name=test> <label><input type=radio name=k value=buki checked>武器</label> <label><input type=radio name=k value=bogu>防具</label> <label>価格:<input type=number name=p value=600></label> <button type=submit>判別</button> <p> 候補: <output name=r></output> </form> <!-- Script --> <script>addEventListener('load', function() { document.forms['test'].addEventListener('submit', function(e) { e.preventDefault(); var items = { buki:{ 勇者の剣:600, Snickersnee:600, クサナギの剣:6000 }, bogu:{ ただの盾:600, "shield of reflection":600, ヤタカガミの盾:6000 }, }; var vals = e.target.elements; // フォーム内の各要素 var kind = [].filter.call(vals['k'], function(n){return n.checked}); var cand = items[kind[0].value]; // アイテム候補 var pric = parseInt(vals['p'].value); var list = []; for (var i in cand) if (cand[i] == pric) list.push(i); vals['r'].value = list.length > 0? list.join(', '): "候補なし"; }, false) }, false)</script>
エラーが無くても動かない間違いもあります 変数名の大文字と小文字は区別される 例: 関数 Registration は registration で呼べない 例: システム関数 alert は Alert で呼べない 指針として、変数名・関数名は小文字始まりが良い 文の区切りはセミコロン(;)、カンマ(,)は特殊用途 関数の定義は、関数文と関数式の二通りのみ 文: function 名前(){ ... } 式: 名前 = function(){ ... }; onload を変更するなら関数式で 誤: document.onload(){ ... }, 正: document.onload = fucntion(){ ... };
既に他の回答者様が答えられていますが、演算子の処理順序を理解されていないようなのでその辺りを詳しく説明いたします。 まずは「navigator.userAgent」が処理され、「ユーザエージェント」が文字列として取得されます。 次に「ユーザエージェント.lastIndexOf("Firefox")」が処理され、ユーザエージェントの中からFirefoxという文字列を検索します。 この結果は「インデックス」として、ユーザエージェントの何文字目にFirefoxという文字列があらわれたかが、数値で取得されます。 次に「(インデックス != -1)」が処理されます。この!=は比較演算子であり、≠(ノットイコール)の意味になります。 つまり、インデックスが-1でないならばtrue、インデックスが-1ならばfalseとなります。 ちなみにインデックス、つまり「ユーザエージェント.lastIndexOf("Firefox")」が-1になるということは、 ユーザエージェントの中にFirefoxという文字列が含まれていなかったということです。(lastIndexOfの仕様) よってこの部分の解釈は「ユーザエージェントがFirefoxであるか」です。 次は見慣れないと思いますが、三項演算子と呼ばれる「ユーザエージェントがFirefoxであるか ? true : false」です。 これは「条件式 ? 真の場合 : 偽の場合」という形で成り立っていて、今回の例ですと「trueまたはfalse」となります。 つまりユーザエージェントがFirefoxであるならば「true」、ユーザエージェントがFirefoxでないならば「false」ですね。 最後は残りの「var Ff = trueまたはfalse;」で、言うまでもなくFfにtrueまたはfalseが代入されます。 三項演算子の部分が何のためにあるのかわかりませんが、以上のように処理されます。 演算子の優先順位をしっかり学べば、難なく解読できると思います。
apply を忘れてました。。。 String.fromCharCode( を String.fromCharCode.apply( に変更して下さい。
submit_func() 内で参照しているform2の定義があいまいです たとえば <script> function submit_func(obj) { var n=obj.parentNode; while(n.nodeName!="FORM") n=n.parentNode; n.submit(); return false; } </script> <form id="form2"> <p><a href="#" onclick="document.getElementById('form2').submit();return false;">リンク直接</a></p> <p><a href="#" onclick="return submit_func(this);">リンク関数</a></p> </form> みたいな感じで、親をさかのぼってformを探すのも手かと またgetElementByIdを利用してformを参照すれば、わざわざformの中にアンカーを 書く必要はありません。
No.1 の補足に対する回答です。 スタイルとして以下の定義を成されたのなら、スクリプトでも活用しない手はありません。 .black { background-color:#333; } .white { background-color:#CCC; } ○ i.style.backgroundColor = "#ccc" <td class=black> → <td class=black style="background-color:#ccc"> 黒だけど白とは矛盾ではないだろうか ○ i.className = 'white' <td class=black> → <td class=white> すっきり明快 className は属性 class と同等です ○ i.classList.remove('green').remove('black').add('white') <td class=black> → <td class=white> 厳格で副作用のない記述方法 古いIEでは動作しない点だけ注意 classList は、属性 class を空白区切りした配列と同様です
jQuery.getは、たしか非同期実行じゃなかったかな？ だから、初期化されているのではなく、まだ設定されていないということだと思う。 確認したいのなら、両方の場所にalertをいれれは、処理の順序が確認できると思う。
これはよくハマることですね ズバリ言うとclickはbutton要素.clickを指してしまうからです つまりonclick="click()"は自分がクリックされたら自分をクリックするという意味です ですのでそのような名前を付けてはいけません
これとはちゃうん？ http://api.jquery.com/animate/
現在の大抵の実装では可能な記述ですが、ECMAScript の仕様ではないので避けるべき、だからです。ECMAScript とは、各社でバラバラだった JavaScript の基本部分を整理した国際規格で、現在の JavaScript は全てこの規格に即しています。たぶん ただ個人的には、以下の理由のほうがよっぽど重要です。 -- JavaScript の関数定義には、文と式の二通り有りますが、以下の違いがあります。 - 関数文は、コンパイル段階で「すべて」定義される - 関数式は、式の実行段階で「のみ」定義される この「すべて」というのは制御構文を無視して行われるので、制御構造に依存した関数文が意図通りに動作しないバグが生じる可能性が高まります。 function f(){return 0} if (false) { function f(){return 1} // 制御構造が無視され、既存の f が上書き } f(); // 0 ではなく 1 が返る 関数式ならこの問題はありません。 var f = function(){return 0} if (false) { f = function(){return 1} // 制御構造により、実行されず } f(); // 0 が返る
もともと、Javascriptでは、ローカルのファイルにアクセスできなかったはずですが、 HTML5では、File APIでできるようになったらしいです。 これを使うと、ローカルの画像ファイルが選択された時点で（アップロードする前に） サムネイル表示することもできるようです。 ご参考 http://www.html5rocks.com/ja/tutorials/file/dndf …
非同期だといけません 同期を試してみてください
答えはORUKAさんで終わりだけど今の質問者さんのレベルじゃつたわらなそうな部分があるので便乗補足します。 <h5>は見出しであって、 「文字サイズ変更に使うものじゃねえよ」 と。 そんなら<font>のほうが万倍マシだわ。
自分の行の先頭のセルの値を拾いたいということでよろしいですか？ こんなかんじでどうでしょ？ <script> try{ document.addEventListener ('click',function(e){clickfunc(e)},true); //基本 }catch(e){ document.attachEvent('onclick',function(e){clickfunc(e)}); //IE } function clickfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="TD"){ var uid=t.parentNode.firstChild.innerHTML; alert(uid); } } </script> <table> <thead> <tr><th>社員ID</th><th>社員名</th><th>住所</th></tr> </thead> <tbody> <tr><td>1</td><td>東京花子</td><td>港区～</td></tr> <tr><td>2</td><td>板橋亜希</td><td>板橋区～</td></tr> <tr><td>3</td><td>瀬田　南</td><td>世田谷区～</td></tr> </tbody> </table>
>No.1 >それをふまえ、サーバーサイド、クライアントサイドのそれぞれ別のMVCシステムを導入するのであれば、 >サーバーの状況にかかわらずBackboneを導入できます。 この点について補足します。 BackboneのMVCは一般的なMVCとは異なりますので、クライアントサイドをMVCシステムで構築していても、Backboneを導入できます。 ただ、概念として重複する部分（View + Controller ≒ BackboneのView）が多くありますので、複雑になりかねないですから、あまりお勧めしません。 MVCとして構築せずに、Backbone+テンプレートエンジンとして構築する方が良いと思います。 どちらかというと、テンプレートエンジンが持っていないイベントリスナの登録作業をBackboneが受け持つ、というのが、Backboneの目的、役目ではないでしょうか。
＞セレクトの値 というからにはせめてvalueをひっぱりましょうよ document.write(bbb.value); きちんとやるなら document.write(bbb.options[bbb.selectedIndex].value);
function doHoge1(){ $('#hoge1').animate({}, 150, 'linear', doHoge2); } function doHoge2(){ $('#hoge2').animate({}, 150, 'linear', doHoge1); } $(doHoge1); 未検証です。 スタイルを変更せずに同じ内容でanimate()しても、（スタイルの完了後と初期値が同じなので）アニメーションは行われません（できません）。
このプラグインに関しては全く何も知らないのですが、 >handle = new ActiveXObject("Msxm12.XMLHTTP"); ここは handle = new ActiveXObject("Msxml2.XMLHTTP"); ではないですか？
例の場合なら、animateをqueueに登録せず、 即座に実行すれば並列になりますよ。 $(function(){ $("#photo").fadeIn(1000).delay(3000).fadeOut(1000); $("#photo").animate({"left":"350px"},{duration:5000, queue:false}); });
ラジオボタンの場合、どの項目が選択されているかを一発で取得する方法はありません。 (つまり、document.elements['q'+i].valueでは取得できないということです) なので、#2さんのご回答のようにcheckedプロパティを1つずつチェックすることになります。
・「$(window).load」の意味は分かってますか？分からなければ検索しましょう。 ・なぜ「10秒後に取得」したいのですか？目的によってはそんな異質なことをしなくても解決法はあります。 ・「うまく動作しませんでした」とは？「何をした」「どうなった」という情報が皆無なので一切状況説明になっていません。
画像を薄くするという形であれば、　CSSの　 hoverを利用すれば如何でしょうか？ <div class="image_area"> <img src="ランダムで表示される画像"> </div> というかんじで、　とりあえず　DIVで囲んで CSSの方に、　hoverを設定すれば良いかと。 詳しくは http://web-flash-nagoya.ag-cleaner.com/web/161.h … をご覧ください。 追加で質問があればお気軽にどうぞ！
こんにちは。 #1さんの回答で >ありがとうございます。このひとつ目のソースが、submitボタン無しでsubmit出来る根幹の部分ですので外せません、 という補足がありますが、ソースを見た限りですとその通りで、はずしてみてください。 onchange="DisableButton(this); のみにすれば希望の動きになると思います。 以下、理由 1.コンボボックスを洗濯する 2.onchangeイベントによりDisableButtonが呼ばれる 3.引数bに自分自身(select)が渡されるので、 　　b.dusabled = true; // これで選択できなくなる 4.フォームをsubmitする という動きになります。 しかし、要素のdisabledをtrueにすると値が送信されなくなりますので以下のようにします。 function DisableButton ( b ) { var h = document.createElement('input'); h.type = 'hidden'; h.name = b.name; h.value = b.value; b.form.appendChild ( h ); b.disabled = true; b.form.submit; } 選択されたら、動的に同じ名前のhidden要素を作成して、選択された値をセットし、 form内に追加することにより、disabledにした要素の値を送信することが出来ます。 わからないことがあったら補足ください。
alert()に似たような物で、prompt()というのもあります。 http://www.htmq.com/js/window_prompt.shtml
＞これをランダムに表示をさせたいのです。 対象画像を配列にしておいて、次に表示する画像のインデックスをrandom()関数で算出する。 対象がn個の場合（＝インデックスは 0 ～ n-1）、 　Math.floor(Math.random() * n) とか・・・ 連続して同じ画像を選ばないようにしたいなら、少し工夫が必要かと。
ANo1です。 setTimeout()は指定時間後に処理を行なうメソッドなので、DOMとは直接関係はありません。 その処理の中で要素が取得できなければ、要素がないというエラーになります。 jQueryを用いている場合は、要素がなくても処理を行なわないだけで、エラーを回避するようになっていると思います。 要素を取得したところで、取得できているかをチェックしてみればデバッグが進むのではないでしょうか？
後者は、(function(){alert(this==window)})(); と同じです。 (A&&A.a)が式なので。 A.a の値も function(){alert(this==window)} なのですが、これを呼び出すときにレシーバーがAになります。 (式)()のときはレシーバーが省略と見なされてthisがグローバルオブジェクトのwindowになります。 レシーバーを明示指定して呼び出した (A&&A.a).call(A) だと false になります。
＞１つのリンクに触れると、他の段の全てのBOXが同じく動いてしまいます。 ホバーした要素に関係なく、全体の $('div.title a')　などに対して処理をしているからでしょう。 $('div.title a', this)などでセレクトすればよいのでは？　 . セレクタの指定方法について調べてみるのがよろしいかと思います。 おせっかいながら、各要素の構成が決まっているのであれば… 例えば、img要素が一つだけなのでわざわざクラス設定などをしなくともセレクト可能だし他の要素も同様なので、外側の構成要素さえ特定できれば充分と思われます。
> だからif文条件式の$DR[x]はtrueということですよね。 そんなことは一言も言っていません。 この式では、これを実行している時点での$DR[x]の値を使用します。 それがtrueなのかfalseなのかは不明です。 「 !$DR[1] && !$DR[2] && !$DR[3] 」という式自体には、$DR[x]がtrueかfalseかを決定する機構はありません。 独学ということなので、あまり初球の解説書には書いてないけど重要なことを。 if ( 条件 ) {then節} else {節} 「条件が成立したら then節、不成立ならelse節を実行する」等と習っていると思います。 これは正確ではなく if ( 条件式 ) {then節} else {節} 「条件式の値が『真』ならば then節、『偽』ならelse節を実行する」 というのがより正しい意味です。 条件式は、普通の式と同じで、演算子に従って値を計算したものです。 5+3 が 8 になる、とかというのと同じ扱いです。 $DR[1] = $DR[2] = $DR[3] = false; の状態だったとします。 このときの式 !$DR[1] && !$DR[2] && !$DR[3] の値を「計算」します $DR[1]=falseなので、これを式に代入します ( ! false ) && !$DR[2] && !$DR[3] !falseを計算します true && !$DR[2] && !$DR[3] 論理積の計算では、 true && A = A です。これを使って !$DR[2] && !$DR[3] 同様に計算します (! false) && !$DR[3] true && !$DR[3] !$DR[3] ! false true ∴ 「$DR[1] = $DR[2] = $DR[3] = false;」⇒「!$DR[1] && !$DR[2] && !$DR[3] の値は true 」 $DR[x]は値を参照しただけで、変化しません。$DR[x]=trueでもありません。 ですが、式全体としては true になっています。 $DR[1] = true ならどうなるかは、御自身で計算してみてください
仕組みがわかって応用しないと・・ 単純にそのフレームセットの <FRAME src="ccc.htm" name="main" frameborder="no" scrolling="auto" id="main"> </FRAMESET> を <FRAME src="ccc.htm#anchorName" name="main" frameborder="no" scrolling="auto" id="main"> </FRAMESET> に変更するだけです。 　フレームセットのページで!!!。HTTP_REFERERを参照して、その値がリンク元のページでしたら、javascriptで書き換えればよいです。 ★フレームは、1999年のHTML4.01の勧告以来、非推奨で、それ以前のドラフト以降フレームを使ったページを作るプロはいないでしょう。 ★javascriptを使用すると、それを利用できないユーザーには・・。 ★『JavaScript、Cookie、セッション ID、フレーム、DHTML、Flash などの特殊な機能が使用されているためにサイトの一部がテキスト ブラウザで表示されない場合、検索エンジンのスパイダーがサイトをうまくクロールできない可能性があります。( https://support.google.com/webmasters/answer/357 … )』 ※最も簡単なのは、もうひとつ上記の通りフレームセットを作成して、それをリンク先に指定すれば良いです。 　一度 Another HTML-lint 5( http://www.htmllint.net/html-lint/htmllint.html ) 　などでチェックしてみたら???
img要素を監視したいのであれば、その要素にloadイベントを登録すればいいと思います。
https://www.google.co.jp/search?q=%E3%83%91%E3%8 …
これはxxx.jsというファイルをつくって実行させる前提でよろしいですか？ そうであればScriptFullNameからScriptNameを取り除けばよいかもしれません （ただしパス上にファイル名と同名を含むのフォルダがなければ） var strScriptPath = String(WScript.ScriptFullName).replace(WScript.ScriptName,""); var topic = strScriptPath + "\log"; WScript.echo(topic); var fso = new ActiveXObject("Scripting.FileSystemObject"); if(!fso.FolderExists(topic)) fso.CreateFolder(topic); ただ普通実行ファイルがカレントになるのだから var topic = "log"; var fso = new ActiveXObject("Scripting.FileSystemObject"); if(!fso.FolderExists(topic)) fso.CreateFolder(topic); だけで、実行ファイルのいるフォルダにlogはできませんか？
コメントアウトしてる個所が原因等です。 $(function(){ var imageArea = $("imageArea"); //for(var j=0; j<３0; j+10){ for(var j=0; j<30; j+=10){ for(var i=1; i<=10; i++){ imageArea.append( //"<img src='"j + i + ".jpg'>"); "<img src='" + (j + i) + ".jpg'>"); } } $("#next").on("click",function() { if(parseInt(imageArea.css("left")) > -800) {//imageAreaにleftが設定されている？ //imageArea.anime({ //"left" : "-=200px" }, "fast", "linear); imageArea.animate({ "left" : "-=200px" }, "fast", "linear"); } }); $("#prev").on("click",function() { if(parseInt(imageArea.css("left")) < 0) {//imageAreaにleftが設定されている？ //imageArea.anime({ //"left" : "+=200px" }, "fast", "linear); imageArea.animate({ "left" : "+=200px" }, "fast", "linear"); } }); })
エラーの内容を教えてもらわないと状況がわかりません。 セキュリティエラーなら、利用者にセキュリティレベルを下げてもらうしかありません。 GetObject 関数 (JavaScript) http://msdn.microsoft.com/ja-jp/library/ie/7tf9x …(v=vs.94).aspx
色々とありますが・・・まず、ロード時の設定が動いてないかと・・・ jQueryでID指定の場合 $("#ID")です。 ですから $("#mega-menu").dcMegaMenu({ となります。 FireFox使ってるならFireBug入れてデバッグ作業しながら進めてください、IEならF12押すと開発者ツールっていってデバッガー出ます。あと、クロームもデバッガーついてますからそこでエラー文見ながら一つづつ潰してください・・・ あと、DLした際についてきた[index.html]ってあると思いますが、あれ見ながら再度勉強しながらやりましょう・・・
以下のように、feer1とfeed2に分ければよいのでは？。 getRssFeed("feed1", [ 'RSS1', 'RSS2', 'RSS3', 'RSS4' ], 3); getRssFeed("feed2", [ 'RSS5', 'RSS6', 'RSS7', ], 3); <body> <div id="feed1"></div> <div id="feed2"></div> </body>
＞そもそも、<head>外なのに、このような書き方をしてよいものでしょうか？ 　ダメです。 　しかし、ブラウザには、誤ったHTMLであっても可能な限りそれを処理して動作することが求められています。 　だからと言って、それに期待して記述することは誤りです。
これなら動くと思います。 「prototype」をぐぐる。 function Hoge(area) { this.area = area; }; Hoge.prototype.getArea = function() { alert('こんにちは' + this.area); } var hoge = new Hoge('東京'); hoge.getArea();
＞下記の記述でimport行を書くと構文エラーになりました。 そもそもJavaScript書いてないから動くわけがない。 JavaScript http://ja.wikipedia.org/wiki/JavaScript Java http://ja.wikipedia.org/wiki/Java タグを見る限り、そもそもHTML/CSSの習熟も足りてなさそう。（非推奨な属性を使っている） まずは基本的なHTML/CSSの知識とブラウザの知識を付けたほうがいいです。
回答がないようなので… といっても、ＨＴＭＬの構成がわからないので勝手に作成しています。 スクリプトの考え方も別物なので、こんな方法もあるというご参考までに。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #myMenu, #myMenu li{ list-style-type:none; margin:0; padding:0; } #myMenu{ overflow:hidden; } #myMenu li{ width:90px; background-color:#88b; color:#fff; float:left; padding:4px; text-align:center; border:1px solid #ccc; border-color:#ccc #448 #448 #ccc; } #myMenu li:hover { background-color:#44c; } #myLogo{ width:700px; height:150px; margin-top:3px; overflow:hidden; position:relative; background-color:#ddf; } #myLogo div{ position:absolute; top:0; left:0; } </style> </head> <body> <ul id="myMenu"> <li>Menu1</li> <li>Menu2</li> <li>Menu3</li> <li>Menu4</li> <li>Menu5</li> <li>Menu6</li> <li>Menu7</li> </ul> <div id="myLogo"> <div>Logo</div> <div>Body1</div> <div>Body2</div> <div>Body3</div> <div>Body4</div> <div>Body5</div> <div>Body6</div> <div>Body7</div> </div> <script type="text/javascript"> (function(menu, logo){ 　var setContent = function(index){ 　　var idx = 0, childs = document.getElementById(logo).childNodes; 　　for(var i=0, e; e=childs[i++];){ 　　　if(e.nodeName === "DIV") 　　　　e.style.display = (index==idx++)?"":"none"; 　　} 　} 　var getOrder = function(e){ 　　var menus = document.getElementById(menu).getElementsByTagName("li"); 　　for(var i=0, m; m=menus[i++];) if(m===e) break; 　　return i; 　} 　var test = function(e){ 　　return !!(e && e.nodeName==="LI" && e.parentNode.id==menu); 　} 　var changer = function(evt){ 　　var t = evt.target || evt.srcElement; 　　var r = evt.relatedTarget || evt.toElement || null; 　　if(test(r)) setContent(getOrder(r)); 　　　else if(test(t)) setContent(0); 　} /*@cc_on@*/ 　setContent(0); 　document./*@if(1)attachEvent('on'+@else@*/addEventListener(/*@end@*/'mouseout', changer, false); })("myMenu", "myLogo"); </script> </body> </html>
何も難しいことはないのですが、 何がわからなかったんでしょう？ とりあえず"超"適当に作ってみましたが、ここから 何がわからなくて、 何を調べなきゃいけなかったのかを 自分なりに考えてみるのがよろしいかと <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> <html> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> <title>方式検討テスト画面</title> <script type="text/javascript"> <!-- function bmi() { var a = document.getElementById("tall").value / 100; var b = document.getElementById("weight").value; if(a=="" || a==null || b=="" || b==null){ return null; } var c = b/(a*a); document.getElementById("bmi").value = c; } //--> </script> </head> <body> <div>身長:<input type="text" id="tall" onChange="bmi()"></div> <div>体重:<input type="text" id="weight" onChange="bmi()"></div> <div>BMI:<input type="text" id="bmi" readOnly></div> </body> </html>
function hoge (table) { 　Array.prototype.forEach.call ( 　　table.querySelectorAll ('tr'), 　　function (row) { 　　　Array.prototype.slice.call (row.querySelectorAll('td'), 0, -1).forEach ( 　　　　function (td, i) { 　　　　　var tr = td.parentNode; 　　　　　var cn = tr.cloneNode (false); 　　　　　cn.appendChild (td); 　　　　　tr.parentNode.insertBefore (cn, tr); 　　　　 } 　　　 ) 　　} 　) } hoge (document.querySelector('table')); スマホでうごく？
細かな部分で、どのような動作をイメージなさっているのかよくわからないので、とりあえずの想定で… こんな感じで、イメージに近いものになりませんか？ （全角空白は半角に） $(function(){ 　var menus = $("#global-nav a.sub"); 　menus.next("ul").hide(); 　menus.click(function(){ 　　var t = this; 　　menus.each(function(){ 　　　if(t===this) $(this).next("ul").slideToggle("slow"); 　　　else $(this).next("ul").slideUp(); 　　}); 　　return false; 　}); });
私は iPhone を持っていないため、確認できないのですが… この文は、綴りが間違っています。 > window.onunlord = function(){} 以下のように修正したら、もしかしたらうまくいくかもしれません。（lord ではなく load） > window.onunload = function(){} 念のため確認ですが、この文は <script> で囲って使う物ですので、以下のようにしてくださいね。 <script> window.onunload = function(){} </script> また、前に回答している方のおっしゃる通り、これはキャッシュではないです。 Back Forward Cache というブラウザの機能だそうです。
「.photo-1」のように個別に指定していると、画像数が増減したりする度にスクリプトを書き直さなければならなくなります。 『div内の子要素を順に表示する』みたいな考え方に切り替えることで、汎用性を増すことができるのではないでしょうか？ 以下、一例です。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #photo-box{ position:relative; } #photo-box p{ position:absolute; top:0; left:0; } #photo-box img{ width:500px; height:150px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ 　var ImageChanger = function(id, fadeSpeed, interval){ 　　var index = 0; 　　var imgs = $(id).children(); 　　var exchange = function(){ 　　　imgs.eq(index++).fadeOut(fadeSpeed); 　　　index %= imgs.length; 　　　imgs.eq(index).fadeIn(fadeSpeed); 　　} 　　imgs.filter(":gt(0)").hide(); 　　setInterval(exchange, interval); 　} 　ImageChanger("#photo-box", 1000, 3000); }); </script> </head> <body> <div id="photo-box"> <p><img src="img/photo01.jpg" alt=""></p> <p><img src="img/photo02.jpg" alt=""></p> <p><img src="img/photo03.jpg" alt=""></p> <p><img src="img/photo04.jpg" alt=""></p> </div> </body> </html>
＞一定時間になるとループを抜けるような処理がなかなか思いつきません。 通常のカウントダウンと同じ考え方でよいのではないですか？ カウントダウンの場合は残り時間が0になれば終了ですが、ご質問の場合は 一定の時間になれば終了という点が違うだけ。 カウントダウンの例なら、検索すれば山ほど見つかるはずです。
>輪っかの開き(tilt)が無くなる とのことですが、無くなってはおりません。 tiltは開きではなく傾きです。 googleでtiltを検索すると分かります。 デフォルトでのtiltの設定は上下に傾ける(奥行きを出す)設定となっております。 diagonalRingLeft(diagonalRingRight)でのtiltの設定は左右の傾きの角度の設定となっております。 軽くjsを見た程度ですが、そのままでは両方の機能を同時に使用することは出来そうにないです。 下記はdiagonalRingLeftのy軸の式ですが、こんな感じで奥行きと回転軸が斜めになる式を自作するしかないようです。 -Math.cos(r + Math.tan(Math.cos(a))) / (t + 1.5)
クリップボードへのコピーは、zClipというjQueryのスクリプトが有用そうです（ブラウザの違いも吸収してくれます）。 http://akiok-jp.hatenablog.com/entry/2013/04/17/ …
onclick=" この部分 " は、スクリプトを書く場所です。 <script>この部分</script>も、スクリプトを書く場所です。 スクリプトを書く場所に書いた内容は、すべてスクリプトと見なされます。
不親切な解答をしたような気がするので、 簡単な例をあげてみたいと思います。 HTML: <html><body><div class="main" id="main"> <p>なんとか</p> <p><a href="2.html" class="next">次</a><p> </div></body></html> で、次のページへのリンクの XPATH は /html/body/div/p/a[@class="next"] とか //a[contains(concat(" ", @class, " "), " next ")] とか //div[@class="main"]//a[contains(text(), "次")] とか id("main")//a[@class="next"] とかと、できるだけ、唯一の要素になるように書きます。 実装によりますが、多分、一致した最初のものが使われると思います。 継ぎ足す要素も同じように /html/body/div[@class="main"] とか //div[@class="main"] とか id("main") とかと、これもできるだけ、唯一の要素になるように書きます。 こちらの場合は、一致した全ての要素を連結して継ぎ足すようです。 あとは対象にしたいサイトの URL を正規表現で書きます。 ただし、スラッシュはエスケープしなくても良いようです。 例えば http://www.example.jp/news/ をベースに 2013/09/29、2010/10/01 などがある場合、 ^http://www\.example\.jp/news/.+ という感じで指定します。 アドオンなしでも、最近の Chrome、FireFox などでは、XPATHを簡単に 表示する開発ツールが、メニューからたどれるところにあるので、 対応したいサイトで、開発メニューを開いてみると良いと思います。 分かりにくいところがあれば、補足で指摘してください。 参考URL：http://ja.wikipedia.org/wiki/XML_Path_Language
ご提示のライブラリは、単に回転表示する部分を処理するライブラリなので、インターフェースは各自で実装するようになっているみたいですが…？ とはいっても、回転中はただの台形表示なので、コンテンツが表示されたまま回転するようには見えないと思います。 （canvasを利用すれば、そのようなことも可能そうですが） とりあえず、ご質問のようにするなら、例えばご提示のページを例にすれば… $(function(){ 　$("#flipbox").one("mouseover",function(){ 　　$("#flipbox").flip({ 　　　direction: "rl", 　　　color: "#39AB3E", 　　　content: "Next content" 　　}); 　}); }); とか。 実際にどのようにしたいのかよくわからないので、このままとは思えませんが、要領としてはこんな方法でいけるのではないでしょうか？ 気になったのは、ご提示のページでは回転させるたびに、ドキュメントの最初に妙なタグが追加されること。（ＦＸで実行した場合） DOCTYPE宣言の前なので、表示されるわけではありませんが… 当然ながら、（↑）の例でも同様の現象が起きます。
IEでは、独自に設定した属性が、その要素のプロパティに追加されるので <div abc="5"> のabc属性は thatDiv.abc のように取得できます。 そこで、document.createElement('div')とthatDivのプロパティを比較して、thatDivのみにあるプロパティを抜き出せば、独自属性を取得できると思います。
setOnLoadCallback(function(){ initialize('feed1', 'フィードのurl1, 3); initialize('feed2', 'フィードのurl2, 3); }); ではいかがでしょうか。 参考URL http://stackoverflow.com/questions/5929734/use-p …
iframe内に <div id="test">aaaaa</div> があるとしたらこれで取れます。 $('iframe').contents().find('#test').text();
このスライダーだと http://css-tricks.com/examples/FeaturedContentSl … こんな感じで画像設定 <div class="panel" title="Panel 1"> <div class="wrapper"> <img src="images/tempphoto-1.jpg" alt="temp" />←これが大きい画像なのでこれをサムネイルと違う画像に変えれば変わります。 <div class="photo-meta-data"> Photo Credit: <a href="http://flickr.com/photos/astrolondon/2396265240/ … Bhattacharya</a><br /> <span>"Free Tibet" Protest at the Olympic Torch Rally</span> </div> </div> </div> ↓これがサムネイルの設定 <a href="#1" class="cross-link active-thumb"><img src="images/tempphoto-1thumb.jpg" class="nav-thumb" alt="temp-thumb" /></a> このスライダーは http://www.awkwardgroup.com/sandbox/awkward-show … こんな感じで画像設定 <div id="showcase" class="showcase"> <!-- Each child div in #showcase with the class .showcase-slide represents a slide. --> <div class="showcase-slide"> <!-- Put the slide content in a div with the class .showcase-content. --> <div class="showcase-content"> <img src="images/01.jpg" alt="01" />←これが大きい画像 </div> <!-- Put the thumbnail content in a div with the class .showcase-thumbnail --> <div class="showcase-thumbnail"> <img src="images/01.jpg" alt="01" width="140px" />←これがサムネイル画像 <!-- The div below with the class .showcase-thumbnail-caption contains the thumbnail caption. --> <div class="showcase-thumbnail-caption">Caption Text</div> <!-- The div below with the class .showcase-thumbnail-cover is used for the thumbnails active state. --> <div class="showcase-thumbnail-cover"></div> </div> <!-- Put the caption content in a div with the class .showcase-caption --> <div class="showcase-caption"> <h2>Be creative. Get Noticed!</h2> </div> </div> </div> 添付画像のスライダー名が何か分からないですが、 このように画像設定が大きい画像、サムネイル画像で分けられている場合大きいほう変えれば変わりますよ 分けられてなければカスタマイズするって手もありますが・・・
var n=0; for (var i = 0; i < result.feed.entries.length; i++) { 　if (result.feed.entries[i].categories[0] == 'カテゴリー名') { 　　//記事の取得 　　n++; 　　if (n == 件数) break; 　} } ではいかがでしょうか。
http://detail.chiebukuro.yahoo.co.jp/qa/question …
たとえば現状のルート表示処理のあとに、 // 別ルート表示処理 var directionsRenderer2 = new google.maps.DirectionsRenderer({polylineOptions:{strokeColor: "red"}}); directionsRenderer2.setMap(mapObj); request = { origin: "羊ケ丘展望台", destination: "札幌駅", travelMode: google.maps.DirectionsTravelMode.DRIVING, waypoints: [ { location: new google.maps.LatLng(43.034047,141.359536) } ] }; directionsService.route(request, function(result, status) { if (status == google.maps.DirectionsStatus.OK) { directionsRenderer2.setDirections(result); } }); こんなのを追加すればいいのではないでしょうか。（処理をまとめたりするのはご自身で・・） ただ、自分は今回の質問を拝見して初めてGoogle Maps APIを触った、というレベルですので、もっとうまい方法もあるのだと思います。
詳しい情報わからないけど、 やっぱスマフォサイト構築についてのフォラムに聞きに行ってみて、 そこでいろいろ専門家がいますから
環境作って確認したら他にも悪い所が分かりました。 ご質問、その他を選択した場合「$_POST['name']」「$_POST['mail']」に値が入っておりません。 原因として同じname属性を持つinputが存在する為です。 「$_POST['name']」はどうでもいいですけど、「$_POST['mail']」はif文で判定並びに送信する際に必要です。 <fieldset id="A"> <td>お名前</td> <td><input type="text" name="name" value=""></td> <td>Mail</td> <td><input type="text" name="mail" value=""></td> (略) </fieldset> <fieldset id="B"> <td>お名前</td> <td><input type="text" name="name" value=""></td> <td>Mail</td> <td><input type="text" name="mail" value=""></td> (略) </fieldset> setFormに下記追加 document.getElementById("select").value = ex.value; 下記のようにして配列化し <td><input type="text" name="name[A]" value=""></td> <td><input type="text" name="mail[A]" value=""></td> <td><input type="text" name="name[B]" value=""></td> <td><input type="text" name="mail[B]" value=""></td> 下記hidden追加 <input type="hidden" id="select" name="select" value="" /> $to=$_POST['mail'][$_POST['select']]; $name=$_POST['name'][$_POST['select']]; これで選択したやつが取れます。 if文も if(!empty($_POST['mail'][$_POST['select']])){ これに修正 「$_POST['chance']」は、配列が格納されているため $chance=$_POST['chance']; これでは本来ほしい状態で値が取得できません。 $chance=$_POST['chance'][0]; //カンマは区切り文字 $chance.=(!empty($chance) && !empty($_POST['chance'][1])) ? ','.$_POST['chance'][1] : $_POST['chance'][1]; こんな感じだと欲しい状態で値が取得できます。
mapとfilterについてはすでに書かれているので割愛します。 >このコードの結果は[4,4]と出力されるそうなのですが、 その説明をされている方が間違っている可能性もふまえて、 ・サンプルコードはそれで正しいのか、 ・実行して、[4,4]になったのか、 改めて確認し直してみてください。 ----------- >で変換したものの中から2で割ってあまりが無いものを抽出し、 >[2,4] >が出力されると思うのですが、違うようです。 0を2で割っても0ですので、 [0,1,2,3,4] に対して処理を行った期待値は [0,2,4] です。
これであってる？ jqueryで出たり消えたり <script> $(function(){ $("#select1").change(function(){ $("#mail1").toggle(); }); }) </script> <select id="select1"> <option value="1">出現</option> <option value="2">隠蔽</option> </select> <div id="mail1"> メールアドレス*<br> <input type="text" id="userML1" value="" /> </div> javascriptだけで出たり消えたり <script> function toggle(id,value) { if (value==1) { document.getElementById("mail2").style.display="block"; } else { document.getElementById("mail2").style.display="none"; } } </script> <select id="select2" onchange="toggle('mail2',this.value)"> <option value="1">必須</option> <option value="2">非必須</option> </select> <div id="mail2"> メールアドレス*<br> <input type="text" id="userML2" value="" /> </div>
ANo1様の回答にもあるように、ご質問そのもののようなサービスは提供されていないと思いますので、ご自分で実装するしかないでしょう。 ＞地図にマーカーが設定されている場所を通らないようにしたいです。 一言で「通らない」といっても、ピンポイントで通らなければよいのか、ある範囲のエリアを通ってはならないかなどで違ってくると思います。 ルート探索のＡＰＩを利用するのであれば、必要に応じて迂回地点を設定して経路探索をすれば、多少はご希望に近いものが得られるかも知れません。 ただし、迂回点を指定したからといっても、対象の地点を通る経路になっている可能性があるので、結局、得られた経路を順に調べて、通っていないことを確認することが必要そうです。 それなので、『迂回地点設定-経路確認-経路探索』といったトライアル・アンド・エラーのようなものになってしまいそうですが、必ず条件にあった経路が見つかるとも限りません。 例えば、本州から九州に渡るルートで、『下関を通らない』とか言われても・・・
play_with_youさんとその回答の補足から作りました。 RUN押下すれば動作確認できます。(削除されてたらすみません。) http://plnkr.co/edit/aglDSY 修正個所は下記２点 １． var makerArray = { "0001":[["1","選択してください"],["2","町田市"],["3","立川市"]], "0002":[["1","選択してください"],["2","大阪市"],["3","堺市"]], "0003":[["1","選択してください"],["2","名古屋市"],["3","豊田市"]], "0004":[["1","選択してください"],["2","福岡市"],["3","北九州市"]] } ↓ var makerArray = { "0001":[["","選択してください"],["http://google.co.jp","町田市"],["http://yahoo.co.jp","立川市"]], "0002":[["","選択してください"],["http://google.co.jp","大阪市"],["http://yahoo.co.jp","堺市"]], "0003":[["","選択してください"],["http://google.co.jp","名古屋市"],["http://yahoo.co.jp","豊田市"]], "0004":[["","選択してください"],["http://google.co.jp","福岡市"],["http://yahoo.co.jp","北九州市"]] } ２． <a href="#" id="makerURL"><input type="button" value="　検索する　"></a> ↓ <a href="#" id="makerURL"><input type="button" value="　検索する　"></a> 新規追加として下記２点 // 都道府県先によってURL変更 $("#makerItem").change(function () { $("#makerURL").attr({"href":$(this).val()}); }); //URL初期化 $("#makerURL").attr({"href":""}); があります。
複数マッチした場合どうしたいかによります。 <script> function func(f){ var x=f.elements["x"].value; var y=f.elements["y"].value; var reg=new RegExp("^.*"+y+".*$","gm"); alert(x.match(reg)); } </script> <form> <p> <textarea name="x"> abcd efgh ijkl mnoa </textarea> <input type="text" name="y" value="b"> <input type="button" value="check" onclick="func(this.form)"> <p> </form> この場合、bで検索すればabcdを返しますが、aで検索すると2行マッチするので 両方かえします。受け取ったデータをどう処理したいかも検討してみてください
私が作ったもので良ければどうぞ。 ●ｊｓ http://code.google.com/p/newblue/source/browse/C … ●ｃｓｓ http://code.google.com/p/newblue/source/browse/C … ●html+js+css http://code.google.com/p/newblue/source/browse/C …
徐々に色が変わるのでこんなかんじですか？ var canvas = document.getElementById('test'), ctxt = canvas.getContext('2d'); var rmin = 1, rmax = 25, diff = 1, radius = rmin; var r = 0, g = 255, b = 0; var dc = Math.floor(255/rmax), dr = dc, dg = -dc, db = 0; var timer = setInterval(function(){ canvas.width = 255;//canvas clear ctxt.fillStyle = 'rgb(' + r +',' + g + ',' + b + ')'; ctxt.arc(100, 80, radius, 0, Math.PI*2, false); ctxt.fill(); radius += diff; if(radius >= rmax){ diff = -1; db = dc; dr = -dc; r = 255; b = 0; g = 0; } if(radius <= rmin){ diff = 0; db = 0; dr = 0; r = 0; b = 255; g = 0; } r += dr; g += dg; b += db; }, 200);
こそーとw。 function(data) { 　var ary = eval('[' + (new Array (102)).join ('[],') + ']'); 　var obj, p, t; 　for (var p in data) 　　if (data.hasOwnProperty (p)) 　　　(t = data[p]),alert(t), 　　　ary[t].push ({ item: p, score: t }); 　alert([ary[100][0].item, ary[100][0].score]); 　return ary; } aryは ちいさいじゅん。 scoreが おなじ ばあいも あるので、そこも はいれつで かえすよ そーとは、さいそく !!?
JavaScriptで取得できる事と、攻撃者が取得する事は別物です。 JavaScriptでalert(document.cookie)とすれば、JavaScriptで取得できますが、そこに表示されている内容は攻撃者には見えません。 攻撃者が内容を見る（取得する）には、そのalert()されている内容を、何らかの形で攻撃者の元へ送信する必要があります。 >No.1補足 >という3つの属性の内、1つでも悪意のあるサイトと一致しない場合は、悪意のあるサイトはパソコン内のcookie情報を取得できないのでしょうか？ 「悪意のないサイト」と「悪意のあるサイト」は、通常はdomainが違いますので、 「『悪意のないサイト』の情報を『悪意のあるサイト』が取得する事」はできません。 （cookieもサイトの情報の一つです） 悪意のないサイトに埋め込まれた悪意のあるプログラムからは、domain、path、secureの全てが一致していますから、自由に取得できます。 「悪意のあるサイト」と「悪意のないサイトに埋め込まれた悪意のあるプログラム」は別物です。 また、「悪意のあるサイト」と「攻撃者」も別物です。
JQuery を使ってと言いつつ、DOM方式と混ざってるのが敗因のようです。 <script src="jquery-1.8.1.min.js" type="text/javascript"></script> <script type="text/javascript" > $(function(){ $("form").submit(function() { $('input[readOnly]').attr('disabled',true); /* input 要素の 属性[readonly] を持ってる全てに対して、属性 disabled を設定 */ } );// onsubmit end }); </script>
<div id="inputs"></div> に対して、 <script> $.each("web youtube recipe products news images books".split(" "), function(i, v){ var div = $("<div>").appendTo("#inputs") , input = $("<input>").appendTo(div) , span = $("<label>").text(v).appendTo(div); input.googleSuggest({ service: v }); }); </script> で、divタブの「idがinputs」に対してinputタグを挿入し、そのinputタグを「googleSuggest」で「Autocomplete」機能を付与させています。 何をどう弄ったのか書いてないのでしりませんが URLと同じように指定したdivに対して「Autocomplete」機能を付与したい場合なら 指定するdivのidを「#inputs」に記入して下さい。 ※idが「testAutoComp」の場合だと var div = $("<div>").appendTo("#testAutoComp") になります。 指定したinputタグに対して同じように「Autocomplete」機能を付与したい場合なら <input id="testAutoComp" /> <script> $(function() { var testTags = [ "test1", "test2", "test3" ]; $("#testAutoComp").autocomplete({ source: testTags }); }); </script> こんな感じで機能付与出来ますよ。
//そのうち、きっとちゃんとした回答がつくでしょう！ //テーブル要素の 子孫要素で class が tb_menu_border のものを集めなきゃ！ var es = document.querySelectorAll ('table *.tb_menu_border'); //集めたものはノードリストなので配列とはちょっと違う、なのでコピーして配列に変えておこう！ es = Array.prototype.slice.call (es, 0); //そうそう、要素の持つテキストから空白を取り除いて、空白かどうか調べる関数が必要だな！ function isNoText (e) { return ! e.textContent.trim (); } //そうそう、空白なら class を消してしまう関数も必要だな！ function remove (e) { e.classList.remove ('tb_menu_border'); } es.filter (isNoText) /* ふるいにかけて、*/ .forEach (remove); // 消しちゃへ！ //あちゃぁ、querySelectorAll,tlim,classList,filte,forEach が使えないのがあるらしい。
正規表現で無駄にやってみた場合…… var str = "a1b1c1c1", char, result = [], length = 0, regexp; while (char = str.charAt(0)) { result[length++] = char + ':' + str.match(regexp = new RegExp(char, 'g')).length; str = str.replace(regexp, ''); } alert(result.join('\n'));
下記の拡張機能でできるのを確認しました。（linkclump） https://chrome.google.com/webstore/detail/linkcl … 1.アドオンをインストールしたら、Opened as New Tabsは消して新しく　Add Actionを追加します。 2.ActivatioのMouse button を right または left 3.ActivationのSelection box color は好きな色を選択 4.ActionのSelected links should be...をCopied to clipboard 5.Advanced Optionsのcopy format　URLS only 6.Saveします。 google検索でリンク部分に対して、右クリック(または左）で範囲選択すれば （上記で指定した点線の色が表示されます） クリップボードにＵＲＬがコピーされます。
詳しい仕様は知らないのですが、new を使った場合、 function fn (a, b) { this.x = a; this.y = b; } var instance = new fn; という場合は、暗黙のルールのようなもので、 function fn (a, b) { this = {}; this.x = a; this.y = b; return this; } 大体こんな感じになります。(これは勿論エラーです) ここでは、プロトタイプについてはきにしていません。 new 演算子を使った場合でも、初めから関数が戻り値を返すように書かれている場合は、上記の処理は起きません。 ほぼ同じようにすればいいです。 function Man(name) { return { myouji: name, aisatu: function () { alert('こんにちは' + this.myouji); } }; }
＞切り替わった後のエリアAに表示された説明内に、更にクリッカブルマップ ＞を設定しリンクを貼りたいのですが、方法がわかりません。 画像を入れ替えているだけなので、クリッカブルマップの仕組み自体はそのまま有効なのですが、画像ごとにボタンエリア以外にもエリアを追加設定したいのか、画像を入替えたところでボタンは消えてしまうのかが良くわかりません。（現状だとボタンの表示は消えても、クリッカブルマップは生きているはず） よくわかりませんが、ひとつの方法としては、画像切替と同時にusemap属性の参照先も替えてあげれば異なるマップを参照することが可能なはずです。 もしも、ボタンは常に表示されているのなら、それは画像とは切り離した仕組みで表示＆制御するようにしたほうがよさそうに感じます。 （通常のメニューのようなつくりにするか、表示位置がバラバラならposition:absoluteで位置を指定するとか） あとはご質問と同様にマップ画像や参照先を切替えてあげればよろしいかと。 あるいは、ボタンに応じて異なるクリッカブルマップが表示されるようにしたいのであれば、画像を切り替えるのではなく、クリッカブルマップそのものを複数用意しておいて、それぞれのボタンに対応するマップを表示するようにしたほうがわかり易いのではないでしょうか。（他のマップは非表示）
ANo1、2です。 aaaaymさんが作成なさったコードではなく、参照先のコードをひとつのセットとしてそれを必要なだけ（idや名前等を替えて）設置してくださいという意味です。 具体的には、もとのコードが 　function slideSwitch() { 　　　～～～～～～～ 　} 　setInterval(slideSwitch, 2100 ); という構成になっているとすれば、2個目は、 　function slideSwitch2() { 　　　～～～～～～～ 　} 　setInterval(slideSwitch2, 2100 ); といった按配です。（もちろんidその他も変更してください） この方法だと、何十個もあると面倒なことになるので、個別に制御したい要素（例として、対象要素、切替わり時間、切替わり間隔）を可変にできるようにしておいて、必要な回数呼び出せば良いというような発想になるかと思います。 以下、書きっぱなしの例なので、かなりいい加減ですが… （切替えの方法なども、ご参考のサイトとは少し変えています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .slideshow { position:relative; } .slideshow img{ position:absolute; top:0; left:0; display:none; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <script type="text/javascript"> $(function(){ var SS = function(e, s, i){ 　this.speed = s; 　this.interval = i; 　this.index = 0; 　this.elements = $("img", e); } SS.init = function(e){ 　var img = this.elements.eq(0); 　e.addClass("slideshow") 　　.css({width:img.width(), height:img.height()}); 　img.show(); } SS.prototype = { 　change : function(){ 　　this.elements.eq(this.index++).fadeOut(this.speed); 　　this.index %= this.elements.length; 　　this.elements.eq(this.index).fadeIn(this.speed); 　}, 　start : function(){ 　　var obj = this; 　　if(!obj.slideID) 　　　obj.slideID = setInterval(function(){ obj.change()}, obj.interval); 　}, 　stop : function(){ 　　clearInterval(this.slideID); 　　this.slideId = null; 　} } var SlideShow = function(id, fadeSpeed, interval){ 　var e = $("#" + id); 　var s = new SS(e, fadeSpeed, interval); 　SS.init.call(s, e); 　return s; } // ---------------------------------- /* arguments : elementID, fadeDuration, timerInterval */ SlideShow("slideshow1", 400, 2000).start(); SlideShow("slideshow2", 1200, 3000).start(); }); </script> </head> <body> <div id="slideshow1"> <img src="img/photo01.jpg" alt=""> <img src="img/photo02.jpg" alt=""> <img src="img/photo03.jpg" alt=""> </div> <div id="slideshow2"> <img src="img/photo01.jpg" alt=""> <img src="img/photo02.jpg" alt=""> <img src="img/photo03.jpg" alt=""> <img src="img/photo04.jpg" alt=""> <img src="img/photo05.jpg" alt=""> </div> </body> </html>
ハッシュの遷移で判定する
http://jlamp.net/archives/295 理由は↑と同じです。
どういうルールになっているのか書いて無いので、まったくのあてずっぽですが… $("a.btn").click(function(){ $($(this).attr("href")).show(); }); とか？
＞ひとつひとつ見に行って、あればそのファイル名をHTMLに出力する およそ効率的な方法とは思えませんが、方法としては可能でしょう。 一例として。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> .imageBox, .imageBox li{ list-style-type:none; matgin:0; padding:0; } .imageBox li{ float:left; margin:5px; } .imageBox img{ height:150px; width:150px; } .imageBox p{ margin:0; } </style> </head> <body> <script type="text/javascript"> (function(){ 　var ul = document.createElement("ul"); 　var li = document.createElement("li"); 　var caption = document.createElement("p"); 　var i, name, img, e, cap; 　ul.className = "imageBox"; 　li.style.display = "none"; 　for(i=0; i<30; i++){ 　　e = li.cloneNode(true); 　　cap = caption.cloneNode(true); 　　img = new Image(); 　　e.appendChild(img); 　　e.appendChild(cap); 　　ul.appendChild(e); 　　name = "IMG_" + i + ".jpg"; 　　cap.appendChild(document.createTextNode(name)); 　　img.alt = ""; 　　img.onload = (function(elm){ 　　　return function(){ elm.style.display = ""; } 　　})(e); 　　img.src = name; 　} 　document.body.appendChild(ul); })(); </script> </body> </html>
コピペするだけじゃなく意味を理解しましょう。 最後の「.change(); 」は何故つけたんですか？何をしているか分かりますか？ これはchangeイベントを発生させています。 イベントが発生したので、当然chakedの切り替えが起こります。
こんにちは。 サンプルをどうぞってURL貼ったら削除され、もうその方法は出来ないようなので以下に全文貼ります。 内容見てみてわからなかったら補足下さい。 <!DOCTYPE html> <html lang="ja-JP"> <head> <meta charset="UTF-8" /> <title>【OKWave回答サンプル集】連番画像「次へ」「前へ」で、目次に戻るには</title> <link rel="stylesheet" href="/okwave/qa/css/basic.css" /> <!--[if lt IE 9]> <script src="/okwave/qa/js/html5.shiv.js"></script> <![endif]--> <script> var MAX_NUMBER = 3; var index1 = 1; var prevObj1; var nextObj1; var imgObj1; var index2 = 1; var prevObj2; var nextObj2; var imgObj2; window.onload = function() { //============================================================================== // ここはサンプル1用 //============================================================================== prevObj1 = document.getElementById('lnk-prev1'); nextObj1 = document.getElementById('lnk-next1'); imgObj1 = document.getElementById('img-main1'); prevObj1.onclick = function() { changeImage1 ( -1 ); return false; } nextObj1.onclick = function() { changeImage1 ( 1 ); return false; } //============================================================================== // ここはサンプル2用 prevObj2 = document.getElementById('lnk-prev2'); nextObj2 = document.getElementById('lnk-next2'); imgObj2 = document.getElementById('img-main2'); prevObj2.onclick = function() { changeImage2 ( -1 ); return false; } nextObj2.onclick = function() { changeImage2 ( 1 ); return false; } // 先頭画像表示で呼出 changeImage2 ( 0 ); //============================================================================== } function changeImage1 ( flg ) { index1 += flg; if ( index1 < 1 || index1 > MAX_NUMBER ) { // 目次へ移動 location.href = 'mokuji.html'; return; } // 画像を変更 imgObj1.src = 'images/natsu/natsu' + index1 + '.png'; } function changeImage2 ( flg ) { index2 += flg; // 1を表示した場合は「前へ」を非表示、それ以外は表示 prevObj2.style.visibility = index2 === 1 ? 'hidden' : 'visible'; // 最大数を表示した場合は「次へ」を非表示、それ以外は表示 nextObj2.style.visibility = index2 === MAX_NUMBER ? 'hidden' : 'visible'; // 画像を変更 imgObj2.src = 'images/natsu/natsu' + index2 + '.png'; } </script> <style> div.image { width: 200px; } div.image p { text-align: center; } </style> </head> <body> <div class="wrapper"> <header> <h1>連番画像「次へ」「前へ」で、目次に戻るには(q8237457)</h1> </header> <div class="main"> <section> <h2>サンプル1</h2> <div class="image"> <img src="images/natsu/natsu1.png" id="img-main1" width="200" height="200" alt="画像" /> <p> <a href="#" id="lnk-prev1">前へ</a> <a href="#" id="lnk-next1">次へ</a> </p> </div> </section> <section> <h2>サンプル2(最初または最後で「前へ」または「次へ」を非表示)</h2> <div class="image"> <img src="images/natsu/natsu1.png" id="img-main2" width="200" height="200" alt="画像" /> <p> <a href="#" id="lnk-prev2">前へ</a> <a href="#" id="lnk-next2">次へ</a> </p> </div> </section> </div> </div> </body> </html> <!-- q8237457 -->
>あれはツール等で作成しているのでしょうか。 多くはいわゆる手書きだと思いますが、そういうサイトを作る作成ソフトもあります。 Live for Weblife http://www.digitalstage.jp/live/template.html BiND for Weblifeシリーズの１つです。
PHP …Webサーバ側の処理 jQuery …Webブラウザ側の処理 Ajax …Webページのリロードを伴わない，Webブラウザ～Webサーバ間の通信処理 JSON …Webアプリにおいて送受信されるデータ形式 > どのように呼び出して連携させるのか、 > 実際のサンプルなど使った図解でわかりやすいものがあったら 各技術の入門者向けの記事を，分からないなりにもそれぞれ数十ページはざっと流し読みして，そのイメージを大づかみしようというのなら話はまったく別なのですが。 分からない用語ばかりだから１ページも読めない，と早々に諦めて，ただ１枚その図解さえ見れば実際のサンプルにもなっておりすぐ分かる，そういうものはないか？　というご質問なら，この点についての私からの回答はありません。 業務ならそういう資料を作りますけれど，匿名Q&Aの回答者としては私はその労力を割けないです。
ECMAScript 5.1 では後置演算子の方が前置演算子よりも優先順位が高いので ++a-- は (合法だとして) ++(a--) と解釈されます. つまり「-- してから ++」となる. あと, 単項演算子の結合規則は実質的に単項演算子の位置だけで決まってしまいます. つまり, 前置演算子は右結合, 後置演算子は左結合としか解釈の仕様がありません. どういうことかというと, 中置 2項演算子では a+b+c という式を (a+b)+c a+(b+c) のどちらとも解釈できるため, (+ の場合) 左結合と指定することで前者の解釈を強制しています. ところが, 前置演算子では !~+--a のように書いても !(~(+(--a))) としか解釈できないので, 結合規則を指定する意味はありません. なお, 結合規則は「同じ優先順位を持つ演算子同士の間でどちらを優先するか」を規定するものなので, 最初の例のように優先順位が異なる演算子の間では考える必要はありません.
下記「javascript 外部ファイル化」が参考になりますよ。 参考URL：http://ameblo.jp/exlink/entry-10242270354.html
Jqueryで作ってみました。jquery-1.8.1.min.js で動作チェックしています。ブラウザはopera。 縦型の配置ブロック(div要素)に id を area0 から area3 まで振ります。css で必須なのは、 float : left;です。あとは、適宜修飾して下さい。 並べ替えたい要素を id="thum_list" の要素内に、順に記述しておきます(div要素としています)。見出し用のブロックも同じ扱いで先頭に。 縦型の配置ブロックよりさらに下方に表示したい要素が有るなら、css の clear:both; が必要です。 画像数が変わると、htmlの更新自体は必要だけど、とりあえず id="thum_list" の要素内に画像番号順に追加や削除で済むようにはなります。 <html lang="ja"><head> <style type="text/css"> .tatewaku { float : left; width : 23%;/* 横に並べたい個数や、border,paddingサイズによって適宜変更, ブラウザによってpadding 内部サイズだったり、borderも含んでいたりするので注意 */ height: 80%; overflow: auto; padding: 1%; border : 1px dotted green; } .clearbox{ clear:both; } </style> <script type="text/javascript" src="jquery-1.8.1.min.js"></script> <script type="text/javascript"> $(document).ready(function(){ $('#thum_list div').each( function(key,val){ /* 第１引数keyに0開始の要素番号, 第２引数valはその番号の要素のDOMオブジェクト */ var area_id = '#area'+ (key % 4);/* 4 は 配置枠個数 */ $(area_id).append( val ); } );/* each function end */ });/* ready function end */ </script> </head> <body><h1>配置　転換サンプル</h1> <div><!-- 配置枠は 0開始の連番 --> <div id="area0" class="tatewaku"></div> <div id="area1" class="tatewaku"></div> <div id="area2" class="tatewaku"></div> <div id="area3" class="tatewaku"></div> </div> <div id="thum_list"><!-- 並べ替え対象全体をくるむ要素に id 名"thum_list"をつける。 内部div要素の記述順に前出のareaへ横に順に格納 --> <div><h2>大見出し用</h2>解説</div> <div><h3>タイトルA</h3><img src="thum01.jpg"></div> <div><h3>タイトルB</h3><img src=""></div> <div><h3>タイトルC</h3><img src=""></div> ... </div> <div class="clearbox">clear しないと、float left しているブロックの右となりに表示される </div> </body></html>
Javascriptが有効であるということを前提にすると、 ＞誰かに押された場合一定期間、もしくは管理者が解除するまで とあるので、ボタンを有効にして良い｜だめのフラグをサーバー側で管理する必要があります。ページをロードする度にこのフラグを参照して、その都度disabledを設定することになります。 フラグは、ユーザ情報のDBテーブルがあって、この中に（フラグを）持つイメージを持ちました。
document.getElementById("head").backgroundColor = "#FFFFFF"; https://www.google.co.jp/search?q=javascript+%E3 … まさか「CSSファイルの中の記述を変えたい」なんて意味じゃないですよね？ JavsScriptでやるようなことじゃないし、そもそもそんなことに何の意味も無い。
下記ページの main.js をそのまま使用していますか？ > http://razorjack.net/quicksand/ ちゃんと処理を見ればわかると思いますが、下記処理がありますので、これを希望の動きをするように修正するか if(d=="size")var g=m.sorted({by:function(e){return parseFloat($(e).find("span").text())}}); else var g=m.sorted({by:function(e){return $(e).find("strong").text().toLowerCase()}}); 下記ページを見ながら自作すれば宜しいかと思います。 http://razorjack.net/quicksand/demos/one-set-clo …
以前、簡単なものを作成したことがあります。 外部データを読み込むのには、ajaxを利用して読み込むのがよいでしょう。 （方法については、検索すればたくさんヒットするはずです。） テキスト文字列として取得できますので、原理的には、改行で1行ずつに分解し、さらにはカンマで同様に処理すればよろしいかと。 split()関数を利用すれば、そのまま配列になります。 データにカンマが含まれていたりする場合は、もう少し工夫が必要になります。 https://developer.mozilla.org/ja/docs/Web/JavaSc … CSVは利用頻度の高い形式なので、似たようなライブラリが作成されています。 それらも参考になることでしょう。 （これも、検索すればたくさんヒットします。以下は一例） http://allabout.co.jp/gm/gc/24176/ http://blog.cles.jp/item/2691 http://www.openspc2.org/reibun/JavaScript_techni … ＞また、改行やカンマ、タブなどでの区切りの回数分処理を繰り返す方法 ご質問の意味がわかりかねます。 配列を処理するのなら普通にfor文やwhile文で繰返しすればよいと思いますが？？ 配列になる前のものという意味なら、前述のsplitとかregExpあるいは上に書いたwhileなどでも処理が可能では？？
https://developer.mozilla.org/ja/docs/Web/JavaSc … apply というのは、apply(thisArg, argsArray) のように渡します。 this.initialize.call(this,arguments[0],arguments[1], ...... , arguments[ arguments.length - 1 ]); これと同じですね。(これはエラーですが。)
＞animate以外でもお待ちしております。 自作すればいいんでないの？ 例えば、こんな感じ（全角空白は半角に） function sample(dest){ 　var duration = 500; 　var obj = document.documentElement || document.body; 　var pos = obj.scrollTop; 　var flag = dest > pos, step = (dest - pos) * 30 / duration; 　var animate = setInterval(function(){ 　　pos += step; 　　if((flag && pos>=dest)||(!flag && dest>=pos)) pos = dest; 　　obj.scrollTop = pos; 　　if(pos === dest) clearInterval(animate); 　}, 30); }
ランダム表示する関数を呼び出している部分を関数にして、setIntervalで繰り返して呼んであげればいいんでないでしょうか。 https://developer.mozilla.org/ja/docs/Web/API/wi …
まさにご質問のような処理をするために、配列や連想配列が考案されているのではないでしょうか？ わざわざ、evalを用いようとするのは方法として好ましいとは思えません。 変数名と文字列を混同なさっているようですが、別物ということを理解するのがまず大切かと思います。 また、No 2様の回答の配列や連想配列の例をご覧になって、効率的な記述法であることを理解してください。 No 2様が書き忘れた追加の例として、例(1-2)を… （ただし、この方法も、決してお勧めできるものではありません。evalと似たりよったりかな？） for(var i=1;i<=5;i++){ window["z"+i] = window["x"+i] + window["y"+i]; }
こんにちは。 $('.classname' , '#target')も内部で.find()を呼び出しています。 なので表面上の違いだけで返ってくる結果はお分かりの通り一緒です。 内部の処理からすると$("#target").find('.classname')のほうが処理回数が少ないですが、そんなに大きな差ではないです。 Firebugなんかを使ってデバッグ実行すれば、どのような処理が行われているか追えますので実際に見てみると勉強になると思います。
Galleria の option に wait を設定しなければならないようです。 wait のドキュメントに記載されております。 http://galleria.io/docs/options/wait/
質問Aをまとめてみました。 <form name="n"> <input type="text" name="nickname" style="ime-mode: disabled"> (1) <input type="button" value="クリック" onclick="formatName()"> (2) </form> <head></head>の中にscriptを定義します。 <script type="text/javascript"> //(3) function formatName(){ dd = new Date(); m = dd.getMonth()+1; if ( m >=1 && m <= 9) { //一桁の月は0をつける month = "0" + m; } document.n.nickname.value = "/nick " + document.n.nickname.value + month + "" + dd.getDate() } </script> 質問B 以下の要領です。 <input type="button" name="reload" onclick="location.reload(true);"> http://phpjavascriptroom.com/?t=js&p=location3
ウェブページのリロードなどで地図が初期化された時が25000回のカウントタイミングですので、コードを修正して、リロードするとそれが一回にカウントされるでしょう。 APIコンソールから、 https://code.google.com/apis/console/ Quotaを開くと、使用量が確認できないでしょうか。
現状どのようにモーダルウインドウの表示位置を指定しているのかがわからないので回答できない状態です。 ---- >+ '<input type="text" id="goodsId" name="goodsId" ondblclick="doActionGoodsList();" />' この行とモーダルウインドウを合わせたいということだと考えると、 IDは1ドキュメントに1つなので、classでしょうか。 .class:eq(index)とするか、 class="goodsId"数字という形式にして、 $.(".goodsId" + val) とするか。 現状は、id="goodsId"が複数存在して、どのオブジェクトを参照してよいかわからず、ブラウザによって不定の状態と考えます。 ---- あるいは、 >いろいろググってみると、一旦表内のすべてのセルを読み込んでクリックした >場所のrowsインデックスとcellsインデックスを取得するやり方ま見つけたんですが、 >私が作ったこのコードにどのように組み込んだらいいのかがわからないのです。 これはセレクタのことを仰ってますでしょうか？
■alert(this.score); var result1 = new Test1('100'); でten変数は、this.score に値を設定し どこからも参照されていないので消えます。 そして、result1.getScore(); でオブジェクト内にあるscoreの値を表示しています。 ■alert(ten); var result2 = new Test2('100'); でten変数は、値をセットすることはないけども、 function (ten) {　関数の内側にもう一つ関数が存在しており (getScoreの部分) そちらから参照されているため、newした処理の後消えることなく、getScoreから参照され続けることになります。 その結果、getScoreを呼んださいにtenの値が表示されることになります。 一般的に、スコープから抜けて本来消えるはずの変数が生き続け、 ある特定の関数からのみアクセス可能という状態をクロージャーと呼んでたりします。 原理的にはクロージャーの動きについて調べてみるとピンとくると思います。 ※注：new するケースでは生成したオブジェクトからしかアクセスできないから クロージャーとかとは別のお話になりますが・・・
> 以下の内容の問題点 select が multiple だったら？ <head> の中に肝心の <titele>xxx</title> が無いよ！ <meta charset="utf-8">みたいな文字コード指定が無いよ！ <header>が閉じてないよ！ <tr>が足りないよ！ ie は、どうか知らないけど、FXは、onchangeイベントをform要素で拾えるよ！ function kazu (){ 　document.getElementById("total").value = 　　Array.prototype.reduce.call ( 　　　document.forms["itemlist"].querySelectorAll ('select[name^="item"] option'), 　　　function add (a, o) { return o.selected ? parseFloat (o.value) + a: a;}, 0); }
htmlの divタグ と h3タグ の位置修正と、それに伴ってacordion.jsの next を prev に修正すれば可能です。 【acordion.js】 $(function(){ $(".acordion").hide(); $("h3").click(function(){ // $(this).next().slideToggle(); $(this).prev().slideToggle(); $(this).toggleClass("open"); }); $(".acordion .close").click(function(){ $(this).parent().slideToggle(); }); }); 【acordion.jsを読み込んだHTML】 <div class="acordion"> コンテンツの中身。この部分をタイトルの上に開きたいです。<br /> 文章量は固定ではないため、可変に対応できると嬉しいです。 <div class="close">close</div> </div> <h3>コンテンツのタイトル</h3>
＞　ラジオボタン２組と入力フィールド一つが常に表示され、変化ありませんでした。 ＩＥ９、Firefox、Chrome、Safari、Operaで動作確認しましたが、ＯＫでした。 気になって、ここのコードをコピペしたら、確かに動きません。 原因は、var disp = の行に、余計な改行が入るためのようです。 いずれにしても、私の提案した内容は、表示、非表示を強引にinnerHTMLで操作すると いう反則技なので、他の方のコードを利用してください。 ＰＳ 最初、onclickではなく、onchangeで作成していたら、ＩＥは不正な動作をしました。 これは、調べると有名なことのようです。今回私もいろいろタメになりました。
https://developer.mozilla.org/ja/docs/Web/JavaSc … これを見ると少し分かるでしょうか。
CSSで指定してはダメなの？
すみません、document 付けるの忘れてました。 window.top.main.onload = function(){ document.getElementById("a").onclick = function(){ window.top.main.document.getElementById("main").href = "b.css"; }; }; onload のところも気を付けて下さい。 手もとのブラウザで試したところ、二重に適用されてしまいました。 これが正しい挙動かどうかも知りませんし、直し方も分かりません。
var data = ["1", null, null, "5"]; var ary = []; function isNotNull (a, i) { return a !== null ? (this.push (i), true): false; } alert ((data.filter (isNotNull, ary), ary)); // function isNotNull2 (a, b, c) { return b === null ? a: a.concat (c); } alert ( ["1", null, null, "5"].reduce (isNotNull2, [])); そもそも、Array.filter は、こういうつかいかたをするものでもはないのだが・・・ ちょっとしらべれればわかることを・・・ そろそろ・・・ Q&Aって、これからしらべるひとのためになる。 しつもんをとじていないと、良質なこたえがかかれていても、みのがすかのうせいがあるよ。 これからのひとが。
以下のURLは、 言語として、ヒアドキュメントを提供していないので工夫してヒアドキュメントを実装している例となります。 http://qiita.com/_shimizu/items/837b529de9f3302e …
式の一部になっているので、 関数宣言（function文）ではなく関数式(function演算子)です。 詳しいことは、あなたが提示しているページの 「Function コンストラクタか関数宣言か関数式か」という段落を読めば良いと思います。
No.2さんの回答で解決しているようなものなのですが…。 とりあえず試しました。 普通にSJISで保存したら、正常に実行でき「ここからレイアウト」という文字列が書かれた「test.txt」というファイルができました。 文字コードをあえてUTF-8で保存して実行したところ、「終了していない文字列型の定数です」のエラーが出ました。 そういうことです。
Ajaxが最初にメジャーになったのは、Googleマップです。 https://maps.google.co.jp/ ユーザー操作によって、画面遷移せずに、見る物を変えられる。 Google検索で、自動的に候補が追加される・・・「剛力彩芽」と入れると、「かわいくない」と出てくるとか・・・もAjaxです。 あとは、ユーザー操作無しに自動的に画面が変わるとかもあります。 http://chocoden.chobi.net/yamanote/yamanote2013b …
余談(function 文)の続き。 --- nanto_vi さんはMozilla Firefox における if (x) { function world () {} } の仕様を FunctionStatement と表現していて、FunctionDeclaration (関数宣言) と FunctionStatement (関数文) を明確に使い分けています。 http://nanto.asablo.jp/blog/2005/12/10/ しかしながら、MDN では上記コードは FunctionExpression (関数式) 扱いです。 https://developer.mozilla.org/en/docs/Web/JavaSc … 結論としては、MDNにおける function 文は FunctionDeclaration (関数宣言) と等価と見て良さそうです。 # この仕様は ECMAScript 6 で取り込まれたんでしたっけ…。(うろ覚えで確信なし)
jsで、右側のフィルタをクリックした際に真ん中のcssを変えてあげる方法もあります。 $(function(){ $("div.selecterBtns > ul.nolist > font > li > a").click(function (){ $('#ttt'+'.swiper-wrapper').css({ "-webkit-transform":"translateY(0)" }); }); })
私的意見として そういうものは、製作者側のエディタ（のマクロとか）でやってほしい。 個々の見る側で、いちいちそのようなスクリプトが走るのは、無駄。 jQuery を読み込んで処理してる間に・・・ごっほん！
あ、ちなみに狭いイントラ内でのみのシステムとか、利用する人の人数が 小規模や環境が決まり切っていて、それ以外の人は利用できない前提 とした時は、そこまでガチガチにしなくてもいいでしょう。 当たり前に利用していて、異常データが処理されないようにだけ 対応する、というレベルで。 何か外部からの侵入によって攻撃対象とされるならば、そもそも そこへたどり着いてしまう部分を強化する、という考えのもとに。 本当はあまり良い対応ではありませんが、時と場合によりますよね。
ANo1です。 No2様がご指摘の部分を失念していました。 値を一番最初に取得する時だけ面倒でしたね。 それを避けてしまうなら、初期値の設定もスクリプトから行うか、あるいは直接設定しておくのが簡単かと思います。
mobileの動作はよくわからないのですが… ＞document.getElementById("kt").style.top = 50; のpositionを指定し直すところで　"50px"　のように指定してもだめでしょうか？
Mobileの動作はわからないのですが… 通常のスクリプトで考えると、クリック時には『 i 』の値が不定（通常は4）なので、意図したように動作しないということではないでしょうか。 ＞google.maps.event.addListener(myMarker,'click',function(event){location.href=data[i].url;}); の部分を google.maps.event.addListener(myMarker, 'click', (function(url){ return function(){ location.href = url; }; })(data[i].url)); などとしてもうまくいきませんか？
　その前後を選択して、右クリックして現れるコンテキストメニューから「選択部分のソースを表示」で、その部分のHTMLソースを確認すること。 　それでも、そこに何もなければ何も無いのですよ。ブラウザは行端まで行くと改行して表示しますが、そこには改行コードはありません。テキストエディタのウィンドウ幅を狭くして改行されても、そこに改行コードはありません。 　<pre>で囲まれていればあります。 　また、複数の空白文字はひとつにまとめられます。これは、この質問箱でも行頭に半角スペースやタブを書いても消えてしまうのと同じです。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから ここで、ソース文書中で語間に空白類が複数連なっている場合、PRE要素を除いて、レンダリング結果の語間スペース調整は全く異なるものになるという点に注意されたい。 特にユーザエージェントは、語間スペースの出力処理に際しては、連続する空白類の入力があった場合は1つにまとめてしまう必要がある。 これは、lang属性やHTTP "Content-Language"ヘッダフィールド([RFC2616]の14.12参照)、ユーザの設定、等による言語情報が存在しない場合であっても、可能かつ必要な動作である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Paragraphs, Lines, and Phrases (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より
alert (document.querySelector ('#hoge').firstChild.nodeValue); alert (document.querySelector ('span.fuga > a').firstChild.nodeValue); alert (document.querySelector ('div.piyo dd').firstChild.nodeValue); もちろん</body>の手前のスクリプトのなかで。
ANo1です。 ＞マークアップの順序を変えたり、positionを色々変更してみましたが ＞うまくいきませんでした。 Sample1,2（index.html、index2.html)のつもりで回答していました。 1,2はマークアップの順序を変えれば、問題なく逆転します。 ご質問はSample3についてのようですね。 この場合は、元がposition:absoluteで位置を決めていますので、CSSファイルのサムネイル部分の『bottom: 10px;』を『top:10px;』などに変えてあげれば上にあがります。
書き方は正しいですが、スマートフォンでは無効化されているので使えません。 なぜなら急にオートフォーカスさせるとなると、スマホの場合、キーボードを出さなくてはいけないため、ユーザーの混乱に招きかねないからです。 フォーカスを持って行ける例を参考URLに乗せておきましたので、ご覧ください。 参考URL：http://alpha.mixi.co.jp/2012/10807/
javascriptの文字列の定義って確か var a = "abc"; ですよね。 であれば var a = "<?php echo 'abc'; ?>"; だと思います。
],{ swfPath: "js", supplied: "oga, mp3", wmode: "window", smoothPlayBar: true, keyEnabled: true, // ↓ここから playlistOptions: { autoPlay: true } // ↑ここまで追加 }); これで出来ます。 下記URLがplaylistのドキュメントです。 http://jplayer.org/latest/demo-02-jPlayerPlaylist/
http://www.detelu.com/fademover/demo2.html このサンプルを見ると、 class="box"のdivを対象にフェードの処理を掛けているようです。 それはさておき、 $(window).fadeMover({'effectType': 2,'inSpeed': 5000}); だといかがでしょう？ あとは、Chromeの「要素を検証」をお使いのようですので、Networkタブを開いて、jquery.fademover.jsのstatusが正しいか（メソッドがないと言っているので）。そのあたりから順々に潰して行きたいと思うところです。
こんにちは。 >ただ、当該コードにて試してみた際に、 >.op-close クラスをクリックした際に、交互に開閉しない（「クリック度に何度も開き直すような動作」になる） >などの状況がありました（当方の確認不足、記述の誤りであれば申し訳ございません）。 そりゃ、もともとどのような動作かわかってないのでお断りしたとおり、想像です。
Android Chromeは28から対応で29で標準で有効らしいです
先の回答にあるように、普通ではできないはず。 いろいろ限定条件はありますが、無理矢理やるならこんなのでしょうか。 msdn.microsoft.com/ja-jp/library/cc428071.aspx
ご質問の意味を正確に理解していない気がしますが input,textをhiddenでつくって、そのvalueに履歴を入れるのではダメですか？ 試してないのでできなかったらすいません。 また、理解が間違えていたら重ねてすいません。
colorboxをあまり良く知りませんが、 ドキュメントを見ると、close()メソッドが用意されているようですので… 　http://www.jacklmoore.com/colorbox/ ＞画像以外の部分をクリックしたときに～～、 ＞画像事体のどこをクリックしても、～～ どこをクリックしてもということになるのでしょうから、documentのクリックイベントで、$.colorbox.close()を実行すればよいのでは？ （非表示の時に、このメソッドを実行してエラーがでないかどうかはテストしていないのでわかりません）
obj = { 　Hoge:{ 　　prototype:{ 　　　age:'25', 　　　hai: function() { 　　　　　alert("年は" + this.age); 　　　} 　　} 　} }
A No1です。 ＞ループを使う関係上ちょっと都合がわるいので～～ callbackで行なうのが一番簡単だと思いますが、どうしてもループで処理したいのなら… アニメーションに要する時間があらかじめわかっているのなら、 その時間経過後に次のアニメーションを行なうように、ループの中でsetTimeout等で処理を設定するといった方法があり得ます。 ただし、この方法だとアニメーションの時間が正確かどうかなどによって、動作にラップやギャップが生じてしまう可能性があり、怪しさがあります。 （私はTweenJSの内容を存じませんので、判断できませんが…） もっとまともな方法を考えるなら、 ＞jQueryではqueueで行なっていたのですが～～ queueと同じような関数を作っておいて、ループ内からはそちらを呼び出すようにすれば良いのではないでしょうか？ （一般化して作成するのは面倒でも、限定した関数なら比較的簡単にできると思います） TweenJSを知らないので、かなり適当ですが… 　var myQueue = function(element, property, func){ 　～～　} みたいにしておいて、ループ内からは 　myQueue(box[i], {loop:false}, function(){tween[i].to(移動処理);} ); のような呼び出し方をするといったもので良いのでは？ 結局はcallbackを利用していますが、myQueueの処理内容は以下のような感じ。 対象要素ごとにスタックを作成しfuncをスタックしておいて、既存のスタックがなければ、callbackでスタックの次の内容を実行するようにセットして最初のアニメーションを実行する。 といったものでもいけると思います。 （↑に書いたままだと、作り方によっては、tween[i]の「i」の値が保存されない可能性がありますが… ）
こんにちは。 ===================== >正または負の値を返すことによって並び替える順序を決めます。 ということは、 0,1,2,3 という数字があれば、 0,1,2,3か 3,2,1,0の２つの並び替えだけできるということですか？ >ランダムにソート >シャッフルするイメージ からは、 2,3,1,0や0,3,1,2などもなる感じがしますが、そうではなく、降順・昇順の２つしか指定できないのでしょうか？ ===================== ２つの並びになるのではなく、比較対象の2値を並び替える種類が2つ(正と負)あるということです。 ある2値(a,b)を対象にreturn -0.5;と負の値が返ってきた場合は、aの値をbより小さい添え字にします。 https://developer.mozilla.org/ja/docs/Web/JavaSc … ここを参考にしてみてください。 aとbのなぞも解けます。 array.sort(compareFunction);
JavaScript の正規表現は、一般に「正規表現リテラル」で記述するのが一般的です。性能とかエスケープ文字のバッティングとかが面倒なので。 new RegExp("正規表現", "g") → /正規表現/g 大括弧'{}' や 縦棒'|' は正規表現にて意味を持ちますので、エスケープ文字が必要です。 {a|b} → /\{a\|b\}/g 間にスペースやタブが入っても置換するには、空白文字クラスが0個以上と指定するのが良いでしょう /\{a\|b\}/g → /\{\s*a\s*\|\s*b\s*\}/g まとめると "XXXX{a|b}YYYY".replace(/\{\s*a\s*\|\s*b\s*\}/g, 'c');
if(seido>5){ map_draw(); } 　　　　　　↓↓ if(seido>5){ setTimeout(map_draw, 100); } とかではダメでしょうか？ (一定時間でタイムアウトするようにしておいた方が良さそうですが…）
javascriptではクラス（のようなもの）はプロトタイプを使用します おそらくjavascriptでオブジェクト指向を学習する人にとっては 最初はなんのことだか訳が分からないと思います プロトタイプは簡単にいうと関数の中でthisという変数を使用する際に 関数のprototypeのメンバに設定した値や関数を使用出来るって言うだけです それ以外に普通の関数のように振る舞います。 これだけでオブジェクト指向っぽい事をクラスを使用しないで実現可能にしています このthisの指しているオブジェクトを把握する事がjavascriptでオブジェクト指向を理解するのが 一番の近道です。 ただクラスとかインスタンスとかの名称がオブジェクト指向で一般化しているので 整理する際には、プロトタイプ=クラス、プロトタイプをnewしたもの=インスタンスとして 普通に会話していても通じる場合が多いと思います。 javascriptの場合のnewは、thisの参照先を新しく作成して使用する意味のnewです さて 質問の同じ意味になるかというと、無名関数であることをのぞけばほぼ同じなのですが 通常は var Hoge = function Hoge () {}; と記述する方が混乱はないと思います またこのときに、var h = new Hoge()とインスタンス（みたいなもの）を作成した際に h.constructor.nameでHogeの名称（クラス名みたいなもの）が確認出来るようになるので(おそらくIEはのぞく) 出来るだけ関数名はつけた方がデバッグが簡単になります
こんにちは。 クロスブラウザまで考えていなかったので私が提示したものはIEで動きませんでした。 一応、IEとFirefoxで動かして、同じ動きになるようにしたソースをフルで提示します。 動作内容はできる限りコメントに書きました。 動作を追いながら、自分で作ったものと比較、どういった処理をしているか見てみてください。 わからないところがあったらまた質問してください。 (突貫で作っておりもっといい作りがあるかもしれませんので参考までにどうぞ） <!DOCTYPE html> <html lang="ja"> <head> <meta charset="utf-8"> <title>サンプル</title> <script> function loadXML() { var url = './xml.xml?'+(new Date).getTime(); var xmlHttp; try { xhttp = new ActiveXObject("Msxml2.XMLHTTP"); } catch(e) { xhttp = new XMLHttpRequest(); } xhttp.open ( "GET", url, false ); xhttp.send ( null ); return xhttp.responseXML; } // メーカーごとのCar情報を保持するオブジェクト var makers = {}; // メーカープルダウン用の変数 var selMaker; // 車種プルダウン用の変数 var selCar; function loadData() { // メーカープルダウンを取得 selMaker = document.getElementById('sel-maker'); // 車種プルダウンを取得 selCar = document.getElementById('sel-car'); // xmlをロード var xmlDocs = loadXML(); // メーカータグの要素を取得 var xmlAttr = xmlDocs.getElementsByTagName( 'メーカー' ); // メーカータグ分のループ処理 for ( var i = 0; i < xmlAttr.length; i ++ ) { // i番目のidを取得する var maker = xmlAttr[i].getAttributeNode('id').value; // メーカープルダウンのoptionタグを動的に生成 selMaker.options[i+1] = new Option ( maker , maker ); // i番目のメーカータグ内の車種タグを取得する var kind = xmlAttr[i].getElementsByTagName('車種'); // 車種情報の配列を宣言 var cars = new Array(); // 車種タグ分のループ処理 for ( var j = 0; j < kind.length; j ++ ) { // 価格の値を取得 var kakaku = kind[j].getElementsByTagName('価格')[0].firstChild.nodeValue; // 燃費の値を取得 var nenpi = kind[j].getElementsByTagName('燃費')[0].firstChild.nodeValue; // Carオブジェクトを生成 var obj = new Car ( kind[j].getAttributeNode('id').value, kakaku, nenpi ); // Carオブジェクトを配列に追加 cars.push ( obj ); } // メーカー配列にname=idと,メーカーに紐付くCarオブジェクトをcarsとして追加 makers[maker] = { name: maker, cars: cars }; } } /** * ページロード後に実行する処理 */ window.onload = function() { // xmlを解析しデータを生成する loadData(); /** * メーカープルダウンを変更した際に実行する処理 */ selMaker.onchange = function() { // 車種プルダウンをクリア selCar.options.length = 0; // 先頭に”車を選択”を追加 selCar.options[0] = new Option ( '車を選択', '' ); // 変更した際に先頭の”メーカーを選択”を選択した際は // 価格、燃費の表示を”-”とし、処理を中止 if ( this.value === '' ) { setData ( '-', '-' ); return; } // メーカーが選択された場合はidが取得できるのでその文字列を利用して // メーカー配列から情報を取得する var maker1 = makers[this.value]; // 取得した情報の中にcarsという配列があるのでその数分のループ処理 for ( var i = 0; i < maker1.cars.length; i ++ ) { // 先頭には”車を選択”があるので次のindexから（i+1）optionを追加する selCar.options[i+1] = new Option ( maker1.cars[i].name, maker1.cars[i].name ); } }; /** * 車種プルダウンを変更した際に実行する処理 */ selCar.onchange = function() { // 先頭にある”車を選択”が選択された場合は // 価格、燃費の表示を”-”とする if ( this.value === '' ) setData ( '-', '-' ); // メーカー配列から情報を取得する var maker = makers[selMaker.value]; // 取得した情報の中にcarsという配列があるのでその数分のループ処理 for ( var i = 0; i < maker.cars.length; i ++ ) { // ループ処理している間に選択された車種と一致した場合に // 価格、燃費の表示を変更する if ( maker.cars[i].name === this.value ) { setData ( maker.cars[i].kakaku, maker.cars[i].nenpi ); } } } } /** * Carオブジェクト * 車種、価格、燃費を持つ */ function Car ( name, kakaku, nenpi ) { this.name = name; this.kakaku = kakaku; this.nenpi = nenpi; } /** * 価格と燃費の表示を更新する */ function setData ( kakaku, nenpi ) { document.getElementById('txt-kakaku').innerHTML = kakaku; document.getElementById('txt-nenpi').innerHTML = nenpi; } </script> </head> <body> <select id="sel-maker"> <option value="">メーカーを選択</option> </select> <select id="sel-car"> <option value="">車を選択</option> </select> <hr /> <dl> <dt>価格</dt> <dd><span id="txt-kakaku">-</span></dd> <dt>燃費</dt> <dd><span id="txt-nenpi">-</span></dd> </dl> </body> </html>
ES5/JS1.8 に限定ですが、以下がお勧めです。 var counter = function(a, b){ return b !== null? a+1: a }; if ([hoge1, hoge2, hoge3, hoge4].reduce(counter, 0) >= 2) { 　// null でない変数が二つ以上の処理 } 昔の環境でも jQuery などを使えば類似の記述ができます。
あなたのLightboxのバージョンが分かりませんが、ｊｓのどこかで<a>タグのクリック時の動作が無効にされているはず。 jsを直接いじるのがいやならば、LightboxではなくFancyboxにするというのはどうでしょうか。手元で確認してみましたが、こちらでは質問者さんの希望通り「キャプションの<a>タグでリンク先へ」ができるようです。 ※もしこれで解決の場合、ちゃんとYahoo!知恵袋のほうも閉じてくださいね。
　メールフォームのCGIは、プログラムとしてはとても簡単で初歩的なもので改造は出来ると思いますが、同時にセキュリティホールの問題をはらみます。 　送信先をHTMLに選択肢で埋め込めば、必ずSPAMの対しようとしてアドレスが拾われますし、SPAMの足がかりに利用される恐れがあります。 ★改造方法 1) HTTP_REFERERから送信元のページ情報をチェック 2) 送信先はHTMLではなく、他社からは直接見えないところにおき、(1)と埋め込み情報から送信先をプログラム側で選択する。 3) imagemagickなどを利用して、ロボットに利用されないようにする。 　(これは、ちゃんとした通常のメールフォームにはついているはず) 　で良いでしょう。 ＞1ページ毎にフォームがあり同じテンプレートが幾つもあります。 　これは最悪です。 　少なくともフォームはひとつにして、各ページから飛んで利用できるようにしないと・・・ 　各ページに最低限のフォームはあっても良いですが、少なくとも追加情報、確認画面や再入力はひとつのCGIですむはずです。
外側の関数スコープの保持を意識して作られた関数をクロージャとJSでは言うと思います 再帰は関係ありません
セレクタの理解が足りてません。 #hoge.foo ではなく #hoge .foo です。（間にスペース）
こんにちは。 まさしくクロスドメインの問題だと思います。 外部のドメインは直接読み込めませんので動作していません。 xmlでの提供が行われていたときはyahooのサービスを併用してJSONPで取得する方法もあったようですが、現在はJSONでの提供のみとのことです。 なので一番簡単なのは自サーバに仲介するphp等を設置するのが良いと思います。 ==== PHP <?php $url = 'http://weather.livedoor.com/forecast/webservice/ … header ( 'Content-Type: application/json; charset=utf-8' ); echo file_get_contents ( $url ); ?> ==== JavaScript(少し修正しました) $(document).ready( function() { var weather = ""; // 天気 var temp = ""; // 最高気温 var weatherURL = 'weather.php'; $.getJSON(weatherURL, function(json){ console.debug ( json ); weather = json.forecasts[0].telop; temp = json.forecasts[0].temperature.max.celsius; alert ( weather + ',' + temp + '度' ); }); });
preloadImg(preloadImgList); ↓ preloadImg.apply(null,preloadImgList); もしくは function preloadImg(){ for(var i = 0; i<arguments.length; i++){ $("<img>").attr("src", arguments[i]); } } ↓ function preloadImg(list){ for(var i = 0; i<list.length; i++){ $("<img>").attr("src", list[i]); } }
同様のご質問が過去にもたくさんあるみたいなので、検索してみると参考になるかと思います。 ご質問文にある目標の内容を元に、よくわからないので、少々適当ですが… 　*　スクリプトで必要/不要なHTMLのidを追加/削除しています。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #form1 div.mo input{ margin:5px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … </head> <body> <div> <input type="button" id="addbtn" value="追加"> <input type="button" id="delete" value="一つ削除" disabled> </div> <form action="#" method="post" id="form1"> <div class="mo"> <input type="text" name="sasa_1" value=""> </div> <p><input type="submit" value="確定"> </form> <script type="text/javascript"> $("#addbtn, #delete").click(function(){ 　var inp = $("input", "#form1").filter(function(){ 　　return /^sasa_\d+$/.test($(this).attr("name")); 　}); 　var n = inp.length; 　var last = $(inp.get(n-1)).parent(); 　if(this.id === "addbtn"){ 　　n++; 　　last.after('<div class="mo"><input type="text" name="sasa_' + n + '" value=""></div>'); 　} else { 　　last.remove(); 　　n--; 　} 　$("#addbtn").attr("disabled", n>14?"deiabled":""); 　$("#delete").attr("disabled", n>1?"":"disabled"); }); </script> </body> </html>
質問の意図がわからないのですが このセレクトボックスで選んだら、どこのなにの値をどう変えたいのでしょうか？
探してはいないので、どこで配布されているのかはわかりませんが、 少なくとも、ご提示のサイトにありますよ。 　http://www.css-lecture.com/template/2009/0407/js … （ページのソースを見れば、わかると思います）
検索してみればたくさん見つかるはずです。 以下は、ごく一例 ・原理的なものの説明 　http://gihyo.jp/dev/serial/01/crossbrowser-javas … ・最近はCSSでも簡単なアニメーションは可能（まだ早いかも） 　http://mj-wave.com/post-465/ ・利用例？ 　http://azisava.sakura.ne.jp/js/animation/ あとはご自分で探してみてください。（たくさんあります）
A No1です。 ＞別のマーカーをクリックすると最初にクリックして出現した吹き出しが閉じて ＞新しい吹き出しが出てくるというような～～ 吹き出しを開く時に、他のものを閉じる処理を入れればよいだけなのですが、あるいは同じ吹き出しの内容を変えて表示するといった処理に変えるかですね。 jquery.gmap3を知らないので検索してみましたが、これのことでしょうか？ 　https://github.com/bumberboom/jquery.gmap3 一通りの説明はあるようですが、各infoWindowがどこに格納されているのかが記して無いので、コードを解析しないとわからない… コードを解析している時間がないので、とりあえず、おおもとのgoogole mapだけを用いて同様のことを行うごく単純化したサンプルを作成してみました。 アレンジする場合は以下をご参考になさってください。 　https://developers.google.com/maps/documentation … （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> div#gMap02 { width: 960px; height: 280px; } </style> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false" … </head> <body> <div id="gMap02"></div> <script type="text/javascript"> //■マーカー用データ var markerData = [ 　{ 　　latitude: 35.9917348, 　　longitude: 140.6405342, 　　title: '鹿島アントラーズ', 　　content: '<div class="infoWindowWrapper"><h4>鹿島アントラーズ</h4><p>県立カシマサッカースタジアム</p></div>' 　}, 　{ 　　latitude: 35.9030894, 　　longitude: 139.7175708, 　　title: '浦和レッズ', 　　content: '<div class="infoWindowWrapper"><h4>浦和レッズ</h4><p>埼玉スタジアム2002</p></div>' 　}, 　{ 　　latitude: 34.725217, 　　longitude: 137.875005, 　　title: 'ジュビロ磐田', 　　content: '<div class="infoWindowWrapper"><h4>ジュビロ磐田</h4><p>ヤマハスタジアム</p></div>' 　} ]; //　マップを表示 var mapCanvas = new google.maps.Map(document.getElementById("gMap02"), { 　zoom: 5, 　center: new google.maps.LatLng( 37.5, 137.5), 　mapTypeId: google.maps.MapTypeId.ROADMAP }); var infoWnd = new google.maps.InfoWindow(); for(var i=0, marker; marker=markerData[i++];){ 　marker.position = new google.maps.LatLng(marker.latitude, marker.longitude); 　createMarker(marker); } //◇マーカー作成処理 function createMarker(marker){ 　var mark = new google.maps.Marker(marker); 　mark.setMap(mapCanvas); 　google.maps.event.addListener(mark, "click", function(){showInfo(marker);}); } //◇インフォウィンドウ表示処理 function showInfo(marker){ 　infoWnd.setOptions(marker); 　infoWnd.open(mapCanvas); } </script> </body> </html>
質問の物言いに妙にひっかかるのですが、要するにこれまでのスクレイピングに対して、端的にいえば、 ・Ajaxなどを使い「jsベース」で描画するWebが増えたので、スクレイピングしにくい ・Ajaxで行っているDOM評価や値抽出は、従来のスクレイピングと同じことでは？ ・サーバサイドスクレイピングの存在意義は？ ということではないでしょうか。 「サーバ負荷を考えて」とかおっしゃいますが、そもそも以前から、クライアントサイドでAjax使いデータを取得するほうが、サーバでスクレイピングせるより何倍も簡単で、ただ処理系が泥臭いjavascriptしかなく、しかも処理内容が丸見えで、他人様のデータを勝手に吸い上げているのがバレバレ、ということだけで、負荷の問題ではありません。 そもそもサーバ負荷などというのは一般論ではなく、スクレイピング手法とサーバエンジンの組み合わせや、データ設計で決まる話なので、「サーバ負荷を考えてクライアントでjavascript」というのは論法がおかしいです。 サーバサイドでXmlHttpモジュールを動かして、Ajaxデータを直にスクレイピングすれば、負荷は非常に軽いし、現在のサーバサイドjavascriptエンジンも動作は最適化されており、きわめて高速に動作します。 「サーバでAjaxスクレイピング」というのは、HTMLページ上のjavascriptを読みだしてうんちゃらするクライアントベースとは、全然次元が違うのですわ。 結論から言えば、サーバサイド一択です。
組み合わせ表　作ったのですね。 この表は、普通の組み合わせ表と考えると、矛盾しているところが多いのですが、 aa1の判断が最も優先順位が高く、aa8が最も低い、という解釈でよいのですね。 この表を、整理してみました。図のように3つに分けて考えると、すっきりします。 (間違っていないか、確認してください。)
No.2,No.3です。 　CSS部分だけを少し手を加えてみました。IE8以降、および他のモダンブラウザは問題なく表示できるはずです。 ・ロールオーバー ・サブメニューは半透明 [追加] ・右側のものは左にサブメニュー ・サブサブメニューがあるものは＞が表示される。 ・リキッドなのでスマホのような小さな画面でも横スクロールがいらない ・HTMLには極力デザイン要素がないようにしてあるので、将来木が変わってもデザインは全く変更できる。 このまま、コピーペーストして使えると思います。 ・・・省略・・・・ ＿<style type="text/css"> <!-- html,body{ margin:0;padding:0; background-color:gray; } h1,h2,p{margin:0 auto;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{ width:100%;min-width:480px;max-width:1100px; margin:0 auto; background-color:white; } div.header div.nav{ width:100%;z-index:100;margin-left:2%; } div.header div.nav:after{content:"";clear:left;display:block;} div.header div.nav ul,div.header div.nav ul{ list-style:none; margin:0;padding:0; line-height:1.8em; } div.header div.nav ul li{ text-align:center; position:relative; } div.header div.nav ul li{ width:16%; float:left; } div.header div.nav ul li ul li{ width:100%; float:none; /*border:ridge 2px gray;*/ background-color:rgba(0,0,0,0.4); /* for oldIE */ filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#64000000', endColorstr='#64000000'); } div.header div.nav ul li ul{ position:absolute; top:1.8em; width:100%; } div.header div.nav ul li ul li ul{ position:absolute;top:0;left:99.5%; } div.header div.nav ul li+li+li+li+li ul li ul, div.header div.nav ul li.backward ul li ul{ top:0;left:-99.5%; } div.header div.nav ul li ul li ul li{ left:-1px;top:-1px; } div.header div.nav ul li+li+li+li+li ul li ul li, div.header div.nav ul li.backward ul li ul li/* for oldIE */{ left:1px; } div.header div.nav ul li ul{ display:none; } div.header div.nav ul li:hover ul{ display:block; } div.header div.nav ul li:hover ul li ul{ display:none; } div.header div.nav ul li:hover ul li:hover ul{ display:block; } div.header div.nav ul li:hover ul li:hover a:before{ content:"＞"; position:absolute; left:-1.5em;top:0; font-weight:bold; color:yellow; } div.header div.nav ul li+li+li+li+li:hover ul li:hover a:before{content:"";} div.header div.nav ul li+li+li+li+li:hover ul li:hover a:after{ content:"＜"; position:absolute; right:-1.5em;top:0; font-weight:bold; color:yellow; } div.nav ul li a{display:block;width:100%;height:100%;text-decoration:none;} div.nav ul li ul li a:link{color:aqua;} div.nav ul li ul li a:visited{color:blue;} div.nav ul li ul li a:hover,div.nav ul li ul li a:focus{color:white;background-color:black;} div.nav ul li ul li a:active{color:red;} a[href="/"]{background-color:rgb(255,160,160);} a[href="/1"]{background-color:rgb(255,255,80);} a[href="/2"]{background-color:rgb(160,255,160);} a[href="/3"]{background-color:rgb(80,255,255);} a[href="/4"]{background-color:rgb(160,160,255);} a[href="/5"]{background-color:rgb(255,80,255);} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<div class="nav"> ＿＿＿<ul> ＿＿＿＿<li><a href="/">Home</a></li> ＿＿＿＿<li><a href="/1">第一章</a> ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li><a href="/1/1">第一章(1)</a></li> ＿＿＿＿＿＿<li><a href="/1/2">・・・【略】・・・</a></li> ＿＿＿＿＿</ul> ＿＿＿＿</li> ＿＿＿＿<li><a href="/2">第二章</a> ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li><a href="/2/1">第二章(1)</a></li> ＿＿＿＿＿＿<li><a href="/2/2">・・・【略】・・・</a> ＿＿＿＿＿＿＿<ul> ＿＿＿＿＿＿＿＿<li><a href="/2/2/1">第二章(2)-1</a></li> ＿＿＿＿＿＿＿</ul> ＿＿＿＿＿＿</li> ＿＿＿＿＿＿<li><a href="/2/3">第二章(3)</a></li> ＿＿＿＿＿</ul> ＿＿＿＿</li> ＿＿＿＿<li><a href="/3">第三章</a> ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li><a href="/3/1">第三章(1)</a></li> ＿＿＿＿＿＿<li><a href="/3/2">第三章(2)</a></li> ＿＿＿＿＿</ul> ＿＿＿＿</li> ＿＿＿＿<li class="backward"><a href="/4">第四章</a><!-- これ以降はbackward --> ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li><a href="/4/1">第四章(1)</a> ＿＿＿＿＿＿＿<ul> ＿＿＿＿＿＿＿＿<li><a href="/4/1/1">第四章(1)-1</a></li> ＿＿＿＿＿＿＿＿<li><a href="/4/1/2">第四章(1)-2</a></li> ＿＿＿＿＿＿＿</ul> ＿＿＿＿＿＿</li> ＿＿＿＿＿＿<li><a href="/4/2">第四章(2)</a></li> ＿＿＿＿＿＿<li><a href="/4/3">第四章(3)</a></li> ＿＿＿＿＿</ul> ＿＿＿＿</li> ＿＿＿＿<li class="backward"><a href="/5">終章</a></li> ＿＿＿</ul> ＿＿</div> ＿</div> 以下、省略
No.1補足の質問について 以下は記法が違うだけで、すべて同じ処理です。 言語的に美しくない状況ですが、時代背景とともに増えていったのでしょうか。 var a = new Object(); // 基本 var a = {}; // 省略化の記法 (JS1.2) var a = Object.create(Object.prototype, {}); // 高等化した記法 (ES5) -- JavaScript でオブジェクト初期化子、とは聞き覚えの無い単語でしたが、 調べてみると仕様書の章題に使ってありましたね。 C++のころからある伝統的な名称のようです。 Standard ECMA-232 5.1 Edition 11.1.5 Object Initializer この中でオブジェクト初期化子は、「オブジェクトリテラルで記載する」云々とあり、 以下の様に文法が定義されています。 ObjectLiteral : 　{ } ← 中身が無くてもオブジェクトリテラル 　{ PropertyNameAndValueList } ← 中身が有ってもオブジェクトリテラル 　{ PropertyNameAndValueList , } ← 文法的にどうかと思うがオブジェクトリテラル というわけで、 一般概念である「オブジェクト初期化子」を実現する為に JavaScriptでは「オブジェクトリテラル」の記法を使用します。
A No4です。 ＞色々探しましたので、なかなか方法が見つかりませんでしたので皆様に聞いている訳で御座います。 てーことは、No4のものとは違う、『Highstocks』ということなのでしょうか？ こちらではここの質問に書いてあること以外の情報はまったくわからないので、それ以外は推測するだけなのですが、これまでのいろいろな推測でどれが当たっていて、どれがはずれているのかもわからない状態です。 それなので、憶測に憶測を重ねるしか方法はないのですが… 別の『Highstocks』であるなら、その配布元には、大概、使い方の説明があると思います。また、それが一番確かな説明とも言えますので、使い方に関することはそちらで確認なさるのがよろしいのではないでしょうか。（多分、A No4で示したような説明が、きっと、その配布元サイトにもあるはずと推測します。）
callbackの中でthis値に何が指定されているのかは調べていませんが、とりあえずの方法として… イベント処理の関数には、発生要素がthis値にセットされて渡されるはずなので、 　最初に、that = $(this); とでもしておいて、 　callback内では、that.addClass(～～ のように参照するのではいかがでしょうか。（未検証）
送信する側でエンコードしないと無理
>いやいや、Server Side Javascript Renderingは、ページスクレイピング分野ではもうトレンドになってます。 すいません知りませんでした。 「webkitなどを組み込めばできるんだろうけどなぁ」とは思ってたんですけど、既にあるんですね。 ということは、phpからそれを実行して出力を受け取ればできそうな気がするけどパフォーマンスは悪そうだなぁ・・・ webサーバーを作ってphpからは、そのwebサーバーに中継するという手もありますね。
通常、操作してしまったオブジェクト・画像、というものは前の情報は消えてしまいますね。 ですから、前のオブジェクト・画像の情報を退避しておけば戻ることは出来ます。 デザインパターンでは「Mementoパターン」ということになってます。Commandパターンも 調べてください。 画像編集ソフトでは、まっさらの状態から、全てコマンド、たとえば 「(0,0)-(300,200)の赤の四角形を描画」とかいうCommandを最初から覚えていたりしてますね。 そうすると、全てのUndo,Redoが可能です。そうするのがいいと思いますが。 （Commandだけならメモリもあまり食わない） ＞onclick=の後に何を入れたらいいのか と言えば、最初の画像から一つ前のコマンドまで全部やり直す、という関数を呼び出す、 ということになります。当然、そんな標準関数などありませんから自分で実装します。
＞ 「編集」モードにならないようにできないでしょうか。 API-OPTIONの説明に、編集モードをオフにする指定が明記されています。 editableType: Boolean Default: true Editing can be disabled for all columns by setting it to false. Code examples: Initialize the pqGrid with editable option specified. $( ".selector" ).pqGrid( {editable:false} ); 「$(function () {」以下の任意の位置に、「$( ".selector" ).pqGrid( {editable:false} );」を 追加すればよいかと思います。 参考URL：http://paramquery.com/api#option-editable
elementsがlengthプロパティを持つかどうかで場合分けを書けばよいでしょう （lengthを持っていれば配列なのでforで回す、もってなければ単なるオブジェクト） <script> function AllChecked1(obj){ var ele = obj.form.elements['aa1[]']; if(ele.length){ for (var i=0; i<ele.length; i++){ ele[i].checked = obj.checked; } }else{ ele.checked = obj.checked; } } </script> <form> <input type="checkbox" onclick="AllChecked1(this);">全選択<br> <input type="checkbox" name="aa1[]" value="1">名前1<br> </form> <form> <input type="checkbox" onclick="AllChecked1(this);">全選択<br> <input type="checkbox" name="aa1[]" value="1">名前1<br> <input type="checkbox" name="aa1[]" value="2">名前2<br> <input type="checkbox" name="aa1[]" value="3">名前3<br> </form>
回答がないようなので… ご提示の方法で幅900にそろえることは可能だと思いますが、どのような全体像を望んでいらしゃるのでしょうか？ 画像の順序は入替えないものとしても、例えば幅が　1000、100、1000、500のような順で画像が並んでいるとしてご提示の方法だと 1000（高さ126） 100　（高さ1260） 　　・・・ という並びになります。 これが予定通りであるなら、ご提示の方法でよいのではないでしょうか。 別の考え方をすれば、 1000+100（高さ114） 　　・・・ あるいは、 1000（高さ126） 100+1000（高さ114） 　　・・・ のような並べ方も可能でしょう。 また、最後に端数が残った時に、それを幅900で拡大するのかなどの取り扱いも考慮しておく必要もあるかと思います。
jQuery Mobileはまったく知りませんので、完全にヤマカンだけの回答ですが… ＞サブミットボタンでページ遷移をした場合はアニメーションするのですが とのことですので、スクリプトからボタンを押せばよいのではないでしょうか？ element.tap()とかclick()とか、あるいはtriggerメソッドなどがあるのではないかと想像しますが、それを用いてサブミットさせれば、ボタンを押したのと同様の動作が期待できると思います。 サブミットボタンを設けていないのでしたら、hiddenで設けておくとか。 サブミットボタンが無くて、HTMLも変えられないというのであれば、初期設定でスクリプトからボタンを作成しておくとか… ＞どうしても JavaScriptの document.forms[0].submit(); 関数でサブミットしなければなりません。 この意味が、submit()以外のメソッドは使ってはいけない、という意味でしたら（↑）は無視してください。
通常版で書き換えてみました。 jQuery('#enqe').submit(function(){ var that = this; jQuery('input[type="radio"]:checked','#enqe').each(function(i){ $("<input>").attr({ 'type':'hidden', 'name':'hoge['+i+']' }).val(jQuery(this).val()).appendTo(that); }); return true; });
> ■質問1 > jQueryの「$(document).ready(function()」と「$(window).load(function()」は何が違うのでしょうか？ readyは「DOM要素の準備が完了した時」に呼び出される「jQueryイベント」であり、loadは生JavaScriptのonloadに相当する「Webブラウザ組み込みJavaScriptイベント」だ。 > ●$(document).ready(function() > ・複数回実行できる これもjQuery独自のイベントなのでできる事だね > ・ページを全て読み込んだ後に実行 $(document).ready(function()の場合、documentのDOM要素が完了する（＝htmlの終了タグが読み込まれる）時に呼び出されるからページを全て読み込んだ後に実行しているように見えるのである。 > ・ページの下部に記述しなくとも良い > ●$(window).load(function() > ・複数回実行できない(最後の1回が実行される) こちらも冒頭の解説の通り、window.onload = function()を何回も行うので最後の1個が有効になるのだね。 > ・ページ読込開始時点で実行(正確には記述位置に来た時点？) いや、そんな事はない。window.onloadと同じタイミングというか登録した関数がwindows.onloadで呼び出される。なので、$("body").readyの後だ。ちなみに$("body").readyは$(document).readyよりも前に呼び出される（理由は「readyはDOMの準備が完了したら呼び出される」という意味を考えて欲しい）。 > ■質問2 > 「jQuery記述」と「JavaScriptだけで記述」とでは、内容やタイミングに違いはありますか？ > ・どちらも同じ？ > 「$(window).load(function()」V.S「window.onload = function(){」 違う。前者はjQueryオブジェクトにラップされるが後者はされない。
個々の要素をチェックしているので、tagNameやnodeNameで直接確認するのが手っ取り早いでしょう。 　　if(tags[i].nodeName === "DIV" ){ alert( 'OK!' ); } とか。
何をやりたいのかよくわかりませんが… var hoge = { aaa : "aaa(aaa)aaa", bbb : "bbb(bbb)bbb", ccc : "ccc(ccc)ccc", ddd : "ddd(ddd)ddd" } for(var key in hoge) if(key > "bbb") hoge[key] = hoge[key].replace(/\(.+\)/, ""); alert( hoge.aaa + "\n" + hoge.bbb + "\n" + hoge.ccc + "\n" + hoge.ddd );
＞ JavaScriptの動作から含めて ということであれば、ECMAScriptの仕様をもとに解説しているWebページなどを探してみては。 http://www.google.co.jp/search?q=context+ECMAScr … http://www.google.co.jp/search?q=ECMAScript+scop …
JavaScriptでラジオボタンの選択状態をhiddenに設定して送信、とすれば実現できます。 タイミングはclick時でもsubmit時でもどちらでもよいと思います。 …「どうすれば良いでしょうか？」というレベルの質問なので、このレベルの回答になります。 もしも「具体的なコードを教えて」といいたいのであれば、今書けているコードを提示した上で、どこがわからないのかを具体的に質問してください。
過去の質問見ました。 　HTMLのDOCTYPEが、<!DOCTYPE html>になっていますが、これはHTML5を示すというより、ブラウザに対して「標準モードで動作させるためのスイッチ」の機能以上の意味はありません。 　そのために、HTML5で導入された新しい要素を認識できないブラウザでは、きちんと認識できない可能性があります。 　まえも、お答えしたような気がするのですが・・。直接ではなくサンプルかもしれません。 　後方互換を考える場合は、現状ではHTML4.01strictを標準モードで起動するようにDOCTYPE宣言をするのがベストです。 　すなわち <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> です。 　これで、IE6以降は[標準モード]で動作するはずです。 ★気になったのですが、HTML5では、DIVはよほどのことがない限り使いません。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから Authors are strongly encouraged to view the div element as an element of last resort, for when no other element is suitable. Use of more appropriate elements instead of the div element leads to better accessibility for readers and easier maintainability for authors. ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［4.5 Grouping content — HTML5( http://www.w3.org/TR/2012/CR-html5-20121217/grou … )］より 　簡単に訳すと『著者は、 div 要素は他に適した要素がないときなど、最後の最後の手段のとして使用することが強く推奨されます。もっと適切な要素を使うことによって、読者にはアクセシビリティ向上に、著者にとってはメンテナンス性の向上につながる。』 　これは、<div class="wrapper"><div class="content">のような使い方はするな!!と言っているのです。 <article>:そのブロックにheader,section,footerを持つと期待される、完結した記事 <section>:文書のアウトライン(簡単に言うと目次を作れる樹構造)を構成する集合 　　　　　基本的に見出しh1～h6を一つだけ持つと期待される などを使います。 　HTML4.01でしたら、 <body> 　<div class="article"> 　　<div class="header"></div> 　　<div class="section"></div> 　　<div class="footer"></div> 　</div> </body> 　とするはず 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［The global structure of an HTML document (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より 　class名の具体的な意味は「新しい要素( http://standards.mitsue.co.jp/resources/w3c/TR/h … )」 　こうしておくと、将来全面的にHTML5に変更する時代が来たとき、簡単に書き換えることが出来ます。 　英文ですが、その例が Preparing for HTML5 with Semantic Class Names — Jon Tan 陳( http://v1.jontangerine.com/log/2008/03/preparing … ) 　にあります。
getElementsByClassName()はnodeListを返すメソッドです。 ご提示のコードで、this.attrは何を示しているおつもりでしょうか？ filterを使えるブラウザを対称にするなら、querySelector()を利用した方が使いやすいかも。 コードの内容がよくわかりませんが、標題が「getElementsByClassName()」なので、abcをクラスに持つ要素からfilterでtag2、tag3を選んでstyle属性を削除するというのであればこんな感じ？ var hoge = function(cls){ [].filter.call(document.getElementsByClassName(cls), function(e){ return /^tag[23]$/.test(e.textContent); }).map(function(e){ e.removeAttribute( 'style' ) }); } hoge("abc"); (fxにて動作を確認。最初に書きましたように、nodeListなので、filterメソッドを直接には使えません。) テキストの「tag2」、「tag3」を見るのではなく、2番目以降の要素を対象とするのでよければ 　function(_, i){ return i>0; } のようなcallbackにすればよろしいかと。 ＞style="color: #cccccc;" を削除するには～～ このコードが実行されるまでに他のスタイル属性が設定されている「かも知れない」ことを考慮するなら、style属性そのものを削除してしまうというご提示の方法は考え物のような気もしますが…
ANo2です。 ＞asyncオプションの使い方をもう少し具体的に教えて頂けないでしょうか。 スマホからなので、簡単に。 回答に付けてあるリンク先をご覧ください。 jQueryのオフィシャルサイトのドキュメンテーションですので、一番確かな説明と言えるでしょう。 （私はあまりよくは知らないので、いい加減な説明しかできません。）
＞alert「このページを離れる」をクリックした時だけ、hogeを呼ぶには alertだと、分岐しようがないので 　confirm("このページを離れますか？") などを利用するのが簡単そう。 ご自分でダイアログを作成するってのもあるかも知れませんが、それなりに面倒かと思います。
どんなエラーが出てますか？ コンソールから確認して書いてもらえたほうが回答がつきやすいと思いますよ
どのような文脈やCSSで使う予定なのかが不明ですが、 自前でマウスの範囲をチェックして処理を変えるようにしても良いのでしょうけれど、それｒなりに面倒なので、tooltip部分をlinkの子要素になるようにしておいて、mouseenter、mouseleaveで制御するのが簡単ではないでしょうか。 下の例ではmouoseenterなどのかわりにhober()を利用しています。 マークアップを少し変えてありますが、 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> span.tooltip{ display:block; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ $('.tooltip').hide(); $('p.link').hover( function(){ $('.tooltip',this).slideDown(); }, function(){ $('.tooltip',this).slideUp(); }); }); </script> </head> <body> <p class="link">hoge <span class="tooltip"> ダミーダミーダミー <a href="#test">testへ</a> </span> </p> <p class="link">fuga <span class="tooltip"> ダミー2ダミー2ダミー2 <a href="#test2">test2へ</a> </span> </p> </body> </html>
修正済とのこと、了解です。 大したコード量でもありませんので、こちらで動かしてみると、 正常に動いているように、、、見えます。ブラウザ幅を非常に狭めてください。 (Firefox22.0:Linux, IE10:Windows8) 参照URLに載せてますので、ソースも見てください。 参考URL：http://d0.gotdns.com/accordion.html
A No1です。 お礼を読みましたが、やりたいことがよくわかりません。 ご質問文の図解とhtmlの構成を参考に作成してみたのですが・・・ ＞position:absoluteで絶対位置指定しておかないと機能しないのですね。 最初にご提示のようなposition:fixでの方法もあるかと思いますが、結局、この指定と違う動作をさせる時に、position:absoluteなどにしているので、単純化しているだけです。 ＞コードの意味を調べたり、～～ 数行のコードなので、大して難しくはないと思いますが、念のため説明しておきますと、 移動したい部分（今回の場合は#side-navと解釈）の縦の位置指定をすれば良いだけですので、移動可能な範囲（縦位置の最小値、最大値）を求めておいて、その中で位置を指定しているだけです。計算上範囲からはみ出した場合は、最大値（又は最小値）にセットしているだけです。 よくわかりませんが、こういうこと？ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> html, body{ margin:0; padding:0; } .header{ height:100px; background-color:#aff; } .content{ height:1000px; background-color: #ddd; } .footer{ clear:both; height:50px; background-color:#ffa; } #side-bar{ width:150px; float:left; background-color: #ffa; } #side-nav{ position:absolute; width:150px; left:0; background-color:#faf; list-style-type:none; margin:0; padding:0; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ var nav = $("#side-nav"); //移動する部分の要素を取得 //位置調整関数 var adjust = function(){ var sTop = $(window).scrollTop(); //全体のスクロール量 var sMin = $("#side-bar").offset().top + $("#side-bar").height(); //縦位置の最小値 var sMax = $(".footer").offset().top - nav.height(); //縦位置の最大値 nav.css("top", Math.min(Math.max(sTop, sMin), sMax)); //要素の縦位置を設定 } //スクロール時、リサイズ時のイベント設定 $(window).scroll(function(){ adjust(); }) .resize(function(){ adjust(); }); //初期設定での位置調整表示 adjust(); }); </script> </head> <body> <div class="header"> header略 </div> <div id="side-bar"> <ul> <li>スクロールされるメニュー1</li> <li>スクロールされるメニュー2</li> <li>スクロールされるメニュー3</li> </ul> </div> <ul id="side-nav"> <li>navi1 略</li> <li>navi2 略</li> <li>navi3 略</li> </ul> <div class="content"> content略 </div> <div class="footer"> footer </div> </body> </html>
ご提示のスクリプトタグは、 　1行目は外部スクリプトの読み込み 　2行目は関数（AbcNer.blogParts）を実行するスクリプト となっています。 ＞これを関数型風（function(){ ///処理 };）に書き換えたいので 即時実行の匿名関数にしたいという意味でしょうか？ 2行目はそのまま可能なので、論外として 1行目のファイルを見てみれば 　if (typeof AmNw == 'undefined') { var AmNw = {}; } 　AmNw.blogParts = function(引数群){　～～　} という構成になっていることがわかると思います。 この最初の行のAmNwは、（多分）いろいろなメソッドを収納するためのグローバルなオブジェクトだと推測されます。 それなので、ここを含めて匿名化すると、他からこのなかのblogPartsメソッドを呼び出そうとしても参照できなくなります。 2行目以降は匿名化しても問題ありませんが、（確認していませんが）グローバルな変数を使用してはいないと思いますので、匿名化する意味がないでしょう。 というわけで… 他から参照する必要が無ければ、全体を匿名化すればよいです。 この場合は、1行目自体が意味をなさなくなるので、直接に関数定義のみ実行すればよいでしょう。 他かから参照したい場合は、ファイルの内容をそのまま展開すればよいだけですが、わざわざ内部コードにする必要性が不明です。 質問の意味がよくわからなかったので、取り違えていたらスルーしてください。
こんにちは。 jQueryを使うまでも無いかもしれませんが、記述が簡単に出来、ブラウザの差異も極力吸収してくれますのでどのブラウザでも動くと思います。 <!DOCTYPE html> <html lang="ja"> <head> <meta charset="UTF-8" /> <title>TEST</title> <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9. … <style type="text/css"> section h2 { color: #333; background: #ccc; border: solid 1px #999; cursor: pointer; } section h2 + p { display: none; padding-left: 20px; } </style> <script> $().ready ( function() { $('section h2').click ( function() { // 他を自動的に閉じるなら以下を有効に //$('section p').hide(); $(this).next().toggle(); }); }); </script> </head> <body> <div class="wrapper"> <header> <h1>文字をクリックすると詳細文章が展開されるJS</h1> </header> <section> <h2>第１章　前転のやり方</h2> <p> 第１章-ここに400字の要旨が展開ここに400字の要旨が展開 </p> <h2>第２章　後転のやり方</h2> <p> 第２章-ここに400字の要旨が展開ここに400字の要旨が展開 </p> <h2>第３章　倒立のやり方</h2> <p> 第３章-ここに400字の要旨が展開ここに400字の要旨が展開 </p> </section> </div> </body> </html>
こんなふうに考えてみてはいかがでしょうか。 初期設定の処理内で、 １）タブ開閉のしくみを設定（参考サイトと同じ） ２）ロケーションのクエリ部を調べて、タブ指定があればその数を取得 　　無ければ（又は無効なら）デフォルト番号（０とか１とか）にする ３）上記の番号のタブをスクリプトからクリックする 　（最初だけフェードインをしないなら、直接、表示/非表示を設定）
気になるのですが、 ＞その押された中身のテキスト 　これは厳密に意味でＡ要素の内容と言う意味ですか？ <li><!-- LI要素の開始タグ --> 　<a href="ABC">光熱費</a><!-- A要素 href属性の値はABC A要素の内容は光熱費 --> </li><!--LI要素の終了タグ --> 　それを取得して何に使うのでしょう。
https://www.google.co.jp/search?q=HTML+%E7%B8%A6 … やろうとしていることはかなり難易度の高いことであることを認識した上で、↑ をどうぞ。 jQuery draggable と共存できるかどうかも不明です。あらゆる方法を試してみる以外に方法はありません。
とりあえず動く様に修正 $(function(){ $(".counter").click(function(){ // var を使うこと。グローバル領域汚染防止のため var siteID = $(this).attr("value"); // JavaScriptに埋め込み変数構文はないので文字列連結 $(".counter[value=" + siteID + "]").css("background-color","#000"); // 動作確認のためにリンク動作を抑制する false を返す return false; }); });
「HTMLを生成」で結合する前に、 $urlによる分岐処理を行って、 そこで生成した変数を結合する部分で使うのはいかがでしょうか・・・？ ---------------------------------------------------- // $urlの値によって変わる変数の設定 var h = '<td><a href="'+$url+'" target="'+$target+'">'+$content+'</a></td>' if( $url == 'xxx' ) { h = '<td><span class="abc">'+$content+'</span></td>'; } //HTMLを生成 $('<tr>'+ '<th>'+$day+'</th>'+ '<td class="label"><span class="'+$label+'">'+$category+'</span></td>'+ h + '</tr>').appendTo('table.tbl tbody'); } ---------------------------------------------------- hという変数を使ってあらかじめ文字列を設定しておき、 hを結合するときに使うという流れで書いてみました。 ご参考になれば幸いです！
同時に画像切り替えはこんな感じでどうでしょう？ 画像の数とパスは適宜変更してください。 img1 = ["a.png","b.png","c.png"]; img2 = ["d.png","e.png","f.png"]; img3 = ["g.png","h.png","i.png"]; imgary = null; selectObj = document.getElementsByTagName('img'); var parents = 'img_'; matchObj= new RegExp(parents); for(i=1; i <= selectObj.length; i++){ if(selectObj[i] != undefined && selectObj[i].id.match(matchObj)){ while(cnt < selectObj.length){ if(cnt == 1){ imgary = img1; }else if(cnt == 2){ imgary = img2; }else if(cnt == 3){ imgary = img3; } document.getElementById(parents+cnt).src=imgary[i-1]; document.getElementById(parents+cnt).style="border:1px solid #cccccc; padding:10px"; cnt++; } if(cnt >= selectObj.length)cnt=1; } }
ANo1です。 ＞クリック後の画像上で元areaの範囲内をさわったりすると ＞画像が元areaのロールオーバー時のものが表示されてしまうんです ホットスポットも含めて違う画像に変わるのでしたら、クリッカブルマップを2セット用意しておいて、それを入替えたほうがわかり易いでしょう。 現状のように同じ画像要素を用いて、参照するマップを入替えてもよいですが、上記のほうがわかりやすいかと。
ここに色んな資料があります https://developer.mozilla.org/ja/docs/Web/JavaSc … 【JavaScript「再」入門】 https://developer.mozilla.org/ja/docs/Web/JavaSc … また「MDN クロージャ」の様に検索すると情報が出てきます
make_messageという関数の中で、 ' "', this.title, '" ' という部分が何カ所かあるので、それらを ' / ', this.title, ' ' に変えれば良いでしょう。
回答No.1のt_ohta様のおっしゃるとおり、 ＞書き換えてしまったものは取得できません。 ので、 ＞JavaScriptの変数に残しておくか、書き換える前にJavaScriptで別の属性を作って書き残しておきましょう。 の通り、別途属性を作ってパスを保持しておくのが良いかと思います。 _rakuda_ のサンプルを少し修正させてもらいまして、 下記のような形はいかがでしょうか・・・？ function wid(){ var image=document.getElementsByTagName('img'); if( window.innerWidth>=320 ){ for(var i=0;i<image.length;i++){ // data-prev-imgがない場合、srcの値を data-prev-img に挿入する if (!image.item(i).getAttribute("data-prev-img")) { image.item(i).setAttribute('data-prev-img', image.item(i).getAttribute("src")); } image.item(i).src=image.item(i).getAttribute("data-mimage"); } } else { // ここに元の画像に戻すためのスクリプトを書きたい // data-prev-imgの値をsrcに挿入する image.item(i).src=image.item(i).getAttribute("data-prev-img"); } } 上記の形だと、関数実行時にしか data-prev-img が作られませんので、 data-prev-imgが無い状態で else のほうに入ってきてしまうとエラーが出てしまうので、 onload時などページの読み込みが終わったタイミングで、 data-prev-img の設定を先にしてしまうのが処理の流れ的には良いかもしれないですね。 ご参考になれば幸いです。
POSTはサーバー側で一度受けてからの処理になるので サーバーサイドのプログラムがないとかなり難しいと思います GETであればlocation.searchで受け取った値を分解してつかえばいけます （若干コーデックがめんどうかも）
divが１つなら var dom = document.querySelector('div') もしくは var dom = document.getElementsByTagName('div')[0]
冗長すぎていまいち理解できないところもあるので こんな感じでどうでしょうか？ <script> function func(f){ var txt={"c1":"チェック1","c2":"チェック2","c3":"チェック3"}; var moji=""; for(var i in txt){ var n=f.elements[i]; moji+=txt[i]+":"; if(!n.length){ moji+=((n.checked)?n.value:"未選択")+"\n"; }else{ var temp=""; for(var j=0;j<n.length;j++){ if(n[j].checked){ if(temp!="") temp+="+"; temp+=n[j].value; } } moji+=(temp!=""?temp:"未選択")+"\n"; } } alert(moji); } </script> <form> <p> ななし：<input type="checkbox" value="1"> １：<input type="checkbox" name="c1" value="1"> <input type="checkbox" name="c1" value="2"> <input type="checkbox" name="c1" value="3"> ２：<input type="checkbox" name="c2" value="1"> ３：<input type="checkbox" name="c3" value="1"> <input type="checkbox" name="c3" value="2"> <input type="button" value="check" onclick="func(this.form)"> </p> </form>
3月末で終了になっているVersion1が使われていることが原因です。 対応は大変そうです。。。 https://github.com/iatek/jquery-socialist/issues …
画面Aのフォームの内容を差し支えない範囲で教えてください。 含めていただきたいのは 　・<form>と指定している属性（ファイル名はマスクして構いません） 　・フォームの送信に使用しているロジック（submit, buttonおよびjavascript) ＃常にnullと内容ありの2つがリクエストされている、ということはありませんか？
＞どうやってnameの中に書かれているものを読み取らせるのかすらわかっていないんです。。。 　それは、フォームを別々に分けたって同じ事です。 このあたりになるとPHPよりPerlを使ったCGIのほうが資料も多いでしょう。 　フォームのデータは、[name]=[value]のペアで送られてきます、通常はハッシュ(連想配列)に入れますが、そうすると同名のものがあれば上書きされてしまいます。 　そのため、ハッシュのハッシュなど二次元三次元のデータを作らなければなりません。 　このあたりは、Perlのマニュアル(らくだ本)をお読みください。 　⇒O'Reilly Japan - プログラミングPerl 第3版 VOLUME 1( http://www.oreilly.co.jp/books/4873110963/ ) 　⇒O'Reilly Japan - プログラミングPerl 第3版 VOLUME 2( http://www.oreilly.co.jp/books/4873110971/ ) 　⇒O'Reilly Japan - Perl クイックリファレンス( http://www.oreilly.co.jp/books/4900900729/ )
head内に読み込ませるとページの読み込みが完了する前に、switcher(); が 実行されてしまうため、id="info"が見つからないので処理されません。 ページの読み込み完了時に何らかの処理を行いたい場合、<body>タグの中で onLoadを使って記述します。 したがって、<body onLoad="switcher()">のように指定する必要があります。 なおこの場合は、sample.js中のswitcher();は不要です。 参考URL：http://www.ajaxtower.jp/js/event/index1.html
しょうがないにゃあ・・ ここに大体載ってるからブックマークおすすめ。 https://developer.mozilla.org/ja/docs/Web/API/Node
それ以前に、何のためにidをa要素に追加しないとならないのですか？？
> リアルタイムに表示させなくしたいのですが、できますか...? setIntervalで更新しているだけなので、 setIntervalを使わないように直せば良いです。
なんとなく開いた子windowはつかみようがないですね ブラウザを限定すればそれにあったやり方はあるかもしれませんが きちんと開くときにオブジェクトを指定するやり方が賢明です
外したいノードが分かってるならparentNodeでいいんじゃないかな。 あと属性と要素、idとclassは別もんだよ。
https://www.google.co.jp/#q=jquery+%E9%81%B8%E6% … https://www.google.co.jp/#q=javascript+%E9%81%B8 … まずは自分で検索しましょうね。
＞doucment.box.bbb.value="OK"; document.forms[box].elements["bbb"].value="OK"; 的な感じでどうでしょう。 （なぜboxというオブジェクトを利用しようとおもったか疑問ですが） nameでオブジェクトを指定するよりidを振った方がいいと思います
JavaScriptじゃなく、CSSを使うほうが楽なのでは？？ [例] http://www.ichiya.com/WebService/Howto/sample/HT … で、表示⇒スタイルシートで[標準(縦並び)]や「画像下」のスタイルシートがあてはまるのではないかと・・
ウェブ開発なら、firefoxをお使いだと思いますが、 　⇒Firefox アドオン - 拡張機能 - 開発者向けツール | Mozilla Japan の公式アドオン紹介サイト( https://addons.mozilla.jp/firefox/extensions/dev … ) のなかの、 　⇒Firebug | Firefox アドオン | Mozilla Japan の公式アドオン紹介サイト( https://addons.mozilla.jp/firefox/details/1843 ) で、最終的なHTMLはその都度表示されるはずです。
質問文を読んでも何を質問したいのかよくわからなかったので、タイトルから勝手に想像して、 　『質問群がquestionsの配列にある時に、ランダムに重複をせずに質問をしたい』 ということだと勝手に解釈しました。 方法はいろいろあると思いますが… 1）quesutionsの配列の順序を最初にシャッフルしておく 　後は、順番に出題するだけ 2）questionsのデータに出題済みかどうかのフラグを追加して、出題したらマークする 　次の問題を選ぶ際にマークの付いてない質問から選ぶ みたいなのが手始めでしょうか。 多分、1）が簡単です。 それとも、 　『質問の順番はそのままでよくて、答えの選択肢の順番をランダムに入替えたい』 ってことでしょうか？ こちらも上記と同様に、回答の配列をシャッフルしてしまえばよろしいかと思います シャッフルの方法は、検索してみればいろいろ見つけられると思います。 例えば http://dobon.net/vb/dotnet/programing/arrayshuff … http://www.red.oit-net.jp/tatsuya/java/shuffle.htm http://www.openspc2.org/reibun/javascript/sort/0 … 質問の解釈が違っていたら、無視してください。
＞個人的にフッターを固定したり、sectionの高さは%じゃなくpxで指定しようかなと思っています。 　最近は様々なディスプレイで利用されるので、可能な限り%指定が良いですよ。サンプルを実際に試されたら分かるようにスマホサイズでも利用できるはずです。 　ただ、%指定は 「直近のstatic以外の親コンテナブロックのサイズを参照する。」 「min-width,max-widthなどを指定すること」 「DOCTYPEスイッチを正しく指定する。」 　　<doctype html>で大多数のブラウザは標準モードです。 などを習得すること。 　
ご要望を満足するかどうかわかりませんが、「IME入力中の判定」の解説があります。 ご参考になりませんか？。 http://hondou.homedns.org/pukiwiki/pukiwiki.php? …
ANo5です。　連投失礼。 ＞実行時エラーなどは発生していないことは確認済みです。 実行時にエラーが出なければ、正しく処理されているということで、問題ないはずではないですか？ 単純に、関数が渡されていないとか、あるいは、UIdialogの引数指定が違っているとか…（←これに関しては、知りませんので不明です。）
＞どちらも新しいウィンドウで開いてしまいます…。 window.openの'newwin'は単にウィンドウ名のようで、この指定の有無にかかわらず 別ウィンドウで開きます。 同じウィンドウで開き場合は、location.hrefを使う必要があるようです。 （構文のチェックだけで、ロジックを十分に確認していなかったので、 すぐに気が付きませんでした。ごめんなさい） 参考URL：http://www.shurey.com/js/labo/nopref.html
http://d.hatena.ne.jp/monjudoh/20080826/1219715376 だと質問者の書き方でもよいことになるけど？ $(document).ready(function() { }); $().ready(function() { }); $(function() { }); って説明にも書いてあるよ？ 他に原因があると思うよ。 まずはクロームをローカルで動かしていないか？ header.htmlを読み込むとid="header"が2つあることになり、IDは一意である必要があるという原則からはずれる。 Firebugとか使って読み込めていないのか、読み込めているけど何かが原因で開けないのか見たほうが早いよ。
A No1です。 ＞～を消した時に、一応フィード読み取りプログラムが動作したので、この一文がミスってる可能性が高いです。 文法上はおかしくないと思います。 スクリプトの一部のみをご提示のようですが、不具合を再現できるミニマムなセットを提示いただければもう少しわかるかもしれません。 単純に、他のスクリプト等をなくした状態でも、ご提示のコードは動作しますか？ 根拠のない推測ですが、A No1にも書きましたように、DOM構築前にスクリプトが実行されていてエラーになっているということはないのでしょうか。 window.onloadの関数として実行するなどで、試してみてみてください。
なんだかとてもわかりづらいUIのような気もしますが… ご質問のようになさりたければ、 　・li要素をクリックした場合に、クリックの対象がa要素でなければ、その子メニューをトグルで開閉 という感じにすればよいのではないでしょうか。 ただし、a要素をwidth100％にしておきながら、その中をクリックしてもブラウザ側の解釈に頼って処理が分かれているというのは、コードと関係ないところで処理が分岐してしまっていて気に食わないので、明示的にli要素とその子要素のa要素を書き分けるようにしています。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ $('ul>li').click(function(e){ if(e.target.nodeName==="A") return; $(this).children("ul").slideToggle(); return false; }).children("ul").hide(); }); </script> </head> <body> <ul> <li><span class='tree_a'><a href='http://www.google.co.jp/'>親メニュー1</a></span> <ul> <li><span class='tree_a'><a href='http://www.google.co.jp/'>子メニュー1</a></span> <ul> <li><a href='http://www.google.co.jp/'>孫メニュー1</a></li> </ul> </li> </ul> </li> <li><span class='tree_a'><a href='http://www.google.co.jp/'>親メニュー2</a></span> <ul> <li><span class='tree_a'><a href='http://www.google.co.jp/'>子メニュー2</a></span> <ul> <li><a href='http://www.google.co.jp/'>孫メニュー2</a></li> </ul> </li> </ul> </li> </ul> </body> </html> ＞このソースはjQueryを1.7.2以上にすると動作しなくなってしまいます 当方の環境では、1.7.2にしてみても、旧いIE6でも動作しました。 jQueryのバージョンによってはサポートブラウザの対象が変わったりもしていますが、1.7.1と1.7.2ではあまり違いがなさそうに思います。 リリースノートがこちらにありますので、調べてみてください。 http://blog.jquery.com/2012/03/21/jquery-1-7-2-r …
変数に対する処理が同じなので、共通処理を関数（Function）定義してやれば、短くなりますよ。 参考URL：http://www.red.oit-net.jp/tatsuya/java/function. …
こんにちは。 >'width=500,height=300' >という部分はべつになくてもいいのでしょうか？ http://www.tagindex.com/javascript/window/open1. … このあたりが参考になると思います。 省略可能なオプションですので指定したい時は書きます。 設定できるオプション http://www.tagindex.com/javascript/window/open_o … ようはポップアップウィンドウのようなウィンドウを開く際に良く使います。
> var adrress = document.getElementById("ID名").selectedIndex; > console.log(address); 1行目では「adrress」、2行目では「address」になっていますが、 タイプミスですか？ これだとundefinedと表示されてもおかしくありませんが……。 var address = document.getElementById("ID").value と書くとselectのvalueの値を取得することができます。
まずはhiddenをtextに変更して、「ブラウザでアクセス後のhtml」のソースで 動作しているか確認 あとはbase02()が何をしているかにもよる。base02()の記述とれば動くかチェック ちなみにidがh_pipeのエレメントは一つしかないのは間違いない？
だいぶ前にテストしてみた記憶なので、少々あやふやですが… display:noneの要素に対してmapのセッティングをしてロードするとうまく表示できないみたいです。 画面上で見せたくない場合は、 　1）visibility:hiddenを利用して非表示にする 　2）ネガティブマージンなどを利用して要素を一時的に画面外に置く 　3）z-index指定他で他の要素の下において見えない状態にする などの方法で見えない状態になっている場合は、mapが表示できたように記憶しています。 （やや曖昧な記憶なので、ご自身で再度ご確認ください） どのような文書構造とレイアウトなのかはわかりませんが、状況に応じてdisplay:none以外の方法を使用すれば安定して表示可能にできるものと思います。 一方で、ライブラリ（jQueryか？）をご利用なさっているようですが、fadeOut()などの結果display:noneに設定されてしまう可能性がありますのでご注意を。（←こちらも未確認ですが…）
＞エクセルのSUMのように商品１から商品1000までを計算する関数を教えていただきたい 残念ながら、SUMのような関数は用意されていないので、自分で作ることになります。 合計する値の要素に規則性があるでしょうから、それを利用してループで処理をするのが良いのではないでしょうか。 　http://www.atmarkit.co.jp/ait/articles/1007/28/n … 　http://www.site-cooler.com/kwl/jslibrary/7.htm 同じループ処理にするにしても、いくつか考え方があると思います。 例えば、 1）form1内の要素を順に見ていって、名前がgoodsで始まるセレクト要素の値を集計する。 2）1～1000までの変数iについて、form1内の名前がgoods + iの要素の値を集計する。 3）form1内のselect要素で、defaultのoption以外が選ばれているものだけを集計する。 などなど… ご提示の情報だけからではどのような考え方が最適なのかはわかりかねますが、ご質問分でご提示のコードは2）の考え方に近いと思います。 ただし、2）の場合は商品の数が変わる度にコードを修正しなければならないですし、番号が飛んでいたらエラーになるなどが予想されますので、1）や3）の考え方を取り入れて商品の数や番号が変わっても動作するような考え方で算出するようにしておくほうがよいのではないかと想像します。 それで、できたものを 　function SUM(formName){ ～～ } のようにしておけば、指定form内の集計をしてくれる、SUM関数ができたことになります。
JSPを眺めるんじゃなくて 生成されたHTMLを見ないと なかなかわからないものよ？ 実際のとこ画面内に「bunsyoMei0」が無いから 起きているエラーだと思うんだけど 全文が書いてあるわけじゃないから 無いんじゃないの？としか言えないわ
A No1です。 こちらの環境では、ご提示のHTMLではちゃんと動きませんが、それは置いておくとして… 全部のセッティング終了後に 　var hash = location.hash; 　if(hash) $("ul.btn_tab a[href=" + hash + "]").click(); で、いけると思います。 URIのハッシュ部の指定tab名のタブをクリックさせています。 詳しくはA No1で挙げた参考リンクの内容を見てください。
ご提示のサイト（yuki930.v-colors.com）では、1枚の（div要素の）背景画像をゆっくりと自動的にアニメーションしているだけだと思います。 動かしている背景画像はこちらのようです。 　http://yuki930.v-colors.com/wp-content/themes/po … 方法は背景移動の解説サイトと同じようですが、移動対象のレイヤーが1枚だし、固定のアニメーションなので、もっと単純だとも言えます。 ＞まず、背景画像を透明にするやり方が一点と ご提示のサイトでは、例えば雲の背景にはpng画像を用いています。 　http://yuki930.v-colors.com/wp-content/themes/po … 透過png（または透過gif）などで実現することができるでしょう。 　http://hooktail.org/computer/index.php?%C6%A9%B2 … 　http://www.kuronowish.com/~django/photo/alpha/pn … ＞マウスを動かすと背景が立体的に弧を描くようにするやり方 ご提示のサイトではそのような動作はしていないと思います。(単純に垂直移動のみではないでしょうか？） マウスの移動に合わせて、アニメーションの変化量（移動量）などを変えるような制御をしてあげれば弧でも円でも可能になります。 方法的には、特に背景に限らず「マウスについてくるアイコン」などと似たようなことです。 参考サイトのものとは違うようですが、別のパララックスの紹介サイトの例をみてみると、色々な効果が紹介されているのでわかりやすいかも・・・ 　http://stephband.info/jparallax/index.html
動作しない原因は、Ano.1さんの回答どおりですので、動作させる方法を補足させていただきます。 Chrome起動時に「–allow-file-access-from-files」オプションを指定すればローカル環境でも 実行可能です。 参考URL：http://www.finefinefine.jp/web/jquery/kiji861/
考え方はこの（↓）あたりと同様かと。 http://www.openspc2.org/reibun/javascript/frame/ … http://www5e.biglobe.ne.jp/~access_r/hp/javascri …
こんにちは。 ＞縦長のページの時だけ、「上下キー」を押すと、ページスクロールしてしまい、 ＞思ったような動作ができません 通常のブラウザの仕様ですので、それを変えない方がユーザにとってはわかり易い操作になりませんか？ ＞JavaScriptのところにマウスをおくと、「上下キー」はそのJavaScriptに対して ＞有効になるようにするにはどうすれば良いでしょうか？ 「JavaScriptのところにマウスをおくと」が、どのような操作を意味しているのか不明ですが、ブラウザのあるエリアにマウスがある時にキーによるスクロールを無効にすることは不可能ではありません。 そのような条件が揃った時に、スクリプトから　event.returnValue = false（IE）、event.preventDefault()（Fx他）を実行することでキーイベントをキャンセルすることが可能です。 ＞「上下キー」は常にそのJavaScriptに対して有効になるように ＞するにはどうすれば良いでしょうか？ 上下キーがスクリプトを無効にしてはいないはずです。スクリプトを実行した上で、本来の処理もされているだけではないでしょうか？ スクリプトの内容が、スクロールを制御するような内容の場合は、機能の内容が矛盾するために処理されていないように見えることはあるかも知れません。 そもそも、ローカルルールで設定するキーの機能を、わざわざデフォルトの機能に被せて設定することに疑問を感じます。 テンキーの8、2など他のキーに割り当てるとか、ブラウザ上に操作用の方向キーを表示してそれをマウスで操作するとかの発想転換はありえないのでしょうか。（操作の目的が不明なので、なんともわかりかねますが）
ひょっとして、メールアドレスが example@example.com だったとして 　do JavaScript "document.getElementsByName('username')[0].value = example@example.com" in document 1 と書いていませんか? だとしたら、 　do JavaScript "document.getElementsByName('username')[0].value = 'example@example.com'" in document 1 と書いてみてください。 もし、すでにメールアドレスを''でくくって書いているのであればその旨補足願います。
>ページロードと同時にupdateすれば良いのですね、 >面白いです、いろいろチャレンジしてみます！！ ページロードと同時に行うのはselectです。 selectした件数を表示し、「好き」のクリックでupdateします。 >最後に1点だけ、質問時に記載忘れがありまして、 >ご存知でしたらお教えいただきたいのですが、 >二重クリックを禁止することは不可能でしょうか?? >（何度も申し訳ございません。無視していただいても構いません。） 1人1項目に対して1クリックのみということでしょうか？ 技術的には可能ですが、ユーザ管理が出来てないとほぼ無理です。 ログイン認証等行っていれば、カウントデータテーブルのレコードにそのユーザの情報があったらカウントしない（または「好き」のリンクを外す等の)制御ができますが、ログインしていないのであれば”誰が”クリックしたかわかりません。 クッキーを利用してという方法もありますが、クッキーを削除されちゃえばまたクリックできます。 ではIPアドレスでやろうと思ってもIPアドレスは変わるものと考えますので完全な制御は無理です。
$( "#resizable" ).resizable({ stop: function(event, ui) { var that = $(this).data('ui-resizable'); // jQuery UI Resizable 1.10.3 that.axis; // axisプロパティにアクセス } });
アメブロからのzRSSFeedで取得される内容がどのような構成になっているのかわかりませんが、以下あたりが参考になるのではないでしょうか？ http://www.zazar.net/developers/jquery/zrssfeed/ … （tickerを利用しているみたいですが、これのないものでよろしいのかと…） http://www.zazar.net/developers/jquery/zrssfeed/ （↑ feedの説明サイト） 一方で、結局のところzRssFeedはGoogle Feed API を使っているらしいので、（←未確認です） http://blog.doli.jp/blog/2012/post460/ それなら、googleのAPIで直接扱うほうがハンドリングしやすいのかも… http://hoshiya.biz/blog/2009/06/google-ajax-feed … （PR:を非表示にするかわりに、画像のみ（なのかな？）を表示するとか…）
まず前提としてidは同一ページ内で一意だよ。 だから例に示すケースはあっちゃだめ。 やるとしたらclass="sec1"にして document.getElementByClassName('sec1'); で取得するべき。 これなら配列で取れる。
forループで複数サイトのRSSフィードを読み込んでいますが、feed.loadで実際に 読み込まれるのは、非同期に動作します。したがってforループが完了した時点で var title = site[i]['title']では配列の最後のタイトルが格納されています。 この状態でfeed.loadが順次、非同期で完了してくるのでタイトルがすべて同じに なるのだと思われます。 したがってひとつのサイトの場合と同じように、var title = rss.feed.titleで非同期 完了後にタイトルも取得する必要があります。
はっきり申し上げて、そのタスクは貴方には「無理」な内容だと思います。 そもそも、「CSVの動的な更新」とは、Webアプリでいう「更新系」の処理であり、一般的な「参照系」の何倍も難しいのが常識です。 保存されているCSVに瑕疵（データ間違いや欠損）があり、それを修正して永続化しなければいけないとするならば、phpなどを使ったサーバサイド開発が必至です。 たとえjQueryを使っていても、サーバ側への修正CSV保存にはサーバ側のプログラムが必要です。 「表示するついでに修正して保存する」という考えは捨てたほうが良いのでは。 もし仕事であれば、さっさと外部のプロに頼みましょう。 最も簡単な方法は、 ・サーバサイド言語で、CSVをパース（解析）し、<input type="text" value="xxx"/>に埋めて返すコードを用意する。 ・サーバサイド言語で、<input type="text" value="xxx"/>から送信される値を受信し、CSVに保存するコードを用意する。 ・javascriptで、テキストボックスからグラフを描画する部分を書く。 Ajax処理を行う場合は、データ取得表示と保存実行のUI部分をjavascriptで別に作成することになり、さらに複雑になります。 csv2tableはハンディで人気のあるプラグインですが、一歩カスタマイズ（表示をテキストボックスに収めるというのはカスタマイズの範疇ではないですが）しようとすると、全く使えません。
＞こういう手法自体が一般的に、ご法度なのでしょうか？ 　どの部分か分かりませんが・・ 　例えば新聞社の膨大な記事や、数ページに分かれた記事はjavascriptやスタイルシートを無効にしても利用できますね。 　その500ページがどういう内容なのかがわかりませんので方策は示せませんが、すくなくともjavascriptではまずいでしょう。それをするくらいなら、500ページ書き換えたほうが良いです。titleは検索結果に現れますから、それもページの内容を的確に示すものであるべきです。
不可能です。 検索結果はあくまで別HTMLですし、利用ユーザのブラウザの機能として、あなたのサイトとは無関係に処理されるのですから、そのHTMLのリンクにtarget属性を加えることは出来ません。 方法は、検索自体にtarget属性を与えて、その結果を新規ウィンドウで表示させる事です。 <form action="[google]" target="_balnk"></form> です。 もしくは、サーバー側でsoketで取得したデータを書き換えることくらいでしょう。
演算子％は割り算の余りを求める計算です。 わった商ではありません。
No.4です。 ＞子サイトでリンクをクリックすると親サイトから離れてしまします 　全く違う意味ですね。日本人の方ですか？？ 　・・・離れていまいます。は「(離れたくないのに)離れてしまいます」という意味ですよ。 　離れたいなら、target指定をつければよいです。 　他サイトなのですからフレーム内に表示するのはまずいので・・ 　⇒6.16 目標フレーム名( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )
http://173.193.205.68/audio1104/RainyMood.mp3 という34分くらいのmp3ファイルが流れていますね
一例です。 (function(){ var sc = document.getElementsByTagName("script"); var ver = sc[sc.length-1].src.match(/\?ver=(\d+)$/); if(ver) ver = ver[1]; alert(ver); })();
私はＩＥしか使いませんが http://www.nonukes-maria.net/construction/javasc … クロームは設定で何かが起きるかもしれませんね。 ローカルなら自分の設定で十分ですし 文字の一部抜き出しについてはJavascriptの「正規表現」を参考にしてみてください。
配布元のデモページでも同様の結果になるのでしょうか？ それでしたら、ライブラリ自体が対応していない（あるいはバグ）だと思われますので、製作者にご相談なさるのが一番確実です。 デモページは動作するけれど、自作のページは動作しないというのであれば、設置上でどこかおかしなことがある可能性が高いです。 「製作中のページ」を（もう古いですが）IE6で見てみるとエラー頻出でほとんど動作しません。 ＩＥ6は古すぎるので、これに対応する必要はないとも言えますが、配布元のデモページは問題なく動作します。 （ご提示のリンクのページはうまく表示できませんが、デモページはＯＫです） 形の上では、ほとんどデモページと同様の設置のようですので、まず、デモページそのままのコピーを作成して動作することを確認してみてください。 それを元に、「画像だけ差し替える」、「サイズを調整する」などいくつかの段階に分けて、実際のサイトで使用する内容へ修正していってください。 どこかで動作がおかしくなったら、その直前に行なった修正がおかしいということになります。 いきなり目的のものを作成するのに比べて少々手間がかかる方法ですが、質問者様にとって、結果的には一番の近道ではないかと思います。
セキュリティ的にサーバーサイドのプログラムをかませないときびしいのでは？ あまりお勧めできませんがフレーム系の処理が限界かもしれません
lightboxなどはよく知らないのと、お使いのCMSにどのような制約があるのかもわかりませんが、可能性のありそうな方法として… （スクリプトが使える環境であると仮定しています。） 1）lightboxをカスタマイズして、ご使用の環境でも使えるようにする。 2）「rel="lightbox[roadtrip]」を設定できさえすればよいのであれば、lightboxのスクリプト実行前にスクリプトで属性をセットしておく。 3）lightbox風のライブラリはたくさんあるので、似たようなものでもよいのであれば、セレクタ等で指定できる（rel="lightbox[roadtrip]の設定が不要な）ライブラリを利用する。 などが考えられると思います。 他にも方法はあると思いますが、ご利用の環境・条件に応じて、方法を選定なさればよろしいかと思います。 1）に関しては、スクリプトを解析して内容を修正する必要がありますので、ライセンスがどのようになっているか、及び、それなりのスクリプトの知識が必要になるでしょう。 2）については、簡単なスクリプトの知識があれば実装可能と思います。element.setAttribute()メソッドなどを利用することで比較的簡単に設定が可能でしょう。 3）に関してはたくさんあるので、何がお好みかよくわかりませんが、検索すればたくさんヒットするはずなので調べてみてください。 　（例えば、ＦancyBoxとかColorboxとか） また、A No1様もご指摘なさっているように、現状では、リンク要素にonclickの処理が設定されているようですので、それをどうするか（生かしたままにするか、無効にするのか）についての対処も必要になりそうですね。
機能を変更したいということですよね？ 漠然とした回答ですが… Awkward Showcaseをまったく知りませんが、イベントの設定やメソッドが用意されているようなライブラリであれば比較的簡単に実現可能かと思います。 マウスホバー時の処理を追加できるようになっていれば、単純に対象画像のsrcを変更する処理を加えるだけでよさそうです。 jQeryであるのなら、 element.attr("src", "○○"） のような記述を1行加えれば済むでしょう。 初期値としてオプション設定だけしかできないようなタイプであれば、そのままでは処理内容を変えられませんので、スクリプトの内容を解析してカスタマイズすることが必要になります。その際には、ライブラリのライセンスがどうなっているかによって可能/不可能が異なります。 変更が可能であると仮定して、考え方だけを書くなら スクリプトの中からマウスオン/オフ時の処理を行なっている部分を探し出し、他の処理に影響が出ないように考慮しながら、上記と同様の処理を付け加えるといった作業になると思います。 別の方法として、全く別個に独立した処理としてご要望の内容をスクリプトで記述するという方法も考えられます。 独立した処理なので、記述するのは比較的簡単で済みますが、この場合は、同じマウスアクションへの処理として、同じ要素に対する変更を同時に行なうことになりますので、何らかの干渉が起こる可能性があります。
すみません補足します。 ～アンカーの場合～ URLに情報を載せるという点で?の他に#を使う手もあります。 今自分が質問している質問に回答を頂いて知ったのですが・・・。 URLの末尾に#abcといった部分はアンカーと呼ばれ、主にページ内遷移などに用いられます。 ページ内遷移の情報と被らない範囲で情報を付加することができます。 アンカーはJS内でlocation.hashで取得することができます。 よって基本的には先ほどの回答で申し上げたようにaタグのhtml属性をJSで動的に変更していくものになりますが、?ではなく#以降に情報を付加して、JSでアンカーを処理することができます。 HTML=>CGI という順番で画面が遷移すると仮定します。 ?を使った場合、パラメータを受け取るのはCGI側です。 #を使った場合、アンカーを受け取るのはHTML側で、HTML内のJSが、アンカーを受け取ってからCGIに送り込むまでの処理を一貫して担います。 質問者様には参考にならないかもしれませんが、数日後、数年後、数少ない来訪者様の参考までに。 ちなみにGoogleがこのアンカーを使って検索結果を表示しているので私が苦労しているわけです。詳細は私の質問ページで。
tes02liには、href属性の値（=#link○○）という文字列が取得されています。 ××.click(); というメソッドでクリックしたいのであれば、文字列ではなく、リンク要素をクリックしてあげれば、ご希望の動作になると思います。
＞}else if(document.forms['name1'].acceptance.checked){ の行はmndFiledsに宣言されていないフィールドなのでforループのなかで チェックしてもelseにひっかからないですね forの外にもってくるかmndFiledsに入れるかのどちらか <script> var mndFileds=new Array('Company','Last Name','Email','Phone','LEADCF3','Description','acceptance'); var fldLangVal=new Array('会社名','お名前','メールアドレス','お電話番号','お問い合せ種別','お問い合せ内容','同意する'); function checkMandatery(f){ for(var i=0;i<mndFileds.length;i++){ var obj=f.elements[mndFileds[i]]; if(!obj) continue; if( ((obj.type=="text" || obj.type=="textarea") && obj.value=="")|| (obj.type=='select-one' && obj.selectedIndex==0) ){ alert(fldLangVal[i] +' を入力してください。'); obj.focus(); return false; } if(obj.type=="checkbox" && !obj.checked){ alert(fldLangVal[i]+'にチェックをしてください。'); return false; } } } </script> <form action='' name='name1' method='POST' onSubmit='return checkMandatery(this)' accept-charset='UTF-8'> <p>会社名(必須):<input name='Company' type='text' size="30" maxlength='100'/></p> <p>お名前(必須):<input name='Last Name' type='text' size="30" maxlength='80' /></p> <p>メールアドレス(必須):<input name="Email"></p> <p>お電話番号(必須):<input name='Phone' type='text' size="30" maxlength='30' /></p> <p>Webサイト:<input name='Website' type='text' size="40" maxlength='120' value="http://" /></p> <p>お問い合せ種別(必須): <select name='LEADCF3'> <option value='-None-'>?なし?</option> <option value='種別1'>種別1</option> <option value='種別2'>種別2</option> <option value='種別3'>種別3</option> </select></p> <p>お問い合せ内容(必須):<textarea name='Description' cols="40" width='250' height='250'></textarea></p> <p><input type="checkbox" name="acceptance" value="1" class="wpcf7-acceptance" />同意する</p> <p><input type="image" src="btn_send_contact.jpg" alt="送信する" name='save' /> <input type="image" onClick="this.form.reset();return false" src="btn_reset_contact.jpg" alt="リセットする" name='reset' /></p> </form>
一端の情報系の学生ですが、失礼いたします。 ■前置き 確かに既存のライブラリは便利であればあるほど自由度が低くなります。 アニメーションひとつにしても速度関数の種類で動作感が変わりますよね。 モチベーションについてですが、技術習得を中心にして実装するのと、実装を中心にして技術本をコンサルトするのとは真逆ですが、私は後者です。 そして、後者の場合、実装中の疑問をその都度グーグルで検索すれば事足りる、というのが現代の現状です。（基礎的なことをしっかり知るためには書籍が頼れるかもしれません。） 私は心が折れそうなときは、イメージの最終形態に少しでも近づけるよう、フリーの画像や効果音をあさりに出かけます（パソコンの中で）。 ■結論 アートのサイト：わかりません 書籍：基礎がわかる書籍（アートをやりたいということでクラスの作り方をしっかり解説している書籍の中からレベルを選んでいただけるといいと思います。アートは存在する物体とクラスを綺麗に結びつけると途端に書き易くなります。） 勉強法：作りたいアートの最終形態をイメージして、実装中に出た疑問をその都度グーグルで調べる ■以降、Javascriptでアートしか作成しない私がアートを作成する際にすることを記します。参考までに。 イメージ → 概念構成 ← プログラム まず、作品の最終形態をイメージします。何を作りたいか。 なにが作れるのか、は「Javascriptの仕様的に無理だ」と挫折してからでいいのでとにかくイメージします。 そしてそのイメージがどんな要素で成り立っているのかを考えます。クラスの構成につながります。 最後にその構成を基にしてプログラムを書きます。 私が過去に作成したライントレーサのJavascriptを例に説明いたします。 ・イメージ まずライントレーサ、黒い線を引いたらロボットがその上を走る、そしてそのロボットはセンサー３つを持っていて、それぞれのセンサーが黒い線の上にあるのか、白い地を感知しているのか、取得している。ロボットはそれをもとに移動するが、移動のパターンは直進、左回転、右回転に絞ろう。 ・概念構成 レールが存在する ロボットが存在する ＞センサーが存在する ＞＞センサーの値が黒か白かを取得する関数が存在する ＞センサーの値をもとにロボットを動かす関数が存在する ※後の拡張のし易さにもつながります。 　これを時間をかけて考えることは、後の実装の手早さでモトが取れるので、いくら時間をかけてもかまわないと思います。私はノートとボールペンでアイディアを書いています。 ・プログラミング function RAIL(){ } function ROBOT(){ this.sensors = []; // 配列 for(var i=0; i<3; i++){ this.sensors[i] = new SENSOR(); } this.MoveBySensors = function(){...} } function SENSOR(){ this.GetValue = function(){...} } ※アートで100行を超えるちゃんとしたものを作ると、このクラス構造をいかに綺麗に作るかが問題になります。 　すみません、クラス（構造体？）を理解されている前提で話していますがご存じなければグーグル（基礎により書籍のほうが良いかもしれません）でお願いします。 　Javascriptのクラスは関数とごっちゃになるかもしれない特殊なものではありますのでご注意ください。 ■技術的なアドバイス 経験則ですが、物体と結びつけたクラスに、位置や速度の値を持たせることに加え、位置を実際にプラウザに反映させるメソッドを持たせるとよいと思っています。 this.position = new VEC2(100, 200); // 二次元ベクトル this.elm = document.getElementById("div_abc"); this.View = function(){ this.elm.style.width = this.position.x; this.elm.style.height = this.position.y; } といった感じで。 二次元ベクトルのクラスは自分で定義しました。 だいたい要素の位置情報に関しては（私は）これで安定しています。 数日後の参考までに。 ■そして そしてですが、こうしてワクワクしながら作品を作っているうちにJavascriptはマスターできるでしょう。
＞別のPHPが使えるサーバーにPHPプログラムを設置して、引数を渡すことでファイルを管理する（あるいはデータベースアクセスする）ことは可能なのでしょうか？ 無料の所では九割九分規約違反で制限されます
JavaScriptで動的に変えることになるね PHP成型時に、onClickで動かす関数への引数としてactionを指定、クリックしたら親フォームのactionを書き換えてsubmit・・・だろうなー 今回だと hogeって関数に引数として渡してるから function hoge(actTarget){ document.myform.action = actTarget; document.myform.submit(); } でいいんでないかな
記事ごとに違う問題と回答なら、こんな感じでしょうか。 ポイントとしては、選択肢に値をつけることと、 関数 saiten の引数に対象フォームと回答を含めることです。 <script> function saiten(name,answers){ var readRadio = function(radios) { for (var d = 0; d < radios.length; d++ ) if (radios[d].checked) return radios[d].value; return null; } var form = document.forms[name]; var seikai = 0; for (var i in answers) { var e = form.elements[i]; if (!e) continue; if (answers[i] == readRadio(e)) seikai++; } var score = seikai * 20; alert("あなたは"+score+"点でした！"); return false; } </script> <form name=radioB> <p>カナダの首都は? <ul> <li> <label><input type=radio name=Q1 value=1>オタワ</label> <li> <label><input type=radio name=Q1 value=2>トロント</label> <li> <label><input type=radio name=Q1 value=3>モントリオール</label> </ul> 中略 <p><button type=button onclick="saiten('radioB',{Q1:'1',Q2:'3',Q3:'3',Q4:'2',Q5:'3'})">採点</button> </form>
A No1です。 ここに似た内容の記事がありますので、順序を変えて試してみてください。 http://keyframe.co.jp/blog/archives/418
通常のテキストなどだけから構成されているHTML要素なら、ご提示の方法で取得できると思いますが…？ もしかして、div要素の中にブラウザが取得するのに時間がかかる要素（ 例えば<img>など ）が包含されていませんか？ そのような場合は、DOM要素自体は追加されていても、要素の実際のサイズが不明な状態（ブラウザが画像データ等を取得するまで）の間は、当然ながら最終表示形での値は返ってこないと考えられます。 画像などのonloadを待って値を取得するか、プレロードするようにしておくかなどで対処可能と思いますが、事前に追加するHTMLの内容がわかっている必要がありますね。 かなりアバウトでもよいのなら、setTimeoutで適当な時間経過後に処理をするとかでもいけるかも知れませんが、これはほとんど根拠のない方法とも言えるかも。 プレロードしておく場合でも、ご提示の処理までに充分な時間がとれない可能性（ロード完了前に処理が発生してしまう）があるなら、結局のところ、画像のonloadを確認するという処理が必要になるでしょう。
下記のコードを試したところ無事ＢＧＭを流すことができました。 --- var musicTitle = "コブクロの栄光の架け橋"; alert(musicTitle + "の鼻歌を歌ってください"); --- 母が試したところ音が鳴りませんでした。環境依存が激しいようです。
IE6って十何年前のブラウザですよ？？ そんなのを使ってる人なんて見たことありません というのは冗談ですが IE6は開発者にとって本当に悪名高いブラウザです 開発者なら誰しもが撲滅を願っています シェアのカウントダウンページが作られるくらいです http://www.ie6countdown.com/ 開発元のマイクロソフトさえも移行を推奨してきました そしていよいよ来年XPと一緒にサポートが打ち切られることになったのです！ 開発者としてできることは、それを喜ぶことだけ 間違ってもサポートしようなどとは思ってはいけません それは害虫に餌をやるのと同じです 誰かが情けでサポートしてしまうために生き残り、また他の誰かやあなたを困らせることになるのです それは絶対にしてはいけません もし会社の都合で仕方なく使い続けてる場合でも、 なんとか移行を説得するほうが開発者として善い行いです 長期的に見て、絶対にメリットがあります そもそもこの流れの早い情報社会で、十何年前のブラウザを意識しろと言う方がおかしな話なのです 本当はそんなブラウザ気にする必要すらないのですが もしあなたが天使のような人なら、 アクセスしてきたとき、警告文及び他のブラウザのDLページを表示させてあげればいいでしょう また、あなたもIE7なんて使わずにIE9以上、 もしXPならFirefoxやChromeなど他のブラウザを使うことをオススメします 一般でギリギリ現役だと認められているブラウザは現在IE8まです しかし来年XPのサポートが切れるので開発者なら最低IE9で開発をすべきです
クロスフェードのように画像を切り替えたい場合は、切り替え前と後の画像を重ねておき、切り替え後の画像を透明にしておく必要があります。 切り替え後の画像を予めHTMLに入れておくか、スクリプトで生成するかはどちらでも構いません。 その状態で、animateで切り替え後を徐々に opacity: 1; にしていき、切り替え前を徐々に opacity: 0; にしていけばできます。
きちんと作成されているプラグインであれば、同じ要素をトリガーにしても、処理内容が異なっていれば問題なく設置できるはずです。 処理内容が同じ要素に対して影響を与えるような場合は、その処理同士が干渉する可能性もありますが、ご提示のものの場合処理の対象要素が異なっていますので、その点では問題はないと想像します。（確認はしていません） ただし、ご提示のまま設置した場合、プルダウンのサブメニューとマジックラインの位置が重なってしまうため、表示上マジックラインが隠れてしまう可能性があります。 あるいは、マジックラインを重なり順で上に置いた場合は、そこをマウスが通過する際にマウスアウトのイベントが発生することが予想されます。（サブメニューが閉じてしまう） マジックラインの位置をメインメニューの上側に設置したり、メインメニューの裏側におくなどの工夫をすればよいだろうと思いますが、単に設置した場合にどのようになるかはわかりません。 一方で、それほど複雑な処理でもなさそうですので、ご自分で自作するという方法もあります。 （必要な機能だけに絞って実現するのなら、それほど複雑なスクリプトにはなりません。ライブラリ化しようとすると、少し複雑になるかも） ごく単純化した例をご参考までに。 　* メニュー部は画像ではなくテキストにしてあります。 　* インデント部分の全角空白は半角などに <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body{ background-color:#000; } div.line{ height:2px; overflow:hidden; background-color:#fff; color:red;} #nav, #nav ul, #nav li{ list-style-type:none; margin:0; padding:0; } #nav{ font-size:20px; font-weight:bold; color:#fff; height:45px; width:840px; margin:0 auto; } #nav a{ text-decoration:none; } #nav a:link, #nav a:visited{ color:#fff; } #nav li.main{ position:relative; float:left; } #nav li.main a{ display:block; padding:12px 20px; } #nav ul{ position:absolute; left:0; top:44px; background-color:#555; } #nav ul li{ border-top:1px solid #fff; } #nav ul li a{ width:150px; padding:16px 20px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … </head> <body> <div class="line"> </div> <ul id="nav"> <li><a href="#">About</a> 　<ul> 　　<li><a href="#">Concept</a></li> 　　<li><a href="#">Aburi brand</a></li> 　　<li><a href="#">Philosophy</a></li> 　　<li><a href="#">Sustainability</a></li> 　</ul> </li> <li><a href="#">Menu</a> 　<ul> 　　<li><a href="#">Menu-1</a></li> 　　<li><a href="#">Menu-2</a></li> 　　<li><a href="#">Menu-3</a></li> 　</ul> </li><li><a href="#">Beverrages</a> 　<ul> 　　<li><a href="#">Beverrages-1</a></li> 　　<li><a href="#">Beverrages-2</a></li> 　　<li><a href="#">Beverrages-3</a></li> 　</ul> </li> </li><li><a href="#">Private Dining</a></li> </li><li><a href="#">Event</a></li> </li><li><a href="#">Book now</a></li> </li><li><a href="#">Contact</a></li> </ul> <div style="background-color:#666; height:400px; clear:both;">記事部分</div> <script type="text/javascript"> (function(){ //　初期セットアップ 　$("#nav>li").addClass("main").find("ul").css({opacity: 0.7, display: "none"}) 　　.find("li:first-child").css("border", 0); 　var line = $("<div></div>"); 　line.appendTo(line.clone().css({position:"relative", top:-4, zIndex:-10})) 　　.parent().insertAfter($("#nav")); 　line.css({height:2, position:"absolute", backgroundColor:"#f00", overflow:"hidden"}); //　メニューのホバーアクション 　$("#nav>li").hover(function(){ 　　var t = $(this); 　　$("ul", t).slideDown(); 　　line.css("width", t.width()).stop(1, 1).animate({left: t.offset().left}); 　}, function(){ 　　$("ul", this).stop(1, 1).slideUp(); 　}); //　サブメニューのホバーアクション 　$("#nav ul li a").hover(function(){ 　　$(this).css("backgroundColor", "#888"); 　}, function(){ 　　$(this).css("backgroundColor", "#555"); 　}); })(); </script> </body> </html>
<script>タグが書かれてないので憶測ですが、パスは合ってますか？ 質問文を見る限り同じディレクトリでも起きてるようなのでそれが原因ではない気もしますが。
値を３桁区切りに整形する関数を用意します function editNumberSeparated(num) { var t, s = num.toString(); do { t = s; s = t.replace(/^([\+\-]?\d+)(\d\d\d)/,"$1,$2") } while (t != s); return s; } 値を画面表示させる処理に、上記関数をかませます 要素.value = total1; → 要素.value = editNumberSeparated(total1); 要素.innerHTML = total1 + tax2; → 要素.innerHTML = editNumberSeparated(total1 + tax2); スクリプトが全て外部参照されているならば、上記関数もそこに混ぜ込むのが適当かと思います。
いささか無駄が多いですが、こんなのはどうでしょうか function setMove() { var target = $('ul#mainNavi li').find('.light'); target.animate({left: '600'}, 1000, 'swing'); target.animate({left:'-118'}, 1); target.animate({left: '+=0'}, {duration:3000, complete:setMove}); } setTimeout(setMove, 1000);
＞・クリックしたら、このフォーム内容を送信？ うん、this.form.submit();はこのフォームをsubmitとそのまま解釈すれば良い。 ＞・アクション先も指定していないのに、処理はどこへいくのでしょうか？ これはactionの指定が無ければ自身に送信。パラメータを送信しつつリロードみたいな動き。 ＞また、disabledは？ ずっと押せない？ これは二回クリックされることを回避させている。 表示されているページがボタンをクリックするとリロードされるから一瞬押せなくなるけどまたパラメータ送信後、ページが表示されたときはまた押せる状態になっている。
＞前者はfor文だからおかしくなったのでしょうか？ 前者も同じ書式をもちいればご希望の通りとなると思いますが？ <script> for(var i=0; i<10; i++){ (function(i){ for(var i=0; i<10; i++){ document.write(i); } })(); } </script>
はっきりした原因は不明ですが、 http://support.microsoft.com/kb/2722706 のようなトラブルも、発生している模様です。
たくさんプラグインを読み込んでいるようですが、これらのうちmp3だけが動いていないのでしょうか？ それとも全て？ そもそもプラグイン自体がコンフリクトを前提に作成されていない場合は、プラグイン自体を修正しなければなりません。 あと、気になるとすればnoConflictをなぜ2度実行しているのかと、 > $("#mp3").jPlayer(); $j("#mp3").jPlayer();じゃないでしょうか？
いまフォームが <form id=fmView> <input name=employeeName> </form> <form id=fmEntry> <input name=employeeName> </form> ならば $('#fmView input[name=employeeName]').val("一番目"); $('#fmEntry input[name=employeeName]').val("二番目"); または $('#fmView')[0].elements['employeeName'].value = "一番目"; $('#fmEntry')[0].elements['employeeName'].value = "二番目"; とすれば、name が同じ要素の区別が可能です。 ご質問でうまくいかなかった原因ですが、ブラウザが期待する「ID はページ内で一意」の前提が崩れているため、挙動不審となっているためです。 重複する id は削除して name のみで操作することを強くオススメします。
リンクがちがっているみたいだし、ご提示の長いコードを読む気にはならないので、bxSliderという名称だけで探してみたので、違っているのかもしれませんが、これ（↓）のことでしょうか。 http://bxslider.com/ もし、そうであるなら、examplesのページにそのものズバリの説明があるみたいに思えます。（私は、英語がさっぱりなので、ちゃんと読んではいませんが…） http://bxslider.com/examples/custom-next-prev-se … ライブラリ等を使う時は、配布元のサイトに使い方の説明がありますので、そこで調べるのが一番確実です。
『ＩＥでエラーに成るのに他では成らない』 とすればまず考えるのは 『非対応では？』と考えます。 コードを変更して対応出来ないなら、 errorMsgに”ＩＥ以外をお使い下さい”の表示を記載するのが宜しいかと。 尚：当方は『ルナスケーブ』を検証用として使ってます。 ＊ＩＥに出来て他で出来ない事は何も無い。
他の質問者さんにある通り 他のブラウザ（Chrome/Firefox）でも試してみるべきです そしてもしそれでちゃんと動いたらIEのバグだと思って諦めてください
Windows でメモ帳を使って編集をしている場合を例に説明します。 メニュー「ファイル」 → 選択肢「名前をつけて保存」 → 入力項目「文字コード」 に表示されている文字列を確認してください。 この文字列が "UTF-8" なら、以下の記述で <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>ホームページ名</title> <body> <a href="http://www.yahoo.co.jp">日本語</a> "ANSI" なら、上記の記述の4行目を以下の様に置き換え <meta charset="Shift_JIS"> "Unicode" と "Unicode Big Endian" は一般的ではないので、避けた方が好ましいです。 あえてやるなら、以下の様に置き換え <meta charset="UTF-16"> おすすめは UTF-8 です。 その理由も説明したいのですが、4000文字程度の回答欄では狭すぎるので省略します。
#1さんの回答は、jQueryとprototypeという２つの異なるjJavascriptライブラリへの、命令の書き方の衝突に関する説明です。 で、これをクリアして、問題が解決するのはラッキーなケースです。。 jQueryやprototypeのようなjavascriptライブラリは、非常に強力で、元のHTMLを完全に書き換えてることができるため、強引な動作が可能です。当然、最初のjsでhtmlが書き換えられるため、次のjsは対象要素がなく、空振りして完全無視されます。 プラグインがどういう動作をすべきなのか、という基準はないので、やり放題なのは事実です。 一般的には有名で利用者の多い（つまり日本製でない）プラグインにはそういう問題が少ないです。 今回のプラグインが必ずそうとは言えませんが、「使用時の規約が少ない＝すぐ使える」オレオレプラグインは、混在使用や応用は全滅と思ったほうがいいです。 海外の有名どころを使うこと。これ常識かと。
どのように設置しているかや添付画像もないので、情報がなさすぎるため修正方法はわかりませんが… ご紹介のサイトを表示した時に同じ現象が起きているのでしょうか？ もしそうでないとするならば、 ＞参考にコピーさせてもらったのは下記サイトです。 コピペの方法が間違っている確率が非常に高いと思われます。 まずはそっくりのコピペを作成し、動作することを確認してから、少しずつ変えながらチェックしてみてください。 おかしくなったら、その直前に変えた方法が間違っている可能性が高いです。 少々手間がかかりますが、結局のところ近道になるのではないかと…
こんにちは。 プラグインの中で周りの要素なんかから自動的に計算されているようですので、そこを全て解析して調整するしかないと思います。 (すべてを解析していないのでなんで90pxに変更したいかとか汲み取れてませんが) まずはこのwidthが何をしている値であるか、それを90pxに変更することが良いことなのか解析しないとダメだと思います。 <div id="thumbs" style="text-align: left; float: none; position: absolute; top: 0px; right: auto; bottom: auto; left: 58px; margin: 0px; width: 2070px; height: 38px; z-index: auto;"> こうなるのは、プラグインの中で自動的にスタイルを追加しているからです。 ようは指定されたthumbsという要素にいろいろ手を加えて、動かしているのです。（それがプラグインと呼ばれるもの) jquery.carouFredSel-6.2.1.jsの中に function in_mapCss($elem, props) { } という関数があります。 このへんで必要なcssを追加して、その後計算された（または設定された）値をセットしているように見えます。 ぱっとしか追っていませんので間違えていたらすみません。 まずは何に利用される値なのか、90pxに変更して動くのか、全て解析しないとどこをどのように変更したらよいかは見えてこないと思います。
そんなことは全くないので安心してください ただの好みというかコーディングスタイルなだけです
多分これのことではないかと思いますが… http://caroufredsel.dev7studios.com/ オプションがいろいろあるので、内部でどのような計算をしているのか具体的にはわかりませんが… 説明を見るとそれらしきことが書いてあります。 widthを設定することも可能になっているようですし、指定が無い時はそれなりにということでしょうか。 http://caroufredsel.dev7studios.com/configuratio … （私は英語がさっぱりなので、質問者様に直接理解していただいた方が正確だと思います。） 指定したい場合は、設定の際のオプションで指定すればよいと思われます。 （以下の、４.のオプション指定のところ） http://caroufredsel.dev7studios.com/installation …
A No1です。 ＞そちらだと動作してくれません。 手元にChromeがありませんので、何をどうしたらどうなったのか不明だとなんともわかりかねます。 以下、推測で書かせていただきますが、ＤＯＭが取得できていないのでしょうか？あるいはそれ以前にDocumentが取得できていないとか？ そのあたりの事象によって対処方法は変わってくると思います。 No1にも書きましたように、オブジェクトを名前（ご質問の場合main1）で指定するのはいろいろと問題がありそうなのですが、そういう指定方法で実行されたのでしょうか？それであれば前述の別法で試してみるとか。 あるいは、documentは取得できていてframesが取得できないのであれば、getElementsByTagNameで取得して走査するとか、どこまでが取得できてどこがまずいのかを調べてみてください。 それとも、全然違うところで引っかかっているのでしょうか？ コードが1行しかないので、順に調べていけばどこで処理が滞っているのかはすぐにわかると思います。
　jqeryでのサンプルは、そのまま使用しない場合は厄介ですね。良く知ってなきゃ手が出せない。 ★<div>に<menu>というIDをつけて、そのmenuというIDに対してz-indexをcssで指定してあげるという理解でいいのでしょうか？？ 　デザインのためにHTMLは書かない!!これ原則です。 　要は、他の要素に影響させないためには、 ・その要素をabsoluteで配置してしまう。 　　　・・置き場所を他の要素をrelativeで下げておく のが簡単でしょう。　 　 　CSSのみで行うほうが楽かもしれません。クリックではなくポインターが乗ることで開きます。 　⇒ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HT … ) 　で[表示]→[スタイルシート]に進み、「横プルダウン」「横並びプルダウン2」「ページの最上部へ」「ヘッダーの下」が、その方法ですね。
いろいろ考えられるので、どのようなものをイメージなさっているのかわかりかねますが… 実際にある画像や文書にエフェクトをかけるのか、波紋をイメージしたパターンのアニメーション的なものなのかによってもかなり違ってくるでしょう。 検索してみると、思いのほかヒットしますね。 canvas、SVG、Flaxhが多そうです。 重そうですが、かなり良くできているのは http://code.almeros.com/code-examples/water-effe … フラッシュは処理がしやすいみたい http://endlessblank.com/blog/2009/06/displacemen … パターン的なのは http://www.asystem-design.co.jp/blog/?p=46 http://wiredhiro.jp/blog/archives/2303 http://taken.s101.xrea.com/blog/article.php?id=839 いろいろありそうなので、ご自身で検索なさってみることをお薦めします。 あるいはこのあたりをとっかかりにするとか。 http://www.0yen-coding.com/2009/12/flash-ae.html http://zenback.itmedia.co.jp/contents/dothtml5.c … http://www.0yen-coding.com/2009/11/flash-8.html
JavaScript において例外とは、通常ルートでは考慮されない状況が発生したことを、任意の値を「投げる」ことによって、制御構造を無視してお知らせする機能です。 一般的な用途としては、 ・プログラムの文法が間違っている (コンパイル型なら発生しない状況) ・関数の引数が間違っている (静的型付けなら発生しない状況) ・機械が故障した (普通は考慮しない状況) ・通信が強制的に遮断された (業務的に意識したくない状況) 等の状況が発生した際に、 その状況を説明した Error オブジェクトを投げることにより通常ルートを中断し、 専用の例外ルートにて例外処理を行います。 ただ Error オブジェクトでなければいけない決まりはないので、 　try { 　　if(isNG()) throw "NG"; // 例外を説明する string を投げる 　　alert('正常'); 　} catch (e) { 　　alert(e+'でした'); // 例外の説明を元に、例外処理として 'NGでした' を表示 　} の様に実装するこのも可能ですが、 投げる箇所と例外処理の箇所は、別な人が実装することが多いので、 混乱しないように Error オブジェクトを投げるのが良いでしょう。 ところで、ユーザー名の検証などは一般的に通常ルート(業務処理)とされます。 例外処理とはあくまでも例外的な状況を処理する為に使うべきなので、 通常ルートを例外処理で実装するのは、あまり好ましくない行為です。 ですが、通常ルートをすっ飛ばすという機能性に着目して、 あえて例外処理で実現するケースも、あることはあります。 まとめると、 「例外を使えば通常処理が簡潔になるなら、使ってもよい、かもしれない、気がする」
#3 でご質問の > どのようにCPUやメモリが動いているか について。 おそらく初心者向けの簡易な説明を期待なされているかと思いますが、 とても深い内容なのでなかなか難しいです。 そのため、斜め上の回答となったことを先にお詫びします。 難解ではあるものの入りやすい書籍として以下をおすすめします。 http://amazon.jp/dp/4774138959 - プログラミング言語を作る http://amazon.jp/dp/4839909865 - CPUの創りかた 冗談のような表紙や題名なのですが、どちらも読み物として高水準です。 ですが一番のおすすめは、 自作ソースをコンパイルしてアセンブリ(≒機械語)を追いかけること (参考) http://oshiete.goo.ne.jp/qa/3613934.html 今回の主題である return の挙動など、これ一発で明白となるでしょう。
そもそも論で恐縮ですが、「indexページをタイマーで閉じる必要」がそもそも間違っていると思います。一般的でない仕様にせざるを得ないシステムに問題があると思います。そうしなくてもよい解決策はないのでしょうか。そちらのほうが現実的です。
>１、画像はサーバに上がっていました。URLで、画像も確認しました。 http://○○○/...って叩いて確認したんですよね？ ○○○のところはwww.html5mania.comじゃなくて、ご自身のサーバーですよね？ で、実際に問題のあるページのソースは確認されて、そのURLがタグ内に埋め込まれていましたか？ なんなんでしょうね・・？あとは実際にHPを見てみないと何とも言えません・・
＞＞Node.jsの標準入力 まあreadlineはありますが http://nodejs.jp/nodejs.org_ja/api/readline.html ちょっとコードを試すだけならREPLで十分でしょう コマンドプロンプトで単に「node」かインストールした「node.exe」を単に起動すればREPLモードになります 少々代規模なコードでも一旦テキストエディタ等でまとめて 一気にコピペして実行させればいいです まあnode-dev(ファイル編集毎に自動で再実行してくれるツール)を使うのなら 「node-dev test.js」みたいにして捗れるかもしれません ＞＞そもそもまずは言語仕様をCUIで勉強するっていう発想自体がやっぱり間違っているんですかね？ 上で一応いろいろ書きましたが、やっぱり同じコンソールならDOSのREPLより、ブラウザのデベロッパーツールを利用した方が基本にいいです 何より表示がわかりやすいです オブジェクトだけを出力すれば簡単にプロパティやprototypeの調査ができます ブラウザで説明サイトをみながらそのまま楽に試せるのもいいです ChromeならF12キー等でコンソールが開けます ＞＞簡易CGIサーバでも用意してdocument.writeでブラウザに表示した方がいいのかな 書いたhtmlファイルをブラウザにドラッグアンドドロップすれば普通に開けます JavaScriptの学習で基本的にCGIが必要になることはありません また、ブラウザでもconsole.*は使えます 長い具体的なコードで試したい場合だとブラウザのコンソールで直接実行するのではなくて 基本のものをHTMLファイルに書いて あとはコンソールで実行したりlogを確認した方がわかりやすい場合もあります まとめると、基本的にブラウザのコンソールを開いてそこで試してください わかりにくい場合はHTMLファイルに書いたりNodeでjsファイルを実行してもいいでしょう そこら辺は好みに合わせて調整してください まあ複雑なDOM操作になってくるとHTMLファイルをそのまま実行してみるくらいの選択肢しか無いでしょうけどね まあそれでもコンソールはデバッグに役立ちます 慣れておいて損はないです
<a href="javascript:open('a.html').onload=function(){c_click(1)}">test</a>
#1 で DOM に挑戦するとのことでしたので、私も挑戦してみました。 DOMっぽい長ったらしい記述は関数 tagOn に閉じ込めたり、今時のスクリプト記述を利用したりしたので、割とすんなり書けましたが難解になったかと反省しております。 何かの参考になれば幸いです。 <!DOCTYPE html> <script>addEventListener('load',function(e){ // イマドキの window.onload function tagOn(p,n,t) { '　'; var e = p.appendChild(document.createElement(n)); '　'; if (typeof t == 'string') { '　　　'; e.appendChild(document.createTextNode(t)); // 要素配下にテキストを追加 '　'; } else if (t instanceof Array) { '　　　'; tagOn.apply(this,[e].concat(t)); // 再帰を使って、要素配下に要素を追加 '　'; } '　'; return e; } function readRadio(radios) { '　'; for (var i = 0; i < radios.length; i++) if (radios[i].checked) return radios[i].value; '　'; return undefined; } var PRICES = [ // JSONっぽいデータ構造にして汎用化 { name:'あれ', price:10 }, { name:'これ', price:30 }, { name:'それ', price:50 } ]; function makeTable(root, rate) { '　'; var t = tagOn(root,'table'); t.border = true; '　'; var h = tagOn(t,'thead'); '　'; var hr = tagOn(h,'tr',['th','個数']); // 再帰のおかげで、一行で多重階層が記述できて便利 '　'; PRICES.forEach(function(o){ tagOn(hr,'th',o.name) }); // イマドキの for 句 '　'; var b = tagOn(t,'tbody'); '　'; for (var i = 0; i < 2; i++) { '　　　'; var n = (i+1) * 50; '　　　'; var f = function(p){ return '￥' + (p * n * rate) }; // ラムダ式っぽい記述 '　　　'; var br = tagOn(b,'tr',['td', n+'個']); '　　　'; PRICES.forEach(function(o){ tagOn(br,'td',f(o.price)) }); '　'; } } function calc(ev){ '　'; if (ev) ev.preventDefault(); '　'; var form = document.forms['casio']; '　'; var rate = parseFloat(readRadio(form.elements['nouki'])); '　'; var root = document.querySelector('.rateTable'); // jQueryっぽい記述 '　'; while (root.firstChild) root.removeChild(root.firstChild); // 追加前に全削除 '　'; tagOn(root, 'h2', '表1'); '　'; makeTable(root, rate); } calc(); document.forms['casio'].addEventListener('submit', calc, false); // HTMLに関数を書かない工夫 },false);</script> <p> 再計算ボタンを押すと価格表が再計算されます。 <form name=casio> <p> <label><input type=radio name=nouki value="1" checked>通常配達</label> <label><input type=radio name=nouki value="1.25">翌日配達</label> <label><input type=radio name=nouki value="1.5">当日配達</label> <button type=submit>再計算</button> <div class=rateTable></div> </form>
回答がないみたいなので… 少々複雑な構成になっているので、そのままというライブラリはそう間単に見つからないのでは… ご提示のサイトもjQueryを利用しているようですが、設置されているものがそのままライブライと言えばいえるでしょう。でも、オリジナルのようですし、著作権もありそうな… ごく簡単なサンプルとして、似て非なるもの（？）をご参考までに。 画像でやるべきところを、▲や×などで代用していますので、見た目もそれなりになってますが、考え方はある程度までは使えるかと。 hoverだとqueueに処理が溜まりやすいので、ちゃんとやるなら、アニメーションをキャンセルして処理するような考え方にしたほうがよろしいと思います。 サンプルなので画像を使っていませんし、実際の構成も変わると思いますので、ＣＳＳはかなりいい加減です。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <meta http-equiv="Content-Type" content="text/html; charset=shift_jis"> <style type="text/css"> body{ background-color:#eee; } #menu{ width:808px; margin:0 auto; } #menu ul, #menu li{ list-style-type:none; margin:0; padding:0; } #menu ul.navi{ overflow:hidden; zoom:1; } #menu ul.navi li{ width:200px; height:100px; background-color:#fff; float:left; margin-right:2px; } ul.navi img{ width:100px; height:50px; margin:20px 50px; } div.pointer{ background-color:#fff; height:12px; margin-top:8px; position:relative; } div.pointer div{ position:absolute; top:0; color:#ccc; font-size:14px; } #menu .panel{ height:320px; position:relative; overflow:hidden; } #menu ul.contents, #menu ul.contents li{ height:300px; } #menu ul.contents{ border:1px solid #ccc; border-width:1px 0; background-color:#ddd; position:relative; } #menu ul.contents li{ padding:10px; position:absolute; top:0; } div.closer{ height:20px; background-color:#fff; position:relative; } div.closer div{ width:28px; background-color:#ccc; text-align:center; position:absolute; top:-12px; left:390px; cursor:pointer; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ var slider = function(e, s){ this.element = e, this.speed = s; e.hide(); } slider.prototype = { open: function(){ this.element.slideDown(this.speed); }, close: function(){ this.element.slideUp(this.speed); } } var panel = new slider($("#menu .panel"), "slow"); panel.set = function(target){ var index = $(">li", target.parent()).index(target); this.open(); $("#menu .contents>li").animate({opacity: 0}) .eq(index).stop().animate({opacity: 1}); } var pointer = new slider($("#menu .pointer div"), 200); pointer.set = function(target){ var left = target.offset().left - target.parent().offset().left; left += (target.width() - this.element.width())/2 | 0; this.open(); this.element.animate({left:left}, 500); } $("#menu .navi>li").hover(function(){ var target = $(this); pointer.set(target); panel.set(target); }, function(){}); $("#menu .closer div").click(function(){ panel.close(); pointer.close(); }); }); </script> </head> <body> <div id="menu"> <ul class="navi"> <li><img src="img/01.jpg" alt=""></li> <li><img src="img/02.jpg" alt=""></li> <li><img src="img/03.jpg" alt=""></li> <li><img src="img/04.jpg" alt=""></li> </ul> <div class="pointer"><div>▲</div></div> <div class="panel"> <ul class="contents"> <li>パネルＮｏ１ <img src="img/01.jpg" alt=""></li> <li>パネルＮｏ２ <img src="img/02.jpg" alt=""></li> <li>パネルＮｏ３ <img src="img/03.jpg" alt=""></li> <li>パネルＮｏ４ <img src="img/04.jpg" alt=""></li> </ul> <div class="closer"><div>×</div></div> </div> </div> </body> </html>
ブラウザのネイティブのappendなどが使えないってことでしょうか？ wrapはないはずなので、何かのライブラリかと想像しましたが、使えない部分だけ再定義するか、代わりの関数を作成するとかで、とりあえずの対処ができるのでは？ （多分、ネイティブのappenChildなどは動作する環境と思いますので。 　根本的な解決にはなっていないといえば、それまでですが…） appendChildが動作しない時は、insertBeforeで代用するとか、似た様な処理で使えるメソッドがあれば実現は可能と思います。 （いらぬ手間がかかるのは事実ですけれど。IEはいずれにしろ手間がかかる？？） 解決法とは異なりますが、jQueryのappendを例にして、ネイティブなメソッドとjQueryのメソッドの速度を比較しているサイトがありましたのでご参考までに。 http://syake-web.com/blog/2011/02/03/append-and- …
500後半行 function appendPager の slider.pagerEl.delegate('a', 'click', clickPagerBind); を slider.pagerEl.delegate('a', 'mouseover', clickPagerBind); にしてみたらどう？
改行はそのまま？ <script> var str="<!-- 文章 -->\n\nこんにちは。\n\n<!-- 文章２ -->"; alert(str); var reg=new RegExp("<!-- .+? -->","g"); str=str.replace(reg,""); alert(str); </script>
こんにちは。 ＞あらかじめ読み込んであるページへ遷移する際に 「遷移」となっていますが、サンプルを見るとページ内リンクで表示を切替えているのではないかと想像します。 各ページに該当するdivの表示/非表示を切替えて、同じ位置に表示しているものと想像しました。 切り替え部分は既にできていて、ajax風に見せるためにローディングの画像を表示したいという意味でしょうか？ ユーザをいたずらに待たせることになるので、基本的には表示する必要はないと思いますが、考え方としては、切替える前に画像を表示させ1秒なり経ってから本来の切替えの処理を行なえばよろしいかと。 $("#loading").css("display", "block"); setTImeout(function(){ 　　$("#loading").css("display", "none"); 　　change(); 　　//これまでの切り替え処理 }, 1000); みたいな感じ。 （jQuery mobileは存じませんので、jQuery風に記述してあります。記述が違う部分はmobile用に読み直してください。）
こんにちは。 もし自分が作るならこう作るかな？とちょっと書き換えてみました。 動きは追ってみてください。 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml"> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> <title>innnerHTMLで自動生成された表を出力したい</title> <script type="text/javascript"> //ラジオボタンのvalue値を取得 var daysRate; var nouki = document.getElementsByName('nouki'); var price = new Array ( 100, 300, 500, 800 ); function getRate() { for ( var i = 0; i < nouki.length; i ++ ) { if ( nouki[i].checked ) { daysRate = nouki[i].value; } } return parseFloat(daysRate); } function calc() { // 選択されているレートを取得 var rate = getRate(); var table_start = "<table border='1'><tbody><tr>"; var table_end = "</tr></tbody></table>" var table_td = ''; // priceが増えてもロジックをいじる必要がないようにprice.lengthでループ数を制御 for ( var i = 0; i < price.length; i ++ ) { table_td += '<td width="50">' + parseInt(price[i]) * rate + '</td>'; } document.getElementById('priceTableOutput').innerHTML = table_start + table_td + table_end; } window.onload = function() { // 読込み後も一度テーブル表示を実行する calc(); }; </script> </head> <body> 再計算ボタンを押すと価格表が再計算されます。<br /> <input type="radio" name="nouki" value="1" checked="checked" />通常配達 <input type="radio" name="nouki" value="1.25" />翌日配達 <input type="radio" name="nouki" value="1.5" />当日配達 <input type="button" value="再計算" onClick="calc()"> <div id="priceTableOutput" style="background:#ccc;">innerHTMLで、ここに表を出力</div> <br /> </body> </html>
こんにちは。 Firebugとか利用すると一発でわかりますよ。 要素付近を右クリックして「Firebugで要素を調査」を選択するとなんのスタイルが適用されているかすぐ表示されます。 ほかのWeb開発ツールでも良いですが、Webの仕事をしているなら覚えておいたほうが良いです。 で、本題ですがjquery.bxslider.cssではなく他に読み込まれているstyle.cssにて定義されている .example-item #bx-pager { margin-top: -30px; text-align: center; } のtext-alignを好きなものに変更すれば良いです。 例えばrightにすれば右によります。 ほかの探し方としては<div id="bx-pager"></div>の要素ですのでCSS内から#bx-pagerを検索すると良いです。
こんにちは。 jQueryには繰り返し処理としてeachというものがあります。 <script type="text/javascript"> $().ready ( function() { // liの要素数分のループ $('ul li').each ( function() { // liにあるimgタグのsrc属性を取得してsum_を消去 var src = $(this).find('img').attr('src').replace('sum_',''); // li自身のhtmlを書き換える $(this).html ( '<a href="' + src + '">' + $(this).html() + '</a>' ); }); }); </script> これで行けると思います。 余計なお世話かもしれませんが、sumがサムネイルを意味しているのであれば thumbnailがサムネイルですのでthumがわかりやすいかも？
回答がつかないようなので… ＞１枚目の画像が表示されているときはボタンとテキストは１つ目が表示され、 ＞以降順番に表示される というのが、結局のところ何をやりたいのかよくわかりませんが、とりあえず、ご質問文のままに考えるとこんな意味ということでしょうか？ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #contentsleft, #contentsright{ position:absolute; top:0; left:0; } #contentsright{ left:600px; } #contents img{ position:absolute; width:600px; height:200px; } #contents p{ position:absolute; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ var speed = 500, interval = 4000; var index = 0, n = $("#contentsleft img").length; change(); setInterval(change, interval); function change(){ c($("#contentsleft img"), index); c($("#contentsright p"), index); index = ++index % n; } function c(elms, index){ elms.animate({"opacity": 0}, speed) .eq(index).stop().animate({"opacity": 1}, speed); } }); </script> </head> <body> <div id = "contents"> <div id = "contentsleft"> <img src="img/photo01.jpg" alt=""> <img src="img/photo02.jpg" alt=""> <img src="img/photo03.jpg" alt=""> </div> <div id = "contentsright"> <p><input type="button" value="1">1111111 <p><input type="button" value="2">2222222 <p><input type="button" value="3">3333333 </div> </div> </body> </html>
A No1です。　連投失礼。 ＞3） 子要素をクリックしたら、自分（と兄弟要素）を閉じる は、多階層の場合には、その要素自身が孫要素を持たない場合は「閉じる」で良いですが、孫要素がある場合は「それを開く」と「自分を閉じる」の判別が付かないので無理がありましたね。 このケースは無視してください。 あと、多階層で閉じる際の処理として、その子要素のみを閉じるのか子孫要素を全て閉じるのかで、次に開いた時の見え方が変わるというのもあります。 前者だと以前の状態が保持されていますし、後者だと開いたときは必ずその子要素のみが見える状態になります。
A No1～3です。 全体がよくわからないので、とりあえず、部分サンプルを何種類か作ってみましたが、ブラウザによって効かないものがあるようです。 （結構古いブラウザで試しているので、一般的と言えるのかどうかは不明です） 手元にあったFx16、IE6、Opera8で実験してみたところ、table内のページ内リンクはIE6が×、スクリプトでoffset値を計算する方法は一応ＯＫ、scrollIntoView()を利用する方法はOperaが×といった感じでした。 （トリガーは、それぞれボタンのクリックになっています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Test Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> div p{ margin:2em 0 0 0; } input{ width:2em; } #hoge{ width:300px; height:110px; overflow:auto; margin-top:2em; padding:0; } #hoge td{ width:300px; height:50px; vertical-align:top; border:1px solid #888; } </style> <script type="text/javascript"> function scroll(evt){ var t = target(evt); if(t){ var sc = 0; var d = document.getElementById("hoge") var p = d.getElementsByTagName("table")[0]; var elm = document.getElementById("month"　+　t.value); if(elm){ while(elm && elm!=p){ sc += elm.offsetTop; elm = elm.offsetParent; } if(elm) d.scrollTop = sc; } } } function s_view(evt){ var t = target(evt); if(t){ var id = "month" + t.value; document.getElementById(id).scrollIntoView(true); } } function target(evt){ var t = evt.target || evt.srcElement; return (t.nodeName=="INPUT")?t:null; } </script> </head> <body> <div> <p>[ ページ内リンク ]</p> <a href="#month1"><input type="button" value="1"></a> <a href="#month2"><input type="button" value="2"></a> <a href="#month3"><input type="button" value="3"></a> <a href="#month4"><input type="button" value="4"></a> <a href="#month5"><input type="button" value="5"></a> <a href="#month6"><input type="button" value="6"></a> </div> <div onclick="scroll(event)"> <p>[ スクリプトで計算してスクロール ]</p> <input type="button" value="1"> <input type="button" value="2"> <input type="button" value="3"> <input type="button" value="4"> <input type="button" value="5"> <input type="button" value="6"> </div> <div onclick="s_view(event)"> <p>[ scrollIntoView()による方法 ]</p> <input type="button" value="1"> <input type="button" value="2"> <input type="button" value="3"> <input type="button" value="4"> <input type="button" value="5"> <input type="button" value="6"> </div> <div id="hoge"> <table> <tr><td><a id="month1" name="month1">1月の記述</a></td></tr> <tr><td>　1月の2行目</td></tr> <tr><td><a id="month2" name="month2">2月の記述</a></td></tr> <tr><td>　2月の2行目</td></tr> <tr><td><a id="month3" name="month3">3月の記述</a></td></tr> <tr><td>　3月の2行目</td></tr> <tr><td><a id="month4" name="month4">4月の記述</a></td></tr> <tr><td><a id="month5" name="month5">5月の記述</a></td></tr> <tr><td><a id="month6" name="month6">6月の記述</a></td></tr> <tr><td><a id="month7" name="month7">7月の記述</a></td></tr> </table> </div> </body> </html>
スクリプトの内容を読むのは面倒なので、実験だけしてみました。 demoのＨＴＭＬほかをそのままコピーして… 拡大画像の方はul要素全体でスライドしているだけのように思えるので、そちらの画像にそれぞれリンクを付加えて試してみたところ、とりあえずはそのままリンクも機能するようです。 全ての条件で確認したわけではないので、不具合がでるのかどうかまではわかりませんが、リンクを設定しても動作するように思われます。 似たような記述がいろいろあるので、class="bx-viewport"内のものが拡大画像に該当すると思います。（念のため）
こんにちは。 一冊目（選択）のvalueを未選択にして動くソースにしました。 price2 = price2 !== "未選択" ? 400 : 0; というところで制御しています。 price2が未選択以外の場合はprice2を400、未選択の場合はprice2を0とする動きです。 function keisan(){ // 設定開始 // 商品1 var price1 = document.form1.goods1.options[document.form1.goods1.selectedIndex].value * 500; // 商品2 var price2 = document.form1.goods2.options[document.form1.goods2.selectedIndex].value; price2 = price2 !== "未選択" ? 400 : 0; // 商品3 var price3 = document.form1.goods3.options[document.form1.goods3.selectedIndex].value; price3 = price3 !== "未選択" ? 400 : 0; // 合計を計算 var total = parseInt(price1) + parseInt(price2) + parseInt(price3); // 設定終了 document.form1.field_total.value = total; // 合計を表示 } 試してみてください。
phpを利用なさっていらっしゃるのなら… クッキーの読み書きをphp側から行なえば、スクリプトを使う必要はなくなるのでは？ （スクリプトは、ユーザがオフにしていると動作しません） いずれにしろ、【input.php】ではphp側でクッキーを操作（読み取り）しなければならないようですので。 http://www.sakura-pc.jp/php/cookie.shtml http://gihyo.jp/dev/serial/01/start-php/0006 http://www.php.net/manual/ja/features.cookies.php
ご質問の内容が、よくわかりませんが… 普通に関数化しておいて呼び出すとかではダメなのでしょうか？ $(function(){ 　hoge('aaa', 'bbb'); 　hoge('ccc', 'ddd'); 　hoeg('eee', 'fff'); 　function hoge(a, b){ 　　var $value1 = $(a); 　　var $value2 = $(b); 　　//処理内容 　} });
回答がないみたいなので… ざっと見ただけなので、アイデアのみですが、 どのようなオプションで使用なさろうとしているのか不明ですが、autoplayでも矢印のクリック時も内部のnavigateメソッドを利用しているようですので、ここでprevとnextをひっくり返してあげれば、比較的簡単に移動方向を反転できるのではないでしょうか？ （↑）だと、HTMLソースの順はもとのままなので、最初に（左開きの）最終ページから記述していくことになります。 そして初期設定で最終ページ（左開きの最初のページ）を表示するようにセットしてあげれば、一応、左開きになりそうな… おっと、矢印をクリックした時のnavigate方向も逆転しておかないといけないですね。 （逆転を逆転するので、結果的に元の方向になる） ソース記載順を最初のページからにしたければ、bookblockの初期設定の前に対象部分の順序を逆転するスクリプトを付加えて、順序を変えてからイニシャライズすれば記載順も変えることができそう。 要素内のclass="bb-item"の要素を後ろからappendしてゆけば、逆順に並べ替えることが可能です。 ボタンクリックなどでページを指定する部分については、見ていませんが、同様に換算処理をしてあげるようなことで可能ではないでしょうか。 いずれにしろ付け焼刃的なカスタマイズなので、ちゃんとやるなら、内容をきちんと解析して修正するのがよろしいかと思います。
検索してみればすぐに見つかると思いますが、そのスクリプトはこちらではないでしょうか。 http://www.gmarwaha.com/jquery/jcarousellite/ 設置方法や機能の解説もありますので、そちらでしらべるのが一番確実でしょう。 検索してみれば、日本語の説明サイトもいくつかあるようです。
A No5です。 処理の意図を読み違えていたかもしれません。 （どのようなHTML構成に対して、どのような処理を意図しているのかわかりかねますので…） 　var photo = $("photoBox > li", this); ではなくて、「each」の処理をはずして、 　var photo = $("photoBox > li", $(selector)); とするのが、質問者様の意図に近いのかも…？
こんにちは。 <script type="text/javascript"> <!– $(function(){ $("#leftcontent").load("shopmenu.html"); }); // –> </script> ではなくて <script type="text/javascript"> <!-- $(function(){ $("#leftcontent").load("shopmenu.html"); }); // --> </script> です。 <!-- //--> これで括ります。 (くくらなくてもほぼ大丈夫ですけどね）
あ、すみません if(typeof　変数 === "undefined"){ は正しかったです if(変数===undefined){ typeof付けない場合はこうです誤答すみません
スライドショーのスクリプト（ライブラリ）はたくさん作成されています。 画像（img要素）を対象としているものも確かに多いですが、 例えば、 　<ul> 　　　<li><a href=～～><img src=～～></a></li> 　　　<li><a href=～～><img src=～～></a></li> 　　　<li><a href=～～><img src=～～></a></li> 　　　　　　　・　・　・　・ 　</ul> のようなHTML構造でli要素をスライドするようなタイプのものを探せばそのまま利用できそうですね。 設置対象として可能な要素構造をチェックする必要があるので、少しだけ面倒ではありますが、それなりの割合で発見できると思います。 もしご自分で作成するつもりがおありならば、上記のような構成 （リスト以外でも良いですが）でスライドさせればよいのではないでしょうか。 適当に探してみたそれらしきものの例を… 　http://bxslider.com/ （↑はいろいろ機能のオプションがあるので、スライドしたりフェードしたりできるようです。） 他にもたくさんあると思いますので、気に入ったものを検索してみるのがよろしいかと思います。
A No1です。 ＞8行目は ＞if(parseFloat(val) >= 1) total++; ＞ですよね。 はい。ご指摘の通りです。　大変失礼いたしました。 （手動インデントの際に消してしまったらしい…） ＞しかし、formに出力されない。 こちらでは、「Adobe Acrobat 9 Pro」で一応動作の確認をしています。 表示されない原因として、すぐに思いつくのは、 1） フィールド名が合致しない（又は存在しない）などで、エラーとなり 　　実行が中断されている。 2）そもそも、スクリプトに処理が移っていない。 あたりではないかと。 1）は、[1_total]～及び[nissuu]を確認して、スクリプト中のmaxNoを小さくして実行させてみれば確認できそうです。 2）は実行のタイミングをどのように設定していらっしゃるかによるので、こちらではわかりかねますが、スクリプトの最初に仮のフィールドに出力するとか、あるいはalert表示（　app.alert("calculating…");　とか）をさせてみるなどで、スクリプトが実行されているかの確認ができるかと思います。 Acrobatに、デバッグ用のコンソールが附属しているようですので、使い方をご存知であれば原因の確認に役立つのではないかと思います。（私は使ったことがないので、使用方法を知りませんけれど・・・）
> 別の既存のtextやtextareaに反映する方法が解りません。 出力対象の input 要素に id 属性を付けると、 <input type=text id=hogehoge> スクリプトは id を利用して input 要素を取得できます var obj = document.getElementById('hogehoge'); obj.value = GuideSentence; 注意点として、id 属性はページ内で重複する値を指定できません。
どのようなＣＳＳになっているのか不明ですが、画像の順序を入替える方法を用いているようなので、ボタンの順序との照合をするのに面倒になりませんか？ 表示状態を変えるのには、スクリプトで直接対象要素のスタイルを変更するか、または、スタイルはＣＳＳで事前に定義しておいて要素のクラス設定を変えることで表示状態を変化させるなどの方法が考えられます。複雑なスタイル設定だたりすると、スクリプトでいちいち変更するのが煩雑ですし、その内容を変更したい時に毎回スクリプトを修正するのもいやでしょうから、後者の方法の方が良いのではないでしょうか。 個人的に要素の順序を入替えるのは好みで無いので、他の方法を使ってますが、参考までのサンプルに。 （おまけで、ボタンをクリックすると対応する要素が表示されるようにしてあります。） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #test1 { height:100px; } div.images { position:relative; height:100%; } div.images img { position:absolute; left:0; height:100%; } div.buttons button { height:2em; width:2em; } div.buttons button.active { background-color:#c44; color:#fff; } #test2 { height:200px; margin-top:100px; } #test2 button { background-color:#fff; color:#00f; } #test2 button.active { background-color:#44c; color:#0f0; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ var changer = function(id, speed, delay){ 　var intervalId, active = "active"; //ボタン自動作成 　var div = $("<div class='buttons'></div>"); 　$(id).append(div); 　$(id + ' div.images img').css("opacity", 0).each(function(index){ 　　div.append($("<button type='button'>" + (index+1) + "</button>")); 　}); //指定要素表示関数 　var setDisplay = function(index){ 　　$(id + ' img').stop().animate({opacity:0}, speed) 　　　.eq(index).stop().show().animate( {opacity:1}, speed); 　　$("button", div).removeClass(active).eq(index).addClass(active); 　} //自動フェードイン/アウト設定 　var setAutoChange = function(){ 　　return setInterval(function(){ 　　　var b = $("button", div); 　　　var index = (b.index(b.filter("." + active)) + 1) % b.length; 　　　setDisplay(index); 　　}, delay); 　} //クリック処理定義 　$("button", div).click(function(){ 　　clearInterval(intervalId); 　　setDisplay($("button", div).index(this)); 　　intervalId = setAutoChange(); 　}); 　setDisplay(0); //初期表示 　intervalId = setAutoChange(); } changer("#test1", 1500, 4000); changer("#test2", 2000, 3000); }); </script> </head> <body> <div id="test1"> <div class="images"> <img src="./img/aaa01.jpg" alt="ホーム"> <img src="./img/bbb02.jpg" alt="ホーム"> <img src="./img/ccc03.jpg" alt="ホーム"> <img src="./img/ddd04.jpg" alt="ホーム"> </div> </div> <div id="test2"> <div class="images"> <img src="./aaaimg/01.jpg" alt=""> <img src="./bbbimg/02.jpg" alt=""> <img src="./cccimg/03.jpg" alt=""> </div> </div> </body> </html>
上位階層の変化が、段階的に末端まで伝達される仕組みが必要です。 ちょっとアレンジを入れて書いてみました。 <!DOCTYPE html> <style> .hideAtFirst { display:none } </style> <script> window.onload = function(e){ var form = document.forms['formName']; var namL = form.elements['largeName']; var rest = form.elements['back']; function each(pref, f) { var elms = form.elements; for (var i = 0; i < elms.length; i++) { var s = elms[i]; if (s.name.indexOf(pref) == 0) f(s); } } rest.onclick = function(ev) { namL.selectedIndex = 0; selMiddle() }; // 大分類の初期化して、下位に伝達 namL.onchange = function(ev) { selMiddle(namL.value) }; // 大分類の変更を、下位に伝達 function selMiddle(name) { // 大分類の変更を中分類に伝達 var keyword = 'middleName_' + name; var nextval = null; each('middleName_', function(e){ var hit = (e.name == keyword); e.className = hit? 'showLittle': 'hideAtFirst'; if (hit) { e.onchange = function(ev) { selSmall(e.value) }; nextval = e.value; } }); selSmall(nextval); // 下位に伝達 } function selSmall(name) { // 中分類の変更を小分類に伝達 var keyword = 'smallName_' + name; var nextval = null; each('smallName_', function(e){ var hit = (e.name == keyword); e.className = hit? 'showLittle': 'hideAtFirst'; if (hit) { e.onchange = function(ev){ dispResult(e.value) }; nextval = e.value; } }); dispResult(nextval); // 下位に伝達 } function dispResult(name) { // 小分類の変更を結果に伝達 var keyword = 'result_' + name; var ress = document.getElementById('results').children; for (var i = 0; i < ress.length; i++) { var s = ress[i]; var hit = (s.id == keyword); s.className = hit? 'showLittle': 'hideAtFirst'; } } } </script> <form name="formName"> <select name=largeName> <option value="">種類を選択してください<option value="food">食べ物<option value="drink">飲み物 </select> <select class=hideAtFirst name=middleName_food> <option value="">食べ物を選択してください<option value=fruit>果物<option value=vegetable>野菜 </select> <select class=hideAtFirst name=middleName_drink> <option value="">飲み物を選択してください<option value=soup>スープ<option value=juice>ジュース </select> <select class=hideAtFirst name=smallName_fruit> <option value="">果物を選択してください<option value=apple>1.リンゴ<option value=orange>2.オレンジ </select> <select class=hideAtFirst name=smallName_vegetable> <option value="">野菜を選択してください<option value=pumpkin>3.カボチャ<option value=potato>4.イモ </select> <select class=hideAtFirst name=smallName_soup> <option value="">スープを選択してください<option value=miso>5.みそ汁 </select> <select class=hideAtFirst name=smallName_juice> <option value="">ジュースを選択してください<option value=mix>6.ミックスジュース<option value=grapefruit>7.グレープフルーツ<option value=tomato>8.トマトジュース </select> <button name=back type=reset>リセット</button> </form> <div id=results> <div id="result_apple" class=hideAtFirst>果物：1.リンゴ　120円</div> <div id="result_orange" class=hideAtFirst>果物：2.オレンジ　80円</div> <div id="result_pumpkin" class=hideAtFirst>野菜：3.カボチャ　210円</div> <div id="result_potato" class=hideAtFirst>野菜：4.イモ　40円</div> <div id="result_miso" class=hideAtFirst>スープ：5.みそ汁　50円</div> <div id="result_mix" class=hideAtFirst>ジュース：7.ミックスジュース　180円</div> <div id="result_grapefruit" class=hideAtFirst>ジュース：8.グレープフルーツジュース　150円</div> <div id="result_tomato" class=hideAtFirst>ジュース：9.トマトジュース　160円</div> </div>
こんにちは。 <div id="contentsleft">の中の<img>を取得したいのであれば img#contentsleftではなくて #contentsleft imgではないでしょうか？
主にサーバーサイドの話でしょう 例えば簡易掲示板で、名前をクリックすると本文がalertされるものを作ったとします そこで alert("内容") とすると 内容が 「"+(function(){code})()+"」だと aler("t"+(function(){code})()+"") となって任意のコードを埋め込まれてしまうということです 本人が書き込んだ内容を本人のみに適応する場合はいいですが 第三者も見えるHTMLコードになる場合は気をつけてください
> 個別に指定すると同じアドレスを一枠に複数書くことになる 個別に指定することを強くお勧めします。 しかしそれでもやりたいのなら、参考URLにてヒントが見つかるかもしれません。 参考URL：http://www.google.co.jp/search?q=display+table-c …
すいません、画像の表示位置を忘れました。 document.getElementById("m").style.left document.getElementById("m").style.top でも指定できますが、スタイルシートで決めました。 <body> <input type="button" value="表示" onclick="strt()"> <img src="aaaa1.jpg" style="visibility:hidden;width:300px;height:200px;margin-left:200px;margin-top:200px;" id="m" /> <script type="text/javascript"> var img = new Array(); img[0] = new Image(); img[0].src = "aaaa1.jpg" img[1] = new Image(); img[1].src = "bbbb2.jpg" // プレゼント画像を描画 var r=0;//ランダムの値 function hyouji() { r = Math.floor((Math.random()) * 2);//ランダムの値 の生成 //画像を表示する document.getElementById("m").style.visibility = "visible"; //ランダム値によって画像を変更する document.getElementById("m").src = img[r].src; } //タイマーで画像のhyouji()を3秒ごとに呼び出す function strt() { setInterval("hyouji()", 3000); } </script> </body> 画像の配列は2段がまえにしてね。 あとint rはjavaとかc#の場合ですね、気持ちはわかりますがjavascriptの場合は付けないみたいです。
演算が行われる度に イベントリスナが Ans.click(function(){ で登録されているからです 新しいイベントリスナを登録しても 古いのが消えたりはしません どんどん溜まっていき、１回のクリックでいくつも呼ばれることになります その結果 １番目に呼ばれたイベントリスナで reply_02 = leftFml_02 - rightFml_02; が例えば 30 - 10 で reply_02 に20が入りinputZが20になります 次は inputZがrightFml_02になり、leftFml_02 は nullになっているので null - 20 で inputZが-20になります もしイベントリスナが３つ登録されていれば さらに null - -20 となって 20に ４つならば また-20になります こういった現象がおきています 簡単なのは unbind("click") を全ての Ans.click(function(){ の前において イベントリスナをクリアすることです
すいません、再びです。もしｐｈｐをご使用になられる場合のためにｐｈｐ側のタグのサンプルとｐｈｐ側のサンプルファイルの全文を掲載しておきます。 ＃タグは下記のように送信が完了したら、スタートページに戻るボタンのタグです。 <input type='button' value='戻る' onclick='top.location.href=\"index.html\"' > ＃もし、レンタルサーバーにアップロードする場合は「PHP可」と書いてあってもメール送信が出来ないところもありますので注意してください。 ＃$from（送る人のメールアドレスも入れないとエラーになってしまいます。）できれば <input　name="mail" class="form-textline01" maxlength="100" value=""type="text"> の"mail"でポストしてください。 ＃UTF-8とかJisとか何も指定しないと、結構文字化けしますのでできればサンプルのように指定してください。 PHP側のサンプルの全文です。 <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>phpメール</title> </head> <body> <?php mb_language("japanese"); //各値 $to ="送信先メールアドレス"; $subject = "テスト"; $b=$_POST['hi'];//合計金額 $c=$_POST['properties'];//checkboxの値'<input type='button' value='戻る' >' //checkboxの配列をforeachする foreach ($c as $d){ @$body.=$d; } $body.=$b;//checkboxの値に合計金額をたす $from ="送るひとのメールアドレス"; //メール送信 if (mb_send_mail($to,$subject,$body,"From:".$from)){ echo "メールが送信されました。"."<input type='button' value='戻る' onclick='top.location.href=\"index.html\"' >"; } else { echo "メールの送信に失敗しました。"; } ?> </body> </html>
CrossSlideは全く使ったことがなく、この質問で初めて知ったものですが、 記載のコードをそのまま動かすと CrossSlide: container element does not have its own width and height というエラーメッセージが出力されました。 ですので、widthとheightを設定すればいい、というかしなければいけないと思います。 また、CrossSlideを適用する要素に他の要素を入れてもimg要素のみになってしまうようです。
<script> が原因ですね。 もっと簡単に elements を全て調べれば良いのではないでしょうか。 値を読み取る対象を限定さえすれば、事故は起きないでしょう。 <script> function ttlValue() { var inps = document.nForm.elements; var chn = inps.length; // 総数はこれで取れる var ttl = 0; for(var i=0; i<chn; i++) { var inp = inps[i]; if(inp.checked || inp.options) { // 選択された radio / 選択された checkbox / select に限定 ttl += parseInt(inp.value); } } document.nForm.result.value = ttl; } </script> 余談ですが、コーディングに際しては以下を心がけてください。 変数の var 宣言をちゃんと付ける - 名前空間汚染によるバグ回避 二回以上使う値は変数にする - 読み易くなりロジックが明確になる、そして性能向上 eval を安易に使わない - 安全性と性能とデバッグ都合のため
クリックされたら何かをするのような処理は JavaScript初級から中級の非常に大きなポイントであり、 いろいろやり方があります このような漠然とした質問に対して本当にきちんと解説しようと思ったら 入門書を作れるくらいの人が入門書を作るくらいの気力をかけないといけません 例えるなら x^2+3x+2=0 はどうしたら解けますか？と聞かれたら 途中式を挙げるだけですみますが 二次方程式はどうしたら解けますか？と聞かれたら どこからどう説明していいのか困るのと同じです 解の公式を教える手もありますが 中学生が最初から解の公式を習わないのと同じで、 物事には段階があるのです 逆にそういったことは入門サイトや入門書を見ていると早いうちに絶対に出てきますから 焦らずに入門の項目をこなしていけばきっとわかります その項目を終えたあと、 具体的にわからないことがあれば具体的なソースで質問してください
こんにちは。 試していないので実際にどう動くかわかりませんが <input type="submit" value="送信" onclick="DisableButton(this);"> とか呼んでいますか？ そうするとDisableButtonの中でまたformをsubmitしている気がします。 <input type="button" value="送信" onclick="DisableButton(this);"> にしてあげれば解決するかもしれません。 ＊type="submit"にonclickでさらにsubmitしたことが無いのでどう動くかわかりませんが、 もしtype="submit"になっているならtype="button"にして試してみてください。
アクセス解析を導入すればコンバージョンは取れると思いますが、javascriptやphpなどのサーバーサイドプログラムを書かない限りは売上計測まではできないと思いますよ。仮にそのような都合のよいサービスがあったとしても、オリジナルカートである以上は、必ず何らかの改変が必要になるはずです。
ごく単純なタイポでは？ ＞　"Text13,"Text14",
実際がどうなっているのかわかりませんが、ご質問文の状況から推測すると、（lightboxが機能していなくて）クリックした時は通常のリンクタグの機能としてリンク先が表示されているだけのように思えます。 　＞ <a href="55big.jpg"rel="lightbox[2012]" title="タイトル"><IMG SRC="55.jpg"BORDER="0"></a> これから、現象から推測するとjsファイルが正しく読み込めていないのではないかと懸念されます。 サーバへアップ後の、各jsファイルやフォルダの位置関係とscriptタグ内のアドレスは正しく調整できているでしょうか？ このあたりが一番怪しそうなので、再チェックなさることをお勧めします。
ブラウザのコンソールを開いて実際にファイルが読み込まれているか、 またそれらしいスクリプトエラーが出てないか確認してください ChromeならF12キーです
エラーが起きて complete : function(xmlHttpRequest, textStatus) { の方でなく error: function(XMLHttpRequest, textStatus, errorThrown) { が呼ばれているんだと思います あと、こんなコードは誰も読む気がしないと思いますよ もっとサッパリしたコードを書いた方がいいです それが今回の問題を分かりにくくした原因でもありますしね
こんにちは。 データは配列で持つことにします。 すると以下のようになります。 // マーカー用の名称 var MAKS = new Array('品川マーカー','お台場マーカー','麻布十番マーカー'); // 吹き出しに表示する内容 var CONS = new Array('品川駅のInfoWindow','お台場があるよと書き出すInfoWindow','麻布十番のInfoWindow'); // 座標(LAT) var LATS = new Array(35.630152,35.629899,35.654682); // 座標(LNG) var LNGS = new Array(139.74044000000004,139.778779,139.73705100000006); for ( var i = 0; i < CONS.length; i ++ ) { // CONSの数分のループ処理 var marker1 = new google.maps.Marker ({ // LAT,LNGを取得 position: new google.maps.LatLng(LATS[i],LNGS[i]), map: map, // マーカー用の名称をセット title: MAKS[i] }); // イベントを登録するマーカーと吹き出し用のコメントを引数として呼び出す addMarkerEvent ( marker1, CONS[i] ); } function addMarkerEvent ( marker, contents ) { var infoWindow = new google.maps.InfoWindow({ content: contents, maxWidth: 200 }); google.maps.event.addListener ( marker, 'click', function() { infoWindow.open ( map, marker ); }); } こんな感じです。どうでしょうか。 配列にはそれぞれの順番でセットします。 上の例ですと1番目が品川関係、2番目がお台場関係、3番目が麻布十番関係となります。 それをforのループで回して一つずつ取り出しながら処理を行います。 marker2とかmarker3とか別々の変数(箱)を用意するのではなくひとつの箱(カラーボックスみたいなもの)から取得するようにするイメージです。 箱の何番目の棚という取得が出来ます。
文章の読解力に乏しいので、ご質問文の内容をあまり理解できてませんが… 勝手な想像で、以下のような感じで動作しませんか？ 　・リンクをクリック → 通常のイベントが発生 → アラート表示 　・ボタンをクリック → fireeventでイベントを発生 → アラート表示 （一応Ｉ、Ｅ6.0で動作を確認） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> </head> <body> <p id="trriger"><input type="button" value="Event Fire!"> <script type="text/javascript"> //要素を生成 var link = (function(){ 　var link = document.createElement("a"); 　var p = document.createElement("p"); 　link.appendChild(document.createTextNode("Created Text")); 　link.href = "#"; 　p.appendChild(link); 　document.getElementsByTagName("body")[0].appendChild(p); 　return link; })(); //イベントを設定 link.attachEvent('onclick', function(e){ 　alert("Link is clicked!"); }, false); document.getElementById("trriger").attachEvent('onclick', function(e){ 　var evt = document.createEventObject(); 　evt.button = 1; 　link.fireEvent ("onclick", evt); }, false); </script> </body> </html>
万能過ぎるフレームワークです 一応ライブラリなのですが、jQuery自体のライブラリも多く存在し 別言語とまでは言いませんが一種の派閥を作っています 要件によってはプログラミングということを意識せずに CSSのような感覚でアニメーション等を作成できます しかしあまりに頼ると当然プログラミングの力は付きません テンプレート的なことしかできなくなります ちょっとした改良や不具合の対処もできないでしょう
う～～ん いろいろ疑問点が多いのですが… 　・HTMLで定義されている、onchangeは意味があるのだろうか？（エラー出てませんか？） 　・select要素の値は、通常はvalue値を利用すると思うのだけれどなぜtextなのか 　・これだけクラス設定とかあればidを設ける必要もなさそう 　・どうやって配列定義をしているのか不明だけれど、都道府県の選択肢は2個限定？ 　　（それぞれ、違う変数になっているみたいですけれど） まぁ、それは別として、 ＞または2つとも選択せずに検索を押すと、「undefined」と出てしまいます。 2つに値が設定されていることをチェックすればよろしいかと。 チェック方法はいろいろ考えられますが、各optionの最初のものは選定対象外（【選択の標記】）になっているとするならば、それ以外が選択されていればOKということで 　if( $("#pref").attr("selectedIndex") && $("#sikuchoson").attr("selectedIndex")) みたいな条件判定でいけるのではないでしょうか？ きちんとやるなら値を確認してってことになるのかも知れませんが、value値には何も入って無い様なので…
Feedはわからないので多分ですが、 a.href = entry.link ; の後あたりに a.target = "_blank"; を入れればいいのではないでしょうか。
ご提示のコードからではpArrayに何がはいっているのかよくわかりませんが… それとは別に、animateの設定で 　complete:aaa() だと、アニメーション定義時にaaaが評価されますので、アニメーション開始時にalertが出ます。 ループ処理とは基本的に関係はないでしょう。 ご希望のようにしたいなら、 　complete:aaa とするか、 　function aaa(){ 　　 return function(){ alert("完了");} 　} とするなどで実現できませんか？
JavaScriptとはプログラミング言語です ソフトではありません 元々Windowsによく似たJScriptの実行環境がありますし ブラウザ等にそれぞれ実行環境が乗っており また、マクロとしてもよく使われます それらは同じJSでもできることと書き方はやや違います 具体的な質問をしていただかないと答え用がありません
＞どういったソフトがあればできますか？ メモ帳
$(function(){ $("#myTable,#myTable2").tablesorter(); });
動作確認していませんが、この記述でいかがですか function todofukenSet(){ var pref = document.selbox.todofuken.selectedIndex; var opts = document.selbox.kuchoson.options; var citiesList = [ [], // 後の処理を簡単にするためのダミー情報 tokyo_todofuken, kanagawa_todofuken, chiba_todofuken, /*以下略*/ ]; var cities = citiesList[pref]; for (var i=0; i<cities.length; i++) opts[i].text = cities[i]; for (var i=cities.length; i<74; i++) opts[i].text = ""; }
A No1、2です。 ".textareabox"の動作のheight:"toggle", opacity:"toggle"は、要素の状態に応じてtoggleされますので、イベントの処理をtoggleで行う必要はないでしょう。 一方で、hoge1は自分自身が動作対象でありながら他にもトリガーが存在するために単純にtoggleでは処理しにくいことになっています。 結局のところ、textareaboxもhoge1もwidthはhoge1の状態に応じて処理内容を決め、height、opacityはtextareaboxに対してのtoggleで処理すればよいことになりませんか。 ＞つまりこの場合flagを2つ作れば良いということですかね？ 2つでもよいですが、hoge1の状態が判定できさえすれば良いように思えます。 例示のようにflagなどの状態変数を作成する方法が汎用的と思いますが、変数を使わずに直接要素を調べて判断する方法もあるでしょう。 $(".hoge1, .hoge2").click(function(){ var f = $(".hoge1").css("width") == "150px"; $(".hoge1").animate({width:f?300:150}); $(".textareabox").animate({width:f?250:150, height:"toggle", opacity:"toggle"}); }); 書きっぱなしなので、動作確認していません。 　.css("width")の戻り値が単位付きだったかどうか記憶していませんが、こんな考え方でもご希望の処理ができると思います。 あと、更に言うならば、回答の例やご提示の処理も含めて、アニメーション中に次のイベントが発生した場合の対処を記述しておいたほうが、より良い記述となることでしょう。
＞　5秒後ではではなくて、最初から新しい画面が表示され、ブリンクも起きないようにしたいです。 再表示によるブリンクは、ページ全体を再読込するため発生しているのではないでしょうか。 ページ全体を再読込するのではなく、Ajaxを使って更新が必要な部分だけを定期的に書き換えるようにするといいのではないでしょうか。
こんにちは。 sectionを取得したのと同様にやれば良いと思います。 $(this).find('span').text() これで「大阪」が取得できます。
コードを解析して親フレームのウィンドウサイズを取得し放り込むのが良いのかと思いますが 多分、複雑な上に難しいかと思いますのでcssを無理やり変更する形で…… #sb-wrapper { position: absolute; visibility: hidden; width: 100px; top: 50px !important; } iframe内、画面の上から50pxに表示されるかと…… 画面の中心に必ず持って行きたい！、と言うことであれば shadowboxのcssからsb-wrapperへのstyleを削除し、 jqueryもしくはjavascriptで親フレームのサイズを取得して 全てのstyleを指定してやらないといけないかと思います。 別方法としてiframe内ではなく 親でjqueryを持っておき、子でトリガーされたら親側で実行するようにするとか……
サムネイルがあるのでしょうから、簡単そうな方法のひとつとして、拡大表示中のサムネイルにactiveなどの（なんでもよいですが）クラスを設定しておいて、矢印がクリックされたら、その次／前の画像を拡大表示してあげるというのが考えられます。 クラス設定をしなくても、拡大表示中の画像の順番（インデックス）を変数に記憶しておくような方法でも同様に処理ができるでしょう。 他にも、いろいろ方法はあるとおもいますが、ご参考まで。
JavaScript にクラスは無いので、C++/Java の様にクラスっぽい何かを実現して、コーディングを楽にさせようという、一部の技術者が使う隠語ではないかと推測します。 例を書いてみました。 /** 基底クラスの様な何か. */ function Man() {} Man.prototype.punch = function() {/*パンチを繰り出す処理*/}; Man.prototype.think = function() {/*ものすごい長い処理*/}; /** 派生クラスの様な何か. */ function UltraMan() {} UltraMan.ptototype = new Man(); // 基本的に Man と同じ UltraMan.ptototype.beam = function() {/*新必殺技の処理*/}; /** 派生クラスの派生クラスの様な何か. */ function SuperUltraMan() {} SuperUltraMan.prototype = new UltraMan(); // 基本的に UltraMan と同じ SuperUltraMan.prototype.punch = function() {/*強いパンチを繰り出す処理*/}; var mans = [ new Man(), new UltraMan(), new SuperUltraMan() ]; // Man 達に同じ命令をする mans.forEach(function(man){ man.think() }); // クラスの凡化を実現 mans.forEach(function(man){ man.punch() }); // クラスの多様性を実現 // Man 達の中から特定のクラスに分類される Man を抜き出して、同じ命令をする mans .filter(function(man){return man instanceof UltraMan}) .forEach(function(man){ man.beam() }); // UltraMan に分類されるなら実行できる処理 しかし JavaScript はあくまでもプロトタイプベースのオブジェクト指向言語ですので、この方向に深入りすると危険です。あくまでも、こんな書き方もできる程度の軽い気持ちでいてください。
タブメニューとか言われるものですかね。 http://5am.jp/jquery/jquery_ui_tabs/ 他にも検索すれば参考サイトはいっぱい出てくると思います
ご提示のサンプルを追いかけてみましたが、問題はこの部分でした。 style='position:absolute;top:" + h + ";left:" + w + ";' 直すとしたらこのような感じ。数字の末尾に単位 px をつけています。 style='position:absolute;top:" + h + "px;left:" + w + "px;' CSS で長さや位置を示す際は、必ず単位をつけなければならないのですが、 HTML は数値だけの場合はピクセル(px)を想定するようです。 が、XHTML は厳格に書式を指定しないとエラーとする、が信条ですので書式エラーと見なして無視されます。 ゆえに位置がみな同じところに表示される様でした。 それにしても、このサンプルの内容ですが... 正直いけてないので模倣するのは止めた方がよろしいかと思います。 ブラウザ互換性とか、もうちょっと汎用的に利用できるようにするとか... というわけで jQuery とか如何ですか?
プログラムは勉強するものではなく経験するものである、と思っています。 いま入門書を読んでの勉強に行き詰まりを感じているのなら、 いったん本を捨てて、実際に役に立つモノを、へたでも適当でもいいから、 とにかく書いてみることをオススメします。 例えば、 文字コードから文字を知りたい RPGでキャラ名に使うカタカナ4文字の名前を考える 文章をシーザー暗号で暗号化と復号化 派手に装飾したメール著名テキストを生成 マインスイーパ その後であらためて入門書に戻って理解を深め、 今まで書いたものを、もっとキレイに、効率よく、バグの無いソフトに書き直す。 この作って試して捨てて作り直す過程を3ヶ月も繰り返せば、 技術が本当の意味で自分のものになっていると思います。 JavaScript + HTML はプログラム環境としてかなり優秀ですので がんばって自分のモノにしてください。
オブジェクト HTMLOptionElement のプロパティ selected に 値 true を設定しても駄目な環境があります。 すべての環境で動かす場合は、値 "selected" を指定するとよいでしょう。 objD.options[i].selected=true; ↓ objD.options[i].selected="selected"; たしかに現在のDOMの定義では boolean 型なので true を入れたいところではありますが、 かつて XHTML を策定するときに決定された方針が 「HTML で値を指定しない属性は、属性名と同じ値を設定すること」 だったので、古い実装では true を除外する現象が起きます。携帯電話とか。 余談ですが、このケースなら window.Option 関数の第四引数で true/false を指定したほうが簡単だと思います。
CPUsItem = machineCPUs.item(loop); ↓ CPUsItem = machineCPUs.item(i); 資料コピペでミス恥ずかしい
enchant.jsね。 ダウンロードされてますよ。 .jsの部分が拡張子だから、表示されてないだけですよ。 そのなかの2つあるenchantで、一つはenchant.jsでもう一つはenchant.pngです。 拡張子を表示させる設定にしておいた方が幸せになれますよ。 http://mizushima.ne.jp/VISTA/extension/extension …
回答がないみたいなので… このあたり（↓）が原因ではないでしょうか？ 確認してみてください。 http://oshiete.goo.ne.jp/qa/1501048.html http://fstyle.ddo.jp/archives/2006/04/javascript … http://bowz.info/1361
GalleryViewというライブラリは知りませんけれど、ＣＳＳの設定でできるのでは？ デモサンプルにもあるみたいなので、こちらをご参考に。 http://spaceforaname.com/galleryview/demo-positi … http://spaceforaname.com/galleryview/demo-showal …
こんにちは。 <label>内にradioが入ったのであれば var $hidden = $(this).parents('td').find('input:hidden'); で取得できます。 クリックされた親要素のtdまで遡り、その中のinput type="hidden"を取得するという動きです。 var $hidden = $(this).parent().parent().find('input:hidden'); でも行けます。
こんにちは。 ＞特に「１」は必須事項です。 とのことなので１のみですが・・・ 以下のどちらのやり方でも可能かと 　・初期設定でselectedのクラスを設定しておく 　・スクリプトで設定後にクリックを行なう ２番目の方法は、設定のスクリプトにチェーン・メソッドで、 　.filter(":lt(2)").click(); みたいな感じ。 （上記の場合だと最初の２項目が対象） ２は、ご質問通りで、「メニューを変更したらその状態をクッキーに保存。」 「ページの読み込み時にクッキーを調べ、その状態にセットする。」 といった部分を追加すればよろしいかと思います。 クッキーの読み書きについては、検索すれば情報がたくさんみつかるはずです。
idのついたselectは最初から定義されているのでしょうか？ またnameのないselectやvalueのないoptionでよいのでしょうか？ たとえば、こんな感じ <script> var profile = [ {"name":'Aさん',"tall":'150cm',"like":'映画'} ,{"name":'Bさん',"tall":'160cm',"like":'野球'} ,{"name":'Cさん',"tall":'170cm',"like":'テニス'} ]; window.onload=function(){ var n=document.getElementById("Namesct"); for(var i=n.options.length -1;i>=0;i--){ n.removeChild(n.options[i]); } for(var i=0;i<profile.length;i++){ var opt=document.createElement("option"); opt.appendChild(document.createTextNode(profile[i].name)); opt.setAttribute("value",profile[i].name); n.appendChild(opt); } } </script> <form> <p> <select name="Namesct" id="Namesct"> <option>Xさん</option> <option>Yさん</option> <option>Zさん</option> </select> </p> </form>
ヘルプを眺めながら試してみました。 その結果、yフラグとmgフラグとで「^」の解釈に違いがあることがわかりました。 var text = "a1a2a3a4a5\na6a7a8a9a0"; var regex = /^a[0-9]\n?/y; while(true){ 　　var match = regex.exec(text); 　　if(match === null){ 　　　console.log("End"); 　　　break; 　　} 　　for(var i=0; i < match.length; i++){ 　　　console.log(i + ":" + match[i]); 　　} } yフラグでの実行結果： 0:a1 0:a2 0:a3 0:a4 0:a5 0:a6 0:a7 0:a8 0:a9 0:a0 End →「^」は行頭、または検索の開始位置とマッチ mgフラグでの実行結果： 0:a1 0:a6 End →「^」はあくまでも行頭とマッチ 構文解析を行うのに便利そうです。
ANo1です。 ＞イベントの設置対象を親のリンク要素などにしておく、 ＞というのがいまいち飲み込めないのですが イベント発生対象要素に指定しているものが非表示や透過になったりすると、イベントが発生しなくなったりmouxeoutが発生したりすることになるので、イベントの対象を（操作しない）親要素にしておいた方が良いですという意味です。 ご提示の仕組みですと、最終的にリンク要素の中に２つの画像を重ねておいて、片方をフェードイン、もう一方をフェードアウトするようなイメージだと思いますが、その部分についての簡略化したサンプルを以下に。 ※リンク目的ではないようですので、親要素がリンクタグである必然性はないと思いますが、とりあえずそのまま。 ※サンプルなので、クロスブラウザ等も配慮していません。あくまで考え方のサンプルです。 ※簡略化のためidを設定しています。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #hoge img { width:100px; height:50px; } #hoge img:first-child { position:absolute; opacity:0; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … <script type="text/javascript"> $(function(){ 　var time = 500; 　var changeImage = function(elem, o){ 　　$("img", elem).stop() 　　　.filter(":first-child").animate({ opacity: o}, time) 　　　.next("img").animate({ opacity: 1-o}, time); 　}; 　$("#hoge").hover( 　　function(){ changeImage(this, 1) }, 　　function(){ changeImage(this, 0) } 　); }); </script> </head> <body> <p> <a href="#" id="hoge"> <img src="./img/nav01_on.png" alt=""> <img src="./img/nav01.png" alt=""> </a> </body> </html>
サンプルというよりはライブラリですが、画像を拡大するライブラリがいろいろと作られています。 画像　拡大　image　zoomなどをキーに検索してみれば探せると思います。 例えば、 http://www.hotscripts.com/blog/javascript-zoom-s … 多分、magic zoomというのが比較的知られているのではないでしょうか。 http://www.moongift.jp/2008/04/magic_zoom/ http://www.magictoolbox.com/magiczoom/ http://www.magictoolbox.com/magiczoomplus/
iを初期化する箇所が間違っています。 jのループごとにiのループを回さなければならないのだから jのループの中にiの初期化が無ければ、iが一度5までいったら 二度とiのループの中に入ることはありません。 普通ならこのような場合for文を使いますよ。 for文を使えばこんなバグは作りにくいと思います。 余談ですが「x = x, y = y;」は意味がわかりません。全く不要です。
まいかい おもいつきで すみません。 setInterval のまえに、いかの いちぶんを じっこうしてみてはどうだろうか？ Array.prototype.slice.call (document.getElementsByClassName ('selected'), 0).forEach (function (e) { e.classList.remove ('selected'); });
＞「不特定多数が投稿したJS」をサイト側が実行許可しても、(サイト側としては)特に問題ないということでしょうか？ 問題の無いような方法で、実行しているはずです。 JavaScriptだけだとファイルアクセスもできないしOS機能も呼び出せないので問題は考えにくいですが、ideoneは、各種言語が実行できるので、何らかの方策をとっているはず。
回答No.1さんの書いている通り、同時実行というのは不可能です。 コードは左から右、上から下へ実行されますので。 何をどうしたいのか良く分かりませんが、 複数実行コードを書く必要があるのならＶＢＡでは無理でしょう。 で、同時ではありませんが、テキストボックス2を入力後にEnterキーの入力で テキストボックス2のコードからテキストボックス1のコードを呼び出す事は可能です。 コメント類はありませんが、ちょっと検索などすれば、すぐ理解できる内容です。 ’TEXTBOX1のコード Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) If KeyCode <> 13 Then Exit Sub MsgBox "TEXT1で<Enter>を押しました" End Sub ’TEXTBOX2のコード Private Sub TextBox2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) If KeyCode <> 13 Then Exit Sub MsgBox "TEXT2で<Enter>を押しました" Call TextBox1_KeyDown(KeyCode, Shift) End Sub 上記のコードを実行すると、 TEXTBOX1でEnterキーを押すと「TEXT1で<Enter>を押しました」のメッセージだけが出ますが、 TEXTBOX2でEnterキーを押すと「TEXT2で<Enter>を押しました」のメッセージ後に 「TEXT1で<Enter>を押しました」のメッセージが出ます。 結果、TEXTBOX2からTEXTBOX1を呼び出している事になります。 ちなみに、このコードでは呼出を一方から行っているので問題はありませんが、 TextBox2の「Call」をTextBox1にも書いてしまうと無限ループになりますので注意して下さい。 また、Enterキー入力後はフォーカスも移動します。 他に標準モジュールを使う方法もありますね。 >shell関数なるものを使う場合どうすればいいのしょうか？ 例えば、エクセルに下記コードを書いて実行すると、メモ帳が起動します。 ※何でもかんでも起動できるからと好奇心で変更して実行しないようにして下さい。 　責任は持てません。 Sub Notep() Shell "C:\Windows\Notepad.exe", 1 End Sub これがShell関数です。 簡単に言えば、自分以外のプログラムなどを実行する関数です。 shell関数が分からないのであれば、 出来る限りＶＢＡだけで完結にするのが一番いいと思います。 検証環境:Win XP(SP3) + Excel2007
それを直接実行しても当然動作しませんよ そのJSファイルだけじゃなにもできません 全てのリソースを適切な位置に置いてHTMLファイルに記述してください
セッションストレージに書いて読みだすのが楽 古いIEはもう気にしてはいけない //abc.html <a href="xyz.html" onclick='OC(this)'>○○○</a> <a href="xyz.html" onclick='OC(this)'>△△△</a> <a href="xyz.html" onclick='OC(this)'>□□□</a> function OC(e){ sessionStorage.xxx=e.textContent } //xyz.html addEventLisner('load',function(){ xxx=sessionStorage.xxx })
ANo1です。 ＞あるサイトのサンプルコーディングを参考にして、作ってみました。 単に設置したいだけなら、設置サンプルをそのまま実行してみて動くかどうか試してみた方が早そう。 それで動くなら、そこから変えていけばいいし、動かないなら設置方法を間違えているか、そのライブラリがご使用のブラウザに対応していないとか… jquery.illuminateって全然知りませんが、通常のライブラリではイニシャライズはDOM Ready後に設定するものが多いと思いますけれど、jquery.illuminateは自前で待つようにできているのでしょうか？ 単に設定して動かないというのなら、こちらの方が怪しいですね。 jquery.illuminateの使い方と、設定のしかたを確認してみてください。 ご質問自体が何なのか、よくわからなくなりましたけれど、 ＞rgb2hex（）で「１」が無効のエラーが出ます。 #1の回答は、ご質問文の前半に対する回答です。 CSSの指定方法を言っているのではなく、obj.css('background-color') で返される値はブラウザによって異なる可能性が高いということを言っているだけです。（もちろん指定方法にもよりますが） 一方で、関数　rgb2hex(rgb) はrgb(　)形式しか受付ないようになっているみたいなので、大丈夫？って話。 ご提示の部分だけでは、this値に何が入っているのかわかりませんが（多分DOM要素のjQueryオブジェクトかな）、イニシャライズ時にrgb形式に読み替えて再指定しているのならよいですけれどね。
<a href="#" onclick="SwitchTopic(01)"></a> ただブロックを指定してカーソルをポインターにしたいなら <div style="cursor:pointer" onclick="SwitchTopic(01)"></div> などdivやｐタグでもいい気がします
Androidと一口に言うけどブラウザは同一？ あとAndroid機種によってflashの描画の違いで最前面に出てくる可能性はある chromeブラウザをインストールしたりブラウザ変えてみるのもデバッグとして一つの手 (まぁ、閲覧者にブラウザ推奨させたりするのもアリっちゃアリだけど……) 正直な話、全てのAndroidに対応させようと思うのなら サイトデザイン変える必要あるかもしれない それにmetaでdevice設定書いたりとか、 スマートフォンを意識したサイト作りしてると微妙なcssの差異とかで変わったりするから なんとも言えないところでもある iPhoneだと完全にflash死亡だし……
記事を参考にして書いたのは HelloWeb_main.opener.location.reload(); のところですかね？ コレが何をしているのか、記事の中で説明されているように ”日本語で訳すと、parent（親）の[frames（宣言されているフレーム中）]で「menu（menuと言うフレーム）」の「location（現在位置）」を「reload（更新）」してあげるのです。” という風に説明できますか？ なぜできないのか？ 自分のコードがどう動くのか理解できてないからだと思いますよ。
ｆｍ……まぁie８とかcss3、html5未対応の記述もあるし まーた、IEのバグな気もするんだけど…… keycode取得出来ないなら発想を変えればいいじゃない！ ……てことで考えてみた keydownとkeyup時、入力された項目をチェック byte数と文字数が一致すれば保存し 一致しなければ直前のデータで上書き (※半角文字は1byte、全角文字は2byteあります) <html> 　　<head> 　　　　<script type="text/javascript"> 　　　　<!-- 　　　　　　var beforeData = ""; 　　　　　　 　　　　　　function isMultiByte(){ 　　　　　　　　var strVal = document.getElementById('target').innerHTML; 　　　　　　　　var strByte = strSize(strVal); 　　　　　　　　if(strVal.length == strByte){ 　　　　　　　　　　beforeData = strVal; 　　　　　　　　}else{ 　　　　　　　　　　document.getElementById('target').innerHTML = beforeData; 　　　　　　　　} 　　　　　　} 　　　　　　 　　　　　　function strSize(data) { 　　　　　　　　var byte = 0; 　　　　　　　　for (var i = 0; i < data.length; i++) { 　　　　　　　　　　var c = data.charCodeAt(i); 　　　　　　　　　　if ( (c >= 0x0 && c < 0x81) || (c == 0xf8f0) || (c >= 0xff61 && c < 0xffa0) || (c >= 0xf8f1 && c < 0xf8f4)) { 　　　　　　　　　　　　byte += 1; 　　　　　　　　　　} else { 　　　　　　　　　　　　byte += 2; 　　　　　　　　　　} 　　　　　　　　} 　　　　　　　　return byte; 　　　　　　} 　　　　　　 　　　　　　window.onload = function(){ 　　　　　　　　window.document.onkeydown = function(evt){ 　　　　　　　　　　isMultiByte(); 　　　　　　　　} 　　　　　　　　window.document.onkeyup = function(evt){ 　　　　　　　　　　isMultiByte(); 　　　　　　　　} 　　　　　　} 　　　　// --> 　　　　</script> 　　</head> 　　<body> 　　　　<div id="target" contenteditable="true">test</div> 　　</body> </html>
すでに答えが出ていますが… なさりたいことを正確に把握できていないので少し違うかもしれませんが、例えばボタンをクリックした時の処理を『自分の兄弟要素で直前にあるdivの表示をトグル制御する』とでもしてあげると、要素の位置関係だけで判別できるので、idやクラスによる識別に頼らなくてよくなります。 とはいえ、実際はボタン用のリンク要素とそうでないリンク要素が存在することでしょうから、それらを識別するためにリンク要素にクラスを設定しておくなどは必要かも知れません。（他の方法で識別することも考えられます） idが一意であることは、すでにNo1様がご指摘の通りです。 こんな方法もあるよという、一例までに。 ※ボタン用のリンクは、識別のためhrefを#switchとすることで区別しています。 ※直前のdivは、一応class="ko"であることのチェックもしています。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> div.oya { width:500px;border: 1px solid #555; padding:10px; } div.ko { height:100px;border: 1px solid #aaa; } </style> <script type="text/javascript"> /*@cc_on@*/ document./*@if(1)attachEvent('on' + @else@*/addEventListener(/*@end@*/'click', function(evt){ 　var elem = evt./*@if(1)srcElement@else@*/target/*@end@*/; 　var reg = /\#switch$/; 　if(elem.nodeName!="A" || !reg.test(elem.href)) return; 　reg = /(^| )ko( |$)/; 　do{ elem = elem.previousSibling; } while(elem && elem.nodeType!==1); 　if(elem && elem.nodeName==="DIV" && reg.test(elem.className)) 　　elem.style.display = elem.style.display==="none"?"block":"none"; 　return false; }, false); </script> </head> <body> <div class="oya"><p>親div</p> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> </div> <div class="oya"><p>親div</p> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> </div> <p>複数の子を持つ場合</p> <div class="oya"><p>親div</p> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> </div> <p>入れ子構造の場合</p> <div class="oya"><p>親div</p> 　<div class="ko">子div</div> 　<a href="#switch">ボタン</a> 　<div class="oya"><p>親div</p> 　　<div class="ko">子div</div> 　　<a href="#switch">ボタン</a> 　　<div class="oya"><p>親div</p> 　　　<div class="ko">子div</div> 　　　<a href="#switch">ボタン</a> 　　</div> 　</div> </div> </body> </html>
(1) > AjaxのdataTypeオプションは、PHPからjQueryが受け取るレスポンスのデータタイプのことですか？ はい。レスポンスのデータタイプです。 (2) > dataTypeがjsonpじゃないとクロスドメイン通信はできないのでしょうか？ セキュリティ上の理由（同一生成元ポリシー）から、 クロスドメインでAjaxリクエストを出すことはブラウザによって禁止されています。 そのため、iframeやプロキシ、JSONP、Flash（サーバ側で設定が必要）を使った回避策が考えられています。 XMLHttpRequest Level2を使えばクロスドメイン通信が可能ですが、 サーバ側で設定が必要になります。 (3) > dataTypeがjsonpのとき、……typeオプションをPOSTにしているのにGETのようにパラメータが付くのはなぜでしょうか？ JSONPではJavaScriptがリクエストを投げるのではなく、 HTMLの末尾に以下のようなscriptタグがこっそり追加されます。 　<script type="text/javascript" src="(送信先)?data=..."></script> 外部ファイルを読み込むようになっているためGETが使用されますし、 GETにボディはありませんからURLにパラメータがつきます。
普通にできると思うわよ 何かできなくて困っているなら もうちょっとその辺を細かく質問してくれれば 答えられると思うわ
＞div1の領域の一部に重なって表示している別の要素 重なっている要素のうちの、ある部分ではイベントと判断し、別の部分ではそうでないという意味でしょうか？ 一番簡単なのは、目的に合うようにHTMLの構成を調整してしまうことだと言えますが、そういうわけにも行かないのでしょうから… 方法はいろいろあろうかと思いますが、目的のイベント処理の前にイベントをフィルタリングする関数を作ってあげればよろしいかと思います。 jQueryのmouseenterやmouseleaveも内部で同様のことを行なっているはずで、mouseoverやmosuoutを監視してこれをmouseenterやmouseleaveに判断し直してイベントを発生させているはずです。 ただし、ご質問のケースでは上にある一つの要素内をマウスが移動していても対象範囲内の場合と対象範囲外の場合があって、その場合にイベント処理を使い分けたいのでしょうから、通常のmouseoverやmosuoutの監視だけではうまくいかないでしょう。 よくわかってませんが、想像するところ、#div1のエリア内にマウスがあるか/ないかで判定すれば、ご質問の内容に合うのではないでしょうか。 マウスイベントはバブリングするので、両方の上位要素でまとめて処理を行なっても良いですし、要素が#div1と重なる要素の2つだけに限定できるのなら、重なっている要素内にマウスがある間だけマウスの位置を監視するようにしておいてもよろしいかと思います。 もっと広げて、最上位のdocument要素で常時マウス位置を監視して、document上の対象エリアにあるかないかでイベントの発生を判断するといった考え方もできると思いますが、常時監視の場合、処理がいつも動作する関係から、なるべく負荷のかからない記述にしておく必要がありそうに思います。 その意味からは、特定した要素内にマウスがあるときだけ監視するほうが良いかもしれません。 具体的な監視方法としては、mousemoveなどでマウスの位置と対象要素を監視して、対象エリアに入る/出るが発生した時に、目的の処理（＝もとからのイベント処理）に処理を渡すような、フィルタリング関数を作成しておくといった感じです。 ・・・と、ここまで書いて思いついたのは、 ある範囲へのマウスの出入りを監視すれば良いだけでしたら、一番上に重ねて範囲のみのdivを表示しておき、そのdivに対してmouseover/outを設定しておくという方法でも目的を達せられそうに思います。
ANo1、2です。 ＞応急措置はこれでも十分です。 とりあえずは改善したようですので、原因の想像が当たっていた可能性が高いです。 ＞理想は全てを読み込むまでくるくるローディングですが、 とのことですが、ANo1で回答しましたように、HTML解釈直後に（画像ロードと関係なく）bxsliderのイニシャライズを行なうことで改善するかもしれません。 具体的には、関連するＨＴＭＬの記述直後に、イニシャライズのスクリプトタグを入れてしまう方法です。 多分、現在のスクリプトは 　$(function(){　～　}); の形式になっているのではないかと思いますが、これを 　(function(){　～　})(); のようにして、即時処理にするというものです。 実際に全体がどのようになっているのかがわかっていなので、これでうまく行くという保証はありませんが…
Androidだとインテントを使った方がいいのかもしれませんが、 ひとまず「mailto:……」について紹介します。 <a href="mailto:(宛先)?subject=(件名)&body=(本文)">メールで送る</a> と書けば、リンクをクリックしたときにメーラーが立ち上がるようになります。 件名や本文に日本語を含める場合はURLエンコードしないと、 端末によっては文字化けしたりするかも？ 「mailto スマホ」等のキーワードで検索してみると、さらに情報を得ることができると思います。
お返事が大変遅くなりましたorz そういうことでしたらComboBoxを使わざるを得ませんね……。 ちょっと調査してみたところ、 「dijit.byId("widget_id").textbox」でコンボボックスのテキストボックス部分にアクセスできるようです。 そのため、 　dijit.byId("widget_id").textbox.readOnly=true; と書けば、とりあえずはテキストボックス部分のみ入力不可にできます。 ですが、何かの拍子にDojoがreadOnlyの設定を戻してしまうことも考えられますので、 入念にテストした方がいいかもしれません。
>というのだと、送信と表示をさせたい場合、どの様にa・bに記述すればいいのでしょうか？ だからこれはJavaScriptの実行方法であって今回の話では関係ないよ。 メール送信を実行しているCGIをいじる必要がある。 CGIはリクエストを受けてサーバにて処理を実行して表示用のHTMLを返す。 今回はリクエストを受けてサーバにてメール送信を実行して表示用のHTMLを返す。 という仕様にすればお望みどおりの動きになるわけ。 JavaScriptとはいったん切り離して。
このサイトは参考になりませんかね？ http://www.skyward-design.net/blog/archives/0001 …
まず無許可で、と言うのは無理でしょう 許可アリでも大抵は HPのURLを張り付ける位の物でしょうか
解説しましょう ＞var n=document.getElementById("abc"); 「abc」というidのついたタグをnとします。 ＞var reg=new RegExp('(^| )hoge(?= |$)'); 正規表現オブジェクトを宣言しています (^| )・・・先頭「^」もしくはスペースの後ろにある hoge・・・hogeという文字 (?= |$)・・・後ろはスペースか末尾「$」 ちなみに正規表現というのは複雑なマッチングをするときに使う規則で 慣れるまで書式がわかりにくいので、やる気がある場合は一度 勉強してみると思い白いかも。 ＞var cn=n.className; nのクラス名をとりあえずcnという名前をつけておいて ＞n.className=cn.match(reg)?cn.replace(reg,''):cn+' hoge'; nの新しいクラス名は さっきつくった正規表現オブジェクトregにマッチするか？ マッチするならcnのマッチした箇所を削除する（''と置き換える） マッチしないならcnにスペース+hogeをつける。 「xxx?yyy:zzz」という構文は三項演算子といってif文に近い感じの処理です ちなみに微妙なゴミが気になる場合は n.className=(cn.match(reg)?cn.replace(reg,''):cn+' hoge').trim(); といったトリムをする処理を入れた方がベター
回答ではないのですが、「ドットインストール」というサイトで、 プログラミングの初級講座を動画で配信しているサイトがあります。 ユーザー登録しなくても動画が見れますので、勉強になると思います。 jQueryの動画はこちらです。 http://dotinstall.com/lessons/basic_jquery 頑張ってください。
cssでdlとddの余白を0pxにすれば直ると思いますよ。
cssで wideslider { width: 100%; height: 500px; text-align: left; position: relative; overflow: hidden; } ↓ wideslider { width: 950px; height: 500px; text-align: left; position: relative; overflow: hidden; margin: 0 auto; } に調整してもダメですか？
ANo1です。 反応がないので、もう見ていらっしゃらないのかもしれませんが、上記のcanvasを重ねておく方法で簡単に試してみたところ、一応取得できるようです。 クリックの位置からカーソル座標を割り出して、各canvas上のその座標のイメージデータを取得し、透明度が0でなかったら（＝不透明だったら）その画像を対象画像と判定するという考え方です。
こういうことでしょうか？ $(function(){ $("a.2000").click(function(){ $(".Approved-count").text(parseInt($(".Approved-count").text())+1); return false; }); });
cgiは使えるのでしょうか？ 回答がついていますがガラパゴス携帯でjavascriptを反映させようと思うのは困難です javascriptとはブラウザ依存のプログラムになりますので こちらで幾ら用意しようともブラウザが対応していなければ無駄な努力になってしまいます なので無理矢理対応したければサーバー側で対処するしかないのです
<div id="slidedisp" style="width:800px;height:300px; margin:0 auto;"></div> の様にmargin:0 auto;も入れてますか？
キャッシュを無効にする方向で考えた方がいいのでは？
出かけ先なので取り急ぎ返答だけ…… これは変更点が多すぎて此処に書ききれません pxを固定で指定している箇所は全て変更ですし 見てはいませんがプログラム中も恐らくスクロールする幅を指定している筈です (要素分だけ移動させていればいいのですが……) １要素800pxはまず大きすぎます いくつか変更して実装したのでしょうか？ あくまでsampleはsampleですから自由な形にするのであれば まずはimgの800pxを外すところからでしょうかね…… １：imgサイズ ２：wideslider、pagination ３：slider_prev、slider_next ４：プログラム中「baseWidth」(ブロックのサイズを取得するよう書き換えた方がいい) ５：位置調整 ザックリ書いてこんな感じかな、未検証ですので悪しからず
そしたらですね、Grid.cssの（g_HRクラス）１２１行目の 「background-color : #eee;」をコメントアウトしてください。 -------------------------------------------------- 修正前　background-color : #eee; -------------------------------------------------- 　修正後　/* background-color : #eee; */ -------------------------------------------------- で、g_HRクラスの次に以下のクラスを指定してください。 -------------------------------------------------- .g_Head div:nth-child(3) { background-color: red; } .g_Head div:nth-child(4) { background-color: pink; } -------------------------------------------------- これで、「W」が赤に、「Ｌ」がピンクになると思います。 あとは、同様に「.g_Head div:nth-child(4)」の数字(x)<-この括弧の中の数字を指定して 「background-color: pink;」とかを指定してあげればどうでしょうか？
lightpop.jsがどのような構造なのかわからないのとし、検証もしてはいませんが… 設定後、普通に対象要素をクリックしてあげればよさそうですが。 チェーンメソッドが効くようにつくられているのなら、そのまま 　～.click(); を加えるだけではダメなのでしょうか？ セレクタの指定が複数要素になっているのなら 　$( ～.get(0)).click(); あるいは、チェーンメソッドが効かないとか使わないで記述するなら、同じセレクタ（単数）に対して 　～.click();
var input_tags = document.getElementById("div_id").getElementsByTagName("input"); for(var i=0;i<input_tags.length;i++){ input_tags[i].disabled = true; }
ドットインストールというプログラムを動画で説明してくれるサイトがあります。 こちらのサイトで、jQueryを学ばれてはどうですか？ ログインしなくてもひと通りの動画が見られますので、 jQueryだけではなく、css3、html , java , php , cakephp いろいろなプログラム系言語が 学べます。 [dotinstall] http://dotinstall.com/ [jQuery] http://dotinstall.com/lessons/basic_jquery 頑張ってください。
変数名などを気をつけて書くならこんな感じで var birth = new Date(); birth.setMonth(4-1, 29); var today = new Date(); var days = -1; while(days < 0) { days = birth.getTime() - today.getTime(); days = parseInt(days/(1000*60*60*24)); birth.setFullYear( birth.getFullYear() + 1 ); } alert("誕生日まであと" + days + "日です");
関数の最後のところが ＞decodeURIComponent(temp); ＞return ""; になっていて、常に""が返されるので何も表示されないと思いますが…？（""が表示される） ANo1様もおっしゃっているように、decodeした文字列を表示するようにすればよさそうに思います。
”カーソル” でけんさくしないで、”キャレット” でしらべてみれば？
キーワード「childNodes firefox」でGoogle検索すると，その問題に対する解説がヒットします。ちなみに４番目にヒットしたのがこちら。 http://befine.jugem.jp/?eid=20
名称から推察すると、ご利用なさっているスクリプトはこれではないかと思いますが… 　http://www.elevateweb.co.uk/image-zoom/examples （↑）のページの一番下のほうに、ズームウィンドウのサイズを変える方法が説明されているようです。 ライブラリを利用する時は、その作成元に説明がありますので、そこで調べるのがよろしいかと思います。 違うものでしたら、スルーしてください。
＞var childWindow = window.open('http://hogehoge.com/sample.html', 'kowindow'); であれば ×kowindow.form1.option1.selectedIndex=2; ○childWindow.form1.option1.selectedIndex=2; では？ ただし・・・ (1)別のドメインだとセキュリティの関係で、javascriptで制御は無理かもしれません (2)ブラウザの仕様でform1みたいなアクセスはできない可能性があります。 （getElementByIdなどでidを指定してアクセスしないといけないかもしれません） ちゃんとやるなら http://hogehoge.com/sample.html?xxx=2 のようなアクセスの仕方をして、サーバー側のプログラムでxxxに指定された数値を もとにデフォルトの表記を変えるような処理が妥当です
既に回答を頂いているのですが bodyのリサイズいれないと画面のサイズ変更した時に・・・ ↓みたいな感じかな <head> <script type="text/javascript"> function onReady(){ resizeBody(); //別にこれはcssで書いてもいい document.body.style.backgroundSize = "cover"; //BG-IMGを指定するコードを此処に書く } function resizeBody(){ document.body.style.width = window.innerWidth - 50 + "px"; document.body.style.height = window.innerHeight - 50 + "px"; } </script> </head> <body onload="onReady()" onresize="resizeBody()"> </body>
ＡNo1、2です。 良く見たら5秒で繰り返してますか？ 全体で約17秒かかるので、5秒のループは『十分な時間』とは言えません。
HTML内にスクリプトタグで記述するのと、外部ファイルに記述するのとで、スクリプトの内容自体にはほとんど差がありません。 それなので、 ＞そのようなサンプルがたくさん載ったサイトはありますか？ といっても、一つでも二つでもあまり変わりはありませんし、通常のサイトでスクリプトを利用しているサイトであれば、外部ファイル化しているものが多いと思われますので、特に探さなくても… 例えば、このページ（gooのページで見てますが）もいくつかの外部ファイルのスクリプトが読み込まれています。 スクリプトの外部ファイル利用に関しては（↓）このあたりをご参考に。 http://www.pori2.net/js/kihon/16.html http://external-file.com/ja/isa.html http://allabout.co.jp/gm/gc/24049/ ＞コードを記述する書き方を勉強したいのですが ということですので、コードの記述に関しては、ＨＴＭＬ内でも外部ファイルでもほとんど違いはないと考えてよいと思います。 コードの記述そのものを覚えたいのでしたら、検索すればたくさんヒットするはずです。
画面遷移してよいのなら、そのままそのformをsubmitするようにして、actionにcgiなりを指定するようにしておけば良いのではないでしょうか？ <form method="get" action="http://xxxxxxxx">
＞どのようにソースを組めばいいのでしょうか？ スライドショーの処理とメニュー表示の処理は、互いに無関係に動作しているようですので、それぞれ独立したスクリプトを作成して、組み合わせれば実現できるでしょう。 ただし、その際に変数名などを同じにしないなどの基本的な配慮は必要になります。 それぞれの機能のスクリプトなら検索すればいろいろ見つかると思います。 重ねて表示するのは、スクリプトというよりもＣＳＳの設定で可能かと。 ＞いろいろ検索してみてもこれ！！っていうのがなかなか見つからないんです・ スクリプトのサンプルなら、御提示のサイトがそのままのサンプルではないでしょうか？ 他のもののいろいろ入っているようですし、あまり読みやすい形にはなっていないようですが…
例えば、inputのonclickを削除して jQuery("form").on("submit", function(){ jQuery("#target").remove(); return true; }); という感じにすると成功するかもしれませんよ。 参考URL：http://api.jquery.com/submit/
<html> の前に <!DOCTYPE html> を入れる
<a href="http://twitter.com/share" class="twitter-share-button" data-url=<script type="text/javascript">location.href</script> data-text="発売日" data-count="horizontal" data-lang="ja">Tweet</a> ↓↓↓↓↓ <script>document.write('\ <a href="http://twitter.com/share" class="twitter-share-button"\ data-url="'+location.href+'"\ data-text="発売日"\ data-count="horizontal"\ data-lang="ja">Tweet</a>\ ')</script>
<script type="test/javascript" src="js/jquery-1.6.3.min.js"></script> test/javascriptになってますが、これが原因の一つかもしれません。 text/javascriptです。 直接は関係ありませんが、 a imag{　 border:none; } これも　imag　は　img　ですね。
＞選択したボックスによってリンクを張りたいのです これはどういう意味でしょうか？ プルダウンすると、北海道とか出てきますよね？ この「北海道」とかをクリックしたときにリンクさせたいということでしょうか？
詳しくはありませんが、回答がないみたいなので… 前回のご質問と同様に、ちゃんとセットアップあれれば動作すると思います。 それなので、スクリプトの読込みなどのトラブルがないか、あるいはjavascriptがオフに設定されていないかなどをチェックしてみてください。 あるいは、あまり一般的でないブラウザをお使いになっているとか…（google apiが動作しないとか？） 内容的にはまったく同じですが、jQueryをはずし、内部スクリプトで記した例を… （コピペで動かない場合は、スクリプトオフやブラウザが特殊とかの可能性大です） *仕様を少し変えています。 *初期画面でデフォルトの地図を表示し、後は指定された位置を表示するようにしています。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> html, body { height: 100%; } </style> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false" … </head> <body> <p> <input id="address" type="text" value="東京都世田谷区新町3丁目" size="50"> <button id="button">地図を作る</button> </p> <div id="map_canvas" style="width:100%; height:90%;"></div> <script type="text/javascript"> (function(){ var myMap = new google.maps.Map(document.getElementById("map_canvas"), { zoom : 14, center : new google.maps.LatLng(35.633, 139.647), mapTypeId : google.maps.MapTypeId.ROADMAP }); var geocoder = new google.maps.Geocoder(); function drawMap(){ var val = document.getElementById("address").value; if(val != ""){ geocoder.geocode({address: val}, function(results, status){ if(status == google.maps.GeocoderStatus.OK) myMap.setCenter(results[0].geometry.location); else alert("位置取得に失敗しました。\n(status): " + status); }); } } google.maps.event.addDomListener(document.getElementById("button"), "click", drawMap, false); })(); </script> </body> </html>
そのままで、一応動作するようです。 （googleのapiでもDOM要素にイベントハンドラのバインドが可能ですので、このため 　だけでしたら、わざわざjQeryを使用しなくてもよさそうには思いますが…） ＞firebugはgooglemaps.js 404 not foundといっているので 単純にjsファイルが読み込めていないだけではないでしょうか？ jsファイルをアップし忘れているとか、正しいディレクトリにないなどの可能性が高いと思いますので、そのあたりを再チェックなさるのがよろしいと思います。
ちょっとだけ　だそく（表示位置を変える）＆難読化？ ぜんかくくうはくは、はんかくにしてください。 そ～してからの～ http://jsbeautifier.org/ <!DOCTYPE html> 　<title></title> 　　 <meta charset="utf-8"> 　　　 　　　　　<style> 　　　　　　 table.calendar { 　　　　　　　　 border : 1px gray solid; 　　　　　　　　　　 background : #ffe; 　　　　　　　　　　　} 　　　　　　　　　　　　 　　　　　　　　　　　　　table.calendar th, 　　　　　　　　　　　　　　 table.calendar td { 　　　　　　　　　　　　　　 border : 1px gray solid; 　　　　　　　　　　　　　　　width : 4em; 　　　　　　　　　　　　　　 text-align : center; 　　　　　　　　　　　　　　 } 　　　　　　　　　　　　　 　　　　　　　　　　　　 table.calendar th:nth-of-type(1) { 　　　　　　　　　　　background : #fee; 　　　　　　　　　　 color : red; 　　　　　　　　 } 　　　　　　　 　　　　　table.calendar td:nth-of-type(1) 　　　{ 　　 background : #fee; 　color : red; } table.calendar th:nth-of-type(7) { background : #eef; color : blue; } table.calendar td:nth-of-type(7) 　{ 　　 background : #eef; 　　　color : blue; 　　　　　text-align : center; 　　　　　　 } 　　　　　　　　 　　　　　　　　　　 table.calendar td > span { 　　　　　　　　　　　display : none; 　　　　　　　　　　　　 } 　　　　　　　　　　　　　 　　　　　　　　　　　　　　 input#mess { 　　　　　　　　　　　　　　 display : none; 　　　　　　　　　　　　　　　position : absolute; 　　　　　　　　　　　　　　 border : 3px green double; 　　　　　　　　　　　　　　 } 　　　　　　　　　　　　　</style> 　　　　　　　　　　　　 　　　　　　　　　　　<body> 　　　　　　　　　　 　　　　　　　　 <table class="calendar"> 　　　　　　　<tr> 　　　　　<th>Sun <th>Mon <th>Tue <th>Wed <th>Thu <th>Fri <th>Sat 　　　<tr> 　　 <td>1<span>message1</span> 　<td>2 <td>3 <td>4 <td>5<span>message5</span> <td>6 <td>7<span>message7</span> </table> 　<input type="text" value="" id="mess"> 　　 　　　<script> 　　　　　 　　　　　　 var viewMessage = (function () { 　　　　　　　　 var inp = document.getElementById ('mess'); 　　　　　　　　　　 var style = inp.style; 　　　　　　　　　　　var memory = null; 　　　　　　　　　　　　 　　　　　　　　　　　　　return function (text, baseNode, side) { 　　　　　　　　　　　　　　 var p, x, y; 　　　　　　　　　　　　　　 if (baseNode) { 　　　　　　　　　　　　　　　if (memory == baseNode) return;//TDの中にタグがあると… 無駄を省く 　　　　　　　　　　　　　　 memory = baseNode; 　　　　　　　　　　　　　　 p = getPosition (baseNode); 　　　　　　　　　　　　　inp.value = text; 　　　　　　　　　　　　 style.width = baseNode.offsetWidth + 'px'; 　　　　　　　　　　　switch (side) { 　　　　　　　　　　 case 1 : 　　　　　　　　 x = baseNode.offsetWidth; y = 0; break; 　　　　　　　case 2 : 　　　　　x = 0; y = -baseNode.offsetHeight; break; 　　　case 3 : 　　 x = -baseNode.offsetWidth; y = 0; break; 　case 4 : default : x = 0; y = baseNode.offsetHeight; break; } style.left = p.x + x + 'px'; style.top = p.y + y + 'px' ; style.display = 'block'; } else { 　inp.style.display = 'none'; 　　 memory = null; 　　　} 　　　　　}; 　　　　　　　}) (); 　　　　　　　　 　　　　　　　　　　 　　　　　　　　　　　//要素の位置をもとめる 　　　　　　　　　　　　 function getPosition (e, x, y) { 　　　　　　　　　　　　　for (x = y = 0; e; e = e.offsetParent) 　　　　　　　　　　　　　　 x += e.offsetLeft, y += e.offsetTop; 　　　　　　　　　　　　　　 return {x: x, y: y}; 　　　　　　　　　　　　　　　} 　　　　　　　　　　　　　　 　　　　　　　　　　　　　　 //親探し 　　　　　　　　　　　　　function parentCheck (e, type, value) { 　　　　　　　　　　　　 do if (e[type] == value) break; while (e = e.parentNode); return e; 　　　　　　　　　　　} 　　　　　　　　　　 　　　　　　　　 　　　　　　　//mouse over のイベントハンドラ 　　　　　function handler (event) { 　　　var tb, td, sp; 　　 var e = event.target; 　var cname = 'calendar'; if ((td = parentCheck (e, 'tagName', 'TD')))//親にTDがあり if ((sp = td.querySelector ('span')))//その中にSPANがあり if ((tb = parentCheck (td, 'tagName', 'TABLE')))//先祖にTABLEがあり if (tb.classList.contains (cname))//それがcalendarならば return viewMessage (sp.textContent, td.parentNode, 4);//表示 　viewMessage (); 　　 } 　　　 　　　　　document.addEventListener ('mouseover', handler); 　　　　　　　</script>
横幅設定、つまりwidthは設定されてないようです。 日付などの文字のサイズやpaddingの結果、その幅になっています。 それらはcal.cssで設定されています。 69行目の div.cal_wrapper table.cal tr td div { background-color: #FFFFFF; border-radius: 3px 3px 3px 3px; font-size: 10px; padding: 5px 15px; position: relative; text-align: center; } を文字サイズをsmall、paddingを0にしたら小さくなりました。 chromeのデベロッパーツール、firefoxのfirebugなどを使えるようになりましょう。 「JAVA」ではなく「JavaScript」です。 配布とURL掲載は別物です。著作権に関わらずURL掲載は問題ありません。 もし製作者が掲載禁止とした場合でも、掲載は(法的には)問題ありません。 ただ、あなたが製作者の意向を汲むかどうかだけです。
でもこれプラグイン使うほどでもないような？ ・ｊQuery $('.box').mouseover(function(e) { //マウスオーバーでトグル $(this).children('.targetClass').slideToggle("slow"); }).mouseout(function() { //マウスアウトでトグル $(this).children('.targetClass').slideToggle("slow"); }); ・HTML <div class="box"> <h2><img src="imageURL" alt="ImageTitle" /></h2> <!--opacity：透明度を指定、display:none;デフォルト非表示--> <p class="targetClass" style="display:none;opacity:0.5"> <a href="/link"> <span>Title</span> 本文 </a> </p> <ul> <li><a href="/link/link1.html">リスト本文</a></li> <li><a href="/link/link2.html">リスト本文</a></li> <li><a href="/link/link3.html">リスト本文</a></li> <li><a href="/link/link4.html">リスト本文</a></li> <li><a href="/link/link5.html">リスト本文</a></li> <li><a href="/link/link6.html">リスト本文</a></li> <li><a href="/link/link7.html">リスト本文</a></li> </ul> <p class="btn"><a href="/list">リストのトップ</a></p> </div>
こんにちは。 以下のような感じでどうでしょか？ var win = window.open('','messageWindow','width=800,height=600'); var h1 = document.createElement('h1'); h1.appendChild ( document.createTextNode('テスト') ); win.document.body.appendChild ( h1 ); winというウィンドウのdocument.bodyに追加するイメージです。
wordpressでしょうか？ javascriptで変更可能ですが、出来ることならPHPのコードを触ることをお勧めします
内部的で概念的な「[[prototype]]」をプロパティとしてJSから直接さわれるようにしたのが「__proto__」ですかね
こんにちは。 送信前の var result = $('form [name=sample]').val(); を var result = $('form [name=sample]:visible').val(); に変更すると表示されている方の値を取得することが出来ますが、送信先の内容は同じく果物のほうが入っていってしまうと思います。 なので以下のようにしてみました。 動作はコメントを参考にしてみてください。 disableを付与することによりサーバ上に送信される方を制御していますのでサーバ上ではsampleを取得すればどちらかの値が入ってきます。 またはhidden要素を一つ用意してそこに var result = $('form [name=sample]:visible').val(); の値をセットするようにすれば以下のような制御はいりません。 $().ready ( function() { // とりあえず非表示 $('#fruit').hide(); $('#fish').hide(); $('#type').change(function(){ var type = $(this).val(); // 状態を変更する setStatus ( 'fruit', type === 'fruit' ); setStatus ( 'fish', type === 'fish' ); }); $('form').submit(function(){ // 表示されている方のname="sample"要素を取得する var result = $('form [name=sample]:visible').val(); alert(result); }); function setStatus ( id, disp ) { // 引数のidの表示状態をtrueまたはfalseで設定 var $obj = $('#'+id).toggle(disp); if ( !disp ) { // 非表示にした要素にdisabled属性を追加する $obj.attr('disabled','disabled'); } else { // 表示した要素からdisabled属性を除去する $obj.removeAttr('disabled'); } } });
javascriptもgifの描画もブラウザ側の処理です ブラウザが処理(描画)出来なければ止まる 「処理している間も動かしたい！」 と言う気持ちも分からなくもないので少しだけ #1さんの回答の捕捉になるのですが…… Ajaxを使用して処理をサーバーに投げる (ブラウザに処理させない) もしくは処理を複数回に分けて分散させる (一度にまとめて処理しない) 知らない技術を出されて難しいとは思いますけれど…… 自分にはこれくらいしか思いつきませんです
$deferred.resolve(); ↓ setInterval($deferred.resolve(), 1000/*秒数*/); 終了タイミングで再起処理したいなら setTimeoutでよびだして処理の最後にもう一度setTimeoutで自分を呼び出せばいいかと
//(第一要素(タイマー発動後実行する関数), タイマー間隔) setInterval(function(){ $('.box :first-child') //.box内の一番目 .fadeOut(1500) //1.5秒かけてフェードアウト .next('img') //次のimg要素を指定 .fadeIn() //デフォルト(normal)の速度でフェードイン .end() //選択状態を破棄して一つ前の選択状態を呼び出し(next('img')を選択していたが、前のbox一番目を参照しなおす) .appendTo('.box'); //現在の要素をboxの一番最後に(正確には選択した要素を指定した要素に入れる) },4000); //4秒間隔で繰り返す
質問にもあるjumpToImageを呼出せばいいんですが、jQueryオブジェクトで普通にアクセスできない設計になっていますから、それで上手くいかないんでしょう。 $('.skitter').skitter({ onLoad: function (obj) { obj.jumpToImage(9); }, ... }); 初期表示の一回だけなら、onLoad（コールバック）を利用すればいいです。（第一引数からアクセスできます）
こんにちは。 検索窓は以下のように準備して <input type="text" id="word"><button type="button">検索</button> <script type="text/javascript"> $().ready ( function() { $('#btn-search').click ( function() { $('#view0').csv2table('./test.csv', { where: [ {'名前':'like ' + $('#word').val() + '%'} ] }); }); }); </script> のようにするとid="word"に入力された文字列をベースに検索を実行するようになります。 上記サンプルは前方一致検索の例です。
for(var t="",i=65;i<=122;i++)t+=String.fromCharCode(i); document.write(t.replace(/[\W_]/g,""));
「プルダウンからジャンプする」ではなくて、「プルダウンから飛んだページにアクセスする方法」ということの意味がよくわからないのですが… まず、HTMLを修正してみればよいのでは？ ＞<option value　a href="URL"> って、意味不明になっているので…
注意したい点が2つあります。 1. <a>タグのリンク先はsrc属性ではなくhref属性で指定します。 2. ブラウザは、スクリプトやタグを「読み込み順に解析しながら」表示・実行していきます。 ブラウザが「var urlgoo = document.getElementById～」を実行する段階ではまだ「<a id="urlgoo" ～」の存在を知らないため、 document.getElementById("urlgoo")はnullが返ってきます。 ですから、スクリプトの位置をソースの最後の方に移動するか、window.onloadイベントを活用する事で 「<a id="urlgoo" ～」の解析が終わった後にスクリプトが実行されるようにする必要があります。
御提示のサンプルで、レーダーチャートは表示されるはずと思います。 基本的にはデータを入替えてあげればよいだけなので、取得したjson形式のデータのうちの使いたいデータを、御提示のサンプルのitems、paramsにセットするようになさればよろしいのではないでしょうか。 ＞返ってくるjson形式の情報の内容はまだ分かっていないのですが、 とのことですので、これより具体的にはわかりかねます。
>ファイルはディスクトップのどこの場所でもいいのでしょうか？それとも >指定したフォルダに一緒に入れないと読み込まれないのでしょうか？ 外部Scriptファイル（jQueryもこれに該当します）は、画像ファイル（img要素で指定）や外部CSSファイル（link要素で指定）と同様にhtmlからscript要素で読み込ませます。 http://www.tagindex.com/html_tag/page/script_src … なので公開時にはhttpでアクセスできる場所にないといけません。htmlファイルと同階層（もしくは外部jsファイル用のディレクトリを作って、その中）に置けば相対パスでの指定が楽だと思います。 なお提示されたURLの例ではhtmlソースと同じ階層に置いた状態で書いているようです。 <script type="text/javascript" src="ui.core.js"></script> <script type="text/javascript" src="jquery.scrollFollow.js"></script> 当然ですが、適当なディレクトリに入れても問題ありません。htmlソースの階層に「js」というディレクトリを作ってそのなかに入れたなら <script type="text/javascript" src="js/ui.core.js"></script> <script type="text/javascript" src="js/jquery.scrollFollow.js"></script> と編集すればいいだけです。
$resultの仕様がわからないので適当に調整します みやすくするためhiddenはtextに、actionは自分に戻すようにしてありますが 適宜読み変えてください <?PHP if(isset($_POST) and count($_POST)>0) var_dump($_POST); $result=array(array("id"=>1),array("id"=>2),array("id"=>3),array("id"=>4),array("id"=>5)); ?> <script> member = new Array(); function cardonoff(id){ if(document.getElementById("member"+id).value != "登録完了"){ document.getElementById("member"+id).value = "登録完了"; document.getElementById("member"+id).style.background = "#FF0000"; document.getElementById("member"+id).style.color = "#FFFFFF"; member.push(id); alert(member.length + "人のIDは" + member); if(member.length == 5){ alert("5人選択されました"); var memberlist = member.join(','); document.getElementById('memberid').value = memberlist; document.getElementById('memberselect').submit(); } } } </script> <form id="memberselect" action="<?PHP echo$_SERVER["SCRIPT_NAME"];?>" method="POST"> <INPUT type="text" id="memberid" name="memberid" value="" /> <?php foreach($result as $data){ ?> <section> <div class="category"> <h2> <input type="button" id="member<?php echo $data["id"]; ?>" value="メンバー登録" style="width:150px; height:30px" onClick="cardonoff(<?php echo $data["id"]; ?>)"> </h2> </div> </section> <?php } ?> </form>
http://helpx.adobe.com/jp/dreamweaver/kb/cq20120 …
ANo1です。 もう手遅れかもしれませんが、対象要素（ご質問の場合は各建物名に附属しているアイコン←ウィンドウがセットされていないものは「・」のようになっている）を非表示に設定すれば良いみたいです。 http://oshiete.goo.ne.jp/qa/8038676.html
画像のスライドショー関連のスクリプトはものすごくたくさん作られて公開されています。 もしも使いたいだけであるのなら、（ご要望のイメージを完全には掴めてはいませんが、）検索してみれば、かなり似たものが見つかるはずと思います。 あるいは、もし自作なさるつもりでのご質問でしたら… そのままにピッタリの情報はあまりないかもしれませんが、ご質問のうちの個々の機能の実現方法などは、個別に検索すればほとんどのヒントや回答が見つかることと思います。 それぞれの仕組みを理解した上で全体を考えれば、それほど難しくなくなるのではないでしょうか。 また、その上でわからない部分について具体的にお尋ねになった方が、回答が付きやすいように思います。 現状のご質問のままだと、あまりにも漠としすぎているので「何がわかっていて何がわからないのか」がわからないので、回答者も何を回答したらよいのか迷ってしまうでしょう。
エラーの内容は何ですか？ IEのバージョンは？ IE9やIE10でも発生しますか？
自前でソートするのなら、色々なソートの方法が考え出されていますので、検索してみるとよろしいと思います。 ヒットするのはjavascriptではない言語の例の方が多いと思いますが… 例えば、 　http://www.openspc2.org/reibun/javascript/sort/0 … 　http://www.openspc2.org/reibun/javascript/sort/0 … javascriptの場合は sort()メソッドが用意されているので、これを利用するほうが簡単でしょう。 　http://www.ajaxtower.jp/js/array_class/index6.html 御提示のサンプルに近い例 var ary = []; //0～100のランダムな数値をセット for(var i=0; i<13; i++) ary[i] = [String.fromCharCode(65+i), (Math.random() * 100 | 0)]; //ソート前の値 var str1 = ary2string(ary); ary.sort(function(a, b){return b[1] - a[1]}); //ソート後の値 var str2 = ary2string(ary); alert("前：　" + str1 + "\n後：　" + str2); //表示用関数 function ary2string(ary){ for(var s="", i=0; i<ary.length;) s += ary[i++].join(" : ") + " / "; return s; } 上記の場合でも、順序をかまわなければ、比較対象となる値をindex:0になるように 　[ (Math.random() * 100 | 0) , String.fromCharCode(65+i) ] とすることで、比較用の関数を用いなくても 　ary.sort(); だけでソートが可能になります。（昇順ですが、reverse()で逆順になります）
var a = [1,2,3,4]; var arr = a.map(function (_, i) { return 'a' + i; });
<!DOCTYPE html> <html> <head> <title></title> <script src="http://code.jquery.com/jquery-latest.js"></script> <script> jQuery(function ($) { var wrapper = $('#wrapper'); var x = 0, y = 0; // div要素の生成と配置挿入（ヨコ8 * タテ4 = 32個） while (y < 320) { // img 高さ $('<div class="tile" />').css({ position: 'absolute', display: 'none', left: x + 'px', top: y + 'px', height: 80 + 'px', width: 80 + 'px', backgroundPosition: '-' + x + 'px -' + y + 'px' }).appendTo(wrapper); // 挿入 // 座標数値更新 x += 80; if (x >= 640) { // img 幅 x = 0; y += 80; } } // 差替え function func() { var prop = { css: { backgroundImage: 'url("差替え画像の場所")', // 640 x 320（同サイズ） display: 'block', width: 0, height: 0, opacity: 0 }, animate: { width: 80, height: 80, opacity: 1 } }; $('div.tile').each(function (i) { var tile = $(this); setTimeout(function () { tile.css(prop.css); tile.animate(prop.animate, 600); // アニメーション }, i * 60); // 時間差呼出し }); } setTimeout(func, 3000); // 3秒待つ }); </script> </head> <div id="wrapper" style="position: relative;"> <img src="..." style="width: 640px; height: 320px;" alt=""> </div> </body> </html> 質問にあるリンク先から、知りたいところをピンポイントで切り出したサンプルです。 開発ツールでDOM構造（スタイル）の変化を確認するようにすれば、いろいろ見えてくると思います。
YES/NOはconfirmを使えばいいですが データ通話料という違和感バリバリの言葉と そもそもスマホはパケホ入るかWi-Fiで使うというのは当たり前ですしそんな確認（しかもいくらかかるかわからないような）全く必要ありません
配布元サイトに書いてあるけど・・・。 http://amazingslider.com/quick-start-quide/
質問文のコードをそのまま実行すると SyntaxError になります。 現象を再現できるコードを補足してください。 こんなコードです、ではなくて書き込んだコードではありがちなことなので、実際に実行して見て現象が再現する事を確認してから質問すると良いと思います。
A No1です。 ＞希望としている形は以下のようにしたいと思っています サンプルの初期状態は御希望のようになっているはずですが…？ そのままコピペして、全角空白を半角にしてから試してみてください。 ＞「１行目」「２行目」は 　　　　～～ ＞このことを意味しています。 その場合は、No1にも書きましたように、3番目の段落要素のoffsetを残す高さとするようになさればよろしいかと思います。
とりあえず変更手順だけ。 Nivo Slider - The world's most awesome jQuery &amp; WordPress Image Slider http://dev7studios.com/nivo-slider/ jQuery Nivo Slider v3.2 117行目 ... // In the words of Super Mario "let's a go!" //var timer = 0; settings.timer = 0; // 書き換え ... 以降の「timer」も「settings.timer」にすべて書き換えて下さい。（エディタの置き換え機能を使うといいです） jQuery Nivo Slider v3.2 302行目 ... // Trigger the beforeChange callback // settings.beforeChange.call(this); settings.beforeChange.call(slider, settings); // 書き換え ... beforeChange関数呼出しのthis値をslider（jQueryオブジェクト）。引数をsettingsに書き換えます。 <script> $(window).load(function() { $('#slider').nivoSlider({ pauseTime: 2000, // ページ読み込み時、最初の表示時間（以降はmyListを参照） myList: [ // エフェクトの切り替わる時間と切り替わり後の表示時間（img要素定義順に適用） { speed: 500, pause: 2000 }, { speed: 1000, pause: 5000 }, { speed: 2000, pause: 7000 }, { speed: 3000, pause: 10000 } ], beforeChange: function (settings) { var vars = this.data('nivo:vars'); var n = (vars.currentSlide + 1) % settings.myList.length; // 次番号の取得 settings.animSpeed = settings.myList[n].speed; // エフェクトの切り替わる時間設定 settings.pauseTime = settings.myList[n].pause; // 切り替わり後の表示時間設定 clearInterval(settings.timer); // タイマー呼出し解除 settings.timer = ''; // settings.timerの値が空文字になっていると、settings.pauseTimeの間隔でタイマー呼出し（setInterval）が再設定されます } }); }); </script> HTMLのスクリプトは上記を参考に。「エフェクトの種類」は <div id="slider"> <img data-transition="エフェクト" ... > ... </div> img要素にdata-transition属性があれば、その値が適用されます。
エラーを再現できません。 以下のコードでj.resultsが[object Object]となることを確認しました。 Windows7、IE9、スクリプトレット javascript:(function(){var d='{"results":{"1":{"id":"1","name":"abc"},"2":{"id":"2","name":"code"}}}';var j=eval("("+d+")"); alert(d);alert(j.results);})() そのエラーは何行目で、その行付近のコードはどうなっていますか？ それが原因ではないでしょうか。
細かいところではいろいろありますが ＞「100という数値を送信」するつもり まず <input type="HIDDEN" id="plus" value="" /> にnameをつけて、 document.getElementById("plus").value ="100"; document.frm.submit(); の順番にする。
#1の補足を読みました。 ECMAに「Dateオブジェクトの中のDate関数」という区分はありませんし、「グローバルオブジェクト」も「変数」も無関係だと思います。 #1 で chiiba_kun さんが説明されている内容は下記URLにありますので、そこから処理を追うのがベターではないかと。 http://www2u.biglobe.ne.jp/~oz-07ams/prog/ecma26 … http://es5.github.com/#x15.9.2 > ・オブジェクトと言うか、変数自体が分かっていないのですが、 変数はただの入れ物ですので、変数に格納されているか否かは重要ではありません。今回は重要ではないと思うのですが、理解するには下記URLを追っていただくといいかなと。 http://es5.github.com/#x10.4 http://es5.github.com/#x12.2
上と下の違いについてご存知でしょうか。 上は、HTML(5) で 下は、XHTML です。 いったいどちらを使いたいのでしょうか。 何故変更するのですか。
$( 'html,body', parent.document ).animate( { scrollTop: 0 }, 500 );
> ■質問2 … 「new」付与による相違 new A() としたときの挙動は 1. 空のオブジェクトを作る。 2. 1のオブジェクトにプロトタイプを設定する。 　（具体的には1のオブジェクトの内部プロパティ[[Prototype]]にA.prototypeを代入する。 　なお、内部プロパティ[[Prototype]]に直接アクセスする一般的な方法はない。） 3. Aを呼び出す。このときのthisは1.で作ったオブジェクト。 4. (関数を抜けたら)1で作ったオブジェクトを返却する。 　ただし、何らかのオブジェクトが関数内でreturnされていたらそちらのオブジェクトを返却する。 となります。 よって、newの有無による違いは、 ・返り値 ・関数内でのthis ・プロトタイプの扱い となります。 > ・「new」付与しないとオブジェクトが正しく生成されないので、不具合が生じる可能性がある？ newをつけないときも正しく動作するように作っていないのなら、newを忘れたら普通は期待通りには動かないでしょう。 > ■質問3 > ・「new」を付けずに、オブジェクトを関数として実行するのは、例えばどういう使い方をするときなのでしょうか？ 普通の関数はたいていそうだと思いますが。 例えば 　alert(alert instanceof Function); //true: alertだって関数オブジェクト
jquery.slider.js の128行目あたり（クリックイベント処理周り）を若干書き換えて「現在表示している部分に相当するアイコンをクリック」を制御しています。オリジナルと照らし合わせて変更してみて下さい。 ... var positionEls = $('<span class="jquery-slider-pages"></span>'); $this.addClass('jquery-slider').width(settings.width).height(settings.height); var children = $this.children(); children.each(function (i) { var $tmp = $(this); _this = $(this).addClass('jquery-slider-element'); positionEls.prepend($('<span class="jquery-slider-page"></span>').bind('click', { index: i }, function (e) { if ($this.hasClass('jquery-slider-sliding') || children.index(_this) === e.data.index) return; _last = _this; _this = $tmp; _draw(); })); }); if (settings.showProgress) { ...
切り捨てceil、四捨五入round、切り捨てfloorでできます 5%を足すのは単に1.05をかければいいのでは？ <script> function calc(f){ var val=0; var val_a=parseFloat(f.elements["a"].value); var val_b=parseFloat(f.elements["b"].value); var val_c=0; for(var i=0;i<f.elements["c"].length;i++){ if(f.elements["c"][i].checked){ val_c=parseFloat(f.elements["c"][i].value); } } val=val_a * 1.05 + val_b / val_c + 10; val=Math.ceil(val);//切り上げ floorなら切り捨て f.elements["d"].value=val; } </script> <form> <p> <input name="a" value=""> <input name="b" value=""> <input type="radio" name="c" value="2">2 <input type="radio" name="c" value="4">4 <input type="radio" name="c" value="7">7 <input type="radio" name="c" value="9">9 <input onclick="calc(this.form)" value="計算" type="button"> <input name="d" value=""> <p> </form>
今のままの処理でよいとするなら、URLのハッシュ部にtab+番号指定でリンクさせるものと仮定して, こんな感じ？ jQuery(function($){ 　$(".area").hide(); 　var tabs = $(".tab01 li"); 　tabs.click(function(){ 　　var i = tabs.removeClass("active").index(this); 　　tabs.eq(i).addClass("active"); 　　$(".content .area").hide().eq(i).fadeIn(400); 　　return false; 　}); 　var hash = window.location.hash.match(/#tab(\d+)/); 　hash = hash?(tabs.eq(hash[1]-1).length?hash[1]-1:0):0; 　tabs.eq(hash).click(); }); * idを利用せず記述順序で解釈していますので、tab1は最初のコンテンツとなります。 * 御提示の処理では、開いているタブを再クリックした場合、コンテンツがフェードインしactiveのクラスをはずすようになっていますが、activeクラスはそのまま維持するようにしてあります。（多分そのようになるつもりと推測。フェードインするのはもとと同じままです。）
(1). JavaScript 1.4 以降、DOM は切り離されています。DOM 自体は言語中立な XML/HTML 用モデル＆API として定義され、Java、C++、Python、PHP など各種言語で実装されています。「ブラウザの実装状況」を仕様とは言い難いと思いますが、以下に続きます。 (2). 「ブラウザの実装状況」を見ながら、ブラウザに搭載する DOM その他の仕様を固めていこう、というのが HTML Standard（HTML5）です。JavaScript 1.0 以来慣習的に扱われていた Navigator オブジェクトも、お挙げになったリンク先の 7.5.1 で再定義されています。 なお、Navigator 自体は「ブラウザ情報」を抽象化したものです。HTML Standard 以外の仕様でブラウザ情報を追加したい場合、それぞれの仕様書で Navigator を拡張している場合があります。HTML Standard でも、Navigator は NavigatorID、NavigatorLanguage、NavigatorOnLine、NavigatorContentUtils、NavigatorStorageUtils を全部合わせたものとして定義されています。 (3). (1) で書いたように、DOM は XML/HTML 用モデル、というよりむしろ XML 用モデルとして W3C が定義しました。これは、HTML が役割を終え、今後は XHTML で行こう、という目的があったからです。 ところが、色んなゴタゴタがあって XHTML への移行は失敗しました。それでも XML 路線を貫きたい W3C に対し、Apple、Mozilla、Opera などブラウザベンダが協力して 2004 年に WHATWG を立ち上げ、HTML の再出発を主張しました。HTML5 の canvas 要素などはこのときに導入されたものです。 こうした分裂状態が続き、ついに 2007 年、事実上ストップしていた W3C の XHTML 2.0 の策定が中止されます。同時に、WHATWG が策定を進めていた HTML5（このときは Web Applications 1.0、Web Forms 2.0 などの名前でしたが）が W3C 草案として提出されました。草案の策定は WHATWG が中心となって進め、定期的に W3C 草案もアップデートしていく、という二重構造です。 で、HTML5 はブラウザの実装状況を見ながら修正していく方針ですので、当初は勧告が 2022 年ぐらいだろうと言われていました（1997 年に出た HTML 4.0 のフル実装さえ、未だ存在しないことを思い出して下さい）。しかし、そのように常に現状を見つつ HTML を微調整していくのであれば、もはやバージョンに意味はありません。ということで、2011 年にはバージョン番号が廃止され、単なる「HTML」あるいは現在の「HTML Standard」という名称になりました。 とはいえ、W3C に提出してしまった草案の名前を変えるのは面倒です。なので、W3C 草案の方は名称を変えずに「HTML5」として勧告を早め（遅くとも 2014 年までには出る予定です）、今後のこと、つまり「HTML6」を出すのか出さないのか思案中、というのが現在の状況です。 繰り返しますが、HTML Standard は WHATWG が策定を進めており、日々アップデートされています。W3C 版の方は、WHATWG 版の定期的なスナップショットに過ぎません。このややこしい状況が混乱を招いたため、2012 年、仕様についての窓口は原則として HTML Standard に一本化し、それ以外についてはやりたい人がやってくれ、という形に落ち着きました。
こんな感じでしょうか？ $('.hoge a').one("click", function(){ // この中は1回しか実行されません。 }); ※参考URLを見て下さい。 参考URL：http://goo.gl/V3Vcs
直接の回答ではないのですが、21もパラメータがあるのなら、POSTにしてはどうでしょうか。
evalを使うのはセキュリティ上よろしくないけど、 こんな感じです。 for(var i= 0; i< 10; i++){ eval("var title" + i); } どう使おうとしているか分かりませんが、 配列を使った方が無難かと思います。
$( '#sortarea ul' ).sortable({cancel : '.stop'});
ダブルクリックしてください。
ちなみに MSXML2 接頭辞を使うときはバージョンを明示しろと IE の中の人が忠告しており（でないと 3.0 と看倣される） また、Microsoft 接頭辞は IE の中の人がメンテナンスしてないのでもう使うなと言っている。 http://blogs.msdn.com/b/xmlteam/archive/2006/10/ …
canvas そのURLみたいにスタンプと手書きは別処理にするなら canvasの上から画像を重ねたりする
大変失礼かと思いますが・・・回答させて下さい。 「2日間ググってもわからない・・・」と有りますが？ jQueryで検索すれば色々なサイトが見つかります。 そこにはサンプルのhtmlやJavaScript(当然jQueryも含んだ物)が有ります。 それもステップを追って解説してあるサイトも見つかります。 当然、アコーディオンメニューもサンプルで出てきます。 短絡的な回答／サンプルのみ求めて何も試していないのでは有りませんか？ ２日間も有れば簡単なアコーディオンメニューも作成できると思います。 それらをやって見れば「どこに書くのかわかりません」などと言う質問は出てきません。 短絡的にコピペで出来るものを求めているのなら「[技術者向] コンピューター」で質問する以前の問題です。 すでに回答を頂いている２名の方にも失礼に成ります。 基本的に（麦僊とした概念を質問する場合を除いて） 　　・・・の環境で使っています 　　・・・を参考に 　　自分は・・・で・・・すれば出来ると思い 　　・・・したけど 　　・・・出来ませんでした 　　・・・のエラーが出ます（または誤動作します） 　　・・・の様な使い方は（考えは） ・・・などの自身の試行錯誤が垣間見えるのは、とても微笑ましく皆さん回答すると思います。 極端な言い方をすれば 　　「ホームページを書きたいのですがホームページは何処に有りますか？」 と、似たような質問だと思います。２日間、何をしていたのですか？ 御免なさい、大変お気に触ることばかり書いてしまいました。 今日はチョイト機嫌が悪いのかも知れません？！？！ 最後に、 コンピュータの世界は簡単なコピペでは何も作れません。 一時的にコピペで出来ても、そこから消化／吸収して本物を作ってください。
こんにちは。 一応、動作確認して回答していますのでタイプミス等のケアレスミスだと思います。 先のURLにも適用したのでソースを見比べて見てください。 質問内容もケアレスミスが多いので落ち着いて見てみてください。 ちなみにtbodyに以下のようなidを付けた場合 <tbody id="id-tbody"> にtbodyを削除するのであればセレクタは $('#id-tbody')となります。 id-tbody内のtrの一行目を選択するなら $('#id-tbody tr:eq(0)')となります。
スクロール処理を止めるのは event.preventDefault() ではないでしょうか。（未検証です） event.cancelBubble=true; を併記してみてはいかがでしょうか。（IE用）
訂正です。すみません。（にしてもアレですが） class Date{ 　private: 　　time_t currentTime; 　public: 　　Date(){ time(&currentTime); } /* ※ */ 　　time_t getDate(){ 　　　return currentTime; 　　} 　　void setDate(time_t now){ 　　　currentTime = now; 　　} };
こんにちは。 先ほどの回答に $('select[name="lineCode"]').val ( '' ); を追加すればOKです。 http://oshiete.goo.ne.jp/qa/7954963.html http://hppg.moe.hm/okwave/qa/q7954963/ にも追加して動作確認しました。 ＊前の質問が解決したならクローズしてくださいね。
例え読み込み後に書き換えられても意味が無い どうしてもやりたければwindow.openで新しいページか iframeにでも書き出すこと
POSTとGETの大きな違いは、GETがURLを汚しているということです 利点としてはサブミットしなくてもリンクでGETはおくれますが 欠点としてはGETのパラメータつきでブックマークするといらない 情報がのこってしまうことがあります データ量についてはさほど気にすることはありません。 明確にちがうのはファイルをアップロードする場合はPOSTでしかできません。
内容は見ていませんが… 前のご質問ですでに回答が出ているのでは？ http://oshiete.goo.ne.jp/qa/7943297.html 御提示のページは御質問以外の部分もいろいろありますが、御質問とほぼ同じ内容の質問が以前にもありましたので、単純化したものを http://oshiete.goo.ne.jp/qa/7908345.html （↑）にも記しましたが、いろいろな方法はこのあたりを中心に調べればよろしいかと。 https://developers.google.com/maps/documentation … 御質問には関係ありませんが、HTMLもチェックなさるのがよろしいかと。 　・<font>の中に<body>が（重複して）あったり 　・<ul>の直下に<div>があったり・・・ http://www.htmllint.net/html-lint/htmllint.html
こんにちは。 うまくいかないとはどのようになっていますか？ 先ほどのサンプルの動作を確認できるURLです。 http://hppg.moe.hm/okwave/qa/q7954963/ Firefox,Chrome,IE8にて動作確認しています。 というか、基本的にjQuery使っていれば大体のブラウザで動きます。 (特殊なことしなければ)
insertBeforeとfirstElementChildを使います。 head.insertBefore(meta, head.firstElementChild); https://developer.mozilla.org/ja/docs/DOM/Node.i …
A No1です。 ＞そういうオプション可能なスクリプトないかなーというところなのです No1の回答はそういう意味のつもりですけれど？ 例示した最初のものを例にすれば、オプション設定で startSlide: を設定することで開始するスライド番号を指定することが出来るようになっていると思われます。 （当該サイトのドキュメンテーションを参照：未検証です） それなので、ロード時にこの値をランダムに設定するようにしておけば、ご希望のようになりませんかという意味なのですが？ 他にも同様の指定が可能なライブラリはたくさんあるはずですので、ご希望の雰囲気に合ったもので、そのような機能を持っているものを利用なさればよいと思いますが。 ＞数を載せておいて、アトランダムに再生してくれるとか、あるいは ＞アクセス時刻で、スタートするナンバーが違うとか・・・ 表示順がランダムというような機能を持っているもの（もちろんオプションで）も、それなりの数公開されていると思います。
#2,3 です。 かきなおしました。ぜんかくくうはくは、はんかくに。 ぶらうざのしていがないので、じぶん きじゅんです。 しつもんがあるたびに、それようのぷろぐらむをかいていては、はんようせいがありませんね。 やりたいことができたのなら、そのきのうをめいかくにわけて、つくるべきです。 るーぷするところに、「正規表現」をつかうのは、・・・です。 らんだむにとりだすなら、すうちだけでなく、いろいろなものをとりだせるようにしたいものですね。 いったいいつから、「配列内包」とかつかえたんでしょうか？ひろまりませんね。 Array.map とか、Array.reduce もべんりなのに・・・ とてもざんねんです。 はいれつをきりだすしょりは、おそいかもしれませんが、いまのわたしは、こまりません。 だれに言ってんだ？ <!DOCTYPE html> <title></title> <meta charset="UTF-8"> <body> <p id="result"></p> <script type="application/javascript; version=1.8"> function range (a, b) { while (a <= b) yield a++ }; function loop (n) { while (n) yield n-- } function randomGenerator (range) { 　var copy = []; 　var len; 　 　while (true) 　　if (len = copy.length) 　　　yield copy.splice (Math.random () * len |0, 1); 　　else 　　　copy = range.slice (0); } var num = randomGenerator ([x for each (x in range (1, 100))]); var ary = [num.next () for each (x in loop (10))]; document.querySelector ('#result').textContent = ary.join ('/'); </script> </body>
内容は見ていませんが… ＞外部にある変数の値を取得し、その値を必要な変数に代入したいと思っております。 関数内での変数の定義のされかたによって、その外側から参照できる場合とできない場合があります。 ライブラリとして作られているものは、たいていの場合、作者が意図的に参照可能にしていない限り、そのままでは関数外からは取得できないと想像します。 ＞文法等全く分かっていない、初心者で大変恐縮しております。 カスタマイズするおつもりなら、まずそのあたりを理解しておくほうがよろしいでしょう。 http://builder.japan.zdnet.com/script/sp_javascr … http://archiva.jp/web/javascript/variable_and_sc … 具体的に参照を可能にする方法としては、 　・関数呼び出しの際に、引数や返り値として受け渡す。 　・両方を包含する関数内の変数、あるいはグローバルな変数として定義し直す。 　・参照可能なオブジェクトなどであれば、そのプロパティとして定義し直す。 　　または、get○○のようなメソッドを追加して、値を参照可能にする。 などが考えられそうな気がします。 いずれにしろ、まずは、もとのライブラリの全体構成を把握する必要があるでしょう。
いろいろやり方があるでしょうけど、たとえばこんな感じ <script> try{ document.addEventListener ('click',function(e){clickfunc(e)},true); }catch(e){ document.attachEvent('onclick',function(e){clickfunc(e)}); } function clickfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="INPUT" && t.type=="button"){ document.getElementById("hoge").value+=t.value+"\n"; } } </script> <input type="button" value="あ"> <input type="button" value="い"> <input type="button" value="う"><br> <textarea id="hoge"></textarea>
想像するところ、クッキーが記入されていないのではないでしょうか？ alert(document.cookie.length)とでもして、分岐条件がどのような値になっているかを確認してみてください。 あるいは、そもそもとして getCookie は実行されていますか？ ＞ある名前のクッキーが既に存在していたら、あるページへリダイレクトさせる 御提示の内容ですと、『ある名前』を確認してはいないようですが・・・？
＞すべての月日/担当者にデータがあれば月日別の配列に ＞すれば済むんですが 例えば、表示範囲が一ヶ月で、内容は御提示のものと仮定して… 先に一ヶ月分の空の配列を用意しておいて、MySQLから対象年月に相当する データの年月日、担当者名、工事名を取得して、その内容を配列に落とし込む というのではダメなのでしょうか？
A No1です。 google feed を知りませんので、コードだけではわからないのと、ざっと見ただけですが… ajaxでのフィードではないのでしょうか？ 非同期の場合はinitializeの中での実行順が、callbackの処理順を保証しているとは思えませんが、そのあたりはＯＫでしょうか？ ソートには関係ないと思いますのでそれは置いておいておくとして… ＞entryArray[entryNum].sortDate = ( date.getFullYear()*1000000 ) + ＞( (date.getMonth() + 1)*3600*32 ) + ( date.getDate()*3600 ) + ( date.getHours()*60 ) で、日付を数値に置換えているようですが（どういう根拠かよくわかりませんけれど） そのまま計算すると、例えば 　2000/12/31　→　2001494000 　2001/01/01　→　2001118800 となるので、順序が逆転していませんか？ Dateも、そのまま数値化してしまえば比較可能なように思います。 var test = []; test[0] = + new Date("2001/1/2"); test[1] = + new Date("2001/1/1"); test[2] = + new Date("2000/12/30"); test[3] = + new Date("2000/12/31"); test.sort(); for(var i=0; i<test.length; i++) test[i] = new Date(test[i]); alert(test.join("\n"));
その場しのぎの解決でいいならいろんなパターンで直せると思いますけどね 一番いいのはオートコンプリートをやめて例えばセレクトボックスにすることだと思いますよ
A No1です。 別ウィンドウを否定するつもりはまったくないのですが… ＞隠れてしまった入力域にも別窓の表示を見ながら入力できるようにしています 入力アシスト用の表示部分をドラッガブルにしておけば、ほぼ同様にできるのではないでしょうか？ （使える範囲がスクリーン全体とウィンドウサイズという違いはありますが…） ＞小さいといっても、左側1/3くらい使っていてサイズの変更はできるようにしてあります 内容がよくわかっていないので的外れかも知れませんが… まとめて表示しなくても、項目別にサジェストをだすとか、世の中に似たような例はいろいろあるのではないかと思います。 サジェスト表示 http://www.itmedia.co.jp/news/articles/1009/08/n … バルーン・ヒントなど http://myakura.github.com/n/placeholder.html ひょっとしたら、プレースホルダー程度でもいけるのかも… http://myakura.github.com/n/placeholder.html
以下のような感じでどうでしょう。 $('#main img').fadeOut(); の処理の中で $(this) とした場合、$('#main img')を指しているのでaタグのクラス名ではなく<p id="main">の中のimgタグのクラス名を書き換えていました。 $(document).ready(function() { $(function(){ $('#sum li a').click(function(){ var h = $(this).eq(0).attr('rel'); $('#sum li a').removeClass('current'); $(this).addClass('current'); $('#main img').fadeOut(function(){ ($('#main img').attr("src",h)).fadeIn(); }); return false; }); }); });
検索したみただけなので、内容は調べていませんが… http://html5-css3.jp/smartphone/iphone-android-j … http://www.photoswipe.com/ http://screw-axis.com/2011/12/19/jquery-mobile-p … http://www.checkoutthelatest.com/test/sebastian
「前に戻る」とは、ブラウザの履歴を戻ることですか？ もしそうであれば正常な動作なので、ひとまずバグではないですよ。そういう仕様です。 すでにお分かりかと思いますが、javascriptでdomを追加したとしても、サーバーにあるHTMLが書き換わるわけではないです。あくまで、各ユーザーがダウンロードしたHTMLデータを操作しているに過ぎません。したがって、履歴を戻ったりすると、DOMを追加する前の正常なHTMLが表示されます。 そう考えると、DOMの追加を維持するためには、何らかの形でjavascriptの操作結果をどこかに保存する必要があることがわかりますね。考えられるアプローチは、 1.サーバーに保存する 2.ブラウザに保存する(cookieなど) 3.本当にHTMLを書き換えてしまう などでしょうか。 1と3は、サーバーの操作が必要になるので、phpなどサーバーサイドを操作できることが前提です。2は、javascriptだけでできますが、質問者さんのjavascriptの理解が、誰かが書いたライブラリなどでなんとかしようと考えるレベルであれば、ちょっと難しいかもしれません。いろいろ方法はありますが、ひとまずcookieなどで検索してみてはいかがでしょうか。
それ、古い端末じゃないですか？ 古い端末だと、キャッシュの領域が少ないので、Webページは一切キャッシュされませんよ。従って、履歴を戻っても再読み込みされます。結果、スクロール情報も維持されません。新しい端末だと問題なく、スクロール位置まで戻りますよ。 javascriptで無理無理にできないことはないですが、よいパフォーマンスを得られると思えません。最善の方法は、端末を新調することですね。
ズームでしたら、setZoom で設定できるのでそれほど苦ではないでしょう。 > 港区の区境に破線が表示されるのですが こちらはちょっと厄介ですね。レイヤで地味にやるしかないと思われます。
msg.innerHTML = msg; msg2.innerHTML = msg2; の代わりに以下。 var p1 = document.getElementById('msg'); var p2 = document.getElementById('msg2'); if (p1.textContent !== undefined){ p1.textContent = msg; p2.textContent = msg2; }else{ p1.innerText = msg; p2.innerText = msg2; } textContentとinnerTextは少し違いますが、あまり気にしなくてもいいかもしれません。詳しくは以下。 http://d.hatena.ne.jp/cou929_la/20110517/1305644 … 今回のtextContentと、あとクリックイベントの追加の部分は実装による違いで分岐をしていますが、 そういったところはjqueryなどのDOM操作補助ライブラリを使うと、随分とすっきりします。
間違えた innerHTMLを使ってください
まずgetElementsByClassName()自体をサポートしているかどうかがひっかかります それとelementsとあるように複数のオブジェクトをつかみますので forなどで処理を回す必要があります。 <script> window.onload=function(){ var n=document.getElementsByClassName("red"); for(var i=0;i<n.length;i++){ n[i].className = "green"; } } </script> <style> .red{background-Color:red;} .green{background-Color:green;} </style> <div class="red">test</div> なお、クラス名をダイレクトで変えてしまうと、他の属性をつけている場合 それもクリアになってしまうので、気をつけてください class="hoge fuga"のオブジェクトを、hogeを起点にpiyoに変えてしまうと fugaは残しておきたかったのにclass="piyo"になってしまったりするということ
どのブラウザを対象にするか、また、どの機能を使いたいかによります。 極端に言えば、世の中のすべてのブラウザを対象にするのであれば、その差を吸収するライブラリはありません。今やテレビやゲーム機もブラウザを備えていますし、ガラケーもまだまだ存在しています。特に日本で作られたテレビ・ゲーム機・携帯電話の実装は、悲惨です。まさにガラパゴスな状態です。対応するだけ無駄と言うべきかもしれません。 逆に、最新のブラウザ(PC/モバイルOS)を対象にし、基本的なイベントに限定するのであれば、ライブラリが必要ないくらい仕様が整ってきています。また、IEが圧倒的なシェアを誇っていた時代はとっくに通り過ぎ、今では全バージョン合わせて5割ほどと言われています。これからも減少の一途でしょうし、もはや、IE推奨サイトにする必要性はどこにもないでしょう。 繰り返しになりますが、対象ブラウザと、どういう機能を実装したいかによって、お勧めできるライブラリも変わってきます。また、前の回答にもあるように、Webアプリのようなある程度の規模の開発を目的にするなら、ライブラリと合わせて、フレームワークも選択するべきでしょう。 総じて言えば、jQueryが最も有力です。 なぜなら、情報が腐るほどあるからです。
No.1です。 「id="main"となるエレメントがない」というのは、 HTMLの方に<div id="main">などといった要素がないということです。 とりあえずこれは置いておいて…… document.getElementByIdが1つの要素のみ取得するのに対し、 document.getElementsByClassNameは複数の要素を配列で取得します。 （"Elements"と複数形になっているのはこのためです） なので、 var myObj = document.getElementsByClassName('skinMainArea'); ではなく var myObj = document.getElementsByClassName('skinMainArea')[0]; とすると、ひとまずページごとの定型文は設定できそうですね
御提示のサンプルではマーカーではなくオーバーレイを用いているようです。 マーカーを用いてfitBounds()を利用している例です。 （インフォウィンドウやサイドバーなど余計な部分も入っていますが…） http://oshiete.goo.ne.jp/qa/7894323.html
http://www.w3.org/TR/DOM-Level-2-HTML/html.html# …
---つづき--- 　・当方のブラウザは古いので、クラスｐ1、ｐ2を用いていますが、最近のブラウザなら 　　nth-childが使えるので、クラス設定も不要かと思います。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body{ background-color:#444; } div#sample{ height:280px; overflow:hidden; margin-top:200px; position:relative; } #sample ul, #sample ul li{ list-style-type:none; margin:0; padding:0; } #sample ul{ position:absolute; } #sample li{ 　width:178px; height:278px; float:left; 　position:relative; overflow:hidden; 　border:1px solid #000; 　border-color:#888 #000 #000 #888; } #sample li div{ 　width:100%; height:100%; text-align:center; 　position:absolute; top:0; left:0; 　padding-top:100px; cursor:pointer; } #sample li div.p1{ 　font-size:4.5em; background-color:#aaa; } #sample li div.p2{ 　color:#fff; font-size:2.5em; background-color:#666; } </style> </head> <body> <div id="sample"> <ul> <li><div class="p1">01</div><div class="p2">image01</div></li> <li><div class="p1">02</div><div class="p2">image02</div></li> <li><div class="p1">03</div><div class="p2">image03</div></li> <li><div class="p1">04</div><div class="p2">image04</div></li> <li><div class="p1">05</div><div class="p2">image05</div></li> <li><div class="p1">06</div><div class="p2">image06</div></li> <li><div class="p1">07</div><div class="p2">image07</div></li> <li><div class="p1">08</div><div class="p2">image08</div></li> <li><div class="p1">09</div><div class="p2">image09</div></li> <li><div class="p1">10</div><div class="p2">image10</div></li> <li><div class="p1">11</div><div class="p2">image11</div></li> <li><div class="p1">12</div><div class="p2">image12</div></li> </ul> </div> <script type="text/javascript"> (function(){ 　var Slider = function(id){ init.call(this, id); }; 　Slider.prototype.handler = function(evt){ 　　var t = evt.target || evt.srcElement; 　　if(t.className != "p1" && this.hidden){ 　　　this.hidden.style.visibility = "visible"; 　　　this.hidden = null; 　　} 　　if(t.className == "p2"){ 　　　t.style.visibility = "hidden"; 　　　this.hidden = t; 　　} 　　var w = this.box.clientWidth; 　　var n = (evt.clientX * 10 - w) * this.n / w / 8 | 0; 　　n = (n >= this.n)?(this.n - 1):(0 > n?0:n); 　　if(n != this.target) this.target = n; else return; 　　var item = this.items[n]; 　　var minPos = w - this.element.clientWidth; 　　if(minPos>0) minPos = 0; 　　var left = w/2 - item.offsetLeft - item.clientWidth/2 | 0; 　　left = Math.max(Math.min(left, 0), minPos); 　　animate(this, left); 　} 　var animate = function(obj, end){ 　　clearInterval(obj.Id); 　　var pos = obj.position; 　　var dir = pos - end > 0?-1:1; 　　obj.Id = setInterval(function(){ 　　　var step = Math.sqrt(Math.abs(end - pos)/8) | 0; 　　　if(step<1) step = 1; 　　　pos += dir * step; 　　　if((0>dir && end>=pos) || (dir>=0 && pos>=end)) pos = end; 　　　obj.element.style.left = pos + "px"; 　　　obj.position = pos; 　　　if(pos==end) clearInterval(obj.Id); 　　}, 30); 　} 　var init = function(id){ 　　var box = this.box = document.getElementById(id); 　　var ul = this.element = box.getElementsByTagName("ul")[0]; 　　box.style.width = "3000px"; 　　var position = ul.clientWidth; 　　ul.style.width = position + "px"; 　　box.style.width = ""; 　　position = Math.min(((box.clientWidth - position)/2 | 0), 0); 　　this.position = position; 　　ul.style.left = position + "px"; 　　this.items = ul.getElementsByTagName("li"); 　　this.n = this.items.length; 　　this.target = 0; 　　this.hidden = this.Id = null; 　} 　var slider = new Slider("sample"); /*@cc_on@*/ 　document./*@if(1)attachEvent('on' + @else@*/addEventListener(/*@end@*/'mousemove', function(evt){ slider.handler(evt); }, false); })(); </script> </body> </html>
A No1です。 ＞どのように追加すればよろしいのでしょうか clickイベントの処理を設定した後ならどこでも良いですが、わかりやすくしておくなら、$(function(){内の一番最後とかホバー設定の前とかに追加しておけばよろしいかと。 ＞参考にさせていただき、画像タブメニューを作成 どこか変えている部分があれば、それとの関連も合わせて調整してください。
こんにちは。 ぱっと見たところでは、 $("table.visitor").text(cookiename); が $("table.visitor").html(cookiename); では無いでしょうか。
そこには問題ない 別の原因 エラーの有無やURLの入出力前後の値を確かめるべし
サンプルをそのまま実装して確認してみました。 問題なく実装できました。 最大枚数を限定するような記述はありません。 単純に数だけ増やすのであれば、以下で出来ます。 要点は２個です。 必要な箇所を抜粋すると、こうなります　↓ １）メニュー？部分のリストの設定 リスト内、<li>に対し、通しのidを付ける必要がある。 <li class="ui-tabs-nav-item ui-tabs-selected" id="nav-fragment-1"> <a href="#fragment-1"> <img src="画像URL（サムネイル）" alt="" /> <span>文章</span> </a> </li> １個めの<li>ですが、通しの番号が振られているであろう箇所が２箇所。 <li>に与えられているid　と、<a>に与えられているターゲットです。 これらに対して連番をつけてください。 ２）表示部の設定 <!-- 1 --> <div id="fragment-1" class="ui-tabs-panel" style=""> <img src="画像URL（表示する画像）" alt="" /> <div class="info" > <h2><a href="リンク">タイトル</a></h2> <p>文章</p> </div> </div> <div>のidですが、fragment-通し番号 と、設定するだけのようです。 まとめると、変更する必要がある場所は以下です。 <li class="ui-tabs-nav-item ui-tabs-selected" id="nav-fragment-連番"> <a href="#fragment-連番"></a> <div id="fragment-連番" class="ui-tabs-panel" style=""> メニュー部を増やせない原因は、リストをうまく追加できていないことが原因だとおもいます。 <li>も<div>も、単純にコピペしてもらい、 連番部分 4をすべて、5～にして増えないようであれば、css に overflow:hidden があったりしないか確認してみるといいかもしれません。
mLivreは知りませんし内容を見たわけでもないので、想像だけでの回答ですが… リサイズ時に再定義しようとなさっているようですが、その際に、ほとんどの変数等は上書きされるとは思いますが、イベント処理に関してはダブって設定されてしまう可能性が高いと想像されます。 その結果、動作がおかしくなっているのではないでしょうか？ 先に設定されている処理内では、再定義前のサイズが生きている可能性もあります。 御提示のライブラリではAPIなどは開放されていないようなので、内容を解析してサイズの定義部分等を探し、リサイズ時に再定義するのではなく、その部分だけ修正するようにすれば動作するのではないかと想像します。 対象部分には外部から直接アクセスできない場合も考えられますが、その場合は、リサイズ時の処理自体をmLivreに付け加えてしまうとか。 あるいは、イベント処理だけが問題であるならば（違う可能性もありますが）、内部のイベント設定時に以前のイベントをクリアしてから新しく設定するように修正するとかでもいけるかも知れません。 いずれにしろ、リサイズに対応しようとするなら、内容の解析が必要そうです。 とりあえずの代替案として、初期設定時に画面サイズ等を取得して、それに合わせて表示するといったようにすれば、ご質問のような問題が生じることはないと想像します。 （御提示のリンク先は繋がっていないようです。）
回答の補足の使い方がわからないので新規回答ですいません…。 >回答ありがとうございます。確かにreturnをつけると正常に動作します。 >予想ですが、Javascriptでは次のように処理されているのではないかと思います。 >「gcd(45, 60)→gcd(60, 45)→gcd(45, 15)→r==0でgcd(45, 15)の戻り値は15。しかし、gcd(45, 60)の戻り値は定義されていない。」 >このような理解でいいのでしょうか？ 「gcd(45, 60)→gcd(60, 45)→gcd(45, 15)→r==0でgcd(45, 15)の戻り値は15。しかし、gcd(60, 45)の戻り値は定義されていない。」 ですね。 returnを追加した場合は以下のような処理になるかと思います。 １）gcd(45,60)とコール ２）gcd(60,45)とgcd(45,60)の中でコール ３）gcd(45,15)とgcd(60,45)の中でコール ４）gcd(45,15)から15がreturnされる ５）gcd(60,45)から15がreturnされる ６）gcd(45,60)から15がreturnされる ７）15がalertで表示される。 returnがない場合は５）の処理で戻り値として得た15はそのメソッド内で終了します。戻り値はありません（undef)。 さらに６）の処理でも戻り値がないのでundefになります。 よってalertには何も渡されずundefとだけ表示されます。 ※c++はあまり詳しくないのですがreturn文を省略した場合最終評価した値を自動的に戻り値にする言語は何種類か存在します：）
> プログラムの仕様上、データベースへURLをそのまま投げたい為、 > これだと投稿時はurlそのままで表示の際にタグ付きで表示、となりますが、 エディタということは投稿時にurlを置換してタグ付きで投稿することになりますよ。 ただ、投稿の処理にしても表示の処理にしても、やるとしたら正規表現で置換となります。 「php 正規表現 自動リンク」でググればサンプルは出てきます。 また、表示の処理ならjavascriptでもできますね。
ポップアップブロックされるからボタンを押したら開くようにした方がいい ちなみに勝手なページの遷移もブラウザによってはブロックされる 特にモバイルとか組み込みのNetFrontとかのブラウザではね
ブラウザのユーザスクリプトを使います。 chromeなら、以下の内容でautomove.user.jpというファイルを作成し、 拡張機能にドラッグアンドドロップで有効になります。 欲しい回答とは違うかもしれませんが。 // ==UserScript== // @name automove // @ // @include http://www.yahoo.co.jp/* // ==/UserScript== window.setTimeout(function(){ document.location = "http://www.google.co.jp"; }, 5000);
開いて♪閉じる♪ <html><head><title>Test JavaScript Close</title></head> <body><a href="#" onclick="(window.open('', '_self')).close();">close</a></body></html> ※標準的な方法ではありません。 IE9 では動作します。
>設定しているbackground-imageの値を表示したいのですが >noneと表示されてしまい取得できていないといった感じです。 noneという値が返ってくるので、正常の動作だと思いますよ。 つまり、background-imageは設定されていないということです。 また、div.expが複数ある場合は、最初の要素のbackground-imageを取得できるはずです。 background-imageを設定した上で、例文をそのまま実行してみましたか？ ちゃんと取得出来ますよ？ もっと単純なところに問題があるはずです。 質問の前に、まずはテストをしましょう。
menは関数名であって、「テキスト欄3に入力された数字」ではありません。 だからANo.1の回答にはちゃんと > 「テキスト欄3に入力された数字を2で割った余り」==1 と書いた。
右クリックから呼び出すコンテキストメニューをオリジナルのものに変更するのは、javascriptで比較的簡単にできます。デフォルトのものを非表示にして、新たにコンテキストメニューとして表示するHTML要素を加えるだけです。ちゃんとデザインすれば、デフォルトのメニューとまったく同じもの、動作を再現できます。 ただ、再現できるのは見た目だけで、機能は再現出来ません。javascriptから貼り付け(ペースト)を呼び出せませんし、クリップボードの情報を呼び出すこともできません。プリントアウト、保存、再読みあたりはjsからでもできるんですけどね。
こんな漢字でしょうかね・・・ <!DOCTYPE html> <meta charset="UTF-8"> <title></title> <body> <p> <span>aaa</span> <span class="auto">@bbb</span> <span class="auto">ccc@ddd</span> <span class="test1 auto test1">@eee</span> <span class="auto">fff</span> <span>@ggg</span> </p> <script> var a = document.createElement ('a'); a.appendChild (document.createTextNode ('')); Array.prototype.slice.call (document.getElementsByClassName ('auto'), 0) 　　 .forEach ( 　　　 function (e) { 　　　　 var t = e.textContent; 　　　　 var c = this.cloneNode (true); 　　　　 c.href = (0 === t.indexOf ('@')) 　　　　 ? 'http://hoge.com/hoge.php?name=' + encodeURIComponent (t.substring (1)) 　　　　 : t; 　　　　 　　　　 c.firstChild.data = t; 　　　　 e.parentNode.replaceChild (c, e); 　　　 }, a); </script>
文章群のうちのある部分をセットで非表示にしたいということと解釈しました。 各部分にそれぞれの表示/非表示設定を行なう処理で実現するのも、もちろん良いのですが、必ずセットで操作をおこなうことが決まっているのなら、セットで扱えるようにしておくほうが簡単そうに思います。 例えばＣＳＳで div.disp p { margin:0; } div.erase p.target { display:none; } のようにしておいて、 <div class="disp"> 　<p>あいうえおかきくけこ 　<p class="target">サシスセソタチツテト 　<p> なにぬねのはひふへほ　 　<p class="target">マミムメモヤユヨ </div> などとしておけば、<div class="disp erase">のようにeraseクラスの設定/非設定で、そのdiv内の対象要素の表示/非表示をまとめて切り替えることが可能になります。 （文章としてご質問にp（段落）が適切なのかがわかりませんが、部分の場合は<span>等を用いて同様のことが可能かと…）
ごめん、間違えた。 jQuery.now() が返すのはミリ秒単位でした。 var j = Math.ceil( jQuery.now() / 604800000 ) % 4 + 1; 一週間待たなくても、＃２さんも指摘してますが、PCのカレンダーを一週間進めてやればすぐに結果がわかりますよ。
A No1です。 ＞ダウンロードしたjquery.bxslider.jsも書き換えてますが ？？ boxslider自体を書換えてしまっているのですか？　その辺の事情がよくわかりません。 カスタマイズしているのなら、そのあたりが何か関係しているのでは？ リストの並べ替えについては、 ＞固定ではないのとIDではなくclassしていしてるので jQueryならセレクタを変えて、それぞれで処理するようにすればよいだけだと思いますが・・・ こんな感じでダメでしょうか？ $("ul.bxslider").each(function(){ var list = $(this).children("li"); var n = list.length; list.each(function(i){ var j = Math.random() * (n-i) + i | 0; var tmp = list[i]; list[i] = list[j]; list[j] = tmp; }).appendTo(this); });
ThickBoxがどんなものかわかりませんが、 まずはonkeydownやkeycodeといった単語でソースを検索してみてはどうでしょう。 ちなみに、Enterのキーコードは「13」です。
http://psguide.okwave.jp/guide/prohibition.html ルールぐらい守れ クリアしたらタイマーで使っているsetTimeoutで指定したTimerIDをclearTimeoutで消してやればいい この回答でわからないならお話にならんってことだ
テーブルからの読み込み、出力は、サーバサイドスクリプトになりますので、 サーバサイドで、JavaScript への出力を行ってください。 Ajax となると話は変わってきますが。 サーバサイドスクリプトは何をお使いでしょうか？
yuga.jsはまったく知りませんが、jQueryベースみたいなのでjQueryでのサンプルです。 方法はいろいろあると思いますので、一例です。 　*　class="fade"の画像が対象。 　*　画像の拡張子はとりあえず.jpg .gif .pngの3種類にしてあります。 　*　速度はデフォルトになっているので、適当に設定しなおしてください。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="js/jquery-1.5.2.min.js"></script> </head> <body> <p><img src="A.jpg" alt="" class="fade"> <p><img src="B.jpg" alt="" class="fade"> <p><img src="C.jpg" alt="" class="fade"> <script type="text/javascript"> (function(){ 　$("img.fade").hover( 　　function(){ fade.call(this, 1); }, 　　function(){ fade.call(this, 0); } 　); 　function fade(c){ 　　var obj = $(this); 　　var src = obj.attr("src"); 　　obj.stop().animate({opacity: 0}, function(){ 　　　src = src.replace(/_on\.(jpg|gif|png)$/, "\.$1"); 　　　if(c) src = src.replace(/\.(jpg|gif|png)$/,"_on\.$1"); 　　　obj.attr("src", src).animate({opacity: 1}); 　　}); 　} })(); </script> </body> </html>
・A⇒B⇒Cがすべて静的なページへの移動 ・戻るはaタグで実装 これらを前提とするなら、aタグのhrefを動的にAに書き換えるだけのような気がしますが、もっと複雑な話なんですかね？
Windowsを使っていてユーザ名がre97なら C:\Users\re97\AppData\Local\Google\Chrome\User Data\Default\Extensions です。
フォームを送信してサーバーで処理したいのであれば、hiddenフィールドに入れたらどうでしょうか。 JavaScriptよりも、 HTMLの<form>の作り方、動作と、 どういう書き方、ユーザーの動作、選択などをした時にサーバーでどんなデータが受け取れるかというのを、きっちり復習することをお勧めします。 それを逆に考えて サーバーでどんなフォームデータを受け取りたいか ↓ どんなフォームを作れば良いか ↓ そのフォームを作るJavaScriptコードを記述 という流れになります。 nameが同じ物が複数あるときは、それようのJavaScriptの書き方があります。 （サーバーの処理にもそれようの書き方があるはずです。）
http://www.tagindex.com/kakolog/bbs/101/319.html …
コンテントタイプはaudio/mp3の方がいいですよ
次に開く要素はわかっているのでしょうから… 一旦、全部を閉じてから開く対象を開くという処理にしておけば、結果的に「開く要素を開き、他を閉じた」ように見えます。
提示したコードでランダムになってないですか？
普通に登録するリスナー関数にブレークポイントを設定していればそこだけで止まりますよ ただしイベント等にブレークポイントを登録する場合はちょっとかってが違います なぜならjQueryは渡されたリスナー関数を直接登録するわけではないからです その場合は「step over」ではなく「step into」を気長に何十回かクリックしてるとそのうちたどり着けます
そのhtmlにはgetSource、_ryokurian_getSourceの2つの関数が定義されており、 getSourceでは動的に以下のようなスクリプトタグを生成しています。 <script id="_ryokurian_getSourceScript" charset="utf-8" src="http://www.ryokurian.jp/atelier/geso/geso.php?ur … </script> その生成されたスクリプトタグで外部jsとして読み込まれてるスクリプトは以下の1行です。 _ryokurian_getSource("長いので略　指定されたURLのページのhtmlソース") つまり、以下の順に動いています。 (1)ページロード時にgetSource、_ryokurian_getSourceの定義を読み込み (2)ページ内のボタン押下時にgetSourceが実行 (3)getSourceが生成したスクリプトタグにより_ryokurian_getSourceを実行 (4)_ryokurian_getSource関数が引数の値をtextareaのvalueに代入 要件がよくわかりませんが、jqueryを使うなど、他のやり方の方がわかりやすいと思います。 http://semooh.jp/jquery/api/ajax/jQuery.ajax/opt …
よほど大きなスクリプトでもない限り、読み込みをいちいち制御するよりも、全体を一度に読み込んでおいて横幅に応じて処理を変えるようにすれば、お悩みのようなことを行なわらなくても済みますので、考え方が簡単になりませんか？ どうしても行ないたいのであれば、ブラウザの横幅を取得してそれに応じて、スクリプトタグを生成するとか。（500px以下の場合はなにもしない） でも、ユーザがその後で画面をリサイズしたら、思っていらっしゃるのとは違うことになってしまいませんか？ その点からも、上述の方法のほうがよいのではないかと思います。
ご希望の動作を実現するには CSS3 の :target や hashchange を使うのがスマートな気がします。 # 未対応ブラウザも動作対象とするならJavaScriptで工夫する必要があります。 http://jsfiddle.net/wxjzh/show/4/ > アドレスには一つ先の飛び先が表示されます。 原因は #1 の方が指摘されているようにページ遷移する前にhref属性値が書き換えられているためですね。 http://jsfiddle.net/wxjzh/show/1/
b.htmlはajaxを用いてスクリプトで読み込んでいるため、ドキュメントレディのようなイベントは発生しません。 タイミングを調整するにはloadのコールバック関数を利用してあげる必要があります。 一方で、もともと別々の文書だったものをまとめてしまうので、仮にスクリプトを実行できても、記述方法によっては問題がでそうな気がします。 ご質問文から推測するに、失礼ながらそちらの方がさらに面倒そうに思えます。 簡単な方法として考えられるのは、ajaxを利用せず、別文書としてiframeなどを利用して表示するようにすれば、問題なく動作すると思いますが？ ＞全部のjQuery プラグインを読むのは重すぎるため ご希望の内容は、結局のところ、そういうことを意味していませんか？ 表示されるまでの待ち時間について「重い」とおっしゃっているのであれば、スクリプトを後から読み込むように制御するとか…
詳しくありませんが、こんなのでは？ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> ul#banner, ul#banner li{ margin:0; padding:0; list-style-type:none; } ul#banner li a{ display:block; } ul#banner li img{ width:200px; height:80px; border:0; } </style> </head> <body> <ul id="banner"> <li> <a href="http://1.jp/" target="_blank"><img src="./1.jp/img/1画像.jpg" alt="1"></a> 1テキスト</li> <li> <a href="http://2.jp/" target="_blank"><img src="./2.jp/img/2画像.jpg" alt="2"></a> 2テキスト</li> <li> <a href="http://3.jp/" target="_blank"><img src="./3.jp/img/3画像.jpg" alt="3"></a> 3テキスト</li> <li> <a href="http://4.jp/" target="_blank"><img src="./4.jp/img/4画像.jpg" alt="4"></a> 4テキスト</li> </ul> <script type="text/javascript"> (function(){ var ul = document.getElementById("banner"); var li = ul.getElementsByTagName("li"); var elms = [], n = li.length, i, j, e; for(i=0; i<n;) elms.push(li[i++]); while(--i){ j = Math.floor(Math.random()*(i + 1)); e = elms[i]; elms[i] = elms[j]; elms[j] = e; } for(i=0; i<n;) ul.appendChild(elms[i++]); })(); </script> </body> </html>
「コア」を決めるのは難しいです 「馴染み深い代表的なオブジェクト」ということならそれでいいでしょう （Mathはコンストラクタじゃない） まあ広めに見るならコア（オブジェクト）はここにあるものを指すのが妥当と思います https://developer.mozilla.org/ja/docs/JavaScript …す
ゲームだとアニメーションなども必要になるのではないでしょうか？ ご質問の状態だとななんだか、心もとないような… 雰囲気のサンプルです。 専用の関数にすればもう少し短くなりますし、余分な機能を省けば簡単になるかと。 ページ遷移などは、callbackで指定すような仕組みにしています。 サンプルなので解説なしです。（全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> var Timer = (function(){ 　var timer = function(id){ 　　this.timerId =　null, 　　this.callback = null, 　　this.baseTime = 0, 　　this.time = 0, 　　this.target = document.getElementById(id); 　} 　var disp = function(){ 　　var msec = this.time>0? this.time: 0; 　　this.target.innerHTML = (msec/1000 + 0.5 | 0); 　} timer.prototype = { 　start : function(time, func){ 　　if(!this.callback){ 　　　this.time = (time || 0) * 1000; 　　　this.callback = func || new Function(); 　　} 　　this.baseTime = +(new Date()) + this.time; 　　disp.call(this); 　　var obj = this; 　　this.timerId = setInterval(function(){ 　　　obj.time = obj.baseTime - new Date(); 　　　disp.call(obj); 　　　if(obj.time<=0){ 　　　　var f = obj.callback; 　　　　obj.reset(); 　　　　if(typeof f === "function") f(); 　　　} 　　}, 200); 　}, 　stop : function(){ 　　clearInterval(this.timerId); 　}, 　reset : function(){ 　　this.stop(); 　　this.timerId = null; 　　this.callback = null; 　　this.time = 0; 　　disp.call(this); 　} } return function(id){ return new timer(id); } })(); </script> </head> <body> <div id="test" style="font-size:3em;">0</div> <div> <input type="button" value="start" onclick="test.start(20, function(){alert('TIME UP!');})"> <input type="button" value="pause" onclick="test.stop()"> <input type="button" value="reset" onclick="test.reset()"> </div> <script> var test = Timer("test"); </script> </body> </html>
入力されたID/PASSを使って、専用のコネクションではなくサイトベースで情報を取得しています
チェックボックスは本来は複数チェック可能な仕組みになっています。 イベント時に（スクリプトで）クリアする前にチェックされている内容を拾うと、複数の内容を記録します。 ＞更にチェックはひとつしか出来ないというjavascriptも拾ってきて チェックを一つに限定するならラジオボタンを使った方が、ユーザが理解しやすいはず。 チェックボックスにそのような機能をつけると、ユーザの期待に反する動作になりませんか？ また、ラジオボタンにした方がスクリプトも簡単になるかと… （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> window.onload = function(){ 　document.getElementById("SAMPLE").onclick = function(evt){ 　　evt = evt || window.event; 　　var t = evt.target || evt.srcElement; 　　if(t.nodeName=="INPUT" && t.type=="radio") 　　　document.getElementById("result").innerHTML = t.value; 　} } </script> </head> <body> <form id="SAMPLE" action="#"> <label for="chk1"> <input name="chkgroup" id="chk1" type="radio" value="0">Item1 </label> <label for="chk2"> <input name="chkgroup" id="chk2" type="radio" value="1">Item2 </label> <label for="chk3"> <input name="chkgroup" id="chk3" type="radio" value="2">Item3 </label> </form> <p id="result">ここに表示されます。</p> </body> </html>
document.head ただしヘッダの操作はブラウザ依存が激しいです マイナーなブラウザだとちゃんと動かないでしょう
' Sheet1!A2 と Sheet1!B2 には数値が入っているとします。 ' これが6000行繰り返しあるとします。 ' このとき Sheet1!C2 に数式を入力し AutoFill するマクロ Sub 例1() ' 画面更新を抑制 Application.ScreenUpdating = False ' 数式を設定 Sheet1.Range("c2").Formula = "=A2*B2" ' AutoFill を実行 Call Sheet1.Range("c2").AutoFill(Sheet1.Range("c2:c6000")) ' 画面更新を再開 Application.ScreenUpdating = True End Sub ' 複数列の AutoFill Sub 例2() Application.ScreenUpdating = False ' 数式を設定 Sheet1.Range("c2").Formula = "=A2*B2" Sheet1.Range("d2").Formula = "=C2*2" ' AutoFill を実行 Call Sheet1.Range("c2:d2").AutoFill(Range("C2", Cells(Sheet1.UsedRange.Rows.Count, 4))) ' Sheet1.Range(基準となるセル範囲).AutoFill(Range(左上のセル番地, 右下のセル番地)) Application.ScreenUpdating = True End Sub
たびたびすみません 画像アップロードでエンコード失敗したので…… 参考URL：http://ux.getuploader.com/file_is_mine/download/ …
＞getYear(); getFullYear()をつかえば済むのでは？
最後の方にある <script type="text/javascript" src='./js/app.js'></script> ね jQueryが埋め込まれているわ
音声が再生されないのは関数のスコープの問題だと思います。 setTimeoutには、文字列ではなく関数を渡して下さい。 function talkChat(prefix, text) { if (bNick) { play(); setTimeout(function () { addTalkTask(prefix.nick + "。" + text); }, 2000); } else { play(); setTimeout(function () { addTalkTask(text); }, 2000); } }
input要素のvalue属性に指定した値はHTMLとして解釈されないので問題ありません。 データの送信先で適切に処理していれば大丈夫です。
よくわかってませんが、回答がないようなので… ＞テストを行う際にはテスト対象のオブジェクトが空の状態で テストをどのような形でなさっているのか不明ですが、ブラウザの準備ができるまで待つようにすれば良いのではないでしょうか。 テスト側でイベントを発生してから応答までに時間がかかるということでしょうか？ ＞対象のオブジェクトが空の状態で テスト側からブラウザのオブジェクトにアクセス可能なようなので、適当なタイムアウトの時間を設定しておいて、その間はオブジェクトに値が入るまでは待つようにすれば良いのでは？ もしも、テスト側もjavascriptで行なおうとなさっているのなら、単に、処理の順序を制御してあげるだけで済みそうに思います。
bbbb=12345 等と書いて <script src="～read.txt"></script> としてもいいですし、本当に値だけ記述したいのなら XMLHTTPRequestで読み込んでください
> IEは参照ファイル消えず defaultValue が拾えないのかな？
addDocumentFilterとはAutoPagerizeというFireFoxのアドオン(Chrome版もあり)が 提供しているAPIだそうです。 APIとは、あるプログラムを、そのプログラムの外部から扱うために、 そのプログラムが持っている仕組みです。 AutoPagerizeの動きを変えるにはアドオンのファイルを編集してFireFoxに再インストール する必要がありますが、APIがあるおかげでインストールしたAutoPagerizeを変えることなく、 AutoPagerizeの動きをある程度操作できます(そのAPIでできる範囲まで)。 質問の回答に戻ると、 > addDocumentFilterとは、何かプログラミングに使う処理とかなのでしょうか？ > Yes プログラミング以外では使いません。そして、ここで言うプログラミングとは、 greasemonkeyなどのユーザスクリプトのプログラミングです。 ユーザスクリプトからAutoPagerizeを制御したい時にそのAPIを使います。
よくわかってませんが、回答がないみたいなので… Ｔippedの内容をみていませんのであくまで想像ですが、最初に設定した時には（当然ながら）B.phpの内容は表示されていませんので、その内容に対してはツールチップの機能が設定されていないはずです。 それなので、後から読み込んだ場合は、その部分に対しても設定を追加してあげないと機能しないはずです。 とりあえず、何の反応もないのはこのあたりが直接の原因ではないかと想像します。 それだけで動作するかどうかは、そのライブラリがこのような利用を想定しているかにもよると思われます。 ご期待なさっているのはツールチップの上に別のツールチップが表示されるようなものかと思いますが、そのライブラリがツールチップを一度に一つしか表示しないような仕様になっていると、内容は切替わるかも知れませんが同時に両方を表示することはできないかと…あるいは、切替わらない可能性もあります。（想定されていないので）
ぜんかくくうはくは、はんかくに。 querySelectorAll と forEach がつかえれば。 <a href="javascript:←はラベルでしかない。いみがない。 <!DOCTYPE html> <meta charset="UTF-8"> <title></title> <body> <div id="images"> <ul> <li style="width: 354px"><a href="javascript:;">ああ</a></li> <li style="width: 354px"><a href="javascript:;">いい</a></li> <li style="width: 354px"><a href="javascript:;">うう</a></li> <li style="width: 354px"><a href="javascript:;">ええ</a></li> </ul> <script> var li = document.querySelectorAll ('#images > ul > li'); var ary = [0,3];//消したいもの function delChild (no) { 　var e = this[no]; 　e.parentNode.removeChild (e); } ary.forEach (delChild, li); </script>
＃１です。れんとう！ べじぇきょくせんを、うごきにとりいれてみる <!DOCTYPE html> <meta charset="UTF-8"> <title>ベジェ曲線を利用して動く</title> <style> ol#hoge { 　width : 800px; 　height : 82px; 　overflow : hidden; } #hoge li { 　width : 198px; 　border : 1px red solid; 　height : 80px; 　display : inline-block; 　overflow : hidden; } </style> <body> <ol id="hoge"> 　<li> 　　abc<br> 　　def 　<li> 　　ghi<br> 　　jkl 　<li> 　　mno<br> 　　pqr 　<li> 　　stu<br> 　　vwx 　<li> 　　yzA<br> 　　BCD </ol> <script> function BG(a,b,c,d){var e=3*a,f=3*(c-a)-e,g=3*b,h=1-e-f,i=3*(d-b)-g,j=1-g-i;return function(a){for(var b=a,c=5,d;c--;)if(.001<Math.abs(d=b*(e+b*(f+b*h))-a))b-=d/(e+b*(2*f+3*h*b));return((b*j+i)*b+g)*b}}; (function () { 　var parent = document.getElementById ('hoge'); 　var interval = [2000, 20]; 　var mode = 0; 　var width = 200; 　var step = .01; 　var bz = BG.apply (null, [0, 0, 0.28, 1]); 　 　var c = parent.childNodes; 　var i = c.length; 　var e; 　 　 　for (; e = c[--i]; ) 　　if (1 !== e.nodeType) 　　　parent.removeChild (e); 　 　var x; 　 　function LOOP () { 　　var e = parent.firstChild; 　　var ml; 　　 　　switch (mode) { 　　case 0 : 　　　x = 0; 　　　setTimeout (LOOP, interval[mode]); 　　　mode = 1; 　　　break; 　　case 1 : 　　　x += step; 　　　if (1 < x) { 　　　　x = 1; 　　　　mode = 0; 　　　　parent.appendChild (e); 　　　　ml = 0; 　　　} 　　　else { 　　　　ml = (-bz (x) * width |0); 　　　} 　　　e.style.marginLeft = ml + 'px'; 　　　setTimeout (LOOP, interval[mode]); 　　} 　} 　LOOP (); }) (); </script>
CANVAS使用。 ブラウザ設定やfont-style、weightその他の設定を変える厳密な検証はしていません。 http://home.wi-wi.jp/lab/00y/
result = '有　' + msg;
あ、なんか方向の違うことを書いてしまった気がします。 No.2はスルーしてください。
UIを付けたいのなら基本的に拡張機能として作るべきです
今ではasync:falseは非推奨ですよ。 やりたいことは分かりますが、素直に非同期にして、completeやsuccessの中にajax完了後の処理を書くのが分かりやすいと思います。もし、それができない状況だとしたら、それをできない状況自体を改善すべきです。 あと、最新のjQueryではajaxの使い方も変わってきてる(使いやすくなってる)ので、古いソースではなく、新しいjQueryの情報を確認されたほうがよいと思いますよ。
実装したい機能にも寄ります。 単純なものであればそんなに難しくはありません。
//SmartPhoneCheckの関数を作成 function isNotSP() { var userAgent = navigator.userAgent.toUpperCase(); //UserAgentにSmartPhoneを示す文字列が含まれていないならTRUEを返却 return ua.indexOf('IPHONE') === -1 && ua.indexOf('IPAD') === -1 && ua.indexOf('ANDROID') === -1 && ua.indexOf('MOBILE') === -1; } //元々のJqueryの処理をSmartPhone以外なら処理するように変更 $(".js_rollover_png").hover(function(){ if(isNotSP()){ $(this)[0].src=$(this)[0].src.replace("-off.png", "-on.png"); } },function(){ if(isNotSP()){ $(this)[0].src=$(this)[0].src.replace("-on.png", "-off.png"); } });
>その回避法として、FileAPIによって >htmlのinput要素かドラッグアンドドロップを用いて >ローカルファイルを読み込めることが分かりました。 >上記の方法だとinputからフォルダをたどってファイルを選択するので >原理的には可能なような気がするのですが・・・・ 根本的な部分で勘違いをされている気がします。ドラッグ＆ドロップで渡されるのはファイルのパスなどではありません。これはFileListオブジェクトという専用のオブジェクトで、その中に個々のファイルに関するFileオブジェクトが保管されています。このFileオブジェクトをFileReaderなどに渡すことでその内容を読み取ったり出来る仕組みになっています。 ただし、ここで勘違いしてはいけないのですが、このFileオブジェクトには、ファイルのパス情報は含まれていないのです。あるのはファイル名の情報だけ。そのファイルがどこにあるかといったことはJavaScript側からは隠蔽されており、スクリプトからタッチできません。 つまりJavaScriptでは、「パスによるファイルの指定」は過去も現在も首尾一貫して禁止されており、不可能なのです。 ドラッグ＆ドロップは、ユーザーの能動的な動作により起こるイベントです。つまり、ユーザーが自分で「このファイルをアップロードしよう」といった具合に操作した結果の行動です。これに対し、「ファイルのパスによるファイルアクセス」は、ユーザー不在であり、プログラムが自分で勝手にファイルにアクセスできることを意味します。両者は全く違います。
まとめると、 稼働中のサイトでは正しく動く(?が付く) ローカルはホスト側と同じフォルダ構成 ローカルでは?が付かない ローカルにダウンロードしたものをアップロードしても動作しない ローカルとホストで違いは、文字コードの変更ぐらい ということですね。 ローカルファイルをアップロードしても動作しなかったことを考えると、文字コードの変換が正しくいかなかったのかもしれません。 もう一度正しく動くファイルをダウンロードして、文字コードを変更せずに試してみてください。
御提示のスクリプトだと、mouseoverしたら必ず2秒後に表示するというふうになります。 ＞一瞬だけマウスをのせてもフェイドインしてしまいます。 一瞬でもマウスがはずれたら表示しないのか、2秒後にマウスがそこにあれば一度はずれていても表示するのかなどによって考え方が変わると思いますが、前者ならマウスがはずれたらTimeoutの処理を中止すればよさそう。後者ならば2秒後の処理の際にマウスが対象の上にあれば表示、なければ処理しないというふうにするとか… ご参考までに… （全角空白は半角に） ＜前者の場合＞ $(function(){ 　$("div#aaa").hide(); 　var timerId; 　$("div#bbb a").mouseover(function(){ 　　timerId = setTimeout(function(){ 　　　$("div#aaa").fadeIn(1500); 　　}, 2000 ); 　}).mouseout(function(){ 　　clearTimeout(timerId); 　}); }); ＜後者の場合＞ $(function(){ 　$("div#aaa").hide(); 　var flag; 　$("div#bbb a").mouseover(function(){ 　　flag = true; 　　setTimeout(function(){ 　　　if(flag) $("div#aaa").fadeIn(1500); 　　}, 2000 ); 　}).mouseout(function(){ flag = false; }); });
No1です。 なぜそこまでかたくなに、コードを秘密にするのですか？恥ずかしい？ 質問者が情報を出さないと、解決するものもしませんよ。
似たような質問が…と思ったら、同じ方のようで。実際にはどちらを使おうとなさっているのでしょうか？ あっ、「参考にして」とあるので、自作なさるのかな… ざっと見ただけですが、sliderAnimationが画像をスライドさせながら切り替えているところですので、ここをフェードで切り替えるようにすれば良さそう。 他の部分と他に関係があるかまでは確認していません。 スライドとフェードの場合では、それにみあったCSSも変わってくると思いますので、ご自分でなさりたいことのイメージがはっきりしているのなら、まず、HTMLの構成やCSSをそれにあわせておいてから、スクリプトを作成するほうが無駄なく簡潔なものにできるとおもいます。
内容はよく見ていませんが… （1）は暴走しているのではなく、sliderの中でsetTimeoutで30秒ごとに再処理するようにしていることによるもので、その通りに実行されているだけではないのですか？ （2）については、確か、jQueryはアニメーションのキューを蓄積するようになっていたかとおもいますので、都度アニメーションを打ちきって、キューが溜まらないようにしてあげれば良さそうに思います。 内容を確認していませんし、未検証です。
<script> $(function(){ $(".box").hide(); var items = $(".box").sort(function() { return Math.round(Math.random()); }); var ansCo=0 $("#tugi").click(function(){ $(".box,.answer").hide(); $(items[ansCo++]).show(); }); $(".kirikae").click(function(){ $(this).next().show(); }); }); </script>
表示するオプションなどは用意されていないようですから、jquery.galleryview-3.0-dev.jsに若干手を加える必要があります。 // jquery.galleryview-3.0-dev.js 618行目 if (this.opts.showOverlay) this.overlayVisible = true; // showOverlayオプションによる制御文追記 this.updateOverlay(i); // jquery.galleryview-3.0-dev.js 1017行目 if (this.opts.showOverlay) this.overlayVisible = true; // showOverlayオプションによる制御文追記 this.updateOverlay(this.iterator); <script type="text/javascript"> $(function () { $('#myGallery').galleryView({ showOverlay: true }); // showOverlayオプションをtrueに設定 }); </script> updateOverlayメソッドが呼出される前に、overlayVisibleの値をtrueにしておくと表示処理が行われます。updateOverlayメソッド呼出しのある2箇所に制御文を追記して挙動を確認してみて下さい。
> HTML/CSSの記述方法が原因ではないかと思われる、という意味でしょうか？ 全部の情報を頂いている訳ではないので、あくまで憶測ですが、言わんとしたことは、まるっきり逆です。「HTML/CSSが原因ではない」と推測しています。また、IEの設定でもなければ、フレームの使用が原因でもないように思えます。もちろん、可能性が0とは言い切れませんが。 一応、憶測を書いておきますね。 ほとんど想像ですが。 ・(たぶん)戻るボタンは、javascriptのhistoryで実装されている。 ・(たぶん)症状の出るタイミングは、単純なURL遷移ではなく、何かの送信処理を行い、履歴を戻った時。 ・(たぶん)サーバーサイドプログラムで、データ受信後にフォーム送信前の履歴を戻ったときの例外処理が考慮されていない。 一応、この条件が揃えば、「IEではこのページが表示できません。」が成立し得ます。 この憶測が正しければ、完全にサーバーサイドプログラムの設計ミス(手抜き)です。 もし、質問者さんがプログラムをご存じないのであれば、ご自身での改修は諦めてもよい(諦めるべき)内容だと思います。 誤解があるといけないので、念を押しますが、プログラムをご存じない方が、誰かから教えてもらったコードをコピペしてなんとかなる事例は極めて少ないですよ^^;
ざっとこんな感じ <script> window.onload=function(){ check(document.getElementById("hoge")); } function check(obj){ var f=obj.form; for(var i=0;i<f.length;i++){ if(f[i].name=="y"){ f[i].disabled=(obj.value==""); } } } </script> <form> <INPUT type="text" name="x" value="" onkeyup="check(this);" id="hoge"> <INPUT type="radio" name="y" value="1" checked disabled>1 <INPUT type="radio" name="y" value="2" disabled>2 <INPUT type="radio" name="y" value="3" disabled>3 </form>
多少場当たり的ですが、こんな感じ？ <script> function s(obj){ obj.form.elements['bbb'].value=obj.value; obj.form.submit(); } </script> <form> <INPUT type="hidden" name="aaa" value="1234"> <INPUT type="hidden" name="bbb" value=""> <INPUT type="button" value="4567" onclick="s(this)" > <INPUT type="button" value="8901" onclick="s(this)" > <INPUT type="button" value="2345" onclick="s(this)" > </form>
こんな感じでもよいかも <script> window.onload=function(){ var sel=document.getElementById("hoge"); var d1=new Date(); var d2=new Date(); d1.setMonth(d1.getMonth()+2); var youbi=["日","月","火","水","木","金","土"]; while(d2 < d1){ d2.setDate(d2.getDate()+1); if(d2.getDay().toString().match(/[136]/)){ var obj=document.createElement("option"); var txt=(d2.getFullYear())+"-"+(d2.getMonth()+1)+"-"+d2.getDate(); obj.setAttribute("value",txt); var txt=(d2.getMonth()+1)+"月"+d2.getDate()+"日("+youbi[d2.getDay()]+")"; obj.appendChild(document.createTextNode(txt)); sel.appendChild(obj); } } } </script> <select id="hoge"> </select>
以下のような変更でどうでしょう。 ■HTMLの変更 <a href="javascript:clickTest();">テスト　</a> ■スクリプト追加 function clickTest() { var p = $("#anc1").offset().top; $('html,body').animate({ scrollTop: p }, 'fast'); $("#slidetog1").slideToggle("slow"); }
まずは基本的な文法がおかしいところを直すところから style="display='inline'"→style="display:inline" style="display='none'"→style="display:none"
ほとんどわかっていませんが、御提示のサイトの説明に、 ＞updateURL ＞If is set to true, the page URL will be updated when slide. ＞The slide number with the “#” prefix will be appended to the URL. ＞Default: true とありますので…（英語は苦手なので、よくわからんけど） 　false に設定するだけで良いんではないの？ （「カスタマイズ」などを考える前に、まず、使い方を理解してみてはいかがでしょうか？）
こんにちは。 見た感じidxはJavaScriptの変数ですよね。 <% %>の中のidxはJavaの変数になりますのでidxが宣言されていないというエラーになっています。 JavaScriptはjspによって出力されたHTMLに含まれ、ブラウザで実行されますのでそのままJavaScriptの変数の値を使うことは出来ません。 やるとしたらAjaxを利用してvar idx=5;をサーバに送信しそのサーブレットにてgetHTML(送信された内容)を実行して返す方法がありますが、処理内容によっては実現的ではありません。 Java(JSP)はサーバ上で実行される、JavaScriptはクライアント上で実行されるということを前提に設計してください。
既に回答ありますが、補足的に。 javascriptでもできますが、javascriptはユーザーのPCの時間を取得するため、仮にユーザーのPC時間が狂っていたら、結果も狂って表示されます。従ってjavascriptでの実装はベストではないでしょう。いや、商業的なサイトなら、あり得ないでしょう。 一般的には、おそく何らかのサーバーサイドプログラムで処理すると思います。 いろいろありますが、phpとかperlとかそんなやつです。 内容的には、サーバーサイドプログラム初学者でも実現できそうな内容ですが、文面から察するに質問者さんにはちょっと障壁が高いでしょう。また、どこかのサイトのコードをコピペしてすむ内容でもなく、必ずなんらかのカスタマイズが必要になるでしょう。 > 方法はないでしょうか？ 方法はありますが、phpなどで実装してくださいとしか言いようがないです。 分からなければ、ご自身での実装は諦めるレベルかな。
jqueryはろくに知りませんし、jquery.mousewheelはまったく知らないので、まるきりわかってませんが… ＞スクロール最中はイベントを検知しないように処理したいのですが、方法がわかりません jQueryでアニメーションを行なっていれば、：animatedで識別できるはずと予想しますが、自前で行なうのであれば、アニメーション中のフラグを用意しておいて、フラグが立っている間は処理をしないようにすれば良いのではないでしょうか。（アニメーションのcallbackでフラグをクリア） でも、原因はそこではないような気もしますが… ＞挙動がおかしいです どのようにおかしいのか書いて無いので不明ですが、もしもスクロール速度にムラがあるといったような現象であれば、 　stop(true, false)で距離に残りが出るので、次に移動する量はそれまでと変わるはずですが、それに対して一定のdurationでアニメーションすると結果的に速度が変わって見えるのではないかと。 何もしないでアニメーションを実行するとかにすれば、jQueryの場合はキューが溜まるだけではなかったでしたっけ？ 移動方向が変わったときだけ、クリアしてあげるとか… ろくにわかっていませんので、意味が違っていたなら無視してください。
#2 です。さっそくまちがえた。１にして。 for (var j = 0, J = i?params.angleNum:1; j < J; j++) {
いっそのことie9.jsを使ってみては？ ただし、期待する以上の機能があるので、ベストプラクティスかどうかはわかりませんが。 参考URL：http://internet-explorer9.info/other/564/
var i=0 while(i<10)alert((i++)+"になりました")
http://domes.lingua.heliohost.org/dom/intro-rang … さんこうになりますか？
>> No.1 補足 「srcの再設定」ですが、難しく考えず「srcプロパティに値（同値でも）を設定すれば、その画像を読み込む」でいいと思います。 「.error()の実行」 -> 「srcの再設定」 イベントを監視できるようにしてから画像を読み込みますから、確実にイベントを拾えます。
私も余りJavaScriptをやり込んでいるわけではありませんが、 おそらく、変数のスコープを勘違いされています。 JavaScriptの変数のスコープはブロックスコープ（{}）ではなく、関数スコープです。 変数iはforの初期化部で定義していますが、内部的にはonloadMethod宣言直後の定義と同じです。 ですから、forを抜ける際にi++してi=1になり、i<drop.lengthが偽となりforを終了しますが、 iの値は保持したままです。 そのため、alertで1が出ています。
　　ボタンを表示させたいのなら　 button goto "いいね！" , *label *label print "いいね！しました的なｗ文をここに"　　：あとは実行したら何をするかをプログラムする 少し説明下手なので　すみません
cssでの制御でしたら簡単です。 下記サンプルコード ---- <html> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> <title></title> <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7. … type="text/javascript" ></script> <style type="text/css"> .title{cursor:pointer;} .title.hover{color:#f00;} .menu li a:hover{color:#f00;} </style> <script type="text/javascript"> $(function(){ $('.menu').hide(); $('.title').click(function(){ $('.title').not(this).next('.menu').hide('fast'); $(this).next().slideToggle('fast'); }); $('.menuBox').hover( function(){ $('.title',this).addClass('hover'); }, function(){ $('.title',this).removeClass('hover'); } ); }); </script> </head> <body> <div style="text-align:left; width:220px; height:40px;"> <!--HOME--> <h1><a href="#">LOGO</a></h1> <!--MENU1--> <div class="menuBox"> <p class="title">メニュー1</p> <ul class="menu"> <li><a href="#">メニュー1A</a></li> <li><a href="#">メニュー1B</a></li> </ul> </div> <!--MENU2--> <div class="menuBox"> <p class="title">メニュー2</p> <ul class="menu"> <li><a href="#">メニュー2A</a></li> <li><a href="#">メニュー2B</a></li> </ul> </div> </div> </body> </html> ---- ちなみに本題とは関係ありませんが、記載されているコードで、jQueryの読み込みが重複しています。また、<ul>タグの直下は<li>タグしか入れれませんので、<ul><li><a href="#"><img src="imgs/a01.gif" width="200" height="40" onMouseOver="this.src='imgs/a02.gif'" onMouseOut="this.src='imgs/a01.gif'"></a></li></ul>としないといけません。
＞正規表現が分からず そもそもその部分がどうブレるかがわからないと正規表現を記述しようがないですね 単純に「<span>通常価格</span>：0 円」と完全一致するならこんな感じ <script> window.onload=function(){ var n=document.getElementsByTagName("span"); var reg=new RegExp("<span>通常価格</span>：0 円","g"); for(var i=0;i<n.length;i++){ var txt=n[i].innerHTML; if(txt.match(reg)){ n[i].innerHTML=txt.replace(reg,"hoge"); } } } </script> test <span class="ranking"> test<span>通常価格</span>：0 円test test<span>通常価格</span>：1 円test test<span>通常価格</span>：0 円test </span> test 0円が10円とか1,000円とか変わるとか、spanにclassがついていたり、 半角スペースや改行がはいるなど想定されるなら工夫が必要 それと、普通出力前のサーバーサイドのプログラムで処理することなので javascriptで変更するような処理ではないのでは？
HTML上でid=CTDの要素が何になっているのか不明ですが… 「終了しました」の文字列の代わりに、その要素内に入れたいHTMLソースを記述しておけばそれで表示されませんか？ 例えば　　'<a href="～～">hoge</a>'　とか。
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> <html lang="ja"> <head> 　<meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"> 　<title></title> <script type="text/javascript"> //@cc_on document./*@if (@_jscript) attachEvent ('on' + @else@*/ addEventListener ( /*@end@*/ 'click', function(evt){ 　var t = evt./*@if(1) srcElement @else@*/ target /*@end@*/; 　var f, i, s, v, j; 　if ( t.type != 'checkbox' ) { 　　return; 　} 　 　s = t.form.elements; 　 　if ( /(^| )Check1( |$)/.test( t.form.className ) ) { 　　f = parseFloat( s['VALUE'].defaultValue ); 　　 　　j = 0; 　　for ( i = 0; i < s.length; ++ i ) { 　　　if ( s[i].type != 'checkbox' ) continue; 　　　 　　　if ( s[i].checked ) { 　　　　j ++; 　　　} 　　} 　　 　　f -= 0.5 * Math.floor( j / 2 ); 　　 　　s['VALUE'].value = f < 2.0 ? Number(2.0).toFixed(1) : f.toFixed(1); 　　 　} else if ( /(^| )Check2( |$)/.test( t.form.className ) ) { 　　f = parseFloat( s['VALUE'].defaultValue ); 　　 　　for ( i = 0; i < s.length; ++ i ) { 　　　if ( s[i].type != 'checkbox' ) continue; 　　　 　　　if ( s[i].checked ) { 　　　　f -= parseFloat(s[i].value); 　　　} 　　} 　　s['VALUE'].value = f < 2.0 ? Number(2.0).toFixed(1) : f.toFixed(1); 　} }, false ); document./*@if (@_jscript) attachEvent ('on' + @else@*/ addEventListener ( /*@end@*/ 'submit', function(evt){ 　var t = evt./*@if(1) srcElement @else@*/ target /*@end@*/; 　 　if ( /(^| )Check1( |$)/.test( t.className ) || /(^| )Check2( |$)/.test( t.className ) ) { 　　evt./*@if(1) returnValue = false @else@*/preventDefault ()/*@end@*/; 　} }, false ); </script> </head> <body> 　<form action="#" class="Check1"> 　　<div> 　　　<label>1</label><input type="checkbox" name="CK1_1"><br> 　　　<label>2</label><input type="checkbox" name="CK1_2"><br> 　　　<label>3</label><input type="checkbox" name="CK1_3"><br> 　　　<input type="text" name="VALUE" value="2.5"> 　　</div> 　</form> 　<form action="#" class="Check2"> 　　<div> 　　　<label>1</label><input type="checkbox" name="CK1_1" value="0.3"><br> 　　　<label>2</label><input type="checkbox" name="CK1_2" value="0.3"><br> 　　　<label>3</label><input type="checkbox" name="CK1_3" value="0.2"><br> 　　　<label>4</label><input type="checkbox" name="CK1_4" value="0.2"><br> 　　　<label>5</label><input type="checkbox" name="CK1_5" value="0.2"><br> 　　　<label>6</label><input type="checkbox" name="CK1_6" value="0.1"><br> 　　　<label>7</label><input type="checkbox" name="CK1_7" value="0.1"><br> 　　　<input type="text" name="VALUE" value="2.5"> 　　</div> 　</form> </body> </html>
ANo1です。 ＞とのことですが、調べながら少しずつ変えて実行してみましたがうまく動かず、 ＞あまりに私のレベルが低く具体的にどうしていいのか理解できませんでした 前半の方法は、単純に関数名を変えればよいだけですので、例えば 　changeDisplay 　changeDisplay1 　changeDisplay2 などのようにしてあげればよろしいと思います。 後半の方法の例として、御質問の動作を完全に理解できているわけではないので、どの程度あっているのか不明ですが… （class="hoge"内の要素群を一つの単位として、同じ処理を行なうようにしています） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> form.hoge p { display:none; } </style> <script type="text/javascript"> /*@cc_on@*/ document./*@if(1)attachEvent('on'+@else@*/addEventListener(/*@end@*/ 'click', 　function(e){ 　　var t = e./*@if(1)srcElement@else*/target/*@end@*/; 　　if(t.nodeName!="INPUT" || t.type!="radio") return; 　　var f = t.form; 　　if(f && /(^| )hoge( |$)/.test(f.className)){ 　　　var inp = f.elements, i = 0, e = inp[0]; 　　　while(e && !(e.nodeName=="INPUT" && e.type=="text")) e = inp[++i]; 　　　if(e) e.parentNode.style.display = t.value=="なし"? "none": "inline"; 　　} 　}, false); </script> </head> <body> <form class="hoge" action="#"> <ul> <li><input type="radio" name="AAA" value="なし">なし</li> <li><input type="radio" name="AAA" value="１週間ごと">１週間ごと</li> <li><input type="radio" name="AAA" value="1ヶ月ごと" > 1ヶ月ごと</li> <li><input type="radio" name="AAA" value="１年ごと">１年ごと</li> </ul> <p><input type="text" name="XXX" size="15"></p> </form> <form class="hoge" action="#"> <ul> <li><input type="radio" name="BBB" value="なし">なし</li> <li><input type="radio" name="BBB" value="１週間ごと">１週間ごと</li> <li><input type="radio" name="BBB" value="1ヶ月ごと"> 1ヶ月ごと</li> <li><input type="radio" name="BBB" value="１年ごと">１年ごと</li> </ul> <p><input type="text" name="YYY" size="15"></p> </form> <form class="hoge" action="#"> <ul> <li><input type="radio" name="CCC" value="なし">なし</li> <li><input type="radio" name="CCC" value="１週間ごと">１週間ごと</li> <li><input type="radio" name="CCC" value="1ヶ月ごと"> 1ヶ月ごと</li> <li><input type="radio" name="CCC" value="１年ごと">１年ごと</li> </ul> <p><input type="text" name="ZZZ" size="15"></p> </form> </body> </html>
例示なさっているスクリプトの（３）の部分で、ドラッグした要素を移動する先が御質問の「ドロップ先」に当たると思いますが、 　＞event.currentTarget.appendChild(elm); のevent.currentTargetがその要素に該当します。 必ずidが付されているとは限りませんが、event.currentTarget.idでidを取得することが可能です。
旧式のIE6で試してみましたが、再現しないようです。 ただし、#leftcontent2の高さがウィンドウの高さよりも高いと御質問のような事象が発生しますが、これは他のブラウザの場合も同様と思います。（スクリプトのコードがそのようになっていますので） HTMLやCSSの設定がどのようになっているのか不明ですが、試してみた時の条件は、#leftcontent2をbody直下におき、幅、高さは固定でposition:absoluteにしてしています。
複数選択で表示するテキストボックスは一つなのでしょうかそれぞれのチェックボックスに 対応した複数なのでしょうか？ ひとつでよければこんな感じでどうでしょう？ 複数なら応用してください <script> try{ document.addEventListener ('click',function(e){clickfunc(e)},true); //基本 }catch(e){ document.attachEvent('onclick',function(e){clickfunc(e)}); //IE } window.onload=function(){displayHoge();} function clickfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="INPUT" && t.type=="checkbox" && t.name=="example"){ displayHoge(); } } function displayHoge(){ var elements=document.getElementsByTagName("INPUT"); var count=0; for(var i=0;i<elements.length;i++){ var t=elements[i]; if(t.type=="checkbox" && t.name=="example" && t.checked){ count++; } } var t=document.getElementById("hoge"); t.style.display=count>=2?"inline":"none"; } </script> <input type="checkbox" name="example" value="">テレビ <input type="checkbox" name="example" value="">新聞 <input type="checkbox" name="example" value="">CM <input type="checkbox" name="example" value="">その他 <input type="text" name="fuga" value="" id="hoge">
できないことはないです でも目的によっては使いづらいと思います 具体的には読み書きする度に毎回ファイルの場所を指定するか ブラウザによって勝手に決められる場所での読み書きでよければ可能です それは嫌だけど、どうしてもJavaScriptを使ってブラウザ上で操作を行いたいのであれば Node.jsで簡単なサーバーを立てて、WebSocketとかで通信させてやるのが楽ですかね
はじめまして。 <style>と<script>を<head>内に持って行き $(function(){ $("#box").draggable(function(){ axis: 'x' }); }); とすれば動くかと思います。
#1 です。JSBin にコードを置きました。 http://jsbin.com/opalor/2/edit 対象ブラウザに指定がなかったので Element#classList を使用しています。 以下、参考リンク。 Element#classList http://dom.spec.whatwg.org/#interface-element https://developer.mozilla.org/en-US/docs/DOM/ele … addEventListner (※MDN記述だと element.addEventListener とありますが、addEventListener は実際は Node についているのでこれは誤りです。element についていたら document.addEventListener なんて出来ない…。) https://developer.mozilla.org/en-US/docs/DOM/ele … http://dev.w3.org/2006/webapi/DOM-Level-3-Events … attachEvent http://msdn.microsoft.com/en-us/library/ms536343 …
はじめまして。 テキストエリア内に画像を表示する事は、おそらく難しいと思います。 私も以前、質問者様と似たようなUIに挑戦した事があるので参考になればと。 1.テキストエリア自体は非表示にし、別要素（仮にDIV）を作成し同じスタイルをつけます。 　　<textarea></textarea> 　　<div contenteditable="true"></div> 　※contenteditable属性をつける事で編集可能な要素となります。 2.DIV要素にテキストや画像などを挿入し編集します。 　　<textarea></textarea> 　　<div contenteditable="true">あああ<div><img src="hoge.jpg" /></div>いいい</div> 　※エンターキーによる改行などで挿入されるタグはブラウザによって違います。 3.DIV要素を変更したタイミングで要素内のHTMLを取得しtextareaのvalueに入れ込みます。 　　<textarea>あああ<div><img src="hoge.jpg" /></div>いいい</textarea> 　　<div contenteditable="true">あああ<div><img src="hoge.jpg" /></div>いいい</div> 4.後はPOSTし受け側で整形してDBに書き込みます。 以上が大まかな流れです。 要素内の画像は表示されるので編集のUIに向いているかと思います。 以下参考リンクです。 contenteditable=true - コンテンツの編集許可（とほほのＷＷＷ入門） http://www.tohoho-web.com/html/attr/contentedita … 上記の仕組を利用したプラグイン（GitHub） https://github.com/diy/jquery-emojiarea
まちがえた！ function oerder (a, b) { return a[0] === b[0] ? 0: b[0] - a[0] } を function oerder (a, b) { return a[1] === b[1] ? 0: b[1] - a[1] } に！ もう～、しんねんそうそう…。
イマイチ理解出来てないかもしれませんが、 　 □←A ■ ■ ■ 画1　画2　画3 「画1」をクリックしたら「カテゴリ1」から最新の記事画像を 「画2」をクリックしたら「カテゴリ2」から最新の記事画像を 「画3」をクリックしたら「カテゴリ3」から最新の記事画像を 「領域A」に表示させたいということでしょうか？ だとしたら 画1～3のクリックイベントで 各DBから最新の記事画像のパスを取得して 領域Aの画像SRCにURLを呼び出すと言う流れでいいかと思います。 <script src="jquery.js"></script> <script> $(function(){ $("li img").click(function(){ var DB = $(this).attr("id") $("#img_a").load("db.php?cate="+DB);//db.phpで最新画像を呼ぶ }); }); </script> <p id="img_a"><img src="a.jpg" /></p> <ul> <li><img src="img1.png" id="category1"></li> <li><img src="img2.png" id="category2"></li> <li><img src="img3.png" id="category3"></li> </ul>
2行目：includesや3行目foreachはプロパティ名 関数がプロパティ値 ２つあわせてrange.methodsのプロパティ JavaScriptにおいて多くのものはオブジェクト（Objectのインスタンス） オブジェクトじゃないものも暗黙でラッパーされてオブジェクトにされる
おそらく、そのサイトの文字コードのせいだと思います。 Facebookに限らず、最近のWEBサイトはUTF-8という文字コードで制作されています。 tossisanのサイトはSHIFT-JISになってますので、そこにUTF-8の文字が入ってきたため文字化けするのでしょう。 具体的にはHTMLの、 <meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"> の記述を、 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> に変更し、 ファイル（PHPですかね？）自体の文字コードもSHIFT-JISからUTF-8に変更しましょう。 どちらか一つしか変更しないとまた文字化けになってしまいますので。 試してみてください。
文字列の大小比較って直でいいらしい (´・ω・`) なんか再々既出っぽいけど。 elements.sort(function(a, b){ 　return (a.id===b.id)?0:(a.id<b.id)?-1:1; });
ざっと眺めただけですが、順番が変わるのは、ANo1様の回答にもあるようにajaxのレスポンスが返って来た順にHTMLに追加しているからでしょう。 順番を固定するには、例えば、先にタブとフィードの部分にそれぞれ<li class="triggerN">と<div id="boxN">を用意しておいて、callbackの関数には順番を渡すような仕組みにしておきます。 その上で、callback内の処理では指定順に対応するli、divに内容を追加するように修正するなどの方法で可能になると思います。 ちなみに、ANo1様の方法は、ajaxのcallに時間差を与えることで、レスポンスの順序がcall順と一致することを期待するものですので、十分な時間差さえ与えれば期待する結果が得られることでしょう。
たんじゅんに、 #feed li { height : 4em; width : 15em; text-overflow : ellipsis; overflow : hidden; white-space: nowrap; } では だめですか？ もしくは、ぜんかくくうはくをはんかくにして <!DOCTYPE html> <meta charset='UTF-8'> <title></title> <style> #feed { 　font-size:16px; } #feed li { 　height : 4em; } </style> <body> <ol id='feed'></ol> <script type='text/javascript' src='http://www.google.com/jsapi'></script> <script> google.setOnLoadCallback (function () { 　var url = 'http://okwave.jp/rss.php?type=recent_answered_qu … 　var feed = new google.feeds.Feed (url); 　 　feed.setNumEntries (10); 　feed.load (function (result) { 　　if (! result.error) { 　　　var doc = document; 　　　var FGM = doc.createDocumentFragment (); 　　　var LI = doc.createElement ('LI'); 　　　var A = doc.createElement ('A'); 　　　var title = doc.createTextNode (''); 　　　var date = doc.createTextNode (''); 　　　A.target = '_blank' ; 　　　A.appendChild (title); 　　　A.appendChild (doc.createElement ('BR')); 　　　A.appendChild (date); 　　　 　　　LI.appendChild (A); 　　　for (var i = 0, I = result.feed.entries.length; i < I; i++) { 　　　　var entry = result.feed.entries[i]; 　　　　var d = new Date(entry.publishedDate); 　　　　A.href = entry.link; 　　　　title.data = entry.title.substring (0, 39);//←ここ 　　　　date.data = ['(', 　　　　　d.getFullYear (), '年', 　　　　　d.getMonth () +1, '月', 　　　　　d.getDate (),　　 '日', 　　　　　')'].join (''); 　　　　FGM.appendChild (LI.cloneNode (true)); 　　　} 　　　doc.getElementById ('feed').appendChild (FGM); 　　} 　}); }); google.load ('feeds', '1'); </script> とか… いちいち、createDocument するよりも、ひながた から、cloneNode でこぴーして createDocumentFragment で、つくったものに、appendChild しています。 はやいから！？
jQuery.ajaxでasyncフラグを特にセットしていないので、 jQuery.ajaxはデフォルトの非同期通信動作をします。 なので、コールバック関数parse_sucが呼ばれるのは、 function getValueXMLを抜けた後です。 値引き継ぎとかスコープの問題以前に、 return value;を通過した時点では、まだparse_sucは呼ばれてさえいません。 あと、jQueryを使っていようがJavaScript のスコープは変わりませんよ。 （jQueryはただのライブラリなのでJavaScriptの言語仕様が変わったりはしない。）
> 比較的簡単な実装方法 びみょうでしょうか？ input ようそは、そもそも いんらいん ようそです。 てきとうな ぶろっくようそで かこんであげると べんりかも？ みえない P ようそを、こぴーして はりつけています。 ぜんかくくうはくは、はんかくにしてください。 ie は、わたしの ぎりょうが ないので あきらめて ください <!DOCTYPE html> <title></title> <meta charset="UTF-8"> <style> body > p#wirepuller { 　display: none; } </style> <body> <p> 　<input type="number" name="addnum"> 　<input type="button" value="追加" name="add"> 　<input type="button" value="合計" name="total"> </p> <hr> <p id="wirepuller"> 　<input type="text" name="abc" value=""> 　<input type="button" value="削除"> </p> <form id="test" action="#"> </form> <script> function handler (event) { 　var target = event.target; 　var doc = target.ownerDocument; 　var p, c, f, n; 　 　if ('INPUT' !== target.tagName || 'button' !== target.type) 　　return; 　 　switch (target.value) { 　case '追加' : 　　c = doc.getElementById ('wirepuller').cloneNode (true); 　　n = Number (doc.querySelector ('input[name="addnum"]').value) || 0; 　　f = doc.forms['test']; 　　c.removeAttribute ('id'); 　　 　　while (n--) 　　　f.appendChild (c.cloneNode (true)); 　　break; 　case '削除' : 　　p = target.parentNode; 　　p.parentNode.removeChild (p); 　　break; 　 　 　case '合計' : 　　var abc = doc.forms['test'].elements['abc']; 　　var total = Array.prototype.reduce.call (abc, 　　　function (a, b) { return a + (isNaN(b.value) ? 0: +b.value) }, 0); 　　alert('合計は、' + total); 　} } document.addEventListener ('click', handler, false); </script>
かんたんなことを めんどうくさく かく。 var dateToStringJp = 　(function (map, zeroPadding) { 　　var zp = [4,2,2, 2,2,2, 3]; 　　if (! Array.prototype.map) 　　　Array.prototype.map = map; 　　 　　return function (dateObj, type) { 　　　var d = dateObj ? dateObj: new Date; 　　　var p = [ 　　　　d.getFullYear (), 　　　　d.getMonth () +1, 　　　　d.getDate (), 　　　　d.getHours (), 　　　　d.getMinutes (), 　　　　d.getSeconds (), 　　　　d.getMilliseconds () 　　　 ]; 　　　var rst = ''; 　　　var s = []; 　　　switch (type) { 　　　case 1 :// yyy/mm/dd hh:mn:sc.mscd 　　　　s = p.map (zeroPadding, zp); 　　　　rst = [ 　　　　　[s[0], s[1], s[2]].join ('/'), 　　　　　[s[3], s[4], s[5]].join (':'), 　　　　].join (' ') + '.' + s[6]; 　　　　break; 　　　　 　　　default : // ????年??月??日 　　　　s = p.map (zeroPadding, zp); 　　　　rst = [s[0], '年', s[1], '月', s[2], '日'].join (''); 　　　} 　　　return rst; 　　}; 　}) ( 　　 function (b, e) { 　　　 var c = this.length; 　　　 if (typeof b!= "function") 　　　　 throw new TypeError; 　　　 for (var d = Array (c),a = 0; a<c; a++) 　　　　 a in this && (d[a] = b.call (e,this[a],a,this)); 　　　 return d; 　　　}, 　　 function (num, i) { 　　　 var zp = this[i]; 　　　 return ((new Array (zp)).join ('0') + num).slice (-zp); 　　　} 　　 ); //_______________________ alert (dateToStringJp ()); alert (dateToStringJp (null, 1)); alert (dateToStringJp (new Date (15247 + (+new Date)) , 1));
ケース・バイ・ケースで出力するjavascriptのコードの内容を変えているのなら少々面倒ですが、想像するところスクリプトは同一ではないのでしょうか。 もしそうであるのなら、とりあえずHTMLファイルとして作成してスクリプトのデバッグを行なっておいてから、phpのデバッグを行なえばよろしいのでは？ あるいは、スクリプトを外部ファイル化しておくだけでも、大分単純化して考えることができませんか？ スクリプトのコードが変わる場合でも、それほど種類が多くなければ、同様の方法で可能かと思います。
うごく ぶらうざがが かぎられるかな？ <!DOCTYPE html> <meta charset="UTF-8"> <title></title> <style> p > label { float: left; } input[type="text"]:valid + label:before { content: "○"; } input[type="text"]:invalid + label:before { content: "必"; } </style> <body> <form> <p><input type="text" name="b1" value="" required><label></label></p> <p><input type="text" name="b2" value="" required><label></label></p> </form>
ヒントだけでわかるのですか？ ヒント程度のものは検索すればゴロゴロ落ちていますよ APIの説明ということであれば http://www.htmq.com/video/
t=15247 h=""+(t/36000|0)+(t/3600%10|0) m=""+(t%3600/600|0)+(t%3600/60%10|0) s=""+(t%60/10|0)+(t%60%10) T=h+"時間"+m+"分"+s+"秒" alert(T)
例えば while(true){ if(i==5){ break; } document.write("繰り返し"+(i+1)+"回目<br>"); i=i+1; } だった場合 もしiが6以上の状態で始まったりすると無限ループになります 万が一のためにってことですね
どの、ツールバーですか。 IR９表示のツールバーですか？。
有名サイトは100%使っていると思って良いです。 お仕事としてweb開発するなら絶対必須です。 ちなみに AJAX の J は javascript の J です。
横入り失礼 $.getJSONというメソッドは、$.Ajaxメソッドを簡略化したもので、GETメソッドでJSON形式のデータを取得するためのもの。 なのに、コールバックメソッドに、var json = eval(request);というステートメントがあるのは変ではないか？ これだと、JSONではなくて文字列を期待していることになる。エラーの原因はきっとそれ。 JSONだと、受信した時点で、JavaScriptのオブジェクトに変換される。 ということで、 ・サーバサイドで明示的にContent-Typeを、"application/json"にセットする（おそらく抜けている） ・コールバックは function callback(json){ 　....以下省略.... } と、直接オブジェクトで受ける。 （蛇足） jsonの処理を見ていると、いきなりArrayで受けているようだけど、明示的にオブジェクトで受けるほうが望ましい。もちろん、サーバサイドもそのように吐いて。 { 　"result":[{"id":1,"customerName":"山田アヤ", ...},{}...] } のようにして、json.resultでアクセスするようにするのが、他のパラメタも付加できるし通っぽい。 どうしても文字列で受けたいのであれば、$.Ajaxで呼び出し、戻り値のtypeを"text"とする。 jsonなんてよくわからなかった時代は、jsのリテラル表現みたいな文字列を返して、eval()していた。 いまどきは、jsonpでもそんな泥臭いことはしないね。
大雑把な考え方ははずれていないのかも知れませんが、実際の記述はかなり怪しいです。 ・いきなりelementという変数がありますが、定義されていないのでエラーになるはず ・aが文字列とすれば、bも文字列になりますが、次にb.style～としてもエラーになります。 ・flagを設定していますが、各項目別の処理で同じflagを参照しているのでおかしなことに？ などなど。 javascriptでは変数の型を特に定義しませんが、実際には変数内の値によって型が違いますので、その辺りをきちんと整理して考えないとおかしなことになります。 ＞今後問題や答えを増やしても動作するようにしたいと考えています。 全体の構成に規則性があるなら、その構造を利用して処理するようなスクリプトにしておくことで、数が増減してもスクリプトを変更する必要のないようにすることは可能です。 いきなり、少々複雑になってしまうかも知れませんが、そんな方法のひとつの例です。 他にも方法はいろいろあると思いますので、あくまでも一例としてご参考までに。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #QandA li { margin-top:1.5em; } #QandA p { margin:0.2em 0; } #QandA p.answer { display:none; } </style> <script type="text/javascript"> (function(id){ 　var handler = function(evt){ //　イベント発生要素を取得 　　var t = evt.target || evt.srcElement; 　　var e = t.parentNode; //　指定id内かを調査 　　while(e && e.id != id) e = e.parentNode; //　指定id内かつinput[type=button]をチェック 　　if(!e || t.nodeName != "INPUT" || t.type != "button") return; //　次のP要素を取得 　　e = t.parentNode.nextSibling; 　　while(e && e.nodeName != "P") e = e.nextSibling; //　要素にclass="answer"が設定されていれば、表示/非表示の処理 　　if(e && e.className.match(/(^| )answer( |$)/)) 　　　e.style.display = e.style.display=="block"?"none":"block"; 　} //　ドキュメントにクリックイベントを設定 /*@cc_on@*/ 　document./*@if(1)attachEvent('on' + @else@*/addEventListener(/*@end@*/'click', handler, false); })( 　"QandA" //　対象リストのid ); </script> </head> <body> <ol id="QandA"> <li> <p class="question">問題1</p> <p><input type="button" value="ボタン(a)" accesskey="a"></p> <p class="answer">答え1</p> </li> <li> <p class="question">問題2</p> <p><input type="button" value="ボタン(b)" accesskey="b"></p> <p class="answer">答え2</p> </li> <li> <p class="question">問題3</p> <p><input type="button" value="ボタン(c)" accesskey="c"></p> <p class="answer">答え3</p> </li> </ol> </body> </html>
<html> <head> <title>子ウィンドウ</title> <script> function setFormInput(val){ 　　if(!window.opener || window.opener.closed){ 　　　　//親ウィンドウが存在しない 　　　　window.close(); 　　} else{ 　　　　//window.openerで親ウィンドウのオブジェクトを操作 　　　　window.opener.document.getElementById('title01').innerHTML = val; 　　　　window.opener.document.form01.text01.value = val; 　　　　window.close(); 　　} } function OC(){ var d=document.getElementsByTagName("input") var a=[] for(var i=0;i<d.length;++i){ if(d[i].checked){a.push(d[i].nextSibling.textContent)} } setFormInput(a.join()) } </script> </head> <body> 好きな果物を選んで下さい。<br> <input type="checkbox">いちご<br> <input type="checkbox">りんご<br> <input type="checkbox">みかん<br> <input type="button" value="選択" onClick="OC();window.close();return false;"> </body> </html>
フリーランスでフロントエンドエンジニア(Javascript＋HTML+CSSを扱うエンジニア)をやっています。 自分も昔Javascriptを使うのは良くないと言われているのを聞いたことがありますが、それはJavascriptは素人でも書きやすい言語でユーザビリティを全く無視したスクリプトが多かったからが主な理由だった気がします。 SEOの面ではたしかにページ遷移などもJavascriptでやられたサイトの場合弱いですが、それに対する対策方法もいまではGoogleのほうで用意されています。 具体的に言いますと、ページ遷移後ハッシュを使ってURLを切り替えるサイトに対して、「#!hogehoge」を使って切り替えればGoogleがインデックスするようにされています。 補足を先に言ってしまいましたが、本題の質問に対する解答は 「ほとんどいない、もしくは居たとしても無視して良い」がWEB制作の現場では常になってたりします。 本当は拒否するユーザーに対しても代替の手段を用意した方がいいのですが、現在のWEBではJavascript無しでは成り立たないWEBアプリが大幅に増えていまして、「Javascriptを拒否する人」という存在を考えにくいのです（そちらを選ぶと圧倒的に不便になるため）。 その為「JavascriptがOFFでも動くアプリを作る」ということで発生するコストと、「OFFにしているユーザー（きわめて少ない）を無視するメリット」を考えて、後者にWEB業界は舵を切っているのかと思います。
そうですねえ 最近のブラウザのでは禁止されていますからね Flashを使う方法ももはや使えなくなりましたし Chromeで有効そうなこんな情報もありました http://tande.jp/lab/2012/09/1889 Androidの標準ブラウザで有効かは分かりませんが試してみてください
例示のWebページは、選択結果をサーバ側のcgiファイルに送って処理する仕組みになっています。 複数の端末の回答を集計するためには、イントラネットでもJavaScriptだけでは無理でサーバ側のプログラム（Perl, PHP, ASP.netなど）が作動する環境が必要です。端末から簡単にファイルの自由な読み書きができるとセキュリティ上の問題になります。したがって、サーバ側にあるプログラムが決めている動作しかしないようにするのです。JavaScriptはデータエラーのチェックや表示の部分的な書き換えなどに使います。 ウインドウズパソコンでアンケート集計のようなことを実現したければ、ApacheかIIS環境でのサーバサイドスクリプトの活用方法を勉強してみましょう。まずは、アクセスカウンタを実行できるようになれば、あとはフォームデータの受け渡しを理解できたレベルでご希望の動作が実行できるでしょう。
(function ($) { $.fn.myCycle = function (options) { // プラグインメソッド // 設定オプション var opts = $.extend({ autostop: true }, options); // autostop: trueは共通値 this.each(function () { // 複数jQuery Cycle設定 var obj = $(this); // 対象jQueryオブジェクト var newOpts = $.extend({}, opts); // オプションコピー newOpts.autostopCount = obj.find('img').length + 1; // 自動停止切り替え回数（切り替え要素数 + 1 で先頭停止） // 自動停止でコールバック newOpts.end = function () { obj.cycle('destroy'); // もろもろ削除 obj.cycle(newOpts); // オプションを渡してjQuery Cycle再設定 obj.cycle('pause'); // 一時停止 }; obj.cycle(newOpts); // オプションを渡してjQuery Cycle設定 obj.cycle('pause'); // 一時停止 // 先頭要素clickイベント $('img:first', obj).click(function () { obj.cycle('resume'); // 再始動 }); }); return this; }; })(jQuery); // ここまでを適当な名前で保存（jquery.cycle.extend.js） HTML <!-- include jQuery library --> <script type="text/javascript" src="jquery-1.8.3.js"></script> <!-- include Cycle plugin --> <script type="text/javascript" src="jquery.cycle.all.js"></script> <!-- 適当な名前で保存したjsファイル --> <script type="text/javascript" src="jquery.cycle.extend.js"></script> <!-- initialize the slideshow when the DOM is ready --> <script type="text/javascript"> $(document).ready(function () { $('.slideshow').myCycle(); // プラグインメソッド呼出し }); </script> No.1を繰り返し処理しただけですけど、とりあえずこんな感じで。
javascriptのソースを外に持てばhtmlの例外処理を書く必要はありません
最終的に行きつく本の一つではあります。 ただ、HTMLすら習熟できていないとすると、まずはそっちをなんとかしたほうがいいです。 デザインの分野まで踏み込まないなら、HTMLとCSSのルールと基本的な動作を理解すればいいのでそこまでかからないでしょう。 エレメント配置がでたらめなら、JavaScriptもでたらめになりますから後々苦労することになります。 それでなくてもブラウザごとの動作に違いがあるわけで、それを吸収するためにもきちんとコード書けることは必須です。 サイを考えてるならば、HMTL&XHTML、CSS完全ガイドなどもあるといいかもしれないですね。 問題は読んでげんなりする人も多いです。 これらはそもそも「本のとおりに作ると動く」的なモンではないです。 どっちかってと、ある程度動きを知っているけどどうしてこうなるかを理解したい、といった分野に向いてます。 ぶっちゃけ作ってみるだけなら、適当に入門サイト検索でもなんとかなります。 そのうえでやっていけそうなら、コアラやサイなどできちんと構文を理解していけばかなりのレベルを習熟できるかと。
答えではないんですけど、ページ内リンクで十分のような気が。
使用しているIEのバージョンは何ですか？ IE9以降では、ネットワーク上でActiveXObjectを利用できないようです。 http://msdn.microsoft.com/en-us/library/ie/7sw4d …(v=vs.94).aspx 文書を互換モードに変更すれば、利用できるかもしれません。 http://msdn.microsoft.com/ja-jp/library/cc288325 … それが無理なら、ローカルにHTMLを保存してもらうなど、考え方を改める必要があります。
ANo1です。 情報はNo1にあげたドキュメントだけなので、片方のタブをクリックしたら、他方をスクリプトからクリックするという案を考えました。 ただし、この方法だと延々とイベントが発生しかねないのですが、幸い、もとのライブラリでは開いた状態のタブをクリックしてもイベンが発生しないようですので、問題はなさそうです。 とりあえず、以下のスクリプトでテストしてみました。 　$(function(){ 　　var ids = ["upperTab", "lowerTab"]; 　　$(ids).each(function(i){ 　　　$("#" + this).tabs({ 　　　　activate : function(e,ui){ 　　　　　var n = ui.newTab.parent().children("li").index(ui.newTab); 　　　　　$("#" + ids[1-i] + " li").eq(n).find("a").click(); 　　　　} 　　　}); 　　}); 　}); タブが上に付くようにＣＳＳが設定されているので、調整が必要かもしれません。
ざっくりしか見てませんが、 「こちら」をクリックしたら答え100の所に飛ぶ状態、ってことで、 希望としてはそこをクリックしたときの状態にしたい、ってことでしょうか。 であれば、こちらをクリックした時の動作として、 移動とクリックした時の動作を含む関数を新たに作るのが良いのではないでしょうか。 理解できていない様であれば補足下さい。
テキストボックスは仕様上無理ですが、divをつかって似たようなことはできます <style> div#data{ width:200px; height:200px; border:1px solid #000000; } </style> <button onclick='document.execCommand("bold");'><b>B</b></button> <button onclick='document.execCommand("italic");'><i>I</i></button> <button onclick='document.execCommand("underline");'><u>U</u></button> <button onclick='document.execCommand("forecolor",false,"#ff0000");'><span style="color:red">red</span></button> <button onclick='document.execCommand("forecolor",false,"#00ff00");'><span style="color:green">green</span></button> <button onclick='document.execCommand("forecolor",false,"#0000ff");'><span style="color:blue">blue</span></button> <button onclick='document.execCommand("forecolor",false,"#000000");'><span style="color:black">black</span></button> <button onclick='document.execCommand("fontsize",false,1);'><span style="font-size:small">small</span></button> <button onclick='document.execCommand("fontsize",false,3);'><span style="font-size:medium">medium</span></button> <button onclick='document.execCommand("fontsize",false,5);'><span style="font-size:large">large</span></button> <button onclick="alert(data.innerHTML)">ソース</button> <div id="data" contenteditable> test<br> test<br> test<br> test<br> </div>
＞悩んでいるポイントは「←　ココ」の部分です。 何をどう悩んでいるのかが不明なので、以下の回答は的外れかもしれませんが、違っていたらスルーしてください。 確認はしていませんが… 御提示のＨＴＭＬはパース時に <p id="hogehoge"></p> <ul> <li>aaaaaa</li> <li>bbbbbb</li> </ul> <div id="foo"><strong>cccccc</strong></div> <p></p> として解釈されると思いますので、そのままでは（多分）ご希望の結果は得られないかと思います。 それは置いておくとして、 HTMLの構成が事前にわかっているのであれば、それに沿って子孫要素を特定すればよいだけなので、通常の処理でできるはずかと思います。 例えば、html_objに全体を包括する要素（のクローン）が取得できているとすれば 　　$("li", html_obj)　とか 　　html_obj.find("li") とすることで、子孫のli要素が取得できますので、普通に内容を入替えればよろしいかと。 ただし、idを持つ要素のクローンを作成する場合、idが一意でなくなる可能性がありますのでご注意を。
すみませんが何がしたいのかよくわかりません 小タブのリンクで親タブを更新させたいということですか？
本当に至急であれば何がどう分からないのか説明してください。
内容を見てはいませんが… ＞リンクありでもなしでも並べられたらいいのですが… ご質問通りのことを実現しようとするなら、スクリプトの内容を解析して修正するしかないように思います。 中身を見ていないのでまったくの想像ですが、御提示のスクリプトはレイアウトの調整をしているのみでリンクの制御は行なっていないと想像します。 それなので、スクリプトはそのままにしておいて（HTMLはリンクタグありのまま作成）、リンクがないつもりのリンク要素には、例えばhref="#noLink"などとしておくローカルルールとして、これによってリンクの動作を制御するスクリプトを追加すれば見た目はご質問のようになるのではないでしょうか？ jQueryを利用しているようですので、追加するにしてもたいした行数にはならないでしょう。 例えば、こんな感じ。 $("div#am-container a").each(function(){ 　if($(this).attr("href")=="#noLink"){ 　　$(this).css("cursor", "default"); 　　$("img", this).click(function(){ return false; }); 　} }); #noLinkを設定しておくと、カーソルもポインター表示ではなくなります。
hoge.phpで echo $result; echo $s; とレスポンスを返しても、 function callback(result,s){ } には result しか返ってきません。 result の中に $result と $s のデータがくっついて入っています。 hoge.php で値を返す際に XML とか JSON 形式などで $result と $s をちゃんと分けて返してあげて、callback 関数の中でパースする必要があります。
>>環境については、お客様の環境なので、どのようなことをお聴きすればよいのでしょうか？ OSとブラウザの種類、バージョンです。 JavaScriptは、ブラウザによって動作や処理速度が変わってくるので、あるブラウザでは負担にならないような処理が問題になることもありえます。 あと、そのコードの処理が通常と比べてどのくらい遅くなるかという、具体的な秒数がわかると何らかの手ががりになると思います。
その動作から考えると、トップレベルがグローバルスコープではなく、ローカルスコープでコードが実行されているようです。
よくわかりませんが、回答がないみたいなので… ＰＤＦの文章内にリンクを張っておけば、それをクリックすることでご質問のようなことは可能だと思いますが、これはもともとのＰＤＦの機能なので、javascriptとは無関係とも言えます。 何をなさりたいのか、いまひとつ把握できていませんが、以下にスクリプトのドキュメントがあります。 （acrobat8.0とかなり古いものですが） http://www.adobe.com/content/dam/Adobe/en/devnet … この141ページあたりに、文書からＵＲＬを収集する方法などが書いてあるようですので、そのあたりを中心に探してみてください。 このページの近辺以外にも、あちこちにリンク関連を扱うことに関しての記述があるようです。
別に値を返さないとクロージャじゃないというわけではありませんよ 要は変数を保持する関数がクロージャだと自分は理解しています var getter = function (){ return hoge; } の時点で１つクロージャはできています このクロージャは１つ上のスコープにMethod関数の変数、例えば hoge = "初期値" を持っており、Method関数が終わってもその繋がりを持ち続けているのです ですから関数をreturnするときに何か特別なことが行われているわけでなく、関数そのものが特殊なので、返し方には影響されません また、メモリリーク等通常であれば気にすることはありません そもそもクロージャとは直接関係ありません DOMと循環参照が起きた場合GCによる不要なメモリの回収が困難になるという問題があって、 その処理を書くときにクロージャが便利でよく使われるので、気をつけましょうということであって、クロージャを避けようと受け取ってしまったのなら大変な誤りです それに仮にメモリリークで１回に数KBメモリが消費されたところで、１０００回やっても数MBです 非常に長時間動作するWebアプリケーションでないのなら杞憂というものです
＞一つがスクリプトエラーを起こしたら、このプラグインが生成した<script>全てが動作しなくなります それぞれを別のsciriptにすれば、実行可能なようですが…？（ｆｘ16) もっとも、私の環境（ＩＥ6）では、innerHTMLでは文字列の取得ができないので、それ以前に動作しませんけれど。 そもそも、スクリプトを記述できる場所があってDOMにアクセス可能みたいなので、最初から全てのスクリプトをそこに記述するのがノーマルな発想ではないでしょうか。 body内にないと実行できないのってdocument.writeぐらいかと思いますが、それは違う記述方法にすればよいわけですから。 ＞appendChildをtryに入れてもcatchしません。 意味がよくわかりませんが、innerHTMLで取得しているのは文字列なので、その前後にtry{ }catch(){ }を入れれば、catchは動作しますけれど…？（ｆｘ16） とはいっても、内容がどのようなものかわからないスクリプトに対して、一律にこのような処理をすることには無理がありそう。
たしかに、前に書いた方法だとリンクが機能しませんね。 下記の方法ならリンクが機能しました。 （jQueryを使えばもう少しスッキリ書けそうですが・・・） <!DOCTYPE html> <html lang='ja'> <head> <title>タイトル</title> <style> #test { width:200px; height:200px; border:1px solid black; } #testimg { display:inline; } #testul { display:none; } </style> <script type="text/javascript"> window.onload = function() { document.getElementById('test').onmouseover = function(){document.getElementById('testimg').style.display = 'none';document.getElementById('testul').style.display = 'block';} document.getElementById('test').onmouseout = function(){document.getElementById('testimg').style.display = 'inline';document.getElementById('testul').style.display = 'none';} } </script> </head> <body> <div id="test"><img id="testimg" src="test.jpg"><ul id="testul"><a href="http://okwave.jp"><li>a</li></a><a href="http://www.yahoo.co.jp"><li>b</li></a><a href="http://www.google.co.jp"><li>c</li></a></ul></div> </body> </html>
ANo1です。 ＞具体的にどのようにオブジェクトを記載するのでしょうか ANo1の参考サイトに挙げたドキュメントに書いてある通りかと思います。 よくわかってませんが、上記ドキュメントを元に山手線の駅をマーカー表示して、マップのクリックで情報ウィンドウを閉じる例を… 　* 変数activeInfoがinfoWindowオブジェクトを保持するようにしています。 　* 一番最後のほうのイベントのセットが、マップをクリック時の非表示処理です。 　* 駅の位置情報取得には外部のデータサービスを利用しています。 （全角空白は半角に） <!DOCTYPE html> <html lang="ja"> <head> <title>Sample</title> <style> html, body, div#map_canvas{ height:100%; margin:0; } </style> <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=tr … </head> <body> <div id="map_canvas"></div> <script type="text/javascript" src="http://www.ekidata.jp/api/l/11302.json" charset="utf-8"></script> <script type="text/javascript"> (function(){ //　マップ表示 　var map = new google.maps.Map(document.getElementById("map_canvas"), { 　　center: new google.maps.LatLng(35.68, 139.74), 　　zoom: 12, 　　mapTypeId: google.maps.MapTypeId.ROADMAP 　}); //　マーカークリック時のinfoを表示処理 　var markerEvent = function(marker, content){ 　　return function(){ 　　　activeInfo.close(); 　　　activeInfo = new google.maps.InfoWindow({content:content}); 　　　activeInfo.open(map, marker); 　　}; 　} 　var activeInfo = new google.maps.InfoWindow(); 　var stations = xml.data.station_l; //　マーカーを表示 　for(var i=0, sta; sta=stations[i++];){ 　　var marker = new google.maps.Marker({ 　　　map: map, 　　　position: new google.maps.LatLng(sta.lat, sta.lon), 　　　title: sta.station_name 　　}); 　　google.maps.event.addListener(marker, "click", markerEvent(marker, sta.station_name)); 　} //　マップクリック時にinfoを非表示 　google.maps.event.addListener(map, "click", function(){ 　　activeInfo.close(); 　}); })(); </script> </body> </html>
userAgentを取得して、その内容によって振り分けするぐらいでしょうか… ＜ユーザエージェント意味＞ http://msdn.microsoft.com/ja-jp/library/ms537503(v=VS.85).aspx ＜ユーザエージェント一覧＞ http://www.openspc2.org/userAgent/ http://s-ej.com/glossary/useragent.html
やろうとなさっていることがうまく動作しない直接の原因は文字列にしていないから。 　　onmouseover →　"onmouseover" 　　onclick　→　"onclick" では？ ただし、全ての文字列 "onmouseover" に対して置き換えが起こるので注意が必要。（意味を解釈しないで置き換えられます） そういった意味からも、ANo2様の方法のほうが良さそう。 さらには、 ＞・文章内容を定期的に変更するページなので、 ＞2つページを作成すると、 ＞どちらも書き換えが必要な為、 「文章内容を変更すること」＝「構成が変わること」になるのでしょうから、スクリプトだけ別の修正の仕方を考える方が、実は不自然に感じられます。 どのような処理の可能性が存在するのかよくわかりませんが、いくつかのパターンに分けられるのであれば、例えばclass設定を変えればそれに応じた処理がされるようなスクリプトにしておけば、いちいちスクリプトの処理を置換えたりすることなく、文章の変更作業を行なうだけで終わりにできるかと思います。 イベントの種類ごと変えたいなどであるのならば、ドキュメントレベルでmouseover/out、clickなどを監視するようにしておけばよろしいかと。
100行目辺り //hour difference var eHourString = parseInt(String(end.minute)+String(end.seconds) ,10); var sHourString = parseInt(String(start.minute)+String(start.seconds),10); if(end.hour < start.hour) { timeDiff.hour = 24 - Math.abs(end.hour - start.hour); if(eHourString < sDayString) timeDiff.hour--; } else if (end.hour == start.hour) { if(eHourString < sHourString) timeDiff.hour = 23; else timeDiff.hour = 0; } else if (end.hour > start.hour) { timeDiff.hour = end.hour - start.hour; if(eHourString < sDayString) timeDiff.hour--; } の２箇所の eHourString < sDayString は間違いです eHourString < sHourString に直してあげてください よくあるコピペでの修正忘れです 他にもなんだかソースが少し変ですね 別のを使うことをオススメします
>以下をプレビューすると『id』がないのに、 の意図がハッキリと分からないのですが、 >if(document.getElementById){ これは、質問文にあるコードと同様に、「"document.getElementById"が存在するか？」です。 "document.getElementById"という"関数"は存在しますよね？ if(document.getElementById('hoge')){ としたらalertは表示されないはずです。 この違いが分かりますか？
こんばんわ！ name属性に"["や"]"は使えませんよ。（確か…） なので動作しないのです。 やりたくなる気持ちは分かりますが…(^^; name属性は、同じ名前にして複数配置しておけば 勝手に配列で渡ってきます。 それを利用する…ではダメでしょうか？
ANo1です。 ＞DEMOから色々いじってしまっていまして、 回答者には何も情報がありませんので、想像の方法もありません。 ＞以下をど こに入れたらよいのかが分かりません。 なにか誤解をなさっておいでのようです。 もう一度、前の回答をゆっくりとお読みになってください。 あくまでもDEMOの場合でのことになりますが、対象が「中央下の1～5のページ番号」であると仮定してよいのなら、それは<ol class="rhino-bullets"></ol>として生成されており、その表示位置はrhino-bullets.css内の記述によって制御されているようであるということを記したつもりです。 変更は自己責任でご自由に
jQueryを使うなら <script> $(function() { $('#link').mouseover(function(){$('#back-img').css('background-position', '100px 0px');}); $('#link').mouseout(function(){$('#back-img').css('background-position', '0px 100px');}); }); </script> <a id="link"> <div id="back-img" style="background-image:url('a.jpg'); background-position:0px 100px;" ></div> </a> といった感じ。 CSSでやるなら <style> #back-img { background-image:url('a.jpg'); background-position:0px 100px; } #back-img:hover { background-image:url('a.jpg'); background-position:100px 0px; } </style> <a id="link"> <div id="back-img"></div> </a> といった感じでしょうか。（CSSだとaタグに対するhoverじゃなくなりますが）
読み込み完了前に実行させるようにすればいいと思います。 <head> <script> document.write('<style>#target01{display:none}</style>'); </script> </head> または、 <div id="id01"> <button>押してくれ</button> <div id="target01">文章</div> <script>$('#target01').hide();</script> </div> で、どうでしょうか。
target="new"は新しいウィンドウを開くというものじゃ全くないです。 新規ウィンドウで開く場合はtarget="_blank"です。 前者はnewという名前のウィンドウに表示するということであって、新しいウィンドウを開くというものではありません。 （たまたまnewという名前のウィンドウがないので新しく開く動作をする） もしnewという名前のウィンドウがあれば、ブラウザによっては新しいウィンドウは開かずに既存のウィンドウで開きます。 フレーム名に使われていた場合には、そのフレームでリンクを開きます。 ＞target="new"にするにはどこにこれを書き込めばいいのでしょうか？ aを出力している document.write("<a href='"+jmp[n]+"'>"); を document.write("<a href='"+jmp[n]+"' target='_blank'>"); にすればいい。 ＞静止画像を数秒ごとに切り替えるソース setTimeoutでループさせることになるけど、ループしながら動的にHTMLを書きかえることになります。 document.writeで書いてるんじゃダメなので、HTMLから書き換えになる。 現状HTMLの状況などが分からんので、方法だけ。
>>No.2 お礼 ※関数の外（グローバルコード）に記述 // ラインオブジェクト var lineObj = new google.maps.Polyline({ strokeColor: '#00FF00', strokeOpacity: 0.5, strokeWeight: 5 }); // 出発地マーカーオブジェクト var startMarker = new google.maps.Marker({ icon: 'http://itohiki119.iinaa.net/bousai/icon/F_red_ka … }); // 目的地マーカーオブジェクト var endMarker = new google.maps.Marker({ icon: 'http://maps.google.co.jp/mapfiles/ms/icons/fired … }); function func(response) { var routes = response.routes[0]; lineObj.setPath(routes.overview_path); lineObj.setMap(map); var legs = routes.legs[0]; startMarker.setPosition(legs.start_location); startMarker.setMap(map); endMarker.setPosition(legs.end_location); endMarker.setMap(map); map.fitBounds(routes.bounds); // 追記（自動的に...） } // 終了タグ直前にでも置く </script>
"<img src='localStorage.uUrl'>" ↓ "<img src='"+localStorage.uUrl+"'>"
textareaと対になっている表示用のdivの位置関係が一定なら、それを利用して表示するようにしてしまえば、個別のIDは不要になります。 例えばtextareaのすぐ後にdivがあるのなら 　<textarea class="counter"　～～ 　<div class="contDisp" ～～ $(this).next("div.countDisp").html(count + "文字"); みたいな感じでいけるかと。 * 対象のtextareaにはclass="counter"があると思うのですが、ご提示のサンプルはidのみのようなので、勝手に追記しています。
予約語ではありません 要素イベント中の変数Xは 要素に変数X属性が有る場合それを指します つまり今回だとdownloadはa.downloadを指すのです alert(href)だと「javascript:;」と表示されますがそれと同じです よってwindow.download()とするといいです
こんばんわ！ 何かIEでは特別な動作をしたいんでしょうか？ if(document.all)と判定する分にはまだいいですが document.all['TNAME'].style.displayはあまりよくありません。 それは消してしまいましょう。 あと、idとnameが同名も、あまりいいとは言えません。 必要であれば仕方ないですが、今回は必要なさそうです。 ということで、以下のようにしてみてはいかがでしょう？ if (document.all) { document.all['TNAME2'].style.display='none'; document.all['TNAME'].style.display='none'; } else を消す（2か所） <input type="radio" name="TNAME2" onclick="changeMenu2…の TNAME2をTNAME3とかに変える。（3か所）
スクリプトだけからではよくわかりませんが… if ($(window).scrollTop() > targetOnPosition + 10) { $('.box-' + i).fadeIn(1000); } else { $('.box-' + i).hide() } の部分を if ($(window).scrollTop() > targetOnPosition + 10) targetOn.fadeIn(1000); else targetOn.hide(); のようにしたら動きませんか？
どのような動きを想定していらっしゃるのかよくわからないのと、参考サイトは良く見ていませんけれど、その内容でほぼよろしいのなら… ＞これはクリックすると ＞一つ一つliタグでコーディングされた部分がスライド的に現れるものですが ＞このスクリプトの場合開くにあたる動作しかできません。 例えば、 クリックイベントで設定している部分を、click → hoverあるいはmouseoverなどで動作させ、閉じる時はfadeIn → fadeOutなどのようにほぼ反対の動作がjQueryに用意されていますので、同じ要領で逆の処理をさせるようにすればよろしいのではないでしょうか。
画像と同じサイズのdivを用意してz-indexを調整してみては？
以下のサイトが参考になりますか？ ■　Demo http://sarfraznawaz2005.kodingen.com/demos/jquer … ■　元のサイト(ここにDemoのリンクがあります) http://sarfraznawaz.wordpress.com/2010/03/09/cre …
ANo1様の意見と同じですが、ご提示の範囲とは関係ない気がします。 まったくの想像ですが、ソースが文字化けをしている可能性もありますので、フォントに日本語を指定しておいて（あるいは無指定にして）、ブラウザのエンコードを変えて表示させてみてください。 もしも、それで正しく表示できるようであれば、エンコードの指定がおかしいなどが原因の可能性が高いかと。
例えば $("div").parent() とした場合、$("div")が複数あれば、$("div").parent() も複数になるのでは？
画面をスクロールすると一緒についてくるメニュー？ 「HTML 追尾型メニュー」や「HTML メニュー　追随」で検索した結果に出てくるようなものでしょうか？ CSS＋javascriptですね。 ここで私がずらずら書くよりも、↑の検索結果のサイトを見たほうが 多分読みやすい＆分かり易いかと…
Javascriptがある程度理解できているものとして… 本家本元のドキュメント（の日本語版）がなんと言っても一番ではないでしょうか。 https://developers.google.com/maps/documentation … この周辺を見ていただければ、ドキュメントのほかにもいろいろなサンプルなどもあったと記憶しています。
jQuery Searchable DropDown Plugin あたりを使えばいかがでしょうか？ http://jsearchdropdown.sourceforge.net/ そもそも、昔のWindowsフォームには、こういう「複合型コンボボックス」があって、大量の項目を選択できていました。 Webになって、こういう部分はユーザビリティが悪くなったのですが、Ajaxの登場で救われることが多いです。 プラグイン側でTextboxのchangeイベントを拾って、$(this).val()を送ってくるので、それを受けてjsonで返すサーバサイドメソッドが必要です。 Ajaxがらみで「選択＋Dropdown」プラグインは他にもいろいろあります。 動作原理はよく似ています。<select>を直接オーバーライドするものが多いので、実装も楽かと。 http://www.jquery4u.com/plugins/10-jquery-select …
確かに、「順番が正しいかどうか判定する」の部分に問題があります。 $("buttons").innerHTML=""; としているので、 e.target.parentNodeがnullになっています。 そのため、 e.target.disabled = true; e.target.style.backgroundColor = "#909090"; が無効になります。 for(var i = 0; i < labelArray.length; i++) { var b = document.createElement("button"); b.innerHTML = labelArray[i]; b.onclick = button_clickHandler; $("buttons").appendChild(b); } の中で、labelArray[i]が選択されたものか判断して disabled の設定をすればいいと思います。()が重複するので、そこは工夫が必要です。
ANo2です。 反応がないので、もう見ていないのかもしれないけれど、適当に作ってみたのでご参考にでもなれば… （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> <!-- div#mainNavi{ margin-top:200px; width:600px; height:400px; position:relative; background-image:url(./A.jpg); background-color:#eef; } div#mainNavi ul, div#mainNavi li{ margin:0; padding:0; list-style-type:none; } div#mainNavi ul{ width:100%; background-color:#933; position:relative; overflow:hidden; top: 100px; left:0; } div#mainNavi li{ width:100px; color:#fff; padding:0.1em 0; text-align:center; float:left; } //--> </style> </head> <body> <div id="mainNavi"> <ul> <li>menu1</li> <li>menu2</li> <li>menu3</li> <li>menu4</li> </ul> </div> <script type="text/javascript"> <!-- (function(wrapperId){ var wrapperTop, navi; var maxPos, targetPos = 0; var animation = { 　intervalId : null, 　stop : function(){ 　　clearInterval(this.intervalId), this.intervalId = null; 　}, 　start : function(){ 　　if(!this.intervalId) 　　　this.intervalId = setInterval(function(){ 　　　　var top = navi.offsetTop; 　　　　var def = Math.abs(targetPos - top); 　　　　def = def>6?(Math.sqrt(def)/2 | 0):def>0?1:0; 　　　　if(top > targetPos) def *= -1; 　　　　navi.style.top = (top + def) + "px"; 　　　　if(def==0) animation.stop(); 　　　}, 30); 　} } var init = function(){ 　var elm = document.getElementById(wrapperId); 　navi = elm.getElementsByTagName("UL")[0]; 　maxPos = elm.clientHeight - navi.clientHeight; 　wrapperTop = 0; 　while(elm) wrapperTop += elm.offsetTop, elm = elm.offsetParent; } /*@cc_on@*/ var handler = function(evt){ 　var e = evt./*@if(1)srcElement@else@*/target/*@end@*/; 　while(e && e.id != wrapperId) e = e.parentNode; 　if(e){ 　　targetPos = evt./*@if(1)clientY + document.body.scrollTop/*@else@*/pageY/*@end@*/; 　　targetPos = Math.min(targetPos - wrapperTop, maxPos); 　　animation.start(); 　} } document./*@if(1)attachEvent('on' + @else@*/addEventListener(/*@end@*/ 'mousemove', handler, false); init(); })("mainNavi"); //--> </script> </body> </html>
ボーダーのスタイルを変えればいいと思います
よくわかりませんが… とりあえず、以下のあたりをチェックしてみてください。 1）if()の条件式の括弧が整合していないので、ここでエラーが出て止まります。 2）条件式として正規表現を利用するおつもりのようですが、クォーテーションでくくると文字列として扱われます。 3）正規表現でチェックする場合は、test()やmatch()をご利用ください。 　http://www.site-cooler.com/kwl/javascript/15.htm 4）ＨＴＭＬが不明ですが、document.entry.aaa.valueの部分はdocument.forms["entry"].elements["aaa"].valueなどとしておくほうが確実かと 5)正規表現の記述方法については3）に挙げたサイト他をご参照ください 関数を以下のようにして条件式をチェックしてみれば、どのような判定結果になっているかテストしながら確認してみることができるかと思います。 function checkForm(){ 　alert( 条件式 );　//true or false 　return false; }
ずばり「ニュースティッカー」でぐぐれば？
元になるselectboxを、選択した回数分clone作って名前を変えてやればいかがでしょうか --PHP-- <select name="num" id="num"> <option value="1">A</option> <option value="2">B</option> <option value="3">C</option> <option value="4">D</option> <option value="5">E</option> </select> <select name="num1[0]" id="sel_0"> <? for($i=1;$i<=99;$i++){ ?> <option value="<?= $i ?>"><?= $i ?></option> <? } ?> </select> --javaScript-- $('#num').change(function(){ var numTotal = eval($('#num :selected').val()); $('.sel').remove(); for(var i=1;i<numTotal;i++){ $('#sel_0').clone().insertAfter($('#sel_' + (i - 1))).attr('id', 'sel_' + i).attr('name', 'num1[' + i + ']').addClass('sel'); } });
まだ質問が受け付け中（＆補足になっていた）なのでちょっとだけ… > 反転させる方法がわからなかったのですが 知りたいのはどれですか？ １．ひし形を作る方法 ２．今のソースを反転させる方法 ３．実はそれ以外 １であれば提示したソースでいいですよね？ ２であれば極端な話、せっかくJSPですし<div align="right">を使えば同じコードでできますよ？ ３であれば提示をお願いします。
NO.1です。 「分かってるよ！」と思われるかもしれませんが一応… もし社内にできる方がいないのであれば、 外注（お金を払って作ってもらう）という手もあります。 私もそうですが、個人的に依頼されて作る方も大勢いらっしゃいます。 （個人は会社と違い破格の安さです） ここにそれっぽいコードを書いてもいいのですが、 失礼ながらもう1つの回答をした時に「こういう感じと提示しても 実際の内容に修正できなそう」と感じてしまいました。 意外と質問の数も多いですし…。 お急ぎでないなら、勉強が1番だと思います。 JavaScriptも書籍はたくさんあります。 ガンバって下さい！
No.1です。 > 回答して頂いたソースで上手く出来なかったので、作成しなおしました。 上手く出来なかった理由を教えていただけると対応もしやすいのですが…。 「if(document.getElementById)」はブラウザがJavaScript関数を サポートしているかチェックなので、チェックボックスのON/OFFとは関係ありません。 チェックを変えた時に動作するのは、単に関数が呼ばれたからです。 こんな感じでできると思いますよ。 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> <meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Language" content="ja"> <meta http-equiv="Content-Type" content="text/html; charset=shift_jis"> <meta http-equiv="Content-Script-Type" content="text/javascript"> </head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <script type="text/javascript"> <!-- function show_html(check) { if (check.checked) { document.getElementById("url").innerHTML = '<a href="./index.html"target="_blank">・A<\/a>';} else {document.getElementById("url").innerHTML = '';} if (check.checked) { document.getElementById("url2").innerHTML = '<a href="./index.html"target="_blank">・B<\/a>';} else {document.getElementById("url2").innerHTML = '';} if (check.checked) { document.getElementById("url3").innerHTML = '<a href="./index.html"target="_blank">・C<\/a>';} else {document.getElementById("url3").innerHTML = '';} if (check.checked) { document.getElementById("url4").innerHTML = '<a href="./index.html"target="_blank">・D<\/a>';} else {document.getElementById("url4").innerHTML = '';} if (check.checked) { document.getElementById("url5").innerHTML = '<a href="./index.html"target="_blank">・E<\/a>';} else {document.getElementById("url5").innerHTML = '';} } function show2_html(check) { if (check.checked) { document.getElementById("url6").innerHTML = '<a href="./index.html"target="_blank">・F<\/a>';} else {document.getElementById("url6").innerHTML = '';} if (check.checked) { document.getElementById("url7").innerHTML = '<a href="./index.html"target="_blank">・G<\/a>';} else {document.getElementById("url7").innerHTML = '';} } // --> </script> <title>sample</title> </head> <body> <br> <input type="checkbox" onClick="show_html(this);">H<br> <span id="url"> </span><br> <span id="url2"> </span><br> <span id="url3"> </span><br> <span id="url4"> </span><br> <span id="url5"> </span><br> <input type="checkbox" onClick="show2_html(this);">I<br> <span id="url6"> </span><br> <span id="url7"> </span><br> </body> </html>
ImageViewを入れ替えるというより、ImageViewに表示されているイメージを変更する、と考えたほうがいいんじゃないでしょうか。ImageViewのイメージは、imageプロパティで変更できたと思います。 settei_gray.image = 'settei_blue.png'; settei_blue.image = 'settei_gray.png'; というような感じで変更できないでしょうか。 どうしてもImageViewを入れ替えたい、ということなら、removeで一度home_winからImageViewを削除してからaddし直す、ということになると思います。
見た感じでは、timerEndで同じ処理を呼び出せば良さそうですが。 $( function(){ function start_timer(){ _start_timer(); }//start_timer function _start_timer(){ $('#counter').countdown({ stepTime: 60, format: 'mm:ss', startTime: "00:10", image: 'http://jquery-countdown.googlecode.com/svn/trunk … digitWidth: 53, digitHeight: 77, timerEnd: start_timer, }) }//_start_timer start_timer(); });//$() 未検証です。 メモリリーク激しそうです。
ANo1です。 ＨＴＭＬの構造が明確になりました。補足に記載の構造であれば一段目と二段目は同じ構造になっているはずですので、リンク要素をクリックしたらその次の兄弟要素のulの開閉をトグルで行なうように記述すれば、親用、子用とスクリプトを分ける必要は無いように思います。 以下は上記の説明とは逆の方法で設定していますが、こんな感じでは？ （ul側から見て、前の兄弟要素のクリックにイベントを設定していますが、結果的には同じことです。これだとulが無いリンク要素にまでイベントを設定しなくてすみます。） （全角空白は半角に） $(function(){ 　$("ul", $("ul.ac_parent")).each(function(){ 　　var $ul = $(this).hide(); 　　$(this).prev("a").click(function(){ 　　　$ul.slideToggle("fast"); 　　　return false; 　　}); 　}); });
フォームの送信処理をどうやっているのかわからないのですが……、ひょっとして、通常のフォームと同様に、単に指定のCGIにSubmitで送信しているだけでしょうか。 jQuery Mobileは、実際にコードを書いてみればわかるように、複数のページを１つのHTMLで管理します。つまり、一度読み込んだら、ページ移動などを行わず、JavaScriptの処理でページ切り替えなどをすべて行うように設計されているわけですね。ですからフォームの送信も、そのままSubmitで送信してはいけません（まぁ、Ajaxを切って送信することはできますが、それではjQuery Mobileのよさを失うことになります）。 どうするかというと、Ajaxを使ってフォームを非同期通信でCGIに送り、その結果を受け取ってJavaScriptを使って結果表示などをすべて行うのです。jQuery Mobileは、jQueryのプラグインとして機能しますので、このへんの処理はjQueryのAjax機能をそのまま使って行えます。jQueryの機能について少し調べてみるとよいでしょう。 参考アドレス http://libro.tuyano.com/index3?id=72001
何がどうわからないの？ 我々にはそれがわかりません。
ブラウザやドライバ、GPUやfpsとの相性の問題だと思います
>（なぜか、バックがオレンジで、黒の文字になってしまいます。） 書かれているソースで背景がオレンジ、文字が黒になっているのでしょうか？ 呼び出しは、たぶん<body>でonloadしてるとおもうのですが。 テロップを流そうとしているメッセージボックス部分の記述とか、メッセージボックスにスタイルシートを適用してるとかなですか？ （JavaScriptとスタイルシートのどちらが優先されるとかはちょっと分からないのですが、きになったので。）
multiple selectを模倣してみてもいいと思いますよ つまりcategory=Hobbies&category=12345としてJSで送信 サーバー側ではmultiple selectのように処理する category=12345のhidden inputを挿入するのもいいです
google feedはまったく知りませんが… ＞日付順に読み取っているのですが～～ といういことなので、日付順を判定なさっているものと想像します。 その際に、未来の日付のものはご質問のようなものとして扱い、別処理にすればよろしいのでは？（表示しないとか、それらだけまとめて最後に付け加えるとか） ＡＰＩのリファレンスを見てみると、feed.entries[ ].publishedDateが作成日のようですね。 https://developers.google.com/feed/v1/reference? …
Google Feedはまったく知りませんが、 ＞この部分が上手くいっていないようで、 どううまくいっていないのか書いてありませんが、エラーが出るわけではないのでは？ 単に、何も変わらないだけではないかと想像します。 APIのリファレンスをざっと見てみましたが、sortDateってメソッドもプロパティも見当たりませんけれど、何が返る予定なのでしょうか？ https://developers.google.com/feed/v1/devguide?h … 想像では、存在しないプロパティなのでundefinedになっていて、その結果、条件分岐がfalseになっているだけではないかと… ＞1時間毎にキャッシュ更新というのも組み込みたいのですが 1時間ごとにinitializeを呼び出すようにすればよろしいでしょう。 　setInterval(initialize, 60*60*1000); キャッシュではなく更新して読込ませるためには、ご提示のサイトに書いてある通りで、initializeの中でその時の時間（分秒を省略して）をクエリに付け加えるようにしておけばよろしいのでは？
例のアニメーションの部分だけを言うと、比較的簡単に実装できると思います。 flashかjavascriptかcss3かどれかでしょうね。 アニメーションを簡単につくるという意味ではflashが一番簡単にできそうですが、css3やjavascriptを既に知っている人からすると、どれでやっても同じくらいの手間ですね。 ご存知のようにflashはiOS端末では見ることができません。 CSS3はIE8以下など古いブラウザでは見ることができません。 javascriptは書きようによってはすべての端末で閲覧できますが、対応するのは結構な手間かもしれません。 お好きな技術でどうぞ。
ちゃんと内容を見ていませんが、ul全体の位置をずらしてスライドさせているのだと思います。 循環して表示できるようになさりたいとのことですが、 現状のままだと、最初と最後の要素を連続させようとすると両方を同時に表示（スライド中の表示）できないので、イニシャライズ時にリストの最後に最初の要素をコピーして追加しておきます。 このようにしておくことで、循環する際に必要な全部の状態をスライド表示することが可能になります。 アニメーション部分を自作している場合は、その処理の中でul要素のオフセット値が範囲内に納まるようにmodをとるようにしておけばあとは気にしなくても良くなります。 ご提示のスクリプトでは、ライブラリを使用してアニメーションなさっているようですので、スタート時の表示要素が最初又はコピーした要素（同じもの）を表示中の場合は、アニメーションを開始する前に、次に移動する方向によって表示するオフセットを切替えるようにしておけばよろしいかと思います。
＞ページめくりを下から上にするにはどうしたらいいのでしょう。 canvasを利用しているみたいですので、スクリプトの 　・位置・アニメーションに関して水平座標と垂直座標を全て入替える 　・クリック等のイベントの範囲・方向を調節する 　・ページ用の背景は作り直すか90度回転して表示するようにする で、可能ではないかと思います。 てっとり早くやるには、最初にcanvas全体を90度回転するように(rotate()）しておけば、描画に関してはそのままでもいけるかも知れません。（未検証） ただし、インターフェースの部分は換算し直してあげないとうまく行かないはずと思います。 ＞各ページを別のhtmlにするにはどう記述したらいいのでしょうか ajaxといわれる方法で、各ページを読込んで表示するようにすれば可能だと思われます。 （説明はできませんので、検索して調べてください） ＞素人なんで教えてください。 私も素人なので、どのくらいの素人なのかわかりませんが、この回答程度で理解できない場合は難しそうです。
画像のパーツをそれぞれ全部用意しておく方法でいいですか？
よくわかりませんが、要するにトリミングみたいなことができればよいのでしょうか？ 枠（仮にdiv要素として)にoverflow:hiddenを指定しておいて、そこへ画像をappendしてあげればよさそうですが… z-indexの設定もいらなさそうですけれど。 あるいは、ちゃんと自前でトリミングするなら、計算してCSSのclipでクリッピングしても可能かと。 意味が違っていたら、スルーしてください。
ひとつのアイデアとして、 CSSは後から読んでも、先に読んでおいても良いかと思います。 指定時間になったら、body（又は必要な要素）にクラスを設定することで、適用するスタイルを変えることが可能です。 ただし、javascriptを用いる以上、スクリプトがオフのブラウザでは何も起きません。 以下、10秒後にCSSを切替える例。 （10秒後を指定日にしてあげるようなイメージで実現できるかと） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> <!-- /* Default */ body{ background-color:#fff; } body div{ width : 200px; height : 200px; padding : 1em; color : #f00; background-color : #0f0; } /* Type B */ body.typeB div{ color : #00f; background-color : #ff0; margin : 100px; width : 150px; border : 4px solid #f00; } //--> </style> </head> <body> <div> <p>背景が緑ならTypeA、黄色ならTypeB <p>文字の色が赤ならTypeA、青ならTypeB </div> <script type="text/javascript"> <!-- setTimeout(function(){ document.body.className = "typeB"; }, 10000); //--> </script> </body> </html> ＞その場合どのようなスクリプトになりますでしょうか？ スクリプトとしては、body読込み直後に実行するようにしておいて、 　1）現在日時を取得 　2）指定時間までの時間を計算 　3）2の時間経過後にbodyのクラスを切り替え あるいは、もう少し正確にやるなら 3）で1秒前くらいに日付を取得（で1）に戻る）などとして、一定誤差以内で切り替えといったような考え方も可能です。 でも、ローカルＰＣの時間では所詮正確とはいえないので、サーバの時刻を取得するとか（↓）みたいなサービスを利用するとか… 段々、スクリプトも複雑にはなりますけれど。 http://www2.nict.go.jp/aeri/sts/tsp/link/JST.html
http://oshiete.goo.ne.jp/qa/6895047.html <body tabindex="0"> を付けた上で。 window.opener.focus(); window.opener.documentElement.focus(); window.opener.document.focus(); window.opener.documentElement.body.focus(); window.opener.document.body.focus(); どれかやれば当たるんじゃないかと思います。 （ブラウザに依ってはスクリプトエラーになって動かなくなるかもしれませんが。）
「隣接セレクター」の意味を誤解されているようです。 「隣接」というのは、*同じ階層の深さの*エレメント同士の隣接、という意味です。 今回の例ですと、imgエレメントはaエレメントの「子」になりますので、+imgと書かれている部分を単にimgに修正すれば動作すると思います。 この書き方では「子孫セレクター」になりますので、直下の子、というセレクターの書き方にこだわりたい場合は、>imgになります。
console.log() の行を削除してください。 IE では console.log() は開発者ツールが立ち上がっているときのみ有効な関数です。
ブラウザからそのJSファイルにアクセスできるかどうかを確認してください。 そのパスが、HTML内に記述されているパスと一致するかどうかをチェックしてください。 異常なら、パス名、ファイル名（とくに全角とか半角とかピリオドとコンマ、そしてスペースとかの特殊文字）などを再確認。 正常なら、GoogleChromeなどのブラウザから、「ツール」の「JavaScriptコンソール」を動作させながら、くだんのHTMLにアクセスしてエラーメッセージを確認してください。
回答がないみたいなので… 残念ながら、「理想の動き」が私の環境からは見えませんでしたので、なにをどうなさりたいのかよくわかってませんが、ホイールで移動の目的地を指定するのかあるいは移動する速度などを制御して止まる位置はユーザがホイール操作で調節するのかなどで変わってくると思います。 ＞自然に動かしたい とのことですが、速度を直接変えると大抵極端な変化が出てしまうことになりやすいかと思います。 それなので、加速度を制御する形式にすれば、間接的に速度が変化することになるのでそれなりにスムーズな動きを実現できるはずです。 目的地にきちんと止まることが目的の場合は、目的地と現在地の距離の関数で加速度や速度を決めるとか、あるいはホイールで要素の移動を運転する感じであればホイールの操作で単純に加速度を増減するような考え方にしても、極端な速度変化がなくなり自然な（？）移動が行なわれるはずです。 （車のアクセルを踏んだり離したりと似ているかも） animateのような一律移動の関数を利用するよりも、プリミティブに移動させるほうが、返ってこのような制御はしやすいかと思います。
Q1： 　HTMLのformタグ 　<form name="form1"> 　を 　<form name="form1" onSubmit="Check1(); return false;" > 　のようにする。 Q2： 　pass.jsの先頭に // -------------------------------------------------------- var nPOS = document.URL.indexOf("?"); var sP = document.URL.substr(nPOS);// URLの?以降を切取り var sTargetHtml = "a.html";// 指定が無い場合などのデフォルト sP.match(/[\?|\&]page=([^\&]*)/);// page=?...にマッチ if(RegExp.$1 != '') sTargetHtml = RegExp.$1 + ".html"; // -------------------------------------------------------- というコードを加えて 関数Check1内の 　location.href="a.html"; を 　location.href=sTargetHtml; とする 指定が無い場合の記述が無いので「a.html」をデフォにしました
よくわかりませんが、指定のサイズで開くようなきがしますが？
http://oshiete.goo.ne.jp/qa/7786467.html で、前提にしていたname属性などの設定はしていないみたいですし… http://oshiete.goo.ne.jp/qa/7789420.html で、指摘されているところを修正しているわけでもなし… それなので、どうしたいのかが良くわからないけれど、ご提示のソース限定でご参考までに。 （それ以外の環境では動作しない確率が高いです） function SubmitCheck(){ 　var elms = document.forms["Order"].elements; 　var i, e, str = "", flag = false; 　for(i=0; e=elms[i++];) 　　if(e.type=="checkbox" && e.checked) str += (str?"\n":"") + e.value; 　if(!str) 　　alert("チェックがないよ！"); 　else if((e=elms["購入日"].value)=="") 　　alert("日付がないよ！"); 　else if(flag=!flag) 　　alert(str + "\n" + e); 　return flag; }
できます。 このコードを実行してください。 <html> <body> <div id="sample">内容内容・・・（省略）</div> . . . <div id="sample2"></div> <script> var a = document.getElementById("sample") var b = document.getElementById("sample2") b.innerHTML = a.innerHTML </script> </body> </html> 解説 getElementByIdで取得したHTML要素にはinnerHTMLというプロパティがあります。 それを変えることでHTML要素の中身を変えられます。
async、defer属性を使ってください
処理の中で同じ扱いをするものには個別のＩＤを付けて識別しない方がよろしいと思います。数が可変とのことなのでならなおさらでしょうか。 できれば全体をくくる要素に一箇所だけidを付けておいて、あとは必要に応じてclass設定を行なうか、あるいは、HTMLの構成さえうまく作ってあれば位置関係のみで判断可能になるのでclassも不要になりそうに思います。 その意味からも、ANo1様の提示なさっているマークアップの方が一般的かと。 とはいうものの、変更ができないようなので… 　＞var divList = document.getElementsByTagName('div'); 　＞for(i=0; i<divList.length; i++){ ドキュメント内の全div要素を拾っていますので、まず、対象になるdivだけを絞り込んでおいたほうが賢明かと思います。 そういう意味からもラップ要素を特定できた方が賢明です。 そのままなら、idが「tile##」のdivを検出することになろうかと… 一方で、対象のidが「tilte##」、「contents##」ってのもあまりにもなので、スクリプトを作成してもそのままでは再利用もできないような気がします。 とはいうものの、あれこれ言うだけでは進まないでしょうから、 ライブラリを使わずに似たことを行なう解説をしているサイトがありました。 スクリプトの内容としては決してお薦めするものではありませんが、まったく手がつかないようですので手掛かりにでもなれば。 （クリックではなく、ホバーで動作するようになっています） http://plusone.jpn.org/javascript/sample/acc/aco … 上にも書きましたが、このサンプルの方法に捕われずに、要素のidに頼らないで処理できる方法を、また、onclick属性をあちこちに書かずにすむ方法を考えてみることをお勧めします。
それはJSでは実現できませんねえ・・・ CGIとかPHPとかいろいろ使ってそれでそのサイトの中だけで使えるOpenID的なものを作ればいいと思います。 参考URL：http://dotinstall.com/lessons/sns_php_v2
Uploadifyで、外部リソース入替えで直せるのは、「削除」ボタンだけだったと思います。 「Upload」ボタンを修正したい場合は、付属のFlashソースを直接編集してください。
質問が2つ 1. 確認画面以前に、まともに動かないフォームですがよいですか？ 2. javascriptは分かるの？
有名な記事なんですが、2010年時点での数字。 http://developer.yahoo.com/blogs/ydn/posts/2010/ … これによると、ポットやクローラ、スパムを除去した後の数字として、USの2%、一般先進国の1.3%のブラウザはJavascript不可らしいです。 まあ、その時から２年以上経ってるし、AjaxUI使ったサイトが目立つ最近では、もっと比率が下がっていると思います。。自分の感覚では0.5%くらいかなあ？ 興味深いことに、スマホについては、Javascriptライブラリが使われまくりの状態です。 jQueryUI、kendoUI、SenchaLab etc.. 「小画面ブラウジングを支援するための最良の手段」とか言われているし。 ガラケーのWebブラウジングが壊滅したのは明らかにJavascript未対応が原因でしょう。 js未対応対策としては、アクセシビリティ厨の意見は聞いているときりがないので、無条件でサクッと以下のnoscriptリンクを貼っておけばよろしいかと。 http://www.enable-javascript.com/ja/
やりたいことではなく、方法に問題があります。 通常はおそらくそんな方法は使いません。 やりたいことが具体的にわからないので何ともアドバイスできませんが、やりたいことに対して別の方法をとるのが無難です。 ここで言う方法とは「変数の中にscriptを入れる」という部分です。
意味がよく理解できてませんが… ＞#idouのleftが～pxになったときを拾うようなイベントは存在するのでしょうか？ そのようなイベントはありませんので、監視していて所定の条件になったら処理を行なうといった方法になろうかと思います。 何もきっかけもない時は、常時、一定時間ごとに監視を繰り返すことになりますが、ご質問のケースではanimateの動作中だけ監視すればよさそうなので、animateのoptionのstepを利用すれば、アニメーションの1ステップごとに所定の関数が呼び出されますので目的を達せられませんか？ http://api.jquery.com/animate/ 例えば、 　$("a").click(function(){ 　var i=0; 　　$("#idou").animate({left:0},{ 　　　duration: "slow", 　　　step: function(now){ 　　　　$("body").append("<div>step" + (i++) + " left=" + now + "</div>"); 　　　} 　　}); 　}); （インデントを全角空白にしてあります）
ANo1です。 ご提示のサンプルよりは構成が複雑になっていますが、 http://jquerymobile.com/demos/1.2.0/ http://jquerymobile.com/demos/1.2.0/docs/buttons … もＣＳＳで処理していませんか？ 特に、2番目のトップにあるボタンは、ご質問のものに近いのではないかと想像しますが、 「basics」の部分については、リンク要素に「ui-btn-active」というクラス設定をすることで、他のボタンと表示を変えているように思えますけれど… （ざっと見ただけなので、ちゃんと確認していません）
ANo2です。 ご質問文から、datepickerやajaxの部分を除いて試してみましたが、こちらの環境ではシリアライズできています。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> </head> <body> <div id="datatableShoppingAdd"></div> <script type="text/javascript"> <!-- // 登録画面表示 function doActionShoppingEntry(){ var space = ""; space += '<form id="fmShoppingDetail" name="fmShoppingDetail">' + '<input type="hidden" id="customerId" name="customerId" value="test" />' // + $('#customerId') + '" />' + '<tr>' +'<th>購入日</th>' +'<td><input type="text" id="shoppingDate" name="shoppingDate" /></td>' + '</tr>' + '<tr>' + '<th>場所</th>' + '<td><input type="text" id="place" name="place" /></td>' + '</tr>' + '<tr>' + '<th>品名</th>' + '<td><input type="text" id="hinmei" name="hinmei"/></td>' + '</tr>' + '<tr>' + '<th>金額</th>' + '<td><input type="text" id="kingaku" name="kingaku" /></td>' + '</tr>' + '<input type="button" onclick="doActionShoppingAdd();" value="登録" />' + '</form>'; var obj = document.getElementById("datatableShoppingAdd"); obj.innerHTML = space; } // 登録 function doActionShoppingAdd(){ // 必須項目の入力チェック var data_shoppingDate = $('#shoppingDate').val(); if(data_shoppingDate == ""){ window.alert('購入日は空白では登録できません。'); return false; }else{ var data_hinme = $('#hinmei').val(); if(data_hinme == ""){ window.alert('品名は空白では登録できません。'); return false; } } if(window.confirm("登録していいですか？")){ var data = $('#fmShoppingDetail').serialize(); alert(data); // ←　*********　追加　********** /* $('#gon').text("登録内容は" + data); //gon内のテキストに表示 console.log("data[0]==========" + data[0]); $.post('/shoppingadd',data,function(resp, status, XHR){ if(status == "success"){ $('div#status').text("登録しました。"); } }); */ }else{ return false; } } doActionShoppingEntry(); //--> </script> </body> </html>
スマホはまったくわかりませんが、 ＞$( "<div></div>" ).remove( ); って、『新しくdiv要素を作成して、（追加もせずに）削除する』ってことになるので、結果的に何もしないのと同じでは？ 同じ文を記述すれば、同じオブジェクトの意味になると誤解なさっているのではないでしょうか。 var a = $( "<div></div>" ); var b = $( "<div></div>" ); alert(a==b);　// → false 追加した要素を削除するか、親要素の一番最後の要素（=追加した要素）を削除するようにすれば良いのではないでしょうか。 他でスクリプトが動作している可能性（ないでしょうけれど）も含めて考えれば、前者の方が確実な処理になると思います。
こういうこと？ <script> function SubmitCheck(f){ if(!f.elements["a_fn"].checked && !f.elements["b_fn"].checked && !f.elements["c_fn"].checked ){ alert("最低1つチェックして下さい"); return false; } if(f.elements["d_fn"].value == ""){ alert("購入日を入れてください"); return false; } var confirm_str = "下記の事項をご確認ください。\n" + "正しければ、OKを押してください。\n" + "--------------------------------\n" + "選択：\n" + (f.elements["a_fn"].checked?f.elements["a_fn"].value + "\n":"") + (f.elements["b_fn"].checked?f.elements["b_fn"].value + "\n":"") + (f.elements["c_fn"].checked?f.elements["c_fn"].value + "\n":"") + "購入日：" + f.elements["d_fn"].value + "\n\n" + "--------------------------------\n"; return confirm(confirm_str); } </script> <form onsubmit="return SubmitCheck(this);"> <div> <input type="checkbox" name="a_fn" value="a_val">a <input type="checkbox" name="b_fn" value="b_val">b <input type="checkbox" name="c_fn" value="c_val">c </div> <div> d:<input type="text" name="d_fn" > </div> <div> <input type="submit" name="go" > </div> </form>
> window.openerなどを利用すればいいのでしょうか 遷移方法はどのようはものでも関係ないと思います。 一般的に、画面遷移におけるパラメタの渡し方は、 ・クエリ文字列に吐く ・FormからGET ・FormからPOST ・Sessionに吐く ・Cookieに吐く のいずれかです（Ajaxでも同じ）。 リンク方法をイベントハンドラやJavascript呼び出しにすれば一発ですが、SEO的な観点で通常のリンク記述からいきたい場合は次のようにします（一例）。 jQuery勉強中ということで、具体的なコードは自分で考えてください。 １．preventDedaultで、div#list aのデフォルト動作を止める ２．div#list aにclickイベントを設定する ３．２のイベントハンドラ内で、$(this)のtext()を取得する ４．２のイベントハンドラ内で、documentのlocation.hrefを"a.html?param=" + 上の値にする 遷移先のa.htmlでlocation.searchを読みだし、param=以降の文字列を取得して表示する。
該当箇所のHTMLです。 <--pagetop--> <div class="top pagination"> <span class="current">1</span> <a rel="history" href="#16" title="2">2</a> <a rel="history" href="#16" title="Next ›">Next ›</a> </div> <!-pagebottom--> <div class="bottom pagination"> <span class="current">1</span> <a rel="history" href="#16" title="2">2</a> <a rel="history" href="#16" title="Next ›">Next ›</a> </div> CSSはgalleriffic-2.cssの中に書かれています。 CSSをご存知であれば、あとは煮るなり焼くなりしてください。 ちなみに、上記のHTMLは、javascriptによって出力されているため、ブラウザの通常メニュー「ソースを見る」からでは見ることができません。上記のHTMLを見るには、javascript実行後のHTMLを見る必要があります。ブラウザによって方法は異なりますが、Chromeですと「要素の検証」から見ることができます。なお、強制するつもりはありませんが、Web制作でIEはあり得ないのであしからず。
言ってることは分かるのですが、念のため補足しますと、jqueryというライブラリがあり、そのプラグインを同時に2つ使いたいたいということですね。 プラグインを同時に2つ以上使う事自体はなんら問題ありません。 普通に使えます。 それが問題になってしまうのは、どちらか、あるいはどちらとものプラグインの書き方が悪いため、干渉を起こしてしまうからでしょう。 誰かがつくった無料のプラグインを使う以上は、こういう問題は避けられませんが、プラグインは腐るほどあるため同様の例で困っている人がいる可能性は極めて低く、どこがどのように干渉しているかは、どちらとものコードを引っ張りだして解析するしか方法がありません。 javascriptをご存じないのであれば、素直に諦める範囲ですし、こういう場所で解析をしてくれる人もあまりいないと思います。 ここまでは分かって、ここからが分からないとかなら、回答もつきやすいと思いますが。
横からですが… ＞外からURLで直接パラメーターを与えてあげても、上手く動かないんですね ご提示のコードで表示している内容であれば、URLで指定しても表示できます。 ただし、No1様の回答にあるように、質問者様が、指定するＵＲＬを間違っている可能性が高いです。 ＞URLに引数として記入しても、JavaScriptの方には値は代入されないのでしょうか? こちらに関しては、「URLに記述すること」と「javascriptに値を代入すること」は別物ですので、代入されません。 しかしながら、URLを直接指定することと、ご提示のスクリプトを実行することは、方法は違いますが「サーバにとあるＵＲＩのリクエストを送信する」という意味では同じことを行なっていますので、結果的に同じものをブラウザに表示することが可能と言えます。 No1様の回答をもう一度よく読んでください。 ＞http://www.hogehoge.jp/hoge.jsp?cat=●●&no=▲▲▲ ではなくて、 　http://www.fugafuga.jp/fuga.jso?cat=●●&no=▲▲▲ としなければならないはずではないかという意味の回答です。 （質問文に明示されていない内容なので、推測での回答にはなっていますが…） で、fugafuga～～はどこかと言えば、スクリプトからサブミットしているフォームのaction属性で設定されているURLですということをおっしゃっています。（質問文にない情報なので、これ以上具体的には書けません） また、直接ブラウザにURI指定をするのではなく、スクリプトから指定して同じ（表示）結果を得たい場合は、パラメータ部分に相当する値をスクリプトで読取ってブラウザを遷移させることも可能であるという意味のことをおっしゃっています。 簡単に言えば、何種類かの方法でご質問の「ページを表示すること」は可能ですが、質問者様がテストした際にURLを間違えて指定していた可能性が高いということです。
送信ボタン押下後の確認画面をJavascriptで出す、という話題ですが、これはJavascriptでなく、サーバサイド（phpやASP.NET）で行うべきだと思います。 Webアプリでは、入力フォームの内容は、（データベース使用の是非とは無関係に）いかなる場合も、サーバで処理前に検証するのが常識であり、そこで確認画面を表示することが多いと思います。もし、その時点で不都合があった場合、「以下の内容がＮＧです」を出した後、２画面戻さないと再入力画面に戻れません。 また、チェックボックスのような複数の選択値をもつデータのは、サーバ側では、送信フォーム内容を簡単に配列で取得できるため、パースする手間もありません。 Javascript側では大ざっぱな検証にとどめ、サーバサイドで精密に検証、その後、確認（コンファメーション）画面を出すのが定石かと思うのですが。。。
function () { if (request[i].readyState == 4) { ここの i のスコープを考えると、forのところの i ですが、この無名関数が呼ばれる時点で i は 2 になっていますので、毎回 request[2].readyState を参照するというのはその通り。 request[i].onreadystatechange = (function(x) {return function () { if (request[x].readyState == 4) { var lmdfd= request[x].getResponseHeader("Last-Modified"); 以下、更新日時の確認処理 } })(i);
bg1、bg2、bg3ともに8bit透過または32ビットで作成されてますか？（画像の中の背景部分は透過指定で） なお、IE8は半透明部分が黒く塗りつぶされます。（IE9は半透明が半透明になります。）
下記javascriptをそのままHTML内の該当箇所に追記すれば、たぶん動きます。 ただし、No.3にも書きましたが、HTML上のどこで外部javascriptが読み込まれているかによって、動いたり動かなかったりします。 ------------------------------------------ <textarea name="sitecomment" onkeyup="ShowLength(this.value);"></textarea> <p id="inputlength">0文字</p><br /> <!--↓これ--> <script type="text/javascript"> ShowLength(document.getElementById("sitecomment").value); </script> ------------------------------------------
同じフォーム内であれば this.formのelementsを走査し、typeがcheckボックスの checkedがfalseの要素があったらメッセージをだしてbreak
答えそのまま書きますが、jqueryの前にまず、ifの使い方くらいは学習した方がよいかと。。 if($('.diva').is(':visible')&&$('.divb').is(':visible')) { }
bsn.Crossfader.js： ... _bsn.Crossfader = function (divs, fadetime, delay, stop) // 仮引数の追加 { this.stop = stop || divs.length + 1; // プロパティ設定 this.nAct = -1; this.aDivs = divs; ... } ... _bsn.Crossfader.prototype._fade = function() { this.nTime += this.nInt; ... if (this.nTime == this.nDur) { clearInterval( this.nID2 ); if (this.nAct < this.stop - 1) { // 追加プロパティによる制御文（ブロック開始） if (this.nOldAct > -1) document.getElementById( this.aDivs[this.nOldAct] ).style.visibility = "hidden"; var p=this; this.nID1 = setInterval(function() { p._newfade() }, this.nDelay); } // 追加プロパティによる制御文（ブロック閉じ） } } ... HTML： <script type="text/javascript"> var cf = new Crossfader( new Array('cf1','cf2','cf3'), 500, 2000, 4); // 1から始まる4番目で停止 </script> 改変箇所にはコメントを入れています。
ANo1です。 ＞bodyの背景にこだわっているので～～ ばかばかしくて思いつかなかった方法がありました。 透明化の過程をそれぞれ画像で用意しておいて、順に背景を変えていく方法。 これなら完全に背景の操作だけでご質問の内容が実現できますし、質問者様がご存知の背景を取り替えることのみで実現可能となります。 ただし、事前に画像を読込んでおく必要がでてくるでしょう。 方法論だけですので、上記のような方法をやろうとする人はいないでしょう。（考えもしないでしょう） その意味では、No1の方法もほとんど採用されないと思います。 スクリプトを用いることで動的に画面表示の状態を変えることが可能になりますが、その一瞬々々の状態をとって見れば、HTMLとCSSで表示できないものはありません。 逆にいうと、HTMLとCSSで表示できない状態は、スクリプトを利用しても表示できません。 bodyの背景を半透明にする方法があれば、直接に背景をフェードさせることが可能になるかと思います。
ANo3です。 私もよくわかってませんが、わかる範囲で・・・。 後は、他の方が訂正してくれるでしょう。 ＞1.scriptタグで、jsファイルではなく、phpファイルを指定しても良いのでしょうか 通常はjsファイルですが、phpなどでもかまいません。 sucriptタグの場合は、phpがスクリプトを返せばそのまま動作します。 imgタグの場合は、画像データを返せばそれが表示されます。 ＞2.使い方としては、location.href = url;で、遷移(もしくは更新？)させ 送信するのみという条件だと解釈しています。それなので、遷移は必要ありません。 遷移するのであれば、遷移先のuriを指定し（例えばhoge.php）、遷移先がソースをブラウザに返さないと表示できません。ご質問文では一方向の送信のみで、phpは送信を行はないのだと思いました。 （ANo2様の回答にその旨の確認が書いてあるかと思います） 使い方としては function fuga(){ 　～～～ } とでもしておいて、呼び出すだけです。 実際には、phpに渡すデータは状況によって変わるのでしょうから、その内容を引数にしておく必要がありますね。 ＞3.imgタグのsrcでなぜこのような(URLパラメータとして付与する)ことが可能なのでしょうか？ uriの仕様がそうなっているからです。 今回の場合は、送信先がphpなので、php側でパラメータとして読取れば、送信したことにできるということを利用しています。 ブラウザは画像データをリクエストしたつもりでいるはずですが… ＞2.new Image();は何をしているのでしょうか？ イメージオブジェクトを生成しています。 document.createElement("img") と同等だと思います。 ＞このオブジェクト(?)の有効期間はブラウザを閉じるまで、ぐらいなのでしょうか？ 上記で紹介したように、function fuga(){　～～内で用いれば、その関数内の変数は関数の実行範囲内でのみ有効となりますので処理が終われば開放されるというしくみです。 （グローバル環境でオブジェクトを生成するとちょっと違ってきます） ANo2様の回答と少し違うのはこの点で、ドキュメントに追加していないので何度関数を呼び出してもドキュメントは変わらないということになります。 まあ、No2様のようにscript要素を追加したとしても、どうということもないという意味では同じですが。 ＞3.new Image();で作成した「img」はDOMとは違うのでしょうか？ すみません。専門家ではないので、言葉遣いがよくわかっていませんです。 勝手な解釈では（正しいところはわかりません）、DOM要素ではあるものの、ドキュメントに追加はされていないということなのかも。 それなので、前述のように関数が終了した時点で開放されると思います。 もしかすると、画像データのレスポンスを待ち続けるのかも知れませんが、一定時間が過ぎれば打切られるはず。（画像のリンク切れと同じような処理になるかと）
こそっと。 <form action="#"> <p>String1 :<input type="checkbox" id="checkbox1" value="String1"> <p>String2 :<input type="checkbox" id="checkbox2" value="String2"> <p>String3 :<input type="checkbox" id="checkbox3" value="String3"> <p><input type="button" value="決定" onclick="hoge.call(this)"> </form> <script> function hoge () { 　 var chkbx = this.form.querySelectorAll ('input[type="checkbox"][id^="checkbox"]:checked'); 　alert(chkbx.length); } </script>
訂正：先の回答の1行目は、別で書いていた文章のゴミなので、無視してください。
jQueryはあまり知りませんが、 ＞slideToggle(this.checked); は slideToggle([speed], [callback]) という構文だと思いますので、this.checkedは意味がないのではないでしょうか？ http://api.jquery.com/slideToggle/ とりあえず、この部分を toggle(500); などにしてあげると縦横ともスライドしますので、ご質問の内容にほぼ近くなるかと思います。 横にスライドしてから縦にスライドするなどのように順序をつけたいといった場合は、用意されているメソッド一つでは単純にはできないので、 animate() などを利用して制御してください。 あと、ご質問とは関係ありませんが… 同じ動作をするものに対して個別に処理を一つずつ記述するよりも、まとめて記述しておいた方が、数が増減した時にスクリプトを修正する必要がなくなります。（ご提示の例で3個のチェックボックスが5個になるなど） また、それぞれの要素にidをつけなくても良くなるというメリットもあります。
ANo1です。 jauery-uiのコードはわからないので、理解していないままの回答ですが… ＞全てのスライダがデフォルトの状態に戻ってしまいます。 全部のスライダーを初期化してませんか？ ＞$( "#eq > div > span" ).each(function() { ～～ をその都度実行しているとすれば、対象がその時に存在する要素全部になっているので、全て初期化されてしまいます。 実際には、初期化されるだけでなくイベントの二重設定になっていたりする可能性もあります。 ご提示のコードはわからないので、単純化した例を作成しました。 理由としくみを理解してみてください。 *要素にホバーすると、要素が移動し、そのたびに横幅が少しずつ大きくなるようにしてあります。 *最初の設定関数では、動作を設定すると同時に要素の幅を60pxに初期化しています。 「コメントアウトすると～」の行を無効化すると、ご質問のように、要素が追加されるだけの状態になります。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> <!-- #hoge{ width:100%; overflow:hidden; } #hoge li{ position:relative; margin-top:2em;　} #hoge li div{ position:relative; text-align:center; background-color:#aad; cursor:pointer; } //--> </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> <!-- $(function(){ // 最初からある要素に動作を設定（初期設定） 　$("#hoge div").each(function(){init(this);}); // 新しく要素を追加（動作を設定） 　$("#create").click(function(){ 　　var elm = $("<li><div>test</div></li>"); 　　$("#hoge").append(elm); 　// 下の行をコメントアウトすると追加されるのみになる 　　init($("div",elm)); 　}); // 要素に初期サイズと動作を設定する関数 　function init(elm){ 　　$(elm).css("width",60).mouseover(function(){ 　　　$(this).animate({left:300}, 300, function(){ 　　　　$(this).css("width", $(this).width() + 10).animate({left:0}, 300); 　　　}); 　　}); 　} }); //--> </script> </head> <body> <p> <input id="create" type="button" value="create"> </p> <ul id="hoge"> <li><div>test</div></li> <li><div>test</div></li> </ul> </body> </html>
>リッチテキスト形式のときの入力フィールドもですか？ そうです。
こいつはJavascriptのコードですね。 Google Analysticという、アクセス解析用のコードです。 このコードを埋め込んでおくと、ページが開かれたときに、その時のアクセス状況をGoogleのサーバに送信する仕組みになっています。 利用者は別途、Googleにアクセスして、ページの利用履歴や統計情報を確認します。 サービスのエントリはこちら http://www.google.com/intl/ja/analytics/ ここにサイトを登録し、示されるページ貼付用コードが、このJavascriptです。
既製品を使うか、オーダーメイドにするかの違いです。 既製品なら、すぐに使えます。 オーダーメイドは既製品に無い機能を追加する事も出来ますが、製作中にミスをするかもしれませんし、開発（再開発）に時間もかかります。 既製品で十分な機能が有るというのであれば、一般公開されているプラグインを使えば良いですし、 既製品では不十分だというのであれば、自分でプラグインを作れば良いです。
はじめまして。 document.form6.text61.value+='<a href=#>'; で良いのではないかと。 ちなみにjavascriptでのテキストボックスの要素名の指定が間違ってますよ。
Acrobatアプリケーションを作るなら、SOAPが使えそうです。 http://www.adobe.com/jp/devnet/acrobat/documenta … http://livedocs.adobe.com/acrobat_sdk/9.1/Acroba … Acrobatアプリの作り方はよくわかりませんが、 目次ページのページオープンでSOAPデータを受信して、Doc.addLink()で反映させる、という手順になるんじゃないかと思います。 ウェブページ（HTMLドキュメント）からプラグインで表示する内容をJavaScriptで改変する事は、Flash以外では出来ません。
とりあえずやってみた <script> function shuffleTable() { var n1=document.getElementById("t1").getElementsByTagName("td"); var n2=new Array(); for(var i=0;i<n1.length;i++){ n2.push(n1[i].cloneNode(true)); }; for(var i=n2.length -1;i>1;i--){ var j=parseInt(Math.random()*(i+1)); var k=n2[i];n2[i]=n2[j];n2[j]=k; } for(var i=n1.length -1;i>=0;i--){ var p=n1[i].parentNode; p.insertBefore(n2[i],n1[i]); p.removeChild(n1[i+1]); }; } </script> <table id="t1"> <tr> <td><input type="button" value="1"></td> <td><input type="button" value="2"></td> <td><input type="button" value="3"></td> </tr> <tr> <td><input type="button" value="4"></td> <td><input type="button" value="5"></td> <td><input type="button" value="6"></td> </tr> <tr> <td><input type="button" value="7"></td> <td><input type="button" value="8"></td> <td><input type="button" value="9"></td> </tr> </table> <input type="button" value="shuffule" onclick="shuffleTable()">
はじめまして。 単純に、変数sに文字列を連結している部分で、該当のaタグにrel="prettyPhoto[gallery]"をくっつければうまくいきませんか？
想像だけの回答ですが… 実行のタイミングをきちんと制御できていますか？ google feed apiで読込まれた後に処理するように作成されていないと、対象がまだ存在しないので、見かけ上は動作していないように見えると思います。 外部から読込む処理を行なう際にはタイムラグがあるので、必ずcallbackの中で処理するようにしないと、ご質問のような事象が起きることになります。 対応なさっていれば、原因は別にあると思われますので、スルーしてください。
ANo1です。 ＞普通にjavascriptからstyleを操作する場合ではプロパティに変数を付与出来たのですが、 ＞jQueryでは構文エラーが出てしまいました 逆のはずです。 通常のjavascriptではオブジェクトを引数にはできないはずでは？ どのような書き方をなさっているのか不明ですが、手元にあったjQuryv1.5.2とv1.7.1で確認してみましたが、 　$("#hoge").css(propertyList); で、実行できますし、エラーも出ないようです。
ANo2です。 スクリプトの追加・修正が可能なものとして、回答いたします。 スクリプトの追加や編集にどれだけの自由度が残されているのか（あるいは制約があるのか）、ご質問文からは明確には読取れませんので、そのあたりは工夫していただくとして… ＞両方とも同じidだし。。仮置きできるエリアもないし。。ずっと困っています はい、同じidなので一時的にしろ文法違反を作るのも気持ち悪いですよね。 まぁ、 　<div id="content"><div id="content">～～</div></div> となっている場合でも、jqueryでは読み取ってくれる可能性は高いですが、やらないに越したことは無いと思います。 それなので、仮の要素に一旦入れればよろしいでしょう。 仮の要素が無ければ、一時的に作ってしまえば良いということで… var div = document.createElement("div"); var content = $("#content"); $(div).load("contents1.html #content", function(){ content.html($("#content", div).html()); }); replaceAll()でなく、html()で記述していますがほとんど同じことかと思います。 innerHTMLを利用しても同様ですね。 上記をそのまま記述すると、変数div、contentを新しく作成しているため、他の部分で使用しているかも知れない「変数div」等とコンフリクトする可能性をゼロにはできません。それを避ける意味からも（文字数が許すのであれば）匿名関数で処理をするなどにしておく方が安全かと思います。 （他の部分が複雑で理解不能とのことですので、なおさらですね） ちょとひねって 　$("#content").load("contents1.html #content>*"); とすれば一発でいけてしまうようですが、#content直下にテキストなどがある場合に全ての環境で確実に取得できるのかどうかが私にはわかりません。（大丈夫そうな気はしますが、ちゃんと調べていませんので） 普通に、ajaxで取得して置き換える際にはloadではなく、getやajaxを用いることになると思いますが、スクリプトの記述はもう少し長くなるかと思います。（研究してみてください）
p要素の中にdiv要素を入れることは、HTMLの規定上NGです。 （p要素に含められるのはフレージング・コンテンツだけで、div要素はフロー・コンテンツです） そのためDOM構造が崩れているため「削除されるはず」の部分がp要素の子孫と見なされていないのだと思います。
仕様書を読んだわけではないので、あくまで個人的な感覚ですが、focusとは「選択」に近い意味合いだと思います。また、input要素の場合、キャレットの移動を意味するはずです。従って、非表示の要素は選択もキャレットの移動もできないという印象です。というか実際できませんよね。試してないのでわかりませんが、visibility:hiddenならまだなんとなく出来てもおかしくない気がしますが、おそらくそれでも出来ないでしょうね。 どうしてもやりたいなら、position:absolute;z-index:-1;で、他の要素の裏側に回して隠してしまう手もありますね。 ただし、どういう方法であれ、隠し要素はgoogleのガイドラインに触れますね。ご利用は計画的に。
jQueryやprototype等のライブラリ内では、良く利用されているようです。 それぞれのライブラリ内で、「$」自体に意味があるそうですよ。 参考URL : http://semooh.jp/jquery/ref/cont/with_prototype/
あなたの文章からは姓名の分かち書きされた入力項目各々についてふりがな振りたいということしかわかりません。 AutoKana.jsでルビを振りたいのか、それともAutoRuby.jsでそうしたいのかはっきりさせてもらわないと…。 どっちなんですかね？ 特に制約がないならAutoKana.jsを使えばいいとおもいますけど、何が不満なんですかね？
No1です。 ＞画面上の表示されている範囲の上から、その取得した値でもって ＞計算されてしまい、結局すごく見切れてしまいます かえって下のほうに表示されるってことでしょうか？ それって、操作しようとしている要素が、bodyに対してabsoluteとなるように設定されていないのでは？ それとも、scrollTop()で画面のスクロール量を取得できないってことでしょうか？
こんにちは。 >javascriptをゴリゴリ書いて作るということでしょうか？ ブラウザの差異の吸収やAjaxの利用等を行ってくれるのがjQueryですのでそれ以外のところはもちろんゴリゴリ書きます。 jQueryはあくまで便利なライブラリですので、それを利用するにはJavaScriptで書く必要があるのは当たり前です。 例えばAjaxを利用してデータを取ってくる際はjQueryを利用すれば数行で書けます。 ただし、取得したデータをどうするかは自分で書く必要がありますよね。 // get.phpからJSONデータを取得するのはjQueryのおかげでこれだけ $.get ('get.php',{q:query},function(json) { // 取得したjsonを利用して表示したりする場合はここで自分で記述する必要有り alert ( json.name ); // いろいろな処理 });
ＡNo.2です。 ＞javascriptをoffにしている際の、条件分岐がわからなくて スクリプトをオフにしている場合はスクリプトが動作しませんので、スクリプトの中で条件分岐を考えること自体に無理があります。 スクリプトが動作しない場合（スクリプトが無い場合に起こる状態）が、その条件分岐の結果となるように考えればよろしいのではないでしょうか。 それをベースにして、スクリプトが動作する環境での処理をスクリプトに記述しておけばよいと思います。 例えば以下の例は、スクリプトが動作しない環境も考慮して作られている一例です。 http://d.hatena.ne.jp/Mars/20071109 意味が違っていたら、スルーしてください。
>>スタイルに対して演算機能を付けることを目的としております。 詳しい仕様がわかりませんが、内容によっては少し面倒になりそうです。 >>色々サイトを探したのですが、イベント処理が行われたら、 はじめてフォントを変更するようなスクリプトしかみつからず、 そのソースのイベント処理を、onloadイベントに変えればいいのだと思います。 ソースの内容がわからないので、具体的にどう変更するかは何とも言えません。
気になったので調べてみましたが、 file:プロトコルでは同一ドメイン制限に引っかかりますね。 ウェブサーバーにアップロードするか、ローカルにウェブサーバーを設置してhttp://localhost/でアクセスしてみると大丈夫そうです。
通常は、ブラウザに用意されている開発ツールなどを使ってスクリプトのデバッグを行います。例えばChromeでは、「デベロッパーツール」メニューを選び、エラーが発生するところにブレークポイントを設定してデバッグします。エラーが発生した場合も、その呼び出し元をたどっていくことができます。 IEの場合も、IE9であれば「開発者ツール」というメニューが用意されていますから、これでデバッグウインドウを呼び出して同様のことを行えます。Firefoxは、FireBugというプラグインをインストールして同じように作業できます。
はじめまして。 先ずはログファイル見たほうがいいと思います。音楽ファイルが再生できればアクセスログに残り、そうでない現状ではエラーが上がっているはずです。そのエラーの内容から、何かしらの設定のミスを推測していく…、という流れです。 ログに「404 Not Found」が上がっているに1票投じます。 Webサーバーからファイルが見えないので再生ができないんでしょう。 ドキュメントルートの設定があってないか、MIMEの設定の問題かと。 MIMEの設定は参考URLを読んで下さい。 参考URL：http://www012.upp.so-net.ne.jp/cool_r32/myserver …
ちゃんと確認していませんが… >すべてのウインドウが、写真サイズではなく、一定のサイズで立ち上がるようです ご提示のサイトのものは、ウィンドウサイズに影響されてサイズが変わるようですが？ （Firefoxで確認） ご提示のサイトで利用しているのは、colorboxではないかと思います。 colorboxの配布サイトにあるデモの中で、『fixed width and height』というものがありますが、このあたりを利用しているのではないでしょうか。 http://www.jacklmoore.com/colorbox/example5/ オプションで、width、heigthを指定しきるようになっているみたい。（Settingsの項を参照してください） pxでも%でも指定可能なようですので、ご質問のようにもできるかも。 http://www.jacklmoore.com/colorbox
JavascriptのカテなのでJAVAではなく、Javascriptのご質問とみて回答します。 ご質問のような効果は、フェードイン／アウトと言われる効果だと思います。 検索すれば方法はすぐに見つかりますが、簡単に言えば、画像の透明度を変えるアニメーションを行いながら表示することで実現可能です。 ＞数枚の画像をエンドレスで入れ替えるだけだと出来るのですが、 入れ替え表示をする際に、上述の方法で表示すればよろしいでしょう。 画像をフェード効果つきで順次表示するようなライブラリも沢山作られていますので、そのようなものを利用するのも一法です。 ライブラリも検索するといろいろ見つけられると思いますので、そのなかから気に入ったものを利用なさればよろしいかと。
回答ではありませんが… まずは、マークアップを修正することからはじめましょう。リンクタグの中にブロック要素を入れるのは文法違反のはずです。 HTMLが変われば、CSSもスクリプトも変わってしまうでしょうから。 あと、スクリプトなどを提示するのは良いのですが、質問に関連ない部分は省いてコンパクトにしたり、読みやすい形で提示したほうが回答がつきやすいと思いますよ。 （失礼ながら、ご提示の例では読む気になりません。）
＞今は全く選択できないものがあり使いづらいです。 2.5.8になっても、scriptの処理選択のメニューなどに変更はないように思いますが、何が問題なのでしょうか？beta版のver17.0でも問題ないです。 アドオンバーが表示になっていて、そこにNoScriptのアイコンが表示され、また、新規のページなどでは、情報バーがアドオンバーの上に表示され、そこのオプションボタンやNoScriptのアイコンをクリックしたら、各Scriptの許可・ブロックの処理ができます。 〇表示→ツールバー→アドオンバーにチェックが入っていますか？ 〇アイコンがない場合は、メニューバー上などで右クリック→カスタマイズで開いた画面の中にNoScriptのアイコンがありますか？あれば、ドラッグして、アドオンバーにドロップです。 〇NoScriptの設定は、「オプション」の「通知」タブで、 ・スクリプトをブロックしたときに情報を表示するにチェック入れ ・情報を下部に表示するにチェック入れ ・〇秒後に隠すは、適宜設定 であれば、よいと思います。 それでもおかしければ、一旦、NoScriptを削除して、about:configで残骸が残っていれば、関係の設定名をすべてリセットして再インストールしてみたらいかがですか。
回答がつかないようなので… ＞クリック時に鳴らすことは出来るですが、～ 想像するところ、HTMLの要素にonclickで指定しているか、スクリプトからclickのイベント処理を設定しているかのどちらかでなさっていると思いますが、その部分をonmousoverやmouseoverに変えてあげればマウスオーバーのときに実行されるようになるはずです。 両方なさりたければ、両方とも設定すればよろしいでしょう。ただし、騒々しいサイトは嫌われる可能性が高いように思います。
Webサーバーにアップされているとのことですので、私のケースとは違うようです。 「widget not whitelisted for domain “ドメイン名”」と出ているとのことで、 ホワイトリストに関する記事を見つけましたので、参照URLにペーストさせていただきました。 もしかしたらもうすでにご覧になられているかもしれませんが、ご覧ください。 あと、ウィジェットの作成時のドメイン名はどのように登録されましたでしょうか。 「www」が付くURLを、「www」を省いた状態でウィジェットを作成し、埋め込んだ場合も表示されません。 もし、お心当たりがあれば、ウィジェットをもう一度ご確認ください。 参考URL：http://takao.asaya.ma/article_957.html
GETに変数つけるときは文字列をencodeURIとかして 記号や全角文字をエスケープしなきゃいけないけど $.getはそのへんやってくれるので楽 あと$.getはサーバーのプログラムが処理した結果を コールバックに渡せるのでAjaxに使えます、 というかそもそもAjaxの為の関数で 『これはAjaxのリクエストですよ』ってカンジの情報が httpリクエストオブジェクトに付きます どっちで送られて来たとしても結局PHPは $_GET[" "]なりで取得するワケなんで PHPはあんまここでは関係ないですね
さくらサーバでは共有サーバの最安プランでもCRONが使用できるようなので、DBをチェックして24時間たった登録情報からメールを送信する処理のPHPを作成し、CRONで1分毎なり5分毎なりで実行すれば可能です。 ただし、負荷が高くなると運営会社から断られるかもしれません。
そういうときはsetTimeoutを使う いちいちclearするとか変
if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){ 多分ここのことだと思いますが、表示できないので略されてるんじゃないでしょうか 同じく後者もだと思いますが、略されてる部分が長過ぎてコピペできません、 ついでにいうとこれの前半はjQueryのプラグインじゃなくてjQueryそのものです 後ろの方にメニューに関する記述がありますが解析・改造用に改行とかインデントとか 一切入ってないのでload-scripts.phpから見るんじゃなく wp-admin/js/nav-menu.dev.js に解析用のコメントもついたjsファイルが置いてあるので、 メニューの処理を解析したいならそれ見たほうがいいと思います
if文とかで状態を管理して振り分けるか text1とtext2を囲った要素を用意して(たとえばdivとかで)、そこからblurした場合に非表示にするようにすれば。 text1 Click text2 show div blur text2 hide もし自分が今使っているコードを理解できていないのであればどうなってるのか考えてみましょう。
取り敢えずresponseTextをresponseXMLにすればDOMで取得できますから そこからgetElementsByTagNameとかで範囲を狭めていけばいいでしょう 綺麗なやり方じゃなくていいのならresponseText.match(/<p>.+?<\/p>/)とかやればいいでしょう
No.4です。 結局、なさりたいことがよくわかりませんが… ひょっとしてこんなこと？ （よくわからないので、適当です。また、方法はNo.3と異なりますが、悪しからず。） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> <!-- ul#store, ul#store li { list-style-type:none; margin:0; padding:0; } ul#store li { width:150px; margin:10px 2px; float:left; text-align:center; } ul#store div.goods { width:150px; height:100px; border:1px solid #ccc; } //--> </style> </head> <body> <ul id="store"> <li><div id="goods001" class="goods">goods No1</div> <input type="button" value="選択"></li> <li><div id="goods002" class="goods">goods No2</div> <input type="button" value="選択"></li> <li><div id="goods003" class="goods">goods No3</div> <input type="button" value="選択"></li> <li><div id="goods004" class="goods">goods No4</div> <input type="button" value="選択"></li> <li><div id="goods005" class="goods">goods No5</div> <input type="button" value="選択"></li> <li><div id="goods006" class="goods">goods No6</div> <input type="button" value="選択"></li> <li><div id="goods007" class="goods">goods No7</div> <input type="button" value="選択"></li> <li><div id="goods008" class="goods">goods No8</div> <input type="button" value="選択"></li> <li><div id="goods009" class="goods">goods No9</div> <input type="button" value="選択"></li> <li><div id="goods010" class="goods">goods No10</div> <input type="button" value="選択"></li> </ul> <div style="clear:left; margin-top:50px;"> <h3>変数aryの内容</h3> <p id="disp">なし</p> </div> <script type="text/javascript"> <!-- (function(){ var ary = []; function hoge(evt){ 　var t = evt.target || evt.srcElement; 　if(t.nodeName!="INPUT" || t.type!="button") return; 　var flag = t.value=="選択"; 　var goods = t.previousSibling; 　while(goods && goods.className!="goods") goods = goods.previousSibling; 　t.value = flag?"削除":"選択"; 　goods.style.color = flag?"#f00":"#000"; 　var id = goods.id; 　if(flag) 　　ary[ary.length] = id; 　else 　　for(var i=ary.length; i>0;) if(ary[--i]==id) ary.splice(i, 1); 　dispAry(); } function dispAry(){ 　var r = ary.length?"":"なし"; 　for(var i=0; i<ary.length; i++) r += (r?", ":"") + ary[i]; 　document.getElementById("disp").innerHTML = r; } /*@cc_on@*/ document.getElementById("store")./*@if(1)attachEvent('on' + @else@*/addEventListener(/*@end@*/ 'click', hoge, false); })(); //--> </script> </body> </html>
ウィンドウ基準でみるよりFlash基準で座標を見ないとやりにくいでしょう あとフルフラッシュでも他のエラーページなんかでもwebkitではちゃんとドキュメントが生成されていていじれますよ 例えばこんな感じになっています <html><body marginwidth="0" marginheight="0" style="background-color: rgb(38,38,38)"><embed width="100%" height="100%" name="plugin" src="xxx.swf" type="application/x-shockwave-flash"></body></html>
Date = new Date(document.form.y.value,　…… これが原因ですね。Dateオブジェクトを上書きしてしまっているので、次にnew Dateしたときには前回作成したオブジェクトがDateに設定されており、Dateコンストラクタ関数ではなくなってしまってます。なので、Dateという変数名を変えてください。
No.2です 連投失礼 $("a:first", this) でよかったですね。
２つにわけてみてはどうでしょうか。 （jQueryは内部でクロージャーを作りますので、1つめの$('#box01')と2つめの$('#box01')が別々のタイマーで管理されると思います。） $('#box01').fadeIn(1000); $('#box01').animate({'marginTop': '-20px'});
ブラウザによっては$(document).ready(function() ～ でも動作するみたいです。 ちゃんと確認したわけではありませんが、少し実験してみたところ、 $(diocument).readu(function(){　内で　alert(this.title)などとしてみると親ウィンドウのタイトルを返します。 一方で、$(window).load の場合は、alert(this.document.title) で子ウィンドウを返します。 jQueryの中を見てみないとわかりませんが、$(document) は確かに子のドキュメントを取得していますが、$(document).ready ではどうやら親ウィンドウのreadyにバインドされているみたいですね。 それなので、動作しない場合は $("body", document) は空配列を返していると思われます。 つまり、子ウィンドウのボディがまだ読込まれる前にスクリプトが実行されていると推測されます。（親ウィンドウはready状態） スクリプトを子のソースのbodyタグ以降に移動してみると、bodyが存在するので実行されることがわかると思いますし、入れる位置によってappendされる位置が変わってくるのもわかるかと思います。 あるいは、 　setTimeout(function(){ 　　$("body", document).append( "hoge" ); 　}, 300); のように、時間差を設けてあげれば、head内に記述しても動作するのがわかるかと思います。
初期状態がどういう状態なのかを具体的に教えて下さい。 回答側はそちらのjavascriptの内容を知らないので、初期状態にするために必要な事柄すべて教えてください。
サーバー側で、アクセスした側の時間を記録して管理しているとこはありますか？ １００万人アクセスしたらそれをすべて覚えておくのですか？現実的？ ページからフォーカスが外れたら、それまでのカウントを記録するのではなく、 一番最初にアクセスした時間を記録して、そこからの差分でよくないですか？ アクセスした側のPCの時間を基準としているので、曖昧ですよ？大丈夫？
こそっと。 for(var i=100,c=0;i;i--)c+=i%7?0:i;alert(c)
No.1です。 ＞<div id="updates"></div>部分に追加取得した<li>～</li>を出力するようにしています。 <div>内に追加した時点で（というかdivがある時点で）文法違反になっていませんか？ ＞ブラウザ上で「ソースを表示する」で取得したhtmlソースは(1)初期状態～～ ブラウザの「ソースの表示」は常に「ソース」を表示するようになっています。 変更されたＤＯＭを確認する場合は、スクリプトで表示させるか、あるいは開発用のツールなどで御確認ください。（最近のブラウザには装備されているものもあるかと思います） さて、元のご質問文にあるソートのスクリプトですが ＞$('#list > li')～～ となっていますので、<div>内の<li>要素は対象にならないので、（元からある）<li>要素だけが対象になります。 さらにその結果を、 ＞$('#list').html(～～） としていますので、結果的に、対象外のものは削除されることになります。 これが直接の原因ではないですか？ この辺りを調整すれば、意図なさったようになるかと…
No1です。 ＞画像サイズが大きい場合に”読み込んでいます”ということが ＞判るようにローディング画像を表示するということです。 画像に限定してよければ、対象となる画像のロード状況をチェックしてＯＫか見ればよいと思いますので、completeで取れるのではないかとテストしてみましたが、どうもFirefoxがcompleteに対応していないみたいですね。 ＭＤＮの説明ではHTML5ならＯＫという風に読めるのですが、テストしてみるとどうもダメっぽい。 https://developer.mozilla.org/en-US/docs/DOM/HTM … しかたがないので、画像のプレロードと同様に対象画像を再読込してオンロードイベントを数えて読み込みをチェックしてみたところ、Operaでは読込めない場合てもイベントが発生してしまうようでした。 そこで、オンロードの中でさらにcompleteを確認してみることにしたところ、今度はＩＥでイベント直後はcompleteがfalseになるという始末。それなので、さらにタイムラグをつけてcompleteを判定するということに。 全部のブラウザで確認したわけではないので、これでよいのか不明ですし、もっと効率の良い方法がありそうな気がしますが、ひとつのご参考までに。 （DTDは4.01strictで確認） numが0になっていれば読込み終了ということになりますが、uriを間違えていたり何らかの理由で読込めなかったりすると、ずっと0にはなりませんので、時間を区切ってクリアしてあげる必要があるかと思います。（画像が1枚だけならも少し簡単になるかも） いっそのこと、window.onloadのタイミングでフラグをたてるようにした方がわかりやすくて簡単かも知れませんね。 var imgs = $("#tooltip img"); var num = imgs.length; imgs.each(function(){ 　var img = new Image(); 　img.onload = check(img); 　img.src = this.src; }); function check(g){ 　return function(){ 　　setTimeout(function(){if(g.complete) num--;}, 5); 　} }
No1です。 ＞どの辺りが問題か具体的に教えて頂けますでしょうか そのままのソースとコードで実験してみれば、動作しないのはわかるかと思います。 原因は、$(".grp1")が空のオブジェクトになるから。 それとも、質問文に記載のないどこかに用意されているのだろうか…
zRSSFeedのサイトの説明文の中に 「How to sort feeds by title and date」というものがあるみたいです。 当方日本語以外はさっぱりなのでよくわかりませんが、ご質問の回答にピッタリなのではないでしょうか。 http://www.zazar.net/developers/jquery/zrssfeed/ …
どんなものを作りたいのかよくわからないですができます
＞ふと思ったのですが、だんだん私の最初の質問から離れていくように感じるのですが、私だけでしょうか。 離れていっていません。 そもそもどこで動作してるのか把握してないこと自体問題なんですけど。 valoxさんの書かれているjavascriptはブラウザ上で動作するものであってWebサーバー上で動作するものではないです。 Webサーバー上にもっていったところで実行される際にはブラウザにロードされて実行されています。 ですのでWebサーバー上で動作させるには(今回はおそらくWebサーバーはIISなので)ASPで書き直してください。 ASP JScript で調べると書き方が違うのがわかると思います(イメージ的にはphpを想像すればわかりやすいかと思います)
＞ページ遷移したタイミングで コンテンツも一緒に開きたいのですが 初期表示が、開いた状態になっていれば良いということでしょうか。 　<div class="tuiki mgt-15" style="display: none;"> の部分の、style="display: none;" で最初に非表示に設定しているので、この指定をなくせば最初から表示された状態になるかと思います。
bbbは文字列じゃないから。
console.logの結果をfunctionの返値にしている意味がいまいちわかりませんが。 var hoge = 777; c("hoge"); function c(a){ return console.log(a + ': ' + eval(a)); }
iframeのソースを変更するなら、 iframe.location=url; ではなく、 iframe.src=url; ですよ。
こんにちは。 以下のようなイメージでしょうか。 http://hppg.moe.hm/okwave/qa/q7732311 (パーっと作ったので細かい表示のズレとかあるかもしれません) スライドショーは好きなプラグインを利用して下さい。 (ただし、スライドショー終了後に任意のJavaScript関数を実行できるもの) 今回はRhinofaderを利用しています。 設置参考サイト http://coliss.com/articles/build-websites/operat … 公式サイト http://rhinoslider.com/ またcookieを簡単に扱うためにjquery.cookie.jsを利用しています。 (4.の1度訪問した人にはスライドショーを表示しないようにする為) 動作原理は、 #main,#topimageはスタイルシートで非表示 クッキーを参照し、訪問者である場合は#mainをshow()で表示することにより通常のコンテンツを表示する。 初めての訪問の場合は#topimageをshow()で表示し、スライドショーを実行する。 全てのスライドショーを実行後にスライドショーの画像をfadeOutし、非表示とする。 fadeOutの実行終了後に#mainをfadeIn()することで通常のコンテンツを表示する。 このような動きになっています。
