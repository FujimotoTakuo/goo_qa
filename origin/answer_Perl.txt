結論は #8 の通り (もうちょっと効率的にはできるけど大した意味はない) なんだけど, ちょっと指摘しておきたい. #7 の「split が何を返すのか確認すること.」に対して「splitのWEBリファレンスを読んでいます。」の結果として「split(',',$_)」と「split /,/, $_」の「双方で処理を行ってみた」んだよね. だとすると, 「splitのWEBリファレンス」を読んだことにより, この 2つで異なるものが返ると判断しないとおかしい. では, その「splitのWEBリファレンス」では「split が何を返すのか」についてどのように書いてあるのでしょうか? そして, それを読んでどう考えた結果としてこの 2つで異なるものが返ると判断したんでしょうか?
説明用に ・データと添字に同じ値があるので、混同しないように値を変えます。 ・そのままでは2種類の$aが出てきてしまうので、リスト変数の名前を変えます。 @l=(5,4,3); print sort(@l); http://perldoc.jp/func/sort sort の後に、関数名やブロックを書くことで、並び換えの順番を制御することができます。 これを使って 「@lの全添字のリストを、その添字に対応した$l[x]の値で比較してソートする」 とすれば、ご希望のものが得られます。 @index=(0,1,2); @l=(5,4,3); print sort( { $l[$a] <=> $l[$b] } @index); #工夫すれば、 @index を使わずに書けます。 # ( http://perldoc.jp/docs/perl/5.20.1/perlop.pod#Ra … ) また、上記URLに、ハッシュのキーをハッシュの値の順番に並べる、という例があります。 > # this sorts the %age hash by value instead of key > # using an in-line function > @eldest = sort { $age{$b} <=> $age{$a} } keys %age; これ応用して、 添字→キー、リストの値→ハッシュの値 と対応させる方法もあります。 %h =( 0=>5,1=>4,2=>3 ); print sort( { $h{$a} <=> $h{$b} } keys %h); ハッシュのキーと値、ではなく、無名リストで添字と値のペアにする、という方法もあります。 %l =( [0,5],[1,4],[2,3] ); print map {$_->[0]} ( sort( { $a->[1] <=> $b->[1] } @l) ); # sortの結果はリストへのリファレンスになっているので、そこから添字だけ取り出す必要があります。
s///eg でどうにかなりそうな気はするけど.... 「『どうしたいのか』が完全な形で出てくるなら『どうすればいいのか』も完全な形で出せるかもしれない」としかいえないなぁ.
for $aref (@newtable){ print @{$aref} ; } とだけ書いて、参考になるなら、それでいいんですけど。 $aref=$newtable[0] ; とすれば http://perldoc.jp/docs/perl/5.22.1/perlreftut.po … にある方法で、1行目のデータを配列として扱えます。 for $aref (@newtable){ ここで$arefを使って各行の処理をする; } とすれば、全行に対して処理できます。 よって「各行をデリファレンスして出力」なら for $aref (@newtable){ print @{$aref} ; } です。 ただし、全てが1行に連結されて出力されます。 ですが、それはデリファレンスとはまったく関係無い話なので、今回の回答として不適切になります。
数値がコンピュータ内部で2進数で表現されているということです。 例えば2進数で整数を考えてみると、 　1桁目の重みは、1 　2桁目の重みは、2 　3桁目の重みは、4 　…… となるので、101という2進数を10進数に変換するには、1になってる桁の重みを足して 　4(3桁目の重み)+1(1桁目の重み)=5 となります。 小数点以下も同じ考えで、 　小数点以下1桁目の重み=1/2(0.5) 　小数点以下2桁目の重み=1/4(0.25) 　小数点以下3桁目の重み=1/8(0.125) 　…… となるので、例えば1.001という2進数は、 　1(1桁目の重み)+1/8(小数点以下3桁目の重み) = 1+1/8 = 1.125 になります。 > ここで質問ですが端数が1/8とは、噛み砕いて説明するとどういうことなのでしょうか。 上で説明したとおり、2進数表現で小数点以下3桁目が、1になっていたということですね。 そのため、10進数表現に変換したとき小数点以下第2位までで表現したいのに0.005の誤差が出てしまうので仕方なく第3位まで表示したということです。 このように小数点以下の数値を2進数表現と10進数表現の間で変換する場合には、ある桁数で切ると誤差がでてしまいますので、予めそれを考慮する必要が生じます。
そんなに細かくできません
print "$1\n" if ($url =~ /\<a href=\"(.+?)\&quot;/);
Windows は、マイクロソフト社が以前販売していたOS（MS-DOS）とファイルの兼ね合いで、 「長いファイル名」と「短いファイル名」の両方を持たせ互換性を維持させています。 （実はこれ、結構有用だったりします） 実行時には一般的にどちらのファイル名を指定しても問題はありません。 これは Windows 95 から採用されているものです。 コマンドプロンプトで「dirコマンド」を実行すると、特に指定していない限り長いファイル名で表示されますが、 「/x」のオプションを付けて実行すると、短いファイル名で表示されます。 すべてのディレクトリ（フォルダ）でどちらのファイル名も存在することを確認してみると良いでしょう。 このように２つファイル名を持っているのがWindowsのシステムです。 …解説はこんなもんでいいでしょうか。 質問そのモノの回答はNo.1で行っていますのでそちらを参照願います。
文字化けの原因を調査しましょう。 ・元のファイルは本当にShift_JISなのか ・出力されたファイルは本当にUTF-8なのか 　→出力はUTF-8になっているが、ブラウザがUTF-8にならない ・「---内容を$htmlにセットして」の箇所に問題がある ありがちなのが ・元のファイルに charset=shift_jis 等の記述がある →出力にもそのまま残っている というものです。そういうことは無いですか?
http://perldoc.jp/docs/modules/CGI-2.89/CGI/Carp … でエラーログを残すようにしたり、fatalsToBrowserで画面に出すようにしたりして、なぜ止まったかを確認するようにしましょう。
いや, エスケープしているかどうかの問題ではなく (もちろんエスケープしないと期待した動作にはならんけど) /./ という正規表現を単独で書いたために $_ とのマッチングと解釈される ことが問題なのです. 実際, @split_filename = (/./,$Mm_file); でエスケープして @split_filename = (/\./,$Mm_file); としたところで同じことになるはずですよ. そういえば今ふと思ったんだけど, これって split する必要あるのかなぁ? あとでどうするのか知らんけど, 単純にファイル名がほしいだけなら s/// で対処する方が正統な感じがする.
例えば #▼変数$job_choiceから、経験値を計算する のところ, 基本的に if($job_choice eq "○") { $lv_up_ex = $EX->[○][$p_lv]; } の繰り返し (2つの「○」には同じ値が入る) だよね. であれば, こんな if の羅列はバカで $lv_up_ex = $EX->[$job_choice][$p_lv]; の 1行でいい. それから #数値から、経験値の判定用の変数 のところも式としては $job_choice = int($p_job/2); でいいはずだよね. ということは, 実は 2行で十分なものをこれだけ長々と書いていたことになる. 「御苦労様」ってやつだ. ここまでは見た目でわかる部分. もっと工夫をすれば 1行も書かなくていい. ちなみに最後の while ループで $lv_up_ex が変わらないのはおかしいんじゃないかな? あと, なんで %MONSTER がハッシュになってるんだろう. 配列, 嫌い?
内容から推測するとWindowsのバッチコマンドを使用してのご質問だと思います。 perlカテゴリではなく、その他（プログラミング）カテゴリで言語を明記して質問された方が良いですよ。 閑話休題 ご依頼の内容は以下で実現できます。 ※データの無い列を検出するために「@」を挿入していますが、実際は「!」以外のCSVファイルで使用していない文字を選択してください。 ※段付け表示の為、行頭に全角スペースを入れています。 ----------------------- @echo off setlocal ENABLEDELAYEDEXPANSION set CSV=sample.csv for /F %%A in (%CSV%) do ( 　　set LINE=%%A 　　rem カンマの前に@を挿入（CSV内で未使用の文字を使用すること） 　　set LINEA=!LINE:,=@,! 　　rem 2列目を%%Bに、4列目を%%Cに取得 　　for /F "delims=, tokens=2,4" %%B in ("!LINEA!") do ( 　　　　if %%B==@ ( 　　　　　　echo 2列目データ無の行 !LINE! 　　　　) 　　　　if %%C==@ ( 　　　　　　echo 4列目データ無の行 !LINE! 　　　　) 　　) )
○500 internal Server Error ってのは、それだけでは解決のヒントはほぼ0です。 サーバーのログとか、 CGI::Carpを使うなどして、詳しいエラー内容を確認しましょう。 http://perldoc.jp/docs/modules/CGI-2.89/CGI/Carp … ○あまり変わっていないように見えるPerlですが、以外と「互換性の無い変更」があります。 マニュアルの perldelta に変更履歴が載っています。 おそらくは、これではないかと。 http://perldoc.jp/docs/perl/5.22.0/perl5220delta … ○ jcode.plを使う積極的な理由が無いなら、そろそろ他の方法を使うことも考えましょう。
そんなの簡単と・・思って補足やお礼を見て・・・そりゃ無理だわ。 そんな膨大なデータは読み込んで処理なんて無理です。 一行ずつ処理して、別のデータに書き出していき、それを改めて処理するとか・・ そうではなく、そのような場合はsed　ストリームエディタ sed( https://ja.wikipedia.org/wiki/Sed_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF) ) 　を使うべきです。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから sedは、入力を行単位で読み取り、sedスクリプトと呼ばれるシンプルな命令文に従ってテキスト変換などの編集をおこない、また行単位で出力する。基本的には照合ルールに従い場合分けをおこなうフィルタと捉えることができる。 ・・・【中略】・・・ 　大量のテキストファイルに対して一括で定形の処理をおこなう場合に大きな威力を発揮する。正規表現に対応しており、ある条件の範囲内の文字列を探し出して処理することができる。特定の条件に合った文字列を検索し置換するなどの用途に用いる。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［sed (コンピュータ) - Wikipedia( https://ja.wikipedia.org/wiki/Sed_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF) )］より sedの使い方は、たくさんネットに転がっている。システムにsedがあれば、Perlからsedに渡せばよい。
「文言」がどのようなものかわからんので大雑把にしか書けないが, この手の需要はたいてい .*? を使えば何とかなる. そして「ANSI形式」ってなんだ.
open2ch.net は www.2ch.net のデータを取得していません open2ch.net で表示されるのは open2ch.net に直接投稿されたものだけのはずです
> 結果が帰ってきたら 次の項目の引数1で実行 これの意味がなんとなくわかった気がする。 system "perl script2.pl /home/$file /home/matrix.tab $item.txt &"; system関数は、指定したコマンドを実行する関数です、 http://perldoc.jp/func/system execも参照のこと。 http://perldoc.jp/func/exec ""なので、変数の展開等が行なわれ perl script2.pl /home/引数2 /home/matrix.tab 引数1.txt & を実行します。これは、同じコマンドをコマンドラインシェルから入力したのと同じことです。 コマンド入力時に、最後に& を付けると、終了を待たずにバックグラウンドで実行されます。 「一度に実行」されるのは、このためです。 &を取れば、終了まで待つので、負荷は軽くなります。 時間はかかるかもしれませんが。
その時代だと jperl があったりして.
> 結果的にどのような対処をしたら用でしょうか？ わかっている限りの現状での暫定的な対策は 「UTF-8の多バイト文字を途中で切ったりしないsubstr相当の関数を用意して、標準のsubstrの代りに使う」 です。 どこかで探すか、自作してください。 根本的には、設計のやりなおしからでしょう。 　UTF-8を期待しているのに、UTF-8に対応していないjcode.plを使って、何故かsjisに変換しようとして、たまたまUTF-8になって... これでは、何が「正しい」修正なのか、なんか考えられません。 文字コードの変化も含めて、流れを決めましょう。 > こちらは具体的にどのようにするのでしょうか？ > #!/usr/bin/perl > この部分のことでしょうか？ そうですが、あくまで、「可能性です」 複数のバージョンのPerlをインストールして、実行時に選ぶ、ということは、よくあることです。 その際によく使われるのは、次のような方法です。 　(1)/usr/bin/perl はリンクで、リンク先を切り変えることで、バージョンを変える 　(2)/usr/bin/perl は「ランチャー」で、設定によって、実際に実行するPerlを切り替える 　(3)各バージョンで名前を変える perl58 perl5.8 等 　(4)インストールするディレクトリを変える。 /usr/local/perl58/bin とか /opt/local/bin とか 　(5) (3),(4)の複合 では、実際にどれが使われているのか、と言われても、そのサーバーの管理者に聞かなければわかりません。 加えて 　(6) Perl5.8はインストールされていない(5.8は別のサーバー、上級,有料会員等に登録する必要あり 等) という可能性もあります。 既出のように「サーバーの管理者やサポートに聞いてください」としか答えようがありません。
Windows でも動かすならば、 perl 単体で処理したほうが都合がいいですね。 # usage: perl [スクリプト] [入力ファイル] my %a; foreach (<>) { chomp; $a{$1}++ if /^(\S{1,3})/; # 各行の先頭3桁を勘定、ただし空行を除く } @sorted = sort {$a cmp $b} keys(%a); # 先頭3桁を辞書順並び替え foreach (@sorted) { print "$_\n"; }
glob関数やFile::Globモジュールを使って、ファイル一覧のリストを取得 → リストの各要素について -f で調べる http://perldoc.jp/func/glob http://perldoc.perl.org/File/Glob.html
意図がわかりやすいのは split かな. ちなみに「配列 @lines の最後の要素」は $lines[-1] で取れるからね. push や pop で配列をいじるよりもこっちの方がいいと思うよ.
ま, 私にわかろうがわかるまいが, そんなことには関係なく #1 に書いてあることは成り立つんだがな. あぁ, PurePerl バージョンの方が読み易いかもよ.
うぅ～ん, どこで困っているんだろう.... 1. 「今日の日付」を求める 2. 「今月の日数」を求める 3. 「連続した日付」を出力する でできるはずだよなぁ....
ならば、まずは「繰り返し」「ループ」を覚えましょう。 for とか while とかです。 講義でやっているはずです。
○実行方法は? Web上云々とあるので、CGIとして動作させているようにも思えますが、どうなのでしょうか? ○他の箇所は正しいですか? Webだとすると、他のメッセージ等はちゃんと表示されているのですか? それとも、「日付に誤りがあります」だけが出てこない状態ですか? 他のも表示されないということなら、Perlからの出力はされているけど、HTMLとして正しくないので表示されないだけ、ということも考えられます。 こういうときの原因としては ○ if ($date_check eq 'error') { が成立していない 　・ $date_check に正しい値が入っていない 　・ $date_check に正しい値が入っていたのに書き換えてしまっている 　・比較するべき文字列が 'error' ではない ○ この判定箇所自体が実行されていない。 　・他のif文とかで、break,return 等があり、この箇所の実行自体していない 等が考えられます。 まずは、原因をつきとめましょう。 古来より伝わるデバグ技術に「printデバグ」というものがあります。 要所要所に「print」で経過や気になる変数の内容等を出力し、期待通りになっているかをチェックするものです。 例えば print "pdata=${pdate}\n"; if ($pdate eq Date::Simple::date($pdate)){ print "チェックOK\n"; $date_check = 'ok'; } else { print "チェックNG\n"; $date_check = 'error'; .... # 日付に誤りがあればメッセージを表示する print "日付に誤りがあればメッセージを表示する\n"; print "date_check=${date_check}\n"; if ($date_check eq 'error') { print '（日付に誤りがあります）'; 等とすると ・pdataが正しいはずがNGになっている/ 正しくないはずがOKになっている ・「日付に誤りがあればメッセージを表示する」と出力されていたら、判定箇所は通っている といったことから、どこが原因となっているか判断する材料になります。
binmode STDOUT,':utf8'; ってどういう意味かね?
「gnuplot が存在しない」というオチなんかじゃないんだよね?
> Unmatched ) in regex; marked by <-- HERE in m/\A\\disk ..省略.. 9\(.+) <-- HERE ;/ at test.pl line 7, <> line 1. 「\(」部分で左括弧がエスケープされています。 その為、正規表現のキャプチャ用の右括弧があるのがおかしいというエラーです。 詳細が不明ですが、以下ではどうですか？ $cutString = "\\\\disk ..省略.. 9\\\\";
まず最初に・・・。 Perlはインタプリタです。 C言語などのようにコンパイル・リンクなどは行いません。 もし、Makefile.PLをそのようにお考えでしたら、その必要はありません。 Makefile.PLはPerlのモジュールをインストールする為のものと覚えておいてください。 また、恐らく「Catalyst」のインストールには「CPAN」を使うと思うのでMakefile.PLは不要なはずです。 ＞ $c->response->body( 'こんにちは！' ); この内容から、テストをしてみようと思われたのだと思います。 Perlのソースの拡張子は「.pl」になります。 なので、例えば「test.pl」を作成して、その中にプログラムをコーディングします。 探してみたのですが、あまり参考になるサイトが見つかりませんでした。 一応、以下のサイトを参考にテストしてみてください。 http://takenaka-akio.org/doc/perl_kiso/windows.h … Perlがうまく動作しない場合は、以下を参考にしてください。 http://www.perlplus.jp/perlinstall/install/index …
あなたが提示されたコードの場合、 $1が１の場合は、成功しますが、＄が２の場合は、成功しません。 $aの"counter"の部分は既に１に置き換えられているため、counterの文字が存在しないからです。 以下のようにしてください ---------------------------------- $base="UPDATE SQL詳細 SET SQL詳細.sqlstr = replace_char([sql]) WHERE (((SQL詳細.type)=counter));"; for $i(1 .. 3){ $a = $base; $a =~ s/counter/$i/e; print "$a\n"; } ----------------------------------
$content が utf-8 フラグのついた文字列である場合, Encode::from_to($content, "utf-8", "shift-jis"); は $content = Encode::encode($content, "shift-jis"); と同じになります (個人的に from_to は使ってないのでちょっと違うかもしれん). 最後の 「エラーメッセージはあっても関係ない、 ということでしょうか」 は, 何を聞いているんでしょうか?
正直にいわせてもらうと, 何をどう考えてどんなプログラムを作れば 「レスが3行以上続くと空白ページも出現します」 なんて器用なことができるのか想像もつかない.
ファイル名というのは「ファイルの名前」です。 中身と関係のある名前を付けるのが慣例ですが、実際のところ、名前と中身は関係ありません。 Path というと、何となく「ディレクトリ」を思い浮べますが、それに限定された訳ではありません。 ファイルやディレクトリの位置を指定するものが「パス」です。 hoge\fuga\foo.bar みたいなのもファイル名と言ったりしますが、 本来のファイル名なのは foo.bar です。 で、MIME::Liteで、 Path は「中身」の指定、 FileName は「名前」の指定です。 ってあたりが、ちゃんとマニュアルに書いてあります > Filename > Optional. The name of the attachment. (オプション) 添付ファイルの「名前」 > You can use this to supply a recommended filename for the end-user who is saving the attachment to disk. これを使って、受け取った人がセーブするときに使って欲しい名前を指定することができる。 >Path > Alternative to "Data" or "FH". > Path to a file containing the data... 「データの入ったファイルへのパス」 > actually, it can be any open()able expression. open関数で使える式(パイプラインとか)でもよい。 > If it looks like a path, the last element will automatically be treated as the filename. ファイルパスっぽく見えるものの場合、最後の部分を「ファイル名」として使う また、サンプルコードにも次のようなものがちゃんと書いてあります。 Path =>'aaa000123.gif', Filename =>'logo.gif', ※「 aaa000123.gif の中身を送るけど、名前はlogo.gifを使ってね」 Path => "gzip < /usr/inc/somefile.tar |", Filename => "somefile.tgz" ※ Pathはgzipコマンドの実行結果で「ファイル」ではない なんかおかしい、と思ったら、公式の(できないのなら、できるかぎり公式に近い)マニュアルを読みましょう。
CPANを使う上ではCコンパイル環境は必須ですね。 モジュールのダウンロードも基本的に ソースダウンロードーコンパイルー実行モジュール作成 の手順を踏むようです。 以下からダウンロードできます。 【MinGW64】 http://sourceforge.net/projects/mingw-w64/ 【dmake】 http://search.cpan.org/dist/dmake/ ただ、本来なら勝手にダウンロード、インストールしてくれるようです。 それが出来ないのは、２つめのプロキシのエラーが原因と思われます。 【串の設定 ＜対話モード＞】 [cpan] > o conf htt_proxy unshift "http://http.proxy.jp:8080" [cpan] > o conf commit 【串の設定 ＜直接ファイル変更＞】 ~/.cpan/CPAN/MyConfig.pmのhttp_proxy 'http_proxy' => q[http://http.proxy.jp:8080/],
ん～, まあそのくらいじゃないかなぁ.... あんまりいじりようがない気もする.
### Source ## Server #!/usr/bin/perl use strict; use warnings; use Socket; use IO::Handle; my $port = shift // 1234; # Protocol my $proto = getprotobyname('tcp'); # Make socket socket( my $sock, PF_INET, SOCK_STREAM, $proto ) or die "socket:$!"; # Set socket options setsockopt( $sock, SOL_SOCKET, SO_REUSEADDR, 1 ) or die "setsockopt error $!"; # bind bind( $sock, pack_sockaddr_in( $port, INADDR_ANY ) ) or die "bind:$!"; #listen listen( $sock, SOMAXCONN ) or die "bind error $!"; my $paddr; my ( $client_port, $client_iaddr, $client_host, $client_ip ); while (1) { # Wait to connect $paddr = accept( my $session, $sock ) || die "accept:$!"; # No buffering # select(SESSION); $|=1; select(STDOUT); $session->autoflush(1); # Print client information ( $client_port, $client_iaddr ) = unpack_sockaddr_in($paddr); $client_ip = inet_ntoa($client_iaddr); print "Connect: $client_ip, port $client_port\n"; # Print Client Mesage my $msg = <$session>; print "from client: ", $msg; # Say Hello World print $session "Hello World. I'm server\n"; close $session or die "close:$sock"; } close $sock or die "close:$sock"; ## Client #!/usr/bin/perl use strict; use warnings; use Socket; use IO::Handle; my $host = shift // 'localhost'; my $port = shift // 1234; # Change IP Information my $ipaddr = inet_aton($host) || die "inet_aton error $!"; # Create socket information my $sock_addr = pack_sockaddr_in( $port, $ipaddr ); # Protocol my $proto = getprotobyname('tcp'); # Create socket socket( my $sock, PF_INET, SOCK_STREAM, $proto ) or die "socket error $!"; # Connet connect( $sock, $sock_addr ) or die "connect error $!"; # No buffering #select(CLIENT_SOCK); $|=1; select(STDOUT); $sock->autoflush(1); # Send Hello print $sock "Hello World. I'm client\n"; # Recieve Hello my $msg = <$sock>; print "from server: ", $msg; # Close close $sock or die "close:$!"; ### Command ## Exec Server $ perl tcp_server.pl ## Exec Client $ perl -w tcp_client.pl from server: Hello World. I'm server
多角形を英語で表すと、１、２はなくて三角形から順に triangle、tetragon、pentagon、hexagon、heptagon、 octagon、enneagon、decagonとなります。 なので「P」かも。
utf8文字列は、内部用の特殊なエンコーディングだと解釈するのがいいかもしれません。 UTF-8のバイト列としての文字列と、utf8フラグ付き文字列とでは、扱いが違います。 UTF-8のバイト列であっても、decode処理しなければutf8フラグ付き文字列にはなりません。 LWP::Simpleのgetは、外部のコーディングが何であろう(相手がshift_jisでも)と、内部用のutf8文字列で返す。 外部に出力するときは、内部用のをそのまま出力できないので、その出力先に合せてencodeで適切なコーディングに変換する。 ということです。
＞掲示板荒らしの者に威嚇的になればいいと思います。 そういった用途だと、Cookieはブラウザ側で削除できるので、あまり有効な手段は無いかと思います。 しないよりはましくらいでしょうか。
リンクをこうします http://自分.example.com/cgi-bin/redirect.cgi?u=http://仲間.example.com/index.html redirect.cgi の中身 パラメーター u から跳ぶ先のアドレスを得る HTTP 応答のステータスを 302 で返す Location ヘッダに、跳ぶ先のアドレスを指定 後は、 redirect.cgi がログへ1件毎に記録し、バッチ処理で件数を勘定する。 または、 HTTP アクセスログから redirect.cgi へのアクセスを、バッチ処理で件数を勘定する。
No.1です。 > > <IMG SRC="$gazo_url" BORDER="0" > > > って考えたって事は。。。 > betu.cgiの中で、上記の記述以前に変数$gazo_urlを使っているのですか？その場合、変数の中身はどうなっていますか？ > イメージタグではなく、単に$gazo_urlの中身を画面に表示するようにするとどうなっていますか？ > > 何にも入っていません。nullです。 　なるほど。 　moto.cgiからbetu.cgiへ画面を経由してmoto.cgiの中で使用している変数$gazo_urlの値を渡していないことがハッキリしました。 　で、渡す方法は先に書いた方法が基本です。 　ブラウザからサーバーへブラウザの画面上で入力された値（テキストフィールドにキーボード入力した値やラジオボタンで選択した値）を渡す方法にGETのパラメータとPUTのパラメータがあるのはご存知ですね？ 　URLの後ろに /?hensu=1 といった感じに「変数＝変数値」を付けて渡すのがGET。画面のHTML内にFORMを設け、その中の変数を使って渡すのがPUT。 　先に書いたのはmoto.cgiが、送出する（生成すると言った方が感覚的に分かりやすいか？）HTMLの中にFORMを設け、その中にtype="hidden"の変数を定義してこれにbetu.cgiが期待するファイル名なりbetu.cgiから見たファイルの相対パス（または絶対パス）を入れればよいということです。 　こういう説明でわかるでしょうか？ 　Javaだと一連の画面遷移で何か一つの処理をしようとする場合、最初のログインなり、ログインが無ければ動き始めの画面を送出するプログラムがセッションを定義すれば、後のプログラムはこのセッションを使って後続のプログラムに変数値を渡せるのですが、セッションを使えない場合は画面を経由して渡すしか方法はありません。 　いろんなものを画面経由で渡すのはわずらわしいですしブラウ側で表示中の画面のHTMLを見るとわかるので、あからさまにあるとカッコ悪いだけでなくセキュリティー上も好ましくありません。 　なので、動作中の利用者の識別子だけを画面経由で持ちまわすようにし、サーバー側では何らかの方法でその識別子を使って必用な情報を得るようにするのが好ましいです。例えばデータベース上のあるテーブルに後発プログラムで必用な値を保持するとか。 　その場合の問題はそのテーブルの当該レコードを何時誰が消して綺麗にするかです。ある利用者は最後の画面まで行かないうちに途中で操作をやめてしまう場合もあるでしょうし。 　そういったことも考えながら設計されるとよいでしょう。
www/.が抜けてるのは転記ミスですか？
「ラテン方陣」ってやつ? http://www.cut-the-knot.org/arithmetic/latin2.sh …
分かりやすいかどうかは個人の好みがあるので、なんとも言えません。最初のプログラムは、簡単な再帰呼び出しを利用したものです。なお、画面出力すると、それだけで時間がかかりますので数えるだけにしています。画面に出力するには、コメントを外してください。 use strict; use warnings; my (@a, @work, $count) = 'a' .. 'd'; search(@a); sub search { foreach my $c (@_) { push @work, $c; if (@work == @a) { # print join('', @work), "\n"; ++$count; } else { search(grep { $c ne $_ } @_); } pop @work; } } print "$count\n"; ２番目のプログラムでは、(0,1,...,$#a-1,$#a) から ($#a,$#a-1,...,1,0) までを生成しています。私のパソコンで 10 文字 (a〜j) で実行してみると、最初のプログラムが 11 秒、２番目が 8 秒です。11 文字 (a〜k) では、111 秒と 93 秒です。 use strict; use warnings; my @a = 'a' .. 'd'; my @idx = 0 .. $#a; my $count = 1; # print join('', @a[@idx]), "\n"; for (my $i = $#idx; $i > 0; $i--) { next if $idx[$i-1] > $idx[$i]; if ($i == $#idx) { @idx[$i-1,$i] = @idx[$i,$i-1]; } else { foreach my $j (reverse $i .. $#idx) { if ($idx[$i-1] < $idx[$j]) { @idx[$i-1,$j] = @idx[$j,$i-1]; @idx[$i .. $#idx] = @idx[reverse($i .. $#idx)]; last; } } } ++$count; # print join('', @a[@idx]), "\n"; $i = $#idx; redo; } print "$count\n";
ちなみに. ひたすら手を抜いて実装するなら while (<>) { if (ヘッダ) { print if 必要な行 } else { print # 本文だから } } みたいな概形 (必要なら前処理/後処理を追加してくれ) でもなんとかなる.
「これはリストにしても動きません。」は何を言っているのでしょうか? ・どのようなソースで ・どのような入力ファイルを与えたときに ・どのような結果を期待していたところ ・実際にはどのような結果になった のか, 具体的かつ詳細に書いてもらえませんか?
perl 01.pl 01.txt 02.txt だと、 @in1=<> # 01.txtを読む 　ではなく、 @in1=<> # 01.txt と02.txt を読む 　になります。 その後 @in2=<> # 読むファイルが無くなっているので、標準入力から入力する 　となります。 print @in2; 　だと、何も表示されないはずです。 print @in1; 　だと、01.txt と 02.txt の両方が出力されます。 詳しくは http://perldoc.jp/docs/perl/5.20.1/perlop.pod#I4 … > ヌルファイルハンドル <> は特別で、〜 等を参照してください。 <> ではなく、 @ARGVからファイル名を取得→ openで開く→読み込み→(close) としてください。
「-M ファイル名」は、「ファイルが修正されてからスクリプト開始時点までの日数」です。0.01日というのは、14.4分ですね。 つまり、そのif文は、「ロックファイルが修正されてからスクリプト開始時点まで14.4分以上経ったか？」という意味です。 参考：http://perldoc.jp/func/-X
＞やっぱりプログラムの問題なのかと思っております。 はい。プログラムの問題であることははっきりしています。 ＞アドバイス不能ということですが、なにか手がかりがあれば教えてください。 原因だけは説明できます。 サーバープログラムがブラウザに返す物は、HTTPヘッダと、ボディの２つのパートです。これらは空行で区切られます。 Content-TypeやSet-Cookieなどは、HTTPヘッダで指定します。 ボディとして出力した物が、ブラウザ画面に表示されます。 ということで、原因としては、「（先頭の方で）ヘッダとして出力すべき物が、（空行の後の）ボディとして出力されている」ということです。
ログにエラーの理由詳細が出ているかと思います。
共通処理の中に追加すれば、エンコードとデコードは1箇所ずつ追加するだけで済むと思います。 use MIME::Base64; # エンコード $value = encode_base64($value, ''); # デコード $value = decode_base64($value);
http://stackoverflow.com/questions/1062808/how-c …
http://tech.raksul.com/2014/10/27/google-spreads … どうぞ。一度検索しましたか？「Google Docs API」で3番目に出てきました。
丁度いいのがあったので。 http://charset.7jp.net/sjis.html \x87 ということは、この表の「シフトJISの2バイトコード（全角文字）のエリアマップ」の「13/14 87」というところに並んでいる ①みたいな数字とか 一文字で表した ローマ数字 ( I , II , III 等) を使っていませんか? これらの文字は「Shift_JIS」には無い文字です。 よって、Unicodeに変換できません。 Shift_JISを拡張した CP932 などには、これらの文字が含まれています。 https://ja.wikipedia.org/wiki/Microsoft%E3%82%B3 … sjisではなく、cp932で試してみてはいかがでしょうか
3引数版のopenの使い方を覚えるといいと思います。 ・ファイル名と、openモードとを明確に分けられる ・encodingや改行コード変更もできる ・いちいちbinmodeする必要がない http://perldoc.jp/func/open
どこかに panel とは何であるかが記載されている思います。 スタイルシート(*.css)で、以下の記述あたりを探してください。 .panel { ... } スクリプト(*.js)で、以下の記述あたりを探してください。 $('.panel') querySelectorAll('.panel') getElementsByClassName('panel') 要素.classList.contains('panel') /\bpanel\b/.test(要素.className)
flockを使います。詳しくは「Perl flock」で検索してみてください。
タスクスケジューラーもwindows2008も使ってないので完全に勘ですが、 起動状況によってファイルが見つからないと言うのは、パスが通ってないのでは？ 例えば普通は起動させた位置がカレントディレクトリになります。 例えばタスクスケジューラーから起動させた場合、の位置がカレントディレクトリになってたりとかはしないですか？ またタスクスケジューラーの仕組みは知らないのですが、どのように起動させてますか？ 例えばの一つとして、起動の方法も数多くありますが、 AプログラムがBファイル(perl)の文字列を読み込み、 Aプログラムがその文字列をperlコンパイラに送りつける。 こんな手法が取られていればカレントディレクトリは間違いなくAプログラムの位置です。 ファイルの位置を見つけられないのはPerlですよね？ そして、起動方法によって見つかったり見つからなかったりするわけですよね？ ぱっと思いつく限りでは、明らかにカレントディレクトリが怪しいです。 カレントディレクトリは常に起動された環境に依存するからです。 ＞先に子プロセスが呼び出されてしまう可能性があるのでしょうか？ スクリプトどうこうは関係ないです。 これについてはどうperlを書いたかによります。 どんな条件下でも間違いなく、必ず処理を待つように書けている保証は必要です。 その確証が得られるように見直しをして下さい。
スクリプトの先頭に以下の4行を追加して、文字コードutf-8で保存してみてください。 use utf8; binmode STDIN, ':encoding(cp932)'; binmode STDOUT, ':encoding(cp932)'; binmode STDERR, ':encoding(cp932)'; windowsで普通にスクリプトを保存するとshift_jis（正確にはcp932）とう文字コードで保存されます。 ところがperlは、文字コードutf-8で書かれていると思って処理しますのでcp932で書かれたスクリプト内の文字定数は正しく認識されずに誤動作します。したがってスクリプトをutf-8で保存する必要があります。 さらにコマンドプロンプトはcp932で文字を表示しますので、perlで文字出力する場合にはutf-8をcp932に変換してあげる必要があるのです。 参考にされている書籍に上記の注意がないということは、古いバージョンのperlを前提に書かれているものと推察されます。 外部ファイルの読み書きで日本語を使用する場合にも同様の処理が必要になりますので注意が必要になると思います。
GET /index.html?data=hogehoge HTTP/1.1\r\n Host: www.example.com\r\n \r\n 参考 https://tools.ietf.org/html/rfc7230#section-3.1.1 https://tools.ietf.org/html/rfc7230#section-5.3.1
その確認って、具体的にどうやってやりましたか? 実行したときの画面表示だけだとしたら 　aaa.csvの改行コードが CR になっている 　端末では、通常、CR は「行頭にカーソルを移動する」だけで改行しない 　そのため、画面上が後から出力したものに上書きされたように見える 　→ 画面上には、最後の行だけしか出力されてないように見える ということが考えられます。 ・ターミナルで file コマンドを使って file aaa.csv として、改行コードについての情報を得る(表示されないこともある) ・ターミナルで od コマンドを使って od -c aaa.csv でファイルのダンプが出力される。このとき、改行コードは \r とか \n とか表示されるので、それがどうなっているかを確認する。 ・nkf をインストールしてあるなら、 nkf --guess で改行コードを調べる。 などで、 aaa.csv の改行コードを確認してください。 また、 CR だったとすると別の問題があります 　<FILE> は 改行文字を含めた1行を読み込みます。 　現行のMacはUNIX系OSが採用されており、標準の改行コードは LF です。 　よって、 CR は「ただの文字」として扱われるので、1行ずつ読むつもりで全部を一気に読みこんでしまいます。 1行ずつ読み込むには ・LF で保存する ・openの3引数版を使って、改行コードを指定する ・特殊変数で設定を変える http://perldoc.jp/docs/perl/5.20.1/perlvar.pod#S … > IO::Handle->input_record_separator( EXPR ) > $INPUT_RECORD_SEPARATOR > $RS > $/ > 入力レコードセパレータで、デフォルトでは改行文字。 これは Perl での「行」とは何か、ということに影響を与えます。 等が必要です。
$info が宣言されていないので、グローバル変数として扱われます。 それを $info->{} として使った時点で $info = 無名のハッシュ(これをH0とする)のリファレンス となります。以降、 $info->{} は H0 を操作することになります。 while($line=<DATA>) { が終った時点で、H0は最後に操作した内容となります。 push @$infos,$info; では、 @$infos に $info 、つまり「H0のリファレンス」 を追加します。 よって、実行したら $infos = [ 「H0のリファレンス」,「H0のリファレンス」 ] という状態になります。 そんため foreach my $k(@$infos){ では、「 H0のリファレンス」への処理を2回繰り返すことになります。 H0の内容は、「最後に処理された状態」ですから、最後のtarou,2222 だけが繰り返されます。 このような現象は、リファンレンスを使う言語ではよくあることです。 「浅いコピー」「深いコピー」といった用語が使われていますので、これで検索してみましょう。 対策は、 @$infosに 「H0と同じ内容の別のハッシュ」をpushすることです。 例えば push @$infos, {%$info}; # %$infoと H0を展開したものを新しい無名のハッシュにして、それをpushする など。 > # my $info={};　#これを入れるとTargetは入りました この方法では、 ループ毎に新しいハッシュが用意されます。 そのため、UserとTargetのときとでは、「別のハッシュ」への操作となります。 そのため、 pushするときの$info、すなわち Targetだけが入ったハッシュが $infosに追加されます。
ゴットフリート・ヘルンヴァインという方の作品だそうです。 公式サイトでワークス→水彩画→Watercolors 1970 - 1981と進むと出てきます。 http://japan.helnwein.com/works/watercolors/
子プロセスが親プロセスの終了を検出するには、ppidが変化したのを見ればいいんじゃない？ $ cat foo.sh #!/bin/bash echo "parent : pid = $$" (i=5; while [ $i -gt 0 ]; do echo $i; i=$(expr $i - 1); sleep 1; done) | perl -e 'while(<STDIN>){print "child : ppid = ", getppid(), " : ", $_}' & sleep 1 echo 'parent : exit' exit $ sh foo.sh parent : pid = 23173 child : ppid = 23173 : 5 parent : exit child : ppid = 1 : 4 child : ppid = 1 : 3 child : ppid = 1 : 2 child : ppid = 1 : 1
質問者様がこの書き込みをどうやって行ったのか？という事に思いを馳せると、既にネットワーク機器(及びケーブルもしくは無線による伝送手段)はお持ちであると推測されます。 また、書き込みを行っている途中に設置してあるルーター等と呼ぶ機械の種類によっては、ルータ側に情報を格納できます(NAS機能付きルーター)。 その辺も誰かに見てもらって対処方法を決めた方が良いと思います。 これらの事より、まず質問者様に必要なのは追加機器ではなく、「情報関連機器導入支援サービス」のようなものであると考えます。 パソコンを扱っているお店に電話して、情報関連機器設定の訪問サービスを受けたいと交渉してみてください。
MX Sheetの自動通信開始設定でExcel2007以降で開くとエラーになる場合の方法 参考PDFを閲覧しては？ www.mitsubishielectric.co.jp/fa/document/technews/plc/fa.../fad0114b.pdf
>やりたいことは、"ファイルAを読み取り、その内容に処理を施したものをファイルBに書き込むという処理"です。 >その上で、"ファイルBに書き込んだ内容を書き込みと同時に読み取り、 ちょっと意味が分からないのですが、Aを加工してBに保存したあと、またBを読み込む必要があるんですか？ 非常に大きいファイルがどの程度なのかと、 一番大事なのは、処理をしなければならないスパンがどの程度なのかですね。 ファイルの大部分を読み込まないと処理が出来ないのか、小さな1行程度に分けられていて、 1行あればそれで処理と判断が付くのか。 大きいファイルと言っても、 100M程度大きさなら、読み込み用、中間処理用、書き込み用と3つに分裂させてもメモリ消費量は300M程度で、たぶんですが今開いてるブラウザのほうが重いですね。 実際にはどの程度のファイルなのかは分かりませんけども。 それにどうせ、バッファはフラッシュしないと、どんどんたまって行きます。 (実際に出力するのはことが終わったあとに一気におこなわれ、当然出力すべき全ログはメモリに記憶されます) フラッシュしてもバグの元(ファイルを壊す元)なのでやらないほうがいいだろうと思いますけど。 とりあえず、 while (<IN>){} の処理は見た目どおり1行づつ読み捨てているので、 適度に改行が入ってるファイルなら、読み込みによる影響でメモリは消費しないものと思われます。 ファイルAとファイルBの関係がよく分からないのですが、 両方のファイルを併せて処理手順が書かれているんでしょうか？ そしてその処理によって、ファイルBを書き換えるんでしょうか？ だとするならば、ファイルはもう一つ用意するのが普通です。 Bをいろいろなことに使いすぎじゃないでしょうか。
実際に水着は破損し、その破損がスポーツクラブの責任である事が明白ならば 水着の価格未満～例えば１度でも使用していれば購入価格の半額くらい～請求する権利はあります 。 今年購入した１万円の水着なら、５千円程度は請求する権利があります。 スポーツクラブがそれを支払うかどうかはまた別の問題です。
Ｙｏｕｔｕｂｅのヘルプで「設定」と入れてみてください。
HTTP プロキシー / 負荷分散装置を経由している状況ならば、 要求ヘッダ内の X-Forwarded-For にて、元のアクセス元を特定できると思います。 ただ製品によって X-Client-IP だったり X-True-Client-IP だったりするのでお気をつけください。 サイトが何らかのコンテンツ配信網(CDN)を利用しているならば、 サービス提供者の資料をあたってみてください。 もしサービス提供者が分からなければ、サイトのドメイン名から有る程度は推測できます。 例) nslookup yourservice.example.com もしヘッダが存在せず CDN でもないなら、 それは単純なアドレス変換装置を経由しているか、 意図的にアクセス元を隠蔽しているプロキシーを経由していると推測しますので、 残念ながら解決方法はないでしょう。
Perl で?
病院都合の差額ベッド代であろうが、支払うという同意書にサインをしてしまえばそれを覆すことは不可能です。 同意書の文言を確認してみてください。 あくまでも個室を利用するだけの同意書であって、支払いまで言明されていないならば、支払い拒否が可能かも知れません。 差額ベッド代は自費診療なので高額医療の対象にはなりませんから、健康保険から戻ってくることはないです。 つまり完全自腹です。 ご自身で掛けられている医療保険があるならば、保険を請求するしかありません。 個室から出たいと要求をしてみるしかないと思います。 一度個室から大部屋に移り、その上で、再度個室に移動するように言われたならば、今度は病院都合ということで、支払いはしないと明言するしかないと思います。
追記です。 forループは途中で抜けないとダメなんですか? $i=0; my $firstTime=1; While(○○){ 　for(××){ 　　if( $firstTime ) { 　　　処理1 ; 　　　$firstTime=0 ; 　　} 　　処理2 　　$i++; 　　if(条件を満す) { 　　　処理3 　　　$firstTime=0 ; 　　} 　} } とか $i=0; While(○○){ 　処理1 ; 　for(××){ 　　処理2 　　$i++; 　　if(条件を満す) { 　　　処理3 　　　処理1 ; 　　} 　} } とか、last を使わない方法があるのでは? 処理の内容次第では、もっとシンプルに書けるかもしれません。
>でもそういう機能ってあるんですか？ あるのかも知れませんが、それを明示しないで相談もへったくれもありゃしませんので、無視していい戯れ言です。 というか、商売に使っているとか国家安全に関わることに使っているとかならまだわかりますが、ただのつぶやきを監視するとか頭おかしいんじゃないの？って思ってれば怖さはなくなります。
他の方法もありますが、一番単純な方法は、 >IDを入力しようとすると 表示された古いIDにカーソルを合わせ「Delete]キーを押します。「…削除しますか？」と聞いてきますから「はい」と。
こんばんは！ D～F列をB列（社名）順に並び替えしたい！というコトですよね？ コツコツ手を動かせば簡単に出来る方法として・・・ ↓の画像ではG1セルに =IF(COUNTIF($E:$E,$B1),INDEX(D:D,MATCH($B1,$E:$E,0)),"") という数式を入れフィルハンドルでI1セルまでコピー　→　そのまま下へフィル＆コピーしています。 そしてG～I列すべてを範囲指定　→　右クリック　→　コピー　→　D1セルを選択 →　右クリック　→　「形式を選択して貼り付け」　→　「値」を選択しOK 最後にG～I列を削除して完了です。 ※　この一連の操作をVBAでやると↓のようなコードでも大丈夫だと思います。 シートモジュールです。 Sub Sample1() '//この行から Dim lastRow As Long lastRow = Cells(Rows.Count, "A").End(xlUp).Row Range("G:I").Insert With Range(Cells(1, "G"), Cells(lastRow, "I")) .Formula = "=IF(COUNTIF($E:$E,$B1),INDEX(D:D,MATCH($B1,$E:$E,False)),"""")" .Value = .Value .Cut Range("D1") End With Range("G:I").Delete End Sub '//この行まで こんな感じではどうでしょうか？m(_ _)m
失礼、タイトルが「音楽CDのコピー方法は」となっていたので「音楽CD→CD-R」のディスク丸ごとコピーの事かと思ってしまいました。 既にPCに保存済みのファイルなら「音楽CDの作成」機能で出来ます。 ま、いずれにしろ詳細を書いてくれないと的確な回答は難しいです。
後出しで回答はほぼNo2と同じですが、言語仕様によってアクセスではなく(アクセスかな？)メモリの確保の仕方が異なります。 参考に、メモリをどう確保しているかを確認する手段の１つを。 値をただ取り出すだけならForEachがダントツで速いんですが、順番が決まっていたり 値をセットしていく場合はループをどう組むかは考える必要があります。 どのようにメモリを確保しているかが分かれば、出来るだけアドレスの移動が少ない順になるよう 組めば良し、確認方法が分かれば言語が変わっても最適なループロジックを組めるように なるかもしれません。 Cではポインタが使えるので配列がどういう順でメモリに展開されているかがわかるかと思いますが、 VBAの場合、ポインタが一応使えません。 が、簡単な確認方法だけ以下に提示します。 ' 64bit Private Declare PtrSafe Function VarPtrArray Lib "VBE7" Alias "VarPtr" (ByRef Var() As Any) As LongPtr ' 32bit（確認してない） Private Declare Function VarPtrArray Lib "VBE7" Alias "VarPtr" (ByRef Var() As Any) As LongPtr 配列の宣言した後なり、値入れた後なりに以下。 Debug.Print Hex(VarPtr(table(0, 0))) Debug.Print Hex(VarPtr(table(1, 0))) Debug.Print Hex(VarPtr(table(2, 0))) Debug.Print Hex(VarPtr(table(3, 0))) Debug.Print Hex(VarPtr(table(0, 0))) Debug.Print Hex(VarPtr(table(0, 1))) Debug.Print Hex(VarPtr(table(0, 2))) Debug.Print Hex(VarPtr(table(0, 3))) VarPtrは変数のアドレスを返す関数です。それを16進数にして表示 質問内容のコードでは、配列tableでは型を指定していないので分かりやすく4バイトのLongにすると 　Dim table(1 to 1000, 1 to 1000) as Long 恐らく下記のような出力がされます。（Excelの起動し直しでアドレスは変わるが） 28B0040 ' table(1, 1) 28B0044 ' table(2, 1) 4byte増えてる 28B0048 28B004C 28B0040 ' table(1, 1) 28B0FE0 ' table(1, 2) 4000byte(0FA0)増えてる 28B1F80 28B2F20 Cと同じメモリ確保の仕方の言語が圧倒的だったり、Cから始めた人も多いせいか、 私もよく、arry[外,内]というようなループを作ってしまいます。 配列として確保し、配列として操作することが少なかったり、そこまで大きな配列を作らなかったりで 全然気にしない事も多いのですがこの質問で見直すべきだな、と改めて考えさせられました。
モジュールが用意されていたと思います。 http://d.hatena.ne.jp/littlebuddha/20101028/1288 … localtimeの逆の処理を行なう。
携帯電話（スマートフォン）を使って無料でインターネットへの接続はできないと言うことです。 128バイト（１パケット）あたり０．２円になると思われます。 10Mバイト（81920パケット）の通信量でおよそ17000円になるということですね。 パソコンを無料のWi-Fi接続ポイントに持ち込みインターネット接続を行えば、インターネットにかかる料金は無料ですが、インターネット接続に関して多少の制限が生じることがあります。
信頼できる業者さんに廃棄を依頼するか、内臓HDDなどの記憶装置を自分で破壊すれば大丈夫です。
その if の条件にある $in{pg} eq "" || $in{pg} = ~/\D/ を, Perl はどう解釈すると思いますか?
いわゆる位置指定道路の私道に自宅が接しているという状況ですか? その場合は、工事に関して、私道の所有者全員の許諾を得る必要があるはずです。 また、道路交通法の適用を受けるような私道なら警察の許可も必要になるかもしれません。 私道利用に関してきちんと契約・覚書を作ってないとトラブルになるケースもあるようですね。 http://www.bengo4.com/fudosan/1110/1245/b_318863/
レポートなので、テーマの意味だけですよ。 典型的な「取得時効」の問題です。 （長期の）取得時効の完成は２０年間ですが、約２０年間、占有したＣの場合、取得時効（Ｃの所有権）は成立しているか？と言う話です。 「１９年１１ヶ月」と「２０年１ヶ月」で、２０年をまたいでるトコが、「いかにも」と言う問題でしょ？
2箇所誤りがあります。 #誤の行を#正に直してください。 以下のようになります。 ---------------------------------------- use strict; use threads; use Data::Dumper; no strict "refs"; my $countM; for ($countM = 0; $countM < 5; $countM++){ my $test = "test".$countM; #${"thd".$countM}= threads->new(\&mtest($test)); #誤 ${"thd".$countM}= threads->new(\&mtest,$test); #正 ${"thd".$countM}->join; } print "test end.\n"; sub mtest { #my $name = @_; #誤 my $name = shift(@_); #正 print "$name"."\n"; threads->yield(); } ----------------------------------------- 以下、実行結果 test0 test1 test2 test3 test4 test end.
普通にrsyncすれば良いのではないでしょうか？ ログを取ったりする必要もなく、crontabにコマンドを1行書くだけで実現できます。 新しいファイルがあれば取ってくるし、すでに取得済みのファイルしか無ければ何もしません。 deleteオプションを付ければサーバB上で消されたファイルがあればサーバAでも消してくれます。 もちろんdeleteオプションを付けなければサーバAには新しいファイルがどんどん溜まります。
＞Perl自体あまり得意ではないので 　Perlはそれに反して、この手の処理はとても得意です。 　データ自体が分からないとヒントだけになります。 　1GBとなると、そこそこのサイズになりますからすべてを読み込ませて処理するよりは一行ずつ処理するほうが楽でしょう。 　先日回答した「pealを用いたcsvファイルの抽出( http://oshiete.goo.ne.jp/qa/8885727.html )」がヒントになるでしょう。 　open(IN,in.txt); でファイルハンドルを指定して 　while(<IN>){ 正規表現をもちいて、配列の配列に格納 } で、 ( 　(インターネット,TV,2340,行番号) 　(インターネット2,DVD,1450,行番号) 　(インターネット,CD,2560,行番号) ) できた配列の配列をsort函数を使ってソートして、最終的に行番号だけのリストを作ります。 @LIST = (256,124,5,9845・・) そしたら、 　while(<@LIST>){ 　　while(@IN){ 　　print OUUT; 　} } とかで書き出す。 　open(SORTED,in.txt);
こういうデータを持ったファイルがあるとして、それをflower.csvと名付けます。 name, color, id, num_of_flower, num_of_fruit, dead tulip, yellow, 1, 2, 2, 2 tulip, green, 2, 4, 2, 2 rose, green, 2, 4, 2, 2 で以下のコードでこのファイルを読みこんで連想配列上にデータベースを作ってから、花の名前と色と識別番号をコロンでつなげて一つのキーとして連想配列に入力すれば所望の情報を得られます。 #!/usr/bin/perl open(F, "flower.csv"); while(<F>){ chomp; s/\s+//g; @x = split(/,/, $_); $key=$x[0].":".$x[1].":".$x[2]; $info{$key} = "$x[3] $x[4] $x[5]"; } close(F); print "=> "; while(<>){ chomp; print "$info{$_}\n"; print "=> "; } 実行例 > ./foo => tulip:yellow:1 2 2 2 => tulip:green:2 4 2 2 => rose:green:2 4 2 2 =>
追記。 戻り値に直接名称が必要な場合はハッシュを使うなどの方法があります。 戻り値関係なく、引数側だけに ('TDN', 8, 10)とすることでも双方向参照が可能になります。 大量であるならば検索に時間はかかるので不適切でしょうが。
あ, #1 は完全に勘違いしてた. ということで最初からやり直し. まず, my を使うと「そこを通るたびに違う変数を作る」と思っていい. つまり, 今の場合 foreach で回す 3つのファイルのそれぞれに対して @alltxt が存在する. それに対して, サブルーチン f_readlines は 1つだけ存在し, その中では「最初の @alltxt」だけがアクセスできる. その結果「初回に@alltxtに読み込んだ aaaaaaa　だけが、ファイルの数だけ出力されてしまいます」という結果になっている (2つ目以降では「ファイルから読み込んだ値を保持する @alltxt」と「f_readlines からアクセスする @alltxt」が別個に存在する). 一方 our は「(必要ならグローバルな変数を作って) それを現在のスコープに導入する」という働きになる. だから my の代わりに our を使うと @alltxt は 1つだけ存在し, それをサブルーチン f_readlines がアクセスするので期待通りの動作になる. ちなみに勘違いのもとは, どうも foreach でまわす変数だけは扱いが違うっぽいところ.
GhostScript はインストールしてあってパスも通してあって, その上でこのエラーが出るということ?
#!/usr/bin/perl open(F, "abc.csv"); while(<F>){ chomp; @x = split(/,/, $_); $fruit{$x[0]} = $x[1]; } close(F); print "=> "; while(<STDIN>){ chomp; print "$fruit{$_}\n"; print "=> "; } darkstar:~/tmp> ./foo => or orange => ap apple => me melon => ap apple =>
#13です。 >あと、変換前にカンマの使用があります。 変換前の文字列にカンマがあるということなので、 変換するファイルをタブ形式で定義したバージョンのスクリプトを 参考URLに書きました。（バージョン３ （CL.3）になります。）（カンマをタブに替えただけす。） ファイルの１行は 変換前文字列<tab>変換後文字列1<tab>変換後文字列2<tab>・・・変換後文字列N の形式で定義してください。 <tab>はタブ文字"\t"を意味します。 変換前文字列、変換後文字列の何れも　カンマ(",")を変換文字として使用可能です。 例 ,1<tab>A<tab>B は ",1"をAに変換し、かつ ",1"をBに変換します。 >ちなみに前文はケース２の場合を想定してました。 定義の方法はケース１で行っていますが、 どうしても定義２でなければいけない理由があるのでしょうか？ もし、そうであれば、その旨補足ください。 スクリプトをケース２の形式に対応させるのは、簡単にできます。 参考URL：http://climbi.com/b/3383/3
メール送信はスパムとかDoSとかのはなしがあって制限が多くなっているので案外苦労したりします。 ＞ループで回して送信した方が、制限がない分いいですよね。 そうでも無くて、SMTPセッション数を制限している場合もあります。 1通のメールで宛先が300の場合、SMTPセッション数は1ですが、 宛先1つのメールを300通送るとSMTPセッション数は300です。 これが影響する場合もあります。（もちろんサーバのポリシー次第です） 現実的には制限を越えないぐらいの数で回すということになると思います。 例えば1通で宛先を50件として必要な回数回すような感じです。 また、ループもそのまま回すのではなく適切なWaitを入れる方が良いです。 余談ですが、 携帯メールに送信する場合は、宛先不明アドレスにも制限があるのでこちらもフォローする必要があります。
データベースについてはわからないので、解決に役に立たないかもしれません。 Perl の Encode.pm の encode() と decode() には、一般の「エンコード/デコード」とは少し違ったところがあります。Encode.pm では、「デコード → エンコード」の順番で処理します。また、from_to() 関数は第１引数を直接コード変換して、戻り値として変換した文字数 (失敗した場合は undef) を返すので、元の変数に代入してはいけません。 $data{'username'} = encode("utf8",decode("euc-jp",$data{'username'})); または、 Encode::from_to($data{'username'}, 'euc-jp', 'utf8');
#2の繰り返しになります。 > %$itemsのキーを取得するのはではないのですね。 は正しいのですが、その取得したキーを「使っていない」のです。 http://perldoc.jp/docs/perl/5.20.1/perlsyn.pod#F … マニュアル(の和訳)です。 > foreach ループは 通常のリスト値に対しての繰り返しを行い、変数 VAR に リストの要素を繰り返し一回に一つずつセットします。 > VAR が省略された場合には、$_ に値が設定されます。 とあります。 foreach ( keys %$items) は、この 「VAR が省略された場合」に相当します。 ということは、リスト値 keys %$items から取り出した値は $_ の設定されています。 その $_ に設定した値を使わずに、「 $key 」を出力しようとすれば、全然違うものが出力されるのは当り前です。 また、この前にある my $key ; という文と、このforeach は「無関係」 です。 修正するなら、実行ブロック内では $_ を使うか、foreachに使う変数として$keyを指定するか、です。 my $key; で宣言しただけでは、 $key の中身は「初期化していない値(uninitialized value)」です。 Perlの標準動作では、uninitialized valueを使って"キー値 : $key\n" 等としても、エラーになりません。 ですが、 perlに-wオプションを付けると、警告を出すようになります。 その警告が、Use of uninitialized value $key ～ です。
単に、ファイル名が.cgiになっているだけ、中身は正しいのでは？ あるいは、wgetに指定したURLが違っているか
「圧縮ファイル」じゃないファイルと同じだと思う. どこに Perl が関係するのかさっぱり分からんけど.
preタグとcodeタグを用いるとご希望の表示が実現できます。 下記が参考になると思います。 ■code と pre でソースを表示しよう http://honttoni.blog74.fc2.com/blog-entry-98.html
unlink は　ファイル名にワイルドカードや正規表現を含めることはできません。 但し　ファイル名の配列を指定することは可能です。 以下のようにしてください。 --------------------------------- @result = glob("./hoge/$temp*.html"); unlink @result; ----------------------------------
専門業者のネガティブ発言に不安にさせられて別なものを買わされるってまるで霊感商法ですね 長年この業界でいろんな言語で仕事してるけど科学計算はともかくWebで多くのデータを扱うのならperlほど強力な言語は他にない 古くから海千山千の技術者にもみにもまれて生き残っている「枯れた」というほめ言葉がぴったりの安全なものです ポッと出の穴だらけで版数が上がるたびに基本仕様がコロコロ変わってしまうような処理系ではないのです それに新しいものを勧めてくる業者には気を付けた方がいいですよ 子飼いのエンジニアのスキルを上げるために中小の客を人柱にしようともくろんでるところがほとんどです 作るときにはチームを組んでちゃんとやるけど、スキルを身につけお金を受け取ったらチームは解散 サポートは素人ばかりで、バグを埋めることで新たなバグを生産し続ける悪循環 流行り廃りはあるけれども、枯れた技術で安全で息の長いものを作ってくれる業者は良心的かと思います 材料の選定に不安があるなら外部でなく委託先としっかりお話ししたほうが良いと思います
適当。表示がくずれるので空白2文字を全角空白にしていることに注意。 use strict; use warnings; use feature 'say'; use XML::SAX; my $xml = << "END"; <?xml version="1.0" encoding="utf-8" ?> <pets> 　<pet> 　　<type>dog</type> 　　<name pos="1">Yamada</name> 　　<name pos="2">Taro</name> 　　<age>3.5</age> 　</pet> 　<pet> 　　<type>cat</type> 　　<name pos="1">Yamada</name> 　　<name pos="2">tama</name> 　　<age>1</age> 　</pet> </pets> END my @target_hierarchy = qw(pets pet name); my @work_hierarchy　 = (); my $call_back　　　　= undef; my $parser = XML::SAX::ParserFactory->parser( Handler => MySAXHandler->new ); $parser->parse_string($xml); { 　　package MySAXHandler; 　　use base qw(XML::SAX::Base); 　　sub start_element { 　　　　my ( $self, $el ) = @_; 　　　　push @work_hierarchy, $el->{LocalName}; 　　　　$call_back = undef; 　　　　if ( _check_hierarchy() ) { 　　　　　　if (　　exists( $el->{Attributes} ) 　　　　　　　　and exists( $el->{Attributes}->{'{}pos'} ) 　　　　　　　　and $el->{Attributes}->{'{}pos'}->{Value} ) 　　　　　　{ 　　　　　　　　my $posision = $el->{Attributes}->{'{}pos'}->{Value}; 　　　　　　　　if ($posision eq '1') { 　　　　　　　　　　$call_back = \&_say_first; 　　　　　　　　} 　　　　　　　　elsif ($posision eq '2') { 　　　　　　　　　　$call_back = \&_say_second; 　　　　　　　　} 　　　　　　　　else { 　　　　　　　　　　warn 'Unknown ', $posision; 　　　　　　　　} 　　　　　 } 　　　　} 　　} 　　sub end_element { 　　　　my ( $self, $el ) = @_; 　　　　$call_back = undef; 　　　　pop @work_hierarchy; 　　} 　　sub characters { 　　　　my ($self, $data) = @_; 　　　　if ( defined $call_back ) { 　　　　　　$call_back->( $data->{Data} ); 　　　　} 　　} 　　sub _check_hierarchy { 　　　　if ( $#target_hierarchy != $#work_hierarchy ) { 　　　　　　return 0; 　　　　} 　　　　else { 　　　　　　for ( my $i = 0; $i <= $#target_hierarchy; $i++ ) { 　　　　　　　　return 0 if ( $target_hierarchy[$i] ne $work_hierarchy[$i] ); 　　　　　 } 　　　　　　return 1; 　　　　} 　　} 　　sub _say_first { 　　　　my $name = shift; 　　　　say "1: $name"; 　　} 　　sub _say_second { 　　　　my $name = shift; 　　　　say "2: $name"; 　　　　say '---'; 　　} 　　1; } ------ $ perl -w foo.pl 1: Yamada 2: Taro --- 1: Yamada 2: tama ---
むりやり one-liner: @ref[sort {$a<=>$b} map {{map {$ref[$_] => $_} 0 .. $#ref}->{$_}} @input]
>これをutf-8用に改造できないでしょうか? >(私自身は方法が全然わからないので、修正個所・記述をそのまま教えていただけるとありがたいです) 改造は可能でしょう。ただし自己責任で行うべきです。 自分では方法はわからないという人は絶対にやるべきではありません。 使用しているスクリプトで元から想定している文字エンコーディングで使用するのが一番の解決方法です。 しかしそうではなく、自分の好きな文字エンコーディングを使用したい、機能についても元のものと似ていなければならないなどというのであれば、開発会社に依頼し作成してもらうのがいいでしょう。無料でできる範囲には限りがあるのは当然です。条件をいろいろつけるのであれば有料になるのは当たり前だと考えられるようにならなければならないと思います。
No.1 です > aaaa.pl が必要という認識で良いでしょうか。 > 置き場所(ルートからのパス等)などを添える必要はないでしょうか。 方法はありますが、少々面倒になりがちなので、オススメしかねます /hoge/aaaa.pm package aaaa; our $data = "ほげ"; /sample/bbbb.php <?php # /hoge が perl の @INC に入っている $data = shell_exec("perl -m'aaaa' -e 'print \$aaaa::data'"); # そうでなければ直接指定 $data = shell_exec("perl -I'/hoge' -m'aaaa' -e 'print \$aaaa::data'");
http://maps.googleapis.com/maps/api/geocode/json …エンコードした住所>にアクセスし、json形式でデータをもらう。 jsonデータの中に"geometry" : -> "location" があるので、緯度経度を取得できる。 例 東京都港区芝公園1丁目5番25号 http://maps.googleapis.com/maps/api/geocode/json …
２文字限定でよければ、正規表現の置換を使って変換することができると思います。 my $foo = $ARGV[0]; $foo =~ s/\\./qq("$&")/eeg; print "$foo\n"; $ perl unescape.pl 'abc\tdef\\ghi' abc　 　def\ghi シングルクォート内での \\ の扱いは、Bash と Perl では異なります。Bash では \\ のままですが、Perl では \\ を \ に変換します。
探している塩基配列が複数行にまたがる可能性があるので, それぞれの塩基配列ごとに「1つの文字列にしてから」調べる必要がありますね＞#2.
> Perlでの置換なら、「 s/[Aa]/[Aa]/gi; s/[Bb]/[Bb]/gi; … s/[Zz]/[Zz]/gi; 」の様な感じで置換するという事です。「あaいi」は「あ[Aa]い[Ii]」と置換されます。 $foo = 'アaイi'; $foo =~ s/[aA]/[aA]/gi; $foo =~ s/[iI]/[iI]/gi; print "$foo\n"; # ゼaA][aA]イ[iI] 確かに「あaいi」ではうまくいきますが、カタカナにした「アaイi」では文字化けしてしまいます。「ア」の２バイト目が大文字の "A" になっているからです。(ちなみに「イ」の２バイト目は "C" ですので、s/[cC]/[cC]/gi; を適用すると文字化けすることになります。) Shift_JIS は厄介な文字コードですので、utf8 または euc-jp で Perl プログラムを書くことができるのでしたら、そちらの方がトラブルに見舞われることが少なく楽をすることができます。(「/〔a/i」や「/あaいi/i」もそのままで実行できると思います。)
ディレクトリの中から目的のファイルを探すための時間に、差が出る可能性は有ります。 ただ、単に「指定した名前のファイルを削除」とかだったら、極端に遅くなるとは考えられません。 何か、他の処理で時間がかかっているのでは? 例えば、「削除対象のファイルかどうかを、全部のファイルについて個々に調査している」とか
> これをしたいのですが、どのように記述したら良いかがわからないほどの初心者です それなら、まずは、このやり方に見当がつくくらいの勉強をしてからの方がよいのでは? ・テキストファイルを全部リストに入れる方法 ・リストの並び換えの方法(sort関数のちょっと高度な使い方) などは、初級の入門書にも載っていると思います。 ※ 他にも 「3行だけ記録して、真ん中が該当行だったら前後の記事番号を使う」 「注目記事番号未満のうちの最大値と、注目記事番号超のうちの最小値を求める」 等の手法もあります。 それから、++ / -- はちゃんと理解してください。 単に「1減らした数」ということにはなりません。 変数の前に書いたときと後に書いたときとの違いも重要です。 理解できていないのなら、使わない方がいいくらいです。 $new_no=$no++;#新しい記事だから現記事より+1 とありますが、 後に置いた場合の ++ は ・まず、元の値を使用する ・使った後でその変数自体を+1する という効果があります。つまり、この文は { $new_no=$no; $no=$no + 1 ; } とほぼ同じことになります。同様に $old_no=$no--;#古い記事だから現記事より-1 は { $old_no=$no ; $no = $no - 1 ; } です。 では、最初に$no=5として $new_no=$no; #=> $new_no = ? $no=$no + 1 ; #=> $no = ? $old_no=$no ; #=> $old_no = ? $no = $no - 1 ; #=> $no =? としたら、それぞれどうなりますか? 上の?をそれぞれ埋めてみてください。
push は autovivification が効くので $ret->{$d[0]} = [$d[1]]; の代わりに push @{$ret->{$d[0]}, $d[1]; とできますな＞#4. 結果として 2つの while ループはほぼ同一の形になったりする.
use PDL::Ufunc; を追加し、次でループ脱出 if(all $ans_now == $ans_before){last;} ただし、$ans_nowは今回の演算結果, $ans_beforeは前回の演算結果 PDLのhelp allより: ======================= Module PDL::Ufunc all Return true if all elements in piddle set 　　...(snip) =======================
ちょろっと調べてみると ] や } を「メタ文字」とはしていない資料があったりする.... ちなみに { は微妙な扱いだったりするのが難しいところ.
　サーバーにあげる前にローカルでテストしたときは問題なかったのでしたらパスの指定の間違い。テルネットが使えれば、$ -d test-cgi とか。 　またサーバーのエラーログにも簡単な内容が書き込まれているはずです。 　テルネットが使えないサーバーでしたら、BEGIN{}でエラーを外部テキストファイルに書き出すと良いです。HTMLとして出力させることも可能です。 　いずれにしても、何らかのエラーで応答ヘッダを出力する前に停止しているということですね。理由はわかりません。デバッグモードでテストしてみてください。 　そもそもPerlへのパスは？？
$hogehoge += eval("\$hoge$_"); 通常のコードで使うのはお勧めできませんが、上記のようにすればエラーなく動くようになります。
であれば, 一番簡単なのは perl -n "script.pl" "in.txt" > "out.txt" じゃないかな?
見てわかると思いますが、私のスクリプトは3カラム目に指定された数だけ無条件に削除します。０以外は削除したくないというのであれば、やり方は変わってきます。
簡単ながら # ファイルを全部読み取り my @records; my $dataFile = 'data.csv'; open FH, "<$dataFile" || die; foreach(<FH>) { chomp(); my @a = split /,/; push @records, \@a; } close FH; # 読み取った行を繰り返し my $size = @records; for (my $i = 0; $i < $size; $i++) { if ($records[$i]->[0] eq 'ban1') { my @a = @{$records[$i]}; &他のプログラムの処理(@a); if ($i + 2 < $size) { my $b = $records[$i+2]->[3]; &任意の行から読み取った値を処理($b); } } }
　そもそも、そのテキストファイルがどのような文字コードで作成されているかによってスクリプトは変わります。 　外字をどの範囲にするか、例えばUNICODEの場合は、ギリシャ文字やハングル、アラビア文字を外字とは扱いませんが、Shift_JISの場合は外字に含めないとまずいでしょう。 open でファイルを開いて while(<IN>){}などで一行ずつパターンマッチを行い。 ＞もし存在する場合は、その行を別のファイル(output.csv)へ出力する。 　存在すれば、その行を、新しいデータに追記する。 　　質問と、出力形式がマッチしませんね。その文字だけでしたら、全体を一行として文字を探さないとならないです。そちらのほうが厄介です。一文字一文字の区切りを判断しなければならない。文字境界の判別は意外と厄介です。半角文字、制御文字、全角文字を区別しないとどこまでが一文字か分からない。 　最後に、OUTでファイルに書き出せばよい。 　
Mobile::UserAgentは古すぎか。。。 HTTP::MobileAgentのdisplayメソッドを使えば、多少ましでしょうが、 HTTP::MobileAgentは2012年が最新なのでどちらにしろ完璧な解像度を得るのは 不可能でしょう。
> # MIMEエンコード > $mail_to = mimeencode($MAILTO); > $mail_from = mimeencode($FORM{'name'}); > $mail_subject = mimeencode($FORM{'subject'}); > > # 文字コードの変換 > $body = jcode::jis($user_owner); 先頭が小文字の jcode は、UTF-8 をサポートしていないので変換できません。また、mimeencode も mimew.pl のものだとしたら、やはり UTF-8 はサポート外だと思います。
>少なくとも、$subject は定数なので、ユーザからの入力は反映されません。 $subject は例としてあげただけで $to や、その他に参照される変数なども同じですが大丈夫でしょうか。 実際にできるかどうかは別として他の思い当たるのは、例えばそのメール送信処理のcgiに $ telnet そのサーバのホスト名 80 GET パス?SUBJECT=... ように直接urlでアクセスできてしまうとか、 それを処理しているサーバのsendmailが外部から直接アクセス可能で自由に利用できる状態になってるとか。 今のところ思いつくのはこれくらいです。
いくらなんでも <@testdata_hairetu> はなにをしたいのかわからない＞#2.
No.5 の補足に書かれたコードを見ると、open 文の引数に "<:utf8" があるのでファイルからの読み込みは「UTF-8 内部文字列」になるのはわかるのですが、/ほげ/ と @file_str が「UTF-8 内部文字列」になっているのか、それとも「UTF-8 バイト文字列」なのかは判断できません。大丈夫でしょうか？ まずは、No.5 の補足のコードがなぜうまく行かないのか、突き止めることをお奨めします。例えば、/ほげ/ が ASCII 以外の文字を含んでいて「UTF-8 バイト文字列」である場合は、if の内部に入ることはありません。if の内部に入ることが確認できたら、簡単な正規表現を実行してみるとか、いろいろとやれることはあると思います。 なお、while ループで１行ずつ読み込んで処理するには、フラグ的な変数を用いるのも一つの方法です。 my $prev = 0; while (my $line = <FH>) { ... if ($prev) { foreach (@file_str) { $line =~ ... } $prev = 0; } else { $prev = 1 if $line =~ /ほげ/; } ... }
正規表現の置換部はダブルクォート文字列と同様に評価されるので、次の２つの文は同じように機能します。質問のケースでは、変数を２重に置き換えなければならないので、明示的にダブルクォートが必要になります。 $string[$i+1] =~ s/$search/$1回/g; $string[$i+1] =~ s/$search/"$1回"/eg;
プロセスIDを付けると何がおこっているのかわかりますよ。 以下、$$はプロセスIDを表わしています。表示がくずれるので空白2文字を全角空白にし ていることに注意。 use strict; use warnings; my $i = 0; while ( $i < 3 ) { 　　if ( fork() ) { 　　　　print "parent($$) hello -> $i\n"; 　　　　last; 　　} 　　else { 　　　　print "child($$) hello -> $i\n"; 　　　　sleep 3; 　　　　print "child($$) exit -> $i\n"; 　　　　$i++; 　　} } print "parent($$) finish\n"; --- $ perl -w foo.pl parent(24503) hello -> 0 parent(24503) finish child(24504) hello -> 0 child(24504) exit -> 0 parent(24504) hello -> 1 parent(24504) finish child(24510) hello -> 1 child(24510) exit -> 1 parent(24510) hello -> 2 parent(24510) finish child(24511) hello -> 2 child(24511) exit -> 2 parent(24511) finish
どちらも同じ意味です. 同じですが.... $c eq 10 って条件が何をしたいのかわからん. 「どうなるか」はもちろんわかるけど, 「どうしてそう書いたのか」がわからない.
おそらく、ブラウザ依存のことなので、サーバー側でやることは無いでしょう。 ローカル側で設定できるかどうか、調べてないのでわかりません。 ただ、「クリックしたら自動実行」みたいなことは、セキュリティの関係でどんどん厳しくなっていく傾向にあります。 TIFFでなければならないのでしょうか? ブラウザで標準で対応しているような形式(JPEG,PNG等)にすれば、いちいち聞いてこないはずです。 TIFFが必要なら、画面表示用PNGとダウンロード用TIFFを別に用意するとか。
単純に環境変数USER_AGENTを判別すればよかろうかと・・ ただ、ブラウザの機能、あるいはアドオンで一斉に取得する方法がありますので、その場合は無理です。 　たとえばfirefoxでしたら DownThemAll!( https://addons.mozilla.jp/firefox/details/201 ) ScrapBook( https://addons.mozilla.jp/firefox/details/427 ) 　などを使われた場合は無理です。 　いずれにしてもカウンターはおまけ機能で信頼性のあるものではありません。十数年以上前には流行していましたが・・。 ＞何かプロバイダの検索収集かなと思うのですが、こんなのはカウントしたくないのです。 　所詮、そうしたものですから期待しないほうが良いでしょう。
まずは、メモリのサイズとファイルのサイズが明確でないと、遅くなる理由があなたのプログラムのせいなのかどうかはわかりません。件数が一万件から一万5千件になった程度（50%増）で極端に性能が落ちることはあまり考えられません。よっぽどメモリが小さいか、件数の増加とともに処理量が指数関数的に増えるような処理をしているかのどちらかです。 月に一度遅くなるということですが、あなたのプログラムは常時走っているのですか？ 1000件に分割した場合、メモリ消費は減りますが、テキストを処理している間のCPUの使用効率は変わりません。1000件であろうと10000件であろうと同じ処理をしているわけですから、実行されている命令列は同じあるいは非常に似ています。似たような命令列が実行されるのであれば、実行中のCPUの使用効率に変化はほとんどありません。ただ、ファイルを分割した場合は、新たにファイルを開くときにデータをメモリにロードするわけで、その間CPUは遊んでいますから、一時的にCPUの負荷は下がります。当然CPUが遊んでいるというこは、処理効率が悪いということであまり好ましいことではありません。 まずは、メモリのサイズとファイルのサイズを明確にしてください。
Perlは汎用のプログラミング言語で、CGIに特化したものではありません。 そのため、PHPのように「フォームで入力された情報が勝手に変数に入る」ということはありません。 明示的に情報を取り込む必要があります。 ・自前でデータ取り込みプログラムを作る ・CGIモジュール等の既存の物を使う よほど古いPerlとかで無い限り、CGIモジュールを使うのがよいでしょう。 「CGI.pm」で検索すれば、解説サイトが見つかります。
>原因がわかりません。 CGIになっていないからでしょう。 http://homepage2.nifty.com/sak/w_sak3/doc/sysbrd … のサンプルと見比べてくださいな。 結果を受け取ったWebサーバは、ソレをどうしたらいいのかわからんので500エラーなんでしょう。 画像としてクライアントに返せばいいの？ ただのテキストとして返せばいいの？ それとも謎のバイナリデータなのぉぉぉ？？？？ わからないのぉぉぉぉぉ＞500エラー
そのハッシュから @a = (['A', 'a', 7], ['A', 'b', 3], ...) って配列を作ればいいんじゃね?
cygwinかStrawberry Perlじゃないですかね。 cygwinで2・3日やってみて、よくわからなかったら、Strawberry Perlにすれば いいと思います。 cygiwn - 利点 CPANがそのまま使える シェルやUnix系コマンドが使える - 欠点 慣れるまで少しだけ面倒くさい (ただし、慣れると便利) Strawberry Perl - 利点 CPANがそのまま使える 使い方が簡単 (windowsのコマンドプロンプトから実行するだけ) - 欠点 シェルやUnix系コマンドはついてない (ただしgccコンパライはついてくる)
なにか大きな誤解をされている。 ＞CGIのプログラムを作る前はHTMLだけで作っていました。 ＞<form action="mailto:メールアドレス"～ ＞CGIでメールフォームを作る 　というのは、言葉として成り立たない。 　あくまでメールフォームはHTMLで作成されます。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから ユーザは一般に、テキストを追加する、メニュー項目を選ぶ、等してこれらコントロールを変更してフォームを「完成」させ、その後フォーム処理のためにWebサーバやメールサーバ等のエージェントへとフォームを提出する。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Forms in HTML documents (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html4 … )］より 　そして、サーバーにあるCGIプログラムで処理して送信されます。 ・受け取ったデータをメールの本文データに作り変える。 　　文字コードをiso-2022jpに変換する ・メールヘッダを作成する ・サーバーにあるMTA(Mail Transfer Agent)、例えばsendmailやqmailに送りつける。 　このCGIプログラムを作ってサーバーに設置し、動作するように設定しなければなりません。
windowsの環境という前提で回答します。 以下のようなスクリプトを作成してください。（1行です） ------------------------ print sort(<>); ------------------------ これをデータファイルが存在するディレクトリと同じ所に保存してください。 ファイル名は、sort.plとします。（名前は任意です。他の名前でもかまいません） データファイル名をdata.txtすると、 コマンドプロンプトで、そのディレクトリに移動し、 perl sort.pl data.txt と入力してください。画面にソートされた結果が表示されます。 ファイルに出力したい場合は、それをリダイレクトして下さい。 以下のようにします。 perl sort.pl data.txt > out.txt と入力してください。 out.txtに結果が格納されます。
http://www.bribes.org/perl/ppm のリストを見ると GD-SecurityImage-AC.ppd, Image-Magick.ppd が存在するのでインストール可能だと思えます。 実際に自分の環境でやってみましたが、どちらも ppm(GUI経由) でインストールできましたよ。 環境 Win7(64bit) Active-perl(32bit) This is perl 5, version 16, subversion 3 (v5.16.3) built for MSWin32-x86-multi-thread GD-SecurityImage-AC.ppd をみると <ARCHITECTURE NAME="MSWin32-x86-multi-thread-5.16> とあるので AcrivePerl の64bit バージョンだとはじかれている可能性もあり得ます。
> この場合、$conにtest.cgiの出力が入るだけで、 > URLのhttp://xxx.xxx.xxx/test.cgiに遷移することはできません。 http://xxx.xxx.xxx/test.cgiの出力が得られることと、 http://xxx.xxx.xxx/test.cgiに遷移することは 同じ意味だと思います。ブラウザでtest.cgiが出力されれば、そのページに遷移した と言いますよね？
UTF-8 の内部文字列にすれば、tr で文字単位で変換することができます。プログラムのソースが EUC-JP でとのことなので、少し厄介なところはあります。 use strict; use Encode; use NKF; my $str = "\xAD\xEA０１01アア"; $str = decode 'utf8', nkf('-Ew', $str); my $from = decode 'utf8', nkf('-Ew', '０-９Ａ-Ｚａ-ｚ　（）＿＠ー'); eval "\$str =~ tr/$from/0-9A-Za-z ()_\@-/;"; $str = nkf '-We', encode('utf8', $str); print "$str\n"; 私の Linux 上のパソコンでは、上記のコードで (株) は文字化けせずに全角の０と１を半角に変換します。
直訳すれば「文字列にする」
効率化しないで単純に組むのなら my @lines; my %count; foreach(<>) { push(@lines, $_); my ($key) = split(/\s+/); $count{$key} += 1; } foreach(@lines) { my ($key) = split(/\s+/); my $n = $count{$key}; open(FH, ">> file_$n.txt"); print FH $_; close(FH); }
> print substr($_, 10) = ""; これは 「substr($_, 10) = ""」 の評価結果を出力する、という意味になります。 「substr($_, 10) = ""」 の評価結果、ということは、 = 演算子の評価結果、ということになります。 A = B の評価結果は、 Bの値(を代入したAの値)になります。 よって、この式の評価結果は "" です。 つまり、 print "" ; を実行していることになります。 -l による行末処理によって print "" . "\n" ; と同様の意味になります。 以上のことより、空行が表示される、というのが、書いた通りに正しく動作した結果です。 なお、=""以降が無ければ、「各行の11文字目から行の終わりまで」です ="" で、それを削除しているので、$_に残っているのは、先頭の10文字です。 http://perldoc.jp/func/substr
ファイルの先頭を見て、#!だったらその行を実行コマンドとして実行、というのは、Unix系OSの機能です。 Windowsでは使えません。 http://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%90% … scr は、たしか、Windowsのスクリーンセーバー用に使われていたと思います。 どうしてもscrのままで、となると難しいと思います。 BATファイルに埋め込んで、shebang風に使う、という方法はあるのですが。 Windows shebangで検索するといくつか見付かります。
Webサーバはなんです？ >metaでEUC-JPをしていればブラウザ側で自動判断してくれると思っていたのですが、違うのでしょうか？ >HTMLでmeta以外に文字コードを指定するところがあるのでしょうか？ Webサーバの設定によっては化ける。という例がありますね。 「Apache 文字化け」辺りで検索すると情報が見つかるでしょう。 http://tech.bayashi.net/pdmemo/chara2.html ってことで……そのCGIはHTTPレスポンスヘッダのContent-typeは出力していますか？ さらに、Content-typeでcharsetを指定していますか？ # charset指定していないとWebサーバのデフォルト設定が使用されるでしょう。おそらく。
タイの事情は知りませんが。 日本語ではISO-2022-JPを使うのが標準であるように、タイ語にも基本のコードがあるのでは? あと、基本は7bitでの通信です。UTF-8をそのまま送ったりはしません。 そういう当たりを処理したものをsendmailに送ってますか?
こういうことですか？ while(<>){ chomp; @temp = split(/,/ $_); if(/2013\/11\/19,09:00:00,13:00:0/){ print "$temp[13]\n"; print "$temp[14]\n"; } }
> Error:Invalid argument at C:User～～～となってしまいます。 この省略されている箇所に、行番号が書いてあるはずなのですが。 それは、どこなのでしょうか? エラーメッセージのヒント無しにプログラムを読むのは面倒です。 > my @url =<IN> ; <>で読み込んだときは、改行も含みます。 改行を取り除いている様子がありません
1. CPAN のモジュールで DOM とか スレイピング とかを導入 2. 文字列をHTMLとして解析する 3. 解析結果から、要素imgの属性srcを全て取得 (たとえばXPATHで "//img@src" とか) 4. src の中身をURIとして解析する 5. 解析結果から、ホスト名とかファイル名を取得
二重引用符が全角です。半角の二重引用符を使用してください。
fork&exec
Perlはほとんど無関係、おそらく単なるHTMLの問題です。 恐らくは、<from>の前にある（端折られた）HTMLに、<a>タグがあって閉じられてない？
そのままでは当然無理. 「$ifbunの中身をそのままIFの条件式に入れる」とは言っても if("index(文字列, 検索したい単語) >=0") なんて書いてるわけじゃないでしょ? というわけでえばれ.
ＨＯＭＥは2バイト文字ですか？ 一度HOMEにしてみてはどうでしょう？
uri_escape()を使いましょう。 ちなみに、canonicalは相対パス指定もできますが、間違いがないように絶対パスで指定したほうがいいと思います。 また、フォームの入力をそのまま使っていますが、XSS対策のために、ここもエンコードするべきです。 やり方は、いろいろあるので、探してみてください。 use URI::Escape; my $escape_str = uri_escape($FORM{$SEARCH{1}{Name}}); my $canonical_url = "http://foobar.baz/$escape_str.htm"; print <<"<!---ＨＴＭＬ--->"; （中略） <link rel="canonical" href="$canonical_url"> （以下略）
http://detail.chiebukuro.yahoo.co.jp/qa/question …
こちらのモジュールを使うのはどうでしょうか？ http://cpansearch.perl.org/src/TOKUHIROM/Geograp … 最新のバージョンならromanという読み仮名もデータに入っていますね。
プログラムの組み方によっては可能性はありますね　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
QUERY_STRINGの解釈は、すでにそのCGIで使われているので、それに加えれば良いです。 cmd=s&xxxx&xxx&Tfile=Data&TrColor=%xxx&Sort=xxx_xxxx ?以降がそうです。 　CGIに情報を渡す方法は、method="get" (デフォルト)のQUERY_STRONGと、method="post" による標準入力(STDIN)と、PATH_INFがあります。 　⇒入力フォーム編（GETとPOSTデータを受け取るには） - futomi's CGI Cafe( http://www.futomi.com/lecture/form/ ) 　この処理については、あなたのCGIによって様々ですから、具体的なコードは示しようがないですが、あなたのCGIを見ればいずれも書かれているはずです。REQUEST_METHODの値で分岐しているはずです。 　if($ENV{'REQUEST_METHOD'} eq "post"){・・・移行 　ただ、ページの切り分けでしたら、PATH_INFO(とSTDIN)を使うほうがSEOの上から最善の方法です。検索エンジンを含むユーザーには、 http：//xxx.jp/xxx/xxxxxxx/xxxxxx.cgi/page1 　としか見えませんから、keywordやdescriptionは最近の検索エンジンは一顧だにしてませんしね。 ・Enviroment Variable and FORM,COOKIE 　　 http://hpcgi1.nifty.com/Iruka/ENV_FORM.cgi/page1 … ) 　　 http://hpcgi1.nifty.com/Iruka/ENV_FORM.cgi?page=1 )
OS (というか find) によっては find . -maxdepth 1 -mindepth 1 -name '*{.gif,.bmp,.jpg,.jpeg,.png}' | sed -e 's=^./==; s/\./ /; s=^=bash ./echo.sh =' | bash のようにコマンドを組み立てる変態的な操作も可能. 最初の find は ls -1 *{.gif,.bmp,.jpg,.jpeg,.png} とだいたい同じなんだけど, たくさんファイルがある状況では find じゃないとうまくいかない.
@row['1'] みたいな表記がたくさんありますが、Perlでは @row : 配列 row 全体のリスト @row['1'] : 配列rowの一部を抜き出したリスト (スライス) $row['1'] : 配列の添字'1'の要素(スカラー) となります。また'1'とは書きましたが、文字と数値の区別が曖昧なため可能な表記で、普通は、引用符無しに $row[1] 等と書きます。 Perl で気を付ける点として「コンテキスト」というものがあります。 同じ関数やメソッドが、リストのコンテキストとスカラーのコンテキストで違う動作になります。 詳しくは長くなるので、下のURLや「リスト スカラー コンテキスト」で検索したりしてください。 http://perldoc.jp/docs/perl/5.10.0/perldata.pod @row2 = $sth2->rows; これは、$sth2->rows;が返すのは、スカラー値です。 http://perldoc.jp/docs/modules/DBI-1.612/DBI.pod これを @row2 に代入すると、要素数1のリストになります。 if (@row2 != 1){ 上記のように @rowsは常に要素数1のリストです この比較は、スカラーのコンテキストとなるので、 @row2 は 「@row2の要素数」 となります。つまり1です。 ということは、@row2 != 1は$sth2->rowsの結果にかかわらず、常に偽となります。 @row3 = $sth3->fetchrow_array; #if ($user_url != $row3){ Perlでは @row3 : リストrow3 $row3[0] : リストrow3の要素 は関係がありますが、同じプログラム中にある $row3 : スカラー変数row3 はリストrow3とは独立したものになります。 また、PHPで使われているような比較演算子(==,!=,<.>等)は、「両辺を数値と見做して比較する」というものです。 文字列比較には専用の比較演算子( eq,ne,gt等)を使います。 http://perldoc.jp/docs/perl/5.18.1/perlop.pod $sth4 = $dbh->prepare("INSERT INTO tweet_@row['3'] VALUES (@row['1'],@row['2'], Perlの配列の添字は0から始まります。 (変更もできますが、普通はやりません) $row[0]は不要なのでしょうか? また、これらの値に文字列は無いのでしょうか? 文字列を自動でクオートなどはしません。sqlインジェクションの危険もあります。 内容を確認するのなら $sql="INSERT INTO tweet_$row[3] VALUES ($row[1],$row[2],$row[3],$row[4], .. print $sql . "\n" ; などとすればよいでしょう
以下のようにしてください。 ------------------------------ #通常休診設定 $hdayfl = "./datas/hday7.txt";open (DT,"<$hdayfl");$hday1 = <DT>;close (DT); #$hdayを$hday1に変更する #重要休診日 $regular = "./datas/regular.txt";open (DT,"<$regular");$hday2 = <DT>;close (DT); #$hdayを$hday2に変更する $hday = $hday1 . ',' . $hday2; #・・・この行を追加 以降は変更無し ------------------------------ 質問ですが 11-28とは11月28日という意味でしょうか？ もし、そうだとすると、通常休診日と重要休診日とで日付が重複することはないのでしょうか。 （例えば、12-13がどちらのファイルにも入っている場合です。） その場合、12-13が重複するので、片方を、取り除く必要があると思いますが、 それは行わなくても良いのでしょうか。そもそも、日付の重複は発生しないのであれば、 このことは、問題になりません。 もし、日付の重複があって、それを取り除く場合は、更にスクリプトを変更する必要があります。
＞もちろん、以下の様な方法でファイルに書き込めるのは判っております。 　いや、全く分かってないから、書き出せないのですね。 #!/usr/bin/perl open(IN, "data.txt") or die ; open(OUT,">output.txt") or die; foreach (<IN>){ my $line=""; my (@data,@out)= (); chomp; @data = split(' ',$_); foreach(@data){ push(@out,$_/100); } $line = join (" ",@out); print OUT "$line\n"; } close (IN); close (OUT); __END__
質問者様のソースを出来るだけ生かすと、以下のようになります。 ------------------------------------------- #!/usr/bin/perl open(IN, "data.txt") or die ; @x = <IN>; close (IN); foreach $line (@x){ chomp($line); @elms = split(' ',$line); foreach $data (@elms){ print $data/100," "; } print "\n"; } ----------------------------
成功しています。 インストールされたファイルは、port contents で確認できます http://guide.macports.org/chunked/using.html#usi …
http://www.macminiosx.com/2012/07/mt52_smtp_tls. … 上記のページ等で、別の解決方法が紹介されています。Net::SMTP::TLS 内のサブルーチンを修正する方法です。元のファイルは修正不可でしょうから、コピーして修正することはできないでしょうか。 以下は、私が利用している Net::FTP でのテストです。プログラムのあるディレクトリに Net サブディレクトリを作り、そこに FTP.pm をコピーしたところ、プログラムは問題なく動作しました。 use lib '.'; # @INC の先頭をカレントディレクトリに use Net::FTP; print $INC{'Net/FTP.pm'}, "\n"; # 読み込まれたモジュールの確認 $ftp = Net::FTP->new('192.168.x.x'); $ftp->login('anonymous') or die "Can't connect: $@"; print join(', ', $ftp->ls), "\n"; $ftp->quit;
えぇと, 実は「属性の順番に意味がある」方が (ある意味) 簡単だったりします. というのは, そのような場合には元のソース自体で ・styleClass → paramId → paramName → action という順に属性が表れる という仮定ができる可能性があるからです. もしそうなら難しくないですよね. これが, 「元のソースからして属性の順番がぐちゃぐちゃ」ということになると, わりとまじめに属性を処理する必要があります. まあできるんだけど, そういうことだと s でちまちま置換するよりも「元のソースから目的の文字列を『構築』する」という方針を考えた方が早いような気がする. 例えば $ref = "numa"; $paramId = "Id"; $paramName = "Name"; $class = "push"; $click = "URL"; $content = "ソース"; と変数に値があるときに <s:a href="numa" paramId="Id" paramName="Name" cssClass="push" onclick="URL">ソース</s:a> という文字列を作りたい (上の変数の値を href や paramId などの属性の値にする) としたら, どう作りますか?
> Perlの勉強に時間を割くより、掲示板の投稿内容が1ファイルずつになっているので、1つのファイルに集約し、Excel　or Accessに取り込む等して加工した方が全然早いのでは・・・と考えた次第です。 何か誤解を与えてしまったようで申し訳ございません Perlについて勉強したら？と言ってるわけじゃなくて、Perlが動くようにしたら？と言っております 掲示板ソフトを作ればいいなんて本末転倒なアドバイスはしてないつもりだったのですが・・・ たとえ話で申し訳ありませんが、Excelについて知らなくてもExcelのファイルを開ける方法くらいだったら手間じゃないと思います Officeや互換ソフトまたはExcel単体なりをインストールすればよいだけ むしろExcelのファイルを畑違いのソフトで開こうとするほうが大変ではないでしょうか？ 新しいサーバまでおったてたのなら、以前の状態に戻すのがベストなアドバイスかとおもったんですが、あまり重きは置いていなかったんですね もうわかってらっしゃると思いますので、余計なお世話かもしれませんが、データをOffice系ソフトで扱いたいということならデータファイルをExcel-CSV形式に編集しなおす以外ないと思います ただ、データ量に比例してたいへんな手間になると思います（少なければそれでもいいとおもいますが） 同じような回答になると思いますがOfficeとかのカテゴリで質問したほうがご希望の回答が得られるかもしれません
単純な解決方法 置換の順番を変える。 /html:text/ は"html:text"にも"html:textarea"にもマッチするので、先に/html:textarea/を処理する。 /html:text / と半角スペースを含めてマッチさせる。 　Perlを含めて最長マッチをしますからね。
perlに引数を渡すまえに、shellがエスケープ処理を展開してしまいます。 なので、コマンドラインでは、それを抑止するために、 '　'　で囲む必要があります。 perl grep.pl 2 '\d{4}\/\d{2}\d{2}' test.txt
http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.ph … の回答を参考に、teeコマンドではなく、Perlで端末とファイルに出力すればいいかと思います。
いまさらだけど,「変換できない」具体例を出した方がいいんじゃないかな. あと, 「正確なプログラム」も.
「言葉足らず」というか, 何をどうすればいいのかさっぱり分からない. 上だけ見ても ・(1) と (2) の間にある「↓↓」は何を意味するのか ・「valueとnameがpropertyになる」とはどういう意味なのか (そして「value」や「name」, あるいは「property」がどこから出てきたのか全く説明がない) がさっぱりわからないし, 「上記の変換」と書いてあるわりには何をどう「変換」したのか読み取れない. また, 「上記の変換では」とあるからには「それ以外の変換」というものも想像できるが, それではどうなるのかが書かれていない. 下も同じようなもの. その特定したい value とか var はどこから決まるのか, そして「変換する」とは何をどう変えることなのかがどこにも書かれていない.
「プログラムは簡単だ」とは言いませんが、難しく考えすぎないことがコツだと思います。 まず、「方法」自体は、Perlの技術とは直接関係ありません。 手作業でやるときの「方法」を分析して、コンピュータにやらせる、というのがお手軽なやり方です。 Perlは、その「コンピュータにやりかたを教える」ために使います。 手作業でやる場合、例えば、こんな風にやります。 ファイル1の1行目を見る→ファイル2の中にあるか調べる→あったら出力 ファイル1の2行目を見る→ファイル2の中にあるか調べる→あったら出力 .... ファイル1の最終行を見る→ファイル2の中にあるか調べる→あったら出力 これを、コンピュータに教えるために、Perl で記述します。 1行目から最終行まで順番、となると、定番の while(<>){～}です。 open $fp1,'<','ファイル1'; while( $line1 = <$fp1> ) { open $fp2,'<','ファイル2'; while( $line2 = <$fp2> ) { if( $line1と$line2とを番号で比較して合致する ) { print 該当行のデータ } } close $fp2; } close $fp1; (一部の記述を具体的書けば)これで完成です。 1,2回使うだけなら、これで十分。「効率のいいプログラム」を作っている間に処理が終わります。 今後、何度も使う。あるいは、技術を身に付けたい、という場合は、効率化を考えていきます。 例えば。ファイルを毎回読み直すのは非効率的です。(メモリに余裕があるなら)全部読み込んでしまいます。 open $fp2,'<','ファイル2'; @lines1=<$fp2>; # 全部の行をリストに読み込む close $fp2; open $fp1,'<','ファイル1'; while( $line1 = <$fp1> ) { foreach $line2 (@lines2) { if( $line1と$line2とを番号で比較して合致する ) { print 該当行のデータ } } } close $fp1; # ファイル2を数値ファイルにすると、#1にある「2. 「別ファイルの数値」を覚えておいて 1行ずつチェック」になります。 (Perlでの)ハッシュは、キー文字列と値をセットで扱うデータ構造です。 例えば $data{'0024'}='0024 佐藤一郎 東京都' ; としてあれば print $data{'0024'} ; で 「0024 佐藤一郎 東京都」と出力されます。 これを使って データファイルを読み込みハッシュを作る→数値ファイルから一行読んで、ハッシュにあったら出力 とすれば、一つずつ比較する必要がありません。 #ハッシュテーブルを作る open $fp2,'<','データファイル'; while($line2=<$fp2> $data{数字部} = $lines2; close $fp2; # 数値ファイルから読み込む open $fp1,'<','数値ファイル'; while( $line1 = <$fp1> ) { # <>では改行文字まで込みで読みこまれるので、取り除く # ※初心者が嵌りやすい罠です chomp($line1) # キーが存在しなければundefになる # この場合、undefは空文字列扱いされるので、なにも出力されない print $data{$ine1}; } close $fp1;
質問の内容は、例えば my @array = ([3, 1], [2, 5], [1, 1], [4, 2], [5, 5]); my @result = sort { $a->[1] <=> $b->[1] } @array; ↓ 3, 1 1, 1 4, 2 2, 5 5, 5 を 3, 1 1, 2 4, 3 2, 4 5, 5 に変換したい、という意味で合っていますか？ そうであれば単純に foreach my $i (0 .. $#result) { $result[$i][1] = $i + 1; } で変換できます。
>最初に表示されるときはlogへの書き込みがなされないのですが >更新ボタンを押すと書き込みがされます。 ということですが、最初のアクセスではJavaScriptがスクリプトエラーや何らかの形でスクリプトを停止していて、二回目のアクセスでそのエラーが消えている可能性はないでしょうか。 たとえばreffererやcookieなどが空の場合に処理ができずにエラー（スクリプトエラーで停止、またはその時点でデータ不備として処理を停止する）になっているが、二回目のアクセスでは値が入っているために処理が続行できるような作り方ですと、 １回目でアクセスできず、２回目でアクセス可能になることがあります。 ブラウザキャッシュ、Perlプログラム、JavaScriptプログラム、HTMLのどれかに原因があるとは思いますが、ソースコード全文を見ないと推測でしか答えられません。
https://www.google.co.jp/search?q=not+provided 主にGoogleのせいです。
> エラーチェックははずそうと思います CGI:Carpは「エラーチェック」ではありません。 通常、CGIでエラーになった時などは「500 Internal Server Error」とかブラウザに表示されるだけで、何が起ったかわかりません。 それを、Perlのエラーメッセージをhttpサーバーのログやブラウザ画面に出力するようにして、エラー内容を確認できるようにするためのものです。 fatalsToBrowserは、エラー内容がブラウザに表示されるので、公開している状態での使用はセキュリティ上問題ですが、CGI::Carp自体は、ログや特定のファイル等に出力されるので、ちゃんと設定した上で残すのがいいかと思います。 > :formはHTMLのフォームを出力するだけですか？ http://perldoc.jp/docs/modules/CGI-3.49/CGI.pod# … http://perldoc.jp/docs/modules/CGI-3.49/CGI.pod# … HTMLの文字列を作成します。出力はしません。 > perlはphpと違ってuse CGIを使わないと定義された関数を使えないんですか？ 外部で定義された関数を、何の手続きもなく使える言語、というのは、ちょっと思い付きません。 PHPでも、requireとかを使って別のファイルに書かれたプログラムを呼び出したりしますよね? CGiモジュールは、Perlという言語の一部ではなく、後から機能を追加するモジュールです。 現在では、Perlをインストールすると、多くのモジュールも一緒にインストールされますが、本来は、別途インストールしなければ使えないものです。
間が空いてしまってすいません ご質問に開いて閉じると書いてあったので画面上の話かと思いました ファイルのopen/closeの話だったんですね 失礼いたしました Ｗｅｂで利用するCSV変換ということで 　Ｅｘｃｅｌ2003までなら「Spreadsheet::ParseExcel」 　Ｅｘｃｅｌ2007なら「Spreadsheet::XLSX」 をcpanからダウンロードして利用するとよいと思います とくに前者はサンプルが充実していて大変参考になります 後者も使い方がシンプルでＣＰＡＮのサイトの紹介コードで充分理解できます どちらもPurePerlなので、サーバのＰｅｒｌモジュールとしてビルド・インストールしなくても「use lib」で簡単に扱えるのが特徴です 数年前に実際に使ったことがありますが、シートが複数でも問題無かったうえにレンタルサーバ上でも動作しました
３回呼び出しの負荷がかかります。 PerlでもPHPでも同じ。
ちょいと突っ込ませてもらいますが＞#5, 例えば >foo.data って名前のファイルがあったら破綻しちゃいますね (だから 2引数の open は使うなと...). あと, 最終行に改行がないと困るかも.
ざっとソースコードを眺めると、 アップロード時のContent-typeで判定しているようです。 http://ja.wikipedia.org/wiki/Multipurpose_Intern … これが image/* だったら画像と判断しています。 ただ、これはブラウザによる自己申告なので、期待通りにしてくれるとは限りません。 検索したらこんなのがありました: http://d.hatena.ne.jp/kanonji/20100113/1263402605 技術向上を目的にするなら、御自身で修正するのがいいでしょうけど、 CGI設置が目的なら、サポートのあるものを探した方がよいでしょう。
そこに書かれている記述内容が、実際に設置されたtest.cgiからの完全なコピペであるなら（タイプミスがないなら）、1ヶ所気になる部分があります。 ------------------------------------------- my $dbh = DBI->connect("DBI:mysql:database, "userid", "password"); ------------------------------------------- databaseのうしろに「閉じのダブルクォート」が抜けてます。 ただ、私もそのダブルクォートを抜いて試してみましたが、肝心の、 -------------------------------------------- DBD::mysql::st execute failed: Table 'database.tablename' doesn't exist at test.cgi line 8. -------------------------------------------- などというエラー行は見当たりませんでした。 その代わりに、ログには大量のエラー行が発生し、ブラウザには「Internal Server Error」が表示されるなど、エラーの出方は全然違いますが、もしそのダブルクォートが抜けているなら、明らかにエラーの一因にはなってますね。
一応 http://perldoc.jp/docs/perl/5.8.8/perlref.pod という方法はありますが ハッシュを使って $abc{'2013'} = <<"EOF"; あいうえお EOF <strong>$abc{$seireki}</strong> みたいにやるとか、他の方法を考えた方がいいと思います > $123 = "$seireki";　　　　　# 代入 エラーになりませんか?
レンタルサーバーで利用できるフォントに限られます。 UNIX系のOSでもwindowsのフォントも使う方法はありますが、ライセンスの問題、フォントテーブルの書き直しなどの問題があり使えないと考えたほうが良いでしょう。
文字のエンコードが中途半端だったので手なおししました。 文字のエンコードは以下が参考になると思います。 http://d.hatena.ne.jp/tokuhirom/20080408/1207619 … http://blog.livedoor.jp/dankogai/archives/510315 … # sqlite_unicode => 1で自動でフラグ付きUTF8に変換するようにした。 # 空白2文字を全角空白にしていることに注意 use strict; use warnings; use utf8; use feature 'say'; use DBI; binmode STDOUT, ':encoding(utf8)'; my $db_name　　= 'sqlite_test.db'; my $table　　　= 'user_info'; my %jp_name_of = ( 　　JPN => '日本', 　　USA => 'アメリカ合衆国', 　　SPN => 'スペイン' ); my $dbh = create_test_db($db_name); create_test_table( $dbh, $table ); say '-- before'; dump_table( $dbh, $table ); my $update_sql = 'UPDATE ' . $table . ' SET name_jp = ? where id = ?;'; my $update_sth = $dbh->prepare($update_sql); my $fetch_sql 　　= "SELECT id, name_en FROM $table where id between 1379 and 1396;"; my $fetch_sth = $dbh->prepare($fetch_sql); $fetch_sth->execute; while ( my $ref = $fetch_sth->fetch() ) { 　　my $id　　　= $ref->[0]; 　　my $name_en = $ref->[1]; 　　$update_sth->bind_param( 1, $jp_name_of{$name_en} ); 　　$update_sth->bind_param( 2, $id ); 　　$update_sth->execute; 　　$dbh->commit; } say '-- after'; dump_table( $dbh, $table ); $dbh->disconnect; unlink $db_name; sub create_test_db { 　　my $db_name = shift; 　　if ( -f $db_name ) { 　　　　unlink $db_name; 　　} 　　my $dbh = DBI->connect( 　　　　'dbi:SQLite:dbname=' . $db_name, 　　　　'', '', 　　　　{ 　　　　　　AutoCommit　　 => 0, 　　　　　　RaiseError　　 => 1, 　　　　　　sqlite_unicode => 1, 　　　　} 　　) || die "$db_name : $!"; 　　return $dbh; } sub create_test_table { 　　my $dbh　 = shift; 　　my $talbe = shift; 　　my $sql 　　　　= 'CREATE TABLE ' 　　　　. $table 　　　　. '(id integer primary key, name_en, name_jp)'; 　　$dbh->do($sql); 　　$dbh->commit; 　　my $sth = $dbh->prepare( 　　　　'INSERT INTO ' . $table . '(id, name_en, name_jp) VALUES (?, ?, ?)' ); 　　while ( my $line = <DATA> ) { 　　　　$line =~ s/\x0D?\x0A?$//; 　　　　my ( $id, $name_en, $name_jp ) = ( '', '', '' ); 　　　　if ( $line =~ m/^(\S+)\s+(\S+)$/ ) { 　　　　　　$id　　　= $1; 　　　　　　$name_en = $2; 　　　　} 　　　　elsif ( $line =~ m/^(\S+)\s+(\S+)\s+(\S+)$/ ) { 　　　　　　$id　　　= $1; 　　　　　　$name_en = $2; 　　　　　　$name_jp = $3; 　　　　} 　　　　else { 　　　　　　die 'Unknown format : ', $line; 　　　　} 　　　　$sth->bind_param( 1, $id ); 　　　　$sth->bind_param( 2, $name_en ); 　　　　$sth->bind_param( 3, $name_jp ); 　　　　$sth->execute; 　　　　$dbh->commit; 　　} } sub dump_table { 　　my $dbh　 = shift; 　　my $talbe = shift; 　　my $sql = "SELECT * FROM $table;"; 　　my $sth = $dbh->prepare($sql); 　　$sth->execute; 　　while ( my $ref = $sth->fetch() ) { 　　　　say "@$ref"; 　　} } __END__ 1377　　　RUS　　　　　ロシア 1378　　　GER　　　　　ドイツ 1379　　　USA 1380　　　SPN 1381　　　JPN 1395　　　USA 1396　　　JPN 1397　　　USA　　　　　アメリカ合衆国 1398　　　ITL　　　　　 イタリア
今どきの Perl ならリファレンスを使うところだなぁ. ちょ～古代の Perl だったらしょうがないけど.
もっかいソースを眺めてみました。 addの件も理解。 こちらの問題で、他のとこでうまく動いていないだけでした。 あらためて。 たぶん、今こんな感じなんだと思います。 1. データをアップロードする 2. readme.txt を参考に　Perlのパスや属性を変更する 3. http://**********/list にアクセスする 何も表示されない。 ソースを見ても <html></html> たぶんここで困っているのだと思います。 4. http://**************/list/list.cgi にアクセスしたら表示されませんか？ 5. data.datにアクセスできませんと出ている場合… ダウンロードしたデータにはdata.datファイルがないので data.datファイルは作成してあげる必要があるっぽいですね。 作って、属性を与えたら問題なく動きました。 いかがでしょう？
＞$str = encode('sjis', $str); 何がしたいの？ encodeは「perlの内部文字列を、指定された漢字コードの文字列にするだけ」ですよ。 URIエンコード、URIデコードは、別の関数を使います。 http://slashdot.jp/journal/450313/%E3%83%A1%E3%8 … なお、pack、unpackは「時代遅れ」なので使わない方が良いです。
ついでに指摘しておくけど, $xml =~ s/<\?.*\?>//; ってこのあとで $xml を使っていないから全く無意味だよね.
Shift_jis で途中のバイトを指定したときにそれが 1バイト目か 2バイト目かを判断する確実な方法は「先頭から見ていく」ことしかありません (utf-8 なら「先頭バイトか途中のバイトか」は簡単にわかる). したがって #7 のようにすれば動きますが (なぜ添え字を覚えるのかは不明), それは結局 #6 で言われている 「先頭から順番に処理して確実に1バイト目と2バイト目を区別する」 にほかなりません.
使っている Perl のバージョンと実際にそのような挙動が確かめられる例を見せてください.
> ファイルを読み書きする場合に使用するflockですが、closeする前に別ファイルのflockは使用できるのでしょうか？ はい。できます。 ただ、デッドロックをしないように気をつけてください。 flockによるロックはファイルごとに設定されるので、一つのプログラムから複数のファイルを開き、それぞれにflockを発行することができます。 ちなみに、後述するドキュメントによると、OSがflockをサポートしている環境では、perlのflockはOSのファイルをロックする仕組みを呼び出し、そのファイルを独占します。一応、知っているとは思いますが、共有ロックでのflock中に別のプログラムが排他ロックをかけると、共有ロックがはずされるまでそのプログラムは待たされます。排他ロック中に他のプログラムが排他ロックをかけると、そのプログラムは排他ロックがはずされるまで待たされます。なお、ファイルのロックはファイルをcloseした時か、プログラムの実行が修了した時に自動的にアンロックされるので明示的にアンロックをする必要はありません。 参考URLとなると、これでしょうか。 Perlのflock関数についての説明です。 http://perldoc.perl.org/functions/flock.html (和訳) http://perldoc.jp/func/flock このflock(2)というのは例えばこれですね。 http://www.freebsd.org/cgi/man.cgi?query=flock&s … OSにファイルをロックする仕組みが予め備わっています。 デッドロックについては、これでも読んでください。 http://ja.wikipedia.org/wiki/%E3%83%87%E3%83%83% … 典型的な起こし方はこんな感じでしょう。 あなたが2つのプログラムを使っていて、プログラムAではfile1、file2の順でロックをとり、プログラムBではfile2、file1の順でロックを取ると、運が悪い時にデッドロックが置きます。 この状況では、プログラムAがfile1をロックした時にプログラムBが動き出し、file2をロックすることがありえますが、そうなるとプログラムAはfile2がアンロックされるのを待ち、プログラムBはfile1がアンロックされるのを待つので、どちらもアンロック待ちで止まってしまいます。 典型的な防ぎ方はロックの順序をすべてのプログラムで一定にすることです。 つまり、必ずfile1、file2の順で取るようにするなどします。そうすると、あとから来たのはfile1のロックを取れずに待っている間に先のプログラムは処理を完了させることができます。 まあ、一つのプログラムから複数のファイルを開いてロックを取れます。ただ、複数のロックを取る場合、デッドロックに気をつけてください。
質問の意図を取り違えていたかもしれません。 ダウンロードを開始する前にファイルサイズを知りたいのではなくて、 ダウンロードが完了する前にファイルサイズが知りたいということですね。 以下の例が参考になると思います。 404 Blog Not Found:perl - LWP::UserAgentで進捗表示しつつダウンロード http://blog.livedoor.jp/dankogai/archives/511416 … 上の例では省略されていますが、:read_size_hintでコールバックを呼ぶサイズを指定できます。
いろんな書き方があると思いますが 単純にこんなのでいいでしょうか？ $message = "○○○○<br>△△△△<br>□□□□"; print $message."\n"; $message =~ s/<br>.*//;## この一行で消えると思います print $message;
エラーログには何と出ていますか？
Perlのevalは、「その文字列が、最初からプログラムに書いてあったかのように解釈されて、実行される」というものです。 http://perldoc.perl.org/functions/eval.html http://perldoc.jp/func/eval $s='$a=10+5' ; eval $s ; # => $sが展開され $a=10+5 ; と書いてあるかのように解釈されて実行される なので、「そこで実行したいプログラムになるような文字列」を用意します。 my $f = '0123' ; my $t = '4567' ; my $x='abc0123' ; # ここで $x =~ tr/0123/4567/ を実行したい eval "\$x =~ tr/$f/$t/" ; # say "\$x =~ tr/$f/$t/" ; #↑が期待通りの文字列か確認 っていうか、ちゃんと例が載ってますよね http://perldoc.perl.org/perlop.html#Quote-and-Qu … http://perldoc.jp/docs/perl/5.16.1/perlop.pod#Re …
CGI.pm の v2.15 以降であれば、-override に真を設定すれば常に -default の値が表示されるようになると思います。 textfield(-name=>'name', -default=>"" -override => 1),
system 関数では出力を受け取ることができないので、コマンドラインで書くときと同じようにするとファイルに保存できます。 open FILE, 'fileA' or die $!; while (<FILE>) { my $line = $_; chomp $line; system("ls -l $line >> fileB") == 0 or die "system failed:"; } close FILE;
回答１の方でほとんど答えは出ているようですが。 for ($j = 0; $j < 7; $j++){ $each = $man[$j]; } こうゆうことではないでしょうか。
いくらでも方法はあります。 例えば。 「行の先頭にある[XXXX] の中を取り出し、 XXXX , の置換する」 と考えれば s/^\[([^]]*)\]/$1,/ ※ \[ と \] の間にある 0個以上の[^]] (]では無い文字。[^の直後の場合、]をエスケープしなくても大丈夫) を () でグループ化 ※ 置換内容は、$1で先にグループした部分を引用 となります。 なお、置換に失敗したときは偽になるので、置換に成功した行だけ出力すればよいので、 print OUT if( s/^\[([^]]*)\]/$1,/ ) ; で十分です。 Perlの正規表現は強力で、いろんなことができます。 正規表現そのものもそうですが 「どうやったら目的のものを得られるか」、いくつかのパターンを覚えておくとよいでしょう。 http://perldoc.jp/docs/perl/5.16.1/perlretut.pod http://perldoc.jp/docs/perl/5.14.1/perlre.pod
どのくらいの大きさのプログラムで, どんなことをしたいんですか? それによって「どう書けばいいか」は変わってきますよ. 例えば, ここに挙がっているくらいのことなら, 私はファイルのオープンなどしません. 標準入力から読み込んで標準出力に書き出すようにします. そうすれば, 「美しい書き方」なんかで悩まなくってすむ.
仕様としては, 5.10 のときでも「In」または「Is」で始まることが必要だったようです. 実装としていつ「In」または「Is」を要求するようになったのかは探せていませんが. 参考URL：http://perldoc.perl.org/5.10.0/perlunicode.html# …
当該Perlfaqは以下のURLです。 http://perldoc.jp/docs/perl/5.14.1/perlfaq5.pod 「あるファイルの行数を数えるには」　が該当します。 数えた後はファイルハンドラは終端になっているのでご希望の処理を追加するようにしています。
回答2さんの手法でOKだと思いますが、もっと基礎的で泥臭い手法を説明すると。。。 #まずは01_01.CSVの各行を配列 @lines に格納します。 open (FH,"01_01.csv"); @lines = <FH>; close(FH); #次に foreachループを使って、@lines から1要素ずつ読んであげます。 #つまり、CSVファイルを1行読んで、その値を変数 $line に代入します。 #ただし先頭の9行は不要なので、変数 i が9以下であれば次のループへ飛ばします（nextの部分）。 #split 関数は文字列を分解するときに使うもので、今回はCSVファイルなので、 #区切り文字にカンマ（ /\,/ の部分）を指定しています。 #split関数の左辺は、分割して得られた値となります。 #CSVファイルの10行目であれば、$first が 00:00:00 で、 $second が 1 となります。 #pushは配列に要素を追加するときに使う関数なので、foreachが回るたびに要素が追加されていきます。 #今回はカンマで区切られた2番目の値を得たいので、$second を配列要素として @optput に追加します。 $i = 1; foreach $line (@lines) { if ($i <= 9) { $i++; next; } ($first,$second) = split(/\,/,$line); push(@output,"$second\n"); } これで 配列 @output に 10行目以下のカンマで区切られた2番目の値が改行付きで入りましたので、 あとは別のファイルに書き出すだけです。 open (FH,">01.csv"); print FH @output; close(FH); 以上がCSVファイルを分解するときの基本です。 あとは、値が二重引用符で囲われていた場合にどうするか等、上記の手法を応用させるだけです。 ※ 12345,"あいう,０００",ABC （応用パターンの一例CSV）
以下のURLの「概要」はいかがでしょうか。 http://perldoc.jp/docs/modules/libwww-perl-5.813 …
$hoge =~ m/\Q$hogehoge\E/i; このようにすることで、$hogehogeの中身が通常の文字として解釈されます。
既に答えは書かれています. 全ての回答を見てください.
なんたって、Larry Wall氏自身が著した「ラクダ本」 　⇒O'Reilly Japan - プログラミングPerl 第3版 VOLUME 1( http://www.oreilly.co.jp/books/4873110963/ ) 　⇒O'Reilly Japan - プログラミングPerl 第3版 VOLUME 2( http://www.oreilly.co.jp/books/4873110971/ ) 　第３版より２分冊になりました。 　すでにC言語の経験があれば、Larry Wall氏の文才と近藤 嘉雪氏の名訳が楽しめるでしょう。 　使い始めると、クイックリファレンスも良いですが、まずなによりも「ラクダ本」
１）についてはNo1の方の回答の通り、全てが順番に同じ経路で配送される保証はありませんので、短時間に続けて送信したら、途中の経路やプログラムを実行したマシンのMTAのスプール状況次第で順番はバラバラになります。 ２）はタイムゾーンの設定の問題じゃないでしょうか。 届いたメールのヘッダー情報を見てDateフィールドのタイムゾーンがどうなっているか確認しましょう。
> # 排他処理開始 > open(LOCK,"$lockfile"); > flock(LOCK,2); このやりかただと、たぶん質問者さんの意図通りにはなりません。 プログラムの動作に10分以上かかって次のプログラムが起動した場合、 後から起動したプログラムは ・flock の呼び出しで、先に起動したプログラムが終了する(ロックが解除される)まで待つ ・その後で、処理を実行する ということになります。 重複実行はしませんが、起動した回数だけ必ず処理を実行しますので、 処理に毎回10分以上かかるような状況になった場合、どんどん未処理(終了待ち)のプロセスが増えていくことになります。 flock の処理は、 flock(LOCK,6) or die("実行中です"); とした方がいいでしょう。 flock は、第2引数が2(LOCK_EX)の場合は、あとから実行した方はロックが解除されるまで動作が停止しますが、 第2引数が6(LOCK_EX|LOCK_NB)の場合は、あとから実行した方がロック中だった場合は、0(エラー)を返します。 そのため、こうすることで、 「そのファイルがロック中であるならばプログラムは処理を行わずすぐに終了する」 という処理になります。
> perlのバージョンは　5.8.8 > プログラムの文字コードは　EUC-JP > ファイルの文字コードも　EUC-JP 使われている文字コードが EUC-JP の場合は、次のように変更してみてください。 my $data1 = decode 'euc-jp', 'アイウエオカキクケコ'; my $data2 = decode 'euc-jp', 'カキクケコサシスセソ'; decode の第１引数は、第２引数で指定した文字列の文字コードです。decode すると、文字列はいわゆる「Perl 内部文字列」になります。なお、「Perl 内部文字列」を外側 (コンソール、ファイルなど) に出力する場合は、(やり方はいろいろあるのですが) 一例としては次のようにします。 print encode('euc-jp', $data1), "\n";
SQL文の記述ルールで文字列はシングルコーテーションで囲まなければいけない事になってます。 あと、LIKE検索なのにワイルドカードを使って無いようですが、いいのでしょうか？ ワイルドカードを使わないならLIKEではなく　＝　にして完全一致検索させた方がいいと思いますよ。
参考までに、パッケージがインストールされていない場合のエラーメッセージは以下のとおりとなります。 Can't locate hogehoge.pm in @INC (@INC contains: C:/Perl/site/lib C:/Perl/lib .) 今回はきちんとインストールされているため、＃１の回答のようにエラーが返ります。
xxx,yyy,"z,zz",XXX,"YY,Y",ZZZ,111,222 の意味は xxx　　yyy　　z,zz　　XXX　　YY,Y　　ZZZ　　111　　222 と言う意味です。 CSVはアプリケーション依存ですから、excelのCSVとして { my $tmp = $line; $tmp =~ s/(?:\x0D\x0A|[\x0D\x0A])?$/,/; @values = map {/^"(.*)"$/ ? scalar($_ = $1, s/""/"/g, $_) : $_} ($tmp =~ /("[^"]*(?:""[^"]*)*"|[^,]*),/g); } です。★ただし内容に改行を含まない場合です。 ⇒ Perlメモ/CSV形式の行から値のリストを取り出す( http://www.din.or.jp/~ohzaki/perl.htm#CSV2Values ) 　より引用。 　これをサブルーチンとして、$lineごとに呼び出せばよいでしょう。 while(<IN>){ my $line = $_; &csv2list($line); } ＞""内のコンマを取りたいのですが、どうしたらよいでしょうか？ 　このサブルーチン内か、処理後に改めて行いますが、大体文字はよほど注意しないと他の文字と衝突します。
これがプログラムの全てならば、 print "@row\n"; をする前に、 print "Content-type: text/plain\n\n"; がないというのがInternal Server Errorの原因をまず疑いたいところです。 Content-typeの設定を#プログラム開始　の直後 ～ #データベースへ接続 の手前 くらいに欲しいです。
＞login_data　というテーブルを適当作成しました。 とありますが、プログラムからはデータベース名がlogin_data、テーブル名がtestと読めます。
Tripodは設定が特殊で、設置難易度の高いサーバと認識しております。 まず、下記のStep2は済ませていらっしゃいますでしょうか。 http://www.angelfire.com/weird/miho/java/cgi.htm 具体的には以下のページになります。 http://www.tripod.lycos.com/build/module_library … あとは、cgi.tripod.comからアクセスしているかどうか このくらいしか思いつかず申し訳ありません。
こんなのどうでしょう！ # 2byteと文字と仮定しますね！ my $str = 'ああいいううええ'; my $len = length($str); my $hash = (); for ( my $cnt = 0; $cnt < $len - 1; $cnt=$cnt+2 ){ my $tmp = substr( $str, $cnt, 2 ); my $hash->{"$tmp"} = $cnt; } foreach my $key ( sort { $hash->{$a} <=> $hash->{$b} } ( keys ( %$hash ) ) ){ print "$key,"; }
昔の話ですが、ガラケーのキャッシュが効いていて投稿できない場合はactionタグに"hoge.cgi?random"という風にランダムな引数(時間をつけたりrandで生成したり)をつけて、違うURLとすることでキャッシュを回避していました。最近の端末でもそんなことあるかどうかは変わりませんが…
文字コードの違いと、UTF-8フラグの有無が考えられます。 $wordに入っている文字列の文字コードと、Perlスクリプトが書かれている文字コードを一致させる必要があります。 また、双方がUTF-8で一致していたとしても use utf8;等で、Perlスクリプト内ではUTF8フラグ付きになっていて、$wordにはフラグ無し、 あるいは、 $wordが何かのモジュールで処理されたUTF8 フラグ付きになっていて、Perlスクリプトにはフラグ無し という状態でも一致しません。 最近なら、次のようにやるのがよいでしょう。 ・スクリプトは use utf8; を使い、UTF-8で記述する。 ・プログラム中では、UTF-8フラグ付き文字列で処理する。 　ファイル等からの入力はPerlIOを利用したり、Encode::decodeしたりしてUTF8フラグ付きにする。 　ファイル等への出力は、PerlIOを利用したり、Encode::eecodeしたりしてUTF8フラグをはずす。
こうですかね。勘違いしていたらすみません ハッシュの値でソートしたキー配列 my %s = ( ... ); my @v = sort { length $s{$b} <=> length $s{$a} } keys %s; キー配列からハッシュを参照 foreach (@v) { printf "%s => %s\n", $_, $s{$_}; }
5.14.4.1405 perl -e "use Win32; print Win32::BuildNumber();" は1405が返ってくるでしょうか。 http://docs.activestate.com/pdk/9.2/Release.html を見ると、 build 5.14.0.1400 for Perl 5.14とあり、 build 5.12.0.1200 or later for Perl 5.12のように、or laterとないので、5.14.0以外のバージョンは利用できないかもしれません。 5.16.0.1600 or later for Perl 5.16 とあるので、5.16.2で同じエラーとなった理由はわかりませんが…（試される際5.14と5.16を共存してインストールはしていないですよね？）
一般的なプログラムの動作として、スクリプト側で排他処理をしてないのであれば、「10分間隔で起動」されれば「10分おきに動作する(場合によっては重複して同時実行する)」だけです。 Perl処理系(ActivePerlなど)が勝手に「二重起動させないようにする」ようなことはありません。(用途によっては、並列で同時に複数実行させたい場合もありますので、そんな勝手なことをされては困ります) 同時実行させたくない場合は、スクリプト側で排他処理を実装してください。
Perl twitter関連のモジュール群は以下のURLにあります https://metacpan.org/release/MMIMS/Net-Twitter-4 … Version1.1移行ガイド https://metacpan.org/module/MMIMS/Net-Twitter-4. … Oauth Toolは適切であることを前提に回答するとして、 上記URLでお示ししたドキュメントと比較すると、OAuthのtraitsが微妙に違うのが気になります。 traits => [qw/API::RESTv1_1/],
肝心な部分がないので・・・ 　連続投稿を禁止する手段として最も手軽なのは、クッキー(HTTP_COOKIE)の利用です。さらに厳密にしたい場合は、投稿者のIPアドレス(REMOTE_ADDR,REMOTE_HOST)とユーザーエージェント(HTTP_USER_AGENT)をセットにして時間とのtableを作成して参照すると良いでしょう。 　HTTP要求ヘッダから、これらのデータを取得して、クッキーの値が指定された時間以内だったら「連続投票は出来ません」と返せばよいです。厳密にしたい場合は、タイムテーブルを作っておいて、そこにデータがあるIPアドレス/ユーザーエージェントは拒否するとかですね。 　投票データと、管理データは分けるほうが良いです。
EUC-JPからUTF-8に変換してから検索、というのはできないんですか?
最近のIISは知りませんが UNIX系のWebサーバなんかはCGIのある場所がカレントになるんですが、 IISでCGIを起動する際に、カレントディレクトリがデフォルトでドキュメントルートとかになっていたかと思います。 先にカレントディレクトリをCGIのある場所にchdir命令で変えてやらないとご質問のようなエラーが出ます。 正直、IIS以外のサーバで動作させるCGIはIISで開発しない方が無難です。 IISはASPとか.ASPとか開発するときだけ使うのが吉です
質問文の例だと、こんなのとか(添付画像参照)。 基本的に、いったん入力を読み取って、配列やハッシュを駆使して適切なデータ構造を構築し、それを元に望みの結果を出力するという感じです。 なので、 1)入力データがどういうものか? 2)加工法は明確になっているか? 3)出力データはどうあるべきか? ――の点を押さえる必要があります。
ファイルの文字コードとプログラムの文字コードの不一致が原因だと思います。Encode::Guess モジュールを使えば、文字コードを調べることができます。なお、私の手元にある Linux 上の Perl v5.8.1 でも Encode::Guess は装備済なので、v5.8.8 であれば使えると思います。 use Encode::Guess qw/euc-jp shiftjis 7bit-jis/; ... my $q = Encode::Guess->guess(join('', @file)); print ref($q) ? $q->name : $q; 上記のようなコードを元のプログラムに組み込むと、判別に成功すればファイルの文字コードを表示してくれます。
以下効率や「分かりやすさ」は完全に無視. とりあえず「5行おき」を無視して「5行ずつ」でその処理をすることはできますよね? 例えば sub collect { my @lines = @_; my @data = (split ' ', $lines[2])[0]; for my $l (@lines) { push @data, (split ' ', $l)[1..3]; } print join("\t", @data), "\n"; } で表示できます. あとは, 読み込んだ全データに対してこれを回せばいいので @lines = <>; for my $i (20..$#lines) { collect(@lines[$i-20, $i-15, $i-10, $i-5, $i]); } でいけそう.
角度が分かっていれば -rotate しかないかな？
ローカルPC上でAを実行する。 ローカルPCはPerlを使える状態にしておく。 [A] は、URLからローカルにダウンロードするものです。 サーバーで実行したら、そのサーバーにとってのローカル、ということで、サーバー上に保存されます。 ローカルPCで実行したら、ローカルPCにとってのローカル、ということで、ローカルPC上に保存されます。 [B]はCGIを使って、ローカルのファイルを送信するものです。 ローカルPCにダウンロード、となるのは、ブラウザが処理を判断したもので、このスクリプト自体には、ローカルPCに保存する機能はありません。 ブラウザの設定を変更すれば、ダウンロード以外の動作にもなります。
個々の作業を安直にコードにして、 グループ名が来るたびに結果を吐き出す方法を採ってみました。 use strict; my @names = (); my $groupName = ''; while (<DATA>) { if (/^[A-Z]+$/) {# グループが始まるなら flush($_);# これまでの分を集計し、グループ名を更新 }else{ push @names, $_;# 名前は配列に追加 } } flush('');# 入力の終了時にも集計 sub flush { if ($#names >= 0) {# 集計中の名前があれば print $groupName; map { print; } sort @names;# ソートして表示 @names = (); } $groupName = shift;# 新しいグループの名前 } __DATA__ AG tanaka abe kaneda BG hayama oota endou CG kawai gennda hirata
おそらく、その 「"if"とか"for"を使った」中に、#1で書いたような構造で、連続的に日付けを変更してて出力している(ただし、日曜日は出力していない)ものがあります。 これには、プログラムの動作を知ることしか、方法はありません。 <td>　</td><td align=center>Mon</td><td align=center>Tue</td><td align=center>Wed</td><td align=center>Thu</td><td align=center>Fri</td><td align=center>Sat</td><td align=center>Sun</td> これにSunを付け加えた、という程度の単純なやりかたでは無理です。 たとえば if($first != 0){ この$firstが意味するものは?単語から考えると「最初」ですが、何の最初? if(!$hflag){ この$hflagが意味するものは? ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=localtime(time); $m_f=sprintf("%02d",$mday); ということから、この$mdayは「本日の日付け」であって、表示される1週間の日付けでは無いように思えます。
まず、チェックボックスのnameは固定にします。HTMLを吐き出すcgiにに記載するフォーム側は、 <input type="checkbox" name="flist" value="$_">$_ <br> xxx.cgiは、 $form = new CGI; @list = $form->param("flist"); でvalueを取得できます。これで解決出来ませんか？ あと、気になったのですが、readdirしてるので、この場合ファイルもチェックボックスに出てしまいますよね？ 参考URL：http://www.futomi.com/lecture/form/cgi-pm.html#s …
Malformed UTF-8 character というメッセージは、いわゆる「フラグ付き内部文字列 (UTF-8)」への変換が適切に行われていないことを示しています。元の文字列の文字コードの指定誤りが、主な原因となります。メッセージの末尾には「ファイル名と行番号」が示されているはずですので、それを手がかりに調べていけばよいと思います。
セッションの保存領域に追加の情報を格納したいという質問でしょうか？ たとえば $s->param('user', 'XXX'); で保存できます。セッションファイルを見てください。'user' => 'XXX' という文字列があるはずです。 取得したいときは、 $s->param('user'); で取得できます。
perl -pe 's/MIYAKE_(ILF|HF|LF)\b/$&U/ if /^(\S+\s+){5}$/' inputfile 正規表現の最後に \b (単語境界) を追加すれば、末尾が U になっている文字列は置き換えないようになります。
単純にフォームをCGIから出力させればよいだけです。 __END__ 以降に書かれたデータ(テンプレート)は、perlから<DATA>で利用できますから、呼び出されたとき、データを受信した都度に、内容を書き換えて出力すれば良いです。
そういう決まりだからです。 詳しくはCGIについての決まり事が書かれたRFC 3875を見てください。 http://tools.ietf.org/html/rfc3875#section-6 CGIではヘッダー、改行文字 (ドキュメントではNLと書いてあります)、もしあったらボディという流れでレスポンスを出さなくてはなりません。 6.3節 (http://tools.ietf.org/html/rfc3875#section-6.3) にある通り、各ヘッダーは改行で終わります。また、6.2節 (http://tools.ietf.org/html/rfc3875#section-6.2) にある通り、ヘッダーを出力した後には必ず改行文字を入れることが決まっています。 つまり、\n\nというのは各ヘッダーの行末に置く\nとすべてのヘッダーを出力したあとに置く\nを連続して書いただけということです。 ちなみに、これはHTTPの仕様 (RFC 2616 / http://tools.ietf.org/html/rfc2616#section-4) で決まっているレスポンスメッセージとは色々違います。
(?!～～) で、「～～でない」という意味です。 つまり、行頭から「$varの中身」と「:」があり、その次が「*RK*」でない文字列
他の方も言われていますが、正規表現で文字列を探索するときは、 先頭から行なってマッチした時点で結果を返します。 文字列が'aabc' の場合、まずの１つ目の「a」でマッチするかどうかチェックします。 a ab c ( $1 eq 'ab' )でマッチするのでこれで打ち切りです。 確かに２つ目の「a」でもマッチしますが、そこまでチェックされません。 なので、「最短マッチは後方のみ有効?」ということになります。 ちなみに、期待されている動作にしたい場合は下記のように書く必要があるでしょう。 if('aabc' =~ /a([^a]*?)c/){print $1;} これなら１つ目の「a」ではマッチしませんから、$1 eq 'b' となります。
そうか, シンプルに s///eg でいいんだ. e の存在を忘れてた.... 「URL を表す正規表現」を $url_regex とすると s/$url_regex/index($&, 'hoge.com') == -1 ? 'abc.com' : $&/eg; とか.
下の例は意味不明ですが (「[00:]で始まるものがない場合は」と書いているがすべてのデータが「00:」で始まっている), 本質的には何も考えず 「00:」で始まる行を見つける →その前にある「23時台で始まる行」だけを別の配列に切り出す (元の配列からは取り除く) →それぞれの配列を個別のファイルに出力する でいいのでは?
＞指定した日時と、入力した日時の差分をとり、ミリ秒に変換してsleep関数で処理しようとおもいつきました。 Perlのsleepは「秒単位」です。 「引数に浮動小数点を与えられるように関数をオーバーライド」しない限り「１秒単位」です。 ＞この場合、設定可能な最大日数などがお分かりになる方はいらっしゃいますか？ 「与える引数がオーバーフローしない限り、どんな値でも指定可」です。 しかし、引数の有効範囲は「実装によって異なる」ので、ある値を超えると「無限に待つ」と言う状態になるでしょう（引数なしのsleepと同じ処理をされてしまうと思われる） ＞(2)　(1)以外でいい方法はありますか？ちなみにサーバーはUNIXでサーバー設定の知識は0の初心者です。 「sleepで指定の時間まで待つ」ってのは「常識あるプログラマなら絶対にやらない」です。 普通は「スケジュールをキューに放り込む」って言う処理と「定期的にキューを監視して実行すべきスケジュールがあるか」って言う処理を走らせて「現在時刻がスケジュールに書かれた時間を過ぎていたら、スケジュールを実行済みとして消去しつつ、そのスケジュール通りのコマンドを実行する」って言う書き方をする。 なので「Perlからはスケジュールをキューに放り込む」って言う処理だけをする。そして「処理は即座に終わらせる」のが絶対条件。 下手にPrelの中でsleepなんかしようものなら、WEBデーモンがあっという間にリソースを使い潰して、システムダウンする。 処理が即座に終了しない場合、ブラウザで「F5連打」されると、連打した分のプロセスが生成されるから「暫くの間、ずっと処理が終わらない」なんてのが居た日には、F5キーを40連打くらい押せば、簡単にサーバーをダウンさせる事が出来ちゃうぞ。 だから「行ったら帰ってこない」って処理は、絶対にやっちゃ駄目。
> showでfetchrow_arrayなどは使えないのでしょうか？ 使えるみたいです。
一つ目のconnectでソケットが汚れた状態になる? ソケットを2つ用意(以下の例だとsock1とsock2)して、それぞれconnectに渡すといい(かもしれない) connect( $sock1, $sock_addr1 ) || connect( $sock2, $sock_addr2 ) || die "$!";
この正規表現が意図するところって、 各<subheadword>の下に<p>タグがABの2つ以外入ってくるような場合はNGにしたいのにOKが出てしまうので困ってる、ということではなかったですか？ であれば、単純にNGとOKが逆になってるだけってことはないでしょうか・・？ 正規表現的には問題ないようが気がします。 -------------------- print STDERR "NG\n"; } else { print STDERR "OK\n"; } -------------------- ↓ -------------------- print STDERR "OK\n"; } else { print STDERR "NG\n"; } -------------------- 違ってたらスイマセン。
> cgiをperlで動かし、日本語操作をするにあたり、現在最も標準的なライブラリは何を使えばいいのでしょうか？ スクリプトはUTF-8で記述して、use utf8;する。 cgi-lib.plの代わりに、CGI.pmとEncode http://search.cpan.org/~lds/CGI.pm-3.43/CGI.pm Windowsでの確認は、UTF-8のままでもできます。 テキストエディタは、UTF-8に対応しているものを探してください。 5.8とのことですが、その下は何番でしょう? 5.8.xはUnicodeへの対応が安定してきたバージョンで、バージョンが若いと、問題が出るかもしれません。
ざっと検索してみますと、確かにちょいとわかりにくいサイトが多めですね・・。 CGI::Sessionモジュールの日本語マニュアルページがありましたので、こちらが一番読みやすいかと思いました。ただ、「より深く学ぶには」のとこのチュートリアルが日本語訳されていないようです・・残念。 英語版チュートリアルはこちら↓ http://search.cpan.org/~sherzodr/CGI-Session-3.9 … CGI::Sessionモジュールの日本語マニュアルページ↓ 参考URL：http://perldoc.jp/docs/modules/CGI-Session-3.11/ …
#1 のやり方は「シュワルツ変換」の一種だと思う. ただし, 単純に添え字をソートした方が速いかもしれない. 例えば my @lengths = map { length } @out; my @indices = sort { $lengths[$b] <=> $lengths[$a] } 0..$#out; とする手もある.
-------------- foreach(@csvdata){ use Encode; # この行と Encode::from_to( $_, 'utf8', 'shiftjis' ); # この行を挿入 $downloaddata .= $_; } -------------- 上記のように２行挿入してみてください。 PerlのバージョンによってはEncodeモジュールが入ってない場合はエラーになります。 お試しください。 参考URL：http://oshiete.goo.ne.jp/qa/7584615.html
検索したら、こんなのがありました http://bokut.in/mt/2012/04/perl-win32-unicode.html
>1回目の呼び出しでソケットをクローズせずに処理を終了し、2回目でソケットの生成、接続をせずに直接HTTP通信をしようとしてもうまくいきませんでした。 HTTP通信だと…サーバ側から切断されると思いますが……。 その為、再利用は無理かと。 HTTP1.1なら、KeepAliveにすることで一定時間は接続したままにできるとは思われますが、 1回目と2回目に間が開く場合は無理…でしょう。 # 元々、KeepAliveは取得したHTML内での画像などを取得する際に再利用しよう…って意図っぽいですし。
「perl ssl」で検索すると… http://netandfield.com/~shinoda/tech/0068_ssleay … とか見つかりますが、SSLeayモジュールは入っていますか？
脳のクールダウンに書いてみました。 No1さんの回答をそのまま実装しただけです。 ちゃんとした環境であればコメントをつけたほうがいいですね。 use strict; use List::Util qw/shuffle/; my @n = &shuffle(1 .. 5); splice(@n, 2+int(rand(2)), 0, 6+int(rand(3))); printf("%s\n", join(",", @n));
> if($where){ これは、$whereという変数が示す値が真か偽か、で判定されます。 このプログラムで$whereに代入されるのは「ただの文字列」です。 if( $where ) が if ($rec ne '' and (略) )になって、neによる比較やandに論理計算がされるわけではありません。 eval関数を使うと、文字列をPerlのプログラムとして解釈して eval($where) が $rec ne '' and (略) になって、neによる比較やandに論理計算がされます。 ただ、現状は $where="$rec ne '' ";の時点で$recが展開されます $rec='a b c d' だと eval($where) は a b c d ne '' となり、期待通りの動作をしないでしょう。 一つは、エスケープを使うなどして、 $whereを期待通りの式にするものです。 $where="\$rec ne '' "; にすれば、$recという文字列がそのまま残るので eval($where) → $rec ne '' となります。 ただ $where .= "and $rec=~/$_/ "; を $where .= "and \$rec=~/\$_/ "; としてしまうと、$_は既に変化しているので期待通りにはならないし、 $where .= "and \$rec=~/$_/ "; だと、 xxx.txt内の単語が「X/Y」だったりすると $rec=~/X/Y/ となり文法違反です もう一つは(こちらを勧めます) 「判定式の文字列」を作るのではなく、判定結果そのものを求めるものです。 ne , andなどは真か偽の値を返します。その値を変数に入れることができます。 $where = ($rec ne '') ; だと、$recが''なら偽、 $recが''でないなら真が$whereに代入されます。 $where .= "and $rec=~/$_/ "; を $where = $where and ($rec=~/$_/ ); にすれば、それまでの$whereと、 ($rec=~/$_/ ) とのandとなります。 if($where)とすれば、$whereの真偽によって分岐します。 あとは open (IN<, "xxx.txt"); は open (IN, "<xxx.txt"); か open (IN,'<', "xxx.txt"); の間違いだとして。 $rec=<IN>; これは xxx.txt の「最初の1行」を「改行付きで」読みこむことになります。 @rec=split(/,/, $rec); で、最後の要素には改行文字が付いたままです。 それでよろしいですか? xxx.txtに日本語等の多バイト文字を使用していませんか? 文字コードによっては、期待通りに動作しないかもしれません。
手許で確認したところ、install Text::CSV_XSで /use/lib/gcc/i686-pc-cygwin/4.5.3/cc1.exe: error while loading shared libraries: cygmpfr-4.dll: cannnot open shared object file: No such file or directory とエラーになりました。 このメッセージを読めが「共有ライブラリcygmpfr-4.dllが見つからない」のが原因だとわかります。 ・Cygwin用の共有ライブラリは cygなんたら-番号.dll というファイル名になっている ・コンパイル時に、上記共有ライブラリを使えるようにするには、libなんたら.dll.aをリンクする ・実行時に必要なファイルと、コンパイル時に必要なファイルが別のパッケージになっているものが多く、コンパイル用は～-devel というパッケージ名になっている という点を考えると、必要なのは mpfr だとわかり、http://cygwin.com/packages/ で確認すれば、libmpfr-develというコンパイル用パッケージがあるのがわかります。 libmpfr-devel(と、これが依存するパッケージ)をインストールしたら、install Text::CSV_XS ができました。 ただ、その時のメッセージからすると、 rebaseall やperlrebaseを実行する必要があるかもしれません。 今回、私の環境に、mpfrが入ってなかったので、上記のように原因がわかりました。 しかし、別件で既にmpfrがインストールされていたら、「こちらでは問題ないから、何が原因かわからない」となっていたでしょう。 質問するときは「ダメ」とかいった抽象的なものではなく、具体的にどう「ダメ」なのかを書くようにしましょう。 エラーメッセージが出ていたら、まずはそれを読んで意味を考えましょう。
エラーログの出し方による, かな.
BEGINブロックは一番最初に実行されます。 この場合、$err_log = "./log/err_log/err.txt"; より前です。 なので、open時の$err_logは空です。 $err_log=をBEGINブロックに入れるか、openをBEGINブロックから出すか、になります。
新しい (5.10.1 以降の) Perl なら if (1 ~~ @flg[0..9]) でよかったりする. 参考URL：http://perldoc.perl.org/perlop.html#Smartmatch-O …
root権限はないが、シェルを使えるということであれば、No1の方が示した手法がよいと思います。 > インストールせずにCPANサイトからモジュールをダウンロードしてきて使用する方法はありますか？ とのことですので、この手法を説明します。 その前に、Perlの@INCという特殊変数（配列）はご存知でしょうか？ @INCにはライブラリ（モジュール）が保管されているパスが入っています。 ですので、@INCにご自分が使いたいモジュールを置いたパスを追加してやれば、任意のモジュールが使えることになります。 その具体的な手法は過去のQ&Aで回答していますので、そちらをご覧ください。 http://oshiete.goo.ne.jp/qa/6029558.html なお、上記リンク先の BEGIN は、ご利用になるあるいはご自分で作成したPerlスクリプトの一番上でも一番下でもどこに挿入してもOKです。 ※BEGINブロックは、そのPerlスクリプトが読み込まれた際に一番最初に実行される部分です。
最終的にどの文字コードにしたいのでしょうか? そのCSVはどのように確認したのでしょうか? utf-8フラグを落した文字列を出力すれば、そのファイルのコードはUTF-8になります。 CSVを確認したのが Excelだとすると、そのままでは文字化けします。 他のUTF-8に対応したテキストエディアで確認すれば、文字化けしていないと思います (メモ帳ではだめです) ExcelではUTF-8のcsvを読もうとすると、文字化けすることがあります。 これは、Excelでは、Shift_JISだと勝手に解釈するからです。 これを避けるには ・BOM付きのUTF-8でCSVを記述する ・Shift_JISでCSVを記述する となります。 後者の場合、encodeを使ってShift_JISに変換します。このときに、UTF8フラグも落してくれます。 http://www.rwds.net/kuroita/program/Perl_unicode …
エラーメッセージを読めばわかるが #1 で正解.
CreateはDDLです。 DDLはロールバックできない。 Oracleもロールバックできない。 SQLServerはロールバックできる。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/cannot-ro …
モジュールの中の処理を追っていくとNet::HTTP::Methodsの中の http_configureというルーチンが、おかしなことをしているようです。 http_configureの前 $VAR1 = { 'Proto' => 'tcp', 'PeerAddr' => '::1', 'SendTE' => 1, 'PeerPort' => 80, 'LocalAddr' => undef, 'KeepAlive' => '' }; http_configureの後 $VAR1 = { 'Proto' => 'tcp', 'PeerAddr' => '::1', 'PeerPort' => 1, 'LocalAddr' => undef }; となって、ポート番号が1にかわっています。IPv6のアドレス記法に使われるコロン(:)と URLでポート番号を指定するときの記法(localhost:8080など)の コロン(:)を区別していないようです。 Linuxを使っているのでしたら、/etc/hostsに ::1 ip6-localhost ip6-loopback などが登録済みと思うので、http://ip6-localhostで試すといいかもしれません。
改行文字が何だか分かりませんが、¥nとします。 いろいろ問題がありますね^^; $value =~ s/>(&gt;[^<]*|>[^<]*)/&gt;&gt;<font color=\"red\">$1<\/font>/g; のあとに $value =~ s/>/&gt;/g; $value =~ s/</&lt;/g; は、せっかくのfontタグが無効になってしまいますよね。 $value =~ s/>/&gt;/g; $value =~ s/</&lt;/g; のあとに、 $value =~ s/&gt;&gt;(.*?)¥n/&gt;&gt;<font color=\"red\">$1<\/font>¥n/g; で、どうでしょうか。
> Wide character in print at .. お馴染みの警告です。 そのままのメッセージで検索すれば、原因と対処法がわかると思います。 http://www.rwds.net/kuroita/program/Perl_unicode …
ifの中の処理の最後でlastします。 もっともっと良いやり方いっぱいあるけど、 最初は今のソースにlastを付けるところから始めましょう。
>原因、解決策等おわかりであれば 「浮動小数点 誤差」で検索して下さい。 今回の場合、増分が0.001なので…… 1000倍の下駄を履かせて扱う。って方法があるかと。 「固定小数点 下駄」辺りで検索して下さい。
メール送って処理が終わりになってます。 WWWは「ブラウザがリクエストする」　→　「WEBサーバがレスポンスを返す」です。 そのプログラムだとメール送ってるだけで、レスポンスを返してないですよね。 プログラム内で動的にページを生成するか、どこかにリダイレクトすると良いでしょう。 > おそらく初歩的なミスだとは思います・・。 > ミスではなく、WWWの基本の基本がわかってないだけです。 あなたはperlができるようになりたいのではなく、WEBアプリを作りたいのでしょう。 WEBアプリはperlの知識だけでは作れません。 WWW、インターネット(ネットワーク)と併せてついでにlinuxの基礎を勉強しましょう。 まずは、VMwareやvirtualboxなどで、手元にlinux環境作ってみましょう。
「0 から始まる」は簡単でしょうに. ・0 から始まる ・0A0 なら 11桁, そうでなければ 10桁 なら /^0(?(?=[1-9]0)\d{10}|\d{9})$/ くらいでできない?
あなたには「コーヒー」と4文字に見えるだろうし、「ー」一文字を分割することなでできない、と思っているかもしれませんが (何も指定しなければ)Perlには 「コの1バイト目」「コの2バイト目」...「ーの1バイト目」「ーの2バイト目」... というように見えています。「ー」は複数の文字なので、途中で切ることもできます。 (文字コードによって、1文字が何バイトに相当するかが違います) split(/[、,]/, $moneyline); は、 「、」か「,」の2文字のどちらか ではなく 「、の1バイト目」か「、の2バイト目」か、..「,」のいずれか という意味になります。 なので、「、の1バイト目」と「ーの1バイト目」が同じなら、「ーの1バイト目」が区切り文字となり、次の項目が 「ーの2バイト目」から始まることになります。 ★[ヒ=. という結果から考えて、Shift_JISで書いてないでしょうか? そうだとして、文字コードを調べると ー は 0x81 0x5b 、 は 0x81 0x41 と、1バイト目が一致します。 0x5b だけだと、 [ という文字なので、実行結果とも一致します。 ちなみに 0x41 は A なので、 「CAFFEE」があったら「C」「FFEE」に分割されてしまいます。 対策は、分割されないようにすること。 utf8文字列を使うと、日本語でも1文字と扱えるようになるので 　use utf8 ; を追加、スクリプトはUTF-8で記述 　入出力時には、encode/decodeでutf8文字列とバイト列の変換を行う ということになります。 少しややこしいかもしれませんので、書籍はサイトを参考によく勉強してから使ってください http://www.rwds.net/kuroita/program/Perl_unicode …
# 質問タイトルや質問内容がイマイチ的を射ていないようにおもわれますが。。。 ^^;; ヨミサーチというCGIのソース一式を見てみましたところ、 質問に引用している箇所は、 kt.html というテンプレートファイルの一部でしょうか。 やりたいことは、表示の仕方を変えたいということのようですので、 おそらく変更しようとする場所が間違っていると思われます。 抜粋部分はログの読み出しを行う部分であり、 その内容を表示するためのHTML生成は 「PRlog」というプロシージャの中で行っているようです。 同じテンプレートファイル中を探すと 「sub PRlog{」という行が見つかるかと思います。 その下あたりにて、「print<<"<!--HTML-->";」という行と「<!--HTML-->」という行に挟まれた区間が 何カ所かあると思いますが、そこが表示のためのHTMLを出力する部分になりますので あとは、質問者さんが意図するHTMLを出力するよう改造していけば良いのではないかと思われます。
No1 のお礼にあるプログラムを見る限り JIS でファイルに保存し、異なる環境 (UTF8, Shift_JIS など) で表示しているに過ぎないのではないかと思います。確認方法として、ブラウザを利用することができます。xxx.txt などの名前で保存して、ブラウザで正常に表示されて文字エンコーディングが JIS (ISO-2022-JP) になっている、または文字エンコーディングを JIS (ISO-2022-JP) にしたら正常に表示された、のような現象であれば文字列として壊れてはいません。 文字列を変換するには、Encode モジュールを利用するのが簡単かと思います。なお、'utf8' のところは環境に合わせて変更してください ('shiftjis', 'cp932', 'euc-jp' など)。 use Encode; ... @$message = map { encode('utf8', decode('jis', $_)) } @$message;
まず、次の点を意識してください。 ○ Perlにとっては、それは「ただの文字列」であって、「時刻」などではない ○ 文字列を数値演算しようとすると、「先頭の数値と見做せる箇所」が表す数値に変換される $ip[1]='2013-02-12 17:03:45' $time='2013-02-12 20:27:26' の場合 $time=$time-$ip[1]; これは ・ - による数値演算 → 両辺は数値と見做す ・ '2013-02-12 20:27:26' → これは只の文字列。先頭の2013だけが数値と見做せるので、 2013 という数値に変換 ・ '2013-02-12 17:03:45' → これは只の文字列。先頭の2013だけが数値と見做せるので、 2013 という数値に変換 →$time= 2013 - 2013 = 0 となり、その「0」と出力されるのが「Perlとして正しい動作」です。 日付の計算をしたいのなら ○DateTimeモジュール等を利用する ○$ip[1]を分解して、timelocal等で epoch秒を計算、 localtimeと比較する ○$ip[1]を分解して、$sec,$min,$hour,$mday,$mon,$yearとそれぞれ比較、集計して差を求める 等の手段を使う必要があります。
整形式の XML文書 (平たく言えば「正しい XML文書」) であるための条件の 1つに「ルート要素が 1個だけある」というものがあります. ところがこの質問文にある形ではルート要素が 3個あります. つまりこれは整形式ではない (分かりやすく言えば「正しくない」) わけです. ルート要素をでっちあげて <root> <nanka> <hoge>4</hoge> </nanka> <data>1</data> <hoka>1</hoka> </root> とすれば整形式の XML文書になる. そうすれば, XPath で「nanka要素の直後の data要素」を指定するだけ.
ネームサーバはns.joetsu(略、ns1.joetsu、ns2、ns3が同様にあるようです。 nslookupコマンドを使用し、1の補足のサーバで正引き（名前からIP取得）を行うと、 解決できるサーバとできないサーバがありました。それが原因じゃないかなと思った次第です。
$s->is_empty ↓ $session->is_empty
require と use のタイミングの違いを知ってほしい. あと, -w オプションくらいは知ってていいと思う. しかし, 「CHIFOU」ってなんだろう....
%hash = ( file1 => ['a', 'b'], file2 => ['c', 'd', 'e'], file3 => ['f'],); ハッシュと配列の組み合わせで作るとすれば、上記のようなデータ構造になると思います。なお、遠く離れたファイル名をエラーにする場合は、現在処理中のファイル名を記憶しておく必要があります。 use strict; open FH, 'xxx.txt' or die $!; my ($ckey, %hash) = (''); while (<FH>) { if ($_ =~ /(\S+)\s+(\S+)/) { if ($ckey eq $2) { push @{$hash{$ckey}}, $1 unless grep { $1 eq $_ } @{$hash{$ckey}}; } elsif (exists $hash{$2}) { print "$2 は既に出てきたためエラーとして処理をストップしました\n"; } else { $ckey = $2; push @{$hash{$ckey}}, $1; } } } close FH; print "$_は　", join('と', @{$hash{$_}}), "\n" foreach sort keys %hash;
> file名が一度変わり、さらに変わるときに既に出てきたfile名はエラーとする　です。 同じfile名の行はひとかたまりに成っていなくてはダメということでしょうか？ であるなら、生成する部分で「直前のfile名と違い、かつ、既に出現済のfile名を取得した」場合にエラーにすれば良いでしょう。 例) ---------------------------------------------- my $previousFile = ''; while (<FILE>) { if ($_ =~ /(\S+)\s+(\S+)/) { if ($previousFile and $2 ne $previousFile and exists($data{$2})) { die "$2は既に出てきたためエラーとして処理をストップしました"; } $data{$2}{$1} = 1; $previousFile = $2; } } -------------------------------------------------- > これをループ文(whileやforeach)などで取り出す場合の記述例を御教授願います。 %result のキーでループさせてその内側で値の配列をループさせれば全要素を走査できます。file名順に並べなくても良いなら while と each の組合せでも大丈夫です。 例) ---------------------------------------------- foreach my $file (sort(keys(%result))) { print "* $file\n"; foreach my $str (@{$result{$file}}) { print " - $str\n"; } } -------------------------------------------------- 単に配列が値になっているハッシュというだけの話なので、perlの制御構文やハッシュの使い方を調べれば、走査のやり方は分かるでしょう。 http://rfs.jp/sb/perl/02/06.html http://rfs.jp/sb/perl/02/05.html なお、ベストアンサーはどうでも良いですが、マルチポストは止めましょう。いちおう、このサイトのルールですし、質問する方も回答する方も面倒なだけでしょう。
emacsを使ってませんか? ~はバックアップで、ファイルを読み込んだ時点での内容が入っています。 http://www.bookshelf.jp/texi/emacs-20.6-man-jp/e … #～#は自動保存されたものです。通常は、C-x C-s等で明示的に保存すると、削除されます。 http://www.bookshelf.jp/texi/emacs-20.6-man-jp/e … Perlの実行とは関係ありません。
これって、単にmy $mech = WWW::Mechanize::Firefox->new(); を毎回やってるのが遅いだけでは? my $mech = WWW::Mechanize::Firefox->new(); for ($i = 1;$i <= $page;$i++) { my $uri = URI -> new ("www.目的とするＵＲＬ$i.html"); $mech->get($uri) ; print file $s->scrape($mech->content) ; print file "\n" ; print file $r->scrape($mech->content) ; print file "\n" ; } にしたら十分な速度が得られたりしませんか? fiirefox通す必要が無いなら、LWPを使うとか。
並列処理、ってそういうもの(子プロセス同士の実行順番が一定とは限らない)だと思いますが。 順番が重要なら、それを制御する必要があります。 ・親プロセスで結果を受けとって、順番に並べてファイルに出力 ・子プロセス側で、「自分の番」が来るまで、ファイル出力を待つ ・子プロセス1の終了を待って子プロセス2を実行(並列の意味無し) 等
No.1です。 簡単な方法のアドバイスを Perlの、__DATA__を使うと良いでしょう。 perlスクリプトの終了はソースの最後に __END__ でしたね。その後に書かれたものは、本体から<DATA>で利用することができます。 Perlスリスクリプトの最後に、今使用しているフォームを書いてその中にキー ワードを含めておきます。 入力がないとき、入力があってエラーがあるときは、whileで出力 エラーがないときは、確認画面のフォームを出力するとかです。 #!/usr/local/bin/perl ・・・スクリプト・・・ if($user-Time < $now + 20000 && $user-Time > $now){ ・・・・エラー処理・・・ $errorCount ++; # $error{'name'}の値を代入 $error{'name'} = '<strong style="color:red;font-weight:bold">名前が記入 されていません</strong><br& gt;'; } ・・・【中略】・・・ if $errorCount >0{ while(<DATA>) { s/\[nameError\]/$error{'name'}/g; s/\[now-Time\]/$time/g; s/\[USER_NAME\]/$in{'user'}/g; s/\[TEXT\]/$in{'name'}/g; print ; print "\n"; } } ・・・スクリプト・・・・ __END__ <html lang="la"> ・・・【中略】・・・ <form action="[THIS_FORM]" method="post"> <input type="hidden" name="keyword" value="[now-Time]"> ・・・【中略】・・・ [nameError] <input type="text" name="user" value="[USSER_NAME]" size="20"> <input type="text" name="name" value="[TEXT]" size="20">
my $test = Text::Xslate->new( syntax => 'TTerse', tag_start => '[%', tag_end => '%]', path => [ '/home/template', '/home/inc', ], ); my $incFile = 'test.txt'; ... のようにテンプレートの存在するパスを指定したらどうでしょうか。
多くのプログラミング言語で、整数と実数は区別されています。 整数/整数は整数になり、小数点以下が無くなります。通常切り捨てです。 例: 1/4=0 実数で計算するなら、実数同士で計算します。 例: 1.0/4.0=0.25 数字だけを記述すると、整数になります。 実数を記述するには、小数点が必要です。 このとき、小数点の上又は下が0の場合、その0を省略できます 1.0→1. 0.3→.3 0→0. 又は.0 詳しくは、その言語の「リテラル」を調べてください。 で、Perlの場合は、この区別が無いので無意味、というのは既出の通りです。 ついでにいえば、これは誤差が大きくなる記述です。1/60をかけるより、60で割る方がいいです。
あくまで一般論ですが, CGI として動かすときとコマンドラインから実行するときとではディレクトリや実行ユーザ, あるいはパスなんかが違うことは多いと思うので, コマンドラインから実行してちゃんと動いたとしても「CGI として動作するかどうか」は別問題だったりします. perl 内部でエラーチェックができるとか, あるいはログにエラーが出ていれば容易に解決できそうなんだけど....
条件に行の末尾とあるので、正規表現に改行 (\n) を含めるのも一つのやり方です。 @arr = ('（^-^）','!!','??'); # @arr = qw('（^-^）','!!','??' ); は誤り ・・・ $cnt = () = $buff =~ /\Q$_\E\n/g; なお、@arr の (^-^) の丸括弧が全角で＜テキストデータ例＞では丸括弧が半角、@arr の !! と ?? が半角で≪テキストデータ例＞では全角になっているので、このままでは全くマッチしません。単なる誤記なのかもしれませんが、統一することが必要です。
通常、Shift_JISの2バイト文字は「2文字」として処理されます。 'ヤツ'は2文字ではなく、 "\x83\x84\x83\x63" の4文字です。 同様に、このロシア文字も2バイト文字なので、それぞれが2文字扱いです。 ここで、'с'は"\x84\x83"です。 この"\x84\x83"がヤの2バイト目+ツの1バイト目と一致します。 対策は、次のどちらかになります。 ・2バイト文字を考慮するものを利用する。場合によっては自作する。 ・Encodeモジュールを使って、 utf8文字列にdecodeする。 utf8文字列にすれば、多バイト文字でも「1文字」扱いになるので、index等が普通に使える。
> while($line=<IN>){ <> (ダイヤモンド演算子) では、改行コードも含めて入力されます。 よって、 $line = "でーた\n" としたような状態になっています。 $data にはformから入力したので、改行コードは付いていません。 これでは絶対に一致しません。 while($line=<IN>){ chomp $line ; if ( $line eq $data ) { $flag = 1; } } という感じに、chomp関数を使うなど、改行コードを削除するのが,Perlでの常套手段です。 あとは、細かいことになりますが > open(IN , "<:uft8" , "data.dat"); 戻り値を確認して、エラーのときは、適切な処理をするようにしましょう。 > open(OUT,">>data.dat"); INでは3引数で使ってるのですから、OUTの方も3引数使っては? エラー処理も入れましょう。 ただ、このままだと、同時にアクセスがあったときに、不具合が発生する可能性があります。 「perl 排他制御」で検索して、調べてください。 今回の場合だったら '+<' で読み書き用でopen→flock等の排他処理→読み込み→(closeはしない)→seekで末尾に→追記→close というのが常套手段でしょう。 > print "Content-Type: text/html; charset=UTF-8\n"; > print "$data $pr<br>\n"; HTTPのヘッダは、空行で区切りです。\nで改行するなら、\n\nと改行だけの行が必要です。 その後もHTMLとしては変ですが、それはとりあえず置いておきます
@tangob がアルファベットの昇順になっているのを利用しているので汎用性はありません。 @tangoc = map { "$_$tangob[0]" .. "$_$tangob[$#tangob]" } @tangoa;
このくらいなら, 変数を使えばいいような気がする. 例えば $pattern = quotemeta '/^\d+$|^\d+\.[05]{1}$/'; $replacement = '/^[0]+$|^[0]+\.[0]+$/'; s/$pattern/$replacement/og; とか.
＞複数の人が使う予定です。使う人によって保存フォルダは違います。 　なら、少なくともHTMLに記述するのは避けるべきですね。なぜならソースを見るだけで他人のフォルダーが丸見え。メール送信フォームにアドレスを記述するのと同じです。 　いずれにしろ、何らかの方法でユーザーを特定して、サーバー側で内々に指定すべきです。そのためには、認証システムを導入されているはずですが、それによって保存先を決めてしまえば良いです。次善の策として出力されるHTMLを変更するのも良いでしょう。
「うまくいかない」の具体的な内容 Perlのバージョン Jcodeのバージョン その状況が再現できる、具体的なプログラム を提示してください。 > 半角カタカナ→全角カタカナ h2z を使っているなら、EUC-JPへの変換は不要です。 > 半角小文字英字→半角大文字英字 この範囲は、Shift_JISでもEUC-JPでも(UTF-8でも)同じコードを使っています。 なので「Shift_JISをEUC-JPに変換しなくても大丈夫」なのではなく、「Shift_JISをEUC-JPのつもりで処理しても、たまたま影響が無い」のではないかと > 全角英数字→半角英数字 Jcodeのh2zでやろうとしているなら、対象外です http://search.cpan.org/~dankogai/Jcode-2.07/Jcod …(21322)(35282)_(8592)(8594)_(20840)(35282) Jcodeのtrでやろうとしているなら、EUC-JPである必要があります http://search.cpan.org/~dankogai/Jcode-2.07/Jcod …(27491)(35215)(34920)(29694)(12456)(12511)(12517)(12524)(12540)(12479)
htmlはあまり関係ないでしょう。 受けとった情報から、どんな方法でメールにして送信しているか、の問題です。 これを見ると、 mail として、送信者のメールアドレスを受けとっているようです。 プログラムの方で、これを送信アドレスとして設定していませんか? formから受けとり方も、Perlからメールを送信する方法もたくさんあるので、現在のソースが無ければ、具体的な方法は回答できません。
ググると、 「ebcdic->sjis変換で失われたシフト文字分の空白をEncode::CJKConstantsで復活」 http://d.hatena.ne.jp/end0tknr/20090222/1235302471 という記事がありました。 シフト文字分の空白を付け加えて文字数(バイト数??)をカウントするという方法でうまくいかないでしょうか。
おっしゃるとおり、プログラム中こういう箇所がそんなにない場合や、1つのファイルでプログラムを配布したい場合、ヒアドキュメントが簡単で良いと思います。 $var = "test"; print << "__EOM__"; <?xml aaa=111 bbb=222 ccc=333> <A>$var</A> <B>$var</B> <C>$var</C> | | | <Z>$var</Z> <END></END> __EOM__ あるいは、複数のファイルになっても良いなら、テンプレートエンジンを使うという方法もあるかもしれません。構成やデザインを別ファイルで用意して、表示の時に組み合わせると、表示部分の変更のためにわざわざPerlのコードを見たり理解したりする必要がなくなりますが、そういうことをしたい場合はまずテンプレートエンジンを使います。テンプレートエンジンとしては、HTML::Templateというモジュールがよく使われるようですが、インストールされていないと使えないようなので、インストールが面倒くさかったらこういうのもあるようですね。 http://anond.hatelabo.jp/20071030153111 HTML::TemplateというとHTML専用のように見えますが、ぱっと見、何にでも使えるように見えました。 テンプレートエンジンに興味を持ったらModel View Controller (MVC)についてもちょっと調べてみるとよいでしょう。テンプレートエンジンを使っていると、表示するテキストの部分 (例えばHTMLなど) を書くときはそちらに集中できて良いですよ。
パターンマッチを試行する変数に hoge.jp が by 以降2度以上出現するならば、 (1)by\s(.+?)\.hoge\.jp 一度ならば (2)by\s(.+)\.hoge\.jp となります。(1)がおすすめです。 #1の方のご指摘の通り、例えば、foohogeXjp.hoge.jpを排除するために、"."（ドット）の前に、"\"を付けて、陽にドットであると示す必要があると思います。
Received: で split していますが、Received: 単位で配列に入れたほうが処理は簡単になると思います。次のような正規表現 (厳密には少し怪しいかも？) を使えば、配列に格納できます。 my @received_datas = $file_data_str =~ /(^Received:.+?(?=^[\w\-]+:))/msg;
何のためにどうしたいのか不明ですが、 "114.114.96.20" というデータから、4バイトのバイナリデータを得たい～～この場合は"\x72\x72\x60\x14"～～ということなら、 $x = "114.114.96.20"; $y = pack("C*",split(/\./,$x)); さらにそれを数値～～この場合は0x72_72_60_14==0b01110010_01110010_01100000_00010100==1920098324～～に直したいなら、 $z = unpack("N",$y);
114.114.96.20 158.217.208.15 この2つの違いは? 具体的、どんなものは出力したくて、どんなものは出力したくないのですか? 前回の続きだとして ・最初に見つかったものだけを出力したい → 1つ出力したところで、lastとかでループから抜ける。 出力したかどうか、何番目かを記憶する変数を用意して、1つめのときだけ出力する 等 ・( IPアドレス [IPアドレス])になっている行だけを出力したい → ifで判定する条件を、これだけがマッチするようにする ・IPアドレスが特定の範囲だったら →抜き出したIPアドレスから値を取り出し、その範囲かどうかを判定する など、目的が違えば、やり方も変わります
ifでマッチした後でも$1は有効だったかと思います。 foreach $sorted (@received_datas){ if(($sorted =~ /by\s\w+.abc.jp/)and ($sorted =~ /\[(\d+?\.\d+?\.\d+?\.\d+?)\]/)){ $ipadd = $1; print "ip $ipadd\n"; last; #<-ループを抜ける } } \d.+? は最短一致（最も短く数字だけを抜き出す） \d.+は最長一致（最も長く数字だけを抜き出す）　の違いになります。\.があるので今回の場合はなくてもいいです。 \wはハイフンは入らないですが大丈夫ですね？
たぶん実例が見たいのでは。 とりあえずこんな感じですか？ --------------------------------------------- #!/usr/bin/perl my @aDATA = ("りんご","キャベツ","バナナ","みかん"); foreach(@aDATA){ 　my $sNAME = $_; 　foreach(1..10){ 　　print $_.' - '.$sNAME."\n"; 　} } --------------------------------------------- 注意：コピペするならインデント用の全角空白に気をつけてね
まず、その日付から、数字のところだけ取り出すことはできますか? 正規表現なりsubstrなりで数字のところを抜きだせば、Date::Local::timelocal でtimeが返す値(エポック秒)を計算できます。 http://perldoc.perl.org/Time/Local.html 他に時刻操作に関するモジュールがいろいろとあります。CPAN等で検索するとよいでしょう。 例えば http://perldoc.jp/docs/modules/Time-Piece-1.08/P … ただ、これらのモジュールが日本語混りの文字列をうまく操作できるかは不明です。
「シェルのモディファイア」で変換されてしまう、という話なら、Perlは直接関係ありません。 方法として ・シェルで変換しないようなコマンドラインを、system関数に渡す # ただ、 xxxx.com:22 をなんかに変換してしまうようなシェル、というものに思い当るものがありません。 ・引数をリストにしてsystemを実行することで、シェルを通さないで実行する system('program', "${host}:22") ; http://perldoc.jp/func/system http://perldoc.jp/func/exec これでだめなら、別の問題でしょう。 # $hostの後ろに空白とか改行コードとかが付いてるとか ちなみに、コマンドラインシェルから program xxxx.com:22 を実行したらちゃんと動作するのですか?
正規表現で迷ったら、まずは perldocの perlre を読んでみましょう。 http://perldoc.jp/docs/perl/5.14.1/perlre.pod 通常、正規表現を改行で分割して表記することはできません。 改行文字が「改行文字に一致するパターン」としての意味を持ちます。パターン中に\nと書くようなものです。 .演算子は文字列を連結する演算を行うものです。正規表現内は、明示しない限り「演算」はしません。 連結の演算するなら、 パターンでよく使う「.(任意の1文字)」が文字列連結に使われてしまいます 対処法としては ・/x を使う。詳細はマニュアルで ・予め文字列変数に入れて、それをパターンに使う $pattern = '^\s+\S+\s+(\S+)\s+(\S+)\s+\S+\s+(\S+)'; $pattern .= '\s+(\S+)\s+\S+\s+\S+\s+\S+\s+\S+' ; $pattern .= '\s+\S+\s+(\S+)\s+\S+\s+\S+' ; if($test =~ /${pattern}/){ ～ ・このパターンに限っては、「1個以上の空白で区切られた文字列」なので、 @test1=split(/\s+/,$test) ; とsplitして if(scalar @test1== 14) { # splitされた項目数を数える→過不足あるなら期待しているデータではない $test1[2], $test1[3],$test1[5] ;# $1,$2..に相当する位置 等必要な箇所を使う、という方法もあります。
提案させていただいた#1,#2の$value1引数は取り下げます。 決定的にまずいところがありました。 sizeof(struct tfield) = 276 sizeof(struct tfield *) = 4 struct tfield *p,*head[30];→head[30]でないとメモリに収まりません。 メモリの割当ですが、以下のようにするようです。Perlが機能を提供しています。 http://argrath.ub32.org/perldocjp/5.10.0/perlgut … Newx(pointer, number, type); Newxc(pointer, number, type, cast); Newxz(pointer, number, type);　　　　（これだけは獲得した領域を0で埋める） ケーススタディが多くてXS/Perlgutsの日本語資料はなかなかあたれませんね。
Shift_JIS コードを使っている場合、パターンマッチ以前の問題として、日本語文字列に uc を適用するとその時点で文字化けの可能性があります。 $name = "テニスコート"; $name = uc $name; print "$name\n"; # ウカスコーエ 元の文字列を大文字化せずに正規表現に /i フラグを付ける対応策があるのですが、この場合も正規表現に日本語文字列が含まれていると問題があります。日本語文字は２種類の文字にマッチしてしまうものが多数あります。"テニスコート" の例では "ー" 以外の文字が２種類の文字にマッチするので、32 (2 の 5 乗) 種類の文字列とマッチすることになります。 対応策としては、"テニスコート" は index で、"TENNIS" は正規表現の /i フラグで処理するのがいいと思います。 if (index($name, "テニスコート") >= 0 or $name =~ /TENNIS/i) { push(@error, 'テニス関係は入力できません'); }
数が違うなら自力で揃えればいいんじゃないの? それか, 違っていてもいいように GD::Graph をいじるか.
> push(@{$p->{member}}, $AddData); # データを追加 XML::Simple についてはわかりませんが、上記の push 文を実行後の $p のデータ構造は次のようになります。 $p = { member => [ { No => "$id", Product => {}, RegistDate => "$RegistDate" }, { Product => { ProductSeqNo => ["$seqno"], ProductName => ["ProductName"] } } ] }; 必要なのは member が指す配列に要素を追加することではなく、Product が指す値の中にデータを追加する事だと思います。そのためには Product => {} を Product => [] に変更して、その無名配列の中に ProductSeqNo と ProductName を格納したハッシュを追加してはどうでしょうか。 Product => [], ... push @{$p->{member}->[0]->{Product}}, $AddData->{Product};
割合ですからゴリラからウサギまでで１０割りになるようにしてください。 そこで次のようにしてはいかがでしょう。 A２セルから下方にゴリラからA6にウサギまでを入力します。 B２セルからB６セルにはその割合を入力します。１割なら１と、全体で１０になるようにします。 C１セルには全体で取り扱う動物の個数を入力します。２０匹の動物ということなら２０と入力します。 C２セルには次の式を入力して下方にドラッグコピーします。 =IF(A2="","",SUM(B$2:B2)*C$1/10) A１０セルには次の式を入力して下方にドラッグコピーします。 =IF(ROW(A1)>C$6,"",RAND()) 乱数が表示されます。 B１０セルには次の式を入力して下方にドラッグコピーします。 =IF(A10="","",IFERROR(INDEX(A$2:A$6,IF(COUNTIF(C$2:C$6,RANK(A10,A$10:INDIRECT("A"&MATCH(10^10,A:A))))=1,MATCH(RANK(A10,A$10:INDIRECT("A"&MATCH(10^10,A:A))),C$2:C$6,0),MATCH(RANK(A10,A$10:INDIRECT("A"&MATCH(10^10,A:A))),C$2:C$6,1)+1)),A$2)) これでB１０セルから下方にはC１セルに設定された動物の全体の個数がB２セルから下方に並べられた割合に基づいた動物の名前がランダムに表示されます。
PHPは、出力バッファが有効な場合全ての処理が終わってからWebサーバに結果を返すので、全ての処理が実行されます。 Perl はひとつ処理が終わる度に随時Webサーバを通じてブラウザに結果を返しているので、ブラウザ側がLocationヘッダーを受け取った時点でリダイレクト処理に移ってしまえば、セッションは切断されPerlの処理も中断されます。 従って ＞　どこかで、リダイレクト後は処理を行わないから必要ない というのもあながち間違っていませんが、Locationヘッダーを送ったら即処理が止まるかというと、厳密には止まっていません。 Locationヘッダーを書き出した後の処理で、何らかのデータファイル等を書き換えるような処理を行っていると中途半端なデータができてしまう恐れもあるので、プログラム側で終了を明示する方が問題を起こさないと思います。
http://perldoc.jp/docs/perl/5.14.1/perlpod.pod =forを認識した時点で、それ以降 =cut までは、プログラムではなく、ドキュメントです。 ただの文章なので、何が書いてあっても、プログラムとして動作しません、
どちらも使ったことないですし、あなたが何をどんな風にしたいかわかりませんが > PerlMagick NG > NetPBM + libjpeg-progs NG > pngtopnm -> Not Found > giftopnm -> Not Found > pnmscale -> Not Found と、NG(よくない)、Not Found(見つからない) とあるのですが、それが正常なのですか?
初期化するかてきとうに my.
個人的に使ってるレンタルサーバで試してみたんですが、わたくしが指定した部分だけで正常に動作しました。 メール送信エラーってことはsendmailとかの設定が間違ってるんじゃないでしょうか？ まずは、cgi内にある「check.cgi」で設定やサーバ状況など確認してみてください。
あるいは、joinを使って区切り文字を明示して連結した文字列にするか。 print FILE join('',@data); >eval{flock(IN,1)}; なんでevalするの? > @memory="$meday\t$title\t$subtitle\t$content\t$number\t$namberc\n"; リストにスカラー代入してますけど? > @retudata=split(/\t/,$inbun[$i]); > $inbun[$i] =~ s/^\s+//g; @retudataを作った後$inbun[$i]を変更しても@retudataに影響はありません。 > $retu =~ s/^\s+//g; $retuはどこ? 先の「@retudata=split(/\t/,$inbun[$i]);」が「@retu=split(/\t/,$inbun[$i]);」の間違いみたいだけど そうだとしても @retu と $retu とは別です。 また、このようなやりかたで@retuの全てを変更することはできません。
エラーがおきているのは本当にこのスクリプトですか？全体の一部を抜き出したりとかしてません？ > 使用しておりますサーバーはコアサーバーです。 自分のPCにperlを入れて、コマンドラインから動かすとどうなりますか？
すでに書かれていますが、forkは、プロセスを生成するので、マルチプロセス処理になります。 なので、Parallel::ForkManager で(たとえば)10並列にした場合と、perlコマンドをシェルから10個パラレルに起動した場合とでは、ほぼ同じ処理になります。
split して適当な部分を取り出す.
ドキュメントを見る限りできそうできそうですね。 http://perldoc.jp/docs/modules/Inline-0.43/C/C.pod CCFLAGSに-openmp　あるいは　/openmp（コンパイラ依存） を追加して、ソースに#pragma ompで追加していけばなんとかなるかも。 http://perldoc.jp/docs/modules/Inline-0.43/Inlin … の中央あたりに、コンパイラオプションを設定した例があります。 またLDDLFLAGSが使えるので、別途openMPでコンパイルしたサブルーチンをリンクしてinlineCから呼び出してもよいかもしれません。 Windowsの場合必要なのかわかりませんが、UNIX系OSの場合は OMP_NUM_THREADSを設定しておかないと並列実行はしてくれませんので、注意してください。 他のスクリプト言語ですが、CやFortranで書いたサブルーチンをswigでライブラリ化して使っています。 サブルーチンをコンパイルするときに並列化などのオプションを追加しておくと並列実行できています。 またGPUを使った計算も可能でそれも実際に使っております。 コンパイラが対応しているとインラインでも同じことができるはずです。
表示がくずれるので、空白2文字を全角空白にしていることに注意。 なお、 0 .. 10000000 の和は long で表現できないので、 double に加算しています。 #!/usr/bin/perl use strict; use warnings; use feature 'say'; use Inline C => 'DATA'; my @data = (0 .. 10000000); my $ret = add(\@data); say $ret; __DATA__ __C__ #include <stdio.h> double add(SV* array_ref) { 　　int i; 　　int len; 　　double sum; 　　AV　*av_ptr; 　　SV **num_ptr; 　　sum = 0; 　　av_ptr = (AV*)SvRV(array_ref); 　　len = av_len(av_ptr) + 1; 　　for (i = 0; i < len; i++) { 　　　　num_ptr = av_fetch(av_ptr, i, 0); 　　　　sum += SvIV(*num_ptr); 　　} 　　return sum; }
配列 @a に対し $#a で「@a の最後の添字」が得られるというのはよく知られているところですが, $#a を左辺値として使うと「@a の最後の添字を決める」ことができます. 例えば $#a = 6; とすると, @a の大きさは (添字にして 0～6 の) 7 となります. 配列が大きくなる場合は undef で埋め, 小さくなるときには余計なところがだまって消滅します. んで #4 の「美しくない」ってのは, map を単に「ならべる」ために使うのがうれしくないなぁ, と. @a = ([([(0) x ($z+1)]) x ($y+1)]) x ($x+1); とできればいいんだけど, 実は間違っている. 以下は #6 向け (笑) perl 5.14 の場合, 代入する値が定数なら 0 でも 100 でも同じコードを吐きます. まぁ, 0 であったところで何かが簡単になるわけじゃないので, わざわざ変える必要もないでしょう. そして, 機械語の場合でも「引き算」と「排他的論理和」と「単に 0 を代入」とで, 微妙に動作が違うことがあったりする. 例えば 8080 とか Z80 とかだとフラグの変化が全て違うので, 変なことをすると「0 を代入」じゃないと動かないことがある (この辺は 8086 でも同じだったはず). 一方 68000 では「0 を代入」で十分なので, 排他的論理和を使う必要はありません (使ってもいいけど何もかわらない).
$aと$bは定義済みの変数であるため、my宣言せずにuse strictしていてもエラーになりません。 perlのわかりづらいところでもあります。 http://perldoc.jp/docs/perl/5.14.1/perlvar.pod --- $a $b sort() を使うときの特殊パッケージ変数です; "sort" in perlfunc を 参照してください。 この特殊性により、$a と $b は、たとえ strict 'vars' プラグマを 使っているときでも (use vars や our() を使って) 宣言する必要が ありません。 これを sort() 比較ブロックや関数で使えるようにしたい場合は、 my $a や my $b としてレキシカル化しないでください。
> １についてなのですが、webサーバで解釈できる文字コードはどのようにして調べればいいでしょうか？ サーバーの文字コードはサーバーの管理者にご確認ください。 もし、Windowsでサーバーを実行しているようであれば、utf-8ではなく、ShiftJISである場合が多いです。 > また、文字コードを指定して書くというのは、プログラムを保存する際に文字コードを指定して保存すれば良いのでしょうか。 それでも良いですし、クライアントで記載する際はShiftJISなどのクライアントで認識できるコードで保存し、サーバーに転送の際に文字コード変換をかけるという方法もあります。
aaa, bbb, ccc のディレクトリをそれぞれ opendir で開いて、目的のディレクトリ (11_2, 9_20 等) を取得するようにすればうまくいくと思います。 #!/usr/bin/perl use strict; use warnings; my @directory=qw/aaa bbb ccc/; foreach my $dname (@directory) { opendir(DIR,"./$dname") or die $!; my @sdir = readdir(DIR); close(DIR); foreach my $sdir (@sdir) { if (-d "./$dname/$sdir" and $sdir =~ /^\d+_\d+$/) { opendir(DIR, "./$dname/$sdir") or die $!; my @file = readdir(DIR); close(DIR); print join("\n", @file), "\n"; } } }
配列の比較方法にもっと良い書き方がありそうですが、例えばこんな感じでしょうか。 use strict; use File::Copy 'move'; sub readfile { my ($filename, $lines_to_cut) = @_; open(my $fh, "<", $filename) or die "cannot open < $filename: $!"; my @lines = <$fh>; close($fh); return @lines[$lines_to_cut .. $#lines]; } sub is_same_array { my ($r0, $r1) = @_; my @a0 = @$r0; my @a1 = @$r1; if ($#a0 != $#a1) { return 0; } for (my $i = 0; $i < $#a0; $i++) { if ($a0[$i] ne $a1[$i]) { return 0; } } return 1; } my $LINES_TO_CUT = 9; my $FILE_A = 'a.csv'; my $FILE_B = 'b.csv'; my @a_csv = readfile('a.csv', $LINES_TO_CUT); my @b_csv = readfile('b.csv', $LINES_TO_CUT); if (is_same_array(\@a_csv, \@b_csv)) { print "$FILE_A and $FILE_B are same.\n"; } else { print "$FILE_A and $FILE_B are different.\n"; print "Moving $FILE_A to $FILE_B.\n"; move($FILE_A, $FILE_B); } readfileで各行が配列の要素となった配列を、$lines_to_cut行分だけ省いた形で返してもらえるので、is_same_arrayにて単純にその比較をして同じか違うかを判定しています。 CSVとして同じかどうかなんて判断していないので、CSVとしては同じものでも違う書き方をしていたら違うと判断します。例えば、"abc"とabcは同じと本来は解釈すべきですが、こいつは単純な配列の要素の比較しかしないので違うと判断します。
こちらのリポジトリから配布されているものをやってみてください。 http://www.bribes.org/perl/ DOSプロントから以下のコマンドを実行 32bitなら ppm install http://www.bribes.org/perl/ppm/Tk.ppd 64bit ppm install http://www.bribes.org/perl/ppm64/Tk.ppd
Win32APIは使ったこと無いので正確なのはわかりませんが。 32bitでOK,64bitでNGだと、Win32APIモジュールかPerl自体が32bit版とかいうことはないでしょうか? このようなモジュールだと、一部にネイティブコードが使われていると思います。それが対応できてないのではないか、と予想されます。
普通は、my @array = (4, 2 ,3);と書きます。 my $A = "4,2,3";、と書くなら 　my @array = split(',', $A); としてからsumできなくもないけれど、 それなら最初から配列変数使えってことになるでしょう。
「whileで繰り返すまでもなく必ず if($fact[2] =~ /$oct[1]/)　が成り立ってしまいます」って～ときの, 各変数の値はどうなっているんですか?
適当。表示がくずれるので空白2文字を全角空白にしていることに注意。 use strict; use warnings; use feature 'say'; use Time::Piece; my $prev_time = undef; my $prev_val　= undef; while ( my $current_line = <DATA> ) { 　　$current_line =~ s/\x0D?\x0A?$//;　　# chomp 　　if ( defined($prev_time) and defined($prev_val) ) { 　　　　if ( $current_line =~ m/^(\d\d:\d\d:\d\d)/ ) { 　　　　　　my $current_time = $1; 　　　　　　my $current_tp 　　　　　　　　= Time::Piece->strptime( $current_time, '%H:%M:%S' ); 　　　　　　my $prev_tp = Time::Piece->strptime( $prev_time, '%H:%M:%S' ); 　　　　　　my $compliment_tp = $prev_tp; 　　　　　　while ( ( $current_tp - $compliment_tp ) > 60 ) { 　　　　　　　　$compliment_tp += 60; 　　　　　　　　say $compliment_tp->strftime('%H:%M:%S') . $prev_val; 　　　　　　} 　　　　} 　　} 　　if ( $current_line =~ m/^(\d\d:\d\d:\d\d)(.*)/ ) { 　　　　$prev_time = $1; 　　　　$prev_val　= $2; 　　} 　　else { 　　　　die "format error: $current_line"; 　　} 　　say $current_line; } __DATA__ 00:01:00,227 00:02:00,234 00:04:00,254 00:05:00,123 00:08:00,250 ----- $ perl -w compliment.pl 00:01:00,227 00:02:00,234 00:03:00,234 00:04:00,254 00:05:00,123 00:06:00,123 00:07:00,123 00:08:00,250
データベース的というのは至言ですね。 消えてなくなるデータがあるという時点でデータベースでなく単なるデータ群でしかなくなるのですものね。 重要・不要はほぼ管理者側の主観に基づくもので、客観的に見ればデータベースとは要・不要にかかわらず(参照する人によって異なるわけなので)蓄積されてナンボのものでは無いかと思ってます。 世間一般的にはこういう消えてなくなる水物データ群も十把一絡げでＤＢと呼ばれることには結構な抵抗があります。（わたしは「水物ナンチャッテＤＢ」と呼んでいます） 動的に増えたり減ったりするデータ群を参照する際に「次へ」とか「前へ」とかいった順序参照ってロジック自体が破綻しているんじゃないでしょうか？ 今見ているデータだって次の瞬間にはなくなってる可能性だってあるし、質問は減ることが前提だけど参照前のレコードが増えて次のデータ参照したらまた同じデータが表示されたり・・・。 これをうまくまわすには、 １．増やすときは後ろに増やす、減らすときには物理的に削除をしないで削除フラグをつけて参照時には判定を行うとするのが扱いが楽かと思います。 ２．そうは言ってもということなら、前後の参照時には必ず全体のレコード数に変化がないかチェックして変化があれば強制的に最初の参照ページに戻しちゃう。 とすれば問題は最小限にとどめられるかも。 もちろんユーザインターフェースは最悪だし、毎回の処理のオーバーヘッドだってデータ量に比例してバカにならなくなる。 最後はあきらめてエラー処理をちゃんと書くか、それがいやなら放っとく。 お仕事でこんな要求って多いんですが困っちゃいますよね。 このてのものは小規模ならいいのですが、データが多くなるのが事前に見込まれているならＤＢエンジンを使ってエイッ！ヤッ！でだましだまし使うのがいいと思います。何をもってして多いと判断するのかはその人次第なんですけど・・・　orz 。 ちゃんと回答になってればいいけど、役に立たなかったらスイマセン。
「処理をわけて実装する」ときに, まさか open(ARG1,OUT1); なんて書いたりはしてないはずですけどね. で, #2 で言われていることに従って直したらどうなりました?
open(IN,"$userfile") or die("Location : abc.cgi\n\n "); ではどうでしょう？ 但し、これより前に、ヘッダ等を出力しているとダメです。
$line .= $hash{$top} if exists $hash{$top}; # 次の行と同じ $line = $line . $hash{$top} if exists $hash{$top}; . は文字列連結演算子で、元の文字列の末尾に文字列を追加する場合は .= の省略記法が使えます。上のコード自体は特に問題にならないと思うので、原因は別のところにあると思います。修正したコードの一部を記しますので、もう一度実行してみてください。 my %hash = map { /(.+?)(\t.+)/ } @data2; foreach my $line (@data1) { my $top = substr $line, 0, index($line, "\t"); $line .= $hash{$top} if exists $hash{$top}; print OUT "$line\n"; } これでも、やはり @data1 と同じ出力になるとしたら、次のようなコードで %hash を出力してみてください。元のファイルのフォーマットに問題があって、例えば先頭の単語の前後に半角スペースがあると、ハッシュのキーと $top が一致しなくなります。 print "|$_| => |$hash{$_}|\n" foreach keys %hash;
ん, それは一瞬迷った. メモリだけの問題なら, each 使って逃げられそう (同程度に時間はかかる). 「ハッシュを tie してど～のこ～の」までやればできる場面もありえなくはないんだけど, ちとやりすぎかなと思ったり.
原因がUTF-8フラグであれば、文字化けも直りそうですね。 URLデコード前にUTF-8フラグが意図せず混入しているということで、予想ですがPerlモジュールかライブラリを使っていてその戻り値をpackしているんじゃないかなぁと。 XML::LibXMLなんかは戻り値をPerlの内部文字列で返してくれるので、ハマったことがあります。 頑張ってください。
@data = <IN>; ――でデータを読み込んでるなら、空行が「\n」で表されてるので、 @data = grep {!$count{$_}++} @data; ――で、望み通り最初の空行だけが出力されると。
まずは、問題を整理しましょう。 設計をちゃんとしましょう。 どうやったら、やりたいことができるのか、日本語(日本語が不案内なら、あなたが普段使っている言葉)で「手順書」を作りましょう。 初心者ならなおのことです。 どうやったら問題解決できるのか、その方法もわからずにプログラム作っても、正常に動作するわけがありません。 > for ($i=0;$i <= $pressure;$i++) { この$pressure、何が入っていると考えているのですか? > $pressure_data = ( $i - $zeroten ) / $calibration; これは、 ( 「$iの数値(上記forで、0から$pressureまで変化)」 - $zeroten ) / $calibration です。決して ( 「$iの行目のデータ」 - $zeroten ) / $calibration ではありません。 > (22 - $zeroten) / $calibration > (33 - $zeroten) / $calibration > (44 - $zeroten) / $calibration とはなりません。
>$string1 = <FILE1>; これは配列で受け取ってないので、入力ファイルから1行だけ取得する処理です。 なので全行を読み込むのであれば、No.1さんの言うとおり、ループさせる必要があります。 ループの書き方ですがファイルハンドルをwhileでループさせるか、一度配列に落としてforeachでループさせるかがベタではないかと。配列に落とすんならこんな感じですかね…。 --- my @data = <FILE1>; chomp @data; foreach my $line (@data) { my @array = split(/\t/, $line); my %count; @array = grep {!$count{$_}++}@array; foreach my $element (@array) { print OUT "$element\t"; } print OUT "\n"; } --- 改行を削除しないと整形したファイルの先頭に\tがつくんで、とりあえずchompして、レコードの最後に改行付けてます。
一つ目のループの継続条件は、forの2つ目の式、つまり、 $_ =<stdin> ですから、 ** 一つ目のループはstdinが終了する(End of FIle)まで繰り返します ** つまり、一つ目のループが終った時点で、 stdinは終了してますから 二つ目のループでstdinから読もうとしても、何も読めずに終了します。 対処法は、あなたが期待するものによります。 ○400行目までをdata1,401行から800行までをdata2にしたいのなら、 一つのループで行数によって分岐すればいい。 for($line =0;$_ =<stdin>;$line++){ if($line < 400){ #1～400行まではここ @line = split/,/,; $data1 +=$line[1]; } elsif($line < 800){ #401～ 800行まではここ。400行までは上のifにいくので、ここには401行目以降しか来ない @line = split/,/,; $data2 +=$line[1]; } } そもそも、行番号が決まっているなら、終了条件に$_=<stdin>など使わなければいい。 #1～400行まで for($line =0;$line < 400;$line++){ $_=<stdin> ; #一応、終了チェックを入れたけど、入力行数が確実にあるなら入れなくてもいい if(not defined $_ ) {last ; } @line = split/,/,; $data1 +=$line[1]; }
ダブルクリックでスクリプト起動して、 STDINでフルパス（W:\B\hoge.txt）を打ち込んでる、ってところでしょうか？ それなら正規表現でパスを取得して、出力パスに付加するとか。
tr
ファイルオープンと各行を読み込んで出力するならこんな感じですかね。 open関数は3引数、ベアワード抜きにしたいもんですね。 ------------------------------------------------------------ #!/usr/bin/perl use strict; use warnings; open my $fh, "<", "FileFullPath.txt" or die $!; while (my $line = <$fh>) { chomp($line); #行末の改行コードを削除する print $line, "\n"; } close $fh or die $!; おまけ。 プログラムの入り口で内部表現(utf8フラグ)に変換して受け取り 出口で元に戻したいよねぇーというなら --------------------------------------------------------------------------------- #!/usr/bin/perl use strict; use warnings; use utf8; use Encode; #テキストはutf8で書かれているとする。 open my $fh, "<:encoding(utf8)", "FileFullPath.txt" or die $!; while (my $line = <$fh>) { chomp($line); #行末の改行コードを削除する print encode_utf8($line), "\n"; } close $fh or die $!;
#2 を勝手に改造する試み: まず @data は while の中でしか使っていないので my の位置を移動する. ついでに分割するときに my ($key, @data) = split /\t/, $line; とすればそのあとが push @{$hash{$key}}, @data; と短くなる.
ダイヤモンド演算子 <> は「改行」まで一緒に取り込みます。 $_ =<stdin> で、$_に改行まで含めた1行が取り込まれています。 対策方法は次のいずれかです。(両方やったら今度は改行がなくなります) ・chomp関数などで末尾の改行を削除する。 ・出力時によけいな改行を付けない。 今回程度ならどちらでもいいです。 過去の質問からして、このあと @data=split(/,/) ; 等として利用するのではないか、と予想されます。 この場合、改行を取り除いておかないと、@dataの最後の要素が改行付きのものになります。 例: 10,11 → splitしたら $data[0]='10'; $data[1]='11\n'; になります。 <>の使い方は、Perlの基礎です。 もうちょっと基礎を勉強した方がよくないですか?
こちらにありますよ http://collie.dip.jp/postmail.html
手元にperlがないので実際に動かしてないですがこんなかんじですかねぇ open (FH, $ARGV[0]); #$ARGV[0]はファイル名 while (<FH>) { @line = split /,/; $x += $line[0]; $y += $line[1]; } close (FH); print "x=$x y=$y";
CGIスクリプトにはWebサーバから標準入力(STDIN)でデータが渡されます。 そうじゃないのもありますけど。 CGI->new()とすると標準入力から読み取ろうとします。 CGI->new()を二つ実行すると、一つ目のCGI->new()が標準入力を掴んで、 二つ目のCGI->new()ではパラメータが取れません。 したがって、通常CGI->new()は一つだけ生成します。 一方のCGI->new()はhtml生成用などで、パラメータを取ったりアップロードファイルを読んだりする必要がないときは、 CGI->new(""); などとすることで、標準入力を掴まないCGIオブジェクトを生成できます。
この例だとCSVとか列とか全然関係無いですね。 常套手段として方針は2つ (1)先に3行だけのCSVにする (2)Perlで3行だけ (1)なら、Cygwinの(というか、UNIX系OSで標準的な) headコマンドとセットにして head -3 data1.csv | perl test1.pl # headコマンドがなんだかわからなければ、man head を実行してみる。 # | (パイプ)がなんだかわからなければ、「標準入出力」「リダイレクト」「パイプ」あたりで検索して概念を覚えておくといろいろ便利 (2)なら、#1を参考に。
メールを送信するときは。文字コードが非常に重要になります。 Content-Type: ヘッダをつけるようにしてください。 ヘッダをつけたとしても、一部のMUAは正しく認識してくれません。 ISO-2022-JPかUTF-8が無難と思われます。 ソースからヘッダを含めてjisに変換しているようですので、適切なContent-Type: ヘッダがあれば良さそうですね。 （ヘッダを含めてconvertはあまりにも乱暴です。） 複数バイト系の文字列は、(まずあり得ませんが)途中通過するMTAで欠落する場合があります。 7bitで表現できないコードは、BASE64でエンコードしてください。 メール送信の仕組みの基本を理解して、プログラミングされる様、お願いいたします。
はじめまして。 >申込者に自動返信（文章つき）をするにはどのように修正するのですか。 提示されたソースコードでは「申込者」に該当する部分が見当たらないので、何がしたいのかわかりません。 申し訳ありませんが、具体的に例示していただけませんか。
画像はヘッダーと呼ばれる部分に画像の種類が書かれていますが、文字はそうなっていません。 ですが、テキストエディタは、自動的に文字コードを判断しています。 文字数が少ないと間違いも多いですが。 仕組みは、コードの特徴で判断しているらしいのですが、詳しくは知りません。 なので、全体の言語の特徴で判断するのはどうですかね？ 文中に複数の言語がある場合は、さらに難しいですが、ある程度は可能かと。 国が決まっているのなら、文章解析で、例外が少ない言語がその言語かと。 日本語解析なんかは、mecabなんかが有名です。 一番簡単なのが、ブラウザなら、送信情報に国の情報をいれるとか。
こんなのとか。
> open (FILE, $file) or die "$!"; になっていて、ここで「No such file or directory」だから、みなさん「$fileで示すファイル data.csvがあるのか、場所は間違えていないか」と言っているのです。 > open (FILE, $cityfile) or die "$!"; が正解なら、確認するべきは「$cityfileで示すファイル name.txt があるのか、場所は間違えていないか」です。 > open (IN, $file) or die "$!"; で、data.csvはopenできているので、関係ありません。
ソースをそのままコピーしたものですか？ No.1さんとかぶりますが、 $date = $cgi->escapeHTML('$date'); '$date'は、シングルクォートは、いらないのではないでしょうか？ あと、 > Date::Simple::data これは、Date::Simple::dateではありませんか？最後は「a」ではなく「e」です。 > $date_check = ''error; シングルクォートが二つ前にあって、errorを括っていません。 以上、ざっと見た範囲で、気になった部分を書いてみました。
Perl には、クロージャと呼ばれる面白い仕組みがあります。a, b それぞれに情報を初期化でき、無名サブルーチンを通して更新することもできます。今回の質問に役立つかどうかは不明ですが、次のサンプルコードを参考にしてみてください。 use strict; my %hash; my $aa = init(name => 'a', x => 10, y => 100); my $bb = init(name => 'b', x => 10, y => 100); print "@{$hash{10}->{100}}\n"; # a b $aa->(x => 20, y => 50); print "@{$hash{10}->{100}}\n"; # b print "@{$hash{20}->{50}}\n"; # a $bb->(x => 30, y => 70); print join(', ', keys %hash), "\n"; # 20, 30 (10 は削除済み) sub init { my %attr = @_; push @{$hash{$attr{x}}->{$attr{y}}}, $attr{name}; sub { return \%attr unless @_; my %update = @_; my %pos; foreach my $key (keys %update) { if ($key eq 'x' or $key eq 'y') { $pos{$key} = $update{$key}; } else { $attr{$key} = $update{$key}; } } if (%pos) { @{$hash{$attr{x}}->{$attr{y}}} = grep { $_ ne $attr{name} } @{$hash{$attr{x}}->{$attr{y}}}; delete $hash{$attr{x}}->{$attr{y}} unless @{$hash{$attr{x}}->{$attr{y}}}; delete $hash{$attr{x}} unless keys %{$hash{$attr{x}}}; $attr{x} = $pos{x} if exists $pos{x}; $attr{y} = $pos{y} if exists $pos{y}; push @{$hash{$attr{x}}->{$attr{y}}}, $attr{name}; } } }
一例
> 作成したプログラムとcsvファイルをCygwinで入力して、入力したｃｓｖファイルのデータを処理（直線近似して傾きを求めたりなど）したい というのが、どんな流れで何をしたいのか、今一つはっきりしません。 もうすこし内容を整理してください。 ・「Cygwinで入力」ってどんな入力のことを言ってるのですか? ・ 「for(<stdin>){」ってありますが、このループはどこまでの繰り返しなんですか? ・「open (IN, $file) or die "$!"でｃｓｖファイルに記載されてある数値をCygwin上で実行することは出来ました」 の「Cygwin上で実行」ってなんですか?openはただファイルを読み書きできるようにするだけです。 ・数値が読み込めたのなら、「@x=(1,2,3);@y=(1,4,9);」と同様の状態になるように、リスト@x,@yに値を追加するだけではないでしょうか?
一応念のため: #1 にはタイポがある. 本意は BEGIN { undef $/; } s/Convert\(\K.*?text\s*=>\s*(".*?"),/$1/sg;
2つの方法があります。 1）レスがついたときに親記事を呼び出し、親記事を最後にpush()する。 573行目辺りからcloseするまでを書いてあげました。 #ログファイル読み込み open(IN, "$logfile"); @xx = <IN>; foreach ( @xx ){ ($no,$resno,$name2,$subject2,$hp2,$mail2,$comment2,$host2) = split(/,/,$_); if($no eq $res){$oya=$_; } else{push(@xx2,$_);} $no++; } push(@xx2,$oya); push(@xx2,"$no,$res,$namae,$subject,$hp,$mail,$comment,$host\n"); #ログファイル書き込み open(OUT, "> $logfile"); print OUT @xx2; close(IN); close(OUT); 2）レスがついたときに、親記事えお呼び出しての$noを最新の$noに変更するsubを作る。 ただし、表示する$noと順番を管理するIDとしての$noを別に増やさなければいけません。($no,$no2,$res,$name,$subject,$hp,$mail,$comment,$host) とてもシンプルなコードですが、蛇足かもしれませんが。完了メッセージは、一応終了してから表示させた方がいいです。 web上で公開するならいろいろセキュリティをつけなければいけません。
ppmに見つからないモジュールはいつもこうしてます(普通はLinuxサーバでやるんで方法２はごくたまに) 方法その１：モジュール検索に自分のオリジナルディレクトリを追加してみる Email-Simpleのモジュールはみたところバイナリは無さそうですので １．そのままＤＬした後（Email-Simple-2.102.tar.gz） ２．適当なところで解凍 ３．解凍したディレクトリlibを自分の動作させようとしているプログラムのあるところに移動して名前をlibsとかに変える ４．自分のプログラムの頭のほうに「use lib './libs';」とか、１行いれて実行してみる もし駄目なら以下の方法 方法その２： 開発環境を入れて正攻法でモジュールインストールしてみる 　ActivePerlがコマンドプロンプトから実行できるようにしておく(まあ普通にインストールしてれば・・・) 　さらにMinGWとnmake.exe(これは探すの大変かも→ＭＳのＦＴＰサイトにあった：「ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15 …」)を入れてgccがmakeでコマンドプロンプトからビルド可能な環境にしておく(この辺はググればいろいろと出てきます：要するにWindows上でgccの開発環境を整える) 　方法２－１． 　　「perl -MCPAN -e shell」でＣＰＡＮサイトからインストール　指示に従ってエラーなく最後まで通れば完了 　さらにもうひとつの方法２－２．（昔のperlモジュール導入方法） 　　ＣＰＡＮから落としたファイルを解凍後、「perl Make.PL」実行後、「make」「make install」でエラーなく最後まで通れば完了 いづれもＰＰＭとは関係ないのでＧＵＩでは情報が出ません 後者はＰＰＭのデータベースがいじれれば更新可能かも、ググって見てください まあざっとですが・・・
案a)sortして、値の切り替わりを見ながら数えてゆく(unix系でよくやるsort|uniq -cの手法)。 案b)連想配列を利用して、それぞれの個数を数える。 ――とか。 Perl FAQの、行の出現頻度を数えるサンプルが参考になりますよ。 http://search.cpan.org/~flora/perl-5.14.2/pod/pe … 参考URL：http://ideone.com/akMlh
http://mecab.googlecode.com/svn/trunk/mecab/doc/ …
表示がくずれるので、空白2文字を全角空白にしていることに注意。 #!/usr/bin/perl use strict; use warnings; use Fcntl qw(F_GETFL F_SETFL O_NONBLOCK); my $flags = fcntl( STDIN, F_GETFL, 0 ) or die "$!"; fcntl( STDIN, F_SETFL, $flags | O_NONBLOCK ) or die "$!"; while (1) { 　　my $line = <STDIN>; 　　if ( defined $line ) { 　　　　print "Input : ", $line; 　　} 　　else { 　　　　print "Not Input\n"; 　　} 　　sleep 1; } $ perl -w foo.pl Not Input Not Input Not Input Not Input aaaa　　<- 要リターン Input : aaaa Not Input Not Input 　C-c C-c
「連想配列化にしたい」の意味は分かりませんが, 連想配列は使わなくていいのですか? まぁそれ以前に文法的にアウトだけど.
Perl が持っている論理演算子は, もともと (C に由来する) &&, || などのみでした. リストを作る演算子 , はこれらより優先順位が低いので, 例えば print "3 == 3 && 3 > 4：【", 3 = 3 && 3 > 4, "】\n"; は print "3 == 3 && 3 > 4：【", (3 = 3 && 3 > 4), "】\n"; という解釈をします. ところが, 論理演算子を制御構造として使おうとするとこの動作は不都合です. 例えば, #2 のように「open できなかったら～」というのを表そうと open my $fh, "<" , $file || die croak("Cannot open $file"); としちゃうと open my $fh, "<" , ($file || die croak("Cannot open $file")); を意味するけど, これは明らかに期待した動作じゃない. で, このようなときのために「演算子 , よりさらに優先順位が低い論理演算子」として and や or などが導入されたんです.
このコードには、ファイルの読込み処理が書かれていません。 ファイルを読み込むには、通常は、下記の簡単なコードで十分です。 use CGI; print "Content-type: text/html; charset=UTF-8\n\n"; my $query = new CGI; my $filename = $query->param('filename'); my $mimetype = $query->uploadInfo($filename)->{'Content-Type'}; my @mytbl = (); while (<$filename>) { push(@mytbl, $_); } @mytblに読み込んだファイルの内容があります。
qw は実質的に q + split だから. 参考URL：http://perldoc.perl.org/perlop.html#Quote-and-Qu …
>#4さま ご指摘ありがとうございます。 思いっきり　PHP　ですね・・・ 考え方だけ参考にしていただけたらと。
> ありがちな文字化け、且、ボディーが表示されない不具合が発生しています 「ありがちな文字化け」ってどんなのですか? 「ボディーが表示されない」だけですか?送信自体されてないのですか? まず、すごく基本的なことなんですけど encode_base64 のマニュアルを良く読むことから始めてはいかがでしょうか? http://perldoc.jp/docs/modules/MIME-Base64-2.12/ … このプログラムでは、おそらく、あなたの期待通りに動作していません。 あと、いきなりメールにするのではなく my $MailPass = "/usr/bin/cat"; などして、標準出力で内容が正しいか確認するのもいいかと。
なんでそんなことをしたいんですか? ハッシュと無名リストへのリファレンス使って my %a =() ; $a{$mystr}=[1,2,3] ; とかやった方がいろいろ便利だと思うんですが。 ・変数名に使えない文字を$mystrに使える ・keys,each,exists等のハッシュを操作する関数が使える
消したいディレクトリの中にファイルが入っていませんか？ まずは、ファイルを全て消してから、ディレクトリを削除してください。 または、ファイルがあっても消す方法が参考URLにありましたので、参照してみてください。 参考URL：http://itpro.nikkeibp.co.jp/article/Reference/20 …
($secg,$ming,$hourg,$mdayg,$mong,$yearg,$wdayg,$ydayg,$isdstg) = gmtime(time + 30*24*60*60); 上記の30が30日ですから半年にしたいなら183にすればOKでしょう。 すると$date_gmtが今日から半年後の日付になると思います。 全ソースみてないので他のコードに不備があればわかりませんが・・・
手元で試してみた... んだけど, 2 の結果は 999 になってる. ちなみに Windows Vista Business, ActivePerl は 5.14.2 Build 1402 および 5.16.0 Build 1600 で確認. なお, 構文解釈上 2 と 3 は同じなので同じ結果になるはずです.
何がどう上手くいかないんですかね？ use POSIX 'strftime'; $SIG{ALRM} = \&timeout; eval { alarm 5; my $str_time = strftime( "%Y-%m-%d %H:%M:%S", localtime ); print "$str_time\n"; my $line = <STDIN>; alarm 0; }; sub timeout { print "time-out\n"; my $str_time = strftime( "%Y-%m-%d %H:%M:%S", localtime ); print "$str_time\n"; exit 0; } --- $ perl -w foo.pl 2012-08-16 03:53:35 time-out 2012-08-16 03:53:40
手っ取り早いのは、正規表現の置換を使うことです。 my $string = 'Yamamoto Taro'; $string =~ s/^(\S*)(\s+)(\S*)$/$3$2$1/; print $string, "\n"; # Taro Yamamoto ######################################## $_ = 'Yamamoto Taro'; s/^(\S*)(\s+)(\S*)$/$3$2$1/; print $_, "\n"; # Taro Yamamoto
「順序に意味がない」なら, SUUCHI_MAPPING のような構造を SUUCHI_FORMAT のような構造に変換するサブルーチンを書けばいい. 単純には sub cvt { my $foo = {}; while (my ($key, $val) = each %{$_[0]}) { push @{$foo->{$val}}, $key; } $foo; } のようなサブルーチン (名前は適切なものにすべし) を使って use constant SUUCHI_FORMAT => cvt(SUUCHI_MAPPING); とすればできる, みたい. もちろん, 順序が保存されるとは限りません (そもそもハッシュである以上順序は関係ない).
Shift_JIS使ってませんか? もしそうなら、いわゆる「だめ文字」と呼ばれる問題です。 ーの2バイト目は [ です。「ー」と一文字に見えますが、Perl内部では2文字として処理されます。 そのため、メタ文字 [ に対する ] が無いのでエラーになります。 「ソ」「表」等の2バイト目が\なのは有名ですが、正規表現では、他にも注意しないといけない文字があります。 https://sites.google.com/site/fudist/Home/grep/s … Perlで考えたら@もリストに使いますから、正規表現でなくても問題になりえます。 あと、これはPythonでの話しですが、Perlでも同じような現象が起こります。 http://oshiete.goo.ne.jp/qa/7630123.html 最近のPerlなら、 ・ use utf8;してutf-8でスクリプトを記述 ・入出力はencode/decodeでバイト列⇔utf8文字列の変換する。(またはPerlIOを使う) のがいいと思います。 > if (index($::FORM{'body'},$_) >= 0) { index関数は、文字列を単純に比較するだけです。 正規表現ではありません。なので [ が混っていても問題ありません。
実際には実行しておりませんので、あまり本気にとらえないで下さい。 sub name(prt)はコンパイラが見るものです。 ブロックは実行中に定義されるものです。 まず書式の順番がおかしいです。 プロトタイプを使うのなら、BEGINするか、useするのが普通です。(使わなくてもします)。 テストの場合は、最低でも冒頭で関数の宣言のみをおこなうべきです。 実行中に未定義の関数が使用された場合、Perlはその場で関数を探し始めます。 これは当然警告が出ます。 プロトタイプが正常に機能してると証明出来るのは、 foo 1, 2; とカッコを省いて書ける場合です。 これはコンパイラにすでに(組み込み関数と同じように)畳み込まれているためそうなりますし、 またこの記法が通れば処理の順序がおかしくないことの証明となります。 通常は組み込み関数で引数にカッコを使わないのと同様、 (記述がややこしくならない限り)プロトタイプもカッコを使いません。 -------------------- 二点目。 プロトタイプ@@は無意味です。 これは (@araay1, @araay2); このカッコが何を出力するのが、と言うのと同じ問題です。
ディレクトリに複数ファイルができていいなら CGI::Session::Driver::file - search.cpan.org http://search.cpan.org/~markstos/CGI-Session/lib … 一つのファイルにまとめたいなら、DB_Fileを使って CGI::Session::Driver::db_file - search.cpan.org http://search.cpan.org/~markstos/CGI-Session/lib …
括弧の意味は、No1の回答にあるように、「意味なし」ですね。 ( 2 * 3 ) + 4 の括弧の意味と同じく、「あっても無くても機能は同じ」。 s/あいうえお/($hensu = $&) =~ tr{ＡＢＣ}{abc}, ($hensu) =~ s{１２３}{123}, ($hensu)/eg; の、 ($hensu = $&) =~ tr{ＡＢＣ}{abc}, ($hensu) =~ s{１２３}{123}, ($hensu) の部分は、正規表現では無いです。普通の式。カンマは普通にカンマ演算子です。 No1の方の指摘にある通り、s/正規表現/式/e の意味を調べてください。
正規表現のバイブル（と勝手に思ってる） オライリの「詳説正規表現」に 引用符付きCSV形式について 相当なページ数を割いてるんだけど そういう資料みてる？
こんにちは。 開発しようとしている端末のOSは何でしょうか。 それによって少し異なりますが、手っ取り早いのはxamppを導入すると良いです。 一回のインストールでほとんどのWebの機能がインストールされます。 http://www.apachefriends.org/jp/index.html
10.7でやりましたが次の方法でできました。 まず、5Cで￥と表示されるフォントをさがす必要があります。 文字ビューア（メニューバーのひらがなや英字を選択するところ）でShift-JISコードを表示すればどのどのフォントが使えるかわかります。OSXに最初からインストールされているものでは見つからず、マイクロソフトのフォントのほとんどは￥と表示されますので、ターミナルの表示フォントをそれらにすれば可能です。 私の環境ではoptionキーを押さずに円記号を押すと＼になりますが、何かソフトを入れてたかな？？ MS Office（試用版を含む）をインストールすればマイクロソフトのフォントは自動的にインストールされます。 UTF-8の場合は￥と＼とは違うコードですので気をつけてください。
なぜ誰も質問に回答しないのでしょう? http://search.cpan.org/~rjbs/perl/pod/perlsyn.pod に "Many of Perl's syntactic elements are optional. Rather than requiring you to put parentheses around every function call and declare every variable, you can often leave such explicit elements off and Perl will figure out what you meant. This is known as Do What I Mean, abbreviated DWIM. It allows programmers to be lazy and to code in a style with which they are comfortable." とあるとおり、Perl は省略の多い言語なので読みづらいと思います。 ご質問のプログラムを省略せずに書くと次のようになります。 $seconds = shift(@ARGV) || 60; $| = 1; for $_ (1 .. $seconds) { sleep 1; print "$_\r"; } print "\n"; $s を $seconds に変えてみました。 @ARGV は argument vector の略称で、コマンド プロンプトから >perl timer.pl 180 のようにプログラムを実行した場合に、コマンドライン引数である「180」が格納される配列です。 shift は配列の先頭の要素を取り除いて返す関数ですが、配列を何も渡さないと @ARGV を shift します。 つまり shift() は shift(@ARGV) と同じです。かっこは省略可能なので単に shift と書いても同じです。 (ただしサブルーチンの中での shift は shift @_ を意味します。) したがって $s = shift || 60; というのはコマンドライン引数が渡されたらコマンドライン引数、渡されなかったら「60」を $s に代入するという意味になります。 この書き方はコマンドライン引数を受け取りつつ、デフォルト値も設定したいときによく使われます。 $| = 1; については説明は不要でしょう。 for (1 .. $s) { # ここに繰り返したい処理を書く } の 1 .. $s というのは「1 から $s までの整数のリスト」を意味します。 この .. というのは範囲演算子と呼ばれるもので、たとえば 1 .. 10 と書くと (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) というリストを簡単に作ることができます。 しかし、この場合は「1 から $s までのリストを作る」というよりかは、「要素数 $s のリスト」を作って、それを for 文でループすることにより、「$s 回ループさせる」ことを目的としています。 たとえば同じ処理を 10 回繰り返したいときは for (1 .. 10) { # ここに処理 } と書けばよいわけですが、それと同じで for (1 .. $s) { # ここに処理 } と書くことで同じ処理を $s 回繰り返すことができるわけです。 繰り返すごとに $_ に 1 から $s までの整数が順番に代入されていきます。 sleep 1; を $s 回繰り返せば $s 秒 sleep したことになりますから、もとのプログラムの意味が明らかになったかと思います。 また何かありましたら補足してください。
適当。表示がくずれるので、空白2文字を全角空白にしていることに注意。 #!/usr/bin/perl -T use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use Encode; use LWP::UserAgent; use HTTP::Response; use HTML::TreeBuilder; use constant URL => q{http://ejje.weblio.jp/content}; my $q　　= CGI->new(); my $word = $q->param("word"); my $mean = q{}; if ( defined $word ) { 　　my $ua = LWP::UserAgent->new; 　　$ua->agent('Mozilla/5.0'); 　　$ua->timeout(10); 　　my $url = URL . '/' . $word; 　　my $req = HTTP::Request->new( GET => $url ); 　　my $res = $ua->request($req); 　　if ( $res->is_success ) { 　　　　my $tree = HTML::TreeBuilder->new; 　　　　$tree->parse( decode( 'utf8', $res->content ) ); 　　　　my ($attr) = $tree->look_down( 'class', 'Kejje' ); 　　　　$mean = $attr->as_HTML; 　　} 　　else { 　　　　$mean = $res->error_as_HTML; 　　} } else { 　　$word = ''; } my $body = do { local $/; <DATA> }; $body =~ s/%%word%%/$word/; $body =~ s/%%mean%%/$mean/; binmode STDOUT, ':encoding(utf8)'; print $q->header( -charset => 'UTF-8' ), 　　$q->start_html( -title => "test", -lang => 'ja', ), 　　$body, 　　$q->end_html; __DATA__ <form method="get"> Word : <input type="text" name="word" /><br/> <input type = "submit" /> </form> <hr> Word : <br> %%word%% <br> Mean : <br> %%mean%%
関西電力の方でエラーが出ないというのは間違いですね。それだけ抜き出して 試してみてください。同じエラーになると思います。 で、何が問題かというと、LWP::Simpleモジュールを読み込む前に、そこで定義されている head関数を使っていることです。use文をファイル冒頭に移動すれば問題ないと思います。
XML::RSSモジュールを使って試してみましたが、パースがうまくいかないですね。 XML::RSSモジュールにこだわらなくていいのなら、XML::XPathモジュールを使えば、下記のようなスクリプトでパースができると思います。 #!/usr/bin/env perl use v5.16; use warnings; use utf8; use open IO => qw/:utf8 :std/; use autodie; use XML::XPath; my $string = << 'EOF'; <?xml version="1.0" encoding="utf-8" ?> <rss version="2.0"> <channel> <title>ＲＳＳによる順位公開</title> <item> <title>タイトル１</title> <rank>1</rank> <preranks> <rank>3</rank> </preranks> </item> <item> <title>タイトル２</title> <rank>2</rank> <preranks> <rank>10</rank> </preranks> </item> </channel> </rss> EOF my $xpath = XML::XPath->new(xml => $string); for my $item ($xpath->findnodes('//item')) { say 'タイトル：', $item->findvalue('title'); say '新ランク：', $item->findvalue('rank'); say '旧ランク：', $item->findvalue('preranks/rank'); } 実行結果は下記のとおりとなります。 タイトル：タイトル１ 新ランク：1 旧ランク：3 タイトル：タイトル２ 新ランク：2 旧ランク：10 XPathは一度覚えちゃえば、いろいろな場面で活用できます。 表示させたいところを細かく指定できるのが便利です。
PODを見ながらやってみました。 こんな感じではないでしょうか。 #!/usr/bin/env perl use v5.16; use warnings; use utf8; use open IO => qw/:utf8 :std/; use autodie; use XML::LibXML; my $string = << 'EOF'; <?xml version="1.0" encoding="UTF-8" standalone="no"?> <!DOCTYPE aaa PUBLIC "-//bbb//CCCC//EN" "ddd.dtd" []> <doc> ....... </doc> EOF my $dom = XML::LibXML->load_xml(string => $string); my $dtd = $dom->internalSubset; say ref $dom; say ref $dtd; say $dtd->toString; 「XML::LibXML::Element」には、DTDを取り出すメソッドがないくさいので、もともとの「XML::LibXML::Document」オブジェクトから「XML::LibXML::Dtd」オブジェクトを引っこ抜いてくるのが楽な気がします。 結果は下記のようになりました。 XML::LibXML::Document XML::LibXML::Dtd <!DOCTYPE aaa PUBLIC "-//bbb//CCCC//EN" "ddd.dtd"> 僕もあまり詳しいわけではありませんので、ご参考になるかどうかわかりませんが……。
えぇっと.... わざわざそんな面倒なことをする理由が思いつかない. 配列とリファレンスを使えば同じことができる. たとえば「lineほげほげ」は, 配列を使って ${'line'.$i} = $_; の代わりに $line[$i] = $_; とすればより簡単になるのでは. ところで, forループの中で my するとその変数は「forループの外」では使えないような気がするんだが....
学習したいなら目標をあれやこれや欲張らずに基本から一つ一つこなしましょう プラモ作るのが得意だからといって実用的なジャンボジェット機がそのまますぐ作れるわけではありません 「ローカル」とか「サイト制作」とか記述されてますのでWindows環境だと思いますが適切なアドバイスが必要なら利用環境も記述したほうが良いと思います XPなら構築は簡単ですがVista以降はちょっと面倒な場合があります お手軽に構築する手段としては、今まで入れた単体のapacheとか全部取っ払って「xampp」をひとつ入れれば必要な環境は整うでしょう ただし、perlにこだわりがあってActivePerlでないとやだって人は、xamppの古いバージョンのxampplite　＋　ActivePerl　＋　lnhdr-1.52-x86.msiがお勧め インストールや使い方はそれぞれの説明サイトをしっかり読んでください また、これで構築できても理解できてることにはならないことに注意してください 認識されている部分で、多分早とちりされていると思われるところを指摘します > ●Perlを使えるようにしたいと思い、perlを使っている友人に相談。 > 　すると、httpdをインストールするように言われインストールする。 まずはWebサーバ環境を用意しろという意味だと思います 今あるものとは別にという意味ではないと思います Webサーバにも確かに種類はありますがここで言ってるhttpdというのはApache2だと思います もちろんCERNのhttpdという可能性も有ります。 どちらにしても学習用なら特殊な事情がない限りWebサーバはひとつあれば充分です > ●しかし、ポート番号が塞がっているらしくhttpdを起動できない。 なにも設定チューニングをせずに使おうとするとデフォルトでポート80が指定されてるから後から動かしたほうがエラーになります ひとつの便所を複数人で使おうとするようなもんです ひとつのWebサーバで設定により複数のポート番号を使うことも条件付（勝手に使っちゃいけない番号がある）で可能です。 ところでポートってなにか知ってますか？　Well known portとか。もし知らなければまずはTCP/IPの基本からはじめましょう。 > ●ググった調べてみると、appacheの設定をイジることで、apacheでperlを動かせられるということを知る。 ただ、Webサーバの設定をいじっても動かせるとは限りません それと、apacheが動かすんじゃなくて、apacheがcgiを通してOSにwebクライアント権限でプログラムを動かすようにオーダーを出すだけで、条件が整ってれば動作するしそうじゃなければ拒否されます システムのプログラムですからperlだろうがC言語(コンパイル要)だろうが、標準入出力を持ったOSの下で動作するプログラム言語なら何でも良いのです > ●現在、解決方法に対する自分の認識は、[１]httpdで使うポート番号を他のものに変える 　 [２]apacheの設定をイジってperlを使えるようにする。 ポート番号は何の関係もありませんし解決策にもなりません apacheの設定も必要だがperlのシェバング指定(1行目)のパスと実際にインストールされているperlのパスをそろえることが大事 基本的なことですが「ファイル(通常：テキスト・通常：バイナリ・ディレクトリ・キャラクタ型デバイス・ブロック型デバイス)」「パス」「環境変数」「リンク(特にシンボリックリンク)」ってなにかがわかっていないと自力では障害対応は困難です 本格的に勉強するなら古いＰＣなんかにＬｉｎｕｘやＢＳＤでサーバ立ち上げて室内にＬＡＮを組みapacheなんかはtarボールから試行錯誤してインストールしたほうがよっぽど勉強になると思います
はたまた last
最初の人が答えておりますが、補足を少し。 &はどうしても必要なんですか？ Perlは、テレビの中を修理する手段や、 テレビをテレビじゃない物にしてみたり、 リモコンやボタンの定義や使い方を改造する手段がよくあります。 私はほとんどの状況で好ましいとは思いませんが、 その辺の再考が必要では。 回答については1の人のはマニュアルなのでそれでいいかと思います。 ちなみに、インストールしたPerl自体にも付属してますよー。
あの、私のや他の回答をよく読んで考えてください。 for(my $i=0;$i<@data;$i++){ $data[$i]=Encode::from_to($data[$i],'shiftjis','utf8'); #Shift-JISからUTF-8に変換 $data[$i]=~s/\s+//g; print OUT $_; } この部分は **** $_には何の影響も与えません **** よって、** 出力に関することだけに注目したら ** for(my $i=0;$i<@data;$i++){ print OUT $_; } これと等価です。どこで「Shift_JIS からUTF-8へ変換」してますか? $_は「while (<IN>){」の<IN>で1行読み込まれ、「chomp ($_);」で末尾の改行コードが削除されただけで、移行なにも変化していません。コードは入力のまま=Shift_JISです。それをそのまま出力すればShift_JISになるのが正解です。 しかも、項目数分だけ繰り返し出力されます。 (重複行になる、と#1に書いたのはchompのことを失念していた私のミスです) @dataを変更したのなら、出力するのは@dataでしょう。 join(",", @data)とすれば、項目をカンマ区切りの文字列にすることができます。 あと#2にあったfrom_toの使い方。マニュアルをよく読みましょう http://perldoc.perl.org/Encode.html#[$length-=]-from_to($octets,-FROM_ENC,-TO_ENC-[,-CHECK]) ・$octetsを直接変換する ・$octetsの長さを返す とあります。つまり $data[$i]=Encode::from_to($data[$i],'shiftjis','utf8') だと,$data[$i]には元の内容は破棄されて、文字列の長さになってしまいます。 各項目毎に処理したい、という意図はわかりました。 ですが、文字コードの変換が項目毎に違うなんてことはまず無いでしょう。 それならば、$_で1行をコード変換→splitして項目毎の処理、としてもいいのでは? ついでにPerlIOを使って open (IN, "<:encoding(shift_jis)", $input_file) or die "$!"; open (OUT, ">:utf8", $output_file) or die "$!"; とでもやれば、プログラム中はコードをあまり意識せずに文字列処理ができます。
Perl のバージョンによるけど my @data; open FH, '<', 'test.txt'; while (<FH>) { chomp; if (/^#start1/.../^#end/) { push @data, $1 if /^01:(.*)/; } print join(',', @data), "\n"; のような感じでできんか?
album というステキなコマンドがありますよ。 http://marginalhacks.com/Hacks/album/
こんにちは。 1,2ヶ月がじっくり腰を据えてなのか、ほかの仕事の合間なのかにもよりますが、やる気次第だと思います。 良い機会ですので一つ一つクリアしていけるように勉強しては如何でしょうか。 (perlでもPHPでも良いですが) メールを送る機能の要件を満たしているのであればperlでのDB登録を勉強するのが早いでしょう。 perlでmySQLへの接続等 http://tech.bayashi.net/pdmemo/perl_dbi_mysql.html (他のDBでも大差ないと思います)
sudo yum install -y perl-CPAN
書籍ではありませんが、このサイトを参考にすれば、大体のことはできるかと http://d.hatena.ne.jp/amachang/20081207/1228644967 参考URL：http://d.hatena.ne.jp/amachang/20081207/1228644967
とりあえず perldoc は見るべし. スコープをおいておけば 1. $test = 0; 1'. ($test) = 0; とか 2. @test = (0, 1, 2, 3, 4, 5); 2'. (@test) = (0, 1, 2, 3, 4, 5); とかの違いを考えればよく, 下は全く同じです. 上の 2つは, 1 では左辺がスカラーなので右辺もスカラーコンテキストで評価されるのに対し 1' は左辺が配列であるため右辺も配列コンテキストで評価します. とはいえ, 今の場合は右辺をスカラーコンテキストで評価しても配列コンテキストで評価しても大差ない結果になります (逆にいうと「コンテキストによって結果が変わる式」を使うなら違う結果になる, ということでもある). 一方, my は「単項演算子」とみることができるため, my ($foo, $bar); と my $foo, $bar; とでは違う意味になります.
glob関数は?
表示がくずれるので空白2文字を全角空白にしていることに注意。 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 　　　　　"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml"> 　<head> 　　<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" /> 　　<title>Choice</title> 　　<script type="text/javascript"> 　　　<!-- 　　　　function addListener(elem, ev, listener) { 　　　　　if (elem.addEventListener) { 　　　　　　elem.addEventListener(ev, listener, false); 　　　　　} 　　　　　else if (elem.attachEvent) { 　　　　　　elem.attachEvent('on' + ev, listener); 　　　　　} 　　　　　else { 　　　　　　throw new Error('Not support event listener'); 　　　　　} 　　　　} 　　　　function fillInput() { 　　　　　var code = document.getElementById('code'); 　　　　　var type = document.getElementById('type'); 　　　　　var name = document.getElementById('name'); 　　　　　var json = '[ \ 　　　　　　　　　　　　{"code":"1", "type":"花", "name":"ガーベラ"},\ 　　　　　　　　　　　　{"code":"2", "type":"酒", "name":"ビール"},\ 　　　　　　　　　　　　{"code":"3", "type":"菓子", "name":"ピーナッツ"}\ 　　　　　　　　　　　]'; 　　　　　var goods = eval(json); 　　　　　var i; 　　　　　for (i = 0; i < goods.length; i++) { 　　　　　　　if (goods[i].code == code[code.selectedIndex].value) { 　　　　　　　　　type.value = goods[i].type; 　　　　　　　　　name.value = goods[i].name; 　　　　　　　　　break; 　　　　　　　} 　　　　　} 　　　　　if (i >= goods.length) { 　　　　　　　alert('Unknown code : ' + code[code.selectedIndex].value); 　　　　　　　type.value = ''; 　　　　　　　name.value = ''; 　　　　　} 　　　　} 　　　　function init() { 　　　　　fillInput(); 　　　　　addListener(document.getElementById('code'), 'change', fillInput); 　　　　} 　　　　addListener(window, 'load', init); 　　　//--> 　　</script> 　</head> 　<body> 　　<form id="form1"> 　　　code : 　　　<select id="code"> 　　　　<option value="1"　selected>option1</option> 　　　　<option value="2">option2</option> 　　　　<option value="3">option3</option> 　　　</select><br> 　　　type : <input type="text" id="type" value=""/><br> 　　　name : <input type="text" id="name" value=""/><br> 　　</form> 　</body> </html>
プロトタイプじゃ無理なんじゃない 無名配列で受け渡せば，見た目はひとつの引数で 実際は無制限の引数を渡せるから困らない． ＃call by valueとcall by referenceに気をつける必要はあるけど ============= D. Conwayがプロトタイプはbest practiceではない 使うべきではないといっているが 私もそう思う． PerlはCではないんだし． ============== sub hoge{ my @temp = @{$_[0]} ...... } hoge [[a],[b],[c],....] 動かしてないけど，こういう感じで， 無名配列（可変長リスト）を渡せばいい．
No5です。 回答に補足します。 変数の中身を表示したいだけなら。printのFOUTがなければ表示されると思います
## 私も初心者でここでお世話になっていますので恩返しです。 ## 私のわかる範囲で書いてみました。参考になれば幸いです。 sub list_reverce{ ##サブルーチンの名称は list_reverce だよ、と言う意味 my $old=shift; ## 変数$oldをmy で宣言するとともに 引数からshift関数で代入している my&new=undef; ## なぞ？ my $new=undef;のタイプミス(typoという)か？ならば変数$newを宣言し未定義値undefを代入し明示的に未定義にしている while (my $cur=$old){ ## $curが$oldの間処理を繰り返す $old=$old‐>[NEXT]; ## 先ほどのshiftした引数はリファレンスなのですね、そのリファレンスをデリファレンスした配列のNEXT番目を$oldに代入 $cur‐>[NEXT]=$new; ## $newを$curをデリファレンスした配列のNEXT番目に$newを代入 } return $new ## $newが戻り値 } ## 全体を見ないと[NEXT]と言うのがよくわかりません。 ## 以上私のわかる範囲で書いてみました。
出力していって書き込みたいって意味でしたか・・・。よく理解して無かったです。すいません。 もしBをみつけた最大の時に書き込みたいなら、まずBの個数をいったん調べる必要があると思います。 私ならそうするって程度意見ですが。
各段階で等分するのなら、分割しながらソートしてもソートしてから分割しても 同じ事なので、本当は値の範囲ごとに区分したいんだと思いますが。 Unix系ならシェルスクリプトで手軽にできますよ。 #!/bin/sh line=$(( $(sed -n '$=' customer.txt) / (3 * 4 * 2 * 4 * 2) + 1 )) sort -s -t, -k38nr -k39nr -k40nr -k41nr -k42nr | split -a 3 -d -l ${line} mkdir -p ./dir mv x[0-9][0-9][0-9] ./dir
「(先頭に空白があるかもしれない) 数字」なら /^\s*\d+$/ でチェックできる. ただ, #4 とそれへの「お礼」を読み返すと, なんかおかしい. 「数字以外だったら、$i=$i＋0；をしないようにするように考えております。」のあとに「その数字チェックのやり方を知りたいと思っております。」がくるって, おかしいと思わない? どのように「数字チェックをした」としても, それと「数字以外だったら、$i=$i＋0；をしないようにする」は直接つながらないでしょ? そして, 少なくともこの質問文からは「数字以外だったら、$i=$i＋0；をしないようにする」という意図が見られない.
とりあえず「if文の書き方」を学び直すべし. あと, 9行目のエラーは「1行目にエラーが出ないこと」をふまえてじっくり見直すとわかるかもよ.
＞WWW::MechanizeはJavascriptは実行できないのでしょうか？ そうですね。 Javascriptでやっていることと同等のことを自分でプログラムする必要があります。
[ANo.1] の補足をみて、一つわかったこと。 ｜ちなみに、 ｜XSLファイル内で、 ｜<xsl：output method="xml"> ｜を指定してから、 ｜XSL変換を実施すると、 ： ： ： ｜XML形式ではなくて、 ｜text形式でファイルが出力されてしまう xslt が XML を出力するように書いてないからじゃない？
たしかに、constantで実行前にエラーになりましたね。ただし、以下の場合は通ります。 - MyUtil::KEY_FOO_NAME を KEY_FOO_NAME と書いちゃう - MyUtil::KEY_FOO_NAME を書き忘れちゃう use strict; use warnings; use feature 'say'; { 　　package MyUtil; 　　use constant KEY_FOO_ID => 'id'; 　　use constant KEY_FOO_NAME => 'name'; 　　sub foo { 　　　　my ($args) = @_; 　　　　say "id[" , $args->{MyUtil::KEY_FOO_ID} , "] "; 　　　　say "name[" , $args->{MyUtil::KEY_FOO_NAME} , "] "; 　　} } MyUtil::foo( { MyUtil::KEY_FOO_ID => '01', KEY_FOO_NAME => 'YAMADA' } ); MyUtil::foo( { MyUtil::KEY_FOO_ID => '01' } ); とりあえず、考え付くのは、 1. 新しく提案されたconstant hash key方式を使う 2. 諦めてruntime checkする 3. 1.と2.を組合せる 4. Perl6だと名前付きのパラメータを指定できる(?)よくわかんない http://perlcabal.org/syn/S06.html#Named_arguments --- runtime check ----- 自分で use strict; use warnings; use feature 'say'; use Error qw(:try); sub valid_args { 　　my $params_ref = shift; 　　my $args_ref　 = shift; 　　for my $param ( @{$params_ref} ) { 　　　　if ( !exists $args_ref->{$param} ) { 　　　　　　die "Not passed : $param for ", ( caller 1 )[3], '()'; 　　　　} 　　} } sub foo { 　　valid_args( [qw(name age)], {@_} ); } foo( name => 'A', age => 1 ); try { 　　foo( age => 1 ); } catch Error with { 　　my $e = shift; 　　say $e->text;　　# Not passed : name for main::foo() }; ----- モジュールで use strict; use warnings; use feature 'say'; use Error qw(:try); use Sub::Args; sub foo { 　　my $args = args( 　　　　{ 　　　　　　name => 1,　　# mandatory 　　　　　　age　=> 0　　 # optional 　　　　}, 　　　　@_ 　　); } foo( name => 'A' ); foo( name => 'A', age => 1 ); try { 　　foo(); } catch Error with { 　　my $e = shift; 　　say $e->text; }; ----- 引数の明示という観点からのPerlモジュール群 | hirobanex.net http://hirobanex.net/article/2011/06/1306973413
cookieをprintしたあとにスリープして待ってるでしょ。 ブラウザはHTTPリクエストを投げるとき、以下のような文字列を投げる。ようするに、「開いた」ときにcookieを投げる POST /xxxx.cgi HTTP/1.1 Cookie: hoge="fuga"; ... ダイナミックにセット/ゲットしたけりゃ、javascriptでcookie読み書きして、AjaxでCGIと通信するしかない。
perldoc perlre ... x Extend your pattern's legibility by permitting whitespace and comments. Details in "/x" ... xモディファイヤは、正規表現が見やすいように、空白とコメントを許可します。 表示がくずれので空白2文字を全角空白で書いていることに注意 use feature 'say'; my $text = ' Hello '; $text =~ s/ 　　　　　　　[ ]Hello[ ] # greeting 　　　　　/!!! Word !!!/x; say $text; # !!! Word !!!
なんか日本語が分からん. 「変数の値と別のハッシュのキーに一致するものがあれば」とか「ハッシュの値を別のスカラー変数に代入したい」とか, 言葉だけで書くのではなくもっと具体的に (変数を使って) 「こんなことをしたい」ということを書いてくれませんか?
http://oshiete.goo.ne.jp/qa/7491393.html では足りない何かがあるんでしょうか?
学校の課題か、それとも企業の研修とかでしょうか。学校だったら、ばれたら卒業できないんじゃないでしょうかね？時すでに遅しかもしれませんが。 Perlで良い問題を出す先生がいてうれしいです。学生はアレかもしれないですけど。
open my $fh, '<', 'inputfile.txt'; my @data = map { (split)[1] } <$fh>; close $fh;
このプログラムがしているのは、パスワードとして利用可能な文字を@wordsに登録し、その中からランダムに文字を選ぶということですよね？これだと、記号が選ばれる可能性はあっても、必ず記号が選ばれるかは保証されません。なぜなら、期待する条件を満たすかをチェックするコードは一切無いからです。 つまり、 for (my $var = 0; $var < $lng; $var++) { my $words_num = @words; $ps = $ps . "@words[rand($words_num)]"; } という、パスワードを生成しているコードを下記のようなコードに書き換える必要があるでしょう。 while (1) { for (my $var = 0; $var < $lng; $var++) { my $words_num = @words; $ps = $ps . "@words[rand($words_num)]"; } 条件を満たすかチェックし、満たした場合のみbreak, 満たさない場合は$psを''でクリア。 } $num などの条件を一切無視すると、チェックするコードはこんな感じですね。 if ($ps =~ /[0-9]/ && $ps =~ /[a-z]/ && $ps =~ /[A-Z]/ && $ps =~ /[#$%()-=略]/) { break; } else { $ps =''; }
＞質問内容をよく読んだうえで、内容を一度ご自身で整理してから回答されることをお 勧めします 全く同じ事を、あなたにお返しします。 内容から、ちょっとぐぐれば、でてくるようなことを、いちいち質問してくるなんて・・・・ （別にぐぐらなくても、技術者なら、こうできるなんて、簡単に、別方法をやっています。） だから、素人用に、在る程度の予測される事を、全部記載したのですよ。最後まで読めば、こうすればできますよ、と言うアドバイスを記載しています。 内容をよく読んでから、反抗しましょうね。自作自演、釣り、宣伝、社員等に多い質問ですね。よくひっかかってやっています。 ちなみにＮｏ２さんが提示したようなコードをラーパーて、いうのですがね。技術向けの質問・回答なので、おわかりになるかと。 もうひとつおまけに ＞、起動パラメータがうまく引き渡されない現象があるようです。 は、こんぴゅーたーの世界での表現としては、ありえません。
りだいれくと それにしても, 「@words[0]」なんて書き方誰が教えるんだろう....
http://code.activestate.com/ppm/XML-LibXSLT/ XML-LibXSLT is unavailable in PPM, because there aren't any builds for it in the package repositories. Click the linked icons to find out why. だそうです．つまり「オフィシャル？なものはない」ので ないものは入れられないということなのでは？
>21000×0.7は14700のはずかと思いますが、なぜか14699になってしまいます。 浮動小数点の誤差…でしょう。 http://d.hatena.ne.jp/perlcodesample/20080828/12 … とか見てみるとよいかと。 21000×7÷10で計算してみてはどうですかね？
＞と思い、ネット上を探しておりましたが、 ＞具体的な方法が見つけられなかった為、 XML::libXML 定番だと思うがこれじゃだめなの？ XML::libXML::Dtdってのもある． ＃Dtdを読ませることはないのでXML::libXML;Dtdは使ったことはない
「元のファイル一つに対し抜き出した情報は1行しかありません」ということがわかっているなら, わざわざ巨大な配列を作らなくていいのでは? もちろん「ファイルを一度に読み込む」ことが必要な処理だとも思えない. push なんてのもあるけど.
一行ずつ$q->p()してるので、 　<p><FONT color="blue">【a】</FONT></p> 　<p><INPUT TYPE="text" NAME="mmm" VALUE="" SIZE="25" MAXLENGTH="25"></p> になっているのでしょう。pタグは分かりますよね？ $q->p()は消して、こっちの方がラクかも。 # EOF（任意の文字）で囲まれた範囲を$bodyに代入する my $body = <<EOF; <body> <font... 　. 　. 　. EOF # ココ、先頭にスペース入れたりすると動かないので注意 print $body; CGIのモジュールはパラメータ受け取ったりするのは便利ですが、 ちょっとしたHTML書くだけなら #!/usr/bin/env perl my $msg = "<div>Hello, World!</div>"; print "Content-type: text/html\n\n"; print $msg; これでも。
ダブルクォートの中で「ダブルクォートをエスケープしなきゃならない」のが面倒というむきには qq(～) などの方法もあります.
ひとえに「文字化け」といってもいろんな状況が考えられるのですが, どう「化け」ているのでしょうか? 極端には「実はなにもおかしくない (化けてもいない) んだけど確認のしかたが間違っているために化けているように見える」かもしれないですし. 本当に化けているとしたらバイナリレベルでコードを知りたいところ.
use Win32::Sound; print "Content-Type: text/plain\n\n"; require Win32::Detached; $fname = 'C:/WINNT/Media/ding.wav'; die unless -e $fname; Win32::Sound::Play( $fname ); Win32::Sound::Stop(); 上記スクリプトだと、音が鳴ったり。 Windows 2000, IIS 5.0, ActivePerl 5.14.2で確認。
$ping->service_check( 1 ); ――を追記してみるとか。
表示がくずれるので、空白2文字を全角空白にしていることに注意。 use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use HTML::Template; my @week_caps = ( 　　{ jp => '日', class => 'sunday' }, 　　{ jp => '月', class => 'monday' }, 　　{ jp => '火', class => 'tuesday' }, 　　{ jp => '水', class => 'wednesday' }, 　　{ jp => '木', class => 'thursday' }, 　　{ jp => '金', class => 'friday' }, 　　{ jp => '土', class => 'saturday' } ); my @calendar = ( 　　[ '', '', 1,　2,　3,　4,　5 ], 　　[ 6,　7,　8,　9,　10, 11, 12 ], 　　[ 13, 14, 15, 16, 17, 18, 19 ], 　　[ 20, 21, 22, 23, 24, 25, 26 ], 　　[ 27, 28, 29, 30, 31, '', '' ] ); my @month_weeks = (); for my $week (@calendar) { 　　my @wdays = (); 　　for my $i ( 0 .. 6 ) { 　　　　push @wdays, { class => $week_caps[$i]->{class}, day => $week->[$i] }; 　　} 　　push @month_weeks, { WDAYS => \@wdays }; } my $template = HTML::Template->new( filehandle => *DATA ); $template->param( 　　WEEK_CAPS　 => \@week_caps, 　　MONTH_WEEKS => \@month_weeks ); my $q = CGI->new(); print $q->header( -charset => 'UTF-8' ), 　　$q->start_html( -title => "TEST", -lang => 'ja', ), 　　$template->output, 　　$q->end_html; __DATA__ <table> 　<tr> 　　<TMPL_LOOP NAME=WEEK_CAPS> 　　　 <th class="<TMPL_VAR NAME=class>"><TMPL_VAR NAME=jp></th> 　　</TMPL_LOOP> 　</tr> 　<TMPL_LOOP NAME=MONTH_WEEKS> 　　<tr> 　　　<TMPL_LOOP NAME=WDAYS> 　　　　<td class="<TMPL_VAR NAME=class>"><TMPL_VAR NAME=day></td> 　　　</TMPL_LOOP> 　　</tr> 　</TMPL_LOOP> </table>
なるほど、数値じゃなくて文字列が渡っているからアウトなんですね。 たぶん動く↓ # 全角スペース注意 my $spdate = { 　　year　=> $q->param('year')　+ 0, 　　month => $q->param('month') + 0, 　　day　 => $q->param('day')　 + 0 };
> (2)ではaaaが表示されつづけると思いますが、何も表示されません。 なぜ、そう思ったのでしょうか? おそらく、その解釈が間違っています。 このプログラムで"aaa"が表示されつづけるのは、test.txtが一定の条件を満すときだけです。 その条件は「全ての行が、0個以上の空白+数字列で始まっていて、その数値が0でない」ことです。 実際のtest.txtはどうなっているのでしょうか? (1)の方が「表示できた」と言っているので、1行だけのテキストですか?2行目以降があった場合、表示されない可能性が高いので。 > last LAST if($_ == 0); この行の意味、わかってますか? 特に $_ == 0 、わかってますか? 「表示されない」の理由ははっきりしません。test.txtがopenできたら、最低1回は出力されます。 ・test.txtのopenに失敗している ・"aaa"には改行が無いので、 aaaと表示 → プログラム終了 → プロンプト等が行頭から表示されてaaaを上書き(aaaが表示されてないように見える) となっている可能性はあります。 そもそも、「LAST:while(){」で囲ってある意味がわかりません。何を意図したのですか? closeの位置も変です。LAST:while()のループがlastで抜けなかった場合は、FILEをcloseしないままopenを繰り返すことになります。 test.txtの内容が変化しないのなら、何度もopenするのは無駄です。
「perl word count hash」で検索してこんなのとか。 http://www.google.co.jp/search?hl=ja&q=perl+word …
これは、perlの問題ではなく、出力結果がどう解釈されるか、の問題です。 perlから&を出力するなら、普通に print "&"で問題ありません。 「テキストファイル」と言いながら、実際にはXMLであり、XMLの文法として &で始まる実体参照だと解釈され、処理しようとしら定義されていないのでエラーになった、というのが今回の現象です。 「Perlから」とかは関係なしに、「XMLとして正しい出力」を考え、その通りになるように「Perlのプログラムを作る」のが正解でしょう。 タグの中身をs/&/&amp;/gとでもやって全部置き換えるとか、XML関係のモジュールを使うとか。
再帰呼び出しで比較、カウンタ変数で連続回数を判定すればいいような気がします。 #!/usr/bin/perl use strict; use warnings; use feature qw/say switch/; use utf8; use open IO => qw/:utf8 :std/; my @list = <DATA>; # 比較する数値が入ったリスト my @kaburi = (); # 繰り返しの数値が入るリスト my $count = 0; # カウンタ変数 sub yobidasi { my $num = shift @_; $count++; yobidasi(shift @list) if defined $list[0] && $num eq $list[0]; push @kaburi, $num if $count > 1; # ここの数値で連続回数を指定 $count = 0; } while (my $num = shift @list) { yobidasi($num); } say @kaburi; __DATA__ 0.00　2.0　11.5 0.01　6.3　17.2 0.01　2.1　14.2 0.01　1.2　14.3 0.01　2.1　14.3 0.01　3.7　14.3 0.01　3.7　14.3 0.01　4.1　14.3 0.06　4.1　14.3 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.01　4.1　14.9 0.03　4.1　14.8 で、出力はこんな感じなると思います。 0.01　3.7　14.3 0.01　4.1　14.9 比較の条件がよくわからなかったので、行単位での文字列比較で再帰呼び出しを行っています。ここはsplit使うなりして、お好きなように設定してみてください。
unless(/^[0-9A-Z][-\.\w]+[0-9A-Z]$/im){print "ERROR"}
どうして「後ろにパイプをつけると戻り値を取得できると思った」のか理解できません (そのようなことがどこかに書かれていましたか?) が「コマンドを実行したときの戻り値」なら system. あと, #1 で書きましたがそのようなメッセージがここで出ることはありません. 「本当は他のところで出ているが, たまたまここで目にしている」んじゃないかと思います.
おっと, そんな落とし穴があるんですか＞#5. 知らなかった.... さておき, $test にどんな文字列が入っていて, $in{n} の値がどうなっているのかが分からなければ「正しい」かどうかなど判断のしようがありません.
foreach は対応する} までが一セット。 入れ子構造にはできるけど、互い違いにしたり、(やろうとしてるような)複数のforeachに一つの本文、等ということはできません。これはほとんどのプログラミング言語での基本です。 @sorted_key=sort～等としてリストに入れておくとか 「同じ処理」をサブルーチンにするとか 判定用の関数を(関数のリファレンスとかを使って)切り替えられるようにするとか で、前の質問は無視ですか?
メモリが足りないんじゃないの http://www.perlmonks.org/?node_id=781809
ファイルの有無を調べる、ということなら、openは使い勝手はよくないです。 「openできない」と「存在しない」は一致しませんから。 ファイルの中を探すなら、-eに中身まで調べる機能はありません。 ところで、ここでは疑問が解決したらベストアンサーを選ぶのが基本ルールです。 ただ締切って解決したかどうかもわからない、その後も別な質問を繰り返すの、て、印象悪いですよ。
例文のスクリプトが文法的に変なので、方法だけ書きます。 (split /\x0d\x0a/, $res->as_string)[-1] とすれば、おっしゃるものは取得できます。 ですが、リクエストボディに改行コードを含んでいた場合は意図せぬ結果になることでしょう。 バイナリデータだから改行コードが存在しない、というのは特殊な場合であって、一般的ではないです。 リクエストボディだけを取り出したいということであれば、普通は $res->content の方を使います。
> ($sec, $min, $hour, $mday, $month, $year, $wday, $stime) = localtime(time()); こちらでは、月を「$month」変数で受け取っているのに、 > my $time = sprintf("%04d\/%02d\/%02d %02d\:%02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min, $sec); こちらでは、変数「$mon」を出力しているからです。$month+1にしましょう。 こういうエラーは「use strict;」で防ぐことができますので、use strict を使うことお薦めします。 http://dqn.sakusakutto.jp/2008/06/perlcgiuse-str …
bash入ってないかbashのバージョンが古いか。たぶんbashのバージョンが古いと思う。bashのバージョンが古いと配列が使えないから。 $ bash --version GNU bash, version 4.1.5(1)-release (i486-pc-linux-gnu) Copyright (C) 2009 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html> This is free software; you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. $ bash foo.sh < foo.txt 北海道 コーラ 10,000 北海道 お茶 20,000 北海道 ミルク 30,000 青森 コーラ 10,000 青森 お茶 20,000 青森 ミルク 30,000
もしや、checkをどこからも呼んでいない （どこにも check(); と書いていない）とかでしょうか...?
フォームデータパースとメールデータ成形のプログラムコードを示してくれないと、返答のしようがありません。
適当。表示がくずれるので空白2文字を全角空白にしていることに注意。 use strict; use warnings; use feature 'say'; use URI; use XML::TreePP; use constant BASE_URI => 　　q{http://news.google.com/news?hl=en&ned=us&ie=UTF- …}; my $tpp = XML::TreePP->new(); while ( my $line = <DATA> ) { 　　$line =~ s/\x0D?\x0A?$//; 　　my ( undef, undef, $keyword ) = split q{,}, $line; 　　$keyword =~ s/^[ \t]*//g; 　　$keyword =~ s/[ \t]*$//g; 　　my $uri = URI->new(BASE_URI); 　　$uri->query_form( $uri->query_form, q => $keyword ); 　　say '--- GET from ', $uri; 　　my $tree = $tpp->parsehttp( GET => $uri ); 　　for my $item ( @{ $tree->{rss}->{channel}->{item} } ) { 　　　　say 'title : ', $item->{title}; 　　} } __DATA__ 1, hoge, cat 2, hoge, dog 3, hoge, bird
表示がくずれるので、空白2文字を全角空白にしていることに注意。 use strict; use warnings; use constant CUT_INDEX => 3; my @data = (); while ( my $line = <DATA> ) { 　　$line =~ s/\x0D?\x0A?$//; 　　push @data, [ split ' ', $line ]; } print_data(@data); # 0 1 2 3 4 # 9 8 7 6 5 # 6 5 4 3 2 # 7 8 6 9 2 # 8 0 9 8 1 my $line_len = scalar @data; for ( my $i = 0; $i < $line_len; $i++ ) { 　　if ( $i < ( $line_len - 1 ) ) { 　　　　$data[$i]->[CUT_INDEX] = $data[ $i + 1 ]->[CUT_INDEX]; 　　} 　　else { 　　　　splice @{ $data[$i] }, CUT_INDEX; 　　} } print "\n"; print_data(@data); # 0 1 2 6 4 # 9 8 7 3 5 # 6 5 4 9 2 # 7 8 6 8 2 # 8 0 9 sub print_data { 　　my @data = (@_); 　　my $line_len = scalar @data; 　　for ( my $i = 0; $i < $line_len; $i++ ) { 　　　　my $row_len = scalar @{ $data[$i] }; 　　　　for ( my $j = 0; $j < $row_len; $j++ ) { 　　　　　　print $data[$i]->[$j], ' '; 　　　　} 　　　　print "\n"; 　　} } __DATA__ 0 1 2 3 4 9 8 7 6 5 6 5 4 3 2 7 8 6 9 2 8 0 9 8 1
悩むくらいなら $dm2 = $dm1 ; $dm2 =~ tr/[a-zA-Z]//d; と分けて書くのが無難。
trでの[^0-9]は「0～9以外」の意味では無いから。 [という文字、^という文字、0から9までの文字、]という文字が変換対象です こういう正規表現の文字セットはtrではそうは動かない、とperldocのperlopのtrのところにちゃんと書いてあります。
どうしてもIf-Modifed-Sinceが知りたい場合は、NPHスクリプトを使ってください。 通常CGIでは、Last-Modifed を出力しておけば、If-Modifed-Sinceなリクエストの場合、 CGIが出力したLast-Modifedを元に、Apache側で判定して、全データを返すか「304 Not Modified」を返すかを切り替えてくれます。 CGI側でIf-Modifed-Sinceヘッダの内容を知る必要はありません。 そもそも、通常のCGIでは、出力ステータスを変えられない(「304 Not Modified」を返すことができない)ので、If-Modifed-Since を取得出来ても意味もありません。 一方、NPHスクリプトの場合、ステータス出力などもすべてCGI側で処理する必要がありますが、 そのおかげで必要に応じて 304 を返すことも出来るようになります。 そして、NPHスクリプトであれば、リクエストヘッダの全データが引き渡されますので、If-Modified-Since も、$ENV{HTTP_IF_MODIFIED_SINCE} で参照できます。 http://www.kishiro.com/apache/nph_script.html
＞こちらは旧サーバーからファイルをtar.gzで圧縮してローカルに落とし、新サーバーへtar.gzをバイナリ転送後、新サーバー側で展開する形で移転しましたので転送モードの相違はないと思いますがどうでしょうか。 と言うことですが、症状からすると改行コードの問題（もしくは目に見えない文字の問題）です。 サーバーにログオン出来るなら、 $ cat -v xxxx.cgi | head で、 #!/usr/local/bin/perl と表示されるか(これが正常)、あるいは、 #!/usr/local/bin/perl^M と表示されるか、あるいは、^Mでない別の何かがくっついてないか、確認してください。 あと、可能ならapacheのエラーログを確認してください。
あ, そうだ, 多分 sprintf("%04d\/%02d\/%02d", substr($xxx1,0,4), substr($xxx2,4,2), substr($xxx3,6,2)); は意味として join '/', substr($xxx1,0,4), substr($xxx2,4,2), substr($xxx3,6,2) と同じことになるね.
XPath の書き方なんてほとんど忘却の彼方なんだけど, //item/description/text() だと 「『item要素の子供である description要素』の子供であるテキスト部分」 ってことにならないかなぁ. つまり, XPath で 「『item要素の子供である description要素』の子孫であるテキスト部分」 を指定すればいいような気がする... けど, //item/description//text() みたいにかけるんだっけ?
こんにちは。 No2の方法になります。 画面を表示後、非同期(裏側で)取得した画面サイズをサーバ側にpostします。 サーバ側で値を受け取ったあとその受け取った値に基づいて処理をして結果を返します。 その結果を画面で受け取って画面書き換え等の処理を実施します。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7373761/ 上記ソースを見てもらうと <div id="result"></div> というエリアのみですが画面サイズ等表示されていると思います。 これは画面表示後にdisplay.phpに送信し、display.phpでHTMLを出力します。 それを<div id="result"></div>に反映させています。 disoplay.phpでは送られてきた値を使って自由にHTMLを出力することが可能です。 ※例はPHPですがperlでも同じです。(サーバ側は何でも良い)
一応確認だけど, 質問内容は 8000個あるファイルを＊全部検索するのは同じだけど＊ 1つのディレクトリに入れる方がいいのか, それとも複数のディレクトリに入れる方がいいのか ということでいい? もしそうなら「各ディレクトリを複数のメディアに分散し, かつ複数のスレッドを同時実行すれば速くなるかもしれない」くらいかなぁ. ちょっと想像する限り, 「分割した各ディレクトリを 1つのメディアに入れる」とか「1スレッドで処理をする」とかでは何をどう頑張っても無意味に近いと思う. それよりは「ファイルを大量（4000～8000程度）に扱う処理」を「2万～3万回/１日　は実行」するのをなんとかした方がはるかに賢い気がする. まあ, そもそも質問のタイトルからして何とかならないものかねぇ.
UTF8フラグを外せばよいです。 Windows XP では 下のスクリプトをUTF8 で保存し、実行すると文字化けしないで「かきくけこ.txt」が作成されます。文字コードにCP932を指定していますが、SJISとほぼ同じです。 Vista でも同じではないでしょうか。 use strict; use warnings; use Encode; use utf8; my $file_name="あいうえお.txt"; open my $out, ">", Encode::encode('CP932', $file_name) or die; print $out Encode::encode('CP932', "こんにちは\n"); close $out; my $new_name = "かきくけこ.txt"; rename Encode::encode('CP932', $file_name), Encode::encode('CP932', $new_name); exit;
あなたのシステムが全く分からないので一般的な方法として。 １．送信メールにおいてエラーメールを受けるアドレスを明確にしておく（Envelope-Fromで）。 ２．受け取るアドレスのaliasesなどでエラーメールをスクリプトに渡す。 ３．スクリプトでエラーメールの内容を判断し、必要であればデータベースをアップデートする（アドレスを削除するとか、配信スキップフラグを立てるとか） この方法では、メルマガを送信しているスクリプトとは全く別の仕組みを作ることになります。 参考例）http://www.drk7.jp/MT/archives/000890.html
/'(.*?)'/;
「半角カタカナ」はどう処理するのがいいんだろう.
#2 です。 すいません、ちょっと勘違いをして、#2では読込むテキストではなく、Perlスクリプト自体の文字コードのつもりで書いてました。 > また、文字コードについて実は、まだあまり理解できていないのですが、PERLでスクリプトを書く場合、 > use utf8; > は付けずに書いております。これは、書いた方が良い物でしょうか？ 他の方も指摘されている通り、スクリプト自体をutf8で書く場合でなければ、付けてはいけません。詳細は#2に書いたサイトを見て下さい。 が、スクリプト自体をutf8で書き、 use utf8; を付けて、内部表現と入出力のエンコードを意識しつつ処理するが無難だと思います。
最近のPerl(5.8以降?)だったら、このような「3バイト」ではなく「1文字」として処理する方法があります。 こういう1ラインな書き方だとちょっとめんどうですが。 http://www.rwds.net/kuroita/program/Perl_unicode … > 2桁ずつとって10進に \343 など、3桁の数字 は8進数です
cpanからLWP最新版をインストールして試した感じだと、問題なく取得できてるような。
私もPerl初心者なので見当違いだったらすみません。 eval { 　　# 処理 }; if ($@) {　　　　　# eval 内でエラーがあったら 　　print $@;　　# 出力 } とかでエラーの内容が見れたりしないでしょうか。 そういうことじゃないのかな…
"way_$i" でいいんじゃね? あるいは keys 使うとか.
> ただ、「比較パターンとする文字列はユニークに」のユニークとは > どういう意味でしょうか Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; InfoPath.1 Mozilla/5.0 (Windows NT 6.0; rv:7.0.1) Gecko/20100101 Firefox/7.0.1 のようなユーザエージェントがあるとき、 if ($ENV{'HTTP_USER_AGENT'} =~ /MSIE/) { } elsif ($ENV{'HTTP_USER_AGENT'} =~ /Mozilla/) { } ... のようにするときは、比較順序が決まっているので Firefox が最初の条件に一致することはありません。 しかし、keys で取り出したハッシュのキーはどういう順序になるかわからないため、上の例の2番目の比較が先に行われ、どちらも同じブラウザと判定されてしまうかもしれません。 これを避けるために、どんな順序で比較されてもよいよう、区別したいユーザエージェントだけに一致するようなパターンを指定する必要があります。
たとえば sample.pm の 1行目は package sample となっていますが, 本当にこれでいいのですか? あなたのところでは, セミコロンがなくても普通に動作しているのですか? その次の lib ../common/ でも, 「lib ってなんだ」とか「../common/ ってどんな式なんだ」とか疑問になりますよね. 「やりたい事は書いているので、問題はないかと思ってはいる」とのことですが, この例を使って試そうとすると「やりたいこと」にたどり着く前に細かなエラーをつぶしていく必要があります. 確かに細かいところなんだけど, それは逆にいえば「気を付けて質問するつもりはない」という意思表示のようにも取れてしまいます. そして, その手間をかけても Perl 5.14.2 では main に constract を定義すると　Barewordとなり、 パッケージLog内で　constant定義するとsyntax OKとなります。 とはならない.
すでに指摘があるように、ソースを見せるだけでは現在動作中のものと同一であることが証明出ません。 興味があったので色々考えてみましたが、なんらかの管理者権限を与えない限り不可能です。これはコンピュータやインターネットの仕組み上仕方のない事です。
端的に言えば「our するなりパッケージで修飾するなりしてください」となります. 詳細はこんな感じ: このエラーはコンパイル時のエラーであって実行時のエラーではありません. つまり, 実行に先立つコンパイルのときに「use strict が有効なのに my も our も state もされていない (かつパッケージ名での修飾もされていない) 変数 $hoge が現れた」というエラーです. 「require されたファイルの中に our がある」のは確かですが, 次の 2つの理由によりそれは影響しません: ・use とは異なり, require によるファイルの取り込みは実行時に行われます. つまり require 'test_sub.pl'; とあってもコンパイラは test_sub.pl の中は見ません. したがって「test_sub.pl の中の our」はコンパイル時には影響を与えません. ・また, our の有効範囲はレキシカルスコープに制限されています. そして「1つのソースファイル」はレキシカルスコープとなりますから, require をコンパイル時に行っても「test_sub.pl の中の our」は test_sub.pl の中 (もちろん our 以降の) でしか有効ではありません. 余談ですが, use strict もレキシカルスコープで有効となります. つまり, 「test_sub.pl の中の use strict」はそれを require した test_main.pl では無効です (し, 逆に require する前に test_main.pl で use strict してもそれは test_sub.pl には影響しません)
while文の中にチェックするためのif文が入っている時点で、間違っていると思います。ざっとプログラムを読んだ感じだと、ファイルの最初に出てくる記事のID、パスワードと一致しない場合にエラーを出すようになっているように見えます。つまり、最初に出てくる記事のIDと違うものを入れた場合にたまたまエラーになります。 自分だったら削除の有無を示すフラグを追加して、全部の記事を調べたあとに削除フラグが立っていなかったらエラーにします。実行させていないので、微妙にバグがあるかもしれませんが、コードにすると下記のとおりです。 変更箇所の前後にコメントをつけています。 @new=(); open (IN,"$file") || error("システムエラー","ファイル「$file」を開くことができません。"); # 記事が削除されたことを示すフラグを追加 $article_removed = 0; # ここまで while($data = <IN>) { $flag=0; ($no,$res,$date,$cntr,$email,$tall,$weight,$age,$sub,$com,$live,$select,$photo,$pw) = split(/<>/,$data); if ($FORM{'pass'} eq "$ad_pass") { foreach $del (@DEL) { if ($no eq "$del") { $flag=1; last; } } } else { if ($FORM{'del'} eq "$no") { if (!($pw)) { &error("入力エラー","指定された記事には削除キーが設定されていません。"); } if (crypt($FORM{'pass'},$pw) ne "$pw") { &error("入力エラー","パスワードが間違っています。"); } $flag=1; } } # $flag==1の時は記事が削除されるので、$article_removedの値を1に変更 # 元のプログラムを次のように変更。 if ($flag == 0) { push(@new,$data); } else { $article_removed = 1; } #ここまで } # $article_removedが0のままだったら指定された記事番号が無いのでエラー if (!$article_removed) { &error("入力エラー","記事番号が存在しません。"); } # ここまで close (IN);
繰り返しますが、CSVはアプリケーション依存です。様々なフォーマットがあります。 1) ,,間に,があるとき\,でエスケープする 2) ,,間に日本語があるときは全体を""で囲む 3) ,,間に"があるときは\でエスケープする 　などがあると思います。 　それらがわからないと正規表現は書けません。 詳しくは、 CSV形式の行から値のリストを取り出す ( http://www.din.or.jp/~ohzaki/perl.htm#CSV2Values ) 以降の記事をお読みください。
こんにちは。 削除を実行するところにパスワードの判定のif文があると思いますが、そこの中にさらに管理者パスワードと一致するかを入れれてあげれば判断できると思います。 $pass = 入力されたパスワード if ( $pass eq $owner_pass || $pass eq $pw ) { $msg = "投稿者が削除"; if ( $pass eq $owner_pass ) { $msg = "管理者が削除"; } } ただ、偶然にも管理者パスワードと一致した場合は判断つきません。 管理者パスワードを誰も選ばないようなパスワードにしておけばある程度判別できるかもしれませんが完全ではありません。
No1の方とおおむね同じ意見です。 お若いと思うのでまだ十分可能性はあると思います。 少し補足します。 ・勉強会に参加 →ATNDと言うIT系の勉強会が数多く登録されているサイトがあるので、 　そこで探すといいと思います。 　また、例えば、「GREE 勉強会」というキーワードで検索すると、 　GREEが主催している勉強会が探せます。 ・OSSに関わる →Githubのアカウントを作りましょう。 　自分でOSSを作ったり、他人のプロダクトを修正したりしましょう。
一旦、フラグ付き utf8 にして、ファイルなどに出力するときエンコードを変換します。 表示がくずれるので、空白2文字を全角空白1文字にしていることに注意 #!/usr/bin/perl use strict; use warnings; use autodie; use HTTP::Request; use LWP; use XML::RSS; use constant OUTPUT_FILE => 'foo.log'; my @url_list = qw( 　　http://weather.livedoor.com/forecast/rss/earthqu … 　　http://weather.livedoor.com/forecast/rss/tsunami …); my $rss = XML::RSS->new( encoding => 'UTF-8' ); my $ua = LWP::UserAgent->new; $ua->agent('Mozilla'); $ua->timeout(10); open my $fh, '>', OUTPUT_FILE; binmode $fh, ":encoding(CP932)"; for my $url (@url_list) { 　　my $req = HTTP::Request->new( GET => $url ); 　　my $res = $ua->request($req); 　　if ( $res->is_success ) { 　　　　$rss->parse( $res->content ) or die "$url"; 　　　　my $title　　　= convert_flagged_utf8( $rss->{'channel'}->{'title'} ); 　　　　my $link　　　 = convert_flagged_utf8( $rss->{'channel'}->{'link'} ); 　　　　my $item0　　　= $rss->{'items'}->[0]; 　　　　my $item_title = convert_flagged_utf8( $item0->{'title'} ); 　　　　my $item_link　= convert_flagged_utf8( $item0->{'link'} ); 　　　　my $date　　　 = convert_flagged_utf8( $item0->{'pubDate'} ); 　　　　print {$fh} 　　　　　　"$date<>hoge<>$link<>$url<>$title<>$item_title<>$item_link<>\n"; 　　} 　　else { 　　　　print $res->error_as_HTML, "\n"; 　　} } close $fh; sub convert_flagged_utf8 { 　　my $str = shift; 　　my $flagged_utf8 　　　　= Encode::is_utf8($str) ? $str : Encode::decode_utf8($str); 　　return $flagged_utf8; }
C:\inetpub\wwwroot\ ディレクトリのNTFSアクセス許可を調べましょう。 http://awoni.net/tips/iis_acl/
~/.cpanm/build.logにログが残るから、何かわかるんじゃないですかね。
#2 への補足にある 「１つ目の子プロセス→親プロセス→２つ目の子プロセス→親プロセス→３つ目の子プロセス→・・・という順に処理されていました」 と http://oshiete.goo.ne.jp/qa/7276831.html に書いてある 「これだとa1→a3→・・・→ak→親プロセス→a2→a4→・・・→a(k-1)→親プロセスとなってしまいます」 とは明らかに矛盾してるね. これは, 「子プロセスの処理内容によって順序が変わる」ということ? あと「複数している質問は、今作成しているプログラムのことについてなので、それが完成次第全て締め切る予定です」としてるけど, 逆にいえば「完成しなければ放置しても当然」なの? 何らか反応しようとは毛頭思わない? ちなみに OS や Perl のバージョンを秘密にすることに意味があるんですか?
表示がくずれるので、空白2文字を全角空白にしていることに注意 use strict; use warnings; use autodie; use IPC::Open3; open3( my $std_in, my $std_out, my $std_err, 'tr', 'a-z', 'A-Z' ) 　　or die "open3"; print {$std_in} "hoge hoge\n"; close $std_in; while (my $line = <$std_out>) { 　　print 'Parent : ', $line; } close $std_out; --- $ perl -w pipe_response.pl Parent : HOGE HOGE
Perl自体は出来ます。useでHTTPとかソケットを入れれば(使用する宣言をすれば)、通信できる様になりますので。 ※ただし、お使いのPerlがHTTPやソケットをサポートしているかは確認して下さい。私はActivePerlを使いました。 私はテキストボックスからではありませんが、Windowsのコマンドプロンプトから、cgiの起動パラメータにURLを指定してCGIを起動し、ファイルをダウンロードさせるというものは作ったことがあります。 つまり、URLの情報を、起動パラメータで受け取るか、テキストボックスの入力(フォームからの入力)とするか、の違いなだけです。 (これをもって、Perl自体に通信機能はあるという証明とします) ですが、主さんの質問を読んで、あれ？と思った部分があります。このCGIをどこで動かすかです。 自分のPC等で動かすなら動く様に環境を設定すれば(セキュリティ設定等)動かすことが可能でしょう。 ですが、サーバを借りる等自分でPerlの動作環境を変更できない、もしくはHTTPやソケット等の通信に制約がある場合は、動かすのは難しいのでは無いでしょうか？ つまり、Perl以外の部分で出来ない可能性があるんじゃないかと。 こういうことなので、Perl自体は通信機能がありますから可能だけど、動作環境次第では不可能、と回答します。
サンプル(SHIFT_JIS) ＿はタブに戻す /cgi-gin 　|-- template.cgi 　|-- template/ 　　　　|-- 001.html 　　　　|-- 002.html hoge.com/cgi-gin/template.cgi/001.html #!/usr/local/bin/perl use strict; my $templatePATH = './template'; if (open TEMPLATE,$templatePATH.$ENV{'PATH_INFO'}){ ＿print "Content-Type: text/html; charset=Shift_JIS\n\n"; ＿while(<TEMPLATE>){ ＿＿print ; ＿} } else{ print "Content-Type: text/html; charset=Shift_JIS\n\n"; print "<html><head><title>error</title></head><body><h1>エラー</h1>\n<p>テンプレートを指定してください。</p>\n"; print "</body></html>\n"; } __END__
どことどこが並列になるか、ちょっとわかりずらいのです。(というより、順列になっていて並列処理できないようにも見えるのですが) また、その「あるプログラム」とやらの素性もわからないし、「上手くいきません」の内容もわからないので、アドバイスのしようもありません。 Perlで悩んだら、マニュアル(perldoc)を読みましょう。日本語訳もされています。下手な解説書よりよっぽど詳しく書いてあります。 例えば、スレッドについてのチュートリアルがあります。 http://perldoc.jp/docs/perl/5.10.0/perlthrtut.pod 雑に言えば、「Perlの関数を複数同時に実行する仕組み」です。 forkは、雑に言えば「自分自身の分身を作る」ものです。 これはシステムコールを使ったもの(あるいはシミュレートしたもの)なので、どんな風に扱うかは、Unix系OSの解説を探すのがよいでしょう。 その「あるプログラム」がPerlのスクリプトだったら、関数の形にして、スレッドを使って並列処理するのがよいと思います。 その「あるプログラム」が通常の実行ファイルだったら、forkして子プロセス側でexec関数で切り替えるのがよいと思います。 # 私なら、Perlの勉強でなければ、バックグラウンドで実行するようなシェルスクリプトでも書きますけど。
1.レンタルサーバ上でのパーミッション設定は正しいでしょうか？ 2.そのレンタルサーバではCGIの設置が可能で実行させることが許可されていますか？ 3.レンタルサーバでCGIの設置に関して指定のフォルダがあるなど設置制限はありませんか？ 4.CGIはレンタルサーバやURLに合わせてカスタマイズ（修正）していますか？
print”Ｈｅｌｌｏ!”； じゃなくて、 print "Hello!"; です。 必ず小文字で、かつprint の後に半角スペースを開けてください。 なお、改行がない場合は、すぐ次にコマンドプロンプトが表示されますが、改行があると一行間が開きます。 Windowsのコマンドプロンプトからと、Cygwinのbashからの画面をあげておきます。 #!/usr/local/bin/perl print "Hello World!";
表示がくずれるので空白2文字を全角空白で書いていることに注意 use strict; use warnings; use feature 'say'; my $text = 'hello :-)'; my $word = ':-)'; if ( $text =~ m/\Q$word\E/ ) { 　　say 'matched';　　# matched } my $quoted = quotemeta $word; say $quoted; # \:\-\) if ( $text =~ m/$quoted/ ) { 　　say 'matched';　　# matched }
「解の順番」というのは、以下のようなアウトプットを想定していると言うことでしょうか？ 入力された枚数のハノイの塔の解(順番付き) (1) Move 1 from A to C (2) Move 2 from A to B (3) Move 1 from C to B (4) Move 3 from A to C (5) Move 1 from B to A (6) Move 2 from B to C (7) Move 1 from A to C だとすれば、以下のような以下のようなスクリプトになります。 -------------------------------------------------------------------------------------------- sub hanoi { my ($no , $x , $y , $z) = @_; if($no==1){ $cnt++; print"($cnt) Move ", $no ," from " , "$x" , " to " , "$z" , "\n"; } else{ hanoi ($no - 1,$x,$z,$y); $cnt++; print"($cnt) Move ", $no ," from " , "$x" , " to " , "$z" , "\n"; hanoi ($no - 1,$y,$x,$z); } } print"入力された枚数のハノイの塔の解(順番付き)\n"; $cnt=0; $data=3; hanoi($data , "A" , "B" , "C"); --------------------------------------------------------------------------------------------
open(FH, "datafile"); while(<FH>){ $_=(split(/,/))[44]; if($max<$_){$max=$_}; }
正確には、そのサイトの管理者でないとわかりませんが。 HTTPには Last-Modifid という、「最終更新日」を表わすものがあります。 定期的にヘッダをリクエストして、Last-Modifiedがあったらその日付を覚えている日付と比較、とかやっているのではないでしょうか。
こんな断片見せられても、解析は無理です。 入力覧のフォームを出力しているのはどこか? →そこで引用(らしきもの)を出力するようになっているか? →→if等で条件分岐しているなら、その箇所を通っているのか? →→→その条件はどこで設定しているか? →→そこで使われている変数はなにか? →→→それを設定しているのはどこか? →→→→その元データはなにか? .... と、一つずつ問題を潰していくのが普通だと思います。 提示されたものはには、入力覧に当るところが見当たりません。 変数名から、この変数を追い掛けるのかな、というものはありますが、確実ではありません。 まあ、その改造した人による失敗なら、そこに依頼するのが普通だとは思います。 あなたの指示の仕方や、契約内容次第ですが。
素の状態では、「全角文字」は「2つの文字(Shift_JISの場合)」として処理されます。 よって tr/0-9/０-９/は tr/0-9/AB-CD/を書くようなものです。(ここでは、A:０の1バイト目、B:０の2バイト目..とします) 一文字として処理しなければならない「全角文字」がバラバラに処理されてしまうわけです。 use utf8 ; には、スクリプトがutf8で掛れていることを示すと同時に、utf8の「複数バイト文字」を「一文字」として処理するようになります。 これでtr/0-9/０-９/が 0と「全角の０」が1文字ずつ対応できるようになります。
サーバーアナライザー http://www.futomi.com/library/servana.html を使用して、ご利用のサーバーに必要なモジュールがインストールされているかを確認して下さい。 インストールされていなければ、RSSリーダーの説明ページに書かれてあるとおりに、それらをダウンロードして、設置してください。
「その処理をしたいところ」で #2 の getData を除いた部分を実行すれば, @data に処理したあとのデータが入る, はずです. そのデータは結局, もとと同じく 3<><>2012/01/12(Thu) 08:42<>ウサギ<>Yahoo<> のような形になっているだけですから, その「表示」は既にできているはずじゃないですかね.
そもそもやりたいことは「一定の文字数で切る」ことなんでしょう? だとしたら, 「文字」の世界で考えるべきであって, 「バイト列」なんてものを持ち出すのは混乱の本でしかありません. で今の Perl で一番簡単なのは #1 にあるように Encode::decode→s///→Encode::encode とやること. これなら「バイト列」なんて厄介なものを持ち出すことなく「文字」の世界だけで完結します. ちなみに今の Perl なら s/// は $str =~ s/^.{$view}\K.+/.../; の方が効率よさそう. 余談ですが, 当然 g は不要ですね＞#1.
ああそうだ, 「疑問点を整理する」のはいいんだけど, たぶん あなたの本当の目的はなんなのか を明らかにした方がいいと思う. 「全体の中でここがどのような位置づけにあるのか」がわかると読みやすいし, ひょっとすると「この部分はそもそも不要」ってことになるかもしれない. 逆に言うと, 「全体の中の位置づけ」が分からないと小手先の修正だけになるおそれもあります. あと #2 にも書いたんだけど, 「文章とプログラムの整合性」はきちんととってください. 今の場合だと「$bb をカウントし」って書いてあるから「$bb の出現回数をカウントする」というに読める (#1 の補足の「$bbに関しては全て拾ってくる」も同様) んだけど, プログラムは「$boundary を探す」という動作になってる. つまり文章とプログラムがかみ合っていないので, 「書き換える」より前に「あなたが何を意図しているのか」を探らなきゃならなくなっちゃってます. ということも含めて「何を目的としてどのように書いていて, どこでどのように困っているのか」を明確にした方がよいと思いますよ.
「連想配列にキーが存在するかどうか」を判定するなら, 一般には defined より exists の方が適切です＞#4. defined を使うと「値が存在しない」場合だけでなく, 「値が undef である」場合にも偽になります. これに対し exists なら前者の場合のみ偽になります. もちろん今の場合には「値が undef であるようなキー」を作らないからどっちでも同じことだし, もっとはっきり言えば「そもそも definedness の判定すら不要」だったりしますが.
「最初のaaaを選択する」と言い換えても何をしたいのかはやっぱりわからんのだけど (「選択する」だけでは意味がない), 形としては open my $fh, '<', ファイルA; my $count_item = 0; my $saved_item = undef; while (<$fh>) { if (/(aaa)/) { ++$count_item; last if $count_item >= 2; $saved_item = $1; } } if ($count_item >= 2) { $saved_item を使ってなんかする } とか, かなぁ. 固定文字列だから index の方がいいかもしれんけど, その辺は気分しだい.
ああそうだ, ついでなのでちょっと perldelta を確認してみました. まず, 「スカラーコンテキスト及び void コンテキストの split が @_ を変更しない」ようになったのは 5.14.0 です. このうち, 「void コンテキストの split」については 5.12.0 の段階で警告が出るようになっています (と, perldelta には書いてある). 質問者さんは Perl 5.14 を使っているということなので, 本件については「警告を出すようにしていれば警告が出ているはず」です. うん, #2 の「とりあえず 5.8 をおさえておけばいい」は (少なくともここについては) 外してるな (苦笑) 今から Perl を学ぶなら, 「常に use strict; use warnings; する」くらいに思った方がいいでしょう. そうしておけば, このプログラムに対して警告が出ます (ついでに strict のために大量のエラーが出ますが).
> きちんと勉強してはいませんが、なんとなく弄ることは出来るレベルです なら、もう少しだけきちんと勉強しましょう。 改造するにしても、基本くらいは覚えておかないと。 > if(!$astrology){print "入ってない\n";} > else{print "入ってる\n";} > …と入れると、「*Leo*」というデータが入っているわけなので、 >「入ってる」と、表示されます。 おそらく、ここに書くときに「入ってる」「入ってない」が逆になっています。 > if($astrology == "*Aries*"){print "おひつじ座 <br />$astrology \n";} > elsif($astrology == "*Leo*"){print "しし座　<br />$astrology\n";} > else{print "その他<br />$astrology\n";} 比較するときには、何を比較するかを頭に置いて、適切な演算子を使ってください。 == は「数値の比較」です。「文字列の比較」には eq を使います。 ==を使うと、文字列を数値と見做して比較します。 "*Leo*", "*Aries*" はいずれも数値を表わす文字列にはなっていないので、 数値 0 と見做します。 if($astrology == "*Aries*"){print "おひつじ座 <br />$astrology \n";} → if(0 == 0){print "おひつじ座 <br />$astrology \n";} 他の演算子でも、文字列と数値とで使い分けるものがあります。 比較: < <= >= > と lt le ge gt 足し算/連結: + と . 言語によっては、文字列も数値も同じ演算子を使うものもあります 混同しないようにしましょう。 # 言語によっては "abc" + "def" → "abcdef" になるものがあります。 # perl では "abc" + "def" → 0 + 0 → 0 です。
基本的には 1行ずつハッシュで覚えていけばいいだけだと思うんだけど... どこがわからんのでしょうか?
腐るほどある。 https://www.google.com/search?q=CGI+OR+PHP+%E3%8 …
手直しを希望とのことなので直しました。 ファイル名を毎回入力するのは面倒ですから、第一引数から取るようにしてあります。 Windows環境では入力ファイルをドラッグ＆ドロップすれば動作すると思います。 #!/usr/bin/perl use strict; # ファイル名を設定 my $ifname = shift or die "第一引数にはファイル名が必要です\n"; my $ofname = "out.txt"; #出力ファイル # ファイルを開く open(IN, $ifname) or die "入力ファイルを開けません"; open(OUT, ">", $ofname) or die "出力ファイルを開けません"; # データを処理 while(<IN>){ if(my($text, $message, $to_user) = m/"(.+?)":"(.+?)","(.+?)"/){ print(OUT "$text => $message, to $to_user\n"); } } # ファイルを閉じる close(OUT); close(IN);
> split(/\W+/,$_[0]); 単語を構成しない文字列を区切りにして分割します。 よって、「文字数」にはなりません。 > print"単語数は$num_wordsです。"; って書いてるし。 > &count_words($input_file); すでに回答がありますが、これは変数$input_fileの中身(おそらくファイル名)の単語数を数えるものです。 ファイルの単語数を数えるには、ファイルの中身を読み込む必要があります。
基本、読むだけでファイルが壊れることはありません。 が、このプログラムがファイルを破壊する可能性はあります。 ・ミス、または故意で $fileの先頭が'>'になった場合。上書きしないつもりが新規上書きになってしまいます。 よほど古いバージョンで無いのなら、 openにはモードとファイルを区別できる3引数版を利用しましょう ・このread中に別の処理でファイルが書き換えられてしまい、@linesの中身が変になった場合。 @linesを書き戻す処理があったら、そこで壊れる。
#No.2です。 さして考えもせず「コレ系は二次元ハッシュ」と答えてしまいましたが、 実際に考えるとただのハッシュでした。 失礼しました。 while( <DATA> ) { chomp; my ($subject, %results) = split /,/; my $result; foreach ( sort { $results{$b} <=> $results{$a} } keys %results ) { $result .= "$_,$results{$_},"; } $result = substr($result, 0, -1); print "$subject," . "$result\n"; } __DATA__ 数学,山田,60,佐藤,80,蓑田,55,岸本,90,小笠原,75 英語,山田,70,佐藤,50,蓑田,81,岸本,99,小笠原,80
すみません。No.2で、半角で記述したので、両方とも,で表現されてますね。 $in{"name"} =~ s/,/＆＃44;/g; 実際には「＆＃44;」は、全て半角で記述して下さい。
表示がくずれるので空白2文字を全角空白1文字で書いていることに注意 use strict; use warnings; use feature 'say'; my $a1 = 1; my $a2 = 2; my $a3 = 3; my $a4 = 1; my $a5 = 2; my $a6 = 3; my $top = 'Not Found'; for my $num ( reverse 1 .. 6 ) { 　　my $var = eval '$a' . $num; 　　if ( $var == 1 ) { 　　　　$top = $num; 　　　　last; 　　} } say $top; # 4
> my $url = $in{'q'}; # ここでエラーが出ます。 クエリストリングは自動的に $in に格納されるわけではないから。 キーワード「query_string perl get」でGoogle検索してみてはいかがでしょう。
フォーマットを把握し, 必要な部分を取り出すにはどうすればよいかを考えてそれを Perl の文法で書いてやればいいです.
実験すればすぐにわかるのですが, File::Basename を使うと d:/hoge/hage/aaaaa というパスに対し ・ディレクトリ: d:/hoge/hage/ ・ファイル名: aaaaa ・サフィックス: (なし) という結果が得られます. #2 の補足を読むとこれではだめなような気もするんですが, どうなんでしょうか?
for ($i=0; $i<=105; $i++) { $str1 = "str1"; $str2 = "1234567890str1testtest"; $str2 =~ s/^(\d+)($str1)/test/g; print $i."\n"; print $1."\n"; print $2."\n"; print $str2."\n"; } 手元に v5.005_53 があるので試したところ、ループの１回目から $1, $2 は取得できないようです。^ と /g の併用は通常意味がないので、考えられていなかったのではないでしょうか。むろん、/mg とすると $1, $2 を取得することができます。 v5.8.x の段階は、直している (仕様変更？) 途中だとも考えることができると思います。質問者のように、気づく方がいるとは予想外でしょうが...。
1)読んだ行が区切られる単位なのか、要素なのかを分けて、 2)指定されたファイル名でオープンしたり、出力が終わったらクローズしたり を割とそのまま書けばよいかと思います。 # 質問文中ではコロンやスペースが全角なのでそのつもりで書いてあります my $items = 0;# これからファイルに出力する行数 while (<>) { if ($items == 0 && /：/) {# ：の行が区切られる単位とし、 chomp; my ($name, $num) = split(/：/); $num =~ s/　//g;# 全角スペースが入っているようなので消しておく $items = int($num);# ：の後の数字がそのグループに入る要素数である。 print "$name, $items\n"; open OUT, ">$name" or die "Cannot open $name..."; }elsif ($items > 0) {# データ数分出力 print OUT $_; if (--$items == 0) {# 最後の項目だったら close OUT;# ここでおしまい } } } # 最初の if に $items == 0 が入れてあるのは、項目にコロンが入っていたらハマるからですが、 # 先に if ($items > 0) { ... } elsif (/：/) { ... } と書けば条件式はシンプルになります。 # ここでは（データファイルの出力順に合わせて）グループ名の指定かどうか判定する方を先にしました。
キーブレイク処理を応用すれば、以下のような方法で実行できます。 以下のスクリプトでは、1件前のデータのキー(この場合は1列目の値)を 保存しておき、入力したデータのキーと比較して差が1の場合でなければ、 「>」を出力するようにしています。 open(IN1,"data.txt"); open(OUT1,">result.txt"); $in1_key　=　undef;　　#入力キー @out　　=　();　　　#出力データの配列 $sv_key　　=　undef;　　#保存した入力キー while　(<IN1>)　{ 　　chomp($_); 　　($in1_key,@data)　=　split(" ",$_,-1); 　if　　(($sv_key　ne　undef) 　　&&　($sv_key　ne　$in1_key) 　　&&　(($in1_key - $sv_key)　!=　1))　{ 　　　print　OUT1　">\n"; 　} 　print　OUT1　"$_\n"; 　$sv_key　=　$in1_key; } close(IN1); close(OUT1); なお、1件目のデータの1列目の値が必ず「1」であれば、 以下のように簡略化できます。 open(IN1,"data.txt"); open(OUT1,">result.txt"); $in1_key　=　undef;　　#入力キー @out　　=　();　　　#出力データの配列 $sv_key　　=　0;　　#保存した入力キー while　(<IN1>)　{ 　　chomp($_); 　　($in1_key,@data)　=　split(" ",$_,-1); 　if　　(($in1_key - $sv_key)　!=　1)　{ 　　　print　OUT1　">\n"; 　} 　print　OUT1　"$_\n"; 　$sv_key　=　$in1_key; } close(IN1); close(OUT1); ※入力データの区切り文字は半角スペースであることを 前提にしていますので、例えばタブ区切りなら、 　　($in1_key,@data)　=　split(" ",$_,-1); の部分を 　　($in1_key,@data)　=　split("\t",$_,-1); に変更してください。
1) フォームのパラメータを何かに保存 2) 保存したものを読み出す 3) フォームのパラメータのデフォルト値としてセット すればOKです。 モジュールを使っていいなら、例えば以下のようになります。アカウント管理していないことと、表示がくずれるので空白2文字を全角空白で書いていることに注意。 #!/usr/bin/perl -T use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use HTML::FillInForm; use Storable qw(nstore retrieve); use constant QUERY_FILE => './serialize.dat'; my $q = CGI->new(); my $html = do { local $/ = undef; <DATA> }; my $output; my $sended = $q->param('send'); if ( defined $sended ) { 　　nstore( $q, QUERY_FILE ) || die QUERY_FILE; 　　$output = HTML::FillInForm->fill( \$html, $q, target => 'form1' ) 　　　　|| die "$!"; } elsif ( -r QUERY_FILE ) { 　　my $saved_query = retrieve(QUERY_FILE) || die QUERY_FILE; 　　$output 　　　　= HTML::FillInForm->fill( \$html, $saved_query, target => 'form1' ) 　　　　|| die "$!"; } else { 　　$output = $html; } print $q->header( -charset => 'UTF-8' ), $output; __DATA__ <!DOCTYPE html 　　PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 　　 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP" xml:lang="ja-JP"> 　<head> 　　<title>Test HTML::FillInForm</title> 　　<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 　</head> 　<body bgcolor="#ffffff"> 　　<form name="form1" method="POST"> 　　　 Name : <input type="text" name="url" /> 　　　 <br /> 　　　 <input type="radio" name="look_behind" value="A" checked="checked" />Value A 　　　 <input type="radio" name="look_behind" value="B" />Value B 　　　 <input type="radio" name="look_behind" value="C" />Value C 　　　 <br /> 　　　 <input type="checkbox" name="checkbox1" value="ON" lablel="checkbox_label" />checkbox1 　　　 <input type="checkbox" name="checkbox2" value="ON" lablel="checkbox_label" />checkbox2 　　　 <br /> 　　　 <select name="select1"> 　　　　 <option value="option1">option1</option> 　　　　 <option value="option2">option2</option> 　　　　 <option value="option3">option3</option> 　　　 </select> 　　　 <br /> 　　　 <input type="submit" name="send"　value="send" /> 　　</form> 　</body> </html>
1オクテット = 1バイトと考えます。 UTF-8では日本語の全角半角1文字は3から4バイトですが、OK? > なお、データ中に\nを含む場合は、それがぶった切られないようにする方法はないでしょうか？ ??よくわからず。 適当。以下、表示がくずれるので空白2文字を全角空白1文字で書いていることに注意。 use strict; use warnings; # for testing my $wrap = 5; my $string1 = 'A' x 10; my $string2 = 'B' x 13; for my $string ( $string1, $string2 ) { 　　print qq(\x0A\x0D"$string"\x0A\x0D); 　　print "---\x0A\x0D"; 　　while ( $string =~ m/([\x00-\xFF]{$wrap,$wrap})/g ) { 　　　　print $1, "\x0A\x0D "; 　　} 　　my $rest = length($string) % $wrap; 　　if ( $rest > 0 ) { 　　　　print substr( $string, -$rest ), "\x0A\x0D "; 　　} 　　print "---\x0A\x0D"; }
%USERSをData::Dumperで直列化して、別ファイルに引き渡して復元するとか。 perldoc Data::Dumperで使い方が参照できます。 参考URL：http://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%AA% …
No2です。 （１）についてですが、 カンマが一つという決まりがあるのであれば 以下の正規表現で取れます ([+|-]?\d+,?\d+.\d+) ただし、抜き取っても「,」が入ってしまうため、 文字列になってしまいます。その後の計算ができません。 ちょっと考え方を変えて、 「>"何らかの文字列"円」で正規表現を書き、 その後で、数値として認識できるように「,」を取り除いてみてはいかがでしょうか 以下のような感じになるかなと思います。 while( my $line = <$file_handle> ){ 　　if( $line =~ />(.*)円/ ){ 　　　　$result = $1; 　　　　$result =~ s/,//g; #,を取り除きます。 　　} } (2)についてですが my ( $year, $month, $day, $hour, $min ); if( $line =~ /(¥d+)年(¥d+)月(¥d+)日 (¥d+):(¥d+)/ ){ 　　$year = $1; 　　$month = $2; 　　$day = $3; 　　$hour = $4; 　　$min = $5; } で各値を取得できると思います。
my @array; for (<DATA>) { 　　chomp; 　　push @array, [ split / / ]; } print $array[0][0]; # a print $array[0][1]; # b print $array[0][2]; # c print $array[1][0]; # d __DATA__ a b c d e f g h i
「特定の項目を持つ配列」を作るには、別に split して連想配列にしなくても、 配列の要素から目的の条件に合う要素を抽出する grep を使えば1行で書けます。 あらすじはこんな感じ my @items = <IN>;# （この行の上下のopen/closeは記述省略） my @data = <DATA>;# 両方一気に読み込んじゃうことの是非は置いとく map { chomp;# 改行がついたままなので削る my $pat = $_;# grep の中で $_ が使われるので別の変数にコピる my @line = grep(/^$pat/, @data);# ここでマッチする行を抽出 # ここで回答 No.1 への補足にある、ランダム出力のループを使う } @items; # "map", "foreach (@items)", "while (<IN>)" のどれが好みかは置いとく
それなら例えば while (my $line = <>) { chomp $line; my ($id, @data) = split /,/, $line; my %count; my @item; for (@data) { push @item, $_ unless $count{$_}++; } print $id; for (@item) { print ",$_,$count{$_}"; } print "\n"; } とかでどうだろ.
-e は論外として。 実際にどんな返事が返ってきてるのか、確認したらどうです? ($content_type, $document_length, $modified_time, $expires, $server) = head($data) ; とでもして。 アップローダーとかだと作り方によっては、「エラーということを教える」内容の、HTTP的には「正常なページ」を返す場合もありそうです。
適当。表示がくずれるので、空白2文字を全角にしていることに注意。 use strict; use warnings; use autodie; for my $file (@ARGV) { 　　my $new_file = $file . '.new'; 　　open my $fh,　　 '<', $file; 　　open my $new_fh, '>', $new_file; 　　while ( my $line = <$fh> ) { 　　　 if ( $line =~ m{(\s*)<title>(.*)</title>(\s*)$}i ) { 　　　　　 my $title = $2; 　　　　　 print {$new_fh} $1, 　　　　　　　 qq(<meta property="og:title" content="$title" />), $3; 　　　 } 　　　 print {$new_fh} $line; 　　} 　　close $fh; 　　close $new_fh; } ---- perl -w foo.pl foo1.html foo2.html
> しかしブラウザに (略) > が表示されてしまいます。 それは、バッチファイルが出力したものでしょう。 バッチファイルが出力したものも、CGIの出力に混ざってしまいます。 Perl側で対応する場合は、 system '… > nul' としてください。 あるいは、バッチファイル側で、1行目に @echo off という行を追加してもいけるかと思います。
\sは空白文字ですから、もちろん改行コードにもマッチします。 Windowsでしたら、処理の前にchompをしてから処理すれば良いでしょう。 ★他のOSで作られたものを処理したり、他のOS上で動作させるときはこれではダメです。 その場合は s/\x0D?\x0A?$//; としてください。
MeCab.pmだけをダウンロードしたってことですか?それだと動かなくて当然です。 ・MeCabそのものがインストールされている必要があります。Text::MeCabはそれとPerlを継ぐ役割りをしているだけです。 ・その継ぐために一部Cで書かれている部分があります。それをコンパイルする必要があります。 そのページの左の上の方にDownloadにあるtar.gzが一式です。 通常は、これをいちいちダウンロード、などということはしないで、CPANモジュールを使ってインストールします。依存するモジュールも一気にインストールできます。詳しい使い方は「CPAN 使い方」とでも検索すればすぐにわかります。 ただ問題が一つ。以上のことはUnix系OS上での話です。C:とあることからWindowsだと思われます。それだと、必要なコンパイル環境が整っていない可能性があります。また、Perlの種類によってはCPANがうまく使えないケースもあります。 Strawberry Perl だとCPAN利用のための一式がセットなのでそのまま使えます。 ActivePerlだとPPMを利用することになるのですが、Text::MeCabがあるかどうか確認していません。無いかもしれません。 それ以外だと、そのPerlに依存します。
「ブラウザで見る」以外の動作確認はしないんですか?
> このとき{}ではなく+{}とすると、どうなるか試してみたのですが違いは分かりませんでした。 > {}の前に+を付けるとどうなるのでしょうか？？？ +{}と書くとハッシュリファレンスであると明示できます。 数は多くないですが、{}がハッシュリファレンスなのか、そうでないのか曖昧になることがあります。他人が書いたコードを見てビックリしないぐらいには理解したほうがよいでしょう。 use strict; use warnings; use Data::Dumper; use feature 'say'; sub proto_func ($) { say 'proto_func($)'; } proto_func {say 'hoge'}; # Odd number of elements in anonymous hash at foo.pl line 11. proto_func +{a => 1}; sub hashref_ambiguous { {@_} }　# return {@_} sub hashref_strict { +{@_} } # return +{@_} my $ambiguous = hashref_ambiguous( 'a', 'b' ); my $strict = hashref_strict( 'a', 'b' ); print Dumper($ambiguous); # $VAR1 = 2; print Dumper($strict); # $VAR1 = { #　　　　　 'a' => 'b' #　　　　 };
use strict; use warnings; my %data; my @infiles = ("test1.txt", "test2.txt"); my $outfile = "test.txt"; my @dummy = ("-999.0","-999.0"); #取得 foreach my $infile (@infiles) { 　open(my $in, "<", $infile) or die $!; 　my $line; 　while( $line = <$in>){ 　　chomp($line); 　　my ($time, @list) = split(/\s*,\s*/, $line); 　　$data{ $time }{ $infile } = \@list; 　} 　close($in); } #出力 open(my $out, ">", $outfile) or die $!; foreach my $time ( sort keys %data ) { #時刻の順序は文字列ソートで決定 　my @list = ($time); 　foreach my $infile (@infiles) { 　　if( exists $data{ $time }{ $infile } ) { push(@list, @{ $data{ $time }{ $infile } }); } 　　else { push(@list, @dummy); } 　} 　print $out join(", ", @list) . "\n"; } close($out); #全角空白注意
http://www.ideone.com/Awdrp
「my $items = $tree->look_down('class', 'referencelink')->find('li'); で処理が止まってしまいます」 というなら, 「if (!defined($items))　や　if ($items=="")で判定」するタイミングってないと思うんだけど.... ちと調べた限りでは, いったん look_down の返り値を変数で受けないとダメっぽい. 参考URL：http://www.foo.be/docs/tpj/issues/vol5_3/tpj0503 …
「何がどう問題なのか」をエラーメッセージから読み取ってください.
ファイルの読み出し位置を先頭に巻き戻しましょう。 seek IO, 0, 0;
%SIG
だいぶ手抜き。 use strict; use warnings; use v5.12; use autodie; my @input = <DATA>; my $output = +{}; foreach (@input) { chomp; my @e = split "\t"; my $t = shift @e; push @{$output->{$t}}, [@e]; } foreach (sort keys %{$output}) { my $filename = $_; open my $out, '>', $filename . ".txt"; say $out join("\t", @$_) foreach @{$output->{$filename}}; close $out; } __END__ SRR_1X1Y1 SRR_1X2Y2 SRR_1X3Y3 SRR_2X1Y1 SRR_2X2Y2 SRR_3X1Y1 SRR_4X2Y2 SRR_4X3Y3 SRR_4X4Y4 SRR_4X5Y5 SRR_4X6Y6 SRR_99X1Y1 SRR_99X3Y3 SRR_99X5Y5 SRR_99X7Y7 SRR_99X9Y9 SRR_99X11Y11 SRR_99X13Y13
#2のスクリプトの実行でエラーになったということですが、お使いになっている perlはどういったものでしょうか。 わたしの手元で12.1と14.1で実行してなんの問題もありませんでした。 perl -v として実行するとどういった出力がされますか? This is perl 5, version 14, subversion 1 (v5.14.1) built for MSWin32-x86-multi-thread (with 1 registered patch, see perl -V for more detail) Copyright 1987-2011, Larry Wall Binary build 1401 [294969] provided by ActiveState http://www.ActiveState.com Built Jun 16 2011 18:54:40 Perl may be copied only under the terms of either the Artistic License or the GNU General Public License, which may be found in the Perl 5 source kit. Complete documentation for Perl, including FAQ lists, should be found on this system using "man perl" or "perldoc perl". If you have access to the Internet, point your browser at http://www.perl.org/, the Perl Home Page.
りょ～かい. でも, そうするとスクリプト全体とか使ったデータとかを見たいなぁ.
何の条件もなく単に「\Gをつけるとパターンマッチは前回の処理の続きから行われる」とだけ書いてあるのなら, その「ものの本」に間違いがある. 逆に, 実は条件が書かれているにもかかわらずあなたが単純に「\Gをつけるとパターンマッチは前回の処理の続きから行われる」と解釈したのだとしたらあなたに間違いがある. いずれにしても, そのスクリプトでそのように出力するのは (Perl の言語仕様として) 正しい動作です. 参考URL：http://perldoc.perl.org/perlop.html#Regexp-Quote …
> １メガバイトほどのPDFファイルを選択すると保存ができなくなってしまいました。 おそらくMySQLサーバーの設定の問題だと思います。 MySQLでは通信パケットの最大サイズのデフォルト値が1MBになっています。 my.iniのmysqldセクションでmax_allowed_packetとして指定できますので、この値を大きくしてやればいいです。 [mysqld] max_allowed_packet=16MB その他の要因としては、レンタルサーバーなどでApacheの設定によってPOSTの最大サイズが制限されている場合があります。この場合、自分で管理していないサーバーだったりするとお手上げかもしれません。サーバー管理者に相談してください。 あと、PerlのCGI.pmでも最大POSTサイズを制限する変数があります（$CGI::POST_MAX）。 こちらは通常の環境ではデフォルト値が -1 （無制限）のはずですのでたぶん無関係と思いますが、念のため存在だけご紹介しておきます。
Perl が言語として意図しているのは「それとも」の方です. つまり, //o は「『その正規表現』を最初に使うときのみ変数の値を展開する」ということを指示します. たとえば $m = 10; while ($m > 0) { $s = '1' x $m; if ($s -~ /1{$m}/o) { print "match\n"; } else { print "unmatch\n"; } --$m; } において o をつけたり消したりすると動作が変化します.
「混ぜるな危険。」という言葉が適切かと思います。 おそらく、似たような既存のCGIスクリプトから（意味がわからないまま）寄せ集めたのではありませんか？ CGIスクリプト冒頭で、 > #投稿された値を受け取る > if ($ENV{'REQUEST_METHOD'} eq 'POST') { > read(STDIN, $alldata, $ENV{'CONTENT_LENGTH'}); > } else { > $alldata = $ENV{'QUERY_STRING'}; > } > foreach $data (split(/&/, $alldata)) { > ($key, $value) = split(/=/, $data); > > $value =~ s/\+/ /g; > $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack('C', hex($1))/eg; > $value =~ s/\t//g; > $in{"$key"} = $value; > } と自作ルーチンでGET/POSTデータを全て%inに取得しているにもかかわらず、$name1と$name2ではCGIモジュールでもう一度取得し直そうとしています。 > use CGI; > $cgi=new CGI; > $name1=$cgi->param('handle'); > $name2=$cgi->param('number'); しかし、CGIモジュールが取得しようとした時点ではすでにPOSTデータを含んでいる標準入力（STDIN）のファイルポインタがread()によって末端に来ているため、データの取得に失敗しているのではないでしょうか。手元で検証していないので可能性の話ですけど。 どちらかのみを使えばとりあえずデータの取得はできるようになるでしょうが、冒頭部分のルーチンは1990年代、Perl4の時代によく使われていた類の太古のルーチンです。 私なら、CGIモジュールを使う方法で一本化します。 # 冒頭のルーチンを以下に差し替え。スクリプト中盤にある重複部分は削除。↓ use CGI; my $cgi = new CGI; my $name1 = $cgi->param('handle'); # なんで「$name1」なんだろう・・・ my $name2 = $cgi->param('number'); # なんで「$name2」なんだろう・・・ my $message = $cgi->param('message'); # if ($in{'handle'} ne '' && $in{'message'} ne '') { # の部分を差し替え↓ if($name1 ne '' && $message ne '') { ところで、HTMLフォームに<INPUT name="number">がないんですけど、$cgi->param('number')はどこからどんなデータを引っ張ってきているんでしょうね？ あと、質問とは内容が離れるかもしれませんが、質問者さんのスクリプトはいろいろと問題を抱えているように見受けられます。 ●HTMLフォームがUTF-8であれば、送られてくるデータもUTF-8であることが（今時のPCブラウザなら）保証されるのにもかかわらず、なぜ文字コードの自動判定（Encode::Guess）でわざわざUTF-8以外の文字コードとみなすようにしているのでしょうか。また、あえて「Shift_JIS」を使うということは、UTF-8よりも利用できる文字種がはるかに少ないということに留意してください。これらはどちらも文字化けやセキュリティホールの原因にもなります。携帯電話への対応や外部システムとの連携が必要でない限り、データ保存を含めて全てUTF-8で行うのが現代の主流です。 ●BBSデータファイルの読み書きで、（文法ではなく）ロジックに問題があります。適切な排他制御を行っていないために、読み書きが同時に発生した場合にはそれまで書き込まれたデータが失われる等の不具合が発生することでしょう。適切な排他処理の方法については、以前別の質問で回答したことがありますので参考にしてみてください。 http://okwave.jp/qa/q6697390.html http://okwave.jp/qa/q6105773.html ●この入力フォームにHTMLタグを入力したらどうなるかを考えてみてください。悪意を持って書き込んだら、入力フォーム自体を見えなくしたり、別のページに自動ジャンプすることさえ可能です。 ●ケアレスミスを防ぐために、Perl4ではなくPerl5の文法で書きましょう。スクリプト冒頭にはuse strict; use warnings;をつけて。myによる変数の初期化が必要になりますが、未定義の値が紛れ込んだりした場合に警告してくれますので、$cgi->param('number')のようなミスは避けられるはずです。 わからない点があればその旨ご返答頂ければ補足できるかもしれません。頑張ってください。
適当。表示がくずれるので、空白2文字を全角空白にしていることに注意 use strict; use warnings; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use Encode; use Fcntl ':flock'; use constant LOG_FILE => '/tmp/data.txt'; my $q　　　= new CGI; my $sended = $q->param('send'); my $text; if ( defined $sended ) { 　　my $message = $q->param('message'); 　　$text = overwrite_file( LOG_FILE, $message ); } else { 　　$text = read_file(LOG_FILE); } my $script_name = $q->script_name; my $html　　　　= << "END_HTML"; <html> 　　<body> 　　　　<h2> one line comment</h2> 　　　　　　<form method="post" action="$script_name"> 　　　　　　　　Message : <input type="text" name="message" size="60"> 　　　　　　　　<input type="submit" name="send"　value="send"> 　　　　　　</form> 　　　　　　<hr> 　　　　　　<pre>$text</pre> 　　</body> </html> END_HTML print $q->header( -type => "text/html", -charset => 'UTF-8' ), $html; ### Sub Routines sub read_file { 　　my $file = shift || die "Require file"; 　　my @lines = (); 　　if ( open my $fh, '<:encoding(shiftjis)', $file ) { 　　　　flock $fh, LOCK_EX; 　　　　@lines = <$fh>; 　　　　close $fh or die "$!:$file"; 　　} 　　return join q{}, @lines; } sub overwrite_file { 　　my $file = shift || die "Require file"; 　　my $message = shift; 　　my @lines = (); 　　my $exist; 　　my $fh; 　　if ( open $fh, '+<:encoding(shiftjis)', $file ) { 　　　　$exist = 1; 　　} 　　else { 　　　　open $fh, '>:encoding(shiftjis)', $file or die "$!:$file"; 　　　　$exist = 0; 　　} 　　flock $fh, LOCK_EX; 　　if ($exist) { 　　　　@lines = <$fh>; 　　　　seek $fh, 0, 0; 　　　　truncate $fh, 0; 　　} 　　$message .= "\n"; 　　my $utf8 　　　　= Encode::is_utf8($message) 　　　　? $message 　　　　: Encode::decode_utf8($message); 　　unshift @lines, $utf8; 　　print {$fh} @lines; 　　close $fh or die "$!:$file"; 　　return join q{}, @lines; }
> unshift(@file, "$in{'name1'}\t$in{'name2'}\n"); ／／ココの部分です だと、 $in{'name1'} , $in{'name2'} が展開されます。%inというハッシュで、キーが 'name1', 'name2'の値、という意味です。 入れたいは%inではなく、単純な変数なのですから、どう書けばいいかわかると思いますが。 また、この方法を使わなくても ・sprintfを使う: sprintf("%s\t%s\n", $name1,$name2) ・文字列結合の演算子 . を使う: $name1 . "\t" . $name2 . "\n" 等もあります。 ダブルクォートの中の変数展開がよくわからないなら、後者の方法を使えばいいです。 あと、これって > @file = <FH>; > close(FH); > unshift(@file, "$in{'name1'}\t$in{'name2'}\n"); ／／ココの部分です． .......「このあたり」......... > if (open(FH, ">form.txt")) { の「このあたり」で他の人がform.txtを書き換えてしまう可能性があります。 >+等の読み書きモードでオープン→flock→読み込み→(必要ならファイルを空に)→書き込み→クローズ 等とするなどして、間に入ってこれないようにする必要があります
配列に()か[]かの、びみょーな違いです。 my @shop = ( {'start_hour'=> '1100', 'shift'=> [1,2] }, {'start_hour'=> '1130', 'shift'=> [1,3] } ); foreach my $data (@shop) { print $data->{start_hour}; } または my $shop = [ {'start_hour'=> '1100', 'shift'=> [1,2] }, {'start_hour'=> '1130', 'shift'=> [1,3] } ]; foreach my $data (@{$shop}) { print $data->{start_hour}; }
use MIME::Base64;としたくないなら、require 'C:/Perl/lib/MIME/Base64.pm'; ついでながら、モジュール「HOGE::Fuga」がインストールされているか確認するなら コマンドラインから > perl -MHOGE::Fuga -e '' エラーが出なければインストールされています。
配列に収めたときの\n の扱いが気になりますが(要素に含まれる含まれない?)、 含まれないものとして、 use strict; use warnings; use v5.12; my $content = " do be usual become get look watch "; my @ary = grep {index($_, 'a') >= 0} split "\n", $content; say join(':', @ary); usual:watch とこんな感じ。
間違いその1：カテ違い 間違いその2：どうしたいかは書いてあるがどうなったのかが書いてない 一応カウントダウンはちゃんとしますが、どこが不満なんですか？
> test.cgiファイルのパスはどうすればいいのでしょうか？ > ※ とりあえず usr/bin/perl としました。 test.cgi の先頭で指定するperlコマンドのパスでしょうかね。 http://www.tinybeans.net/blog/2009/11/20-044028. … では、 #!/Applications/xampp/xamppfiles/bin/perl としています。 ご質問のコンフィグを見ると、インストール先のディレクトリの名前が XAMPP と大文字になっています。 DocumentRoot "/Applications/XAMPP/xamppfiles/htdocs/test" なので、 #!/Applications/XAMPP/xamppfiles/bin/perl とする必要があるかもしれません。 また /Applications/XAMPP/logs/error_log に Apache のエラーログが 出力されていると思いますので、参照するとより詳しいことがわかるかもしれません。 ターミナル上から /Applications/XAMPP/xamppfiles/htdocs/test/test.cgi を 実行し、正常に動くかどうか確認してみるといいかもしれません。
＞ 行の最初の”を削り、読んだものに上書きしたいのです。 ってことなら、書き換えたいファイルをa.txtとして、コマンドラインから、 perl -i.bak -pe "s/^.//" a.txt ――と実行してみるとか(各行の最初の1文字を強制的に削ります)。 参考URL：http://perldoc.jp/docs/perl/5.10.0/perlrun.pod
条件が細かく変わり続けているので自信ありませんが・・・ 推測込みでまとめるとこういうかんじでしょうか 1, (L)12× の「ようなもの」が続くとき、末尾の一つには×がつかない 2, 末尾ひとつの「ようなもの」の直後に、「cm」がなかった場合だけ「cm」を付与したい http://ideone.com/7hrZH
テーブル作成のSQLでこけてるようですね。 perlbbs\var\sql.cgiのtype=InnoDBは、MySQL4の構文かな？ MySQL5では、ENGINE=InnoDBのようです。 まずはその辺でしょうか。
@Array、@Array1、@Array2、$a1 、$a2 といった変数がいきなり出てきていますが、何がしたいのか。 print(DIC); で何がしたいのか など、全然わけがわかりません。 これを完成させるなら、もうちょっと勉強してからの方が良いです。 あと。この作業が数回しかやらないのなら、少しだけ高性能なテキストエディタで「まとめて置換」等とある機能を使えば、一つ一つ手で修正する必要はありません。Perl覚えるより早いと思います。
Net::SMTPのSSLだかTLSだか使う必要があると思います。 あとはAuthen::SASLがインストール済であることとか。
データ量がすくないのであれば、連想配列でいけるかと。 具体的なデータが不明なので、データ構造をどう構成すればよいかは回答不能ですが。 データ量が多いのであれば、なんらかのデータベース・ソフトを利用したほうが効率の向上が望めるとおもいます。
> $userpassをutf16にする関数の使い方はあってますか？ 本家では > my $newUniPW = $charmap->tou('"'.$newPW.'"')->byteswap()->utf16(); となっています。 よく考えたら私はActivePerlで動かしていたので、 Linux環境ではbyteswap()がないとダメとか、 どこかでチラ見した記憶が・・・曖昧ですみません。 http://search.cpan.org/~gbarr/perl-ldap/lib/Net/ …
ん～, 私も #1 と同じく「正規表現だけ」で書けるとはあんまり思えない (よしんば書けたとしても「簡単」にはならないと思う) けど.... あと, 「ちょっと古いPerl」ってどの辺を想定してます? 個人的には 5.8 より前は無視したいん.
「&#～;」という表現形式は、「数値文字参照」や「文字参照」と呼ばれ、 HTMLやXML内で使用される文字表現方法です。 (参考) http://ja.wikipedia.org/wiki/%E6%96%87%E5%AD%97% … 例えば、楽は、16進数に変換すると&#x697d;になります。 この「697d」が文字コード部分ですが、特定の文字コードが使用されている わけではありません。SJISだったりUTF-16だったりいろいろあり、 使用される文字コードは、どこか別の場所に書かれています。 ただ、SJISやEUCは、たいてい0x8000以上の文字コードが使用される ようになっており、「697d」といった0x8000以下の文字コードを 使用しているのはUTF-16(Unicode)であると推測できます。 それで、 http://ja.wikipedia.org/wiki/Unicode%E4%B8%80%E8 … から「697d」の文字を調べると「楽」という感じであることがわかります。 同様の方法で「し」を調べると、ひらがなの「し」であることが わかります。 その「&#～;」で書かれているデータを「.htm」の拡張子を持つファイル名 で保存して、ブラウザで開けば、結構読めたりします。
エラーになるのは Content-Type などのhttpヘッダーを出力する前に、変数の値を出力しているからでは？ おそらく、そのCGIスクリプト中で下記などの様にして Content-Type ヘッダーなどを出力していると思いますが、その後に変数の値を出力してみればどうでしょう？ print"Content-type: text/html\n\n";
ActivePerl は Perl を Windows に移植したもの (の 1つ) です. で 「Windows じゃないとできない」ことはありますが (たぶん OLE は Ubuntu では動かんと思う), 基本的なところは「Perl のバージョンが同じなら同じプログラムで同じ動作をする」と思ってもらえればいい. エディタは.... この後どんな方向にいくのか知らんけど, とりあえず vi か emacs あたりを知っておくのは損じゃないと思う.
ファイル名や引数に法則性があればファイル一覧の取得などで簡便に書ける可能性もありますが、詳細が不明なのでとりあえず力技で。 use strict; use warnings; while(<DATA>) { chomp; my($filename, $p) = split /\s+/; system("./a.out -P $p -i ${filename}.wav -o ${filename}.cep"); } exit; __DATA__ test1_1 256 test2_1 500
＞消えるなら問題ありません。正常です。 ゾンビ：　死んでも、死んだ状態で生きている。肉体として生きている。死んでくれない。 と言うことで、ゾンビと呼ばれるようになったのですよ。 http://search.yahoo.co.jp/search?b=1&n=10&ei=UTF … なので ＞ゾンビプロセス自体は、発生後に消える状態ではあります。 それは慣例的に、ゾンビプロセスとは言わない。 ｐｓ データーと共にnetstat http://search.yahoo.co.jp/search?p=CentOS+netsta … などのデーターとつき合わせて、プロセスの動作状況を確認してください。メモリーのデルタ値とか他のデーター増減ですね。 これらが、増減が無い状態で、状態が変化しない状態で、Killするまで残っていたら（又はマシンダウン）、それがゾンビプロセスです。 もちろんCPUメーターなどのデーターも必要ですね（含まれているが）。そこから始まると思いますよ
例えばこんな感じとか？ use strict; my %data; while (<STDIN>) { my ($key, $value); $_ =~ s/[\r\n]//; $key = $value = $_; $key =~ s/([^ ]+)\s(.*)/\1/; $value =~ s/([^ ]+)\s(.*)/\2/; push(@{$data{$key}}, $value); } while(my ($key, $value) = each %data) { print "$key "; foreach (@{$value}) { print "$_,"; } print "\n"; }
ちょっと裏技的に use Encode ; binmode(STDOUT,":bytes") ; # バイトコードをそのまま出力させるように変更 printf "|%2s\n|",Encode::encode('cp932',"あ"); # cp932にencodeすれば、2バイト文字は「2バイト=2文字」扱いになる 既出の方法の方が汎用性はありますけど。
私が実際にPerlのスクリプトでやっている事といえば、 ・ローカルIPから使用者を調べる（IP→マシン→資産管理表の使用者）。 ・ルータのログから、検索エンジンのクエリ部分をデコードしてメールで送る。 ・一つ一つブラウザを操作しないと確認できない事を一覧にしてメールを送る。 ・一つ一つブラウザを操作しないと登録できない事（CSV非対応）をやらせる。 ・テンプレートで送られてきたメールを読み取ってデータベースに登録する。 ・FTPsでデータ取ってきて圧縮して保存した後にゴミ掃除もやってもらう。 とか。 PHPではやり方が皆目見当がつかないというのであれば、 Perlでもはじめたら良いと思います。
use がコンパイル時に処理するのに対して require は「そこにきたとき」に処理します. なので, require であれば普通に if で分岐できます. use はそのまま書くと if の条件に関係なく処理するから, #1 のように eval するくらいだと思います. 十分新しい Perl なら if ってプラグマがあるんだけど, jperl にはないと思う. ところで, この length ってあってる? なんか decode っぽい気がするんだけど.... あと, 本当ならこんな小手先の対応でお茶を濁すんじゃなくって, きちんと書き直す方がいいんだよね.
まずは、問題を分割しましょう。 今ある問題というのは (1) フォームのチェックボックスに設定した内容を特定の文字列(カンマ区切り)にしたい (2) (1)の文字列を目的のファイルの特定の箇所に挿入したい:例えば5行目を差し替えたい (3)(1)→(2)というのがたくさんある。どうやって使いわけるのがいいか ..... となるのではないでしょうか? > チェックボックスが空欄な列は、記録されず、,2,4,6と、チェックの入った部分だけが記録されます。 というのは、(1)の問題では?
ちなみに @column[33] <=0 とか $total3[$loop] += @column[32]; とかは意味をきちんと理解して使っていますか?
localtime とか mkdir とかを使ってなんとかならない?
コマンドラインのオプションを取り扱いたいんだと想像します。 次のスクリプトでは次のオプションが使えます。 -t LIST or --tag=LIST コンマ区切りのタグ文字列を指定します。複数回指定できます。 -o PATH or --ouput=PATH 出力ファイルのプリフィクスです。デフォルトはスクリプトの名前+'-output-'。 -n or --num 出力ファイル名の連番を数字にします。デフォルトはアルファベットです。 例: $ perl arg.pl --tag=a,b,c arg-output-a a arg-output-b b arg-output-c c $ perl arg.pl --tag=a --tag=b --tag=c --output=path- path-a a path-b b path-c c $ perl arg.pl -t a,b,c -o path- --num path-1 a path-2 b path-3 c arg.pl: #!/usr/bin/perl use strict; use warnings; use v5.10; use File::Basename; use Getopt::Long; my @tag; my $output = basename($0, '.pl') . '-output-'; my $num; GetOptions( 　　'tag=s' => \@tag 　, 'output=s' => \$output 　, 'num' => \$num ); @tag = split(/,/, join(',', @tag)); my $suffix = 'a'; if ($num) { $suffix = '1'; } foreach (@tag) { &aaa($output.$suffix++, $_); } sub aaa { # 単に引数をプリントするだけ 　my ($output, $tag) = @_; 　say $output; say $tag; } 参考URL：http://perldoc.perl.org/Getopt/Long.html
ホームページからではCGIの設定状況まではわかりませんが、メールアドレスまたは設定が間違っているというのでなければ、サーバ側でスパムメール発信を規制していて連続メールをブロックしているのではないでしょうか？ 多分さくらネットさんのレンタルサーバだと思いますが、250通/15分とかの制限が設けられているという情報があります。 １通１通のメールに間隔が必要かどうか、そちらに問い合わせてみてはいかがでしょうか？ 規制されている場合はCGI側にメール送信を遅延させる機能を持たせるか、BCCなどでメール送信プロセスをひとつにしてやるなどの工夫がいると思います。
正規表現を使うなら、 opendir →readdirでファイル名ディレクトリ名取得 →-f でファイルか判定 →正規表現で対象か判定 でしょうか。 バイナリファイルを開くだけならエラーにはなりません。>#2さん テキストとして意味のあるデータ列になっているものを特に「テキストファイル」と呼んでいるだけですから、 結果が期待通りでない、というケースはありますが。
変数の代入文に直接日本語文字列を書かずに、外から読み込むようにすればかなりのエラーは防げると思います。 $pattern = <DATA>; chomp $pattern; $string = <DATA>; $string =~ s/\Q$pattern/tester/g; print $string; __DATA__ テスター テスターを変換して表示します
ローカル側だと普通に考えて全部読むし、 必要な部分と必要でない部分も普通ローカルが読んで判断するのでは。 サーバー側で必要な部分のみを判断させてそれを切り出して送信するのが一般的ではないだろうか？
ちょっと気になったので、追記しておきます。 index関数との比較ということで、固定された検索ワードと理解しています。 従って、私の取ったベンチは、$str =~ /hoge/のようなリテラルでのパターンマッチ速度です。 正規表現というのは本来 /^[a-fA-F]{4}\d{2,10}.+$/のようなもので、 単純に$str =~ /h.{2}e/としただけでも、indexの方が早くなってきます。
インデントの都合上、全角スペース使ってるので置換して下さい。 use strict; use warnings; # データのぶちこみ場所（2次ハッシュ） my %data; # CSVデータはスクリプト中に書けるので、今回はそれを使います while (<DATA>) { 　　chomp $_; 　　my @cols = split(',', $_); 　　 　　# 各カラムごとの合計(sum)、個数(cnt) 　　$data{$cols[0]}{sum} += $cols[1]; 　　$data{$cols[0]}{cnt}++; } foreach my $col (sort keys %data) { 　　# 適当に出力 　　print "Colmns $col : Avg = " . $data{$col}{sum} / $data{$col}{cnt} . "\n"; } __DATA__ 1,123.93 1,322.32 1,232.21 1,124.32 1,234.12 2,123.43 2,12.34
もしかすると本来\xe3\x80\x9cだったものが、 \xef\xbd\x9eに割り振られていたのではないでしょうか？ 参考URL：http://ja.wikipedia.org/wiki/チルダ#.E5.85.A8.E8.A7.92.E3.83.81.E3.83.AB.E3.83.80
こういうことでしょうか？ 1 while $wk =~ s/^([-+]?\d+)(\d\d\d)/$1,$2/; print $wk; https://ideone.com/hkaPM
http://www.din.or.jp/~ohzaki/perl.htm#NumberWith …
No.1さんがおっしゃるようにbigintでいいんじゃないでしょうか？ use bigint; my $n = 0 + $ARGV[0]; print substr $n->as_bin, 2;
「やっていいかどうか」という意味であれば, 全く問題ありません. email.pl の中で use していれば, email.pl をコンパイルするとき (つまり require したとき) に (必要なら) 読み込むことになります.
use Encode qw(from_to);とするか、 Encode::from_to()とする。 あと'euc'という文字コードも該当なしなので'eucjp'とする。
サイトという言葉を使っているので、httpでの接続だと想定しますが 基本的に無理です。サイトb側でなんらかの策を取る必要があります そもそも、//サイトb/フォルダ/index.html とかあったとしても、実際に「フォルダ」というディレクトリが存在して、その中にindex.htmlというファイルがある、という保証がありません。
「フォルダにあるファイルをリストする」だけなら 1. glob を使う 2. ディレクトリハンドルを使う は考えられる.
サーバー、Webサイトは並行稼動しているのでしょうか。 cookie をセットするときに、ドメインを指定しているが、 移行先のサーバーにアクセスする際のURLのドメインと 異なる、なんてことはないでしょうか。。。
Win32::API は使ったことないのですが、 http://search.cpan.org/~cosimo/Win32-API-0.64/AP … をみると、 int の引数に対応するのは N ではなく、 I じゃないですか。
やってみて失敗したのですか？ 私が試した限りでは、どちらの変数にも0が入り、 期待通りメッセージが出力されましたけど。 なので、何を問題とされているのか、 何がわからなくて質問されているのか、 私にはよくわかりません。。
日本語版も。 Perldoc.jp http://perldoc.jp/docs/perl/5.10.0/perlsyn.pod これ読むと、next if $x;　のような用途に限定すべきでしょうね。
たぶん、Web::Scraperで使われているHTML::Selector::XPathが古いです。
具体的な実行方法を補足してください。 また、拡張子を隠す設定になっていませんか? コマンドプロンプトなどから perl スクリプトファイル名 で実行したなら、拡張子がなんであろうとPerlのスクリプトとして実行できます(少なくとも、実行しようと試みます) ダブルクリックで実行した場合は、関連付けに従って実行されます。 .plがPerlと関連付けされてるとは思います。 ただ、エクスプローラの設定次第では、実際の拡張子が隠れている場合があります。 サクラエディタで保存したときに、実際には～.pl.txtになっていて、.txtが隠れていて ～.plに見えるだけ、ということは無いですか?
表示がずれるので、空白2文字を全角空白にしていることに注意 #define _GNU_SOURCE #include <stdio.h> #include <string.h> #ifndef __CYGWIN32__ #include <dlfcn.h> #endif /* BINARY HACKS P.300 */ /* 関数への enter/exit をフックする */ #ifndef __CYGWIN32__ __attribute__((no_instrument_function)) void addr2name(void *func_address, char *func_name) { 　　Dl_info dli; 　　if (0 != dladdr(func_address, &dli)) { 　　　　strcpy(func_name, dli.dli_sname); 　　} 　　else { 　　　　strcpy(func_name, ""); 　　} } #endif __attribute__((no_instrument_function)) void __cyg_profile_func_enter(void *func_address, void *call_site) { 　　extern void *__libc_stack_end; 　　char　　　　 func_name[256]; 　　int　　　　　stack_size; 　　void　　　　*frame = __builtin_frame_address(1) + 8; #ifndef __CYGWIN32__ 　　addr2name(func_address, func_name); 　　stack_size = __libc_stack_end - __builtin_frame_address(0); #else 　　strcpy(func_name, ""); 　　stack_size = 0; #endif 　　printf("enter %s:%p, from=%p stack size=%d\n", 　　　　　 func_name, func_address, call_site, stack_size); } __attribute__((no_instrument_function)) void __cyg_profile_func_exit(void *func_address, void *call_site) { 　　char func_name[256]; #ifndef __CYGWIN32__ 　　addr2name(func_address, func_name); #else 　　strcpy(func_name, ""); #endif 　　printf("exit　%s:%p, from=%p\n", func_name, func_address, call_site); } void sub_func(int arg1, char arg2, char *arg3) { } void func(int arg1, char arg2, char *arg3) { 　　sub_func(arg1, arg2, arg3); } __attribute__((no_instrument_function)) void func_no_instrument_function(int arg1, char arg2, char *arg3) { } __attribute__((no_instrument_function)) int main(int argc, char *argv[]) { 　　int　 arg1 = 10; 　　char　arg2 = 20; 　　char *arg3 = "abc"; 　　printf("sub_func = %p\n", sub_func); 　　printf("func = %p\n", func); 　　func(arg1, arg2, arg3); 　　func_no_instrument_function(arg1, arg2, arg3); 　　return 0; } /* $ gcc -g -finstrument-functions -rdynamic foo.c -o a.out -ldl && ./a.out */ /* sub_func = 0x804891e */ /* func = 0x8048952 */ /* enter func:0x8048952, from=0x8048a13 stack size=264 */ /* enter sub_func:0x804891e, from=0x804898b stack size=312 */ /* exit　sub_func:0x804891e, from=0x804898b */ /* exit　func:0x8048952, from=0x8048a13 */
/^(q|.*&q)=([^&]+)(&.*|)$/$2/ 最後の& がつづいてるかどうかの判別をわすれていた。
キャッシュなきがしますね。 携帯電話とかだと経由サーバーで展開して画像を携帯に送るとかしてるので。 （携帯電話からHTTPSが危険な理由のひとつ）
２行単位で処理するようなループを書けば、正規表現マッチが簡単になると思います。 my $twoline = <FH>; while (<FH>) { $twoline .= $_; $twoline .= "printf(\"hoge\");\n" if $twoline =~ /int\s\w*\(.*\)\s*\n\s*\{\s*\n/; my ($line1, $line2) = $twoline =~ /^(.*\n)(.*\n)$/s; print $line1; $twoline = $line2; } print $twoline;
まず、お約束として、スクリプトの最初の方に use strict ; use warnings ; を書きましょう。こうすると、宣言してない変数とか、未定義値を文字や数値として利用したりするなど、通常はそのまま使えることが、エラーにや警告になります。 で、おそらく、$sdataについてエラーまたは警告が出るはずです。提示された範囲で$sdataに値が設定されているのは > $sdata="$in{'d_no'}=$in{'s_no'}=$in{'s_name'}=$in{'d_class'}=$in{'s_price'}\n"; > $sdata="$d_no=$s_no=$s_name=$d_class=$s_price\n" この2行だけです。 > ($d_no,$s_no,$s_name,$d_class,$s_price) = split (/=/, $sdata); では、最初の$sdataは無いので前の変数は全部空だし、2回目以降は先の2行のどちらかの内容が繰り返されるだけです。 初心者とのことですが、それならなおさら基礎を勉強してください。 ネットのサンプルコードを参考にするにも、どこが必要か見極められなければ意味がありません。
Perlの場合、 $a (変数) と @a (リスト) , $a[0] (リストの0番目の要素) と %a (ハッシュ) , $a{'key'} (ハッシュの'key'の要素) とは別です。 また、「ハッシュ」と「無名のハッシュ/ハッシュのリファレンス」も扱いが違います。 この部分だけでは、正しい対処はわかりません。 ・呼出側で func($form_value, %error_list) のようになっている場合: @_は「スカラーが一つとハッシュの中身」を並べたリストになり、関数内で復元させるなら my ($form_value,%error_list) = @_; です。 ・呼出側で func($form_value, $error_list) のようになっている場合: my ($form_value,$error_list) = @_; で正しく、 $error_list{'inquiry_type1'} が間違いです。 $error_listが示すハッシュのリファレンスの中にアクセスするには $error_list->{'inquiry_type1'}のようにします。 名前のこととリファレンスは基本事項なので覚えてください。
> どんな場面でPerlを利用しているのですか? Webプログラミング、サーバー運用（解析、監視、etc.）、複数システム間のデータ連携などの業務にPerlやJavaScriptを使っています。 Perlを使ってる理由ですが、 ・旧バージョンとの後方互換性がある程度担保されるため、比較的長期運用が必要な社内システム等の構築が容易。プラットフォームOSへの依存が少なく、機器更新時の選択自由度が高い ・強力かつ大量のCPANモジュールが利用可能 ・コンパイル不要。迅速な修正が可能。最悪担当者が逃げてもソースコードがあればなんとかなるよね・・・？(^^; 最後のは半分冗談ですが、こんな感じです。 Perlもまだまだ勉強中なので、しっかり身につけてから他の言語に手を出そうかなと思ってます。 Python、Rubyあたりには興味がありますね。用途次第でしょうけど、ご参考まで。
同じ数字がたくさん出てきてややこしいので説明用に use strict; $_ = [1, 2]; grep($_ == $$_[0], 3, 4) と変更します。エラー原因に関係する変更ではありません。 そもそも$_=[1,2]のままでも $_ == $$_[0] は $_がリファレンス、$$_[0]はデリファレンスしたリストの先頭要素"1" と比較すること自体が論理的に変です。言語仕様的にエラーにはなってないですが。 それが、grepで $_が対象リストの各要素に置き換わって、最初は$_="3" となり、 そのリファレンスではない"3"をデリファレンスしようとしたので Can't use string ("3") as an ARRAY ref while "strict refs" in use エラーになっています。
ところで普通はカンマの後ろに空白を置いて、前には置かないんじゃないですかね。 use strict; use warnings; use autodie; use v5.10; sub dump_data { my $data_ref = shift; given (ref($data_ref)) { when ("ARRAY") { say join(',', @{$data_ref}); } when ("HASH") { foreach my $e (sort keys %{$data_ref}) { dump_data($data_ref->{$e}); } } default { warn "invalid data"; } } } sub get_contents { my $fh; if (@ARGV) { open $fh, '<', shift @ARGV; } else { $fh = *DATA; } chomp(my @lines = <$fh>); close $fh; @lines; } #main my %data; foreach my $line (get_contents) { my @fields = split /\s*,\s*/, $line; if (exists $data{$fields[0]}{$fields[1]}{$fields[5]}) { my $ary_ref = $data{$fields[0]}{$fields[1]}{$fields[5]}; foreach my $i (0, 3, 4) { $ary_ref->[$i] .= "/$fields[$i]" if index($ary_ref->[$i], $fields[$i]) < 0; } } else { $data{$fields[0]}{$fields[1]}{$fields[5]} = \@fields; } } dump_data(\%data); __END__ test ,abc ,AB ,VI ,SS ,ma test ,abc ,AC ,PI ,VS ,ma test ,abc ,BA ,SS ,VS ,ma test ,abc ,BA ,VI ,VS ,ma test ,cde ,AA ,VI ,SS ,mb test ,cde ,CC ,PE ,VS ,mb test ,cde ,BC ,PI ,SS ,mb test ,cde ,AC ,PI ,SS ,mc
波ダッシュ問題という有名な問題なのでこの言葉で検索すれば詳細が得られると思います。 解決方法は色々あると思いますが、以下のように全角チルダを波ダッシュに強制変換するとか。 Perlで日本語(ISO-2022-JP)メールを送信(まとめ) http://d.hatena.ne.jp/kopug/20060903
書いてある条件を素直に読めば use strict; my $name; while (<>) { chomp; if (/^!/) { last unless defined ($_ = <>); chomp; /^name\s+(\S+)/ or die; $name = $1; } else { print "$_ $name\n"; } } くらい? あ, chomp は癖で書いてるだけです.
日付を指定させ、それをキーにして順読みでマッチング。 そのマッチングした位置（カウンター）をキーにして、「splice」。 以外とスッキリ書けますよ。
#2 をベースに one-liner化: perl -pe 's/^(.)\s*/">$1" . [qw(s f)]->[$. % 2] . "\n>"/e'
ソートには「シュウォーツ変換」と呼ばれるやり方があります。ネット上にはたくさんの情報がありますので参照してください。次のプログラムは、１行に１処理で書いています。 use strict; my @data; push @data, [$_, $., split /\s+/] while <DATA>; @data = sort { $a->[2] cmp $b->[2] or $b->[3] <=> $a->[3] } @data; @data = @data[0, grep { $data[$_ - 1]->[2] ne $data[$_]->[2] } 1 .. $#data]; @data = sort { $a->[1] <=> $b->[1] } @data; @data = map { $_->[0] } @data; print @data; __DATA__ aaa 8000 52 abc 200 48 cbd 250 31 efg 98 45 abc 390 68 ddd 89 90 aaa 65 40 fed 900 66 efgh 99 49 abc 40 40
perl -e "print 'Hello world!!';" の例とまったく同じですが。 どの辺りがわからないのでしょう?あなたの考える「正確な意味」にたりないものを補足してもらえるとありがたいです。 ・"とかが付いていない →例では、空白などが混じっているので''でかこって一つの文字列にしていますが、「shell」だけなら一つの文字列になっているのでくくる必要はありません ・;とか付いてない。文法的に違うのでは? →ブロック等の最後の;は省略できることになっています。 ・shell って関数がマニュアルに載ってない。 →Perlはモジュールを使用することで、標準では無い関数を定義できます。 いろいろ省略しないで書けば perl -MCPAN -e '&CPAN::shell();' になります(まだ足りないかも)
対象のデータのフォーマットですが > *○ △ /△/△/△/△/○.txt, ○|○): ○ > ○,△:任意の数字、または文字列です。 だったのが > Error_check: *Error, (/mmmm/xxxx/yyyy/zzzz/aaa/bbb/ccc/ddd.txt,1|0): Error_contents と食い違いがありますよね。 ・Error_check: ・*Error の後の△に対応するものは? ・開きガッコ ・二つめの○に対応するものとして取り出したい内容に .txt は含まれる? .txtのあとのカンマの後の空白 といったあたり。 最初の例だと 1|0 は1と0として取り出したいように読めるのですが、後で出された例ではまとめてのようですがこれは? また、/…/ddd.txt はなにかファイルのパスのように見えますがこの段数も二つの例で数が違います。 どちらが正しいのかあるいは可変なのか? Error_contents も本当にこの字面が並んでいるんじゃなくて、エラーの内容などを表す文字列がくるのではないですか? (Error_checkもそうだったりして?) いずれにしても、どういった書式のデータがくるのかがはっきりわかれば他の方がいろいろ例を出しているように 書きようはあります。裏を返せばはっきりしなければどうにもならないということですが。
> ユーザーエイジェントに「UP.Browser」という文字列があった場合、$agentに「au」と入れたい。 というなら、素直に、 if(index($ENV{'HTTP_USER_AGENT'},'UP.Browser')>=0){ $agent='ua';} でどうですか。
えーと。 変換処理もされていません。ファイルを開いて読んだだけです。 $aはプログラム中「if($a =~ /&quop/){」までの間でどこにも出てきませんよね? ということは、$aは未定義で、文字列にしたら '' つまり長さが0の空文字列に相当します。 きちんと勉強するなら、最初に use strct; use warnings; を付けて判定を厳しくするといいでしょう。 また、動作確認中は、入出力のファイル名を別にして、上書きされないようにすると作業が楽だと思います。
\Q
次のプログラムは、ファイルからの読み込みに変更する必要があります。 use strict; my %file2 = (BB => [['EEE', 'RRR'], ['EEE', 'SS'], ['FF', 'TTTT']], W => [['EEE', 'TTTT']]); while (<DATA>) { my @line = split /\s+/; if (exists $file2{$line[1]}) { print join("\t", @line, @$_), "\n" foreach @{$file2{$line[1]}}; } } __DATA__ AAA BB CC DDDD AAA BBB CC DD XX BB YYY Z ちなみに、ファイルからの読み込みで %file2 を構築するには次のようにします。 while (<FILE2>) { my ($c1, $c2, $c3) = split /\s+/; push @{$file2{$c1}}, [$c2, $c3]; }
まず本題を先に済ませてしまうと my @b = ( qw(e f g) ); と my @b = qw(e f g); の間に違いはありません. 全く同じことです. 「書き換えた後のコード」で my @t = ( qw(a b c) ); となっているのは, 単に無名配列を作る [ qw(a b c) ] と形を合わせたかっただけではないでしょうか. で余談: #1 ではなんだかんだ書いたけど, でも「perlにおいて()で囲むのはリストとして扱うということ」と思っちゃうのはまあ無理ないと思います. だいたい my @a = ("a", "b", "c"); って書くしね. ただ, ここのかっこは実は「リスト」とは全く関係ありません. じゃあなんでかっこがあるかというと 優先順位を変えるため です. Perl では代入演算子の方がコンマ演算子よりも優先順位が高いため my @a = "a", "b", "c"; と書くと (my @a = "a"), "b", "c"; と解釈されてしまうのですが, それでは困るので右辺にかっこをつけています. つまり $a * ($b + $c) のかっこと役割は全く同じです. 1 の my $a = qw(a b c); は my $a = ("a", "b", "c"); と同じ意味で, この右辺は (コンマ演算子の動作により) 「"a", "b" の値は評価だけして捨て, "c" の値を返す」ということになります. なので $a の値は "c" となります. 上の my @a = ("a", "b", "c"); では右辺がリストであるのに対し下の例ではリストになっていませんが, これは「代入演算子が左辺を見て右辺の評価の仕方を変えている」からです. つまり上の例では左辺が @a と配列になっているので「じゃあ右辺はリストとして計算しないとだめだな」としますし, 下の例なら左辺 $a がスカラー変数なので「右辺はスカラーとして計算しよう」となります. 専門的には, この「○○として計算しよう」というのを「コンテキスト」と呼びます. コンテキストにはいくつかの種類がありますが, とりあえずスカラーコンテキストとリストコンテキストの 2つをおさえておけばだいたい何とかなります. 2 の my @a = qw(a b c); my $a = @a; ではまず配列 @a に値を代入します. 次にスカラー変数 $a に配列@a を代入していますが, この場合代入する変数 $a がスカラーなので右辺はスカラーコンテキストで評価されます. そして スカラーコンテキストで配列を評価すると要素数が得られる ため, @a の要素数である 3 が $a に入ります. 3 と 4 は同じ結果になりますが, ここでは代入の左辺 ($a) が「リストである」ことに注意が必要です. つまり「左辺はリスト」なので, 「右辺もリスト」として計算します. そして得られた値を「要素ごとに代入」しているので $a の値は "a" です. 「代入する変数」そのものはスカラーであっても, ($a) となっていればリストです. なお, 無名配列を作る [] や無名ハッシュを作る {} は, その内部に対し (当然ですが) リストコンテキストで評価します. さらに余談ですが, 「かっこをつけなくてもリストになる」例として「リストを要求する演算子」を挙げることができます. print はそのような演算子なので, たとえば print $a, $b, "\n"; と書くと「$a, $b, "\n" からなるリスト」に対して print を適用する, という意味になります. もっとも, 現実的にはかっこをつけないといろいろ面倒なことがあったりしますが....
いまさらだけど なんで質問者である neo_j とはまったく縁もゆかりもない neowave2001 さんが閉め切ろうとするの＞#3.
一応、下記のコードで取り出すことができます。 # モジュールを読み込む use XML::Simple; # 一旦、XMLを $xml に読み込む my $xml_file = 'result.xml'; open my($fh), '<', $xml_file; my $xml = join('',<$fh>); # x-sjis-cp932 があると解析に失敗するので、 # <?xml version="1.0" encoding="x-sjis-cp932" ?> を削除 # XML を UTF-8 で書くと下記の処理はいらない。 $xml =~ s/<\?.*\?>//; # XML::Simple を使い、$ref にリファレンスのツリーとして解析する my $x = XML::Simple->new(); # パーサを作成 my $ref = $x->XMLin($xml); # 必要なデータを出力 print $ref->{result}->[1]->{redirect}; XML::Simple はこの例のように単純な構造のXMLを Perl 的な変数のツリーに変換するモジュールです。 少なくとも Perl のリファレンスをある程度理解していないと何をしているかわからないと思います。 最後の行の「$ref->{result}->[1]->{redirect}」が何を意味しているのか分からないようでしたら、まずリファレンスを学習し、XML::Simple の説明を読むとよいと思います（参照URL）。 参考URL：http://d.hatena.ne.jp/perlcodesample/20100424/12 …
＞name属性が大文字なのが原因でしょうか？ ＞formのenctype属性が空欄だからでしょうか。 この2つが原因と推測して試さないのは何故でしょうか？
レキシカルスコープと呼ばれるものを作るためです。 Perl では { } で囲まれた範囲（ブロック）にレキシカルスコープと呼ばれるものができます。 レキシカルスコープ内で my を付けて宣言さた変数（@new）はそのブロック終了後（対応する } より後ろ）は使えなくなり、間違えて同名の変数（@new）を再使用してしまう間違いを犯しにくくなります。 空のブロックでなくても、sub{}、if{}、foreach(){} など、さまざまなブロックでレキシカルスコープは作成されます。 「Perl スコープ」で検索されるといろいろ発見があると思います。
ちと調べてみると, our は 5.6.0 で入ったようですね. 5.6.0 のリリースは 2000年の 5月. おお, 前世紀なのか. ちなみに今の最新は 5.14.1.
サイトを運営するってなら 自分で保守すべきだと思うのだが・・・ ＞以下のスクリプトで保存及び抽出データに「=」が含まれていても上手く処理する方法は無いでしょうか。 みてわかるように，セットしたCookieが項目の区切りとして 「=」を使ってて，それを解読するのに「=」でsplitしてるから URLに「=」があれば誤動作するのは自然なこと． ＃ついでにいうとexpireの日付が決めうちなのも個人的には・・・ だから区切りにURLでは使わないものを使って それでsplitすればいいんでしょう． セットするCookieのデータ構造を考え直すしかないんでは？
Googleでperlをキーワードに検索すると最初の方を見ただけでも 以下のように多数の優良サイトが見つかるのですが、 それらのサイトの内容では不十分と言っておられます？ http://www.tohoho-web.com/wwwperl.htm http://www.kent-web.com/perl/ http://rfs.jp/sb/perl/ http://www.site-cooler.com/kwl/perl/ http://www.perlplus.jp/perl/ であれば、書籍を購入されるのが良いと思います。 Webとは違って検索できませんが、書籍であればスクロールとか しなくても全体を見渡すことができますので。
「上記のデータのリンクのURL「test.php?～～」の部分」としてどれをとればいいのか正確にはわかりませんが, たとえば ($url) = ($data =~ /\bhref="(.*?)"/i); ではダメですか?
サーバーの仕様で不可なら、そのサーバーにその生データをアップすることは不可でしょう。 そういう制限のないサーバーを使うか、データを分割、圧縮するしかありません。
＃２です。 ＞モジュールなんかはC:\dev\perl\bin\perl.exe自身が ＞C:\dev\perl\bin\siteとかに　 ＞apacheを介さずに直接探しにいくので、ジャンクション設定は関係ないと思っているのですが、私の理解はどこが間違っていますでしょうか? ＞教えていただければ嬉しいです。 残念ならが不正解です。 config.plを見てみるとよいでしょう。
＃３です。 ＞それぞれ$s_noで番号がふってあるので、 ＞てっきりform.cgi側でsdeta.txtを読み込んでから、 ＞クリックした番号$s_noで呼び出す（検索する？）感じで、 ＞if文かなにかを使って特定の１行を表示させるのかな・・・と思っていたので。 それだと、list表示するためにファイルopen、form表示するためにファイルopen、変更データを書き込むためにファイルopenと、合計３回ファイルをopenすることになります。 対象の一行は、list.cgiで読み込んで変数に格納済みですよね？ フォームを表示するために、form.cgiへ飛んでからもう一度ファイルをopenして読みなおすのは無駄なロジックだと思いませんか？ ファイルの容量とアクセス規模にもよると思いますが、flockも馬鹿にならないので個人的には何度もファイルをopenするのは好きではありません。 [list.cgi] (1)ファイルを読み込み、それぞれの値を変数化して一覧表示。 (2)リンクをクリックしてform.cgiにそれぞれの変数を送信。(リンク形式ならGETかな？と思いました。) [form.cgi] (1)list.cgiから送られてきたデータを、内部で再度変数化。 (2)(1)整形してをフォームに表示する。 (3)”送信”ボタン(<input type="submit">)で、サブルーチンなり別のcgiなりにデータを送ってファイルに書き込む。(ここではPOSTの方が便利) とやればファイルopenが１回減るかな、と思います。 ＞また、フォームの内容を書き換えて上書き保存をする場合、 ＞そのまま「上書き保存」の送信ボタンを押せば ＞表示された行だけ書き換えることができるんでしょうか。 ここは、何行目という特定が出来ないのであれば、 open(IN,"../indata/sdeta.txt") || die "$!"; flock(IN, 1); @data = <IN>; close(IN); とやるしかないので、@dataの要素をそれぞれsplitしながらifでの振り分けが必要になると思います。
> # (2) 内容の更新　▼をリターンに置き換えたいのです。 > $line =~s/▼/\n/; ここの置換内容のことなら、Perlの本を買ってきたり(できればラクダ本クラスのまともなやつ)「perl 正規表現」で検索したりして覚えてください。数例挙げる程度ならともかく、詳細をここに説明できるもんじゃないです。 一応、文字コードが正しければ、コメント通りの動作をするはずですが。 うまくいかないなら、どううまくいかないか、詳細に補足してください。 あと、 > my $file = 'F:\共有\PERL\test.txt'; これで入力ファイルを指定していますが、その指定方法がWindows用ですね。
Socketを使ったプログラミングをしたことがないので、はっきりとはわかりませんが、 binmode(STDOUT, ":utf8"); が、何らかの悪さをしているかもしれません。 これをコメントアウトして試してみてください。
「attribute」ってやつだな. 参考URL：http://qz.tsugumi.org/Perl_Modules_threads.html
なにがどうPerlに関係あるのかわかりませんが、 C:\WINDOWS\system32\ezsp_PX.exe自体を消去したらどうでしょうか？ (本当にそのexeがアダルト画面の原因なら)。
たぶん蛇足だと思うけどちょっと説明: ファイルテスト演算子は結局 stat してるようなもので, 「同じファイルに対して複数回のファイルテストをする」と何回も stat することになっちゃう. これは無駄なので「前に stat して得られた情報を参照してね」ってのがこいつの意味です.
> } if-else($input =~ /([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)/);{ if-else ってなに?
「一部の表現に誤りがありましたので訂正させていただきます」 って書いてるけど, 「ひとつのテキストファイルに一行にひとつづつIPアドレスが書かれています」 というなら最初の質問にあった「展開したいテキストファイル」そのものが間違ってるってことだよね. そして, この 「ひとつのテキストファイルに一行にひとつづつIPアドレスが書かれています」 が正しいなら何もする必要ないんじゃないの?
ほとんどできてます。がんばってください。 print OUT $1; は最初の一発だけ出せばいいのでopenのあとに移動すればいいでしょう。 そのあとに改行（\n）も忘れずに。
> 「ページが表示出来ない」エラー そんなエラーはPerlそのものにはありません。 例えば、このスクリプトはCGIとして実行されていて、なんかのエラーがあるのでhttpサーバーがエラーコードを返して、それをブラウザが「ページが表示出来ない」とエラー表示している、そんな感じではないでしょうか。 まずは、真のエラーの理由と突き止めるのが先決です。 PCで実行してエラーメッセージを確認する、とか、 use CGI:Carp を使ってエラーメッセージをブラウザに表示させる、とかです。 少なくとも、例示されている部分には、多少変なところはありますが、「300件を越えるとエラーになる」というような箇所はありません。あるとすれば、ここに書いてないもの、例えば url_ckeck とかです。 あとは、変数を宣言しなくても使えるPerlですが、ある程度の規模になると、やはりきちんと宣言して有効範囲を限定させることが、意図しない間違いの防止に繋がります。 use strict; use warnings ;は積極的に使いましょう。
> my $str = "(?:.*?(?:$data)){$more_than}"; > の方がちょっとだけいいかも 確かに。 more_than が大きくなるとぜんぜん違ってくるでしょうね。
perl のバージョンにもよりそうなところだがいったん内部コードに変換するのが簡単じゃないかな.
や, そういわれても, ここに挙がっている情報だけでは 「ソースとデストの両方に『使用中の IP アドレス』が入っている行を取り出す」 としか言いようがないです. で, おそらく最も素直な方法は 「『ソース』と『デスト』を取り出してそれぞれが『使用中の IP アドレス』かどうかを確認する」 ってことになると思う. 速度はさておき. ぶっちゃけたところ, どう書いたら 「ソースかデストのどちらかにそれが入っているだけでその行が抽出されてしまいました」 なんてことになるのか想像できない.
コマンドプロンプトで。 >perl -c read.cgi >perl -c patio.cgi とやると、何行目がエラーになってるか表示されます。 スラッシュが１個抜けてるようですが、適宜やりたいようにどうぞ。
$str =~ s/\[url=((?:htt|ft)ps?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)\](.*?)\[\/url\]/<a href=\"$jumpcgi?$1\" target=\"$target\" rel=\"nofollow\">$2<\/a>/ig; を $str =~ s/\[url=((?:htt|ft)ps?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)\](.*?)\[\/url\]/<a href=\"$1\" target=\"$target\" rel=\"nofollow\">$2<\/a>/ig; にする。 デフォルト http://www.kent-web.com/bbs/patio.html 使ったらどうです？ いろいろ改善したいところがあるようですが、 こういう無駄な機能はないです。
これまた、めんどくさいことしたいんですねえ。 簡単に。 $str =~ s/\[list=1\](.*?)\[\/list\]/<ol style="list-style-type: decimal">$1<\/ol>/g; $str =~ s/\[list=A\](.*?)\[\/list\]/<ol style="list-style-type: upper-alpha">$1<\/ol>/g; $str =~ s/\[list=a\](.*?)\[\/list\]/<ol style="list-style-type: lower-alpha">$1<\/ol>/g; $str =~ s/\[list=I\](.*?)\[\/list\]/<ol style="list-style-type: upper-roman">$1<\/ol>/g; $str =~ s/\[list=i\](.*?)\[\/list\]/<ol style="list-style-type: lower-roman">$1<\/ol>/g; $str =~ s/\[list\](.*?)\[\/list\]/<ul style="list-style-type: disc">$1<\/ul>/ig; $str =~ s/\[\*\]/<li>/ig; でどうでしょう。 ただし、[list=○][/list]内にない[＊]も<li>に変わります。 また、 [list] [*]aaa [*]bbb [/list] と書いたら<br>が自動で入るのでおかしくなるかも。 [list][*]aaa[*]bbb[/list] と書けばOK。 完全に対応させる気力はなかった。 ごめんなさい。 これは増やせば増やすほど負荷が増すので注意した方が良いです。
read.cgiの1031行目～1032行目付近 # クッションページに強制アクセス $msg =~ s/(?<!$jumpcgi)([^=^\"]|^)((?:htt|ft)ps?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)/$1<a href=\"$jumpcgi?$2\" target=\"$target\" rel=\"nofollow\">$2<\/a>/g; #$msg =~ s/([^=^\"]|^)(http[s]?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)/$1<a href=\"$2\" target=\"$target\" rel=\"nofollow\">$2<\/a>/g; でエスケープされているのを逆にします。 # クッションページに強制アクセス #$msg =~ s/(?<!$jumpcgi)([^=^\"]|^)((?:htt|ft)ps?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)/$1<a href=\"$jumpcgi?$2\" target=\"$target\" rel=\"nofollow\">$2<\/a>/g; $msg =~ s/([^=^\"]|^)(http[s]?\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%\,]+)/$1<a href=\"$2\" target=\"$target\" rel=\"nofollow\">$2<\/a>/g;
投稿者自らが修正した場合、更新されると思いますが、 管理者が修正した時に更新させたいということですか？ それなら、 edit_log.pl の129行目、130行目の $time=$ptime; $date=$dat; をコメントアウトしてあげれば良いと思います。 #$time=$ptime; #$date=$dat;
jump.cgiの20行目 if (index($ENV{'HTTP_REFERER'},$siteurl) != 0) { &error("他サイトとの共有は出来ません"); } をコメントアウトします。 #if (index($ENV{'HTTP_REFERER'},$siteurl) != 0) { &error("他サイトとの共有は出来ません"); }
アイコンはinit.cgiの287行目と288行目で指定します。 $smile1 = 'smile01.gif smile02.gif smile03.gif smile04.gif smile05.gif smile06.gif smile07.gif'; $smile2 = '(^^) (^_^) (+_+) (^o^) (^^;) (^_-) (;_;)'; 半角スペースで区切って記述します。 $smile1で区切った順と$smile2で区切る順番は連動されているので、 順番どおりに挿入します。 タグについては、 read.cgiの1301行目～1329行目で記載します。 指定したものに沿って記載するだけです。 RSS機能も修正しなければなりません。 patio.cgiの606行目～614行目までを修正します。
あなたが「使うこともできる」の意味を勘違いしている可能性は考えられます. 「値を代入できる」とは, 一言も書いてないですよね.
LFの処理系でCRLFのファイルをそのまま読み込み:CRLFのまま残る →LF改行のファイルだとして、CRLF改行に変換:もとのCRはそのまま、LFがCRLFに変換される →CRCRLF ということだと思われます。 で、CRLFが出てくるのでWindowsを使っていると思いますが ・CGIを実行しているのはどこ? ・出力ファイルはどこにできるの?WindowsPC上でなかったらどうやってコピーしてくるの? Windows → Linux等のunix系で動作しているhttpサーバーで CGIを実行 →ファイルをアップロード(このときはバイナリーモード) → サーバー上にファイルが作成 →ftpでPC へ(このときはテキストモード) ってなってませんか? 対処方の一つは、どこかでCRを取り除くことです。 foreach $gyou ( < DATA > ) { $gyou =~ s/\r//g; #←とか print $gyou; }
No 2 の Tacosan の回答で終わっていると思う。 無粋に例をあげると my @hairetsu = qw/ tom john kerry micky /; my @joinned = map { "hello " . $_ } @hairetsu; foreach my $str (@joinned) { print $str, "\n"; } みたいな感じ。 この例では、配列要素の前に固定文字列をくっつけている けど、後ろにつける場合や、固定じゃない文字列をくっつける 場合等さまざまある。
＞「あらゆるケースに対応したコードを書くのは大変」なので、コード作成は諦めた方が良いのでしょうか！ あらゆるケースに対応することをあきらめれば簡単に書けます。 「行頭が " で始まらない行があれば、前の行に続ける」 だけであれば、私がNo2に書いた sed スクリプトでも良いし、Perlなら、 $x=""; while(<>){ chomp($x) if /^[^"]/; print $x; $x=$_; } print "\n"; 末尾の空行も消えちゃいますが。
一応、検索に有効なキーワードを入れてあったんだけど > Unmatched [ in regex; marked by <-- HERE in m/^\*+\s*バー 「ダメ文字」で検索。例えば http://sites.google.com/site/fudist/Home/grep/sj … ーに[が含まれているため、ここで[が始まっているのに対応する]が無い、というエラー。 []で括ってあったときは、[の中に[を書くと、「[という文字」の意味になるので、エラーにならなかった。 ー[] とすると、 「ー」の1バイト目+ [[] となって、「ー」の1バイト目+「[という文字」 となって、ーにマッチする。 あるいは、\Q \Eでメタ文字を無効にする。 > そのややこしい部分をどのように記述すればよいのかを質問したつもりでした。 「perl unicode」で検索。例えば、以下のところとか。 http://www.lr.pi.titech.ac.jp/~abekawa/perl/perl … http://www.rwds.net/kuroita/program/Perl_unicode …
Web サーバによってはファイルの存在するディレクトリとは異なるディレクトリで実行される場合がある、というのを聞いたことがあります。標準モジュールの Cwd を使って、確認してはどうでしょうか。 use Cwd; $dir = getcwd(); # CGI に $dir を埋め込んで表示してみる
\&sub1 とかいうように、関数名だけ(Bareword:剥き出しの単語)ではなく、関数のリファレンスであることを明記しろ、ということでは。
浮動小数点だから、仮数部と指数部で表現できる数値表現のうち、もっとも近いものに丸められるからでは？ my $num1 = 1 / 3; printf "%.64f\n", $num1; #0.3333333333333333148296162562473909929394721984863281250000000000 my $num2 = $num1 * 3; printf "%.64f\n", $num2; #1.0000000000000000000000000000000000000000000000000000000000000000 http://perldoc.jp/docs/perl/5.10.0/perlnumber.pod http://ja.wikipedia.org/wiki/%E6%B5%AE%E5%8B%95% …
無名配列は? !isDependency( [ "aaa" , "bbb" , "ccc"] , [ "000" ] ) ; あとは、いったん変数に入れるか @a=( "aaa" , "bbb" , "ccc" ); @b=( "000" ) ; !isDependency( \@a, \@b ) ;
まず、よく使われる日本語関係のライブラリですが、下記の様になります。 ---------------------------------------- ■ jcode.pl http://mikeneko.creator.club.ne.jp/~lab/kcode/jc … 対応Ver.　　　 : Perl4以降 対応文字コード : JIS(ISO-2022-JP), EUC-JP, シフトJIS 歌代和正さんによる日本語コード変換ライブラリ。 ■ Jcode.pm http://openlab.jp/Jcode/index-j.html 対応Ver.　　　 : Perl5以降 対応文字コード : JIS(ISO-2022-JP), EUC-JP, シフトJIS, UTF-8, UCS-2 小飼弾さんによる日本語コード変換ライブラリ。jcode.pl の後継を意図？ ■ Encode.pm http://search.cpan.org/dist/Encode/Encode.pm 対応Ver.　　　 : Perl5.8以降 対応文字コード : JIS(ISO-2022-JP), EUC-JP, シフトJIS, UTF-8, UTF-16, etc... Jcode.pm と同じく小飼弾さんによる文字コード変換ライブラリ。Perlの標準ライブラリに含まれる。Jcode.pm の後継。 ---------------------------------------- > とするとGETでの受渡も問題なかったのですが、２つを混在させても問題ないのでしょうか？ おそらく、jcode.plに含まれる関数を使っている箇所が残っていて、たまたま GET リクエストがあった際にそこを通ったのではないかと。 混在させることでエラーが発生したり誤動作することは無いと思われますが、混乱の元ですので jcode.pl の関数を使っている部分を書き換えた方が良いでしょう。 下記の行をスクリプトの中に入れれば、Internal server error の内容がブラウザに表示されるとおもいます。 use CGI::Carp qw(fatalsToBrowser); ※ エラーの情報がダダ漏れになりますので、外部に公開されていないサーバなどで試して下さい。また、修正し終わったらこの行は取り除いてください。 Perl 5.8 以降は、内部表現がUTF-8になるなど文字列全般の扱いが大きく変わったので、仕様をよく確認しておいた方が良いです。下記のサイトなどに詳しく説明されています。 http://hikoboshi.org/perl/utf8.html http://www.rwds.net/kuroita/program/Perl_unicode … http://hikoboshi.org/perl/doc/encode_old.html Perl 5.8 以降では、入力された文字列は一度内部表現(UTF-8)に直して必要な処理を行い、出力する際にエンコードし直すのがセオリーようです。
Perlの第一の長所は豊富なライブラリなので、自分で作らずライブラリを利用しましょう。 ＞これを機にきちんとした方法 それが正しいPerlの使い方です。 http://www.google.co.jp/search?q=perl+csv%E3%83% …
n オプションをけると上手くいくかも http://linuxjm.sourceforge.jp/html/netkit/man1/r … csh(1) を使用している場合に、 rsh の入力を端末にリダイレクトしたままバックグラウンドで動作させると、リモートコマンドから入力がない場合でも rsh は動作をブロックする。入力が必要ない場合は、 -n オプションを用いて rsh の入力を /dev/null にリダイレクトするべきである。
>internal server errorになってしまいます。 中味を見ていないので、何とも言えないです。 >やはりあの難しいけど正しいチェック方法は簡単には利用できないのですかね？ 利用はできますよ。#後で記載 >,(カンマ） のチェックをスルー と記載されていますが、参照ページの正規表現では,(カンマ）は含まれています。 実際にそういうページは存在しますし。 そのまま使えばいいだけだと思いますが、 まあ、とりあえず、以下でお試しを。 $http_URL_regex = q{^\b(?:https?|shttp)://(?:(?:[-_.!~*'()a-zA-Z0-9;:&=+$,]|%[0-9A-Fa-f} . q{][0-9A-Fa-f])*@)?(?:(?:[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?\.)} . q{*[a-zA-Z](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?\.?|[0-9]+\.[0-9]+\.[0-9]+\.} . q{[0-9]+)(?::[0-9]*)?(?:/(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f]} . q{[0-9A-Fa-f])*(?:;(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-} . q{Fa-f])*)*(?:/(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f} . q{])*(?:;(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*)*)} . q{*)?(?:\?(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])} . q{*)?(?:#(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*} . q{)?$}; # 正常なリンク $url = "http://ja.wikipedia.org/wiki/%E6%AD%A3%E8%A6%8F% … print "Test1<br>"; if($url =~ /$http_URL_regex/) {print "match";} else{print "no match";} # 「あ」を入れてみた。 $url = "http://ja.wikipedia.org/wiki/%E6%AD%A3あ%E8%A6%8F%E8%A1%A8%E7%8F%BE"; print "<br>"; print "Test2<br>"; if($url =~ /$http_URL_regex/) {print "match";} else{print "no match";} # ホストなし $url = "http://%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE"; print "<br>"; print "Test3<br>"; if($url =~ /$http_URL_regex/) {print "match";} else{print "no match";} # ポート付き $url = "http://okwave.jp:80"; print "<br>"; print "Test4<br>"; if($url =~ /$http_URL_regex/) {print "match";} else{print "no match";} # へんなところにポート付き $url = "http://okwa:80ve.jp"; print "<br>"; print "Test5<br>"; if($url =~ /$http_URL_regex/) {print "match";} else{print "no match";} ただ、正規表現が複雑になれば複雑になるほど、 サーバー負担も大きくなるということです。 当初の質問文には厳密にでなくてもかまわないとあったんですけどね・・・。
同じサーバー内で、ファイルの絶対パスをユーザーが指定するという前提で説明します。 複数の関数を使って可能です。 #!/usr/local/bin/perl #ドメインの取得（http://xxx.xxx.xxx/） $domain=$ENV{'HTTP_HOST'}; #ファイルアドレスを指定（ドメインの下xxx/xxxx.xxx) $file='xxx/xxxx.xxx'; #ファイルアドレスを$file2に残す。 $file2=$file; #/を_に変更 $file=~s/\//_/g; #日付を指定した形にする $zisa =0; ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time + $zisa * 60 * 60); $mon = ('1','2','3','4','5','6','7','8','9','10','11','12')[$mon]; $timestring = sprintf("%d%02d%02d_%02d%02d%02d_",1900+$year,$mon,$mday,$hour,$min,$sec); #くっつける $file=$timestring.$domain.$file; print "Content-type: text/html\n\nｈｈｈｈｈｈｈｈｈｈｈｈｈｈｈ$file2/$file"; #さいごにファイル名を変更する use File::Copy 'copy'; copy ($file2,$file ); exit;
Perlでどうのこうの以前の問題です。 リモートのコンピュータにリモートからファイルを操作できる 仕組みをいれないと話になりません。 FTPサーバーがだめならSambaとかWebDAVあたりでしょう。 つまり、サーバー設定の話です。
PLPと言うのが在ります。 <html><body> <: print "Hurrah, it works!<br>" for 1..10; :> </body></html> 参考URL：http://search.cpan.org/~shiar/PLP-3.23/
基本的な考えは合っていると思います。 単純にホームページに画像を貼り付けたいと思った時、 htmlファイルと画像ファイルが必要ですね？ タグとして <img src="画像名"> とすることで、ブラウザに画像をページ内に「読み込ませて」います。 同じように、一般的なアクセスカウンターを貼り付けようとした場合、 htmlファイルとPerlなどのプログラム（と画像でカウントを表示するなら画像ファイル）が必要です。 画像のアクセスカウンターを表示するなら、 <img src="アクセスカウンター実行ファイル"> として、ブラウザに実行ファイルをページ内に「読み込ませ」ます。 この時に、実行ファイルがアクセスを記憶して、 表示するべきカウントを表示することになりますが、 IMGタグで記載しているので、プログラム側で画像形式にして出力することになります。 JavaScriptによるカウンターを表示する場合には、 <script type="text/javascript" src="アクセスカウンター実行ファイル"></script> としてブラウザに実行ファイルをページ内に「読み込ませて」います。 この時に、実行ファイルがアクセスを記憶して、 表示するべきカウントを表示することになりますが、 数字のテキストで表示するなら、JavaScriptによる記載で、数字を出力。 画像で表示するならJavaScriptによる記載で、画像タグを出力。 ということになります。 いろいろなタイプのアクセスカウンターはありますが、 その一例ということで参考になりましたら。
>カラム属性のようなもの そうです。 すみません、「BN」ではなく、「BIN」でした。失礼しました。 DBの管理ツールとして「MySQL Workbench」などを使用しているとわかりやすいと思いますが、 「BIN」の他にも「PK」=プライマリキー、「NN」=not nullなどのチェックがあり、そういった設定項目の一つです。
質問に対して質問で返すというのは抵抗があるのですが、質問者様のあわてぶり以外伝わってこないのであえて・・・ １．エラーを出しているサーバーアプリとは？ 　　それぞれの文言から３種の状況が考えられますがそれぞれに関連性がまったく無いので矛盾だらけです 　「サーバーにアップするとエラーが出ます」→ファイル転送サーバアプリとファイル転送クライアント間のエラー？ 　「プログラムの部分をいじるとエラーが出ます」→コマンドラインでのプログラム実行上のエラー？ 　「サーバーの設定上エラー番号はわかりません」→サーバアプリ環境下での実行とはWebサーバでCGIとして実行？ ２．エラーと認識できている理由 　　何をもってしてエラーとして識別しているのかがわからない。 　　エラーメッセージのようなものが出ているのなら記述すべきかと思います。 　　「エラーが出ます」では第三者は何をどう判断してよいものかさっぱりわかりません。 ３．下記前文と後文とでは言っていることが正反対 　「たとえば$a=1;　の数字を変えてまた元に戻してサーバーにアップするとエラーが出ます。」 　「プログラムの部分をいじるとエラーが出ます。パラメーター設定の部分の数値を変更するだけではエラーがでません。」 　　「数字の部分」とは変数$aに対するパラメータのはずですが前文では変えるとエラーが出るといって後の分ではエラーが出ないといっています。 　　または、「パラメーター設定」というのはプログラム内に記述されたものでなくプログラムに渡す外部パラメータのことを指すのでしょうか？　だったら今回の質問とは何の関連性も無いのでないでしょうか(逆に記述があることでわけがわからなくなっています)。 文面から、あたふたぶりはうかがえるのですが、肝心なことをはしょりすぎていて質問内容から判断の材料となるべきものが見えてきません。 落ち着いて、あなたの元にいない第三者に質問しているという状況を踏まえた上で、状況の詳細を説明してください。
$ENV{'REQUEST_URI'}　では取得できないと思います。 htaccessで、 RewriteEngine on RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.*)$ maintainace/cgi/make_page_err.cgi?$1 [L] これで　$ENV{'QUERY_STRING'}　で取得できるのでは。 参考URL：http://webings.net/htaccess/rewriteerror/
ですから、Cygwin動作中は ホームディレクトリ(bashを起動してログインしたディレクトリ)は、 Cygwin表記で /home/ユーザー名, Windows表記で Cygwinのインストールしたディレクトリ\home\ユーザー名です。 「デスクトップとか、マイドキュメントとかではありません」 > **@room ~ > $ ls > これがホームディレクトリ(~)でlsを実行した結果です。何もありません。 (正確には、.で始まるファイルやディレクトリがあるかもしれませんが) > $ cd cheminf ホームディレクトリの下になにも無いのですから、移動などできません。よって > bash: cd: cheminf: No such file or directory というエラーになります。 簡単な対処は、デスクトップにあるcheminfディレクトリをホームディレクトリの下に移動してくることです。
foreach文はオリジナルを置き換えますので注意して使ってください。 ＞$data_1 =~ s/\n//g; # オリジナル（@BASE）の対象データが書き換えられる。
CGI としてブラウザでアクセスするのではなく、コマンドラインで実行するとデータが表示されませんか。 こちらで質問としてあげられたコードをコピペしてコマンドラインで実行すると JSON データはちゃんと表示されています。 CGI としてアクセスするとうまく表示されない理由は、このプログラムで作成される出力が HTML ドキュメントとして正しくないからです。 Content-Type: text/html と <html>との間には空行が必要ですし、なによりブラウザに表示するコンテンツは、<body></body> の間に入っていなければなりません。 HTML ドキュメントの構造について調べなおすことをお勧めします。
＃１です。 ＞今回は、完全一致ではなく、Bファイルに入っているリストのURLから始まるものにしたいと考えているので、前の手法（hash連想配列）が使えないと考えております。 ＞この方法は　Bファイル内のURLと完全一致のものを探すということになりませんでしょうか？ あっそうか。 じゃindex関数使えばいいんじゃないでしょうか。 http://perl.enstimac.fr/perl5.6.1/5.6.1/pod/perl … ★ ｏｐｅｎ　Ｂ，”Ｂ．ｔｘｔ”　ｏｒ　ｄｉｅ　＄！；　＃タブ区切りなので拡張子を変更 ｗｈｉｌｅ（＜Ｂ＞）　｛ 　ｃｈｏｍｐ；　＃改行を取る 　＄ｂ＿ｕｒｌ｛＄＿｝　＝　１；　＃ハッシュのキーに入れる。値はテキトー ｝ ｃｌｏｓｅ　Ｂ； ＠ｂ＿ｕｒｌ　＝　ｓｏｒｔ　ｋｅｙｓ　％ｂ＿ｕｒｌ； 　＃ソートはシュウォーツ変換をすると早くなる。でもこのプログラムここが律速段階ではない ｏｐｅｎ　Ａ，”Ａ．ｔｘｔ”　ｏｒ　ｄｉｅ　＄！； ｏｐｅｎ　Ｃ，”＞Ｘ．ｔｘｔ”　ｏｒ　ｄｉｅ　＄！； ｗｈｉｌｅ（＜Ａ＞）　｛ 　（ｕｎｄｅｆ，＄ｕｒｌ）＝ｓｐｌｉｔ　／￥ｔ／；　＃２個目の値にしか用はない 　ｆｏｒ　＄ｂ＿ｕｒｌ（＠ｂ＿ｕｒｌ）　｛ 　　＃ここは普通の配列サーチなので「番兵」を使ったりすると高速化できる 　　　ｉｆ　（ｉｎｄｅｘ（＄ｕｒｌ，＄ｂ＿ｕｒｌ））｛ 　　　　　ｐｒｉｎｔ　Ｃ； 　　　　　ｌａｓｔ； 　　　｝ 　｝ ｝ ｃｌｏｓｅ　Ａ；　＃ファイルハンドルが間違ってた ｃｌｏｓｅ　Ｃ； ★ Larry Wallによると、組み込みのgrep関数よりもPerlは速いっていうことなんですけど、どうなんでしょうね。 上のプログラムも＠ｂ＿ｕｒｌがオンメモリなんでそこそこ速いと思います。 ま、やさしい例ってことで。
なんか言葉が足らないんだよな～. 例えば #8 のお礼で 「Encode::decodeを試してみましたが、うまくいきませんでした。」 って書いてるけど, これであなたが「どのように試したのか」わかる人がいると思いますか? また, #10 の方でも 「はい、HTMLは確認しています。」 と書いてるけど, 具体的にどのように確認したの?
Net::Twitter は特に入れるつもりはないので試してはいません。その点はご了承を。 CPAN(というかPerl)のモジュールには、高速化や、別のライブラリとの接続等の目的で、C言語などで実装されているものもあります。 なので、Xcodeが必要なケースがあります。 せめて、終ったときの最後の数行くらいは目を通してください。失敗したときにはその旨が表示されているはずです
$addressにはどのような形式の住所が入っているのでしょうか？ 例えば市の前に都道府県があるとか、 「大阪府大阪市旭区・・・」 いきなり市から始まっているとか、 「大阪市旭区・・・」 郵便番号＋空白の後に続いているとか、 「〒654-4871 大阪市旭区・・・」
stdio::getFormDataに対しての見識がないので適切な回答はできませんが、以下を試すとどうなるでしょうか？ %in = (); stdio::getFormData(\%in,1,"sjis",1,",","$updir/"); を、 use CGI; %in = map decode_utf8($_), CGI->new->Vars; に変更。 これで文字化けが解消する可能性はありますが、stdio::getFormDataに詳しい人が回答してくれるかもしれませんので、質問はオープンのままにされたほうがいいと思います。
本家のFFFTP には、「ホストの漢字コード Unicode(UTF-8)」という設定は存在しないのですが、 どのFFFTPを使っていますか? おそらく独自にUnicode対応改造された改変版を使用されているのだと思いますが、 症状からすると、BOM付きのUTF-8でアップロードしてしまっているように見受けられます。つまり、アップロードソフトの漢字コード変換の問題です。 BOMとは、Unicode(UTF-16)において、ファイルの先頭に付加されて、バイトオーダを識別するための特殊なコードです。本来UTF-8には不要なものであり、UNIX系のサーバなどでは、これが付いているとCGIのファイルとして認識できなくなってしまうのですが、 Windows上のメモ帳など、一部のソフトでは、UTF-8でもBOMを付けるものが存在します。 もし、「UTF-8N」という設定があるのであれば、それで試してみてください。 (規格で定められた名称ではありませんが、UTF-8にBOMを付ける仕様のソフトでは、BOMを付けないものをUTF-8Nという名前の別設定で用意している場合があります) そういう設定がないのでしたら、最初から Perl のファイルを UTF-8N(正しいUTF-8)で作成・編集し、無変換設定でアップロードするしかないかと思います。 とりあえず、たとえば無料のテキストエディタでも、たとえば EmEditor Free なんかは、正しいUTF-8にも対応しています。 http://jp.emeditor.com/modules/download2/rewrite …
> スペースを省いてみたり って、どこのことです? > $str = " $B$F$9$H (B";　#jisコードで"てすと" の $Bの前と(Bの前でしょうか? だとしたら、スペースなのが間違いです。 本来入るべきなのは ESC (ASCIIコード 0x1B)です。 制御文字なので、エディタや端末、フォント等の関係で、表示されなかったり、空白表示されたり、□や別の文字になったりすることがあります。 $str = "\e$B$F$9$H\e(B"; # \eはESCを表すエスケープシーケンス $str = "\033$B$F$9$H\033(B"; # \0XXで8進でコード指定 $str = "\x1b$B$F$9$H\x1b(B"; # \xXXで16進でコード指定 余談になりますが、今回は大丈夫なようですが、ダブルクォートの中に$を書くと以降が変数名だと解釈されるケースがあります。
「思ったようにできない」とは, 具体的にはどう「思ったようにできない」のですか? ・意図した出力 ・実際の出力 をそれぞれ示してください. まあ, 確かに最後の $view = ${"FORM$_"}; はおかしいけどね....
http://www2u.biglobe.ne.jp/MAS/perl/waza/yesterd …
「PerlでCGI使っている」かどうかは関係ありません。 最終的に出力されるhtml(とCSS,その他)がどうなっているかです。 CSSで表現できない物はCGIを使っても表現できません。 CSSを使わない、となると、(今では悪者扱いされてる)tableによるレイアウトくらいしか思いつきません。
> foreach ( split(/\n/, $body) ) { > &jis("$_"); > print MAIL $_, "\n"; > } Shift_JISの$_をそのまま出力してるから。 現在の&jisの仕様は ・引数: shift_jisの文字列 ・戻り値:無し ・副作用: グローバル変数 $msgが、入力引数のshift_jis文字列をISO-2022-JPに変換した文字列になる です。 > また、元々参考にしたものでは####1####に > retern $msg; > があったのですが、これを入れるとsyntax errorになったので、これをコメントアウトしたらエラーにはならず送信そのものはできました 「return」 です。スペルが違います。 エラーになったからコメントアウト、では何の解決にもなりません。 「なんでもOK」なPerlですが、ある程度のものを作ろうと思ったら、やはり、プログラム構造はちゃんとした方がよいです。 グローバル変数は必要以上に使わないことです。 use strict ; を入れて変数宣言を強制するのもいいでしょう。 一例です # 引数: shift_jisの文字列 # 戻り値:ISO-2022-JPに変換された文字列 sub jis{ my $msg = $_[0]; Encode::from_to($msg, "shiftjis", $charset); return $msg ; } # $_は便利なのですが、 # 注意して使わないと意図しないところで置き換わってしまいます foreach my $l ( split(/\n/, $body) ) { print MAIL &jis($l) . "\n"; } なお、base64にも同様の問題(グローバル変数 $strの使用) があります。
問題点は４つあります。 今回の不具合においては１と２が致命的。 ３は比較的軽微なバグ。 ４以降は推奨される書き方です。 １．読み込み処理と書き込み処理が分かれているのにロックを個別に行っている。 「データを読む～データを改変する～データを書く」を一度のロックで行わないと 途中で他のプロセス処理が割り込む可能性がある。その結果、複数のプロセスが 矛盾するデータを書き込もうとした場合にいずれかのデータが失われる。 回避方法としては、下記のいずれかが有効。 ・１つのファイルに対する読み書きの場合は１回のオープン＋ロックで済ませる。 ・複数ファイルを同時に処理する必要がある場合には、ロック用ファイルを用意し これに対してロックを行ってからすべての処理を行う。 あるいは、処理の順番的に必ず最初にオープンするデータファイルがある場合は これに対してロックをかけ、すべての処理を行ってから最初のファイルを最後に クローズすることでロック用ファイルを兼ねる。 ２．（上記と併せて）書き込み処理時に上書きモード'>'でオープンしている。 上書きモードでは、ファイルオープン時にファイル内容は一度すべて消去される。 この状態で１．の状況が発生した場合、ちょうど消去されたばかりのファイルを 別プロセスが読み込むために、既存データが消えることになる。 ファイルロックはファイルオープンとは同時には行うことができないため、 ロックがかかるまでに時差が発生することに注意する。 ３．1行読み出し $lines11 = <IN11> において、末尾の改行を削除していない $accに改行がついたままになっている。$accに変更があった行だけは数値代入の 副作用で改行が外れるが、変更がなかった行は改行がついたままの状態で 書き込み時にさらに改行が付加されるため、データに意図しない空行が発生する。 ４．Perl4の文法で記述されている。 Perl4の文法でも、正しく記述すればこれ自体が不具合を起こすことはないが、 プログラムが大規模になるほどスクリプトのデバッグが難しくなる。 Perl5では、以下のような機能が用意されている。 ・宣言されていない変数などを文法エラーにする use strict; プラグマ 変数名のタイプミスを検出できる ・未定義値に対する演算などに警告を出す use warnings; プラグマ 変数の初期値設定忘れを防ぐ。ハッシュキーの打ち間違いが見つかることも。 ・ブロック内でのみ使用できるローカル変数の宣言 my 変数名の重複による誤動作等を防ぎ、変数の局所化によって見通しが良くなる ・ファイルハンドルにもmy変数を使える Perl4ではグローバル変数としてしか扱えなかったファイルハンドルを局所化 できる。スクリプト内でファイルハンドルが重複することによる誤動作を防ぐ。 上記を踏まえて修正したスクリプトは以下になります： sub count_up { my($countcsv, $page) = @_; use Fcntl; sysopen(my $fh, $countcsv, O_CREAT|O_RDWR) or error(" countcsv をopen出来ません"); flock($fh, 2); seek($fh, 0, 0); my $data = ''; while(my $line = <$fh>) { chomp $line; my($seq, $acc) = split /,/, $line; if($page == $seq) { $acc++; } $data .= "$seq,$acc\n"; } seek($fh, 0, 0); print $fh $data; truncate($fh, tell($fh)); close($fh); } count_up($countcsv, $page);
ぶっちゃけ何をしたいのかが全く読み取れない. はっきりいって, せいぜい「書いた人間にしか理解できない」文章. まず 縦方向にＤｅｔａ1　　$n(配列順番） 横方向にＤｅｔａ２　 $t(配列順番） とか書いてあるけど, これはなに? あと「新規登録」だの「登録変更」だの書いてるけど「何を」「どこに」登録するのかとか「どこにある」データを「どのように」変更するのかとかがさっぱりわからん. 「Ｚ1,0からＺ0,x」がどこからどこまでをさしているのかわからんし, 「$joi」とか「$com」とかも意味不明. ど～でもいいけど「Deta」って何?
# IPアドレスのチェック結果に応じてカウント処理 sub IpCheck { _IpCheck($addr, $iplog) ? CNTUP() : NoCnt(); } # IPアドレス毎の書き込み回数チェック sub _IpCheck { my $addr = shift;# 調べたいIPアドレス my $iplog = shift;# データファイル名 my $count_max = 5;# IPアドレス毎の最大書き込み回数 # 現在日付の取得 my $today = sub { my($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime($_[0]); sprintf('%04d/%02d/%02d', $year+1900, $mon+1, $mday); }->(time); # IPアドレス毎の書き込み回数の読み書き use Fcntl; sysopen(my $fh, $iplog, O_CREAT|O_RDWR) or Error(5);# 読み書きモード／ファイルがなければ新規作成 eval { flock($fh, 2); };# ちゃんとロックしないと壊れます eval { chmod(0666, $fh); };# 動かない環境もあるので念のためeval binmode($fh, ':crlf') if($^O =~ /MSWin32/);# Windowsでは改行コードをCR+LFで読み書き seek($fh, 0, 0); my $lastday = <$fh> || '';# データファイルの1行目の日付を読む chomp $lastday; my %count; if($lastday eq $today) { # 日付が同じ場合だけ過去データを読む while(my $data = <$fh>) { chomp $data; my($ip, $c) = split /\t/, $data; $count{$ip} = $c; } } $count{$addr}++; return if($count{$addr} > $count_max);# 回数オーバーならundefを返す seek($fh, 0, 0); print $fh $today."\n";# データファイルの1行目に日付を保存 foreach my $ip (sort keys %count) { print $fh $ip."\t".$count{$ip}."\n"; } truncate($fh, tell($fh)); close($fh); return 1;# 書き込み可能な場合は1を返す } # Perl5の入門書を読むことをお勧めします。 # Perl4は絶滅して久しいですし、何よりPerl4で書かれたプログラムは読むのがつらい・・・
ちょっと修正 my $digit = qr{(?:\d){4,}}; my $digit_with_comma = qr{\d{1,3}(?:,\d\d\d)+}; これ以外は同じ
5.10から Tk ではなく Tkx というモジュールが添付されるようになっているのですが、 それの場合質問にあるような警告は出ないようです。 ただし、スクリプトを手直しする必要があります。 あるいは、Windows7の設定でメニューで使用するフォントをxpと同じ MS UI Gothic にしてもでないようになるかもしれません。 現状ではメイリオを使うようになっていると思います。 Windows フォントを変更する http://windows.microsoft.com/ja-JP/windows7/Chan … この手順でウィンドウの色とメトリックの変更画面まで行って、 「メニュー」のフォントを切り替えてみてください。
＞このやり方だと、グループが増えるとそのまま行数が増えて冗長なので、グループごとの配列を１つの配列にまとめたいのです。 これは配列の配列を使うのではなく， 無名配列を値にもつ 連想配列と楽かな． ＞また、配列の配列？とした場合、以下のような処理はできるのでしょうか？ できません． Perlでの多次元配列の扱いを調べましょう． ＃端的にいってしまえば，一次元配列で各要素が無名配列か ＃配列へのリファレンスになってればそれは多次元配列・・ サンプルコード： use strict; use warnings; my %all; sub ave{ my $array=shift; my $ave=0 ; foreach my $i (@$array){ $ave = $ave + $i; } return $ave/(scalar @$array); } while(<DATA>){ chomp; my ($key, $val)=split(/=/,$_); if (defined $all{$key}){ push(@{$all{$key}}, $val); }else{ $all{$key}=[$val]; } } print "Average of A is ", ave($all{"A"}), ".\n"; print "Average of B is ", ave($all{"B"}), ".\n"; print "Average of C is ", ave($all{"C"}), ".\n"; __DATA__ A=100 B=200 C=300 A=110 B=210
質問の趣旨に合っているかわかりませんが、プログラムを作ってみました。ロックした後の処理に時間がかからなければ、順番どおりに実行されると思います。 main.pl -------------------------- #!/usr/bin/perl foreach (1 .. 10) { system("./lock.pl $_ &"); } lock.pl -------------------------- #!/usr/bin/perl use Fcntl ':flock'; use POSIX ':sys_wait_h'; $arg = $ARGV[0]; sleep $arg; $pid = fork(); die "Can't fork: $!" unless defind $pid; if ($pid) { do { $kid = waitpid(-1, &WNOHANG); } until $kid == -1; if ($arg == 10) { print "MAIN LOCK\n"; open LC, "+<lock" or die; flock LC, LOCK_EX or die; print "OK\n"; } } else { print "lock $arg\n"; open LC, "+<lock" or die; flock LC, LOCK_EX or die; print "release $arg\n"; }
参考までに、ideoneでの実行； http://www.ideone.com/lziei 質問文の例は普通に動いてるので、SJIS変換してるあたりに原因があるかも。ないかも。
$fileName = $query->param('fileName'); で取得できるのはアップロードしたときのファイル名で、CGI.pmはそのファイル名とは別の名前でサーバ上に一時ファイルを作ります。 $query->upload()で一時ファイルのファイルハンドラを取得し、ファイルの内容を読み出します。 $fh = $query->upload('fileName'); read($fhe,$buffer,1024); ...
あなたのPC上でCGIを動かすためには、最低限Webサーバーの知識が必要です。 まずCGIが動く仕組みについて、Webサーバー(特にApache HTTP Server)と組み合わせて勉強すると、 とても幸せになれると思います。
リストをスカラーに代入すれば、リストの長さが入ります。
0100　2455　4782　のいづれかなので ~ /0100|2455|4782/ でよいのでは。
質問内容を誤解した回答がされていますが。 ※質問者の表現も良くないかも。 サーバスペースをレンタルされている業者『Xサーバー』で設定ページが用意されているcorn機能を使ってますって事ですよね。 ※ unix/linuxのcronかどうかは不明 なので、cron使っているとしても設定ページで行なった自動実行の設定は有効に機能するよう提供されているかと思います。 『自動更新の時間になったら「Cron結果の通知アドレス」で設定したメールは届く』という事からもcronへの登録自体は問題なく行なわれており、cronは登録されているプログラムを実行しようと試みていると思われます。 登録時刻に送信され届いたメールに何が起こっているか書かれているかと思いますので、その内容やそれに対する対処法がわからない場合にはそこに書かれている内容を示した方が良さそうに思います。 > hello.cgiというプログラムを実行しようとしているので cronからではなくそのプログラムを手動で実行した時の動作は確認されているのでしょうか。 ※ perl hello.cgiとして実行するのではなく、/home/●●●/▲▲▲/public_html/hello.cgiで手動実行してご確認ください。(動かない場合には実行が許可されてない[chmod +x .../hello.cgiで許可するなど]事やプログラム作成に問題があるなどが考えられます) ※ crontabコマンドは基本的にどのユーザでも使えますよ。ただし、普通は不要なユーザには開放してないので(cron/allowやcron/denyファイルに許可・拒否するユーザを登録して制御する)使えません。
全角半角、15と9と09が入り乱れてて、状況が今一つはっきりしません。 if ( レコード =~ /抽出基準日付を使ったパターン/ ) { 抽出 } みたいなことをしたい、ということでよろしいでしょうか? 入力は現行のままにしておいて、判定時に都合のいいように変換するのがてっとり早いと思います。 # 数値に揃える $rec_h = レコードを半角化 ; # 必要ならば if ( $rec_h = /^(\d+)/ ) { # 先頭の数字を抽出 $rec_date = $1 ; #抽出した数字 } else {エラー;} $date = 抽出基準日付 ; $date =~ s/^0//; # 先頭の0を取り除く if ( $rec_date == $date ) { 抽出 } # 数値として比較 # 文字列に揃える $rec_h = レコードを半角化 ; # 必要ならば if ( $rec_h =~ /^(\d+)/ ) { # 先頭の数字を抽出 $rec_date = sprintf( "%02d",$1) ; # sprintfで0付き2桁に } else {エラー;} if ( $rec_date eq 抽出基準日付 ) { 抽出 } #文字列として比較
とりあえず、正しい出力結果がほしいです。 入力ファイルの情報に提示された条件を適用しても出力ファイルの情報にはならないと思います。 出力情報のおかしいところ - 5分 → 10分 丸めるときは先優先であとのやつは削除でよいの? - 19.2 とか12.2の小数点はどこへ消えたの? - 00:50出力の+-の符号間違えてる? - 19.5のとき符号いらないんじゃなかったの? ここからは、コーディングの基本となりますが こういった変換系処理の場合、 自分がプログラムになった気持ちで一つ一つ順番に変換してみてください。 どうすれば、出力結果ができあがるか、変換条件と自分した変換が一致しているのか 検証してみるとよいです。 自分の手操作で変換が出来るようになれば、あとは、その手操作の部分を列挙することで プログラムができあがると思います。 イメージ的に必要そうなのは 1. 行単位の読み込み 2. カンマ区切りにするための split() 3. 丸めるための文字列置換(時分秒をhhn000) 4. 固定長出力用のsprintf()
・open (OUT,"> $outfile"); 作成できたかどうかのチェックが無い。 print OUT "$outfile";; という「ファイル名を出力」というのも成功していないようなので、たぶん、openに失敗している
可能なら新しい今時のperlを使いましょう。 今ちょっと昔のjperlを発掘して試して見ましたが、 --- C:\> jperl -v This is jperl, version 4.036 + 1.4(WIN32, SJIS) May 25 1996 --- このjperlだと「'c:\Program' は、内部コマンド…」エラーになりましたが、 --- C:\> perl -v This is perl, v5.8.7 built for MSWin32-x86-multi-thread --- こちらのperlだと、C:\Program Files 以下のプログラムも問題無く system で実行できました。 (使ったのはActivePerlです。Windows用のインストーラがあるので簡単にインストールできます。 http://www.google.co.jp/search?q=ActivePerl&lr=l … なお、どうしても jperl で動かす必要があるのなら、 >$cmd = "c:\\Progra~1\\Lhaplus\\Lhaplus.exe /c… で実行は可能だと思います。
勉強の仕方も書籍の選び方も人それぞれですからねぇ・・・ ただ、個人的には、言語学習はオライリー社の物を推薦します。 Perlクックブックとかなら、いろいろなサンプルが豊富に載っていると 思います。 が、しかし、リファレンスの勉強も必要かと思います。 リファレンスに関しては、同じくPerlリファレンスというのが オライリー社から出ていると思います。 しかし、リファレンスに関しては、勉強と言うより 辞書のような感じで引く形で使うため、読む本ではありません。 辞書を読んでも面白くないですよね。 ただ、オライリー社の物は比較的詳しく書かれているので、 読んでいて、あぁそうなのか！と納得できる事は多いと思います。 そういう意味では勉強になります。 MySQLに関しては、個人的にはMySQL徹底入門と言う本を 持ってますが、10年くらい前に買ってほったらかしです。 すみませんが、余りお勧めできる本を知りません。 また、質問者様が目標とされている、通販サイトの仕組みに ついて学ぶには、Webサーバー関連の知識も必要かと思います。 Webサーバーとして有名なのは、Apacheか、IISですね。 また、HTMLの知識も必要ですし、場合によっては JavaScriptやCSSなどの勉強も必要になってくると思います。 ただ、個人的にお勧めするのは、確かに書籍を用いて 体系的に学習するのも重要ですが、 まずは、実践をしてみて体感する事の方が重要かと思います。 ・ApacheをインストールしてWebサーバーを立ち上げる ・HTMLを勉強してApacheで表示させる ・PerlをインストールしてHello Worldを書く ・MySQLをインストールしてHello Worldに相当するデータベースを 作成する ・ApacheにPerlを組み込んでHello Worldに相当する ページを表示する ・ApacheにMySQLを組み込んでPerlからMySQLに接続する ・Apacheに認証システムを組み込む 位の事を1個ずつやっていくといいと思います。 初めてでもすんなり行けば3日、詰まっても1週間くらいで出来ると 思います。慣れてる人であれば、半日もかからずにできると思います。 1個1個の目標設定を限りなく低くしてありますから、 詰まった所がどこなのかわかりやすいと思います。 また、成功した時の達成感も得られます。 これらの事を一通りクリアしてから、興味がある所を 体系的に書籍で勉強したり、飽きてきたら、他の事を実践的に行って いくのはいかがでしょうか？ 目標を細切れにして、実践と知識の蓄積を繰り返しながら じょじょに積み重ねて行かれる方が挫折しにくいとは思います。
60進数 上の桁はあるの？60分で1時間みたいな。 基準は2008/12が1なの？
それは送信したメールがアドレスが無くて戻ってきてしまうということでしょうか？ だとしたら、通称「キャッチオール」アカウントを作成し、そこからhoge.plを起動する必要があります。 qmail＋vpopmail＋qmailadminでそのような機能を作成したことがありますが、具体的な方法はだいぶ昔のことなので覚えておりません。 イメージとしては、 １．存在しないアドレス宛てのメールをすべて受信するアカウントを設定する ２．受信したらスクリプトを起動する ３．スクリプトで、Toを取得して引数へ格納する
すみません、コンストラクタは一行でも書けました。 sub new { 　return ( my $self = bless {} ); }
map { $_->[1] } @$_
如何やら解決している様ですので、文字化け等が起きないようにする方法や、見やすくするための方法を書いておきます。 #!/usr/local/bin/perl print "Cache-Control: no-cache\n"; print "Pragma: no-cache\n"; print "Content-Type: text/html;charset=Shift_JIS\n\n"; print <<"EOF"; <html> <head> <title>環境変数</title> <meta http-equiv="Content-type" content="text/html;charset=Shift_JIS;"> </head> <body> <h1>環境変数</h1> <hr> EOF foreach $key(keys %ENV){ print "$key: $ENV{$key}<br>\n"; } print <<"EOF"; <hr> </body> </html> EOF exit; 参考になれば、幸いです。
if($ENV{'REQUEST_METHOD'} eq "POST"){ 　　　　read(STDIN,$buffer,$ENV{'CONTENT_LENGTH'}); } else{ 　　　　$buffer=$ENV{'QUERY_STRING'}; } $i=0; @buffer=split(/&/,$buffer); foreach(@buffer){ ($name,$value)=split(/=/,$_); $value=~tr/+/ /; $value=~s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg; &jcode::convert(*value,"sjis","","z"); $value=~s/</&lt;/g; $value=~s/>/&gt;/g; $value=~s/"/&quot;/g; $value=~s/(\n|\r)//g; } あんまり変わってませんね＾＾；；； 自分の所は、これで出来てます。
一番簡単なのは、リダイレクトですね。 分岐用のページを作っておいて、そこで分岐処理をし、個別のページにジャンプします。 「Perl リダイレクト」で検索してみてください。 ただし、POSTされてきた情報は消えたと思うので、 そのあたりは、Cookieなどで受け渡さないといけないでしょう。
<input type="file"> に対しては、ブラウザ側のセキュリティの配慮により、valueの初期値を設定することができません。あとからJavaScriptでも操作できないようになっています。 もしこれが可能になってしまうと、ローカルファイルを勝手にアップロードさせることができるようになってしまいます。 JavaScriptを併用すれば「ページを見ただけでファイルをアップロードさせる」も可能ですよね。 Windowsのレジストリなど、パスやファイル名がほぼわかっているファイルであればなおさら危険性が高まります。 なので、一旦必ずファイル選択ダイアログを出すか、テキストボックスに手でファイル名を入力させてからでないとアップロードはできません。 hiddenでファイルをアップロードするのは現時点では無理ではないかと思います。
まず、その方法では、$keyは「正規表現」として解釈されます。 例えば、 「.」(ピリオド)を検索しようとすると、全ての文字がマッチします。 また、明示的に設定したり、昔のJperlのような改造版でも無い限り、日本語は「複数のバイト列」です。 そのため、Shift_JISで顕著な、俗に「ダメ文字」と呼ばれる問題があります。 特に、正規表現では、通常「ダメ文字」と言われる\を含む文字の他にも、メタ文字として使われる文字(|等)も対象となるので、かなりの数の文字が誤判定されます。 単に文字列が含まれるかどうかだけなら、index関数を使う方が確実です。 または、\Q$key\Eとして$key中のメタ文字から特殊な意味を無くしてしまうか。 ただ、いずれの場合でも、漢字の途中から(あるいは途中まで)マッチするケースがあります。 Encodeを使ってUnicode文字列に変換して、漢字を1文字として扱うようにした方がよいかもしれせん。
補足の内容を見ていると、No.2さんがおっしゃるように、ブラウザが文字コード判別を失敗しているようにも思えますね。 UTF-8の文字列をShift-JISとして表示すると、補足にあるような文字化けが起きます。 ブラウザから手動で文字コードを選んでみるとわかるかもしれません。 ところで、LWP::Simple::getは最近仕様が変わり、文字コードを判別して、Perl内部表現文字列を返すようになってますね。 Perl内部表現はutf8なので、補足にあるような文字化けから推測して、質問者さんが利用しているLWP::Simple::getが、Perl内部表現文字列を返してる可能性はありますね。 その場合、print文等で外部に出力するときはencode関数を用いて適切な文字コードに変換してから出力する必要があります。 use Encode; $html = encode("cp932", $html); # ここでは、cp932（≒Shift-JIS）に変換 print "Content-type: text/html\n\n$html\n"; 従来のバイト文字列を返すLWP::Simple::getの場合でも、（必要であれば）適切な文字コードの変換をしてください。 use Encode; Encode::from_to($html, "utf8" => "cp932"); # ここでは、utf8 => cp932に変換 従来仕様のバイト文字列を取得したいのであれば、以下のようにLWP::UserAgentを利用すればいいと思います。 use LWP; my $res = LWP::UserAgent->new->get("http://jun.sakura.ne.jp/~dk3/result/result225.ht …); if( $res->is_error ) { print "Content-type: text/html\n\n"; print $res->status_line; exit; } my $html = $res->content; #相対指定部分の置換 $mae = '\.\./'; $ato = 'http://jun.sakura.ne.jp/~dk3/'; $html =~ s|$mae|$ato|g; print "Content-type: text/html\n\n$html\n";
$color = $Sheet -> Range("A1:B1") -> Font -> {ColorIndex}; で、いけるような気がしますが。。。
print "$i行目の要素" . $j+1 . "が空ですぞ" if $line[$j] eq ''; に辿り着きたいということでしょうか。 @csvを一行ずつ、','でsplitして@lineに入れ、 さらに@lineを１要素ずつ空文字と比較すると良いと思います。
IEのクッキーが保存されているフォルダは C:/Documents and Settings/<ユーザー名>/Local Settings/Temporary Internet Files/ ではなく C:/Documents and Settings/<ユーザー名>/Cookies/ でしょう。
えぇと, まぁ「正規表現の意味」はそれでいいんですけど, ぶっちゃけ「これで何をしたいのか」が見えないっす＞#1. 具体的には $var =~ s!/[^/]+/\.\./!/!g とどう違うんだっけなぁ, と.
ANo.2です。 たびたびすいません。 忘れていたことをみっつ １．提示しました例は、一つ目のCGIがはき出すHTMLの例です ２．文字コードには気をつけましょう。文字化けによる誤動作がいやならS-JISは使わないことです。 ３．POSTメソッドの方がGETメソッドと違ってセキュリティ上安全ということはありません（多少のリスクは減りますが）。受信する側のCGIの作り方しだいです。
遅レスすいません 余り経験のない症状ですが、XPでたまにあるらしい「ドラッグアンドドロップができない」症候群でしょうか。 「SP３をはずしたら治ったとか」 「新しいユーザを作って試したら動いたとか」 「リカバリかけたら治ったとか」 「マウスが壊れていたとか」 いろいろな対処法があるようです。 今回の場合はまず、問題点を切り分けた方がいいと思います。 １．パスが通っているかどうかの確認は、ダブルクリックで起動可能なスクリプトを組んで実行してみる。 ２．正常起動するなら、ドラッグアンドドロップの機能を別のいくつかのアプリで試してみる。 それでどちらが悪いのか（あるいはどっちも問題が無いのか）で攻め方も異なると思います。
<meta http-equiv="Pragma" content="no-cache"> が効かずキャッシュされる場合があったと思います。 キャシュコントロールならどうでしょう。 htmlヘッダではなくてhttpヘッダでの出力です。 Cache-control: no-cache, no-store, must-revalidate
一番気になるのは、そのファイル名は、保存先のOSの文字コードに一致しているのかです。 ちゃんとOSの文字コードにあわせて文字コードを変換していますか? あと、ファイル名を変更するときに1バイト文字以外がまざるとはげるなんてことはないですよね。 もし化けるようならファイル名を作る時点でバグっている可能性もあります。 前者のパターンだと、OSの文字コードを変更してあげるだけで ちゃんとしたファイル名が表示されるはず。(保存時の文字コードが違うという問題) 後者であれば、何をどうやってもファイル名は復元されないのでロジックを見直すしかないです。
実行環境はWindowsでしょうか？ dieで出力されるのは「標準エラー出力」といいます。 perl test.pl >test.log 2>error.log とすればエラー出力をファイルへ取得できます。 これをtest.logへ一緒にするには perl test.pl >test.log 2>&1 とします。 また、perl側で処理したい場合は、スクリプトの初めの方に次の行を追加して下さい。 open(STDERR, ">&STDOUT"); $| = 1; これでエラー出力を標準出力に振りかえることができます。
> ただ、ACCESSのテーブルは読めるのですが、ACCESSでLINKしたORACLEのテーブルを > よみにいくと以下のエラーが出てしまって困っています。 > error:Statement handle not marked as Active > EXCELからACCESSでLINKしたORACLEのテーブルは読めるのですが、PERLでは読めません。 ACCESSは素人なので解らないですが、想像するにACCESSは内部で他のデータベースへのリンクと判別すると、ハンドラを切り替える処理をしていると思います。 この処理はACCESSが行っているので mdb ファイルには、他のデータベースへのリンクですよというマークしかないんじゃないかと想像します。 なので、Perlでも同等の処理を加えなければならず > error:Statement handle not marked as Active と、そんなハンドラ使えないっす。とエラーになってるのかと。 エラーの文章をみると、ハンドラ名（DSN名かな？）が渡ってきているっぽいので、そのハンドラを、あらかじめ（ODBCドライバかな）用意しておけば使えるのかも？ なんかいきあたりばったりで、複雑になってません？ 一度シンプルにならないか、見直してみてはどうですか？
> 関数openが１カ所のディレクトリしか探さないという動作をすることが問題なのです。 問題ではなく、正しい動作です。 その参考書の書き方(『ハードディスクから探し出し』)が誤解を与えているかもしれません。 「openは『指定したファイルを』開こうと試みる」とした方が正確でしょう。 探したりしません。 指定したものが有るか無いかです。 指定した所に無いからといって、似たものや別の場所にあるものを、勝手に開いたりはしません。 その指定のルールとして ・ファイル名だけなら、カレントディレクトリにある同ファイル名のもの ・相対パスで指定されていたら、カレントディレクトリを起点として相対パスを辿る ・絶対パスで指定されたら、ルートディレクトリ(/)から辿る ということになっています。 ここで、どこにも「ホームディレクトリ」や「実行ファイルのあるディレクトリ」という言葉が出てこない事に注意してください。 > /Users/(myname)/Documents/test/test.pl　＃(myname)は私の名前のフォルダです。 > にあるコードをターミナル上で実行すると、 > /Users/(myname)/file.txt > に配置しているときしか、読み込んでくれません。 というのは ・スクリプトではファイル名だけしか指定していない→「カレントディレクトリにあるファイル」ルールが適用される。 ・ターミナルを起動したままでcdコマンドでカレントディレクトリを移動しないままに /Users/(myname)/Documents/test/test.pl などと実行している → ターミナル起動時のディレクトリ(/Users/(myname))がカレントディレクトリなので、/Users/(myname)/file.txtを指定したことになる ということだと思います。 例えば、ここで cd Documents としてから /Users/(myname)/Documents/test/test.pl としてみてください。今度は /Users/(myname)/file.txt は読み込まないはずです。cdコマンドでカレントディレクトリを /Users/(myname)/Documents へ移動したことで、 file.txtは /Users/(myname)/Documents/file.txt を指すようになります。 このあたりの概念は、ウィンドウでのGUI操作ばかりやってきた方には理解しずらいところはあるかもしれません。
> エラーを見るかぎり、コードに間違いはなく、apacheかOSに何か原因があるのではないかとおもうのですが その認識が間違いです。明らかにコードの間違い(あるいは、間違いが疑われる)ものです。 > "Could not open $file: $!" とありますが、このスクリプトのどこにも $file なる変数が定義や代入された形跡がありません。 Perlとしては、 未定義値→文字列としては空文字列なので Could not open : .... 等と表示されるでしょうが、これがプログラマの望んだ動作なのか、 Could not open file : .... と表示させたいのか($が余分) Could not open $file : .... と表示させたいのか($に\を付けてエスケープする) $file="test.txt" などとして < open (IN, "<", $filetest.txt") or die ("Could not open $file: $!"); として、エラーメッセージを Could not open test.txt : .... としたいのか、がわかりません。 なので 「typo(=打ち間違い)ではないですか?」と警告を出しているものです。 どのケースかによって、それにあった対処をしてください(あるいは、ここに無いことが目的かもしれませんが) 言語としての手軽さが犠牲になりますが、このような「使ってない変数やリストを使ってしまう」のを防ぐために、 use strict ; して使う変数はmy 等で宣言する、ということも必要です。特に大規模なスクリプトになる場合は
> 自分のパソコンにｍｄｂを作成した場合には、成功しました。 > ただ、ファイルサーバー上だと、コネクトができませんでした。 自分のPCにスクリプトを置いたら、同じくDBIでコネクトできるのでしょうか？ となると、Oracleサーバ側でアクセス元を制限してるのかなぁ。 Firewallと、Oracleユーザ設定の両方を確認して下さい。
URLをご参考にどうぞ。 参考URL：http://hamachiya.com/junk/memo_PAR.html
http://search.cpan.org/~pythian/DBD-Oracle-1.27/ … ここらへんを見ると $dbh = DBI->connect("dbi:Oracle:host=xxx.xxx.xxx.xxx;sid=usrDB;port=8080",$user, $pass); みたいに書くようですよ。ただ、Oracleは使ったことないんで間違っているかもしれません。 ところで、8080ポートに接続しているということはWebプロキシに接続に行っているみたいなんですが、ポート番号は合っていますか？ ちなみに、SQLiteの例ですが、トレースを出したいときは以下のようにします。Oracleでも似たような出力を出すことができると思います。以下、表示がくずれすので空白2文字を全角空白で書いていることに注意。 use strict; use warnings; use DBI; # DB Name my $db_name = 'sqlite_test.db'; # Disable buffering $| = 1; # Connect to the database my $dbh = DBI->connect( 　　'dbi:SQLite:dbname=' . $db_name, 　　'', '', 　　{　 PrintError => 1,　　### Do report errors via warn() 　　　　RaiseError => 0,　　### Don't report errors via die() 　　　　TraceLevel => 5 　　} ) or print DBI->errstr; # Disconnect from the database $dbh->disconnect; これを実行すると以下のような出力が出てきます。 DBI::db=HASH(0x9dda3a8) trace level set to 0x0/5 (DBI @ 0x0/0) in DBI 1.605-ithread (pid 4982) <> FETCH= 5 ('TraceLevel' from cache) at /usr/lib/perl5/DBI.pm line 693 -> STORE for DBD::SQLite::db (DBI::db=HASH(0x9dda3a8)~INNER 'Username' '') thr#9c7d008 ....
No.1です。 MySQLの文字コードの確認を行ってください。 また、ソースコードの文字コードはどのようになっているでしょうか？ また、テーブル名などを英数字にすることは、不可能なのでしょうか？ テーブル名を日本語にしたことがないのですが、 いらぬところで、はまったりしそうなので。。。 ためしに、英数字のテーブルでスクリプトを試してみては いかがでしょうか？ ソースコード的には、動かないものではなさそうですので。
私のところでは、perldoc -f join , perldoc perlfunc で問題ありません。 > １、perldoc -f ～で出てこない私のパソコンは何か問題があるのでしょうか？ パソコンの問題というよりは、なにかの設定の問題か、インストールするべきものがされていない、ということかと思います。 こちらでは、 /System/Library/Perl/5.10.0/pods/ に ～.pod というマニュアル用の書類があります。perldocはここを参照しているようです。 OSのインストーラで追加インストールしたものか、Xcodeあたりでインストールしたものだったか、残念ながら記憶にありません。 > ２、単に関数を打った場合、これはどのような命令になっているのでしょうか？ 「Perlの関数」ではなく、「シェルのコマンド」として認識されます。 ls とか cp とか rm とかと同じです。 たまたま open (質問にあるメッセージはjoinのものでは無いようです) というコマンドがあるので、openが実行され、必要な引数が指定されてなかったためにエラーメッセージが表示されただけです。 例えば、 binmode と打てば、「bash: binmode: コマンドが見つかりません 」等と表示されると思います。
この手の問題は、No.1さんのようにフリップフロップ演算子（リストコンテキストでは範囲演算子）を使うのが常套です。 フリップフロップ演算子を使えば、以下のように状態を記憶させておく変数（$in_scope）が不必要になります。（Perl自身が状態を記憶しておいてくれるから） my $in_scope; while ( <DATA> ) { last if $in_scope and /^ad/; $in_scope = 1 if /^ab/; print if $in_scope; } 切り出したい部分が1ヶ所以上ある場合は、以下のように書けば、何度もフリップフロップしてくれます。 while ( <DATA> ) { print if /^ab/ .. /^ad/ and !/^ad/; }
#!/usr/local/bin/perl package www3sub2; sub main(){ open(FH,'<googlefile3_.txt'); my @file=<FH>; close(FH); $file=join '',@file; $file=~s/<.*?>//sg; open(OUTB,'>googlefile6.txt'); print OUTB $file; close(OUTB); } 1; ※ $a=1; print "$a"; とすると、二倍ぐらいのメモリを使うので、ご注意。
そのまま実装しました。 省略表現が初心者には難しいかもしれませんが、その分見やすいと思います。 インデントは全角スペースになっています。 #!/usr/bin/perl use strict; my($m1, $m2, $m3); open(IN, "in.csv") or die; open(OUT, "> out.csv") or die; while(<IN>){ 　my($n1, $n2, $n3) = split /,/; 　if($n1 eq $m1 && $n2 eq $m2 && $n3 eq $m3){ 　　next; 　}else{ 　　($m1, $m2, $m3) = ($n1, $n2, $n3); 　　print OUT; 　} }
＞今回は下記のエラーと… こちらの環境では問題なく動きますね…。 書き換えたりしませんでした？ whileとかはいらないですよ。
とりあえず手っ取り早く環境構築したいなら MacOS用の「xampp」をお勧めします。 インストールすればローカルの環境にApacheとDBのMySQLサーバが簡単に立ちCGIもPHPも使えます。 参考URLからダウンロードしてページのインストールマニュアルなど見ながら設置してください。 参考URL：http://www.apachefriends.org/jp/xampp-macosx.html
アドバイスになりますが。 CGIとHTMLとPerlは分けて勉強してください。 まずは、Perlそのものの使い方を一通り勉強してください。 ついでに、Unix 系OSの基本事項(ディレクトリ構成とか、権限とか)を勉強してください。 Perlで動作するものができれば、それまで単にprintしていたものを、一定の書式になるようにすればCGIとして動作するようになります。httpサーバーで違うディレクトリになっても、変更するべき箇所がすぐにわかるはずです。 > require 'cgi-lib.pl'; いまどき、cgi-lib.plは使わないでしょ。 少くともOSX 10.6にはperl 5.10が付いています。CGI.pmが使えます。 > 教科書通り、 > sudo cp ./Desktop/httpd.conf /private/etc/httpd/ > と打って、パスワードを打つと > デスクトップに/private/etc/httpd.conf ファイルがデスクトップにコピーされるとの記載があるのですが 本当ですか? もしそうなら、その教科書は間違いです。 ・sudo 管理者権限でコマンドを実行するためのコマンド なのでいったん置いておくと、 cp ./Desktop/httpd.conf /private/etc/httpd/ ってどんなコマンドになるか、理解していますか? この「./Desktop」の「.」 ってなんだかわかってますか?
状況によって問題点が変わってくるのですが、ソースは別に悪くないと思います。 見たところ、シェバング行があったり、表示にHTMLを出力しているようですので、CGIとして動作させているのではないでしょうか。 ローカルマシン上で動作させる場合と、ブラウザを通してWebサーバ上で動作させるのには権限による違いがあります（例外もありますが）。 すべてではありませんがマカーの方は結論を急ぐあまり基礎を無視して事を進めるため過程における要因の切り分けができない方が多い（わたくしの身の回りに）ので、まずは落ち着いて参考にしている本をよく読みましょう。 PerlのプログラムをOS上で動作させる場合と、WebサーバからCGIを介して動作させる場合とではそのマシンに対するアクセス権限が異なることを理解してください。 PCのオーナーや管理者、あるいは利用者などはそのマシンに対するアクセス権限を持って利用しているため権限の範囲内でファイルを作ったりするのは自由です。 Webからアクセスするユーザが、そのマシンに好き勝手にファイルをガンガン作れるようなら、サーバはあっという間にパンクしてしまいます。 もし、Webからアクセスするユーザに対してファイルを作らせたいのならそこに権限を与えなければなりません。 逆に危険ではありますが、Webからのアクセス権限をオーナーと同じにするという荒業もありますが・・・。 MacだからとかWindowsだからとかで物事が単純になるわけではなく、それを開発した企業努力が基本技術を隠蔽しているだけで、パソコンといえど立派なコンピューターです。オーナーすなわちシステム管理者が本当はあたりまえのように理解しなければならないことが結構あったりするのです（使ってるときにコンセント抜いちゃいけないよーとか）。 違いを体感する、具体的な方法として、ブラウザからの動作確認を止めて、ターミナルソフトを動かし、コマンドでPerlからそのプログラムを実行させて結果を見るとよいでしょう。 まずはファイルの属性（権限：パーミッション）とオーナー/グループについて調べてください。 ファイルといっても通常のファイルだけでなく、Macや近年のWindowsでフォルダと呼ばれるようになった「ディレクトリファイル（通称ディレクトリ）」も同じです。 まあ、ファイルを扱うプログラミングを勉強するなら、のちのちはデバイスファイル（キャラクタ型・ブロック型）やリンクファイル（シンボリック・ハード）についても知っておく必要があると思います。 プログラミングの勉強は障害が最高の先生かと思いますのでめげずに取り組んでください。
> open ( FH , "count.txt")) 「読み込みモード」のopenはファイルが無いと「失敗」するだけで「作成」はしませんよ。 これは、MacとかPerlとか関係無しに、ほぼ全てのOSと言語で同様です。
具体的に、カウンタ画像はどこに置いてあるのでしょうか? それに合わせてHTML出力を設定してください。 CGIは、単に「HTMLをプログラムで生成する」ものにすぎません。 その出力をHTMLとして正しいものにするのは、CGIの問題ではなく HTMLの「Webデザイン」的な話になります。 質問者さんのコードでは、 「<IMG SRC="0.gif">」のようなHTMLデータを出力しています。 このCGIが「http://localhost/cgi-bin/count.cgi」に置いてあるのですから、 画像も同じディレクトリである「http://localhost/cgi-bin/0.gif」などでアクセスできるようにしておかないと、画像を表示できないことになります。 画像が別のフォルダに置いてあるのなら、 ・画像もcgi-binフォルダに入れる か ・画像の置き場所に合わせてHTML出力を変える か、どちらかが必要です。 (後者は、例えば(「http://localhost/XXX/0.cgi」で画像が表示できるのなら、 HTMLデータとして「<IMG SRC="/XXX/0.gif">」とすればいいわけですから、 プログラムは「print "<IMG SRC=\"/XXX/${fld}.gif\">";」のようになります)
<form>タグに、ENCTYPE="application/x-www-form-urlencoded" が抜けているのでは。
(MS-DOS 風に書くと) c:\Perl\workdir にあるファイル名を使ってカレントディレクトリのファイルをオープンしようとしてるんだから, ディレクトリ c:\Perl\workdir が (このスクリプトを実行している) カレントディレクトリでなければ正しい動作をしないと判断できる. たとえば ・c:\Perl\workdir には test1.txt, test2.txt がある ・カレントディレクトリには test1.txt はあるが test2.txt はない というような状況であれば 「(カレントディレクトリにある) test1.txt は読み込めるが test2.txt は (カレントディレクトリにはないので) 読み込まない」 ということになる.
カテゴリ javascript で質問した方がよいですよ。 過去の質問だと http://oshiete.goo.ne.jp/qa/2551334.html が参考になると思います。
> 821 は obsolete だから参照しちゃダメですよぉ＞#2. 今なら少なくとも 2821 の方を参照しないと.... 2821 は obsolete だから 5321 を参照しないと。 ただし、UTF8 を使うかどうかの判断に RFC5321 や RFC5322 はあまり関係ない。 (8bit対応してないSMTPサーバーがいるかもしれないから7bitにencodeしてねとかそれくらい) 受け取る人が限られていてその人たちがUTF8で問題ないならUTF8で送れば良いと思います。 Amazon や Yahoo! は受け取る対象が不特定多数なので ISO-2022-JP が無難なわけですね。
＞-bash: ./test.pl: usr/bin/perl: bad interpreter: そのようなファイルやディレクトリはありません というエラーメッセージが出るのなら、 一行目は #!usr/bin/perl になってしまっているはずです。逆に、一行目が本当に #!/usr/bin/perl であれば、そんなメッセージは出ません。どちらかが間違っています。 目に見えない制御コードが入っている可能性もあるので、 cat -v test.pl してみてください。cat test.pl と同じ表示になれば正しいです（もしタブ文字があれば^Iと表示されますが）。
いちおう念の為ですが, 「文字の扱いが楽になった」のは Perl5.8 以降といっていいと思います＞#2. 5.6 より前 (5.003 とかの時代) ではあまり考えられていなかったし, 内部的に Unicode化した 5.6 も実際上はいろいろと問題があったはず.
たとえば、こんなのとか： sub makeform_edit_csv_by_line(){ my( $csv, $line_number ) = @_; my @csv2 = split(/<>/, $csv ); my $cnt = 1; print "<tr>\n"; foreach( @csv2 ){ &trString(\$_, "1", ); if( $_ eq $csv2[-1] ){ chomp($_); } print qq|<td><input type="text" name="${line_number}_${cnt}" size="30" value="${_}"></td>|; $cnt++; } print "</tr>\n"; } 参考URL：http://www.ideone.com/urlLA
最後が 8 でいいなら @ranking = (1); for my $i (1 .. $#list) { push @ranking, ($list[$i-1] == $list[$i] ? $ranking[-1] : $i+1); } とか.
プロバイダのOP25B対策により、メールが送信できないのかもしれません。 http://e-words.jp/w/OP25B.html OP25B対策がされていた場合は、サブミッションポート(587番ポート)や、 SMTP-AUTHを設定する必要があります。
根本的には perl の問題ではありません。 「髙」や「﨑」といった文字は、JIS(ISO-2022-JP)では規定されていないため、 ISO-2022-JPのメールに入れることはできないのです。 文字コードがUnicodeであれば、「髙」や「﨑」を表現できますので、 ・perlのスクリプトを、Unicode(UTF-8)で記述するようにする ・メールのcharset を UTF-8で送信するようにする ・文字コードの変換を、perl4時代の古いライブラリ(Unicode非対応)である「mimew.pl」や「jcode.pl」ではなく、perl5世代の「Encode.pm」を使う という対応になるかと思います。 ---ここから--- #!/usr/bin/perl use strict; use utf8; use Encode; my $sendmail = '/usr/lib/sendmail'; print "Content-type: text/html\n\n test\n"; my $out; if (!(open($out,"| $sendmail -t -i -f xxxx\@hogehoge.co.jp"))) { ; } print $out "To: xxxx\@hogehoge.co.jp\n"; print $out "From: xxxx\@hogehoge.co.jp\n"; print $out "Reply-To: xxxx\@hogehoge.co.jp\n"; my $mail_subject = "サブジェクト 髙﨑"; $mail_subject = encode('MIME-Header', $mail_subject); print $out "Subject: $mail_subject\n"; print $out "Mime-version: 1.0\n"; print $out "Content-Type: text/plain\; charset=\"UTF-8\"\n"; print $out "Content-Transfer-Encoding: 8bit\n\n"; my $honbun = "メール本文 髙﨑"; $honbun = encode("UTF-8", $honbun); print $out "$honbun\n"; close($out); ---ここまで--- といった形でしょうか。 ただし、最近はまず大丈夫だと思いますが、 「日本語のメール」としては、ISO-2022-JPで送るのが主流であり、UTF-8で送った場合にはメールソフトによっては問題が出るかもしれないことは覚悟する必要があるかと思います。
#5です。 念のため \rは\x0d \nは\x0a にしておいてください。
さくらはHTML::TreeBuilderとかも入ってないですか？ 私ならHTML解析を独自に頑張るより、さくらでCPANを使えるように頑張ります。 詳しくは「さくら　CPAN」でググって下さい。
Perl 5.10からネストした括弧にも対応できる(?PARNO) 構文というのが導入されました。 今回はマッチが目的でなく削除できればいいとのことなので、他の回答の方法でもいいと思いますが、一応、紹介しておきます。 perldelta - perl 5.10.0 の新機能 http://fleur.hio.jp/perldoc/perl/5.10.0/pod/perl … 上記サイトに角括弧にマッチする例文が載っていますので、角括弧を全角丸括弧に変えればできると思います。 my $re_510 = qr/ ( # start capture buffer 1 （ # match an opening angle bracket (?: # match one of: (?> # don't backtrack over the inside of this group [^（）]+ # one or more non angle brackets ) # end non backtracking group | # ... or ... (?1) # recurse to bracket 1 and try it again )* # 0 or more times. ） # match a closing angle bracket ) # end capture buffer one /x; $data =~ s/$re_510//g; Perl 5.10以前のバージョンでも、(??{ code })という再帰の構文が用意されていました。 これを利用するならば下記サイトを参考にして以下のように書けます。 ただし、これは実験的に導入されたものと書かれてあります。 perlre - Perl 正規表現 http://fleur.hio.jp/perldoc/mix/pod/perlre.html# … our $re = qr/ （ (?: (?> [^（）]+ )# Non-parens without backtracking | (??{ $re })# Group with matching parens )* ） /x; $data =~ s/$re//g;
CGIの最初の行には、これを書くのが常識ですな。 print "Content-type: text/html\n\n";
外から変数に代入して、その変数を処理する方法があると思います。次のコードは、先頭から１文字ずつ見ていきながら、全角文字に含まれない \ だけを変換しています。 use strict; my $path = <DATA>; chomp $path; $path .= '#'; while ($path !~ /^#/) { unless ($path =~ s/^([\x81-\x9F\xE0-\xEF][\x40-\xFC])(.*)/$2$1/) { $path =~ s/^\\/\//; $path =~ s/^(.)(.*)/$2$1/; } } $path =~ s/^#//; print "$path\n"; __DATA__ c:\申請表\能力検定\貼付け\十分.txt
CGI::Sessionは元々Cookieを使用することを想定しています。 一般的なシナリオは以下のとおりです。 1) パスワードなどで認証したあと、CGI::SessionでセッションIDを作る 2) 1) のセッションIDをファイルやDBに保存する 3) 認証後の初めの画面でセッションIDをCookieでユーザのブラウザにセットする 1)と2)はCGI:Sessionのnewメソッドで一度にまとめることができます。 3) の方法はCGI::Sessionのheaderメソッドを参照して下さい。
ftpでのルートと、HTTPでのルートを混同してませんか？ HTTPが提供するのは、あくまで /use/local/www/htdocs/[user-id]/public_html/以下ですから、HTTODのルートはここですよ。 　Windowsでも、コンピューター上の場所はC:\DOCUMENT AND SETTIGS\[USER-NAME]\My Documentであっても、エクスプローラのルートに\マイドキュメントが見えるでしょ!! 　UNIX系では、マウントやエイリアスは多く使われます。 /use/local/www/htdocs/user-id/public_html/　が、ドキュメントルート(http://hoge.com/)だったり、/use/local/cgi/user-id/がcgiだったり(http://hoge.com/cgi-binだったり・・ きちんと理解しておきましょう。 ・・ローカルにApacheをサーバーを作っておくとよくわかるかも・・ 　検索エンジンは、基本的にrobot.txtを最初に参照しますからそこに指示を書いておけばよい。膨大なクローラーについていちいち指定はできません。 　また、なによりも、ロボットが読みに来たから動作が混乱するようなCGIは書いてはなりません。これが一番肝心なところですよ。
有効な回答を求めるならば、実行環境（OS、デフォルトの文字コード、perlのバージョン、ファイルの文字コード、ファイルの読み取り方）などを記述しておいたほうがいいと思います。
(1) については ・すべてのものを大文字 (か小文字) に統一する ・index を捨てて m//i くらいは思いつくかな. (2) は (どうしてそういうことをしたいのかちょっと分からないんだけど) キーに対して /[^[:alpha:]]/ でマッチさせるとか.
初心者とのことなので、とりあえず全部書いてしまいますが、業務で使うのであればちゃんとプロに依頼したほうがいいですよ。 SOHOサイトで依頼すれば3000円もかからないと思います。 #!C:/Perl/bin/perl use Net::FTP; use strict; my @ftp_data = ( ['ftp','192.168.0.0'], ['ftp2','192.168.0.10'], ); for(@ftp_data){ # ftpで処理 eval{ &get_ftp(@$_) }; # エラーがあればログに記録 &error($@) if $@; } exit; sub get_ftp { my($label, $host) = @_; $label = sprintf("%-8s", $label); # 整形 #FTPサーバーへの接続 my $ftp = Net::FTP->new($host) or die($label . $@); #ユーザー名とパスワードを指定してログイン $ftp->login('user','password') or die($label . $ftp->message); print "connect $host\n"; #接続終了 $ftp->quit; } sub error { my($message) = @_; chomp($message); open(OUT, ">> ERROR.csv") or die; print(OUT "$message\n"); close(OUT); }
エラーの理由を感違いしていました。以下、訂正します。 (1) start end (2) start 1111end start2222 end 実際の処理対象に上記 (1) のような中身のないブロックがある、(2) のような中身の行に start または end 含まれている、ということが考えられます。 (1) の場合は書き出す行がないので無視し、(2) の場合は正常に処理されるようにプログラムを修正してみました。 use strict; my @content; while (<DATA>) { if (/^start$/ .. /^end$/) { chomp; push @content, $_ if !/^start$/ and !/^end$/; if (/^end$/ and @content) { print "infile_$content[0].txt\n", join("\n", @content), "\n\n"; # open OUT, ">infile_$content[0].txt" or die "Can't open: $!"; # print OUT join("\n", @content), "\n"; # close OUT; @content = (); } } } __DATA__ aaaa start end bbbb start 1111end start2222 end dddd eeee start 3333 4444 end
原因ははっきししています。 <>をリストのコンテキストで使用すると、ファイル全体を読み込み、行毎に分解したリストを返します。 # Perlを使う上でリストとスカラーのコンテキストは重要なものです。しっかり理解してください。 このプログラムでは @listにlist.cgiの各行を要素とするリストが入ります。 $list[0]には list.cgiの1行目になっています。 ファイルの1行目には 'abc','def','ghi' ですから、 'abc','def','ghi' になります。 ファイルには2行目以降がないので、$list[0]で全部であり、$linst[1]以降には何も入っていません。 以上のように、まったく仕様通りの動作です。なんの不思議もありません。 原因は、「違う動作を期待する、あなたの不理解」です。 カンマで分解したいのでは、と推測されますが、それなら、次のような方法を使います。 ・split関数を使う ・入力セパレータを表わす特殊変数 $/ を $/=',' と変更して、<>が「カンマ毎に分解する」ようにする(他にも影響が大きいのであまり勧められない) list.cgiというファイル名からすると、 ファイルの内容をPerlでの記述と解釈させようとしているのではないか、とも推測されます。 @list=('abc','def','ghi'); と書いたのと同じ状態にしたかったのでしょうか。 <>にそんな機能はありません。 他のファイルに書かれたPerlスクリプトを利用するには、次の方法があります。 ・require を使う ・モジュールにしてuseを使う ・<>で文字列として取り込んで evalで解釈する 単にリストの内容を別ファイルに記述しただけなら、その別ファイルをPerlスクリプトとして書く必要はありません。 ・<>で取り込んで必要に応じて文字列操作する
$url =~ s/https?:\/\/[^\/]+\//\//g;
Perlでなので・・・下記のように考えてコーディングして下さい。 　１．実行したい処理をコマンドで記述する。 　２．＃１のコマンド実行して、考えたとうりに実行されることを確認 　３．＃２で確認した、コマンドの文字列を出力するPerlのプログラムを考える >しかし、多次元配列の使い方やfor文を調べても良くわからず困っています。 綺麗なだけど動かないプログラムより、汚くても確実に動作するプログラムを書いてから、綺麗なプログラムになるように頑張りましょうね (^O^)/~~
失礼しました。 cpanで見つかるようなので、それをinstallすればいいかと思って確認しませんでした。 目的のUtilがそれなら install Parse::Pidl になります。 ただ、このモジュールとcgiとの関係が今一つわかりません。 Util::～とか～::Utilとかはたくさんあります。使用したいモジュールはそういう他のUtilということはありませんか?
当然できます. 実際にどうすればいいのかについては, その「FTPホストの設定名」とやらをどのように与えるかに依存します.
作ろうかなと調べているうちに、そのものがあったので http://developer.hatena.ne.jp/ja/documents/auth/ …
やっぱりwaitを外すのが手っ取りばやいように思えます。 それでだめなら、forkする前にstd*をクローズするとか。
かぶった
いわゆるdeep copyをしたいわけでしょうか？ Storableモジュールのdclone関数を使えばdeep copyしてくれると思います。 use Data::Dumper; use Storable qw(dclone); my (@data, @output); my @input = qw(1:2 a:b); foreach $line (@input) { push @data, [split /:/, $line]; push @output, dclone(\@data); } print Dumper \@output;
rep::replace がどこにもないからよくわからんのだけど, この refidrep を見る限り受け取り方を勘違いしてる気がする. プロトタイプにおける \ の意味と, それに対応する引数をどのように受け取るかについて確認してください.
まず「リファレンス」というのは「何かを参照するための情報」でしかありませんから, それが「アドレスである」とは限りません. でも, 「画面上１６進数の番地等は表に出てこないようですが・・」というのは, どう試したんだろう. もう 1点. @array = (1, 2, 3, 4, 5); とした場合に, 「配列@arrayの番地は、５個ぶんのメモリ領域が確保される」とは限りません. あとで push や unshift のような操作をすることもあるので, 一般的にはもっと多めに確保しているはずです.
こんな感じでしょうか。 動作確認はしていないのでバグがあるかもしれませんが…。 #!/usr/bin/perl use strict; use Net::FTP; chdir("保存先ディレクトリ") or die; my $ftp = Net::FTP->new("example.com") or die; $ftp->login("user", "pass") or die $ftp->message; $ftp->cwd("取得元ディレクトリ") or die $ftp->message; # すべてのログを取得 my @files = grep{ /^LOG_/ } $ftp->ls; # 12月分を取得 # my @files = grep{ /^LOG_12/ } $ftp->ls; # 最新の30日分を取得 # my @files = sort{ $b cmp $a }grep{ /^LOG_/ } $ftp->ls; # @files = splice(@files, 0, 30); # 11月20日から12月19日までを取得 # my @files = grep{ /^LOG_(\d+)/ && 1120 <= $1 && $1 <= 1219 } $ftp->ls; for(@files){ # 取得済みならスキップ next if -e $_; printf("get %s\n", $_); $ftp->get($_) or warn $ftp->message; }
分量が多くなったので、分けて書きます。 以下、連想配列を使った、全地域・全サイズ対応版です。 また、この変数%areaを県単位で書き下せば、 地域名ではなく県名から料金を計算させるようなことも可能です。 ---ここから--- #地域名から地帯番号への変換 my(%area) = ( "愛知" => 0, #県内は仮に第0地帯とする "関東" => 1, #第1地帯 "信越" => 1, "近畿" => 1, "東海" => 1, "北陸" => 1, "東北" => 2, #第2地帯 "中国" => 2, "四国" => 2, "九州" => 3, #第3地帯 "北海道" => 5, #第5地帯 "沖縄" => 6, ); #地帯番号から、サイズ・料金対応表への変換 my(%postage) = ( 0 => { 60=> 600, 80=> 800, 100=>1000, 120=>1200, 140=>1400, 160=>1600, 170=>1700 }, 1 => { 60=> 700, 80=> 900, 100=>1100, 120=>1300, 140=>1500, 160=>1700, 170=>1900 }, 2 => { 60=> 800, 80=>1000, 100=>1200, 120=>1400, 140=>1600, 160=>1800, 170=>2000 }, 3 => { 60=> 900, 80=>1100, 100=>1300, 120=>1500, 140=>1700, 160=>1900, 170=>2100 }, 5 => { 60=>1100, 80=>1300, 100=>1500, 120=>1700, 140=>1900, 160=>2100, 170=>2300 }, 6 => { 60=>1200, 80=>1400, 100=>1600, 120=>1800, 140=>2000, 160=>2200, 170=>2400 }, ); print"愛知県から小包の地方を入力してください。\n"; chomp($areaname=<>); my $areano = $area{$areaname}; if (!defined($areano)) { print "地域名「$areaname」は正しくありません\n"; exit; } print"小包のサイズを入力してください。\n"; chomp($size=<>); my $price = $postage{$areano}->{$size}; if (!defined($price)) { print "サイズ「$size」は正しくありません\n"; exit; } $price =~ s/(\d)(\d{3})$/$1,$2/; print "$areaname 地方は第 $areano 地帯です。\n$size サイズは $price 円になります\n"; ---ここまで---
> print "@inを"; ダブルクォートでくくると配列の値が展開されるので、 シングルクォートでくくるか、エスケープしましょう。 $ni_tallは、foreachブロック内でのみ有効な変数になります。 foreachブロック終了と同時に、なくなります（printしても何も表示されません）。 > $n *= $ni_tall; これは、変数$nに数値を代入することになります。 略さず書くと、 $n = $n * $ni_tall; 最終的に、$n = 7*10*20*40の値(1680000)が入ります。 > $ave = $n * @in; これは、$ave = 1680000 × 4(配列の個数）となります。 Perlは色々な書き方がありますので、以下のようにも書けます。 ご参考までにどうぞ。 my @in = qw(10 20 30 40); print '@inを何倍しますか？:'; chomp(my $n=<>); map { $_ *= $n } @in; print "結果:", join(',', @in);
CSSセレクタなので、div.ltxtは、class="ltxt"にもclass="ltxt brand"にもマッチすると思います。たぶんdiv.ltxtと指定したとき結果を複数返してきていて、最後に"ltxt brand"を返して来たんでしょう。 属性を取得したい場合はCSSセレクタでは属性を(たぶん)取得できないので、XPathで指定する必要があると思います。
ｐｅｒｌには詳しくありませんが普通は１００で割って切り捨てします。 例えば　　Ａ＝ＩＮＴ(Ｂ／１００)　みたいに。
申し訳ない, #2 も言葉がおかしかった. qq で作った文字列が「HEREDOC」のわけなかろうに. 言いたいことは #2 の通りですが, qq!～! が 1つの文字列だ, ってこと. このスクリプト自体はサーバじゃなくても (require 文を消して実行すれば) エラーになるはず.
ちと気になった点を突っ込ませてくださいな＞#4. my $html = join("", <IN>); よりは $/ = undef; my $html = <IN>; の方がよいかと. あと, printf(OUT "%s\n", join("\n", @src)); は $" = "\n"; print OUT "@src\n"; にした方がシンプルじゃないかな. あと open は (それなら) 3引数にするとか, そもそもリダイレクト (とコマンドライン引数) にまかせた方が簡単とかありますけどね.
聞いたことはあると思いますが、2chのような大量のデータを扱うときは「データーベース」を用いるのが普通です。 データーベースならば、条件指定による検索や並び替えが簡単にできますからね。 「データーベース」あるいは「SQL」で検索するといろいろと情報が出てきます。
念の為 s/old/new/egiox において修飾子の意味だけ書くと ・e: new を (文字列そのものではなく) eval した結果で置き換える (e が複数個あればその回数だけ eval を繰り返す) ・g: old にマッチする全ての場所で置換を実行する ・i: old の大文字/小文字を無視する ・o: old を最初にこの部分を実行した 1回だけ評価する ・x: old に空白とコメントを許す くらいでしょうか. だから, s/<文字列>/hogehoge/egiox だと「hogehoge を eval した結果」で置き換えます (hogehoge というサブルーチンがなければエラーになる).
open ができているかどうかなら open の返り値を見ればいい, というか見て open できているかどうか必ず確認しろ. あと, ディレクトリの区切りに使う文字列はシステムによって違うのだが, 区別するのが面倒なら / を使っておけばだいたい OK.
さくらインターネットのサーバーはWindowsとは違うOSが使われています。 Windowsではないので、Windowsの機能であるWin32::OLEも使えません。 ActivePerlはWindows上で動作するPerlです。 インストール先はそのお手元のパソコンです。サーバー上では動作しません。 例えば、コマンドプロンプトから perl スクリプト名 と入力する、等の方法で実行します。
#2です。 ・ setenv や souce を含んだ設定ファイルが何十個もある ・ そこに書いてあるsetenvを実行した上でperlスクリプトを実行したい ・ 追加で作るものは最小限にしたい と言うことでしょうか？ #!/bin/csh source $1 shift perlスクリプト $argv というスクリプトを作って、第一引数にsourceしたいファイルを書いてそれ以降に本来の引数を書きます。
Ajaxを使うなら、JSONPを使うものが主流です。 郵便番号 JSONP で検索してみてください。 ＞JsonpZip プレビュー！　住所プルダウンから郵便番号自動入力 http://kawa.at.webry.info/200801/article_14.html <script type="text/javascript" src="http://jsonp-hosting.googlecode.com/svn/trunk/js … charset="UTF-8"></script> <form> 郵便番号：<input type="text" name="zip3" rel="jsonpzip[zip7]" maxlength="8" size="9"><br> 住所：<input type="text" name="addr" rel="jsonpzip[addr]" size="60"> </form> ＞ajaxzip3 http://code.google.com/p/ajaxzip3/ <script src="http://ajaxzip3.googlecode.com/svn/trunk/ajaxzip … charset="UTF-8"></script> <form> 郵便番号：<input type="text" name="zip11" size="10" maxlength="8" onKeyUp="AjaxZip3.zip2addr(this,'','addr11','addr11');"><br /> 住所：<input type="text" name="addr11" size="60"> </form> 参考URL：http://www.google.co.jp/search?hl=ja&q=jsonp+郵便番号
データの保存形式にはCSVを使うのが基本です。 Text::CSVというモジュールを使っても良いですが、それ以外ならsplitとjoinを使います。 一行に纏めた形式で書き込んで、表示するときはそれを復元して使います。 my $name = "名前"; my $mail = "a@test.com"; my $str = join("<>", $name, $mail); print "$str\n"; # 名前<>a@test.com my @a = split("<>", $str); print "$a[0]\n"; # 名前 print "$a[1]\n"; # a@test.com ファイルのフォーマットはこんな感じでしょうか。 # THREAD 　id<>datetime<>name<>email<>message<>password # INDEX 　id<>datetime<>title<>count もし難しいようなら、入門書を一冊購入することをお勧めします。 私のお勧めは「10日でおぼえる Perl/CGI 入門教室」です。 これ一冊で、基本的な部分はすべて押さえられると思います。 http://www.amazon.co.jp/dp/4798109703/
@ARGV = ('datafile'); my %h; print grep { ! exists $h{$_} && ++$h{$_} && !(/^END$/ && undef %h) } <>;
> とそれぞれの()の最後の文字deuch beer zeroに,が残ってしまっています。これを消すにはどうしたらいいでしょうか？ じゃあ、思いっきり手を抜くとこんな感じかな・・・。 open(IN, "datafile.txt"); @xx = <IN>; close(IN); my $yy = join("\",\"",@xx); $yy =~ s/\r\n|\r|\n//g; $yy =~ s/,\"END\",/),c(/g; print "c(\"".$yy."\")"; exit; でも本気でちゃんとプログラミングの処理として動作させたいなら自分がPCになったつもりで手順を考えたほうがためになると思う。
言語以前の問題ですね。 どんな言語でも可能ですが、周辺をとりまく環境の把握が必要です。 以下のことが必要です。 [1]: マシンをサーバーとして起動するためにはそのためのプログラムが必要です。 　　 「サーバーをサーバーとするプログラムが定義する仕様を知ること」 　　 ただし通信法はおそらくhttpプロトコルだと思うのでその場合だと一般的な手段と同じです。 [2]: サーバー側は外部からのファイルの受付を許諾するのか。 　　 「その場合、そのようなプロセス(手順)によって許諾されるのか」 　　 掲示板とのことですので、通常は掲示板が掲示板として動作させるプログラムが定義してます。 　　 (その仕様を調査する必要があります)。 [3]: 上記を踏まえた上で、クライアント側でサーバーの意向に沿うプログラムを動作させる。 　　　「この時に使う言語は、通信が可能であればPerlでも何でも構いません」 　　　当然、実装の方法に関しては [3] を満たす動作をさせることです。
>> seek関数は実際には途中書き込みには対応していない（？）ようなので、書き込みが末尾にきてしまい、うまくいきません…。 seek関数は操作対象になる場所を変えるだけですよ。 書き込みが末尾になるのは追記モードでファイルを開いているから。 seek使って途中を変えて意図した通りになるかはわかりませんが多分ならないのでは。 途中を変えるという事は、後ろに有効なデータが残っているという事ですよね。 置換前と置換後の文字列長が違う場合には処理が必要ですよ。 ※置換後が長いと置換によって元のデータを上書きする事になる部分があるだろうし、逆だと古い文字列の一部が残るでしょうし。 要するに、長さが違う場合には別途処理が必要になるかも知れません。
Data::Dumper とか DB に tie とか.
== は「数値として」比較します. 本当に「0」のときのみにしたいなら eq じゃいかんの?
皆さんが既に答えられてますが…。 普通の関数として実装すればいいと思いますよ。 インデントは全角スペースになっています。 #!/usr/bin/perl use strict; my @moji = ('ak', 'df', 'gc'); my $x = "ak"; my $res = &mch($x, @moji); # definedを使えば0番が返ったときでもTRUEになる if(defined $res){ 　print("found: $res\n"); }else{ 　print("not found\n"); } sub mch { 　my($key, @array) = @_; 　for(my $i = 0; $i < @array; $i++){ 　　if($key eq $array[$i]){ 　　　return $i; 　　} 　} 　return undef; }
ちゃんと期待通り動くのに訂正します。 ------------------------------------------------------------------ use Win32::OLE; use Win32::GUI; my $Shell = Win32::OLE->CreateObject("WScript.Shell"); my $Desig = Win32::GUI; my $Folder = $Desig->BrowseForFolder(-title =>'フォルダを選択してね', -directory =>"c:\\" ); unless ($Folder) { Win32::MsgBox('ちゃんと選んで頂戴！'); }else{ Win32::MsgBox("$Folder"); } ------------------------------------------------------------------ VBSとまったく同じというわけには行かないので各PerlモジュールのリファレンスとVBSのリファレンスとを照らし合わせていじってみましょう。 例： http://search.cpan.org/~robertmay/Win32-GUI-1.06/ http://perl-win32-gui.sourceforge.net/cgi-bin/do … http://cpansearch.perl.org/src/ACALPINI/Win32-GU …
期待かわかりませんがこれでどうでしょうか。 #!/usr/bin/perl $tsv_file = "test.tsv"; open(IN,"$tsv_file"); @InFile = <IN>; close(IN); @sortdata = sort { (split(/\t/,$a))[1] <=> (split(/\t/,$b))[1]} @InFile; open(OUT, '>>result.txt'); print OUT @sortdata; close(OUT); ソートについては参照URLに詳しく書いてあるので見てみるといいです。 参考URL：http://www1.parkcity.ne.jp/chaichan/src/perl07.htm
フィルタとして使うことの多い私からすれば、STDINで入力待ちというのは、あんまりやりたくない方法ですね。 ・コマンドプロンプトのpauseコマンドをPerlのsystem関数で呼び出す END { system('cmd /c pause'); } ・ダブルクリックでの使用が望みなら、結果もウィンドウに表示する。 Perl/Tk等を使って、テキストボックスに表示、「OK」ボタンで終了 ・結果は「画面」ではなくファイルに出力するように変更。実行後にファイルをエディタ等で確認。
随分前にYhoo知恵袋でこれと同じ質問に回答したと思いますが、 @allow_mail_to = qw(license@sample.com @sample.com localhost); のところが間違っています。 ここの２つ目の @sample.com の 「 ＠ 」 を取り除いてください。 他に間違いがなければ、これで500エラーは出ないと思います。 なお、この変数はその名前から推測すると、メール送信先として許可するアドレスまたはドメインを定義するようですから、 sample.com とすれば、１番目の license@sample.com は設定しても意味がありません。
$| = 1; my $aaa = "ローランド　ディー．ジー．"; my $bbb = "ローランド　ディー．ジー．"; $bbb =~ m/$aaa/; open File, ">test.txt"; print File "$&"; --------------------------------------------------- 上記をコピーし、EUCとして保存し、Perlで実行させてください。 成功しました。 どのように実行させてるかは分かりませんが、 Perlで実行する際は、他のアプリケーションを介さないで下さい。(テストになりません)。 -------------------------------------------------- sjisでの場合は、ーの2バイト目が5Cになる事も覚えておいて下さい。 http://ash.jp/code/codetbl2.htm -------------------------------------------------- テストはしていませんが、 foreach(@list){ if($file =~ /$_/){ print"$_\n"; } } この記述で $_ が[ランド]と出力される場合、 そもそも @list に[ランド]が入っていたとしか考えられません。 (正規表現関係ないです)。 その辺も見直してください。 ------------------------------------------------- > 結果の方は、変わりませんでした。 > listのローランド＿ディー．ジー．のところでは、”ランド”と出力されてしまいます。 > なぜでしょうか。 そもそも $_ 自体が[ランド]だと思われるので、 そうだとしたら、そうなって当たり前の流れに感じます。 ------------------------------------------------- 質問の趣旨と異なりますが、 どうゆう意図の記述かわかりませんが、 おそらくではありますが、正規表現は m/\Q$_\E/; としたほうがたぶん意図したとおりに動作する気がします。 (記号を通常の文字として扱う)。
削除するときに、ちゃんとApacheを停止してから行いましたか？ 動作中にアンインストールしたので、ファイルがロックされてて削除されていなかった、なんて事になっているのでは？
CPANにそのようなライブラリがありますよ。 http://search.cpan.org/~bkb/Lingua-JA-Moji-0.03/ … useすれば、自分で変換処理を書く必要はないです。
> 個人的に同じことを重複するプログラムが好きではないという主義 同じことを繰り返し書かないというのは良いスタイルですが、 今回の場合はやってることは同じではありません。 > sub hoge1 > { > my $hoge = 1; > } > sub hoge2 > { > my $hoge = 5; > } 前者は「sub hoge1の$hogeを宣言」、後者は、「sub hoge2の$hogeを宣言」なので違うことをやっています。 これらは名前が同じだけで別の変数なので、外に出すなら > my $hoge1_hoge; > my $hoge2_hoge; > sub hoge1 > { > $hoge1_hoge = 1; > } > sub hoge2 > { > $hoge2_hoge = 5; > } とでもしなければ別の変数になってくれません。 しかし、これは面倒ですし、何より無関係のサブルーチンから変数を操作される恐れがあります。 （間違って変数を操作した場合にどうなるかはNo.2の方が例示してくれてるので割愛。） 要するに、最初のようにサブルーチン内で宣言した方が楽ができるのです。 プログラミングするときは、できるだけ楽になるようにしましょ。
Perl5.8ぐらいだと、文字コード変換モジュールが標準で添付されているからそれを使えば。 <http://perldoc.perl.org/Encode.html>
文字量が少ないと文字コードの判別が正確にできないので、既に回答があったように文字量を増やす工夫が必要だと思います。 半角カナが混じっても判別精度を上げる方法が下記サイトに記述されてます。 参考にされるといいと思います。 Perlメモ http://www.din.or.jp/~ohzaki/perl.htm#JP_Code jcode.plはかなり古いライブラリーで、今から新しく書くスクリプトではあまりお薦めできません。以下のような変遷をたどっています。 jcode.pl → Jcode.pm → Encode.pm 今は、Encode.pmを使って文字列をUnicode化して使うのが主流です。 ちょっと難しいかもしれませんが、チャレンジしてみてください。 Encode::Guess -- データからエンコーディングを推測する http://www.kt.rim.or.jp/~kbk/perl-5.8/guess.html Perl で半角カナと全角カナの変換をする http://www.serendip.ws/archives/2185 以下、参考コードを書いてみました。 use Encode 'from_to'; use Encode::JP::H2Z; my $v = 'アイウエオ'; print $v, ' -> '; my $enc = getcode($v); die '文字コードが取得できませんでした' if $enc =~ /or/; from_to($v, $enc, 'euc-jp'); Encode::JP::H2Z::h2z(\$v); from_to($v, 'euc-jp', $enc); print $v; sub getcode { my $str = shift; my $ascii = '[\x00-\x7F]'; my $re_sjis_c = '[\201-\237\340-\374][\100-\176\200-\374]'; my $re_sjis_kana = '[\241-\337]'; my $re_euc_c = '[\241-\376][\241-\376]'; my $re_euc_kana = '\216[\241-\337]'; my $re_euc_0212 = '\217[\241-\376][\241-\376]'; require Encode::Guess; my $enc = Encode::Guess::guess_encoding($str, qw/euc-jp shiftjis 7bit-jis/); return $enc->name if ref $enc; if( $enc =~ /shiftjis/ and $enc =~ /euc-jp/ ) { if( $str !~ /^(?:$re_euc_c|$re_euc_kana|$re_euc_0212|$ascii)*$/o ) { if( $str =~ /^(?:$re_sjis_c|$re_sjis_kana|$ascii)*$/o ) { return 'shiftjis'; } } return 'euc-jp'; } return $enc; }
文字列の置換は以下のように書きます。 my $hoge = "hogehoge"; my $old = "o"; my $new = "a"; $hoge =~ s/$old/$new/g; print $hoge;　# hagehage ちなみにprint $hoge =~ s/$old/$new/g;とやると 　2 と出力されます。 これは評価数（マッチした回数）が返っている状態です。
他の人の回答見てませんけども。 何に使うデータで、そのあとどのように、どの程度使うのかは分かりませんが。 テストはしてません。正規表現部分は都合に合う様に好きにして下さい。 ----------------------------------------------- @data; #全ての数値が入っている物とする。 foreach (@data){ { m/([0-9]+\.[0-9]?)/ } $count{"$1"}++; } ------------------------------------------------- 中間値とカウント数のの意味は分かりませんでしたが、 ハッシュのデータをごにょごにょしてカウント数から導き出せる数値は全部出せます。
元の質問にあったエラーと話がそれて来て混乱しているのですが、とりあえずなんか書いてみました。パスとか修正して下さい。あと空白2文字を全角空白にしてます。 #!/usr/bin/perl -T use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use Encode; use LWP::UserAgent; my $q　　= CGI->new(); my $text = $q->param("text"); if ( defined $text ) { 　　my $utf8　　= Encode::is_utf8($text) ? $text : Encode::decode_utf8($text); 　　my $escaped = CGI::escape($utf8); 　　my $ua　　　= LWP::UserAgent->new; 　　$ua->agent('PerlSample/0.1'); 　　$ua->timeout(5); 　　my $res 　　　　= $ua->get( 'http://mimitako.net/api/mecapi.cgi?sentence=' 　　　　　　. $escaped 　　　　　　. '&response=surface,feature' ); 　　print $q->header( -type => 'text/plain', -charset => 'UTF-8' ); 　　print $res->status_line, "\n"; 　　print $res->message,　　 "\n"; 　　print $res->code,　　　　"\n"; 　　if ( $res->is_success ) { 　　　　binmode STDOUT, ":encoding(utf8)"; 　　　　print $res->content, "\n"; 　　} 　　else { 　　　　print $res->error_as_HTML, "\n"; 　　} } else { 　　print $q->header( -charset => 'UTF-8' ), 　　　　$q->start_html( -title => "test", -lang => 'ja', ), 　　　　$q->start_form( -method => 'GET', -action => $q->script_name ), 　　　　$q->textfield( -name => 'text', -default => 'Input text' ), 　　　　$q->submit("Send"), 　　　　$q->end_form, 　　　　$q->end_html; }
これは、俺が年に数回やっている仕事と同じだな。 １００万円払えば、土日に教えてあげるよ。
そこまで効率が重視される状況なのでしょうか？ 私ならこのようなコードで処理しますが、大半のケースでは必要十分だと思います。 インデントは全角スペースになっています。 #!/usr/bin/perl use strict; # BファイルのURLをハッシュに読み込む open(IN1, "B_FILE.txt") or die; my %hash = map{ chomp; ($_ => undef); } <IN1>; # Aファイルは膨大なので逐次処理 open(IN2, "A_FILE.txt") or die; while(<IN2>){ 　my(undef, $url, undef) = split /\t/; 　 　# URLが存在すれば出力 　if(exists $hash{$url}){ 　　print; 　} }
単刀直入に言います。 Flashは、Perlで作れません。 Flashを作るなら、ActionScriptを勉強してください。 Perl・・・サーバ側で処理するもの。掲示板のログを整理するなど。 Flash・・・クライアントで処理するもの。Webページを動的に変化させるなど。
正規表現のままとするのなら、 if($a=~/^\Q$b\E(.+)$/){print $1}; \Q と \E で挟みます。 参考URL：http://perldoc.jp/docs/perl/5.8.8/perlop.pod
基本的には、１リクエスト１ファイル返却となりますので、HTMLとJPEGは別々のファイルで返して下さい。 ヘッダー以降に返却されるデータはボディーであり、HTMLの途中からJPEGに変更するってのは反則で通りません。 HTMLの中で単純にバイナリを展開したら無茶苦茶な状態になります。 どうしてもと言うならバイナリをJSコードにして埋めてDOMで再生成とか無茶なやり方は思いつきますが…勧めません。
全ての条件をクリアしているかはわかりませんが。 s{(//.*?\n|/\*.*?\*/|abcde)}{$1 eq 'abcde' ? 'aaaaa' : $1}egs;
セッション管理の問題です。だいたい3つぐらい方法があります。 1) 隠しフォームを使う 2) クッキーを使う 3) クエリーを使う( 1)と技術的には同じ ) 1) の方法を説明すると form.cgiが出力するフォームにhidden状態なパーツを追加しておきます。 例えば <input type="hidden" name="next_page" value="enk02.html" /> などとします。 これでフォームを返したときに次に表示するページがわかります。 valueをその次に表示するページを出しておけば、順番に表示できます。 この例で言えば、next_pageがenk02.htmlという値を受け取ったら、 次の隠しフォームはex02.htmlにすればよいです。 リダイレクトといっているのは、form.cgiから別のURLに飛ばすということを言っています。 print "Location: http://xxx/enkxx01.html\n\n"; とするか、CGI.pmを使っているのなら use CGI; my $q = CGI->new(); print $q->redirect('http://xxx/enkxx01.html'); でもいいのでしょう。
連投してすみません。 汚染に注意とは書いておいたものの、それだけで大丈夫か不安になったので、より安全なバージョンを書いておきます。 ANo.6のコードは大変危険ですので、決してそのまま設置しないでください。 #!/usr/bin/perl use strict; # 汚染に注意 my $fname = $ENV{'QUERY_STRING'}; $fname =~ s/[^0-9a-zA-Z.]/\_/g; my $url = "http://www.hogehoge.com/" . $fname; print "Content-type: image/jpeg\n\n"; # サーバーに保存せず直接表示 system(qq/wget -q -O- $url/); # サーバーに保存しつつ表示 #system(qq/wget -q -O- $url | tee $fname/);
最後の「1;」は, ある意味「おまじない」のようなものです. Perl の場合, require/use などでスクリプトを読み込んだときに当該スクリプトは「読み込みが成功したかどうか」を返すことになっています. その値は「スクリプト中で最後に評価した値」であり, これが「偽」のときには「スクリプトの読み込みに失敗した」ということで実行を中断してしまいます. ただ, 多くのスクリプトではこんなことはしない (特に純粋に Perl だけで書かれたものなら「読み込みに失敗する」ことはまずない) ので, 「確実に『真』の値を返す」ようにスクリプトを作る必要があります. だから 1; でなければならないということはなく 4; でも 'a'; でもなんでもいいんですが, 慣例として「1;」としています.
スタート→すべてのプログラム→スタートアップ に、「Apache Monitor」とかってのがあると思います。 そいつをスタートアップから削除してしまえばモニタープログラムは起動しなくなるので、 ご希望通りになるかと思います。 尚、上記はOS起動時にモニターツールが起動しなくなるだけで、Apacheが起動しなくなる わけではありません。 Apacheの自動起動をとめたい場合は、コントロールパネル→管理ツール→サービスから Apacheの起動を手動または無効にします。
1回目のループで$hogeの内容は「現在のナンバーは1です」に変わるので、 次にこれを2に変更したいときは、「1」を「2」に置き換える必要があります。 下記のように$hogeの内容を$hoge2に入れて、置換すると表示されます。 ただ置換をせずに表示する場合は、printfを使った方が簡単です。 $hoge="現在のナンバーは《no》です"; for(1..3){ $hoge2=$hoge; $hoge2=~s/《no》/$_/g; print"$hoge2<br>"; } 現在のナンバーは1です<br>現在のナンバーは2です<br>現在のナンバーは3です<br> ----- for(1..3){ printf "現在のナンバーは%dです<br>", $_; } 現在のナンバーは1です<br>現在のナンバーは2です<br>現在のナンバーは3です<br>
http://winfaq.isle.jp/FaqItem?i_faqId=275&i_cate …
REMOTE_ADDR は、そのCGIを動かしているWWWサーバがCGIのために付けている情報です。 接続元のIPアドレスが正しくないと、TCP/IPによる通信そのものが成り立ちませんから、詐称はできません。 (TCP/IPの通信は文通みたいなものです。差出人住所を詐称した場合、手紙を一方的に送ることはできても、詐称したまま文通(相互に何度も手紙のやりとり)をすることはできません。文通できているということは、差出人住所は詐称ではないということです。同じように、TCP/IPで通信できているということは、相手のIPアドレスは詐称ではないということになります。) ですので「REMOTE_ADDR がWWWサーバの通信相手のIPアドレスを示している」ことについては信用して問題ありません。 ただし、この情報はあくまで「WWWサーバの通信相手」のIPアドレスですから、proxyを通してアクセスした場合には、REMOTE_ADDR はproxyのIPアドレスになります。 WWWサーバが、インターネット外部に対して reverse proxy を通して公開するような環境になっている場合には、WWWサーバ自身はproxyと通信していますから、proxy自体がfirewall内にあれば、そのIPアドレスが10.*.*.* である、という環境はありえます。ですが、質問者さん自身がfirewall内外での動作確認をしているとのことなので、この可能性はないでしょう。 そうなると、質問者さんの状況では、「REMOTE_ADDRのチェック方法が間違えている」可能性が高いのではないかと思います。 正規表現/^10\.\d+\.\d+\.\d+$/でチェックしているのなら大丈夫だと思いますが、例えば、 正規表現/10\.\d+\.\d+\.\d+/でチェックしてたりする(前後に^/$が無い)と、その前後に何か文字が入っていてもマッチしますから、「210.3.4.5」もマッチするといったことになります。 REMOTE_ADDRのチェックをしているコードを補足で出してくれれば、そのあたりについてのアドバイスができるかもしれません。 あと、WWWサーバのアクセスログが残っているのであれば、そのCGIへのアクセスを確認することで、どういうアクセス元に対して誤動作したのかがわかるので情報として参考になるでしょう。
適当。表示がずれるので空白2文字を全角空白で書いていることに注意。 #!/usr/bin/perl use strict; use warnings; use Time::Local; my %count_of = (); while ( my $line = <DATA> ) { 　　if ( $line =~ m/(\d+)\s+(\d+)-(\d+)-(\d+)/ ) { 　　　　my $count = $1; 　　　　my $year　= $2; 　　　　my $month = $3; 　　　　my $day　 = $4; 　　　　$count_of{$year}->{$month}->{$day} = $count; 　　} } for my $year ( sort keys %count_of ) { 　　for my $month ( sort keys %{ $count_of{$year} } ) { 　　　　print "$year-$month", $/; 　　　　print "Sun, Mon, Tue, Wed, Thu, Fri, Sat", $/; 　　　　my $time = timelocal( 0, 0, 0, 1, $month - 1, $year ); 　　　　my ($wday) = ( localtime $time )[6]; 　　　　my $end_mday　= get_end_mday($year, $month); 　　　　for my $count ( 1 ..　($end_mday + $wday)) { 　　　　　　my $day = sprintf '%02d', $count - $wday; 　　　　　　if ( exists $count_of{$year}->{$month}->{$day} ) { 　　　　　　　　print $count_of{$year}->{$month}->{$day}; 　　　　　　} 　　　　　　elsif ( 1 <= $day ) { 　　　　　　　　print '0'; 　　　　　　} 　　　　　　if ( ( $count % 7 ) == 0 ) { 　　　　　　　　print $/; 　　　　　　} 　　　　　　else { 　　　　　　　　print q{,}; 　　　　　　} 　　　　} 　　　　print $/; 　　} } sub get_end_mday { 　　my $year　= shift; 　　my $month = shift; 　　if ( $month >= 12 ) { $month = 0; } 　　my $time = timelocal( 0, 0, 0, 1, $month, $year ) - ( 24 * 60 * 60 ); 　　my ($mday) = ( localtime $time )[3]; 　　return $mday; } __DATA__ 10 2010-10-01 11 2010-10-02 8 2010-10-03 4 2010-10-08 6 2010-10-09 3 2010-11-01
横から失礼。質問からはズレますが、自動改行されれば問題ないのだとすれば、配布のJavaScriptでOKでしたよ。 <script type="text/javascript" src="wordBreak.js"></script> <!-- テーブルに class="wordBreak" --> <table class="wordBreak"><tr> <td style='width:300px;'> ★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★ </td> </tr></table> wordBreak.js http://blog.webcreativepark.net/2008/09/14-21134 … ※css の word-break:break-all; でも強制改行可だがFireFoxダメ
use Cwd 'abs_path'; print abs_path(__FILE__); または use File::Spec; print File::Spec->rel2abs(__FILE__); どちらも標準モジュールのようなので、すぐ利用可かと。
本題は終わっているので細かい点: ・こんなかわいそうな使い方をするくらいなら @d を使わなきゃいいのに. ・最後の if文に引っかかるやつはその前の if文に引っかかると思うんだけど, それでいいのかなぁ.
あぁ, 「コードポイント 301C がど～たらこ～たら」というのは Perl とは (少なくとも直接には) 無関係で, いろんな文字コードがからむ闇の世界のお話です. 実はコードポイント 301C にはいろいろと問題がありまして.... 以下 Unicode の表を参照してもらえるとありがたいのですが ・Unicode コードポイント 301C の文字の名称は「波ダッシュ」 ・一方 Unicode コードポイント FF5E に「全角ティルダ」が存在する で, このうちどちらを JIS X 0208 の 1区 33点の文字に対応させるかで混乱があります. Unicode コンソーシアムとしては「301C が対応する」としているのですが, その一方で「この対応が常に守られているとは限らない」という事実もあります (Unicode の表にもそのように書いてある). 実際試してみると, Perl の場合 ・cp932 では Unicode FF5E が JIS X 0208 1区 33点に対応する ・shiftjis では Unicode 301C が JIS X 0208 1区 33点に対応する ということが分かります (もちろん対応しないものはうまく変換できない). この「JIS X 0208 の 1区 33点と対応する文字はどれ」問題は文字コード業界 (ってなんだ) では有名だったりします. 301C の問題を解決するだけなら ・cp932 をやめて shiftjis にする ・\x{301C} を \x{FF5E} に変換しておく (s/\x{301C}/\x{FF5E}/g なり tr なり) でいいわけですが, 当然前者だとほかの文字でうまくいかないという問題を起こす可能性があります. 後者ならそのような問題は起きない代わりに「うまく変換できない文字を見つけたらそのたびにモグラたたき」ということになります. ん～, ほかにも解決手段はあるかも.... ほら, なんとなく一筋縄ではいかないような気がするでしょ?
file1を最初に読み込みます。file1のr1がキーになります。 file2を読み込み、file2のr1が、file1のr1のハッシュに存在すれば、file3へ出力します。 以下のコードを実行してください。 ---------------------------- my %hash = (); #ハッシュテーブル（ファイル１の１カラムのデータ） open(IN,'file1'); while(<IN>){ chomp; #ハッシュテーブルへ登録 $hash{$_} = 1; } close(IN); open(OUT,'>file3'); open(IN,'file2'); while(<IN>){ chomp; #カラム８まで取り出す my ($r1,$r2,$r3,$r4,$r5,$r6,$r7,$r8,$r9) = split(/,/,$_,9); if (exists $hash{$r1}){ print OUT join(',',$r1,$r8),"\n"; } } close(OUT); close(IN); ----------------------------- 動作確認済みです。不明点があれば、質問してください。
CPANにあるCGI::ProgressBarは目的に合いそうですか？ 参考URL：http://search.cpan.org/~lgoddard/CGI-ProgressBar …
#3 のように「正規表現だけでやろうとしない」のが正解ですが, 無理に正規表現で書く: ・よい子は真似してはいけないパターンその1 next if /^abc\[(\d+)(?(?{1 <= $1 && $1 <= 100})\]|(?!))/; next if /^abc\[(\d+)(?(?{1 <= $1 && $1 <= 100})|(?!))\]/; でも同じ ・よい子は真似してはいけないパターンその2 next if /^abc\[(??{join('|', 1 .. 100)})\]/; ・上のその2 と同じなんだけど「真似してはいけない」とまではいわないパターン $num_1_100 = join('|', 1 .. 100); next if /^abc\[$num_1_100\]/o;
≫本にはhttpd.confを書き換えなければならないと書いてあるのですが、変更箇所が書いてあるサイトなどはありますでしょうか。 わからなくなったらとりあえず検索してみましょう。 「xp apache perl インストール」や「httpd.conf cgi」で検索すればいろいろと見つかると思います。 ≫主にCGIプログラムを実行できるようにするための変更だそうです。 ≫バージョンが変わっても変更箇所は同じなのでしょうか。 こちらが参考になりますでしょうか。 ・自宅サーバー（Windows＋Apache）へのPerlインストール http://y-kit.jp/saba/xp/perlsetup.htm CGIを有効にするという程度であれば、バージョンの違いはあまり関係ないと思います。
$content = decode('utf8', $content); # コンテンツのコード変換 これ、いらんかも
もちろん可能。 インターフェイスをどうするかで実装は変わるけど。 Perlで実装ってことは、Ajaxとかそのあたりなんかな。 サーバ側言語をPerlってことなら、キーアサインをどうやって飛ばすかだけど ブラウザと仮定して、JavaScriptでもFlashでも取得可能。 もしクライアントは自前で作るなら、それこそ取得し放題なので、それをサーバにとばせばサーバ側Perlは処理ができる。 実際の表示部分は前述の通りJavaScriptなりFlashなり使ってると思うんで、これをどのタイミングで動作させるかは設計次第。 サーバレスポンス前に動作させて、描画後にレスポンス処理を行うか・・・ レスポンスをもとに動作させるか・・・ 設計すらわからないから、How toでは答えられないですが。
#1 の回答を全部読みましたか? 「> @INCに検索パスをあらかじめ加えるには」 の前に書いてある日本語が理解できますか?
超大雑把には 「その CSV ファイルを読み込んで当該セルのデータを出力する」 だけなので, ハッシュを使えば難しくないと思うんだけどなぁ.... もちろん「CGI を起動するごとにデータを読み込むのはどうよ」という指摘はあるだろうけど, それを気にするくらいなら DB でも作ってる.
えぇと.... まず正規表現で「.」は「任意の 1文字」にマッチします (改行にマッチするかどうかは状況による). で, 任意の正規表現のうしろに「*」を付けると「直前のものが 0個以上ある」という意味を持ちます. なので, 「.*」で「『任意の 1文字』が『0個以上ある』」, つまり「(0個以上の文字からなる) 任意の文字列」にマッチするわけです. でもって, 正規表現をかっこでくくると「後で使うかもしれないからその中のものを覚えておく」という働きもあります. 全体で「(.)」だと「任意の 1文字にマッチして, それを記憶する」ということになります. この「記憶しておいたもの」を＊パターン中で＊使うときに「\数字」という形を使います. ここの「数字」は「最初からかぞえた開きかっこの数」に対応します. 置換文字列 (s/// のうしろのところ) で使うときは, 「$数字」の形で参照します. と, 正規表現は「簡単なものを組合せて複雑なパターンを作る」ようになっています. なので, 「* がどういう意味を持つのか」「() はどういうときに使うのか」というように理解すべきです. 備忘録のように 「.*　」が、何かの文字列にマッチさせたい時に使う、 「([^<]*) 」が、どんな複数の文字列でもマッチさせる時に使う などとしてしまうと応用がききません.
一時ファイルに格納された段階で、すでにファイルサイズが増加しているように思えます。use utf8; を使わないか、順番を変えたらどうなりますか？ use CGI; BEGIN { $q = CGI->new; } use utf8; ...
他の人と同じ内容なんですが、正式名称で説明します。 \をPerlでは[バックスラッシュ](もしくは[逆スラッシュ])と呼びます。 円記号で表示されるのは、日本のWindowsのみで 特にプログラムでは不正確な表記です。 Perlの \[逆スラッシュ] には幾つかの違う意味があります。 　　[1]: メタ文字を定義する。 　　[2]: インタプリタへの命令文を通常の文字列として解釈させる。 　　[3]: リファレンスを抽出する。 これらはPerl文法の1番基本の部分の一つです。 [1]は誰もが(？)何気なく使っているであろう "\n" とかです。 改行文字でもなんでもないのに、メタ文字として解釈され、 内部で改行文字に置き返られます。 こーゆー勝手に違う文字や、違う概念として扱われる文字をメタ文字と言います。 [2]は、s/\"/\&quot\;/g; まさにこれです。 この例では、;[セミコロン] で文が終了されずに通常の文字列として解釈されます。 正規表現中は、通常の場合だと関数展開が行われないので、 & の前方に \ はいらないのですが、プログラムは人間が読む物なので、 関数展開しないと言う事を明示的に示すため、普通は \ を記入します。 [3]は、詳しく言っても分からない予感がするので、適当に説明します。 リファレンスはポインタ(アドレス)のようなものだと思ってください。 全てのデータは、アドレスを持ってます。 アドレスを「持ってる」と言より、アドレス上の「位置」にデータが存在します。 その位置情報(リファレンス)を取り出します。 　/%test; これは、%test が持っている実体の位置です。 どうゆうことかと言うと、変数は値を保有しているのではなく、 変数は実際のデータ位置を知っていて、自由にアクセスできると言うことです。 その位置(リファレンス)を変数に問い質して入手する時に \ を使います。 なお、そのデータ(リファレンス)にアクセスする時は [デリファレンス]と呼びます。 意味分からないと思いますが、今の段階では絶対分からないと思うのでスルーして下さい。 一応、これらは基本なんでどこにでも書いてあると思いますので、 知りたければ検索するとすぐ出てきます。 あと、今回みたいな疑問が沸いた時、とりあえずコンパイルしてみるといいです。 -cw で起動させると、実行なしのコンパイル、エラー内容が出力されます。 ※なお、Perlは適当な書籍を買うと嘘だらけですので気をつけて下さい。 オライリーの本の場合は初心者には難しいかもしれませんが、とりあえず適当な表現と嘘はないです。 サイトだったらそこそこまともな所は多いです。 http://www14.atpages.jp/jelfe/ あと、実は付属のマニュアルが市販の本よりずっと性能いいです。
「アホ」というか, 「かなり強引」な感じがするんですよ.... 「16進 4桁の文字列が与えられたときに, それをコードポイントとする文字にする」ってのはそれなりにありそうな気がするんだけど, やってることが単純なわりに eval とか s///eg とかの強引な手段を使ってるというのが気にいらない. pack なり unpack なりが使えればシンプルでいいんだけど, よくわからなかった.
binmodeの働きは、 Linux/Unixのとき ＝＞あってもなくても動作は同じ Windowsのとき ＝＞binmodeだとそのまま入出力で、binmodeないと読み込み時CRを読み飛ばし、書き込み時LFをCR+LFに変換 です。
その掲示板の作りかたによるものなので、一般的な「仕組み」では無いです。 eval関数そのものについては、引数で渡された文字列をPerlのスクリプトだと解釈して「実行」するものです。 例えば $s='$a = 1;'; $a=0; eval $s ; print $a; とすると、eval $s では $a=1; が実行されて、printでは 1 と表示されます。 おそらく、その掲示板のプログラムでは、必須項目に書いた内容を加工してプログラム状にし、evalで実行して使っているのでしょう。それが空欄だと、文法かなんかで正しくないプログラムになり、evalで実行できない、ということなのでしょう。
flockが使えないのはWindows 9x系で、 NT系なら大丈夫だと思います。 flockを使うにしても使わないにしても 正しく使わないとデータを飛ばしたりするので気をつけてください。 [参考] http://jn.swee.to/cano/lock/index.shtml
私ならMechanizeを使いますが。 他の方の書き込みも美しいですなぁ。 WWW-Mechanize http://search.cpan.org/~petdance/WWW-Mechanize-1 … #!/usr/bin/perl use strict; use WWW::Mechanize; use encoding 'utf8'; my $mech = WWW::Mechanize->new; $mech->get("http://www.google.co.jp/"); for my $form($mech->forms){ 　printf("%s %s\n", $form->method, $form->action); 　my @names = $form->param; 　for(@names){ 　　printf("　%s => %s\n", $_, $form->param($_)); 　} 　 　print "\n"; }
連投すみません。 "自身"って...ほんと自信なくします。 あと、質問者さんのスクリプトはこちらではうまく動きました。 よって原因不明です。よく見もせずにすみませんでした。 ただ、インスタンスを捨ててしまっているので、データは保存されないのではないでしょうか？
失礼しました。 よく確かめたところ、確かに m/\Q$x\E/ という使いかたで、$xの中に正規表現のメタ文字があっても効果を発しないの確認しました。 直接記述した場合は、\Eがあるとそこで\Qによる無効化が切れるようです。 申し訳ありません。
単純なテキストファイルへの出力処理の話しかと思っていたらポイントは別のところにあったんですね。 Socketが使えるかどうかわかりませんがこんな感じでしょうか？ **************************************************************************************************** #!/usr/bin/perl use Socket; my $host = "mimitako.net"; my $path = "/api/mecapi.cgi"; my $data = "sentence=ラーメンはおいしい。"; #----------------接続処理------------------- socket(SOCKET, PF_INET, SOCK_STREAM, 0); connect(SOCKET, pack_sockaddr_in(80, inet_aton($host))); select(SOCKET); $|=1; select(STDOUT); #------------HTTPリクエスト送信----------------- print SOCKET "POST $path HTTP/1.0\n"; print SOCKET "Host: $host\n"; print SOCKET "Content-Length: ".length($data)."\n\n"; print SOCKET $data; #------------サーバからのデータを受信 ----------------- my @aDT = <SOCKET>; print "Content-type: text/plain\n\n"; ## 配列@aDT内にあるXMLの内、surfaceとfeatureについて構文を解釈して単純な処理を行う print @aDT; exit; **************************************************************************************************** もう少し別のやり方があると思いますが、ぱっと思いついたのがこれでした。 ただし岡崎市中央図書館不正？アクセス事件のような事例もあるのでMECABは自分のサーバに立てるか他人のサーバなら許可を取ってやりましょう。 また、テキストファイル出力を行う際にダブりチェックはデータ量に比例して負荷が高くなると思います。量が少ないなら良いのですが、そうでないならDBサーバを利用した方が良いと思います。 でも、一つ目のリンク先でJavaScriptで処理できてるのならそこからデータを処理できるCGIを作ってサブミットした方が早いかと思います。
「#! /usr/bin/perl print "hello world!\n";」は一行に書いてあるのですか？ でしたら #!/usr/bin/perl print "hello world!\n"; と2行にしてみて、「./perl-test.pl」を実行してみたらどうなりますか？ （該当ファイルに実行モードが付与されているのが前提ですが）
sub get_date_string { my $now=shift||time; # 追加 # local(@week) = ("日", "月", "火", "水", "木", "金", "土"); local(@week) = ("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"); local($sec, $min, $hour, $day, $mon, $year, $weekday) = localtime($now); # timeのところを変更 # 後略 } 使い方 $today = substr(&get_date_string(time),0,10); # 今日の日付 $kinou = substr(&get_date_string(time-24*3600),0,10); # 昨日の日付 $ototoi = substr(&get_date_string(time-2*24*3600),0,10); # 一昨日の日付 未検証です。 todayはtime-(0*24*3600) kinouはtime-(1*24*3600) ototoiはtime-(2*24*3600) のように順番になってるので、ループにするとかのアレンジも出来ると思います。
> while(<IN>){ > #$workには、keep.txtの、1行目が入っているはず。 > $work=<IN>; <>は、呼び出す度に1行読み込みます。これだと whileの<IN>で $_に keep.txtの1行目が入る → $workの<IN>で, $workに keep.txtの「2行目」が入る → (他に<IN>を使ってなかったとして) whileの<IN>で $_に keep.txtの3行目が入る → $workの<IN>で, $workに keep.txtの「4行目」が入る .... と$workには偶数行しか入りません。 > #書込みする為、keep.txtを書込み用に開く。 > open IN2, "$file2"; 最初、リードでオープンしてるのかと思いました。 $file2に">>"が入っていて、$fileと同じファイルを示している、って、気付きませんでした。 >> を書くならこのopenの中で書いた方が後々のためです。自分で書いたコードも時が経つと忘れます。 また、最近のバージョン(5.6以降)なら、このような2引数版ではなく、3引数以上のopenが推奨です。 open IN, '<', $file ; open IN2, '>>', $file ; また、このopen IN2自体失敗してませんか? keep.txtはすでにリードでオープンされています。それをライトでオープンしようとしたら、失敗するような気がします。 エラーチェックはしましょう。 また、whileで何度もopen IN2が呼ばれます。 最初は成功していたとしても、そのうちopenできるファイル数の限界に達します。 そうでなくても、>>は追記なので、シークして書き込みポイントを変えないかぎ、ファイルの末尾に追加されます。 今は2行読んで1行書いているので終了しますが、ちゃんと1行ずつ読むようにしたら、1行読んだら1行追加されていくので、永遠に(ディスクがいっぱいになるまで)終りません。 方法1) 文字列または文字列のリストとして、Perlに読み込み → 加工 →書き出し open IN, '<', $file ; @line = <IN> ; #全部読み込み close IN ; # 開いたら閉じる ### @lineの加工 ### open OUT, '>', $file ; print OUT join('', @line); close OUT ; # 開いたら閉じる 方法2) 読み書きモード( +< ) でopen → tellで読み出し/書き込み位置を記録 → 読み出し位置へseek → 読み出し → 次行用に読み出し位置を更新 → 加工 → 書き込み → 次行用に書き込み位置を更新 (コードは面倒なので省略) 以上「絶対に同時に使われることが無いことが保証される場合」のやりかたです。 CGIということは、誰が何時使うか不定、ということです。 例えば Aさんがa.htmlからsubmit → keep.txt に保存 →Aさんがb.htmlからsubmit → keep.txt に保存 ならよいのですが Aさんがa.htmlからsubmit → keep.txt に保存 →Bさんがa.htmlからsubmit → keep.txt に保存 →Aさんがb.htmlからsubmit → keep.txt に保存 となったら、最終的にどうなるかよくわかりませんよね? > 通常、複数画面あり（複数のHTMLファイル（form)）各画面の値を保持しておく場合、どのような方法がよく、利用されるものなんでしょうか？ 常套手段としては ・同じであることを示すIDを用意する。 HTMLも静的なものでなく、CGIで動的に作成するようにして、全てに同一IDを <input type="hiddern" name="ID" value="XXXXXXX"> 等として埋め込んだり、Cookieに書き込んだりする。 CGI側で、IDをチェックして一連の入力か、別の入力かを判定して処理を分ける. ・a.htmlをsubmitしたら、単にメッセージを出すのではなく、submitされた内容をtype=hidden等で引き継いだ b.html 相当のものを動的に作成する。 ・親画面を用意し、 a.html,b.htmlはその子にする。 submitでは直接送信せず親画面にjavascript等で転送。 最終的な送信は最後に親画面からまとめて行う。 等があります。 あとは、あなたのやりたい事次第です。
Perlの「CGI」についての質問かと思いますが、 Perlに限らず、CGI を用いてCSSを使用したページを出力することは何の問題もありません。 いわゆる普通のページでは、HTMLやCSSのデータ、あるいは画像データなどを記録した「ファイル」をサーバに置いておき、それをブラウザに渡して、ブラウザ側で表示します。 それに対し、CGIは、そうやってブラウザに渡すデータを、あらかじめファイルに用意しておくのではなく、プログラムで毎回生成する、というものにすぎません。 ブラウザに受け渡しするようなデータならなんでも、CGIで生成することができます。 「CSSを使った掲示板」を作りたいのでしたら、まずはそういうHTML+CSSデータをデザインしてください。あとは、そのデザインにそったデータをCGIが出力するようにすれば、CSS対応の掲示板になります。 CSS対応の掲示板を作れるかどうかは、Perlとかのプログラミングの問題ではなく、Web画面デザインの問題になります。
a.html、b.html、c.htmlを全部CGIスクリプトに変更（a.cgi、b.cgi、c.cgiなど）して、 CGIスクリプトが受け取ったデータを <input type="hidden" name="nanika" value="ここ">に出力すればいいと思います。
何をやろうとしているのか不明だけど、とりあえず。 #!/usr/bin/perl use strict; use warnings; use utf8; use Encode; my $key1 = 'test'; my $key2 = 'test2'; my $val1 = 'あああ'; my $val2 = 'いいい'; my $file = "utf8DB2"; open my $fh, '>', $file or die "$!:$file"; binmode $fh, ':encoding(utf8)'; print {$fh} "$val1\n"; print {$fh} "$val2\n"; close $fh or die "$!:$file"; dbmopen my %hash, $file,, 0666 or die "$!:$file"; $hash{$key1} = Encode::encode_utf8($val1); $hash{$key2} = Encode::encode_utf8($val2); dbmclose %hash or die "$!:$file"; # cp932 = Windows shift-jis my $locale='cp932'; dbmopen my %dbm, $file, 0666 or die "$!:$file"; for my $key ( keys(%dbm) ) { my $val = $dbm{$key}; Encode::from_to( $val, 'utf8', $locale ); print "key2 : $key val : $val\n"; } dbmclose %dbm or die "$!:$file";
「特定の文字」の出現回数を調べるなら tr/// がセオリー. s///g と同じといえば同じだけど. 「すべての文字」の出現回数を (個別に) 数えるなら split + ハッシュ.
statが失敗していれば空リストを返すはずですから、そのときのエラーを確認すると何かわかるかもしれません。 my @list = stat $file; if($#list < 0) { warn "$!"; } あとは、CGIではなくてターミナルからやると、何故か上手くいくとか
No.1さんのおっしゃるとおりで、メッセージボックスはjavascriptでされることになると思います。 CGIでするならもう一枚内容確認画面を作って、そこで「送信する」「送信をやめる」といった ボタンを作って似たようなことはできると思います。 それであれば、その後押されたボタンによって処理をわけることはできます。 そういうメールフォームはあります。
普通に思いつくものを挙げれば、perl以外の知識として HTML,CSS,DB(MySQLなど) があるでしょう。 「配布されている」と書かれているので、たぶん改造されるのだと思いますが、どの程度の知識が必要かは改造規模にもよると思います。 たとえば、もし１から作れるだけの知識となると、それは並大抵の苦労では済まないと思います。 また、全然視点が違うので、怒らないで欲しいのですが「Drupal」というツールを使う手もあると思います。 但し、このツールを使っても目的の掲示板ができるかは保証の限りではありませんが。 それと一番気になるのは動作環境です。 どのようにして動作確認をされるのでしょうか。 それによっては、サーバーの知識も必要になります。
ローカル環境を構築しているのであれば、 $gif_dir = 'c:/Program Files/Apache Group/Apache2/htdocs'; <INPUT TYPE=\"image\" src=\"$gif_dir/GIF/button-fix.gif\"> ではなくて $gif_dir = 'http://localhost'; <INPUT TYPE=\"image\" src=\"$gif_dir/GIF/button-fix.gif\"> になるのではないでしょうか？ （DocumentRootがc:/Program Files/Apache Group/Apache2/htdocsだとして）
Catalystのコンフィグにあるuploadtmpでアップロードの一時ディレクトリを変更できませんか？
ドコモはUAの中にIDは入ってきません。 以下を参考に。 http://www.maido3.com/server/script/guid-docomo. …
>個人を識別させたいのですが、意味がないのですか。 質問文を読んだ限りでは、個人認証処理に関する記載、及び、それの有効無効の判断に関する判定処理とかあたりが読み取れなかったので、単純にそう書かせていただきました。 認証、及び、それの有効無効判別の処理あたりを補足願います。 と書いておけばよかったですかね。 >>cookieの書き込みはできたのですが、cookieのクリアがされません。 クッキーのクリアに関しては、 ・有効期限を過去にして書き込む（→勝手に消えてくれる。 ・同じクッキーに対して、「空白」なりなんなりを上書きする。（→ユーザー認証をする上で有効でないクッキーデータにしてしまう。 のが分かりやすいと思いますよ。 両方とも「書き込み」で対処できる内容ですので。
ちょっと修正 $ diff -u delete_virtualhost.pl　delete_virtualhost+.pl --- delete_virtualhost.pl2010-09-08 21:59:49.000000000 +0900 +++ delete_virtualhost+.pl2010-09-08 22:29:27.065905463 +0900 @@ -10,9 +10,9 @@ 　　 my $regexp = $_; 　　 $regexp =~ s/\x0D?\x0A?$//; 　　 $regexp = quotemeta $regexp; -　　$regexp = '(' . $regexp . ')'; 　　 $regexp; } @domain_list; +$domain_pattern = '(' . $domain_pattern . ')'; my $conf_file = shift || die "need conf conf_file"; my $backup = $conf_file . '.bak';
えぇと.... 大文字の「右」と「左」のどっち? 文章は「右」と言ってるけど, 例は「左」になってるよ... あれ? 他にも食い違ってる.... Perl のとあるバージョンからは, 前方一致や後方一致を駆使して ・右: s/(?<=[a-z]{3}[A-Z])/ /g; ・左: s/(?<=[a-z]{3})(?=[A-Z])/ /g; のような方法も考えられます. ただし, すでに書いたように文章と例で食い違いがあるので, このような方法であなたの期待する結果が得られるかどうかは分かりません.
このエラーは「localtime()の引数"Sat Sep 4 01:05:24 2010"は数字じゃない」と言っています。 localtime()には数値(1970年1月1日からの経過秒数)を与えます。 今回は$chkdayが数値でなく"Sat Sep 4 01:05:24 2010"という文字列だったからエラーになったのでしょう。
一応「配列なりハッシュなり」と書いたんだけど, 「たくさんの文字列と等しいかどうか比較する」ときには戦略の 1つとして「比較対象となる文字列をキーに持つハッシュを使う」ことがあります. たとえば, 前半のループを while (<IN>) { my($ip,$flag) = split(/,/,$_); if ($flag == 1) { $data{$ip} = 1; } } として, 比較対象の文字列をハッシュ %data のキーに入れます. すると後半は while (<IN>) { my($ip,$x,$z) = split(/,/,$_); if (defined $data{$ip}) {$xdata.= "$ip,$x,$z\n";} } とでき, foreach ループをまるまる消し去ることができてしまいます. この辺はメモリとのトレードオフにもなるので, 何を優先するかによってどうするかが決まります. ちなみに前半のループで文字列を配列 @data に入れたときは, 後半のループ中 foreach ( split(/,/, $data) ) のところが foreach (@data) のようになります. ところで, 最終的に $xdata をどうするの? これも, 場合によっては配列にする方がいいかも.
てきと～に split したら終わりだったりして.
こんにちは。 ＞よくわかりませんが、 なんでわからん？？？ 「perl-lib.pl」のソース見たら、useしたりrequireしたりしてるでしょ？？？ ここのパスがおかしいとか、そういう事ではないんですか？ という回答なんですが？？？
何故Image::Magickのインストールにppmを使わなかったのですか？ Image::Magickはppmを使ってインストールすれば、他に設定する箇所はどこもありません。 そのまま使えます。 Image::Magickを一旦アンインストールし、ppmからインストールしてみて下さい。
my $fhandle2 = $query ->upload('ファイル名'); でファイルを 1個アップロードできるなら, それをファイル数の分だけループさせればいい. 「ファイルハンドル」を複数用意する必要はないはず.
Perl をインストールしたディレクトリは PATH に含まれていますか?
基本的に同等の代替品を用意することになります。 ・そのサーバ用でコンパイルする （No.2さんの方法） ・同等の古い環境を用意してそこでコンパイルして持って行く ・代わりにDigest::SHA::PurePerlを使う あたりです。
rubyですが、ユーザーIDのフィールド名を’email’ではなく’id’にするとうまくいきました。
フォントは読めていますか？ print -r $font ? "$ font readable\n" : "$font not readable\n"; Encodeが使えるなら、JcodeでなくEncodeを使いましょう。 use Encode; my $text = decode( "eucjp", $line );
買い物カートCGIのスクリプトがわからないので的を得ていない答えになるかもですが、 住所は前のフォームで入力済みということでしょうか？ それでしたら、&ReadParseでフォームデータを取り出したらいいと思います。 まだ入力されていないということでしたら新たにINPUTフォームを作るということですね。 それとも住所は別途テキストファイルに入っているということなのでしょうか？ ところでフォームデータ処理するならCGI.pmのほうが使い勝手がいいと思います。
こんにちは $wbにブックのオブジェクトがはいってるとして $wb->worksheets("Sheet1")->copy({after => $wb->worksheets("Sheet3")}); でコピーします
スクリプトの内容から察するに、質問者さんがやりたいことは 「ユニークな（＝既存と重複しない）IDを確実に発行したい」 と理解しました。 回答から先に申し上げると、 「CGI実行環境などの、同一スクリプトが複数プロセスで同時に並行実行される可能性があるのであれば、このケースでは絶対にロックが必要」です。 加えて、このスクリプトの場合、ロックの手段や対象を間違えると正常に動作しません。 まず、ご質問にあった「ロックが必要な理由」から。 他の回答者さんの具体例の通り、複数プロセス間において「書き込みタイミング」が重なった場合に、ロックがないと追記のみであってもデータ破壊が発生します。 すでに挙がっている例とは別のパターンとして、AとBの２つのプロセスが以下のタイミングで並行実行されたとします。 ・Aが追記モードでファイルオープン（ファイルポインタはファイル末尾にセットされる） ・Bが追記モードでファイルオープン（ファイルポインタはファイル末尾＝Aと同じ位置！） ・Aがファイルに書き込み（ファイルポインタは書き込み末端位置に移動するが、Bのファイルポインタの位置は変わらない） ・Bがファイルに書き込み（Aが書いたデータを上書きしてしまう！もしAの書き込みデータのほうがBより長かった場合には、結果として「Bのデータ＋Aのゴミ」が残る） 「ファイルオープン→ポインタを末尾に移動→書き込み→ファイルクローズ」を一度に行うために、ロックが不可欠なのです。 ロックの必要性についてはご理解頂けたかと思います。 次にロックの方法について。 このスクリプトでは「ファイル読み込み」と「ファイル書き込み」がそれぞれ独立したファイルオープン＆クローズで行われています。 この場合、「読み」「書き」それぞれ個別にファイルロックをかけても、意図した動作にはなりません。 「読み」と「書き」の間で、データ内容の一貫性が保たれない場合があるためです。 以下に例を挙げます。 - AがID='abc'の重複をチェックするためにファイルを読み、重複がないことを確認 - BがID='abc'の重複をチェックするためにファイルを読み、重複がないことを確認（この時点でAがまだ書き込んでいないため、Bは重複がわからない！） - AがID='abc'に関する情報を追記書き込み - BがID='abc'に関する情報を追記書き込み（結果、'abc'のレコードが２つに！） つまり、「読み」～「書き」を行う間、他のプロセスに割り込まれないようなファイルロックをする必要があるわけです。これを解決するには、２つの方法があります。 ・データファイルをロック対象にする場合は、「読み」「書き」をひとつのファイルオープンで済ませる ・データファイル以外に「ロック専用ファイル」を用意して、「読み」の前にロック、「書き」の後にアンロックすることで他プロセスの割り込みを防ぐ 例として、前者の方法を取った場合のスクリプト例を以下に示します。 my $id="abc"; use Fcntl; sysopen(my $INOUT, "file", O_CREAT|O_RDWR) or &error; # 読み書きオープン、ファイルがない場合は新規作成 flock($INOUT, 2); # 書き込みlock seek($INOUT, 0, 0); # ファイル先頭に移動 # ID重複チェック while(<$INOUT>){ my ($cid) = split(/\,/); if($cid eq $id){&error;} } seek($INOUT, 0, 2); # ファイル末尾に移動（この例ではすでに末尾にいるので省略可）print $INOUT "$id,$pass"; close($INOUT); # unlockはclose()時に自動で行われる 以上です。以下、補足です。 - open()の代わりにsysopen()を使うことで、読み書きモードによるオープンであってもファイルの新規作成が可能です。 - 今回の例ではファイル先頭から末尾まで読み込むので、seek()は省いても動作すると思います。読まずに追記書き込みのみをする場合はseek(FILEHANDLE, 0, 2)は省略しないでください。ファイルオープンしてからロックするまでの間に、ファイルサイズが変わっていることがあります。 - ファイルハンドルをmyで変数化する癖をつけておくと、将来プログラムが大規模になったときも安心です。INやOUTなどのPerl4風ファイルハンドラは名前空間がグローバルになるので、ファイルオープン中の処理が長くなった場合に予期せぬ動作を招くことがあります。
test.phpで不備がありましたので追記になります。。 <?php $appid = "＜ここにAPIのIDが入ります＞"; mb_http_output('UTF-8'); mb_internal_encoding('UTF-8'); header('Content-Type: text/xml;charset=UTF-8'); $url ='http://jlp.yahooapis.jp/MAService/V1/parse?'; $url.='sentence=' .urlencode(mb_convert_encoding($_GET['q'],'UTF-8','auto')) .'&appid=' . $appid; print(file_get_contents($url)); ?>
perl と php の一番大きな違いは古いか新しいかで、 perl は古い分、実績があり php は新しい分、色々と便利だったりします 取り敢えず、最初は狭く浅く 両方を触ってみては如何でしょうか HTMLでホームページを作る場合、 HTMLから POST 又は GET で cgi 又は php にデータを渡す ----------------------- cgi 又は php 側の処理 ・POST 又は GET で情報をもらう ・日本語コードの変換処理を行う ・情報を元にファイルを読み込む ・情報をファイルに書き込む ・HTML形式で出力する ----------------------- 最低限、両方の言語で、覚えていて損は無いレベルです。 少なくとも、両方の言語で、カウンターと 簡易掲示板が作成できるレベルになります。 後は、実際両方で作成してみて、自分にあった方で データベースを利用にはどうすればよいかとか、 細かい分岐の処理とかを勉強していけば いいのでは無いでしょうか
基本的に改行を数えて段落を、ピリオドを数えて文章を、スペース数えて単語を数えたらいいのだと思いますが、 段落は＋１して調整して、 単語は「文章の終わりはスペース２つ」「改行があるところはスペースなし」なので調整してあげたらよいかと思います。最後はピリオドで改行なしなら合いそうですが単語の数が一個くらいずれるかもしれないです。 #!/usr/bin/perl use strict; use warnings; my $sentence = "I stand here today humbled by the task before us, grateful for the trust you've bestowed, mindful of the sacrifices borne by our ancestors. I thank President Bush for his service to our nation as well as the generosity and cooperation he has shown throughout this transition. Forty-four Americans have now taken the presidential oath. The words have been spoken during rising tides of prosperity and the still waters of peace. Yet, every so often, the oath is taken amidst gathering clouds and raging storms. At these moments, America has carried on not simply because of the skill or vision of those in high office, but because we, the people, have remained faithful to the ideals of our forebears and true to our founding documents."; my ( $sent, $word, $para ); my @letters = split //, $sentence; foreach (@letters) { if (m/\n/) { $para++ } if (m/\./) { $sent++ } if (m/ /) { $word++ } } $word = $word + $para * 2 - $sent + 2; $para++; print "$para,$sent,$word";
MacOSのことはよくわかりませんが、一般的なUNIX系OSで考えると、、 シンボリックリンク/usr/bin/perlを作り、/usr/bin/perl5.8.9にリンクすればいいでしょう。 ln -s /usr/bin/perl5.8.9 /usr/bin/perl そうすればPerlスクリプトは「#!/usr/bin/perl」のままでOKです。
こんな回答で如何でしょうか？ 第一問：コマンドで数える事が出来ます。perlからコマンドを打っちゃいます。 my $result = ""; $result = `wc 英語の文書ファイル`; #単語の数、段落の区切りがわかります。 print $result; $result = `sed -e "s/ ./^M/" 英語の文書ファイル | wc`; #文の区切りの数が分かります。 print $result; 第二問ですが、「辞書は先に用意したファイル」がどうなっているかわからないので作れません 以上、頑張って下さい。
「入出力には shift_jis (ないし CP932) を使う」という必然性があるとしても, それは「スクリプト内で shift_jis (ないし CP932) を使う」必然性にはならんよね. もっとも, スクリプト内で「文字」単位で処理するようにさえすれば shift_jis だろうと utf8 だろうと euc-japan だろうと問題ない.
> あと、10文字表示したいのに > その、システムが5文字しか > 表示できない場合に > 残りの5文字はどのようにして表示させるのでしょう なぞなぞですね？みかんで例えるとこんな感じでしょうか？ 皿にみかんを10個のせたいのに、 その皿には5個までしかのせられない場合に 残りの5個のみかんはどのように皿にのせるのでしょう 答えは皿にのせてあるみかんを食べる。つまり、先に書いた5文字の消し方を聞いていると考えましたがどうでしょう？
＞文字コードってどのようにして調べるのでしょうか？ ＞自分が作っているプログラムの文字コードが分からないのです。。 いや『調べる』とか『分からない』とかそういう話じゃないでしょう。 どの文字コード（及び改行コード）で保存するかは、ご自分で決めるものです。 お使いのエディターで保存する際にどのコードで保存しているのでしょうか？ 今まで何も意識せずにファイルの保存を行っていたとすると＃１さんもおっしゃってますが、現在あなたの作成したスクリプトは多分（ Win 機ならという条件が付きますが）Shift_JIS で改行コードが CR + LF だと思います。 ちなみに #!/usr/bin/perl print 'Content-type: text/html\n\n'; print '表示'; exit; こんなスクリプトをブラウザで表示させて『表示』が表示できなければ Shift_JIS で確定(゜∀゜) TeraPad や EmEditor などの Win 機での定番とも言えるテキストエディターでだと、ファイルを開いた際にステータスバーに現在開いているドキュメントの文字コードなどが表示されたりするんですけど…
どんなスクリプトか知らずに答えられると思う?
コンパイルの必要の無いモジュールをPurePerlモジュールといいますが、回答者の方々の言われるようにグラフィックス関係のモジュールなど他の言語で記述されていて多言語コンパイルの必要なモジュールもあります。 そうなると、他の言語のコンパイラが必要ですが、わたくしの環境での構築例をば、ちょっと Perlはすでにインストール済みであることを前提とします -------------------------------------------------------------------------------------- ◎　MinGWをダウンロードしてインストール(GCCなどCのコンパイラやリンカなど／MinGWで検索) インストールの際、処理系言語は欲張りすぎない方が良いと思う、そのとき必要な言語だけ選択しましょう。 インストールしたら下記の環境変数を設定すること C_INCLUDE_PATH LIBRARY_PATH PATH インストール先がデフォルトなら C_INCLUDE_PATH　C:\MinGW\include LIBRARY_PATH　C:\MinGW\lib PATHには今入っている文字列の先頭に「C:\MinGW\bin;」を「追記すること」／絶対に全体を書き換えてはいけません（俗にパスをきるってやつです）。 上記設定をじっくり確認したら再起動 -------------------------------------------------------------------------------------- ◎　つぎにNMAKEをダウンロードしてインストール マイクロソフトのサイトからダウンロード（NMAKEで検索すると出てきます） 「NMAKE.EXE」と「NMAKE.ERR」をPerlのbinフォルダにコピー -------------------------------------------------------------------------------------- で準備完了 好きなモジュールを perl -MCPAN -e shell でCPANシェルを起動後 install モジュール名 でモジュールをインストール ********************************************************** プログラムは言語をマスタするだけで終わりではなく開発ツールや環境設定が出来てやっと一人前です。 失敗しても大丈夫くらいの覚悟でいじり倒してください。 誰にでも初というのはありますので。
前回のプログラムを修正してみました。色データは冒頭の配列 @color に入れる形で、ファイル読み込み等でセットすればうまくいくものと思います。 use strict; my @color = ('赤', '青', '黄'); my @result = map { [$_] } @color; print "\x20\x20"; while (<DATA>) { if (/<person / .. /<\/person>/) { if (/id="(\d+)"/) { printf "%5d", $1; push @$_, "\x20\x20\x20\x200" foreach @result; } foreach my $i (0 .. $#color) { $result[$i]->[-1] = "\x20\x20\x20\x201" if /<keyword>$color[$i]<\/keyword>/; } } } print "\n"; print @$_, "\n" foreach @result; __DATA__ <?xml version="1.0" encoding="UTF-8"?> <person_list> <person id="1001"> <keywords><keyword>赤</keyword><keyword>青</keyword></keywords> </person> <person id="1002"> <keywords><keyword>赤</keyword><keyword>黄</keyword></keywords> </person> <person id="1003"> <keywords><keyword>黄</keyword></keywords> </person> </person_list>
入れ違いで補足が入っていましたが ・この$subjectなら、"と'に違いは出ないと思います。 ・「$subjectの文字列の"と'が問題」としているが、$subjectが使われている様子が無い。 $cmp_subject変数が関係していそうだが、提示された文には入っていない。 ・絵文字変換用の文字列の確認が不十分。 以下のものは全部index関数が>=0となりsub emoji_tblで処理される <#001(セミコロンで終ってない)→$moji_num='<#001' <#0011;(一桁多い)→$moji_num='<#001' <#001;(一桁少ない)→$moji_num='<#01;' <#あa;(そもそも数字ではない)→$moji_num='<#あa'(Shift_JIS,EUC-JP等の全角=2Byteの場合) emoji_tblが、エラーの場合に何がreturnされるかが提示されていないので、これらの文字列が入った場合にどうなるか不明 下手すれば、whileが無限ループになります。 ・そもそも、emoji_tblの作り方も問題 グローバル変数$moji_numで変換対象を渡しているけど、 呼出は&emoji_tbl($moji_num)として、sub emoji_tblで $_[0]で受けるのが普通。 あと、このifの羅列、私は正しく作る自信も、正しくできているか確認できる自信もありません。 例えば、 if( $calia eq 'Docomo'){..が一箇所手がすべってif( $calia eq 'docomo'){..となっていたり 上からコピー&ペーストした後の $moji_cnv = ..の変更を忘れて重複したり があっても、なかなか気づけないでしょう。 emoji_tblの作り方を見て思ったのですが、グローバル変数を多用している(というかローカル変数を使っていない)様に思われます。 設定したつもりの変数が別の箇所で書き変わってしまっている、ということは無いでしょうか。
余談だけど, 最初に配列をいきなり作らないとだめなの?
Perlでのブラウザの判断は、環境変数の「HTTP_USER_AGENT」を 使用することで可能です。 以下のURLが参考になると思います。 http://www.perl-labo.org/analyse/useragent/ 参考URL：http://www.perl-labo.org/analyse/useragent/
Botが何を指してるかわかりませんが、もしかしたら 「あいうえお」を ある時刻: 「あ」を出力 一定時間後:「い」を出力。前の「あ」の続きに出力して「あい」となる さらに一定時間後:「う」を出力。前の「あい」の続きに出力して「あいう」となる .... ってことなんでしょうか。 それならば、上に書いた通りにsplitで分割したものを先頭から順番に1文字ずつ表示するだけです。 また、「表示」って、どこへどんな方法で「表示」するのでしょう? バッファリングしているなら、1文字毎にフラッシュが必要でしょう。 GUIのモジュールへの出力ならリフレッシュが必要かもれません。
＞$doc は、複数行のデータです。（改行が、複数ある） 他の方の指摘の通りだと思いますが、ストレートに書いてないので、伝わってないかもしれませんね。 正規表現の . は、改行にはマッチしません。 お書きの正規表現だと、<SCRIPT>から</SCRIPT>までが同一行の時だけマッチします。 . を改行にもマッチさせたいときは、正規表現のオプションで s を指定します。 $doc =~ m%～～～%s;
あ～.... 「参照がスカラー」というのは (その通りとはいえ) この文脈では適切じゃないなぁ. 訂正するためちょっと詳しく書いてみよう. GetData で my ($f, @bf) = @_; と引数を受けているので, $f がファイル名になり, @bf は「配列に対する参照 \@l を唯一の引数とする配列」です. で, 本当なら split した結果はこの参照を通して代入しなきゃならないのに @bf = split(/,/, <FP>); と配列そのものに入れている. つまり, 引数で渡された参照は全く使っていない. 「配列の要素数が取れている」というのは, この「ローカルな配列 @bf」であり, メインの配列 @l の要素数を調べれば「@l にデータが入っていない」ことはわかるはず. 訂正方法はいくつかあるけど自然なのは「参照はスカラー」なので my ($f, $bf) = @_; と参照もスカラーで受けること. それ以降は現状 @bf となっているのを参照経由で @$bf とすればいい. 念のため, 「参照」についてものの本で再確認した方がいいかもしれません.
>サーバーに Image::Magickか、Image::Magickの動作に必要な他のモジュールがインストールされていません 参考URLへ質問するのは？ 参考URL：http://www.koikikukan.com/archives/2009/04/12-01 …
foreach $word (split(/ /, 'Google it for yourself.')) { print "$word\n"; }
use lib '/home/hogehoge/.cpan/build/Web-Scraper-0.32-OmqxyL/lib'; use lib '/home/hogehoge/.cpan/build/Web-Scraper-0.32-OmqxyL/blib/lib'; use Web::Scraper; でもいけないでしょうか？いけないとしたらちゃんとインストールできてない可能性が高いです。 cpanmのほうが使いやすいとは思います。
$max_line = 200000 ; #などとしておけば、データ件数が変わっても変更箇所がわかりやすい #$max_line = $ARGV[0] ; #などと、コマンドライン引数を使う方法もある。 $start_line = 1 + $max_line /4 ; #開始行 $end_line = $start_line - 1 + $max_line /4; #終了行: 開始行+表示させる行数だと、1行多いことに注意 open(OUT,">${csv}"); open(IN, $data ) || &error(" $data を読み込みopen出来ません"); $lno = 0 ; #現在の行数を記録する変数 while($lines = <IN>) { $lno ++ ; # 1行読みこめたのでインクリメント if ( $lno < $start_line ) { next ; #開始行になってなかったら次の行へ } # splitのマニュアル見ても、split /正規表現/ って書式しか載ってないなぁ # ,は別に特殊な正規表現でないから、\は不要 ($seq1,$categ,$password,$imail,$cont) = split(/,/, $lines); #ただ表示するだけなら、 printでまとめてしまってもよい print OUT "${seq1},${cont} ,1\n"; # あと、入力ファイル名と、表示用に一時利用する文字列に、 # 同じ $data変数を利用していますが、同じ変数に違う意味を持たせるのは、 # 間違いのもとなので、避けた方がよいでしょう。 if ( $lno >= $end_line ) { break ; # 終了行だったら即時にループを終了 } } close IN; close OUT;
変数の内容自身を変数名にしたいってことなら for($i=1;$i<10;$i++){ 　my $tmp = "a". $i; 　${$tmp} = 10 + $i; } って感じでどうでしょう。 $a1=11 $a2=12 $a3=13 ... となります。
> my @lines = $kuchikm2; 上の文では行単位で配列に入らず、要素１の配列になります。まずは、この部分を直すのが先決かと思います。 use warnings; my @lines = map { "$_\n" } split /\n/, $kuchikm2; print @lines, " a\n"; my @sorted = map { $_->[1] } sort { $b->[0] cmp $a->[0]} map { [(split /,/, $_)[4], $_] } @lines; print @sorted, " b\n";
本屋でPerl CGIの解説書を探すと目的のことが載っているでしょう。
この例だけで単純に考えれば 2列目をキーにして出力していけばよいだけみたいだし、 先頭は時間ぽい? ということは固定長扱いに出来そうですね。 ということで、2列目だけの連想配列作ってキーがあるか無いかで 判断するのはどうでしょう? 数百万程度なら20分もあれば終わりそうだけど。。。 #実装はイメージです(笑 my %PK = (); open($FILE_1, '<') || die; while( <$FILE_1> ){ $PK{ substr($_,8,13) } = 1; } close($FILE_1); open($FILE_2,'<') || die; open(OUT, '>OUTPUT_FILE'); while( ($line = <$FILE_2>) ) { print OUT $line if( exists($PK{ substr($line,0,13) }) ); } close(OUT); close($FILE_2); オンメモリーで処理していくのでそれなりのメモリは使うかもしれません。 ちなみに、UNIXならjoinというコマンドもあります。
バージョンにもよるんだけど, \K って使えない? 参考URL：http://fleur.hio.jp/perldoc/perl/5.9.5/pod/perlr …
そういうことなら仕様です。 { 　　package BaseClass; 　　sub func1 { print "BaseClass::func1", $/ } 　　sub func2 { 　　　　my $self = shift; 　　　　print "BaseClass::func1", $/; 　　　　print '$self = ', ref($self), $/; 　　　　func1($self); 　　} } { 　　package SubClass; 　　use base qw(BaseClass); 　　sub new { 　　　　my $class = shift; 　　　　bless {}, $class; 　　} 　　sub func1 { print "SubClass::func1", $/ } } my $sub = SubClass->new(); $sub->func2(); 上のコードを実行すると BaseClass::func1 $self = SubClass BaseClass::func1 となります。 データとblessされたパッケージ名がSubClassなので、SubClassから関数を探します。ただし、上の例で書いてあるとおりBaseClassの関数を呼ぶ場合は、func1($self)でOKです。 無理にやろうとすれば、一旦blessされたパッケージ名をBaseClassに変えてからfunc2()を呼ぶという方法もあります。わかりづらいので、避けたほうがよいでしょう。 my $sub = SubClass->new(); my $base = bless $sub, 'BaseClass'; $base->func2(); $sub = bless $base, 'SubClass';
さらにおまけですが, 思わず split を使ってしまったものの意味としては substr を使うべきだよなぁとちょっと反省. あと, 質問をよく見たら「3個以上」なのでそれもあわせると my @data = ($str =~ /(.{3,})(?(?{$1 eq substr($1, 0, 1) x length($1)})|(?!))/g); という感じかな. いずれにしても, この 1文だけではあとで見た人が泣きそうだと思う.
例の$csvnameというのは、cp932のままでないと上手くいかないと思っていました。なので-CAオプションで utf8フラグを付けるとopenできるというのは説明ができません。 use encoding "cp932";とbinmode STDIN, ':encoding(cp932)';をはずすとどうなりますか use encoding "cp932"は binmode STDIN, ':encoding(cp932)'; binmode STDOUT, ':encoding(cp932)'; binmode STDERR, ':encoding(cp932)'; を3つするのとほぼ同じことなので、2箇所はずす必要がありました。
訂正 next EACH_FILES; if $_ =~ /^\.+$/; ↓ next EACH_FILES if $_ =~ /^\.+$/;
バッククオートでくくられた文字列は、それを外部コマンドとして実行し、その出力結果になります。 Windows + Active Perl の場合なら、シェルとしてcmdか使われると思います。 lsやduはunixでは標準とも言えるコマンドです。 Perl の一部ではありません。別物です。 Windowsにも入っていません。 対策としては ・ls、du等のUnix系のツールのWindows移植版を使う 　例えば http://gnuwin32.sourceforge.net/ ・同等の処理をPerlで作る ・同等の処理をする別コマンドで代用する 　ls→DIR 等。オプションや表示が変わるのでスクリプトにも変更が必要 ・MinGW,Cygwin等の環境をインストールして、それ用のPerlを使う ・仮想環境でLinux等のunix系のOSを使う
こんなのとか ----------------------------------------------------------------------- <form name="frm1" action="aaa.cgi" method="post"> <input name="t1" type="text"> <input name="t2" type="text"> </form> <form name="frm2" action="bbb.cgi" method="post"> <input name="t1" type="text"> <input name="t2" type="text"> </form> ： <input name="b1" type="button" onClick="document.frm1.submit();"> <input name="b2" type="button" onClick="document.frm2.submit();"> ----------------------------------------------------------------------- 　または ----------------------------------------------------------------------- <html> <head> <title>TESTページ</title> <script language="javascript"> <!-- function fSubmit(sType){ var sCGI = 'aaa.cgi'; if(sType > 0) sCGI = 'bbb.cgi'; with(document.frm1) { action = sCGI; // method = 'post'; submit(); } } </script> </head> <body> <form name="frm1" action="#" method="post"> <input name="t1" type="text"><br /> <input name="t2" type="text"><br /> </form> <input name="b1" type="button" value="呼出1" onClick="fSubmit(0)"><br /> <input name="b2" type="button" value="呼出2" onClick="fSubmit(1)"><br /> </body> </html> ----------------------------------------------------------------------- こういうのでどうでしょうか？
「ヘッダ出力が不要な場合」はありません。必ずヘッダ出力は必要です。 おそらく、間違えて2回ヘッダ出力しちゃってるんじゃないでしょうか。 (その場合、2回目のヘッダ出力は本文として表示される)
Perl には「命令のように見えて実は関数」というものが非常に多かったりします. この print もそうで, print　$item　,　"\n"; という文は実は 2個の値 (からなるリスト) を引数とする関数です. つまり, これは print($item, "\n"); と同じです. これで最初の文を見直すとわかりますが, print　(　$item　=　splice　(　@array,　0,　1　)　)　,　"\n"; は (print($item = splice(@array, 0, 1))), "\n"; と同じことになります. Useless use of... はこの最後の "\n" について言っています. ということで, 期待する動作は print(($item = splice(@array, 0, 1)), "\n"); とすれば得られます. この辺は, ラクダ本を含むいくつかの文献で触れられているはず.
実際に試してないので外しているかもしれません。その際はご容赦を。 管理者権限がないので make install ができないとのことですので、 まずは tokyotyrant-perl-1.16.tar.gz を解凍して、中の TokyoTyrant.pm だけ抜き出します。 次に、TokyoTyrant.pm を適当なディレクトリ（仮に/home/username/hogehoge）に置きます。 それから TokyoTyrant.pm を呼び出すPerlスクリプトに次の一行を記述します。 BEGIN { unshift(@INC,"/home/username/hogehoge"); } これで@INCに/home/username/hogehogeのパスが追加されますので、use で呼び出せるようになります。
> my $hoge = (1, 10, 100, 50, 1000, 10000, 5000, 100000); No3 です。すみませんが、１つ記述ミスがありました。以下のように訂正します。 my @hoge = (1, 10, 100, 50, 1000, 10000, 5000, 100000);
GDなら簡単だし参考になるHPもたくさんあるのでそれを使ったらどうでしょうか？ 「perl GD」とかで検索すればサンプルソースがあるHPがたくさん引っかかります。
流儀が違うのでご参考になるかわかりませんが、たぶん期待した結果が得られると思うものを作ってみました。 -------------------------------------- #!/usr/local/bin/perl open(WR_DATA,">out.csv"); open(RD_DATA, "file.csv"); while(my $line = <RD_DATA>){ 　$line .= <RD_DATA> while ($line =~ tr/"// % 2 and !eof(RD_DATA)); 　$line =~ s/(?:\x0D\x0A|[\x0D\x0A])?$/,/; 　$line =~ s/\r\n|\r|\n//g; 　my @csv = map {/^"(.*)"$/s ? scalar($_ = $1, s/""/"/g, $_) : $_} 　　　　　　　($line =~ /("[^"]*(?:""[^"]*)*"|[^,]*),/g); 　if($csv[0] eq ""){ $csv[0] = " "; } 　if($csv[1] eq ""){ $csv[1] = " "; } 　if($csv[3] eq ""){ $csv[3] = " "; } 　my $sTmp = sprintf("%s,%s,%s,%s,%s,\n",$csv[1],$csv[2],$csv[3],$csv[0],$csv[4]); 　print WR_DATA $sTmp; } close(RD_DATA); close(WR_DATA); exit;
Sjaxを使う手もアリかと思います 昔作った実験コードです。 hello.cgiは自分で適当に作ってください また、hello.cgiはべつにCGIでなくてもPHPでもOKです。 ロード時に実行するパターンとボタンクリックのイベント駆動のパターンを入れときました。 なんかずっと前にもこんな質問があったような気が・・・ -------------------------------------------------------- <html> <head> <meta http-equiv="Content-Language" content="ja"> <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> <title>サンプル</title> <script language="javascript"> <!-- // ------------------------------------- // ------------------------------------- function fCall(){ var xObj = createHTTPRequest(); var fName = "http://www.hogehoge.jp/hello.cgi"; var oText = document.getElementById("Disp01"); xObj.open("GET", fName, false); xObj.send(null); oText.innerHTML = xObj.responseText; } function fCall2(){ var xObj = createHTTPRequest(); var fName = "http://www.hogehoge.jp/hello.cgi"; xObj.open("GET", fName, false); xObj.send(null); var sSTR = xObj.responseText; document.write(sSTR); } // ------------------------------------- function createHTTPRequest(){ if(window.ActiveXObject && !window.XMLHttpRequest){ try{ return (new ActiveXObject('Msxml2.XMLHTTP')); }catch (e) {} try{ retrurn (new ActiveXObject('Microsoft.XMLHTTP')); }catch (e) {} return (null); }else if(window.XMLHttpRequest){ return (new XMLHttpRequest); }else{ return null; } } //--> </script> </head> <body> <p>サンプル</p> <p id="Disp01">　</p> <p><input type="button" value="ボタン" name="B3" onClick="fCall()"></p> <script language="javascript"> <!-- fCall2(); //--> </script> </body> </html> --------------------------------------------------------
文字化け回避は\を追加すればいいです 予定->予\定
状況が正確に分からないのですが、 まず2007形式の実体はZipファイルです。 拡張子をzipに変えてみて、7-Zipなどで開いてい見ると、 XMLファイルなどが詰まっているのが確認できると思います。 で、いまの現象はzipファイルだと自動判別されて、zipになっているのでは？　と想像します。 その場合はシステムのmimetypeでoffice形式を宣言してあげることなどの改修が必要かと思います。 もう1つなんでもzipファイルにしてしまうシステムでしたらそれそのものを直すしかないです。 2番はURLエンコード/デコードのルーチンを入れるなどが必要です。
こんな感じでどうでしょうか？ 条件としてご質問欄のようにデータは 　・CSVはExcelのCSV形式（セル内に改行や記号が含まれる） 　・データもプログラムもshift-jisコード（正規表現が誤動作する可能性があるのでEUCとかでやった方が・・・） ただし「""」内のデータに「,」が含まれていると出力されたデータが再利用時に使い物にならない(別の文字に変換要)ので要注意 -------------------------------------------------------------------------------- #!/usr/local/bin/perl use strict; my $csv_file = "file.csv"; my @aDT = &readCsvFile($csv_file);## CSVファイルの読み込み map { s/\r\n|\r|\n//g } @aDT;## 行内の改行を削除する open(WR_DATA,">out.csv"); map { print WR_DATA $_."\n"; } @aDT;## 最近mapにはまってまして・・・「foreach(@aDT){ print WR_DATA $_."\n"; }」と同じです close(WR_DATA); exit; sub readCsvFile { my $sFN = shift; my @aCSV; open(RD_DATA, $sFN); while(my $line = <RD_DATA>){ $line .= <RD_DATA> while ($line =~ tr/"// % 2 and !eof(RD_DATA)); $line =~ s/(?:\x0D\x0A|[\x0D\x0A])?$/,/; my @aDT = map {/^"(.*)"$/s ? scalar($_ = $1, s/""/"/g, $_) : $_} ($line =~ /("[^"]*(?:""[^"]*)*"|[^,]*),/g);## ? ## 元来この@aDTに各行の要素がいったん格納されますので個別に処理したいならここに処理を記述 my $sTmp = join(",",@aDT);## 各要素をコンマ区切りで結合して一行分を生成する push(@aCSV,$sTmp); } close(RD_DATA); return @aCSV; } -------------------------------------------------------------------------------- 経験上の突っ込みどころとしては 　・perlは行指向の言語なので多次元配列は避けるのが吉(やっていけないわけじゃないけど・・・) 　・局所変数はしっかり定義(関数内の@csvは要注意) 　・ファイルハンドル名や変数は、できるだけ予約語や組み込み関数名に類似した名前はさける
「三項演算子」でどうぞ。
正直に言って, これだけ多いといちいち「どれがどれに対応するのか」を書く気になれないんだわ. $2 としてキャプチャされる部分の中にも「開きかっこ」がありますよね. それが, 先頭から順に $3, $4, ... となります. で, あなたが「$3 になる」と思ったものは, 数え間違えていなければ $10 になるはず. とにかく, 素直に先頭から開きかっこを数えていけばいい (ただし (? ではじまる拡張正規表現は無視).
Kakasi, ChaSen, MeCab などで工夫するとか、もちろん完璧ではないですが。
文に対するラベルは名前空間を作らないからダメ.
No.3＆6です。 > flock してません・・・・・・。 > つまり、読み込み時に競合があって書き込まれたため、開いたままのデータが > 変なところで書き込み処理に割り込まれて、おかしくなったということでしょうか。 > でしょうか、というか、その可能性があった、というところですかね？ ちょっと説明が足りなかったので補足します。 読み込み時にflock()しなかった場合ですが、書き込みが純粋に追記だけの場合は（記事表示で途中で切れることはあるかもしれませんが）データファイルの破損までは至らないかなと思います。もちろん、読み込み内容が壊れるには違いないですので、読み込みルーチンにもflock()は追加すべきです。 データファイルが壊れるケースですが、既存記事の修正機能が実装されている場合などで、読み込みルーチンで取得した@BbsDataの値を使った書き込みルーチンが別にあった場合には、たとえその書き込みでファイルロックがされていたとしてもデータファイルが壊れることになります。 もっともその場合、データ変更に関する一連のロジック自体を見直す必要があるかもしれません。 既存記事の変更を行う場合には、「一度のファイルオープン＋ファイルロックの間に、読み書きを全て済ませる」という処理に置き換えないと、ほぼ同時に複数の書き込みが発生した場合に一部のデータが失われるという別の不具合が発生する恐れがあります。ご参考まで。
20回ループしているwhile文で、 現在の時間をとっていないのが問題かと思います。 ログファイルに書かれている時刻より5秒以上経過したら ログに書き込む処理を行うためには、 判定する時間（ソース内の$time）が都度新しくならなくては 5秒経過したかどうかがわかりません。
再び#２です。 急遽vistaをインストールしてやってみました。 >ユーザの環境変数には >C:\strawberry\c\bin >C:\strawberry\perl\binとも追加してあるのですが、、 システムの環境設定の方に追加してください。また、追加した後は一回ログアウトしてください。 Pathコマンドを打ったら、 PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files\Ap ache Software Foundation\Apache2.2\bin;C:\strawberry\c\bin;C:\strawberry\perl\si te\bin;C:\strawberry\perl\bin になってるように確認してください。 --- この時点でC:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\binが出てこなかったら >StrawBerryPerlを再インストールしてください。 出てきたら、もう一度アクセスして500が解消しているか確認してください。それでもだめだったら次に進んでください。 --- C:\Program Files\Apache Software Foundation\Apache2.2\logs\error.log を確認して、 「指定されたパスが見つかりません。」や「Premature end of script headers」がでてきたら、 >printen.plの先頭行を、#!C:\strawberry\perl\bin\perl.exeにしてください。 これでも解消されていなかったり、違うログがでてきたら、 >考え直してみます。。。。
Apache httpd.conf の PidFile ディレクティブで位置を指定します。 起動する Apache 毎に違う場所を指定してください。 参考URL：http://httpd.apache.org/docs/2.2/mod/mpm_common. …
ハッシュと言うのは、%で宣言する変数です。 ハッシュを使うコーディングじゃ無いみたいですけど。 何をハッシュのキーにしたいのでしょうか? 意図を説明して下さい。
環境変数MAGICK_PATHを設定してみてはいかがでしょうか。
seekを使わない方法で open(DATA,">+ log.csv"); @DATA = <DATA>; print DATA "入れたい内容"; print DATA @DATA; close DATA;
2010/3/10は誤植ですか? この場合、ただの文字列なので 日付といっても同じ文字数ならば辞書順が変わるわけではないので substr($_,0,10)の比較で十分ですよ。 3/10が誤植でないとするならsplitで substrの結果を /で分割してあげれば よいだけかと思います。 この場合はsort{}の中で数値として比較することを忘れずに。
> foreach my $key (sort { $b <=> $a } keys $sorted) { No2 です。１つ誤記がありました。訂正します。 foreach my $key (sort { $b <=> $a } keys %sorted) {
本当に「[IF, ELSE]」にのみマッチさせたいならそれでいい. そうでないなら, 単に「ダメ」とだけ言われてもまったくもって意味なし. 最低限 ・$_[0] の値はどうなっているのか ・どうなると思ったのか ・実際に得られた結果はどうであるのか くらいの情報は出してください. さらに言えば「どうなっていればあなたが『正しい』と判断するのか」という基準も書いてほしい.
質問者さんのコードは > @lines = <IN>; ここで、ファイルの全データを変数に読み込んで > foreach $lines (@lines) { これで、データを1つづつ取り出す という処理になっていますので、「@lines=<IN>」の時点でメモリを大量に消費します。この2行の代わりに > while ($lines = <IN>) { とすれば、ファイルから1行ずつデータを読んで処理するようになりますので、 ファイルサイズが大きくても処理できるようになります。 ただし、そうやったとしても、 > $dat .= "$val[1]\,$val[5]\n"; この部分で変数 $dat のサイズがどんどん大きくなりますから、そちらの分のメモリ消費は入力ファイルサイズに比例します。 --- open(IN,"$inport") || &error(" $inport を読み込みopen出来ません"); flock(IN,1); open(OUT,">$dcsv"); flock(OUT,2); while ($lines = <IN>) { local(@val) = split("\,", $lines); print "$val[0]"; print OUT "$val[1]\,$val[5]\n"; } close IN; close OUT; --- とすれば、完全に入力ファイルサイズに依存しないようになります。
if ( $str =~ /~マイナス$/ ) { マイナスだけに、一致した場合の記述 } elsif ( $str =~ /~マイナス.*/ ) { マイナスドライバー等の場合の記述 }
print 「$」num;
よくわからないけれど、普通にPOSIX:difftimeじゃだめなのですか? POSIX:mktimeとあわせれば出来そうな予感がしますけど
print <<EOM; なので、$(の部分がグループIDに置換されます。 他にも置換される箇所があるかもしれません。 本当にこのソースの通り、変数置換が一切必要ないのであれば、 print <<'EOM'; に変更するだけで動くと思います。 変数置換が必要ならば、CGIが出力したHTMLをよくみて、 意図しない置換が起きているところをみつけて、地道にエスケープしていってください。 もしピンとこないようなら「perl ヒアドキュメント 変数展開」 および「perlvar」あたりでぐぐってみてください
#2 に「まずはSplitの構文を研究してください。」とありますね. 調べましたか? 特に, split が引数を 1つだけ持つ場合, どのような動作になるのか理解できていますか? @list=split(/\s/)->[1] がどのような意味を持つのか, 説明できますか? なお, 今の Perl (バージョン 5.x) の場合, 「配列 @column の第1要素」は $column[1] です＞#2. @column[1] でもいけることもあるけど, スカラと配列という違いは意識する必要があります.
cgi-lib.pl には、\0 区切りの文字列を分割するためのサブルーチン SplitParam が用意されていると思います。 @aaa = &SplitParam($in{'select01'});
システムがわからないとなんともいえないんだけど, そのパターンだと & はシェルに食われるからそもそもプログラムに渡らない. つまり, 「コマンドライン引数からなんとかする」ことはできない. 場合によっては端末の割り当てなんかからわかるかもしれんが....
以下と同じ問題だと思います。 http://sida.sblo.jp/article/35442814.html ただし、http://barukanlog.blog31.fc2.com/blog-entry-541. … はgzip圧縮で送られてくるようで、上のurlのやり方だと文字コードを判定できません。 キャラクタセットだけを知りたいのでしたら、以下のようにする手もあります。 my $mech = WWW::Mechanize->new(); my $res = $mech->get( $url ); print $res->content_charset;
use CGI; my $q = CGI->new(); $q->autoEscape(0); print $q->checkbox( -name => 'abc', -value => 'xyz', -accesskey => 'A', -label => 'abc(' . $q->span( { -style => 'text-decoration: underline' }, 'A' ) . ')' ); $q->autoEscape(1);
ある程度時間がかかるのはしかたないです。ハッシュを計算するのに全データを読む必要がありますから。 また、今の方法は一旦ファイルの全データをPerlの変数の収めてからハッシュの計算をしているので、大きなファイルだとたしかにメモリがたりなくなる場合があるでしょう。 こちらでメモリオーバーになるようなファイルがなかったので確認はとってませんが、次の方法はどうでしょうか。 use strict; use Digest::SHA1 ; open (OUTFILE,">c:\\hash.txt")|| die Fileが～"; open (INFILE,"c:\\1.m2ts")|| die "Fileが～"; binmode(INFILE); my $hash = Digest::SHA1->new->addfile(*INFILE)->hexdigest ; close(INFILE); print OUTFILE $hash ; print $hash ; close(OUTFILE);
Perlを学びたい、と言ってるのにアレですが、 まるでゼロからであれば、rubyの方が良いかも知れません。 Perlは、変なお約束が結構あるので、 そこで詰ると本末転倒なので。 #myとかblessとかtieとかどーなんだ、と思ってるので。 いずれにしても、1日1時間はちょっと短いかなー。 と言ってる私が愛用しているのはpythonだったり(なんでやねん)
>>ちなみにループが終ってから次のループが始まるまでの時間という観点ではどうなりますか？ >これは、どんな理由があって計測するのか私のスキルでは理解できませんが、やってみました。 ちょっと考えすぎました。$gPdf がwhileループの最後に達したとき、オブジェクトが捨てられて遅くなるのかなと考えました。 get したあとの処理が遅いんですかね？
Perl 5.10 では「スマートマッチ」が追加されています. そのため, 今のケースでは grep すら使わず @A = <FILE_A>; # または @A = map { qr/^\Q\_\E$/ } <FILE_A>; for $line_B (<FILE_B>) { print FILE_C $line_B unless $line_B ~~ @A; } で終わりです. 完全に失念していたハッシュでも $A{$_} = 1 for (<FILE_A>); for $line_B (<FILE_B>) { print FILE_C $line_B unless $line_B ~~ %A; } と書けます... ん～, なんか手抜きのように見える....
データの並びが保証されているのならば データ全体の中から改行+データイ|データロを削除すればいいのでは? s/\r?\n?(?:データイ|データロ)//g;とか。。。 こんなことならテキストエディタの方が楽の予感? あとは、地道に1行読んで1列目を削除して結合とかで十分だとおもいますよ。 @A1 = split(/,/, <>); @A2 = split(/,/, <>); shift @A2; @A3 = split(/,/, <>); shift @A3; print join(",", @A1, @A2, @A3) . "\n" とか
難しいことは全然考えていないけれどこんなやり方もあります。 意味を理解してから使ってくださいね。 perl -ni -e 'BEGIN{undef $/;} $wk=q/あああ/; # カウントしたい文字列 unless( s/^(${wk},)(\d+)$/$1 . ($2+1)/me ) { print $_ . "${wk},1\n"; } else{ print; } ' test.csv 参考URL：http://www.perldoc.jp/docs/perl/5.10.0/perlop.pod
foreachの部分を以下のように書き換えてください。 foreach ${_} (@link_list){print${_}->url_abs."\n";} ＃ちなみにurl_absをurlにすると<a href="xxx">～</a> ＃表示は「xxx」になり ＃textにすると「～」が取得できます 参考URL：http://search.cpan.org/~petdance/WWW-Mechanize-1 …
やりたいことはなんとなくわかるけど, 細かいところを詰めておかないと問題になりそうだね. そもそも「別ファイルに記載されたテキスト置換一覧を実行ファイルで呼び出す」の意味がわからんけど, ここは超能力 (笑) で s/呼び出して/読み込んで/ と思うことにしておく. それでも ・その「別ファイル」はどのような形式になっているのか ・置換候補が複数あった場合にどうするのか ・「置換した結果置換できるようになる」ことは想定しないのか ・「複数行」ってどういうこと? とか, ちょっと考えるだけでも問題が出てくる.
媒体やファイルシステムによっても違いますが、7000もファイルがあると、オープンとクローズだけでも、そこそこ時間が掛かるかもしれません。 念のため、確認することをお勧めします。
まだ解決しませんか? もしLinux なら grepの方が楽かも。(windowsでは不可です) 以下を データT0001_05～ファイルとlist.txtと同じ場所において パーミションを705にして実行してください。 ------------------------------------- ○○.cgi #!/usr/bin/perl $| = 1; print "Content-type: text/html\n\n"; @files = glob("T0001_05_*"); open(IN,"list.txt");@keys=<IN>;close(IN); chomp @keys; foreach(@keys){ print "<b>$_</b><br>\n"; @result = `grep -n "$_" @files`; foreach(@result){ split(/:/,$_,3); print "@_[0]　@_[1]行目　@_[2]<br>\n"; } print "<hr>\n"; } exit; -------------------------------------- htmlで出してます。適宜ブラウザ上でコピーしてください。
> find / abcde-*.tar.gz おかしくないですか? これって、/(ルート)以下の全てと、カレントディレクトリにある"abcde-*.tar.gz"が対象になります。 /以下の "abcde-*.tar.gz"という名前を探すなら find / -name "abcde-*.tar.gz" だと思うんですが。 それとも、私の知らない独自のfindなのでしょうか。 > ・・・・・ってfind: /lost+found: Permission denied > と出てしまいますな・・・・・・・ 特権ユーザーで実行していなければ、実行時のユーザーの権限ではアクセスできないファイルやディレクトリがあります。 そういったものに当っただけです。/から全検索すれば、当り前に発生します。 そういうファイルやディレクトリが対象外になるだけで、そのまま検索は続きます。 このメッセージは標準エラー出力に出力されるので、qxや`やパイプラインからの入力には入ってきません。(明示的に取り込まないかぎり) 別解として、findコマンドを使わずに、File::Findモジュールを使う、というのがあります
表示がずれるので、全角の空白があることに注意。全角の空白を通常のスペースにして下さい。 # メールアドレスのフォーマットのチェックが不完全 # 正確にやる場合は、http://www.din.or.jp/~ohzaki/mail_regex.htm 参照のこと my @mail_list = qw(あいうえお<xxx@yyy.zz> aaa@bbb.cc ddd.eee.ff); for my $mail (@mail_list) { 　　if ( $mail =~ /([^<]+)@([^>]+)/ ) { 　　　　my $user　 = $1; 　　　　my $domain = $2; 　　　　print "user=$user, domain=$domain", $/; 　　} 　　else { 　　　　warn "$mail : format error", $/; 　　} } 参考URL：http://www.din.or.jp/~ohzaki/mail_regex.htm
アップロードする側のhtmlで <input type="file" name="tUpFile"> という名前にしておく必要がありますが、そこはどうなっていますか？
＞上記の内容は$html =~ s#ＡＡＡＡ#ＢＢＢＢ#egs;と理解すれば良いのでしょうか？ はい、そうです。 一般的にs///の形式で用いられる区切り文字を#にしたものです。 { と } が単独で使われると消失するというバグを発見したので以下に修正させてください。 $html =~ s#((?<=<style type="text/css")>\n*<!--.+-->\n*(?=</style>)|>.+?<)# join q{}, map { /^{.+}$/s or tr/ \t//d; $_ } $1 =~ /{.+?}|[^{}]+|[{}]/gs; #egs; 上記コードを分かりやすく分解しました。 参考にしてください。 $html =~ s#((?<=<style type="text/css")>\n*<!--.+-->\n*(?=</style>)|>.+?<)# my @matched_strings = ( $1 =~ /{.+?}|[^{}]+|[{}]/gs ); my @trimmed_strings = map { /^{.+}$/s or tr/ \t//d; $_ } @matched_strings; my $trimmed_string = join q{}, @trimmed_strings; #egs; 実は本日より2～3ヶ月入院します。 そのため、追加質問されましても回答できませんので、もし、上記コードが分かりにくければ、新たに質問を立ててください。
最後にutf8で出力しているところで文字化けしているんじゃないですか？ cp932、shiftjis、eucjpなど適切なエンコードを指定して下さい。 あまり関係ないけどちょっと書き直し(全角空白あり注意) use XML::TreePP; use Encode; my $file = shift || 'tmp.xml'; my $tpp = XML::TreePP->new( utf8_flag => 1, force_array => ['keyword'] ); my $tree_in = $tpp->parsefile($file); my %count_of = (); for my $hash_ref ( @{ $tree_in->{grant_award_list}->{grant_award} } ) { 　　my $keyword = $hash_ref->{keywords}->{keyword}; 　　for my $item ( @{$keyword} ) { 　　　　$count_of{$item}++; 　　} } my $tree_out = {}; $tree_out->{keywords} 　　= [ map { { keyword => [$_], count => $count_of{$_} } } keys %count_of ]; my $xml = encode( "utf8", $tpp->write($tree_out) ); print $xml;
MovableTypeって使ったことないのですが、'件名'、'本文'というのが短いため、文字コードの推測に失敗しているということはないでしょうか？ 長い文章でどうなるか一度テストしてみてください。 あるいは、Shift-JISやEUC-JPのほうが推測制度が高いかもしれないので、これも試してみてはいかかでしょうか？
＞open(IN,">temp1.txt") || &error("Can't open $file"); 　上書き専用モードで開くと、だめだが入力用で開くと開けるということですね。 INというファイルハンドルをつけているということは、 open(IN,">temp1.txt"); とちょっと変・・ではあるけど、IN だろうがOUTだろうがファイルハンドルにすぎないのでかまいませんが、 他のオプションでは？ open IN,"textA.txt" or die "open IN 失敗 :$!"; open OUT,"textB.txt" or die "open OUT 失敗 :$!"; while($input = <IN>){ print OUT $input; } close IN; close OUT; をためしてみ。 　
Windowsの場合、テキストモードだと、\r\n ⇒ \nの自動変換がなされてしまうので、その場合はNo.2さんのコードでopen時に:rawを指定すればいいと思います。 open my $fh, '<:raw', $file or die "$!:$file"; No.2さんのコードでは最後の文字列に二重改行が付いてしまいますが、質問文のように改行を1つだけにしたいならば、 chomp @list; とすればいいと思います。 splitにこだわるならば、 my @list = split /(?<=\r\n)\r\n/, do{ local $/; <$fh> }; でいけると思います。
CSVはそれを出力するアプリケーションによって異なりますが、それはきちんと２次元配列に入っているとします。 #CSVはそれを出力するアプリケーションによって異なりますが、それはきちんと２次元配列に入っているとします。 my @DATA=( ["ID","アイテム","商品名"], ["1111","AAAAAAAA","aaaaaaaa"], ["1111","BBBBBBBB","bbbbbbbb"], ["1111","CCCCCCCC","cccccccc"], ["2222","AAAAAAAA","aaaaaaaa"], ["2222","DDDDDDDD","dddddddd"], ); これを for(1..$#DATA){}でループさせて、IDだけのリストと、ハッシュ(ID)のハッシュ(アイテム,商品名)に代入して、最後にIDをキーにしてハッシュを呼び出す。 複雑なデータならリファレンスを使って処理するのでしょうが、ここは順当に初心者でもわかりやすい方法で・・
とりあえず path は関係ないし, 実は「何が悪いのか」はメッセージの中に書いてあるんだけど.... メッセージはちゃんと読んで理解してください. その perl はどのようにインストールしたのですか? 「ブラウザ上から実行する」とは, 具体的にはどのように「実行する」のですか? Webサーバが起動しているなら, それはなんですか? 「ブラウザ上から実行する」ときと「コマンドプロンプトから実行する」ときとで同じ perl が動いていることは確認できていますか?
evalで囲んだらいかがでしょうか？ 例えば、 eval{ 　　$sth = $db->prepare("SQL文"); 　　$rv = $sth->execute() || die; }; if( $@ ){ 　　#エラー処理 } ＃行頭に全角スペース入っています
複数のサイコロを振ってそれぞれの目の出る確率は 1 ÷ 6^(サイコロの数) なので、サイの目の合計が10以上の場合にそれを足していけば、解を得ることが出来ます。 コードは以下のページで確認できます。 http://codepad.org/tp500EMH
質問文に「binmode STDOUT, ":utf8";」と書いておられるので、リダイレクトを使用するのかなと想像しました。 <utf.pl> use open IN => ":encoding(cp932)"; binmode STDOUT, ":raw:utf8"; print <>; コマンドラインから以下のように打てば所望の結果が得られるのではと思います。 C:\>perl utf.pl sjis.txt >utf8.txt ＞No.2さんへ open時に、:rawを入れればbinmodeを省略できると思います。 open my $in, "<:encoding(cp932)", "sjis.txt"; open my $out, ">:raw:utf8", "utf8.txt"; print {$out} <$in>; close $in close $out;
やっていることは同じなのですが、この場合、map、sort、mapの順で書き連ねていくシュワルツ（シュウォーツ）変換（Schwartzian Transform）という手法が有名です。 my @data = ( 'A,1,2', 'B,1,3', 'C,2,1', 'D,3,2', 'E,3,1', 'F,1,1' ); my @sorted_data = map $_->[0], sort { $a->[1] <=> $b->[1] or $a->[2] <=> $b->[2] } map [ $_, (split /,/)[1,2] ], @data; Effective Perlという本で紹介されているようです。 「シュワルツ変換」あるいは「シュウォーツ変換」で検索すれば、詳しい説明がヒットすると思います。
最後の encode は、環境に合わせて下さい。 use Encode; use XML::TreePP; my $url = 'http://geocode.didit.jp/reverse/?lat=35.68653&lo … my $tpp = XML::TreePP->new(); my $tree = $tpp->parsehttp( GET => $url ); my $addr = $tree->{ReverseGeocode}->{Item}->{Address}; my $utf8 = Encode::is_utf8($addr) ? $addr : Encode::decode_utf8($addr); # eucjp, sjis, cp932(windows sjis), utf8 etc print encode( 'sjis', $utf8 ), $/;
「HTML内リンク先など」の"など"が気になりますが、リンクかフォームアクション先を取得するのでしたら HTML::LinkExtor モジュールを使う方法があります。 (表示がくずれるので、スペース2文字を全角空白で書いています) use strict; use warnings; use HTML::LinkExtor; use HTTP::Response; use HTTP::Request; use LWP; my $url = shift || 'http://www.google.co.jp'; my $ua = LWP::UserAgent->new; $ua->agent('Mozilla'); $ua->timeout(10); my $req = HTTP::Request->new( GET => $url ); my $res = $ua->request($req); if ( $res->is_success ) { 　　my $p = HTML::LinkExtor->new; 　　$p->parse( $res->content ); 　　for my $items_ref ($p->links) { 　　　　print $items_ref->[2], $/; 　　} } else { 　　print $res->error_as_HTML, "\n"; } 色々やっていますが、キモは 　　my $p = HTML::LinkExtor->new; 　　$p->parse( $res->content ); 　　for my $items_ref ($p->links) { 　　　　print $items_ref->[2], $/; 　　} で、parse に html を文字列で渡しているところです。 リンクタグやフォームタグ以外で http や https 以外の URL を取得するのは困難なような気もします。html内のフォームタグでは、例えば /search と言った書き方ができます。 <form action="/search"> BODYタグ内の本文で /search という文字列が出てきたときはリンクなのか、そうでないのか判断しようがありません。
すでに回答がありますが、プレースホルダでやると以下のようになります。 データが入らないところは、undef を入れます。 (表示がくずれるので、スペース2文字を全角空白で書いています) use strict; use warnings; use DBI; # DB Name my $db_name = 'sqlite_test.db'; unlink $db_name; print '--- Connect DB', "\n"; my $dbh = DBI->connect( 'dbi:SQLite:dbname=' . $db_name, 　　q{}, q{}, { RaiseError => 1 } ) 　　|| die "$db_name : $!"; my $sql; my $table = 'user_info'; print '--- Create Table', "\n"; $sql = "CREATE TABLE $table (id integer primary key, name varchar NULL)"; $dbh->do($sql); my $sth; print '--- Insert Record', "\n"; $sth = $dbh->prepare( 'INSERT INTO ' . $table . '(id, name) VALUES (?, ?)' ); $sth->bind_param( 1, '1' ); $sth->bind_param( 2, 'AAA' ); $sth->execute; $sth->bind_param( 1, '2' ); $sth->bind_param( 2, undef );　　# NULL $sth->execute; print '--- Select Record', "\n"; $sql = 'select * from ' . "$table" . ';'; print $sql, "\n"; $sth = $dbh->prepare($sql); print '--- fetchrow_hashref', "\n"; $sth->execute; while ( my $row_hashref = $sth->fetchrow_hashref() ) { 　　my $id　 = $row_hashref->{id}; 　　my $name = $row_hashref->{name}; 　　$id　 = 'NULL' if !defined $id; 　　$name = 'NULL' if !defined $name; 　　print "id:$id name:$name", "\n"; }
操作が異なるので、Movable Typeのバージョン（管理画面の下部に記載）をご連絡ください。 また、今分かる範囲で回答します。 １．ウィジェットの編集で正しいと思います。 ２．画像は変数ではありません。 ３．MTを使って画像をアップロードする場合、アップロードパスは、ブログのメインページのパスを起点とします。それ以下のパスはアップロード先を指定できるはずです。 ４．<$mt:BlogURL$>というタグは、ブログのメインページのURLに変換されます。内部リンクは、そのタグにパスとファイル名を加えれば作れると思います。 ５．４の方法は、MTを使って画像をアップロードしても、FTPツールを使って（ブログのメインページ配下に）アップロードしても、どちらでも使えます。
引用符が閉じられるまでが文字列になるので、改行を入れることは可能です。 ただし、その際は、改行文字まで含めた文字列になります。 "<p style='color:#eee'>色</p> ～～～～～～～～" は "<p style='color:#eee'>色</p>?n～～～～～～～～" と同じです。 改行文字を含めずに、見掛けだけ改行したい場合は#1さんのように、一旦引用符を閉じて.で連結します。
「perl 変数展開 しない」で検索。 http://www.google.co.jp/search?hl=ja&q=perl+%E5% …
どうやら、<S>は HTML3.0で検討されたものの、3.0自体が最終的に廃棄されてしまったため、そのまま廃棄されたタグのようです。 3.2では、代りにSTRIKEが採用されています。 その後、 4.0 Transitionalで復活するも「非推奨」となっているようです。(STRIKEも「非推奨」だそうで) なので、<S>が無条件に使える正式な規格というものは無かったことになっています。
>Seek()は標準出力上では使えないのでしょうか？ 使えません。
> ジャバスクリプトのメソッドは自分で書かないとダメなのでしょうか。 たぶん CGI.pm ではできません。 また、CGI.pm で javascriptを指定したいのなら、start_html で直接指定するのがよいでしょう。 use strict; use warnings; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; my $new_window_url = 'http://www.google.co.jp'; my $java_script = << "END_SCRIPT"; function open_new_window() { window.open('$new_window_url', 'New Window', 'width=300, height=300'); } END_SCRIPT my $q = CGI->new(); print $q->header( -charset => 'UTF-8' ), $q->start_html( -lang => 'ja', -script => { -language => 'javascript', -code => $java_script } ), $q->button( -name => 'Open New Window', -onclick => 'open_new_window()' ), $q->br, $q->a( { -href => $new_window_url, -onclick => 'javascript:open_new_window();return false' }, 'Open New Window' ), $q->end_html; javascriptを別ファイルにする場合は、 { -language => 'javascript', -src => './test.js' } とします。
おおっと、すみません、モジュール使った場合は同じですね。 ファイル名は日本語のまま、"」.txt"でUPしてみて下さい。 %81v%2etxt、または、%81v.txtでアクセスできると思います。
単純に /a(?!bbb|ccc|ddd)/ じゃダメなんだっけ?
ですね＞#3. 読み込んだ直後に chomp; しておいた方がいいでしょう.
chdirを使う。 参考URL：http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.ph …
最初に確認ですが (1) $namefile: 名前データ→最終データに書き換え、クラスデータの無いものはそのまま $classfile: クラスデータ→名前データにある行は削除 別のファイルに出力するのではないですね? (2) 一つ目の値で統合するのですね?この値は重複してたりしませんね? (2) スクリプトでは'<>'が区切り文字として使われていますが、例題はカンマで区切られています。 どちらが正しいのでしょうか? (2) サーバー上ということですが、実行はそのサーバーにログインして「perl スクリプト」のように実行ですか? それとも、WebブラウザからCGIとして実行ですか? (3) Perlのバージョンは5.?以上ですよね? まず、効率が悪い点は $namefileの1行に対して ・$classfileを最初から最後まで全部読み込むのを2回、該当行を削除した書き出しを1回 ・$namefileに途中まで更新した内容の書き出しを1回 行っていることです。ファイルの読み書きは、他の内部的な処理に比べて非常に時間のかかるものです。極力減らすのが高速化につながります。 今回のでいえば、読み込みと書き出し1回ずつ、それぞれのファイルで計4回で済みます。 後、細かい点で言えば ・flockは必要ですか? 処理中にファイルが書き変わることがあるのなら、読み書きモードでopen→flock、処理が全て終ってからclose、として、この処理の最初から最後まで他の処理が入らないようにするべきです。 そうでないなら、flockの必要はありません。 ・local(@val1) = split("<>", $line12); 一時的なローカル変数としてなら、localではなく、my を使うことをお勧めします。詳しくはネットで検索 但し、perl 4以前なら myは無いのでlocalになります。 ・@new1 = ""; リストの初期化なら、空リスト()の方がよいかと。 open(DATANAME,$namefile) ; @lines11 = <DATANAME>; #$namefileから読み込み close DATANAME ; open(DATACLASS,$classfile) ; @lines12 = <DATACLASS>; #$classfileから読み込み close DATACLASS ; %namehash=() ; # seqをキーにしたハッシュテーブルを作る # namefileからハッシュテーブルを作る foreach $lines11(@lines11){ @val = split(/<>/,$lines11) ; if ( $#val >= 1 ) { #<>の区切りがあったら、ハッシュに登録 $namehash{$val[0]} = $lines11 ; } } # classfileとハッシュテーブルとを照合する foreach $lines12(@lines12){ @val = split(/<>/,$lines12) ; if ( $#val >= 1 ) { #<>の区切りがあったら、ハッシュと照合 $seq = shift @val ; # @valの先頭を取り出す if ( exists $namehash{$seq ) { # 対応するキーがあったら $namehash{$seq} =~ s/\n//; # 行末の改行コードを削除 $namehash{$seq} .= "<>" . join("<>",@val); # $seqを除いた部分を追加する $lines12="" ; # foreachでは、ループ変数を書き換えると、元のリストの内容が書き変わる } } } #結果の書き出し open(DATANAME,">" . $namefile) ; #全てのキーについて、その内容を書き出す foreach $key (sort ( keys %namehash )) { print DATANAME $namehash{$key} ; } close DATANAME ; #残ったクラスデータの書き出し open(DATACLASS,">" . $classfile) ; print DATACLASS @lines12 ; close DATACLASS ;
Perlというより、javascriptの問題の気がします。 (以下、空白2文字を全角空白にしているので直して実行して下さい) refer_frame.html <html> 　<frameset cols="400,*"> 　　<frame src="refer_frame_left.html" name="left"> 　　<frame src="refer_frame_right.html" name="right"> 　</frameset> </html> refer_frame_right.html <html> 　<head> 　　<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" /> 　　<script type="text/javascript" src="frame.js"></script> 　　<title></title> 　</head> 　<body> 　　<form id="rightForm"> 　　　<select name="menuA" multiple> 　　　　<option value="A1">menu A1</option> 　　　　<option value="A2">menu A2</option> 　　　</select> 　　　<select name="menuB" multiple> 　　　　<option value="B1">menu B1</option> 　　　　<option value="B2">menu B2</option> 　　　</select> 　　</form> 　</body> </html> refer_frame_left.html <html> 　<head> 　　<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" /> 　　<script type="text/javascript"> 　　　//![CDATA[ 　　　function createMenu(menu){ 　　　　var newMenu = document.createElement('select'); 　　　　newMenu.name = menu.name; 　　　　newMenu.style.display = 'none'; 　　　　newMenu.multiple = menu.multiple; 　　　　for (var i = 0; i < menu.options.length; i++) { 　　　　　newMenu.options[i] = new Option(menu.options[i].text, 　　　　　　　　　　　　　　　　　　　　　menu.options[i].value); 　　　　　newMenu.options[i].selected = menu.options[i].selected; 　　　　} 　　　　return newMenu; 　　　} 　　　function submitOtherFrameInfo(){ 　　　　var rightFrame = top.frames['right']; 　　　　var rightForm = rightFrame.document.getElementById('rightForm'); 　　　　var leftForm1 = document.getElementById('leftForm1'); 　　　　leftForm1.appendChild(createMenu(rightForm.menuA)); 　　　　leftForm1.appendChild(createMenu(rightForm.menuB)); 　　　　leftForm1.action="http://127.0.0.1/cgi-perl/CGI.pm/recv_form.cgi"; 　　　　leftForm1.method="POST"; 　　　　leftForm1.submit(); 　　　} 　　//]]> 　　</script> 　　<title></title> 　</head> 　<body> 　　<form id="leftForm1"> 　　　<input type="button" 　　　　　　 value="submit" 　　　　　　 onclick="submitOtherFrameInfo()"/> 　　</form> 　</body> </html>
形は一番上のものです. なぜヒットしないのかについては, $text や $match にどのような文字列が入っているかわからないのでなんとも言えません. 後半の質問は, 実際にやってみればたぶんやってみればわかる. ただしエスケープしちゃだめ.
私はMixiは使ってないのでわかりませんが CGI RESCUE - ネットサーフレスキューＷｅｂ裏技 ( http://www.rescue.ne.jp/ ) 　に、 　基本認証 ( http://www.rescue.ne.jp/CGI-BBS/auth/ ) 　という項目がありますから、そこで基礎を身につけてください。そのうえで先のページの下の方にある「アクセス制限」に、色々なCGIが紹介されています。 　
CGIは、クライアントに対してはhtmlを動的に生成し出力するのが(一般的な)使い方です。 やりたいことを想像すると、以下のようなcgiになると思います。 use strict; use warnings; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; my $java_script = << "END_SCRIPT"; function onload() { alert('Hello javascript', 'New Window', 'width=300, height=300'); }; END_SCRIPT my $q = CGI->new(); print $q->header( -charset => 'UTF-8' ), $q->start_html( -lang => 'ja', -title => ' T I T L E ', -script => { -language => 'javascript', -code => $java_script } ); my $file = shift || '/tmp/tmp.txt'; open my $fh, '<', $file or die "$!:$file"; my $text = do {local $/ = undef; <$fh>}; close $fh or die "$!:$file"; print $q->p($text), $q->end_html; 色々書いてありますが、上のcgiを実行すると以下の内容がprintされるだけです。 --- Content-Type: text/html; charset=UTF-8 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja"> <head> <title> T I T L E </title> <script type="text/javascript">//<![CDATA[ function onload() { alert('Hello javascript', 'New Window', 'width=300, height=300'); }; //]]></script> <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> </head> <body> <p> aaaa </p> </body> </html>
＜つづき＞ my $num = 0; my $p = int(@log/10); if(@log%10){$p+=1} my$index; my$pg=1; my$s=1; my$l=10; if(@log>10){ 　$index=qq(<a href="bbs.html">[最新の10件]</a> ); 　for(2..$p){ 　　$s+=10;$l=$_==$p?scalar(@log):$l+10; 　　$index.=qq(<a href="bbs_$_.html">[$s‐$l]</a> ); 　} } @log=reverse(@log); for(@log){ 　chomp; 　$num++; 　my @write = split /<>/; 　print HTML "<p>$num：<span class='name'>$write[1]</span> $write[0]</p><p class='body'>$write[2]</p>\n"; 　unless($num%10&&$num!=scalar(@log)){ 　　print HTML << "END"; <hr> $index </body> </html> END 　　close HTML; 　　last if($pg==$p); 　　$pg++; 　　open HTML, "> bbs_$pg.html"; 　　print HTML << "END"; <html> <head> <style> body{background:#f0f0f0;} span.name{color:blue;} p.body{margin-left:32px;} </style> <script type="text/javascript"> <!-- 　function check(form){ 　function id(id){return(document.getElementById(id));} 　if(form.name.value == "" || form.body.value == ""){ 　　id('err').innerHTML = "入力に誤りがあります<br>"; 　　id('err').style.color = "red"; 　　return false; 　}else{ 　　return true; 　} } //--> </script> <title>簡易掲示板</title> </head> <body> <form action="bbs.cgi" method="post" onsubmit="return check(this)"> <fieldset> <legend>入力フォーム</legend> <span id="err"></span> <label>名前</label><br> <input type="text" name="name"><br> <label>本文</label><br> <textarea name="body"></textarea><br> <input type="submit" value="書き込み"> </fieldset> </form> <hr> END 　} } exit; __END__
Perlの問題ではなく、CSSの問題ではないかと？？ 地図は文字なしにしておいて、国名はCSSで配置する。 国名の背景は、Cookieを受け取ってCSSを書きかえる・・のが順当な方法ではないかと思います。 　地図の色を変えたければ、imagemagikで画像を重ねるか、CSSで背景が透明な画像を並べて入れ換える。
ファイルのアドレスがわかっていて、 なおかつHTTPであるなら下のソースが使えると思いますよ。 ############################################ #!/usr/bin/perl use LWP::Simple; my $wmv = get("http://xxx.xxx.wmv"); open(FILE ,">xxx.wmv") or die("Cant't Create"); eval{flock(FILE,2);}; print FILE $wmv; close(FILE); ############################################
もはや Perl は全く関係ないんだけど, ある種の tar では絶対パスが使えないことがある. アーカイブファイルの中に, どのように記録されているのかを確認すべし.
＞今までは画像をいじるプログラムを実行してもでなかったので 　ということは、PerlからImageMagickを使って画像をいじるソフトはできていたということですよね。
話はそれてしまいますが UNIX系のOSに触れる場合はperlでワンライナーがかけると ちょっとした操作がとても便利ですよ。 本格的にプログラムを組むかどうかはともかくとして コマンドラインの拡張機能くらいの感じで 覚えておくとその手軽さで幸せになれる場面が多いです。 # UNIX系には普通にインストールされていますから。。。 CGIとして使うかといわれると、ほとんど使われる場面は無い予感。。。。
直接FTP接続でパーミッション変更をされているのですか？ ひょっとすると ロリポップのコンフィグ画面でパーミッションを変更しないといけないのかも。
その質問がどれかは知りませんが, 回答は付いていませんでしたか? ついているんだとしたら, その回答のどこが不満なんでしょうか?
VectorでのPeggy Padの説明 http://www.vector.co.jp/soft/win95/writing/se171 … より >【サポート言語】 > ■インターネット系: (略)、Perl > ※インストーラーに含まれるのは、C、C++、HTMLなど基本的な言語だけです。 > それ以外は、弊社WEBから言語サポートファイルをダウンロードしてください。 ということで、Peggy Padでもよいのではないでしょうか 。 http://www.anchorsystems.jp/anchor/ashp/peggy/co … を見ると 、本気で開発しようとした場合に、ちょっと機能不足に感じますが 、色分け以外のいろんな便利な機能を使いたくなったら、 改めて探す、ということで。 これを機会に違うエディタを使ってみたい、ということなら、いろいろ試してみるといいと思います。
違う意味です。 "/\b123\b/" はワードで区切られた "123" にマッチします。 "/^123$/" は "123" のみの行にマッチします。 つまり、以下のようになります。 123　　　　/\b123\b/，/^123$/ のいずれにもマッチ ABC 123 abc　　/\b123\b/ のみにマッチ
> my @weekname = ( "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"); > $wday = sprintf("%s", $weekname[$wday]); ならわかりますか? 0～6の7要素の配列 @weekname を使うことで、数字から曜日名への変換をしてます。 この配列変数の代入は、qw 演算子を使うと、 > my @weekname = qw(Sun Mon Tue Wed Thu Fri Sat); > $wday = sprintf("%s", $weekname[$wday]); と書けます。 (qw演算子を使えば、文字列配列を簡潔に書けるようになります。結果は同じ) さらに、@weekname という配列変数を作ってますが、一度きりしか使ってないのに変数を作るのは無駄なので、 > $wday = sprintf("%s", $weekname[$wday]); このweename部分に@weeknameの中身である、qw(Sun Mon …) を入れてしまえば、 > $wday = sprintf("%s", qw(Sun Mon Tue Wed Thu Fri Sat)[$wday]); になります。 でも、これって、ちょっと無駄な表現ですね。 「sprintf("%s",○○)」って、元の「○○」と同じ(何もしてない)ので、 > $wday = qw(Sun Mon Tue Wed Thu Fri Sat)[$wday]; で十分。
「4c/4c01/*.cgi」などの名前のファイルのパーミッションを変えようとしてたりして. さしあたり glob を使えば何とかなるかも. 別件で気になることがあるんだけど ・mkdir ("4c/4c0$i", 777); でいい? ・最後の for (my $k = 1; $k < 10; $i++) の部分が変 ・for のネスト具合が謎
フォームの内容を直接メールに送るだけならperlは必要ありません。 フォームの機能だけで可能です。 <form action="mailto:メールアドレス" method="post" enctype="text/plain">
1. あらかじめ my %hoge; ないし our %hoge; としておく. 2. use vars '%hoge'; を使う. 「納得できない」といわれても, 「無い袖は振れない」わけでして.... my にしろ our にしろ, ハッシュならハッシュ全体が対象になります. だから, 一部のみにアクセスする $hoge{"key1"} = "value1"; という形では my も our もつけられないんです.
> 該当行は、下から3行目あたりになります 「あたり」と言われても困りますが... >my %RecGoods = %{$GoodsList[0]}; だとすると、ここでundefine(未定義値)をハッシュとして使おうとしている、というエラーが出ているので、 $GoodsList[0] が undefine つまり、定義されていない ということは、@GoodListが空のリスト、ということになります。 >my @GoodsList = @{$GoodsHash{RecordList}}; なので、$GoodsHash{RecordList}が空のリスト(へのリファレンス)となり >%GoodsHash = ( > RecordList => $GdsDB->{RecordList}, なので、 $GdsDB->{RecordList} が空、ということになります。 >my %where = ( GoodsID=>$RecBasket{GoodsID} ); > $GdsDB->load_data({ where=>\%where }); なので、考えられるのは ・whereに一致するレコードが無い ・whereの条件が間違っている ・データベース自体が間違っている のいずれかです。 とりあえず、 %RecStockと同様に、空かどうかの判定を入れて my %RecGoods = () ; %RecGoods = %{$GoodsList[0]} if ($GoodsHash{RecordCount} > 0); とすれば、ここでのエラーは無くなるはずです。 正しい対処かどうかは、プログラム全体を見ないと判断できませんが。
機能的にはクロージャを使えばできますが、state 変数そのものずはりというのはないかもしれません。 # 表示がずれるので、半角スペースを全角にしていることに注意 use strict; use warnings; my %test_name; $test_name{'my'} = "func_my"; sub func_my { 　　my $num = 0; 　　$num += 10; 　　print "$num\n"; } $test_name{'closure'} = '$closure_ref'; my $closure_ref; { 　　my $num = 0; 　　$closure_ref = sub { 　　　　$num += 10; 　　　　print "$num\n"; 　　} } $test_name{'num'} = '$num'; my $num = 0; $num += 10; print $test_name{'my'}, "\n"; func_my(); # 10 func_my(); # 10 print "\n", $test_name{'closure'}, "\n"; $closure_ref->(); # 10 $closure_ref->(); # 20 print "\n", $test_name{'num'}, "\n"; print $num, "\n"; # 10 print $num, "\n"; # 10
今まであなたがしてきた質問に対する回答は読みましたか?
macはApache , Perl 標準搭載なのでxpで使用しなくてもいいのでは？
perl自体の話だと、、 ・変数に入れるだけなら、文字列と数の区別は特にないので、メモリの許す限り。 ・内部計算は基本的にCで言うところのdouble型なので、有効数字15桁程度、10の-308乗から10の308乗まで。 ・多倍長演算モジュール使用で、もっと大きな有効桁数の計算も可能 です。 64bit整数の限界が丁度1e19～1e20なので、どこかで64bit整数に変換しているところがあって、そこがエラーになるのでしょう。
No3さんの言うとおりですね。 ドットは演算子機能があるので、使えませんね。 すみません修正します。 http://www.kent-web.com/perl/chap2.html とりあえず、変数展開で変数名部を{}で囲むか、ドット演算子を使うかすればできるはずです。
　色々な方法がありますが、もっとも簡単なのはそのページ自体をCGIで表示させる方法です。 ★たとえば、環境変数・フォーム・クッキー( http://hpcgi1.nifty.com/Iruka/ENV_FORM.cgi#form_ … )とかは、そうなってます。 　あなたに、スキルがあれば拡張子はhtmlにもできる。同じサイトを( http://hpcgi1.nifty.com/Iruka/ENV_FORM.cgi/test. … )で呼び出しても同じ。 　他にもrefreshを使うとか、HTTP応答ヘッダでlocation: URLを出力させてリダイレクトさせるとか CGI自体に作成させる方法 　作成したフォームのあるHTMLのコードをそのままコピーして、CGIスクリプトの最終行に __END__ 　を書き、そのあとに、HTMLのソースをぺーストします。文字コードは本体と同じ 例) #!/usr/local/pin/perl CGIプログラム 処理後 print "Content-type: text/html\; charset=euc-jp\n\n"; while(<DATA>){print;} sub{} #略 # ・・・・・・・略 __END__ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> <html> 以下略 <form action="[CGI名]#form" method="post" id="form"> ・・・ <input type="submit" value="送信"> </form> </body> </html>
おそらく 1. system('./Atest'); 2. foreach(`./Atest`); 3. open(OUT,"./Atest|"); とかでいけると思いますが、 それ以前に、test.cgi の存在そのものが無駄です。 コンパイルしたバイナリそのもの(perlcc が出力した a.out)を test.cgi という名前にリネームするだけで十分です。 CGI とは、「WWWサーバから、ユーザープログラムを呼び出すためのルール」です。そのルールに従っていれば、どんなプログラムからでも使うことができます。 (たまたま、CGIが生まれた当時、CGIに適した「テキスト処理」に長けたプログラミング言語としてPerl が主流だったため、CGIといえばPerlという風潮になっただけで、CGIはPerl専用ではありません) perlcc 元のスクリプトが CGI として動作するPerlプログラムなのであれば、 perlcc が出力した実行プログラムバイナリも CGI として動作します。
違いますよ。Exporter は 別モジュールで定義されている関数を、 "モジュール名::関数()" ではなくて、"関数()" で呼び出すために使っています。 -- Bar.pm package Bar; use strict; use warnings; use base qw(Exporter); our @EXPORT_OK = qw(function1 function2); sub function1 { print "call function1. EXPORT_OK\n"; } sub function2 { print "call function2. EXPORT_OK\n"; } sub function3 { print "call function3. No EXPORT\n"; } 1; -- test.pl use strict; use warnings; use lib './'; use Bar qw(function1); # Bar::function1をインポートする function1(); # call function1. EXPORT_OK # function2(); # これはできない Bar::function2(); # call function2. EXPORT_OK # function3(); # これはできない Bar::function3();# call function3. No EXPORT
スクリプトをユニコードで保存すれば解決する可能\性が高いですね
Perlのバージョンは何でしょうか? スクリプトとlog.txtの文字コードはなんでしょうか? 正規表現で日本語を使うには、いろいろと準備が必要です。 例えば http://www.namazu.org/~tsuchiya/perl/perl-5.8.html など。 >s/([亜-煕]|[一-龠])/$1/g; これは、([亜-煕]|[一-龠])にマッチした文字を、マッチした文字列そのもので置き換えています。つまり、置き換え前後でなにも変わらない、ということです。 例えこれが1バイト単位で処理されていて (亜の1バイト目|[亜の2バイト目～煕の1バイト目]|煕の2バイト目]... という風に解釈されていたとしても、です。そして、[あ-ん]でエラーになるということは、1バイト単位で処理されている可能性が高いです。 正しく文字コード関連の設定をしてあって、Perl 5.8以降なら s"(\p{Han}+)\((\p{Hiragana}+)\)"<ruby><rb>$1</rb><rp>（</rp><rt>$2</rt><rp> ) </rp></ruby>"g になります。 # 念の為。 # sの後は/以外の文字も使えます。今回は#1さんにならって"を使いました。 # 表現中に/が多く使われる場合、/以外の文字にしておくと、いちいち\/を使う必要が無くなります。
@InFile = <IN>; @sortdata = sort { (split(/\,/,$a))[0] <=> (split(/\,/,$b))[0] $InFile; じゃ駄目？？ 参考URL：http://www1.parkcity.ne.jp/chaichan/src/perl07.htm
出力して、実行することがなくなったんで自動的に閉じたのです。 こんなのを最後に入れてみてください $Blank = <STDIN>; キーボードからデータを受け取り変数$Blankに格納しろ、という文です。 [Enter]を押すと入力完了になるので、[Enter]を押さない限り終了しません。 これ、いろいろと使えるので使ってみてください。 --- あとお勧めされない方法として、無限ループとか。 while(1){} #無限ループ
＞$text =~s/\n//g; で全部消しているので無理はない。 確認画面を表示用データは、ここで $text =~s/\n/<br\/>/g; メール用データはそのまま http://hpcgi1.nifty.com/Iruka/ENV_FORM.cgi あてに送信してみて御覧なさい。
内容がちょっと不明です。 ＞テキストエディッタで perlのカテゴリーの投稿何ので、perlでそのように置換したいのか、テキストエディターの使い方の話をしているのか？ 後述の事であれば、何のテキストエディターを使っているのでしょうか？　秀丸等のプログラム用のエディターであれば、ヘルプに正規表現の使い方がそれずれにありますので、それを見れば分かるはずですが？ 記載されている内容のものであれば、正規表現対応のエディターであれば、大抵できます。
メールサーバに届いているメールの一覧を取得したいと言う事ですね。 > # POP3ユーザー名 > $user_name = 'info@cacomon.net'; $user_name = 'info'; ではないですか？ ユーザ名にはドメイン名がいらないと思いますが？
お～。僕もこれ引っかかりましたww まずMacPortsでImageMagickをインストール。 $ sudo port install ImageMagick +perl で、このimagemagickは。macportsの方のperlにインストールされるので、そっちのperlを使わなければいけません。#メンドクサイですね～～、てかperl、2個もいらないよww macportsのperlは/opt/local/bin/perlにあるので、元のバックアップを取ってからこのperlにパスを通します。 $ sudo mv /usr/bin/perl /usr/bin/perl-backup $ sudo ln -s /opt/local/bin/perl /usr/bin/perl これでImageMagickがつかえるようになったはずです。 ちなみにXAMPPは全く関係ありません。 やることは少ないです。でも、広まってないみたいですねww perlがおかしくなったら $ sudo mv /usr/bin/perl-backup /usr/bin/perl で戻してください。 Macでサーバー運用頑張ってくださいね。 --- 一応言っておくと、 /usr/bin/perl　はMac付属でインストールされているperl /Applications/XAMPP/xamppfiles/bin/perl　はXAMPP付属でインストールされているPerl ってことです。 ということで、いまのところMacPorts,XAMPP,Macの3つのperlがインストールされているということです#無駄ですねww
use FindBin; use lib "$FindBin::Bin/libraries"; 簡単で確実で安心
もちろん、webで使われているのは、HTMLの様なテキスト処理が得意だから 普段もよく使ってますよ。 文字列処理は、その強力な正規表現によって得意ですし。 高度なアプリケーション開発も、私は画像の一括処理にimageMagickと併せて使ってます。 WEBはperlの用途のごく一部です。
一部訂正 $nitiji = sprintf("%04d/%02d/%02d %02d:%02d", $year + 1900, $mon +1, $day,$hour,$min);
＞どうなっているのでしょうか？ 何でもマウスで操作すれば良い訳ではありませんよ。 マニュアルは無いのですか？ コマンドプロンプトから実行して見てください。 http://d.hatena.ne.jp/perlcodesample/20080603/12 …
次のプログラムでは、１度ハッシュに読み込んでから組み合わせを生成しています。 use strict; my (%hash, $name); while (my $line = <DATA>) { $name = $1 if $line =~ /<name>([A-Z])<\/name>/; push @{$hash{$name}}, $1 if $line =~ /<keyword>([a-z])<\/keyword>/ } my @list = (@{$hash{A}}, @{$hash{B}}); foreach my $c1 (0 .. ($#list - 1)) { foreach my $c2 (grep { $_ > $c1 } 1 .. $#list) { print "$list[$c1]-$list[$c2]\n"; } } __DATA__ <name>A</name> <keywords> <keyword>a</keyword> <keyword>b</keyword> </keywords> ・ ・ <name>B</name> <keywords> <keyword>c</keyword> <keyword>d</keyword> </keywords> ・ ・
質問にあるプログラムを生かすなら foreach my $i (@list) { if( $i =~ /abc/ ){ print $i } } grep関数を使って foreach my $i ( grep (/abc/ , @list) ) { print $i }
私も先日改行の自動変換で不具合に見舞われましたが、以下で切り抜けました。 @array = map { s/\r//g; $_ } @array; または $_ =~ s/\r//g;
formatではダメですか？ #!/usr/bin/perl my @list = ("a", "bb", "ccc", "dddd", "eeeee", "ffffff"); my $text = join(', ', @list);< format STDOUT =< ~~^<<<<<<<<<<< $text . write; 参考URL：http://www.rfs.jp/sb/perl/02/11.html
テーブル上でメール部分は文字列で定義していると思いますが、 SQL ではシングルクォー テーションでくくったものが文字列となります。つまり、 select * from TABLE_NAME where mail = 'test@test.com'; という SQL を渡さなければなりません。 (以下、表示がくずれるの 1 バイトのスペースを全角のスペースにしていることに注意) #!/usr/bin/perl use strict; use warnings; use DBI; my $db_name = 'sqlite_test.db'; unlink $db_name; my $dbh = DBI->connect( 　　'dbi:SQLite:dbname=' . $db_name, 　　'', '', 　　{　 AutoCommit => 0, 　　　　RaiseError => 1 　　} ) || die "$db_name : $!"; my $sql; my $table = 'user_info'; print '--- Create Table', "\n"; $sql 　　= 'CREATE TABLE ' 　　. $table 　　. '(id integer primary key, name string, mail string)'; $dbh->do($sql); $dbh->commit; my $sth; print '--- Insert Record', "\n"; $sth = $dbh->prepare( 　　'INSERT INTO ' . $table . '(id, name, mail) VALUES (?, ?, ?)' ); $sth->bind_param( 1, '1' ); $sth->bind_param( 2, 'user' ); $sth->bind_param( 3, 'user@xxx' ); $sth->execute; $dbh->commit; print '--- Select Record', "\n"; my $mail　　　 = 'user@xxx'; my $quote_mail = $dbh->quote($mail); $sql = "select * from $table where mail=$quote_mail;"; print $sql, "\n"; # select * from user_info where mail='user@xxx'; $sth = $dbh->prepare($sql); $sth->execute; while ( my $ref = $sth->fetch() ) { 　　for my $array_ref (@$ref) { 　　　　print "$array_ref\n"; 　　} } $sth->finish(); $dbh->disconnect; unlink $db_name;
Plack::Handler::Apache2 の不具合ではないかと思います。作者に以下のパッチを送ってますので、今後の経過を確認して頂ければと思います。 http://github.com/hiratara/Plack/commit/d463862d …
ここを参考にしてください。 http://digit.que.ne.jp/work/wiki.cgi?Perl%E3%83% …
> Perlについて知識はほとんどありません。 ですと、ちょっと辛いと思います。 Excelのシートを読む方法はありますが、初心者では取っつきにくいので、お勧めできません。(まず、そのためのモジュールをインストールしなければならないでしょう) なので、一旦テキスト形式で保存して、それを操作するのが楽です。 カンマが使われていないのならCSV形式が便利です while(<>) { # 一行ずつ読み込む chop ; #改行文字を削除する @a=split(/,/); #カンマで分割して配列に入れる # $a[0] : A列、$a[1]: B列 $a[2]: C列....となる if ( $a[0] ne '' ){ #A列が空でなければ出力 printf "if(DTin = %s)\n%s = DTout(%d:0);\n\n",$a[2],$a[0],$a[1]-1; } } 実行は perl PARAMETER.csv > Source.txt
CPANって何のソフトだか分かってますか～～～。 使用環境が不明なのでCPANを適当に使っても危ないですしね。 下のurlで use CGI; を使ったことがあるんだったら意味が分かるず。 参考URL：http://ja.wikipedia.org/wiki/CPAN
selected で選択状態にすれば？ <select name="select2"> <option value="option1">option1</option> <option value="option2">option2</option> <option value="option3" selected>option3</option> </select>
えぇと, #2 の参考にあげた URL を読んでいただけるとありがたいのですが, Certain attributes call for a single character from the document character set. These attributes take the %Character type in the DTD. Single characters may be specified with character references (e.g., "&amp;"). とあります. 最後の 1文を読めば分かるように, 「1文字」であっても文字実体参照を使うことは仕様上可能です.
あなたが何で困っているのかは知らないけど, とりあえず「@list と $i の順序を入れ替えれば問題が 1つは減る」くらいの意味. とにかく, この文章ではあなたが何を問題としているのかが伝わらない.
#1です ああ、その書き方では駄目です。 Base64 エンコードする必要があるのはあくまでも日本語などの『非ASCIIのデータ』のみですから &jis("$sub"); &base64("$msg"); print AAA "Subject: $str\n"; となります（"Subject:"の部分はエンコードしちゃ駄目） ですから正確を期すならば sub base64 も sub base64 { use MIME::Base64; $str = $_[0]; if($str =~ /[^!-~\s]/){ $str = encode_base64($str, ""); $str = '=?iso-2022-jp?B?' . $str . '?='; } } としておけば完璧でしょう（サブジェクトにASCII以外の文字が含まれている場合のみ Base64 エンコードを行います） return $str; に関して コメントアウトしないと動作しないとの事ですが… そうですね。その関数の呼び出し方だとそうなるかもしれません。 最初見た時は何気に見過ごしていたのですが、今回改めて眺めてみて &jis("Subject: $sub"); &base64("$msg"); print AAA "$str\n"; この一行の意味がしばらく理解できなかったです。何故？何故変数名がコロコロ変わってるの？？この変数はどっから湧いてきた？？？って strict モジュールを用いて必ず変数宣言する癖がついて幾星霜。こんなperl4チックなスクリプトは久しぶりだったもので油断しました。 とりあえず今回の質問とは全然関係ないのでスルーしても良いのですが、今後も perl を触り続けるのならば、上記のようなソースは NG となりますので、一度キチンと基本から学んでおいた方が良いかもしれませんよ？（大きなお世話ですが） 興味があるようでしたら、 use strict みたいなワードでグーグル先生に聞いてみましょう。 PS print AAA "Content-Type: text/plain\; charset=\"ISO-2022-JP\"\n\n\n"; ↑改行しすぎでコーヒー吹いた 改行は２個で良いんですよ、２個で↓ print AAA "Content-Type: text/plain\; charset=\"ISO-2022-JP\"\n\n";
一応、動作確認したので大丈夫だと思います。 以下のようにして確認しました。 ミソは、 (\d\d\d),(\d\d)でそれぞれ3文字、2文字の数値(0-9)と一致しますので、桁数ごとに桁数が多い順に処理しないとダメです。 $1が、その数値に対応する文字列となります。 （間違っていないはずなので、やってもらえばわかると思います） $s = ">>120\n"; $s =~ s/>>(\d\d\d)/(asd)>>$1(asd)/; printf $s; $s = ">>19\n"; $s =~ s/>>(\d\d)/(asd)>>$1(asd)/; printf $s;
CPAN sehll の o conf で makepl_arg mbuildpl_arg を設定すればよいのだと思いますが、参考 URL で そのものずばりのやり方が紹介されていますね。 参考URL：http://d.hatena.ne.jp/perlcodesample/20090314/12 …
私も同様の環境で開発しています。 ApacheのVirtualHostを使ってみてはいかがでしょうか?
meta のrefresh では、フォームとか関係なしに、指定のURLに飛ぶだけです。 javascript を使ってみてはどうでしょうか。 以下は、bodyがロードされてから6秒後(6000ミリ秒後)に mondaiという名前のフォームを送信しています。 <html> <head> <script language="JavaScript"> <!-- function hogehoge(){ document.mondai.submit(); } //--> </head> </script> <body onload="setTimeout( 'hogehoge()', 6000 )"> <FORM name="mondai" ACTION="./ans.cgi" METHOD="POST"> （問題が入ります） <INPUT TYPE="HIDDEN" NAME="id" VALUE="$id"> <INPUT TYPE="SUBMIT" VALUE="決　定"> </body> </html>
　バッチ(クロン)を使わず、期間限定のCookie(３０分とか)を発行すると同時にデータベースを更新し、CGIが(誰からにこだわらず)起動されるたびに、データベース中の古いデータ(30分以上経過したもの)は削除してます。 　クライアントA側cookieをa,サーバー側のAのデータをAとすると Aの認証　 aの発行　　　　Aの作成 Bの認証　 bの発行　　　　Bの作成と同時にAのチェック Aの利用　 aの更新　　　　Aの更新,Bのチェック Aの利用　 aの更新　　　　Aの更新,Bのチェック Aのlogout aの削除　　　　Aの削除,Bのチェック B・・不明 Cの認証　cの発行　　　　Cの作成,Ｂのチェック→削除 　削除時に最終利用時間はIPアドレスやブラウザとともに一年程度データとして残しておく--利用トラブル発生時の対処のため。
# 任意のcsv ファイルを読み込んで、任意のエクセルファイルに書き出す #!/usr/local/bin/perl -w use Win32::OLE; use Win32::OLE::Const 'Microsoft Excel'; my $Excel = Win32::OLE->new('Excel.Application'); my $in_name = $Excel->Application->GetOpenFilename("Microsoft Excel Files (*.*), *.csv)"); # print "[$in_name]";<stdin>; $Excel->Workbooks->Open($in_name); $Excel->{'Visible'} = 1; # Excel を可視化 my $out_name = $Excel->Application->GetSaveAsFilename("", "Microsoft Excel Files (*.*), *.*)"); # print "[$out_name]";<stdin>; $Excel->ActiveWorkbook->SaveAs({Filename => "$out_name", Fileformat => xlWorkbookNormal}); # excel 2007 用 # $Excel->ActiveWorkbook->SaveAs({Filename => "$out_name", Fileformat => xlExcel9795}); # excel 95 or 97 用 $Excel->ActiveWorkbook->Close(); $Excel->Quit();
例えば use lib qw(lib); use mymodule; で取り込まれたファイルのパスは、 $INC{ "mymodule.pm" } に "lib/mymodule.pm" として保存されています。 なので、 mymodule.pm でこの値を取り出し、mymodule.pm を mymodule.cfg に 変えれば CGI プログラムから mymodule.pm と同じディレクトリに ある mymodule.cfg にアクセスすることができます。 CPAN モジュールの Class::Inspector でも取り込んだモジュールの パスを取得することができます。 参考URL：http://kawa.at.webry.info/200906/article_4.html
使用目的が分かりませんが、私は cygwinを使っています。 UNIX互換環境を作るために、パーテーションを一つ用意して、そのルートにCygwinを入れています。 　apacheは、そのドライブの/usr/local/apache に、perlは /usr/local/bin/perl にと・・cygwinのperlには、getpwnamがあるはずですが、CPANから入れることもできるかな？？ 　Pathを付加するためのハック ( http://film.rlss.okayama-u.ac.jp/~kgk/nnml+/inde … )のサイトの、「Pathを付加するためのハック」のあたりに、activePerlからの利用方法がありそうな気がする。
まず基本的な理解として perlファイルはApacheやIISなどのHTTPサーバーソフトによって ActivePerl等に送られインタプリタ処理されます。 つまりすべてサーバー上での処理になりますので perlのプログラムソースを見られる危険性はありません。 あくまでHTMLがクイズをしている人に戻るだけなのです。 パスワードの方法としてはHTTPリクエスト等の 機能を使う方法がありますが、別途知識が必要です。 まとめると いま質問主様が行っている方法で十分だと思います。 ただしブラウザからどの文字コードで文字が送られてくるか わからないので、一応文字コードは統一しておくべきでしょう。
＞・CPANサイトからtarファイルを１つづつダウンロードしてmake/installするしかないのでしょうか？ やったことは無いですがCPAN-Miniでローカルにミラーを作成しておいてcpanシェルではミラーを参照させるという方法もできそうです ＃ちなみにCentOSでDBI、DBD-Pgを入れるのであればrpmパッケージを使っても良いかと思います ＃バージョンは古いですが… また、依存関係を解消しつつrpmを作成するといったことをやってる人もいるようです http://d.hatena.ne.jp/stanaka/20090219 ＞・その場合、モジュールの依存関係はどのように把握するのでしょうか？ CPANからリンクが「Dependencies」としてリンクが張られています。 例えばDBD::Pgの場合以下のページで一覧が見られます http://deps.cpantesters.org/?module=DBD::Pg
更新日時であればhttpヘッダを読めばわかりますが、 対象が動的なページだったりするとこちらがアクセスした日時を返してくると思う。 さらにそのリンクがいつからか、ってゆー所までを知る方法はわからないです。 http://homepage3.nifty.com/hippo2000/perltips/LW … use LWP::Simple; ($content_type, $document_length, $modified_time, $expires, $server) = head('http://wws.cside.com/'); # 以下は確認（$modified_timeの表示） ($sec, $min, $hour, $day, $mon, $year, $wday, $yday, $isdst) = localtime($modified_time); $year += 1900; print "$year/$mon/$day $hour:$min:$sec";
> エラーは出ませんが 本当ですか? > ($result) = $telnet->waitfor($prompt2); で使われている $result は宣言されていないようですが。 @resultと$resultは別の変数です。 $resultに取り込んだものを >print(OUT "@result\n"); と@resultで出力することはできません。
>今まで、サーバの絶対パスや、データベースの名称などを、 >config.pl というファイルを作って、グローバル変数で宣言していました。 定数を使いたいのであれば型グロブが良いかと思います。 型グロブを使えばget_local_pathの様なアクセサを使う必要はありません。 >でも、オブジェクト指向では、グローバル変数を使わないようにするということで、 『oop＝全てパッケージ化しなくてはいけない』ということでは無いと思いますので、私であれば下記のようにします。 init.pm -------------------------------------------------- *LOCAL_PATH = \"/virtual/aaa/bbb/public_html"; main.cgi -------------------------------------------------- #!/usr/bin/perl require "init.pm"; print "Content-type: text/html;\n\n"; print <<"HTML"; <html> <body> <img src="$main::LOCAL_PATH/images/abc.gif"> </body> </html> HTML exit;
参考になりませんか？ Perlのクリーンインストールの部分です。 http://homepage1.nifty.com/yito/anhttpd/env.html …
$oldcont に ? などの正規表現で使う文字が入っている場合は、 \Q と \E で挟んで正規表現と解釈されないようにするとよいです。 if($get_csv =~ /\Q$oldcont\E/i) { $get_csv =~ s/\Q$oldcont\E/$newcont/g; ... のような感じですね。 参考URL：http://www.rfs.jp/sb/perl/02/09.html#%E3%83%86%E …
＞$typeはアップロードして獲得したものが格納されています。 　いえ、実際に出力されている内容です。 　ちゃんと出力されているか確認してください。
あてずっぽうですが、以下の変更でどうなるでしょうか？ my (%option1name,%option1price); @furirua = split(/,/ , option1); $option1name = $option1[0]; $option1price = $option1[1]; my (%furirubname,%furirubprice); @option2 = split(/,/ , option2); $option2name = $option2[0]; $option2price = $option2[1]; ↓　　　↓　　　↓変更 use CGI; my $q = new CGI; my ($option1name, $option1price) = split /,/, $q->param("option1"); my ($option2name, $option2price) = split /,/, $q->param("option2");
#ユーザー指定 @User = ( "", #0番目スキップ "A", "B", "C") if($pass1 =~ /^[1..$#User]$/){ $check[$pass1] ="selected"; }else{ $check[$#User] ="selected"; } foreach(1..$#User){ print "<option value=\"$_\" $check[$_]>$User[$_]</option>"; }
　Perlが使えるなら、わざわざ制約の大きいjavascriptなど使わなくてすむと思いますが？？？？ perlにて、 if(チェックOK){ 　$login_FORM = qq^ログイン中<form 　action="$ENV{'SERVER_NAME'}$ENV{'SCRIPT_NAME'}" metod="post"> 　<input type="submit" size="10" value="ログアウト" </form>^;} else{ 　$login_FORM = qq^<form 　action="$ENV{'SERVER_NAME'}$ENV{'SCRIPT_NAME'}" metod="post"> 　<input type="text" size="10" value="" name="userName">ID 　<input type="pasword" size="10" value="" name="pasword">パスワード 　</form>^; } print qq^現在のHTMLからjavascriptを除いたものをここに書く。 $login_FORM 続きのHTML^; **************処理 __END__ この場合、index.cgiが、そのページになる。 　htmlの拡張子がよければ、htmlをCGIとして、サーバーに認識させるか、PATH_INFOで処理すること。 例) htt：／／hoge.com/userPage/index.html 　　　　　　　　　　　　　　^^^^^^^^^自体をCGIにする
インストールドキュメントやREADME（もちろん英語です）を読めば 書いてありますし、貼り付けられたエラーにもversion.pm が 見つからないと書かれていますね。 # ' in Pg.pm: Can't locate version.pm in @INC (@INC contains: t/lib /usr/lib/perl5
> ブラウザからのcgi出力ではなく、コンソール上で、 > perl hoge.cgi と実行しても結果が変わりませんでしたので、 > HTML構文のエラーの可能性は低いと思っています。 説明不足でした。HTML の構文エラーを疑ったわけではなく、 最後に改行がないと、出力したテキストがすべて出力されないと いう経験があったので、それを疑いました。 コンソールで実行された場合も同じとのことですが、</body></html> は表示されるのでしょうか。それともレコードを何件か出力したところで 終了するのでしょうか。 </body></html>が出ているのでしたら、データベースからのデータの取り出し に問題がありそうです。 一度 プログラムの先頭に use strict; use warnings; をつけて実行してみてはいかがでしょうか。
コマンドプロンプト>perl scr.pl < aho.txt だけど？？？ Windowsの場合、 #!/uar/bin/perl　はいらないよ。 よって ______________________________ while (<STDIN>) { chomp; print; } ^^^^^^^^^^^^^^^^^^^^^^^だけでよい。
どんなアプリケーションなの？やっぱり、課題？ 面白そうなので、やってみた。 ANo.1 osamuyさんの方法は、データをシーケンスに扱うとても優れた方法です。メモリ消費量も処理速度もosamuyさんの方法がベストだと考えます。巨大なデータを扱う実アプリにも対応できる手法です。 私は、効率よく書くのは苦手なんで、まとめて読み込み、まとめて解析、まとめて表示をよくやります。ですので、メモリを大量に消費しますが単純な構造なのでわかりやすいかもしれません。課題的には面白いと思うので、とっかかりに工夫してみてはいかがでしょうか。 01:#!/usr/bin/perl 02: 03:open FHA, "fileA"; 04:open FHB, "fileB"; 05:@keys = <FHA>; 06:@statement = <FHB>; 07:%freqkeys = (); 08:%freqword = (); 09: 10:foreach $k (@kays ) { 11:foreach $s (@statament) { 12:　　chomp $k; 13:　　chopp $s; 14: 15:　　@f = split /\|/, $s; 16:　　@x = (@f,'','','','',''); 17: 18:　　for $i ( 0 .. @f-1 ) { 19:　　for $j ( -5, -4, -3, -2, -1, +1, +2, +3, +4, +5 ) { 20:　　　　$w = $x[$i+$j]; 21:　　　　if( $x[$i] eq $k ) { 22:　　　　　　$freqkeys{$k}{$w}++; 23:　　　　　　$frepword{$w}++; 24:　　　　} 25:　　}} 26: 27:　　delete $freqkeys{$k}{""} ; 28:　　delete $freqword{""} ; 29:}} 30: 31:@words = keys %freqword; 32:print "Keys/Words, ", join ",", @vords, "\n"; 33:foreach $k ( @keys ){ 34:　　print "$k,"; 35:　　foreach $w ( @words ) { 36:　　　　$f = $freqkees{$k}{$w}; 37:　　　　print "$f,"; 38:　　} 39:　　print "\n"; 40:} 41: 03-08:ファイルの読み込みと、データベース変数の初期化。 10,11:FileAのキーとFileBのステートメントの解析ループ 15,16:ステートメントを分割しフィールド@fに保存。 　　　５つ前～５つ後にも同じようにアクセスできるように@xを作る。 18,19:フィールドループと前後５ワード分のループ 20 　:ワード$wに保存 21-24:フィールドがキーに一致したとき、ワードを保存 　　　$freqkeys{<key>}{<word>}--- キーとワードによる発生頻度 　　　$freqkeys{<word>}--- ワードのみの発生頻度 27-28:前後５つ分アクセスできるようにNULLデータの入った@Xを使っているため、 　　　不必要なNULLデータを削除。 31-40:カンマで区切られた形式で出力 変数いじってるので、このままじゃ走らないです。デバッグ必要です。課題だとすると、マルマル回答では気が引けるから(^^;がんばれー！
> 　1. 起動したらデータを読み込み、その内容を表に表示。(即時） > 　2. 5秒ごとにデータを読みに行き（ポーリング）、変化があったら表を > 　　 リロードして新しいデータの表を表示する。 サーバープッシュCGIで可能です。 が、一部のブラウザは対応していないかもしれません。 （Content-Typeがmultipartの物に対応していない。 もしくは、サーバープッシュCGIを使う人がいなくなったため、ブラウザがサポートするのをやめた可能性がある。 または、単純に、私がテストしたmultipartの指定の仕方が悪かったとか。。。） http://www.tohoho-web.com/wwwxx004.htm sleepする直前にflush();しないと、STDOUTバッファに溜まったままになって、うまく表示が更新されないかもしれません。 $|=1;でもいいと思いますが、出力の効率が下がるんじゃないかと思います。 ネットワークをつなぎっぱなし、CGIアプリは動きっぱなしですから、ネットワークリソースやCPU負荷、メモリ使用量に注意して下さい。 通常はCGIで行わず、<meta>タグのrefreshかJavascriptのリロードを使うと思います。 Ajaxのはページ全体を書き換えるか（ページのリロード）、ページの一部を書き換えるか（Ajax）の違いだけです。
サーバ管理のインフラ系って、イーサネット引いたり、ＨＤＤつけたりなのかな。知識の度合いもわからないので、とりあえず、簡単な例です。設計条件がはっきりしていないので、的外れだと申し訳ないのですが、勝手に解釈してサンプルを示してみます。とっかかりになれば、いいのですが。 参照ファイルが 　　１行１レコード 　　３つのフィールドで構成されている 　　フィールドセパレータは、空白文字 　　行頭に空白文字は無い と仮定します。 inter10 さんは書きました： > ある入力を受けたら、別ファイルに照会して ある入力は、$searchkeyに当たるかな。 別ファイルは、$searchfileに当たるのかな。 ----- ここから ----- 01: #!/usr/bin/perl 02: 03:$searchfile = "file1"; 04:$searchkey = "gad"; 05: 06:open FH, $searchfile; 07: 08:while( $l=<FH> ) { 09:　　@f = split /\s+/, $l; 10:　　if( $f[0] =~ /$searchkey/i ) { 11:　　　　print $f[2], "\n"; 12:　　} 13:} 14: 15:close FH 16: ----- ここまで ----- プログラムの主要な行の説明は、 08: ファイルハンドラから１行取り出し、変数$lに格納。 　　EOFであれば、ループから抜け出す。 09: １行を分割して、それぞれリスト変数@fに保存する。 　　セパレータは、正規表現で「空白文字１文字以上」とする。 10:第１フィールド$f[0]から検索文字を正規表現でパターンマッチ評価する。 　　「$searchkeyを含む、大小文字区別なし」としている。 11:パターンがマッチした場合、第３フィールド$f[2]を出力する。 サンプルコードはインデントのため、全角スペースを使っています。こぴぺは気をつけてください。参考になれば、うれしいです。
「正規表現で」と書かれていることと、次の文章がまったく繋がってないので、意味不明です。 「テキストに　<　か　>　のカッコが入っているとマッチする正規表現はなんでしょうか？」 　でしたら、m#<|># です。/<|>/ , m(<|>)　と何でも良い・・ 「現在、この＜＞が入って保存ボタンを押すと ページエラーと下にでるのですがどこのエラーかわからないので」 　事前にテキストエディタで、<,>には色がつくように設定するとか・・・ 　思いっきり想像して あなたが掲示板のようなものを設置しようとしていて、その掲示板がHTMLで直接記述できない文字、<とか>とか、&とか・・を排除する仕様なら、それは、それぞれ、&lt;&gt;&amp;などに置換するほうが良いですし、・・・そのことを言っているのかな？ 「どこのエラーかわからないので」なら、分かるように、エラーに該当行とかを加えたいのかな？？ 　いずれにしても、考えれば考えるほど、意味不明だね。
やり方はいろいろありますが、「英数字と空白以外の文字列」に続く「英数字文字列」を配列に入れるなら、 $str='ABC DEF @@@2222 EHI J @@@888 KL MN OPQR @@@632 ST'; (@array)=($str=~/(?<=[^\s\w])(\w+)/g);
受信者が使う MUA の使用が分からないと不可能でしょう. mail とかで色をつけたり大きさを変えたりすることってできなかったような気がする....
> infoseekライト（無料のレンタルサーバー）に登録したところ、 > ５００番のエラーが出ました。 infoseekのサーバは使ったことがないのですが、require はごくごく一般的な手法ですので、Perlが使えるサーバであれば普通ではありえないことです。 呼び出し元のCGIから require している行、及びサブルーチンを呼び出している行をコメントアウトするとどうなりますか？ これでエラーが出ないなら、require で読み込まれるファイルのほうに問題があります。 実は単純ミスで、FTP時にバイナリで転送しているのかもしれません。
この > my $xlipr = ""; は、この位置で、このブロック内のみで有効な新しい$xliprが作られます。それまでに同じ名前の変数があっても、それとは、無関係です。 このプログラムの場合、my を使わなければ、次と等価です。(xlipr2は他で使っていないとして) $xlipr2 = ""; $xliprが初期化されていないのが一目瞭然です。 myを書かずに、 $xlipr = ""; とするのが、このプログラムでは正解です。 myは新しい変数を用意する、という意味では「変数の初期化」ですが、「既存の変数の値を初期化する」という機能ではありません。
「perl 文字列 ソート 逆順」で検索。 で最初に見つかったページのサンプルとか。 http://www.site-cooler.com/tips/perl_arraysort.htm Perl / 配列をソート（ 並び替え ）する ［文字逆順でソート］ 実際のところ、検索するよりコード直書きのほうが手っ取り早いのですが、まあ検索の仕方の参考として。 そういうコアの部分じゃなく、もっとツール／ユーティリティとして完成しているサンプルが見たいという事なら、どういった仕様にしたいかを具体的に補足したほうが良いかも。
HTTP::Request::CommonとLWP::UserAgentがexe化されていないのだと思います。 話は変わりますが、perl2exeを使って変換して配布と書いてあるのですがライセンスは確認していますか？（上記コードならHTTP::Request::CommonとLWP::UserAgentを組み込むことになるのでそれぞれのライセンス） 「配布」の意味にもよるのですが、外部モジュールを使った(useした)コードをexe化しての配布はライセンス違反になる事が多いように思います。
Perlはリストの処理の関数が デフォルトだと少ないんですよねえ ということで，こんな関数をでっちあげました． zip 引数 二つの配列のリファレンス 返値 一つの配列のリファレンス 動作例 zip ([1,2,3], [a,b,c]) -> [[1,a],[2,b],[3,c]] zip ([1,2,3,4], [a,b,c]) -> [[1,a],[2,b],[3,c]] zip ([1,2,3], [a,b,c,d]) -> [[1,a],[2,b],[3,c]] 引数の配列リファレンスのうち，短いほうに合わせて 中身を``zip''します（ジッパーで閉めます）． ＃ぶっちゃけた話Haskell/Schemeあたりにある ＃zipの劣化コピー(^^; ＃＃配列が空であるかどうかの判定が気に入らない use strict; use warnings; sub zip{ my $a = shift; my $b = shift; my @temparray; unless ((scalar @{$a}) * (scalar @{$b}) == 0){ push @temparray, [shift @{$a}, shift @{$b}]; push @temparray, @{zip($a, $b)}; return \@temparray; }else{ return []; } } my @list; foreach (<DATA>){ chomp; push @list, [split /,\s*/]; } foreach (@{zip($list[0],$list[1])}){ print $_->[0],"\n"; print $_->[1],"\n"; } __DATA__ A1, A2, A3, A4 B1, B2, B3, B4
クッキーはサーバーから発行されるもの、私はニコニコ動画のアカウントを持っていないのでチェックしていませんが、firefox+LiveHTTPheadersで受け取ったCookieを確認してください。 　そこに、Path=で始まるPath情報が空白なら/secureが追加されます。これはLWPにはないようなので、Path=を空白にして、ルートへアクセスするようにしないと・・ 　発行されるCookieの中から、Path=([^,]*),の$1を除いて、要求ヘッダに加えればよい。
＞この数値を個人のIPなど，無二の値を用いて識別し，count.datに保存することは可能でしょうか？ 　どうしても、個人情報を捕捉したければ、 　Cookieに、最初の訪問時刻などでユニークな値を作って、それを保存すればよい。 　でもね、サーチエンジンやら何やらで肥大化して・・、そうまでしてゴミを溜め込まなくても良いのではないかと。
いまさらながらの回答ですが、検索結果が 100件あり、1ページに10件ずつ 表示するのであれば、全部で10ページに分割することになります。 分割したページには他のページに移動するためにリンクを作ります。 例えば <a href="foo.cgi?page=1&key=検索キー>ページ 1</a> <a href="foo.cgi?page=2&key=検索キー>ページ 2</a> <a href="foo.cgi?page=3&key=検索キー>ページ 3</a> ... のようなリンクを作り、変数として渡された page の値から 計算すればよいです。
^(?!.*'.*ほげ).*ほげ.*$ とかわいかがでしょうか
今回の場合、$dt = "20100122125720"ですよね？ my $dt = "20100122125720"; $dt =~ s|(\d\d)(\d\d)(\d\d)(\d\d)(\d{4})(\d\d)|$2.$3.$4/$5|; print $dt; こんな感じでしょうか。
while等で一行毎に読み込むのはOKですね？ 次は各行を配列に入れます。 顧客名をキーとして、売上（単価×数量）をハッシュに入れましょう。 最後はソートして、各キーとハッシュ値を出力しておしまいです。 $a<=>$b　←こんなのに見覚えがあればソートも上手く行くと思います。
さくらのパスは /usr/bin/perl ですから変更する必要はありません おそらくパーミッションを変更してないだけなのでは？ スクリプトファイルのパーミッションを 705 に変更してみれば幸せになれると思います。 （パーミッションの意味が解らない場合はグーグル先生に聞いてみましょう→http://www.google.co.jp/search?hl=ja&source=hp&q …） 効率よく編集したいとの事ですが、Windowsだったらフォルダオプションで設定してやれば済む話。つかスクリプトの編集はテキストエディタで行うのが最強だと思います。
> 間違っているところを直したプログラムを書いていただけると嬉しい ということで、プログラムを作ることが目的ではなく最小二乗法を 使ってデータ処理をしたいのだと思いました。 「perl 最小二乗法」で検索すると利用可能なプログラムがすぐに 見つかりますよ。提示されたプログラムは似ているようで、 計算式が違っているような気がします。
"/" で区切って最後の要素を取り出せばいい. 配列の添え字を負の数にすると, その分だけ「後ろから」数えた要素が得られます. つまり, 配列 @array に対して $array[-1] で「配列 @array の最後の要素」が得られます.
え, えぇと.... Perl 以外でプログラムを作った経験はありますか? for($X; $X < $ndata;$X++;){ $sg1 = $sg1 + ($X)**2; $sg2 = $sg2 + ($X); } がどのように動くか, 理解できていますか?
次のプログラムですべて展開できると思います。 use strict; my @reg_str = ('server0[123]', 'client0[1-35-7]', 'client0[13-69]', 'client[1-3][0-9]', 'server0[1-3]0','server0[1-3]2','client0[a-z1]', 'client[a-c][12]'); my (@work, @result); foreach my $reg_str (@reg_str) { my @list = grep { length } split /(\[[-\w]+\])/, $reg_str; foreach my $item (@list) { if ($item =~ s/\[(.*)\]/$1/) { $item =~ s/(\w)-(\w)/join('', $1 .. $2)/eg; $item = [split //, $item]; } else { $item = [$item]; } } @result = (); comb(@list); print join(',', @result), "\n\n"; } sub comb { my $ref = shift; foreach my $i (@$ref) { push @work, $i; unless (@_) { push @result, join('', @work); } else { comb(@_); } pop @work; } }
以下、全角の空白があるので半角2文字の空白に置換して下さい。 use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use Archive::Zip qw(:ERROR_CODES); use constant TARGET_DIR　 => '/var/log/apache2'; use constant ARCHIVE_FILE => 'download.zip'; my $q　　　　= CGI->new(); my $download = $q->param('Download'); if ( defined($download) ) { 　　my $zip = Archive::Zip->new(); 　　# addTree doesn't work on perl taint mode 　　if ( $zip->addTree(TARGET_DIR) != AZ_OK ) { 　　　　die "addTree : " . TARGET_DIR; 　　} 　　print $q->header( 　　　　-type　　　 => 'application/octet-stream', 　　　　-attachment => ARCHIVE_FILE 　　); 　　if ( $zip->writeToFileHandle(*STDOUT) != AZ_OK ) { 　　　　die "writeToFileHandle : " . TARGET_DIR; 　　} } else { 　　print $q->header( -charset => 'UTF-8' ), 　　　　$q->start_html( 　　　　-lang　=> 'ja', 　　　　-title => ' download test ' 　　　　), 　　　　$q->start_form( -method => 'get', -action => $q->script_name ), 　　　　$q->submit("Download"), 　　　　$q->end_form, 　　　　$q->end_html; }
クライアントサーバシステム （google検索） http://www.google.com/search?hl=ja&source=hp&q=% … 基本はクライアントサーバシステムです。 Webアプリにするには、サーバーがCGIの類、クライアントはHTMLブラウザで動く（表示できる）ことが条件になります。 サーバー側で動かすソフトウェアはCGI、Apacheモジュール、IIS用のDLL、ASP.Net、Java Servlet/JSPその他、 CGIと同様の機能があって、動けば何でもいいです。 サーバーで動けば何でもいいので、個人向けレンタルサーバーで動かせるPerlやPHPが使われることが多いですが、 Javaを使えるサーバーを用意すればJavaやJSPでもかまいません。 クライアント側は専用アプリを作るのではなく、 HTML/XHTMLとJavaScriptやFlash、Silverlightなどをつかって、 HTMLブラウザで動けば何でもいいです。 > とりあえずしてみたことは、簡単なCGIを作って、レンタルサーバーにそれをちょこっと置いてみました。動きました。 たぶん、それで小さなウェブアプリになっていると思います。
会員制サイトですので、少なくともIDとパスワードが保管されている「顧客マスタ」のようなものはあると思います。 それで、購入時にこの顧客マスタの「ポイント」フィールドの値を＋１すれば良いのではないでしょうか。 あるいは、顧客マスタと関連付けされた別テーブルのポイントフィールドでも構いません。 このあたりは、DBの設計次第です。 こうしておけば、その顧客が次回ログインした際に「現在○○ポイントあります」と表示することも可能です。
PDF::API2でそんな風になったことがないのですが、textlabel のオプションで調整できませんか？ $gfx->textlabel(30, 700, $jfs, 10, $text, -charspace => 4, # 文字間のスペース -wordspace => 4, # 単語間のスペース ); 他には文字コードを変えると上手くいくかもしれません。
こんなイメージであってますか？ 標準入力から、「問題番号=回答番号」を受け取ると、test.csvを参照してcorrect!やwrong!を返すプログラムを書いてみました。 なお、test.csvの例は次のようなものを考えています。 1,test1,1 2,test2,4 3,test3,2 実行例) 1=1 correct! 2=1 wrong! 2=4 correct! 3=1 wrong! ^C use strict; sub is_correct { my ($q_num, $ans) = @_; my ($test_line, $file); open $file, "test.csv"; my @test = <$file>; close $file; foreach $test_line (@test) { $test_line =~ s/[\r\n]//; my @test_array = split(/,/,$test_line); if ($test_array[0] == $q_num && $test_array[2] == $ans) { return 1; } } return 0; } while (<STDIN>) { my @form_answer = split(/=/,$_); if (is_correct($form_answer[0], $form_answer[1])) { print "correct!\n"; } else { print "wrong!\n"; } }
枠を２重の線ていうことは、単にスタイルシートを入れるだけでよいのでしょうか？ 正しくhtml箇所を書き換えれば、500エラーにはならないと思います。 cgiでHTMLページを表示する記述上の注意点は、以下のサイトが参考になります。 http://www.aimix.jp/cgi/acchtmlhint.html 参考URL：http://www.aimix.jp/cgi/acchtmlhint.html
「順番がバラバラ」とはどういう意味でしょうか? 「データベース」において, 普通「データの順序」は意味を持ちません. 必要なら「データの順序を表すもの」も一緒に入れてください.
お気付きのとおり、 <input type="reset" ...> は入力欄内容をロード時点の戻すのが本来の機能です。 ロード時点で何かが入っていた入力欄をクリアするにはJavaScriptでプログラミングする必要があります。 プログラミングなので、どこかに 「type="clear"」と書けば済む様な簡単なものではありません。 例えばクリアしたいのが<input type="text" ...>であれば、参考URLの element.value を使用して、それに空文字列を代入すれば良いでしょう。 element をどう取得するかがキモですが、クリアしたい inputタグに id を付けておいて document.getElementById() するのが万能で簡潔です。 いずれにせよ、JavaScript でDOM操作するための勉強が不可欠です。 参考URL：http://javascriptist.net/ref/element.value.html
こちらで試してみたのですが、 ディレクトリ以外のファイルが一覧で取得できました。 やっている事は、取得した文字列の最初の一文字目が どの文字かを判別して配列に格納している訳ですが、 以下のようにやってみても結果は変わらないでしょうか？ my @dir = grep /^\-/, $ftp->dir; # ←　フォルダ一覧をdirコマンドで取得 または my @dir = grep /^[^d]/, $ftp->dir; # ←　フォルダ一覧をdirコマンドで取得（d以外とマッチ）
「１回の正規表現＋置換」という制限がなければ、質問者さんも書いておられるように 1 while s/(-aaa.*) -aaa/$1/; これが分かりやすくていいと思います。 Perl 5.10以上なら、 1 while s/-aaa.*\K -aaa//; という手もありでしょうか。 正規表現だけという条件ならば、以下はいかがでしょうか？ s/((^.*?-aaa|\G).*?)( -aaa)?/$1/g; 正規表現はあまり得意でないので、ややこしくしているだけかもしれませんが。 とりあえず、以下の条件はパスしています。 my @strings = ( "-bbb -aaa -ccc -aaa -ddd -eee -aaa -fff", "-bbb -aaa -ccc -ddd -eee -fff", "-aaa -ccc -aaa -ddd -eee -aaa -fff", "-aaa -ccc -ddd -eee -fff", ); for (@strings) { s/((^.*?-aaa|\G).*?)( -aaa)?/$1/g; } use Data::Dumper; print Dumper \@strings;
今までに出てきたキーワードを変数に記録しておけば、 いきなり「既出キーワードのある行は出力しない」という処理ができます。 ---ここから--- my $file = "text"; open( my $fh, "<", $file ) or die "Cannot open $file: $!"; my @keywords; # 今までに出現したキーワードを記録する配列変数 #ファイルの各行について処理 while (<$fh>) { my $lineheader = (split)[1]; my $found = 0; #既出キーワードが含まれるかどうかをチェック foreach my $keyword ( @keywords ) { if ($lineheader =~ /\Q$keyword\E/) { #既出の場合、フラグを立ててチェックループ脱出 $found = 1; last; } } if (!$found) { #既出キーワードのない行は出力 print; #既出キーワードに項目追加 push(@keywords, $lineheader); } } ---ここまで---
$sam=~s/^<br>$//gm; $sam=~s/\n{2,}/\n/g; １回で出来ませんでした。m(_ _)m BBSなどの投稿データの場合、私は改行を<br>に変換するときに連続する改行を１まとめにするようにしています。
移植が簡単かどうかはともかく， 要は，.NETのフレームワークとかWSHを使えば 正規表現を含めた文字列操作はそんなに困りません． ＃実際，業務で16ビット版Winの時代のsed+awkのフィルタのスクリプト ＃WSHに書き直したけど， ＃正規表現の書き方の流儀が違うくらいでとくにははまらなかった ＃ついでにIEを呼び出して，コマンドラインオプションを ＃GUIにしてみたりもした． また，.NETの正規表現では Perlよりもある意味進んでいる部分もあったりします. ＃.NETの正規表現は「可変長の戻り読み」をサポートしてるが ＃Perlはしてないとか・・相当マニアックな領域ですけどね ＃＃ただし，Perl5.10の\Kを使えば「可変長の肯定戻り読み」は可 フリーでWindowsに最初から入ってるものを使うなら VBScriptかJScriptですか. これはWSHがベースですけども思った以上に使えます. VBScriptはVisual Basicの簡易版って感じで JScriptは言語としてはJavaScriptです. ただしWSHってものそのものに もうMSは力をいれてない感がありありですので 将来性・発展性はまずなさそうです(^^; けどWin98以降なら何も準備なしでうごくので VBやJavaScriptが書けるなら ライブラリリファレンスとサンプルさえ見れば すぐ書けて便利です． もう一個，Vistaまでは 追加インストールしないといけないけど Power Shellってのがあります. Server2008/Win7では標準で入っているようです． これはばりばり .NET でものすごくUNIX的な動きを Windowsの枠組みでやらかしてます． UNIXのShellの進化版的な面があって 機能的には十分すぎて，GUIまで作れるんですけども いかんせんマイナーで情報源がそれほど多くないです． あとは，＃1さんのいうところの「PAR」 PerlでEXEを作ってしまうものですが， これは私自身は成功してません(^-^;;; バージョンとかの組合せとかがあるのかもしれませんが 追いかけてません
「デコード」という用語をどういう意味で使用されてますか？ 的はずれの回答をしてもまずいので、教えてくださいな。 # Encodeモジュールの decode() 相当の処理を自分で書きたいと言う意味なら、できないと思いますが。
use sigtrap; じゃないですよね……検索したら普通に出てくるし……
訂正です。 $str='これ|から|は|カボチャ|や|人参|、|白菜|など|の|野菜|が|旬|を|迎え|る|。'; ($word=$str)=~s/.*?\|([^\|]+)\|(や|、|など\|の|が.*)/$1,/g; print $word;
client0[1-35-7] や client0[13-69] にも対応できるよう少し修正しました。これで、server0[123] も含めて展開できると思います。 use strict; my $reg_str = 'client0[1-35-7]'; my $head = substr $reg_str, 0, index($reg_str, '['); my ($num) = $reg_str =~ /\[([\d-]+)\]/; # /\[(\d+)\]/ から /\[([\d-]+)\]/ に変更 $num =~ s/(\d)-(\d)/join('', $1 .. $2)/eg; # この行を追加 my @num = split //, $num; my @result; foreach my $i (@num) { push @result, "$head$i"; } print join(',', @result), "\n"; 次のプログラムは、上のプログラムを修正して複数の文字クラスでも展開できるようにしたものです。 質問に出てきた例は、すべて展開できると思います。 use strict; my @reg_str = ('server0[123]', 'client0[1-35-7]', 'client0[13-69]', 'client[1-3][0-9]'); my (@work, @result); foreach my $reg_str (@reg_str) { print "$reg_str\n"; my $head = substr($reg_str, 0, index($reg_str, '[')); my @num = map { s/(\d)-(\d)/join('', $1 .. $2)/eg; [split //] } $reg_str =~ /\[([\d-]+)\]/g; @result = (); comb(@num); print join(',', map { $head . $_ } @result), "\n\n"; } sub comb { my $ref = shift; foreach my $i (@$ref) { push @work, $i; unless (@_) { push @result, join('', @work); } else { comb(@_); } pop @work; } }
大量に処理するとPHPのほうが軽いかも。 速度を必要とするなら、どちらもモジュールとして実行させること。 いずれかがモジュールになってなければ、なっているほうを使う。 その代わり、プロセスが増大するので負荷は増える。 ＞負荷がかからないで早く表示 　負荷と速度は、必ずしも連動しない。
selenium は使ったことないのですが、元のHTML はテキストエリアの文字列 をGET メソッドで URL エンコードして送ろうとしていますか？ 可能であれば、POST メソッドに変えたほうが良いかもしれません。 (URL の長さの上限はブラウザごと、サーバごとにまちまちなので)
同じ名前を使えばOKです。 print hidden( -name => 'sample', -value => $a ); print hidden( -name => 'sample', -value => $b ); これで、sampleというパラメータで2つ値がとれます。
うまく行かないことがあるかも知れませんが ... 。 $str =~ s|(<BR>)(\w+)|$1 . join('', map { $_ . '<wbr>' } split //, $2)|ieg;
基本的には自分で作るほうが希望のものができますが・・掲示板は難しくない 　私がサイトを作り始めた当初よく利用させていただいたところですが CGI RESCUE - ネットサーフレスキューＷｅｂ裏技 ( http://www.rescue.ne.jp/ ) 　にある「電子掲示板」の中から 　電子掲示板機能比較表 ( http://www.rescue.ne.jp/bbs.html ) 　　万能掲示板/簡易BBSのいくつかから選択してみたら？？
eval の機能を誤解されています。 eval $str; を $str = eval $str; に変えてください。 理解できたなら、もっと良い書き方に直す事もできますね。 my $result = eval $ARGV[0]; とか。
>@dat(1,2,3,4,5,6,7,8,9,10); は >@dat=(1,2,3,4,5,6,7,8,9,10); の間違いだとして。 例題としては、ちょっとどうかな、って思いますね ・配列の最初の添字は$[で変えられるので、0とは限らない(通常は0ですが) ・配列@datの大きさを10と決め付けている ・配列@datが1から10の並んだ数なので、(少なくとも、質問者さんは)添字と混乱してしまう
＞最大最小・平均を求めたいです。 前の質問にコピペで動くものを貼ってます。 標準偏差も欲しければ、必要なモジュールをインストールしてsakusaker7さんのスクリプトをコピペして下さい。 モジュールのインストール方法は、LinuxならCPAN、WindowsのActivePerlならppmでググればすぐ分かります。
perlのパスが違うのでは？ #!/Perl/bin/perl をActivePerlを標準で C:\Perl\ にインストールした場合は #!C:/Perl/bin/perl に変更してみてください
>＞use Statistics::Basic qw(:all); >＞use List::Util qw(min max); > >＞open my $fh, '<', 'A' or die; >＞my @data = <$fh>; >＞close $fh; >say >のところがよく分かりません。 use Statistics::Basic qw(:all); use List::Util qw(min max); というのは、それぞれモジュールを使うための宣言です。 qw(:all) というのはaverage などのモジュールにある関数をすべて使えるようにするためのものです。 qw(min max) というのはそのモジュールの min と max という関数だけ使います という宣言です。 open my $fh, '<', 'A' or die; my @data = <$fh>; close $fh; というのは三行まとめて、 'A' という名前のファイルをオープンして(失敗したら実行を終了)、 @data という配列変数に丸ごと読み込んで、 ファイルをクローズするということをしています。 say というのは pirnt とほぼ同じですが、尻尾に改行を自動的につけてくれます。 >say
ApacheとIISで共通している部分、Apache独自の部分の切り分けや、 Apache独自の記述がされているところはIISのやり方に 自分で置き換えることができるほど、ApacheとIISとの機能差異や 設定方法の違いについて習熟されているのであれば、 IISでも問題ないでしょうが、そうでないのであればApacheを インストールされる方が余計な問題を考えなくてもよいので 学習しやすいと思います。
12文字以上じゃなくて12文字だけというのはわかりませんが、 改行がなくて全部が一行にまとまってしまうというのは、 print NEWFILE @results; のように書くと、確かに @results の要素をすべて出力はするのですが、 一要素ごとに改行を自動でつけるということはしません。 自分でつけて回らなければいけないということで、 print NEWFILE join("\n", @results); のようにしてみてください。
#1さんのおっしゃるとおりです。 Perlは汎用的なデータ処理言語ですので別にHTMLなどとは深い結びつきはありません。 また、HTML関連の処理をPerlでやるのは今時非効率かと思われます。 そのあたりの処理をするならばPerlよりもPHPの方がよいでしょう。 よってPerlを勉強する前にHTML関連の勉強をする必要性は全くありません。 Perlを勉強したあとにHTMLなどの知識を得るというのは有用ですが、これも必須とはいえません。 もしPerl周辺にある別のデータ処理言語に興味があるならばawkやsedについて勉強しておくと更に効果的です。 Perl、awk、sedをそれなりに扱えるようになるとかなり便利なことがいっぱいあるはずです。
my @file = <FILE>; の代わりにread関数を使用してみてはどうでしょうか？
もうhttp://okwave.jp/qa5526745.htmlに移ってこっちは放置かもしれませんが。 わたしが#2で提示したスクリプトでは、 undef $/; という行があるのに注意してください。 これによって、「ファイルの丸呑み」ができるようになり my $content = <$fh>; で、$contentにファイルの内容が丸々入ります。 #通常は一行だけ 今回はs修飾子もm修飾子もつける必要がないので(つけても構いませんが) $content =~ s/\n{3}/\n[SAMPLE]\n/g; で望みの置換をやってくれるはずです。 もう一つの質問も基本は同じですね。
条件の後出しは(スクリプト書く上で)非常に嫌われるので、最初に出来る限り出しておいたほうがいいですよ。 use strict; use warnings; use File::Copy; my $dir = "C:/foldername"; my @langs = qw/en de fr/; foreach my $lang (@langs) { while (my $file = glob "$dir/$lang/*.txt") { my $rename = $file; $rename =~ s/_jp\.txt$/_$lang.txt/; move ($file, $rename); } }
単純にスクリプトの問題では？ 改行コードは<br>ではありません。 UNIXは、\x0A Windows(DOS)では \x0D\x0A Macでは \x0D 　です。利用者やサーバーのＯＳによって異なりますので、これらを統一する必要があります。 それ以外の制御文字も除去する必要があります。
Perlならやはり正規表現でしょう。 my @primes; for my $num ( 2..200 ) { push @primes, $num if (1 x $num) !~ /^(11+)\1+$/; } print join q{ }, @primes;
＞Can't open perl script "hello.pl": No such file or directory ＞（和訳：開いたperlは、「hello.pl」のスクリプトを書くことができません：そのようなファイルまたはディレクトリ） 　訳違います。 　"hellp.pl"というような名前のPerlのスクリプト(台本)は、みつかりません。 　どこに？ 　カレントディレクトリに 　カレントディレクトリとは？ 　「現在の」コンピューターでは今自分がいる所。 　コマンドプロンプトを起動すると C:\Documents and Settings\[ユーザー名]> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^今は、ここがカレントディレクトリ 　その証拠に。カレントディレクトリにあるファイルやホルダを表示するdirコマンドを打ち込むと 2009/10/14 08:23 <DIR> . 2009/10/14 08:23 <DIR> .. 以下省略 2009/09/02 08:44 <DIR> スタート メニュー 2009/12/12 19:40 <DIR> デスクトップ 　と表示され、hello.plがない。 　
最近の CGIモジュールは、set_die_handler というのがあるらしいが。。。 use CGI; use POSIX qw(strftime); use Carp; BEGIN { *CORE::GLOBAL::die = \&croak; $SIG{__DIE__} = sub { my $error = shift; my $contents = strftime( '%Y-%m-%d %H:%M:%S', localtime ) . "\n" . $ENV{REMOTE_ADDR} . "\n" . $ENV{SCRIPT_NAME} . "\n" . $error . "\n"; print "Content-type: text/plain; charset=utf-8\n\n"; print $contents; my $file = '/tmp/cgi_error.txt'; open my $fh, '>>', $file; print $fh $contents; close $fh; } } die "Hello Die World\n";
Perl 5.10から正規表現に(?PARNO)という再帰する構文が加わりました。 その説明文に、まさに括弧対応の正規表現の例文があります。 http://fleur.hio.jp/perldoc/mix/pod/perl5100delt … これをそのまま流用すれば、以下のようなコードが書けます。 my @expressions = qw{ (X1+X2)+X3 ((X1+X2)+X3 ((X1+X2))+X3 )(X1+X2)+X3 }; for my $exp (@expressions) { print "$exp -> ", has_balanced_brackets($exp) ? 'OK' : 'NG', "\n"; } sub has_balanced_brackets { my $exp = shift; my $re = qr{ ^[^()]* # start of line ( # start capture buffer 1 \( # match an opening round bracket (?: # match one of: (?> # don't backtrack over the inside of this group [^()]+ # one or more non round brackets ) # end non backtracking group | # ... or ... (?1) # recurse to bracket 1 and try it again )* # 0 or more times. \) # match a closing round bracket ) # end capture buffer one }x; $exp =~ $re ? 1 : return; } あるいは、文字列の先頭から1文字ずつ括弧を探し、開き括弧と閉じ括弧の数が同じかをチェックする方法はどうでしょうか？ とりあえず、質問者さん提示の例ではうまく動作しているようです。 sub has_balanced_brackets { my $exp = shift; my $bracket_count = 0; for my $pos ( 0 .. length($exp)-1 ) { my $char = substr $exp, $pos, 1; if ( $char eq '(' ) { $bracket_count++ } elsif ( $char eq ')' ) { $bracket_count-- } last if $bracket_count < 0; } $bracket_count == 0 ? 1 : return; }
Solaris 10 の詳細なバージョンおよびパッチの適用状況はどうなっていますか? なお、私の手元の環境では特に問題なく取得できましたよ。 以下、環境の情報です。 % cat /etc/release Solaris 10 8/07 s10x_u4wos_12b X86 Copyright 2007 Sun Microsystems, Inc. All Rights Reserved. Use is subject to license terms. Assembled 16 August 2007 % uname -a SunOS xxxxxxx 5.10 Generic_141445-09 i86pc i386 i86pc % /usr/bin/perl -V Summary of my perl5 (revision 5 version 8 subversion 4) configuration: Platform: osname=solaris, osvers=2.10, archname=i86pc-solaris-64int uname='sunos localhost 5.10 i86pc i386 i86pc' config_args='' hint=recommended, useposix=true, d_sigaction=define usethreads=undef use5005threads=undef useithreads=undef usemultiplicity=undef useperlio=define d_sfio=undef uselargefiles=define usesocks=undef use64bitint=define use64bitall=undef uselongdouble=undef usemymalloc=n, bincompat5005=undef Compiler: cc='gcc', ccflags ='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_TS_ERRNO', optimize='-O2 -fno-strict-aliasing', cppflags='' ccversion='GNU gcc', gccversion='', gccosandvers='' intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678 d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12 ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8 alignbytes=4, prototype=define Linker and Libraries: ld='gcc', ldflags ='' libpth=/lib /usr/lib /usr/ccs/lib libs=-lsocket -lnsl -ldl -lm -lc perllibs=-lsocket -lnsl -ldl -lm -lc libc=/lib/libc.so, so=so, useshrplib=true, libperl=libperl.so gnulibc_version='' Dynamic Linking: dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-R /usr/perl5/5.8.4/lib/i86pc-solaris-64int/CORE' cccdlflags='-fPIC', lddlflags='-G' Characteristics of this binary (from libperl): Compile-time options: USE_64_BIT_INT USE_LARGE_FILES Locally applied patches: 22667 The optree builder was looping when constructing the ops ... 22715 Upgrade to FileCache 1.04 22733 Missing copyright in the README. 22746 fix a coredump caused by rv2gv not fully converting a PV ... 22755 Fix 29149 - another UTF8 cache bug hit by substr. 22774 [perl #28938] split could leave an array without ... 22775 [perl #29127] scalar delete of empty slice returned garbage 22776 [perl #28986] perl -e "open m" crashes Perl 22777 add test for change #22776 ("open m" crashes Perl) 22778 add test for change #22746 ([perl #29102] Crash on assign ... 22781 [perl #29340] Bizarre copy of ARRAY make sure a pad op's ... 22796 [perl #29346] Double warning for int(undef) and abs(undef) ... 22818 BOM-marked and (BOMless) UTF-16 scripts not working 22823 [perl #29581] glob() misses a lot of matches 22827 Smoke [5.9.2] 22818 FAIL(F) MSWin32 WinXP/.Net SP1 (x86/1 cpu) 22830 [perl #29637] Thread creation time is hypersensitive 22831 improve hashing algorithm for ptr tables in perl_clone: ... 22839 [perl #29790] Optimization busted: '@a = "b", sort @a' ... 22850 [PATCH] 'perl -v' fails if local_patches contains code snippets 22852 TEST needs to ignore SCM files 22886 Pod::Find should ignore SCM files and dirs 22888 Remove redundant %SIG assignments from FileCache 23006 [perl #30509] use encoding and "eq" cause memory leak 23074 Segfault using HTML::Entities 23106 Numeric comparison operators mustn't compare addresses of ... 23320 [perl #30066] Memory leak in nested shared data structures ... 23321 [perl #31459] Bug in read() 27722 perlio.c breaks on Solaris/gcc when > 256 FDs are available SPRINTF0 - fixes for sprintf formatting issues - CVE-2005-3962 6663288 Upgrade to CGI.pm 3.33 REGEXP0 - fix for UTF-8 recoding in regexps - CVE-2007-5116 6758953 Perl Sys::Syslog can log messages with wrong severity Built under solaris Compiled at May 20 2009 22:16:00 @INC: /usr/perl5/5.8.4/lib/i86pc-solaris-64int /usr/perl5/5.8.4/lib /usr/perl5/site_perl/5.8.4/i86pc-solaris-64int /usr/perl5/site_perl/5.8.4 /usr/perl5/site_perl /usr/perl5/vendor_perl/5.8.4/i86pc-solaris-64int /usr/perl5/vendor_perl/5.8.4 /usr/perl5/vendor_perl
「bribes.org:80 に接続できない，とエラーが返されます。」 なら、ppm は bribes.org:80 に接続にいってるってことだよね。 ちなみに Vista で、環境変数は設定してある？ http://www.ryuzee.com/contents/blog/600
> eval { > my $imap = Mail::IMAPClient->new( > Server => $hostname, > User => $username, > Password => $password, > Timeout => 5, > ) or die "1 \n"; > my $folders = $imap->folders or die "2 \n"; > $imap->logout(); > > # ); > }; No2 です。「全体を」と書いたので、誤解を与えたかもしれません。「質問に書かれていたコード全体」という 意味です。上のコードの場合、or die "1 \n"; の次の行で eval を終了する必要があります。new() に失敗した場合は、 次の２行の $imap->folders と $imap->logout() を実行してはならないからです。また、new() に失敗した場合の エラー処理は、直後に行う必要があります。 my $imap; eval { $imap = Mail::IMAPClient->new( Server => $hostname, User => $username, Password => $password, Timeout => 5, ) or die "1 \n"; }; if ($@) { open (FILE, ">>$logfile") or die "$!"; $data = localtime; print FILE "$data FAILURE:$hostname port:143(imap4) failed. \n"; close (FILE); } else { my $folders = $imap->folders or die "2 \n"; $imap->logout(); ... もう１つですが、die "1 \n" という書き方は、何ら有益な情報を含んでいず、あまり適切とはいえません。 失敗の原因や失敗した行番号が必要なければ、eval や die を使わずに unless ($imap) { エラー処理 } とすることもできます。
ですね。 インストール先はどこですか？ インストール先に、\bin\perlというフォルダがあるはず。もしそこにperl5.01.exeかperl.exeがあれば、そこにpathが通っていないのかも。 　コマンドプロンプトから、そのフォルダに移動して、同じようにperl -v としたらどうなりますか？ 　なければ、いったんアンインストールして再挑戦、通常はpathが通るよう環境変数も変わるはずです。 　インストール先を、インストール先のドライブ:\usr\local\binにしてみては？ 　
たぶん、質問者さんは pack の意味を取り違えているようです。 あっているかわかんないけど、 my $start = 0x97a1; my $end = 0x9edf; my $file = shift || 'tmp.txt'; open my $fh, '>', $file or die "$!:$file"; binmode $fh; for my $num ( $start .. $end ) { my $bin = pack 'n', $num + 1; print $fh $bin; } close $fh or die "$!:$file"; エンディアンが逆なら、 my $bin = pack 'v', $num + 1; として下さい。
> 人工無能のロイディは形態素解析器なしで名詞（句）を取り出しています。 なぜそう思ったのかがよくわかりませんが、当然ながら形態素解析をしてます。ソース公開されてるので見ればわかります。 名詞などを取り出す（文を分解する）ことを形態素解析というので、形態素解析器なしで名詞（句）を取り出すというのは文章として変だと思います。 ChaSenや、Mecabなどの形態素解析ツールを使わずに自前で形態素解析できるかという意味で書いてあるのであれば、ちょっと勉強すればそれなりのものはできると思います。 完全を求めると難易度が跳ね上がりますが。
何かおかしい。 cygwin perl => NG (Encode とか使ってもダメ) centos perl => OK 一旦、テンポラリファイルにコピーすればとりあえず表示はできる。。。 --- use Tk; use Tk::JPEG; use File::Copy qw(copy); use File::Temp qw(tempfile); use constant TMP_DIR => './'; my $file = shift || die "Usage: $0 file"; if ( !-r $file ) { die "Can't read $file"; } my ( $fh, $tmp_file ) = tempfile( 'tmpfile_XXXX', DIR => TMP_DIR ); close $fh or die "$!:$file"; copy( $file, $tmp_file ) or die "$!:copy $file to $tmp_file"; my $mw = MainWindow->new; my $canvas = $mw->Canvas()->pack(); my $ph = $mw->Photo( -format => 'jpeg', -file => $tmp_file ); unlink $tmp_file; $canvas->createImage( 64, 64, -image => $ph ); MainLoop;
意味不明 1 a 1 1 b 2 1 c 3 2 d 4 2 e 5 2 f 6 2 g 7 3 h 8 3 i 9 3 j 10 3 k 11 3 l 12 4 m 13 4 n 14 なのか 1 a 1 1 b 2 1 c 3 2 d 1 2 e 2 2 f 3 2 g 4 3 h 1 3 i 2 3 j 3 3 k 4 3 l 5 4 m 1 4 n 2
他のパスにインストールすればよい。 /usr/local/bin が使用済みなら /usr/local/perl4/bin にインストールすればよい
＞vistaを使用 ＞ApacheとActivePerlだけでいいのでしょうか？ から、Vistaのローカル環境でCGIの製作とテストが目的だと推察します。PerlだけならApacheいらない。 　その目的なら、次の手順がお勧め 1) activePerlは、/usr/local/bin にインストール 　別途ドライブが用意できるか、パーテショニングツールで独立したドライブが良い--たとえばE:\usr\local\bin 2) apacheは、/usr/localにインストール 　---たとえば、E:\usr\local 3) これはテストのためにあったほうが良いCYGWINをインストールするためです。 　Cygwinは、ルートにインストールする。(Vistaでは互換モードでインストール) 　---たとえば、E: これで、UNIX系のサーバーとほとんど同じ環境でテストできます。 CygwinのBashプロンプトから /home$ perl test.cgi 　とかね。 添付画像はCygwinのBashからテストしているところ・・
厳密にいえば, Unix にしろ Windows にしろ「(ディレクトリなどを含む) ファイル名」以外で文字コードを意識しなければならない場面はないはずです (特に Unix におけるファイルの内容は「単なるバイト列」でしかない). なので, #3 の「システム文字コード」というのも「システム内部」の話ではなく「各種ユーティリティが (デフォルトとして) 持っている文字コード」を超えた意味があるわけではありません. なので, 「ファイル名」や「ユーティリティが扱う」文字コードは意識しなければなりませんが, 本質的には「データの内容」について制限があるわけではありません.
アセンブラやCはメモリやCPUの動きを追える人にとっては簡単だと思います。 それさえできれば高級言語(というよりLightweight Language)よりも覚えること自体は少ないかと。 あと最近はPerlはPHPなどに比べて難しいと言われることが多いようです...
＞ 連続している<作者>を同上★に変えたい というのだったら、直前に出現した<作者>の行を変数(例えば変数名$prev_composer)に記憶しておき、一致したら同上★を出力すればよいかと。こんな感じ： my $prev_composer = ''; while ( <> ){ if ( /^<作者>/ ){ if ( $prev_composer eq $_ ){ $_ = "<作者> 同上★\n"; } else { $prev_composer = $_; } } print; } 文字コードや改行コードについては適宜お使いの環境に読み換えてください。
jcode.pl は他のPerlスプリプトの中でrequireして使うものです。 requireがファイルを探す場所は 組み込み変数の@INCで確認できます。 特に指定しない限り、「.」即ちカレントディレクトリが含まれますので、呼び出し元のスクリプトと同じディレクトリに置けばまず間違いありません。 #!が違う件 1)移動前のサーバーでは /usr/bin の下に perl があったが、移動先のサーバーでは /usr/local/bin の下にある(でも、これだと動かないかも) →ついでに修正しておきましょう 2) /usr/local/bin の下に perl があるが、 /usr/bin/perl にリンクが貼られてるのでどちらでもよい 3) /usr/local/bin の下にも /usr/bin の下にもそれぞれ別の perl がある。バージョンとかが違っているかも 4)#!/usr/bin/perl となっている ファイルは、別のCGIスクリプトの中で require とかされているので、 #!に意味がない などが考えられます
「引数は3でお願いします。」の意味は不明ですが, 再帰版では Perl だろうと Java だろうと C だろうと大して違いはありません. だから「Perl での解説」は特に必要ではないでしょうね. 非再帰版なら (うまくやれば) 簡単になりますが.
以前は正常にメールが届いていたのならCGIが原因じゃないと思います。 迷惑メールのブラックリストに指定されたのではないでしょうか？ 結構どんぶり勘定でIPのここからここまでみたいな登録がされますのでチェックしてみてください。 国内はここ「http://www.rbl.jp/ckdb/」 SpamAssasinなどのサーバ側ブロックツールで利用されるDBサイトは海外にも有りますので検索などで調べてみてください。
open(FH,"a.txt"); @txt=<FH>; close FH; $txt[1]=~s/(第(\d+)回.+)/'第'.($2+1).'回 '.$title[0]."\n".$1/e; open(FH,">a.txt"); print FH @txt; close FH;
たぶん「人に聞くよりドキュメントを探した方が早い」部類ではあるのだが ・perl を起動するときに -I オプションをつける ・環境変数 PERL5LIB もしくは PERLLIB を適切に設定する ・BEGIN { push @INC, '/home/lib'; } を use の前に入れる くらいか?
No.1さんのMIME-B Encodingですが、自分は最近のPerlしか触ったことがないので、 Jcodeは知らなくて、Encodeでしています。 Subject => jcode("お問い合わせの受付")->jis, 　　　　↓　　　　↓ use Encode; Subject => encode("MIME-Header-ISO_2022_JP", "お問い合わせの受付"), No.1さんご紹介のCPANモジュールとの差異はわかりませんが＾＾； あと、MIME-Versionの指定とかは入れなくてもいいのかしら "MIME-Version" => "1.0",
UTF-16 では全ての文字が 16ビットで表されます. つまり「/」が例えば "\0/" のようになっているわけです. スクリプトの文字コードがどうなっているか知りませんが, そのために最初の if でマッチしていないんじゃないでしょうか. 今どきの perl では内部的に全て UTF-8 を使いますから, それ以外の文字コードのファイルを予定するときにはきちんとエンコーディングを指定しないとダメです. 「shift-jis にして動いた」というのは, たまたま英語なのでシフトJIS でも UTF-8 でも同じになっていたということだと思います.
これは意外と難しい、Perlプログラマを悩ませる難題。 ただ、メールソフトによって作成されるものなので、手書きのHTMLよりは楽でしょう。 　参考になるサイトをあげておきます。これで該当するものを削除すればよいかと 【参考サイト】 Perlメモ 　 http://www.din.or.jp/~ohzaki/perl.htm#HTML_Tag そして、 s/$tag_regex//gs;
「ローカルサーバー」って、サーバーとして使用している手元のパソコン/ワークステーションの事ですか？ なら、sendmail という名前のソフトウェアが動いていて、接続ポートがブロック/拒否されずにインターネット領域まで届けばOKでしょう。 結論の可否は簡単には決まりません。 いろんな所にファイアウォールや OP25B があったりして、「インターネット領域まで届くか」はそんなに簡単には判らないかも知れません。 制限の回避法があっても、技術力が無いと回避不能かも知れません。 「こうすればどんな場合にもOK」なんて言う虎の巻はありません。 ご自身の技術力で勝負してください。 これからsendmailをインストールするなら、下記とかで。 http://www.google.co.jp/search?q=sendmail+%E3%82 …
$|= は、現在選択されているファイルハンドル(デフォルトで STDOUT)に対するバッファリングの設定ですので、それだけではだめです。 一旦、OUT を select してからバッファリング設定するようにします。 その後で元にselectし直さないと、普通の print が使えなくなりますから、 ---ここから my $oldfh = select(OUT); $| = 1; select($oldfh); ---ここまで といったコードを、open の後に入れてみてください。
#!/usr/bin/perl use strict; use warnings; use feature 'say'; my %counts; while (my $line = <DATA>) { chomp $line; my @chars = split q{}, $line; foreach my $char (@chars) { $counts{$char} += 1; } } foreach my $key (keys %counts) { say "$key $counts{$key}"; } __END__ ATGCATGCATGCATGCATGCATGCAT 実行結果: A 7 T 7 C 6 G 6 A→T→G→C って順序はどう決まってるんだろう? キメうちでいいんだろうか。
No.1さん、No.2さんの回答もそのとおりですが、もうひとつ。 Perl のメソッドでは、$_[0] はオブジェクトと決まっています。 これを格納する変数名を $self に統一するのはソースを見易くする効果があります。 加えて、先頭に my $self = shift; と書く様に統一すれば、さらに見易くなります。 # 動かないソースコードを睨んでいる時、$self の格納が正しくできている事が一目で判るのは、重大なメリットです。
> AddType application/x-httpd-php .html が効いてないみたいですが アップロードの際にバイナリモードになっていませんでしょうか？ FTPの設定でアスキーモードに強制的にアップするように設定するか、使ってはいないと思いますがコマンドライン版のFTPなら転送前に「ascii」でアスキーモードにしてみて下さい。 また、自分のレンタルしているサーバのドキュメントにはだいたい出来ることは書かれていますので参考URLをみて「◎ 特殊なMIME-TYPESを設定したい 」の項目を参照しましょう。 参考URL：http://support.sakura.ad.jp/support/manual/rs/te …
.htaccess ファイルに <Files search> ForceType cgi-script </Files> て書いて、search.pl を拡張子なしの searchて名前にしても行けるかも
たんに my $lineheader = ''; while (<>) { if (/^FFF/) { $lineheader = (split)[1]; } else { $_ = "$lineheader $_"; } print; } とかじゃダメなんだっけ? これでいいなら悩むほどでもないような気が....
文字化けは use Encode; my $bodylast = decode( 'ISO_2022_JP', $body->as_string); とかかなぁ my %formdata = ('perl' => 'rakuda', 'comment'=>"$bodylast",'upfile'=>"$uploadFile"); の$uploadFile は、ディスク上のファイルでないとだめかも？ ファイルは、CGIのローカルに一旦保存できるなら my $pop_dir = './pop'; $parser->output_to_core(0); if ( !-d $pop_dir ) { mkdir $pop_dir or die "mkdir $pop_dir:$!"; } $parser->output_dir($pop_dir) or die "$pop_dir:$!"; で./popにファイルができると思う。 直接デコードして送る方法はわかりません。
特段、難しいPerlの構文を用いてるわけではないので、検索方法をお教えします。 my %japanese_of = ( AAA => '甲', BBB => '乙', CCC => '丙' ); ↑これは、ハッシュ変数の宣言と、それへの代入の基本構文です。 「perl ハッシュ」で検索すれば説明サイトがヒットすると思います。 $sentence =~ /.*?([a-zA-Z]+) of claim ([1-9][0-9]?), wherein said ([a-zA-Z]+) (?:is|are) ([a-zA-Z]+)\./; $japanese = "前記$japanese_of{$3}が、$japanese_of{$4}である、請求項$2に記載の$japanese_of{$1}"; ↑これは、正規表現と後方参照を利用しています。 「perl 正規表現 後方参照」で検索すれば説明サイトがヒットすると思います。 あと、「perl 文字列 変数展開」を検索すれば、下のコードの意味がより分かる と思います。 それでも、分からないところがあれば指摘してください。
seek関数を使ってファイルポインタを進めればいいと思います。 あと、大きな数値にはアンダースコアを入れれば見やすくなります。 read $if,$buf,1000000000; 　　　↓　　　↓変更 seek $if, 1_000_000_000, 0;
そんな難しい話でもないので、Perlを使えるなら自分で書いてみたら如何でしょう。SocketでHTML内に記述されたリソースを片っ端から取得してローカルに保存するだけです。 フリーソフトを使うにしてもUAで弾かれたりパスがスクリプトで記述されていたり可変だったりすると対応できないケースが多いので、作れるなら自分で作った方が何かと汎用が効きますよ。
Perlでは、<=のような比較演算子は結合しないので、 A <= B <= C のような書き方はできないのだと思います。 (A <= B) <= C と書くとエラーは出なくなりますが、 A <= Bの結果(真または偽)とCを<=で比較したいなんて事は通常無いと思います。
エラー処理はオリジナルの&error()を使ったほうがよいかもしれないけど use File::Spec; my $dir = './log'; opendir my $dh, $dir or die "$dir:$!"; for ( readdir $dh ) { my $file = File::Spec->catfile( $dir, $_ ); if ( !-f $file or !-r $file) { print "$file is not file or readable\n"; next; } print "\n--- $file\n"; open my $fh, '<', $file or die "$file:$!"; while ( defined( my $line = <$fh> ) ) { # 処理 # print $line; # my ($no,$dat,$nam,$eml,$sub,$com,$url,$hos) = split /<>/, $line; # ... } close $fh or die "$file:$!"; } closedir $dh or die "$dir:$!";
えぇと, 単純に s/#/A/; ではコメント扱いされないはずです. 実際にはどのように書いているのでしょうか? いずれにしても \ でエスケープできるはず. また, / 以外の記号を使ってもかまわないので, 例えば s!////!A!; とか s(////)[A]; のようにも書けます (ただし ? を使うとちょっと意味が違う: この辺は s/// 以外にも m// や tr///, y/// でも同じ).
その「データが引っ掛かる」というのは, 何を見てそう思えばいいんでしょうか? 例えば $param{query_price2} <= $datas[21] || $datas[22] <= $param{query_price1} でもいい? ちなみに「data」は複数形だったりします. 単数形は datum だけど, あんまり使われない.
> perlでできたCGIメールフォームをカスタマイズしていますが、テストをすると、自動返信されるメールに、結果が一部、2重に表示されてしまいます。 結果が一部、2重に表示されるとは、文が二回繰り返すということですか？単語が二回繰り返すということですか？ 提示されているコードにメール本文を整形している箇所が見当たらないのですが、HTML::Templateを使ってメール本文を作成しているのですか？ とりあえずメール送信処理に関わっている変数を全て調べればわかるのではないでしょうか。
懸念事項というのがよくわかりませんが(懸案事項?)、 そもそもインストールできないような気がします。 http://www.activestate.com/activeperl/ の System Requirements に General * Recommended 90MB hard disk space for typical install * Web browser for online help Windows * x86 or x64 architecture * Windows 2000 SP4 or later Cygwin のPerlというのも、Cygwin自体が1.7で 9x 系はサポート外ですし。
/<br(\s\/)?>/ でいかがでしょうか。
こんにちは >マクロもしくはPerlのプログラムで自動的に処理する方法がありますか？ 　Microsoft Excelのシート上のことなのですが、なぜマクロ？なぜPerl？なのでしょう？ 　関数で自動的に処理できますよ。 　Ｃ１列のセルに下記の式を入れてデータのあるセルの最後までコピーして下さい。 =IF(OR($A1=$B1,ISERROR(SEARCH("~?",ASC($A1)))<>TRUE,ISERROR(SEARCH("~?",ASC($B1)))<>TRUE),"×","") 　但し、添付画像の結果のように空欄同士であっても×マークが付いてしまいます。
Perlはまだまだ勉強中の者ですが、私の知っている知識を書きたいと思います。 既知のものがありましたら、ごめんなさい。 データの構造は、その後、どのような使い方をするかで決まると思いますので何 とも言えないのですが、現状で特に問題ないように見えます。 １．use strict; use warnings; No.1さんも書かれていますが、バグを未然に防いで（特にtypo）くれるので、 これは必須です。 ２．open関数 open関数で使うファイルハンドル変数は、質問者さんのようにINとしてしまうと、 グローバル変数となるので、レキシカル変数を使うほうがベターです。 また、エラーのときの処理も書いておいたほうがいいです。 エラーのトラップは、or die とするのがPerlの慣例のようです。 open my $in, 'list.txt' or die $!; モードを指定するときで、かつファイル名が変数の場合、脆弱性を排除できるの で3引数にしたほうがいいです（CGI等で使う場合ですが）。 3引数ならエンコーディングの指定もできます。 × open my $fh, "<$file" or die $!; ○ open my $fh, '<', $file or die $!; ○ open my $fh, '<:encoding(euc-jp)', $file or die $!; ３．for文 for文は、質問者さんが書かれているC風な書き方よりは、No.1さんが書かれてい るような書き方のほうが、よりPerlらしい感じがします。 for($i = 0; $i <= $#list; $i++){ 　　　↓　　　↓ for my $i ( 0..$#list ) { もちろん、C風に書いたほうがいい場合もあると思います。 ４、ファイルからの1行づつのデータ読み込み ファイルから読み込んだ1行データには、$lineという変数名をつけることが多い ようです。もちろん、もっと意味のある変数名にするほうがベターですが。 データを読み込んだら、改行除去のchompをするのを忘れずに。 下記のように、$_を利用する人もいますが、可読性が下がるので、ワンライナー や使い捨てスクリプト以外ではあまり使わないほういいとされているようです。 while ( <$in> ) { chomp #下のsplitの区切り正規表現のデフォルトが/\s+/なので、この場合は省略可 my @data = split; 　　　　・ 　　　　・ } 一例として、以下のように書いてみました。 use strict; use warnings; my @list = input(); output(@list); # デバッグでデータ階層の深い変数を見るときは、こうすると一覧表示してくれ # ます use Data::Dumper; print Dumper \@list; sub input { open my $in, 'data.txt' or die $!; my @list; while ( my $line = <$in> ) { chomp $line; my %hash; @hash{ qw(hoge fuga) } = split /,/, $line; push @list, \%hash; } close $in or die $!; return @list; } sub output { my @list = @_; # ちょっとややこしくなりましたが、hoge、fugaといった具体名が出ないように # 抽象化してみました for my $hash_ref (@list) { my @data_str = map "$_ = $hash_ref->{$_}", sort keys %$hash_ref; print join( q{, }, @data_str ), "\n"; } }
自分の web サイト内の CGI から自分の web サイトに接続しようとしているようにも思えるのですが？ レンタルサーバということなのでうまくいくかわかりませんが、 http://○○.××.△△.com/ を http://localhost/ (又は http://127.0.0.1) に変えてみては？
No.1です。 >（何個かの半角スペース）数字（何個かの半角スペース）数字改行 if( $x =~ /^\d+\s+(\d+)$/ )の部分を if( $x =~ /^\s+\d+\s+(\d+)$/ )とすればいいかと思います。
う～ん,「単語の格納形式がど～のこ～の」となると, 実際にどうなっているのかを吐かせた方がいいと思いますね. それも, (形からおそらく CGI かなんかでしょうから) 別途「それ用」のログファイルを作ってそっちに出力させる. で, 例えば open LOG, '>>', '/some/path/to/log.txt'; print LOG join(', ', map{ qq("$_") } @search_words), "\n"; close LOG; my %word_of = map {$_ => 0} @search_words ; のように出力させて, その結果をみる.
print (Encode::is_utf8(substr($text, 3, 3)) ? "substr is ".substr($text, 3, 3)." and is utf8\n" : "substr is ".substr($text, 3, 3)." and is no utf8\n"); これの動作ですが、まず、最初の substr($text, 3, 3) はis_utf8の引数となっ ているので、文字ベースの処理が行われ、UTF8フラグの立った文字列が返り値と なります。 したがって、Encode::is_utf8(substr($text, 3, 3) は真となります。 次に、"substr is ".substr($text, 3, 3)." and is utf8\n" が評価されますが、 この中で、substr($text, 3, 3)は引数の中で使われていないので、バイト列処理 が行われます。 なので、文字列切り出しの動作として、３オクテット目から３オクテットで「字」 を返すという動作は正しいです。 substr($text, 3, 3)が、引数の中で使われるように、ラッパー関数（return_str） をかませた以下を実行すれば、意図した通りの結果が出ると思います。 use strict; use warnings; use utf8; use bytes; use Encode; sub return_str { shift } my $text = '漢字ひらがなカタカナEnglish'; print Encode::is_utf8( substr($text, 3, 3) ) ? "substr is " . return_str( substr($text, 3, 3) ) . " and is utf8\n" : "substr is " . return_str( substr($text, 3, 3) ) . " and is no utf8\n"; __END__
以下で送信を試してみてください。 <html> <head> </head> <body> <form method="get"> <input type="text" name="x" value="z"> <input type="submit" name="submit" value="送信A"> <input type="submit" name="submit" value="送信B"> </form> </body> </html> type="submit"もnameを与えればvalueが送信されるのがわかると思います。 というわけでボタンのvalueで判別可能です。 （ただし、テキストフィールドでエンターキーを押されて送信された場合の扱いには注意が必要です）
「どうもうまくいきません」というのは相手に何も伝わらないので, 回答がほしいのであればこのように書いてはいけません. 「あなたがどのような結果を期待しているのか」がわからなければ「うまくいかない」のかどうかも判断できないよね. ついでにいうと, 「実際にどのような結果が得られたのか」も書いておくと, 回答者がわざわざ確かめなくていいので親切というもの. ところで, 最後の foreach ループは何がしたいの? 特に, $f[$check[0]] とか $f[$check[1]] とかで何をしている (つもりな) の?
ところがぎっちょん (古いなぁ), searchString の 3引数目のいくつかと 4引数目以降は undocumented feature なんですよ＞#1. そもそも引数の名前が謎. mhmode って何の略だよ. 4引数目以降を簡単にいうと ・4つ目: 大文字と小文字を同じとみなすかどうか ・5つ目: 英数字などで ASCII と複数バイト文字を同じとみなすかどうか ・6つ目: かたかなとひらがなを同じとみなすかどうか ・7つ目: 音引きなどを同じとみなすかどうか です. しかし.... 引数の渡し方とか, もうちょっと何とかならんものかなぁ.
ふと思ったのですが, 「他のフォーマットに変換する」ときにコメントの処理を間違えて破たんするってことはないんでしょうか? png にしろ gif にしろ原理的にはコメントを含めて処理しないといけないわけで, 「表示系にはバグがあるけど変換系にはバグがありえない」という仮定はちょっとどうかなと思ったりします.
heights メソッドは配列参照を返すとあるので、それぞれの値は $takasa->[0] $takasa->[1] $takasa->[2] で参照できます。
「本当は ${...} と書くんだけど, まぎれなければ $... と書いてもいい」というくらいの気持ちでいってください. つまり,「変数 $a の内容の後に文字 'x' をつけたもの」を表現するときに $ax としてしまうと「変数 $ax の内容」と解釈されてしまうので, これと区別するために ${a}x と書くことになります. この例ではまぎれがないのでどちらも同じです.
転置行列をもとめたいのであれば、”perl 転置行列”で検索すればいいと思います。 特定の列の値を抽出したいのであれば、以下のような方法があると思います。 my @matrix = ( [ qw(a b c d) ], [ qw(1 2 3 4) ], [ qw(5 6 7 8) ], ); my $col = 2; my @values; for my $row (@matrix) { push @values, $row->[$col]; } print "@values";
一応無理すれば @aaa = grep { defined $_ } split(/('.*?'|".*?")|\s+/, $aaa); とかできるけど... split だけではダメだと思う.
CGIを通してブラウザーで確認されているのだと想像しますが、まず、コマンド ラインでチェックすることをお薦めします。 C:\>perl test.cgi コマンドラインでエラーが出ないことを確かめてからCGIで実行します。 CGIで実行するとき、以下の文を書いておくと、エラーがブラウザーに表示され ます。 use CGI::Carp qw(fatalsToBrowser); 変数に何が入っているのかを調べるとき、print文でもいいのですが、undefと 空文字列との区別がつかないときや、配列・ハッシュを一覧で見たいとき等は 以下のように書くと詳細がわかります。 use Data::Dumper; print Dumper \$trm01; あと、HTMLの仕様で連続空白は1つの空白として表示されてしまいます。 なので、TacosanさんがNo.1で提示されたコードは、以下の意味だと思われます。 $trm01 = $trm01 ? sprintf("%3d",$trm01) : ' 'x3;
cpanを起動して、 「o conf ftp_proxy ""」ではだめでしょうか？
一般的に、print して ARRAY(0x9bf0d18) の形式になる変数には、配列リファレンスが入っています。 これは、デリファレンスして配列を得られます。 今回は以下の様になります。 $in{'test'} # 配列リファレンス @{$in{'test'}} # 配列 この配列に、複数選択された値が入っているのでしょう。
ヘッダー取得ののHTTPリクエストを送ってみるのはどうでしょうか？ use LWP::Simple; my $url = 'http://www.yahoo.co.jp/index.html'; if ( head($url) ) { print "File : $url exists"; } else { print "File : $url not found"; }
chmod XXX
同じ名前のキー名を使う場合は、param の結果を配列に入れてください。 @values = $q->param('id'); など
通常処理は最後まで行われます。 ためしに、sleepで待機後ファイルを作成するスクリプト作ると、応答前に終了してもファイル作成されます。
質問者さんのコードで、とりあえずベンチマークを取ってみました。 質問者さんの予想通り、変数宣言をループの外（out of loop）でしたほうが、 ループの中（in loop）でするより1.5倍近く速いという結果になりました。 Benchmark: timing 10000 iterations of in loop, out of loop... ..　　in loop:　4 wallclock secs ( 3.69 usr + 0.00 sys = 3.69 CPU) @ 2711.50/s (n=10000) out of loop:　2 wallclock secs ( 2.48 usr + 0.00 sys = 2.48 CPU) @ 4025.76/s (n=10000) 　　　　　　　　Rate　　in loop　out of loop in loop .　　　2711/s.　　　--　　　-33% out of loop　4026/s.　　 48%　　　　-- 私の環境は、以下です。 CPU：PentimuM 1.73MHz OS：Windows XP SP2 Perl：Active Perl 5.8.8 試したコードは以下です。 use Benchmark qw(:all); my @str = ('a'x10) x 1024; my $r = timethese( 10000, { 'out of loop' => sub { my $i; my $len; for( $i=0 ; $i<1024 ; $i++){ $len = length($str[$i]); } }, 'in loop' => sub { my $i; for($i=0 ; $i<1024 ; $i++){ my $len = length($str[$i]); } } }); cmpthese $r;
> perlの中のhtml言語の中でjavascript を使用することは可能ですか 「perlの中」と言うよりは、「perlが出力した」ですね。 可能です。 クライアント側でHTMLを受信したとき、 そのデータがperlにより生成された物であるかそうでないかは クライアントの動作には全く影響しませんから。 そもそも、「Perlから出力されたHTMLである」ことを知ることさえできません。
あんまり、かわらんか my @aaa = ( "1234", "ABCDE", "XYZ" ); my $max = 0; my @info_table = map { my $len = length $_; $max = $len if $max < $len; { len => $len, chars => [ split '', $_ ] } } @aaa; while ($max) { for my $info (@info_table) { my $len = $info->{len}; print $max <= $len ? $info->{chars}->[ $len - $max] : ' '; } print "\n"; $max--; }
CPANから取ってこなくてもTerm::ReadKeyは標準で入ってますね。 No.2のコードを試したところ、自分の環境では、リターンキーは反応ありませんでしたが、 その他のキーはきちんと応答していました。
decodeしていないのが原因だと思います。 データ読み込みの際、以下のようにdecodeすればいいと思います。 my $data=decode_utf8( get($url) ) or die; あと、use encoding 'utf8'は副作用が多いので、use utf8のほうをお薦めします。 一例として、以下のようにすれば、標準入出力やファイルへの入出力がutf8となります。 # -- use encoding 'utf8' に変わる部分 --------- use utf8; use open IO => ":encoding(utf8)"; use open ":std"; # --------------------------------------------- use Encode; use LWP::Simple; my $key='xxxxxxxxx'; my $url="http://～～"; my $data=decode_utf8( get($url) ) or die; open W,'>','MyNouhin.txt' or die; print W $data; close W;
s///g を使わないのはなぜ?
YFH って何ですか？ リンクリストって何ですか？ リンク先URLのリスト？ すでにリストになってるから、分割してMS-Excelに貼り付けて列コピーでも良いんじゃ無いですか？ 質問文を書く手間を惜しんだ分だけ有効な回答も減ると思いますよ。
こんにちは。御質問の文面からは詳細が分からないので、一般的なことを申しているかと思いますが…。javascriptにはsubmit()メソッドがありますので、計算ファンクションでフォーム内テキストボックスにでも計算結果を入力させ、それをsubmit()でCGIに送り込んではいかがですか。submitボタンを別に作成して、それを押して送り込むこともできますが、submitメソッドをファンクション最後に入れておけば１アクションで済みますよね。 http://javascriptist.net/ref/form.submit.htm "javascript cgi"で検索したら以下のようなＱ＆Ａもありました。 http://okwave.jp/qa4553428.html > 基本が分かっていないので CGIとJavascriptを使ってページを試作するような教科書を読んで学習されてはどうでしょうか。また、以下のような書籍もあります。 http://www.amazon.co.jp/JavaScript-CGI%E3%83%8F% …
終了条件をif文などで作成し、last関数を使うことで foreach文から抜け出すことができます。 例えば、 $i = 0; foreach my $k ( 0 .. 1000 ) { print $k . "\n"; last if ( $i == 　10 ) ; $i++; } $kはいくつまで表示されますか。 lastから始まる業を削除して実行した物と比べればわかりやすいと思います。
通常、エラーメールにはその原因が書かれれているはずです。 それによってある程度原因が絞れますし、対処法も違って来ます。
No.2の補足に書かれているコードをそのままコピペして試してみましたが、 正常に動作しました。 $VAR1や@Listにうまく値が入っていない可能性があると思います。 データがファイルに保存されているのなら、各項目の意味（$VAR1相当）を最初 の行に書き、その後にデータを羅列していくのはどうでしょうか？ 以下、それを処理するサンプルコードです。 my @labels = split /<>|\n/, <DATA>; my @data; while (my $line = <DATA>) { chomp $line; my %hash; @hash{@labels} = split /<>/, $line; push @data, \%hash; } print $data[0]{e}, "\n"; #=> え print $data[1]{u}, "\n"; #=> く print $data[2]{o}, "\n"; #=> そ __DATA__ No<>a<>i<>u<>e<>o 1<>あ<>い<>う<>え<>お 2<>か<>き<>く<>け<>こ 3<>さ<>し<>す<>せ<>そ
こんな感じでいかかでしょうか？ my %count_of; my @result; while ( my $line = <DATA> ) { chomp $line; if ( $line eq 'EOS' ) { push @result, {%count_of}; %count_of = (); } else { ++$count_of{$line}; } } for my $count_of (@result) { my @sorted_data = map "$_->[0] $_->[1]", sort { $b->[1] <=> $a->[1] or $a->[0] cmp $b->[0] } map [ $_, $count_of->{$_} ], keys %$count_of ; print join("\n", @sorted_data), "\n\n"; } __DATA__ あいうえお かきくけこ さしすせそ あいうえお かきくけこ EOS かきくけこ さしすせそ さしすせそ あいうえお さしすせそ EOS あいうえお かきくけこ かきくけこ かきくけこ さしすせそ EOS
＞>%freg = map {$_ => 0} keys %freg; ＞最初の%fregは，自分で定める値ですよね？ ＞だとすると，%fregはすでに存在している変数なので，別の名前にしようとおもいます． 後ろのコードで、%fregに入った値を表示していますので、%fregに値を入れてください。 ＞>foreach my $word ( keys %freg ) { ＞の，$wordも既に存在している変数なので，$wordsに名前を変えました． my $wordとレキシカル変数宣言していますので、変える必要はないと思いますが、 もちろん変えてもかまいません。 ＞>$freg{$search_key}++ if $word =~ /$search_key/; ＞にて，「Unmatched [ before HERE mark in regex.」というエラーが出てしまいました． エラーの意味はちょっと分かりませんが、文字コードがShit-JISならばそれに絡む エラーかもしれません。 その場合は、以下のようにするとエラーが出なくなると思います。 $freg{$search_key}++ if $word =~ /\Q$search_key\E/;
＃２です。 私が確認して欲しかったのは呼び出し元HTMLファイルの内容ではなく、 CGIを実行して出力されたページのHTMLソースです。 ブラウザで表示されたページのHTMLソースを確認して、期待するHTMLに なっているかどうかを明らかにする必要があります。 不具合が発生した時はアレコレ原因を考える前に「実際に起こっている事」を ハッキリさせないと見当違いの部分で悩むことになりますよ。
PHPはよく知りませんが、多分、似たような関数はfrom_toだと思います。 以下のように書けば、Shfit-JIS（CP932）からUTF-8に変換できます。 use Encode qw(from_to); from_to($a, "cp932" => "utf8");
> print MAIL "Content-type: text/plain; charset=ISO-2022-JP\n"; > は、どのようなものを出力しているのでしょうか？ 観点によって、答えが変りますね。 解釈1 sendmail プロセスに送るデータ パイプで送るんだから、当然ですね。 解釈2 smtpヘッダ(の一部) sendmailコマンドは、基本的にはメール送信コマンドです。 入力データをメールメッセージとしてメール配送サーバーに送ります。 このとき、sendmailは入力データのうち最初の空行までをメールヘッダ、以降を本文として送ります。 恐らく、print MAIL "Content-type:...."; の後で空行を出力しているでしょう？ Content-type と言うヘッダは HTTP でも定義されていますが、ここでは sendmail に送っているので SMTPヘッダです。 # SMTP というのは、メール配送プロトコルの名前です。 Web閲覧プロトコルが HTTP なのと同じ事情です。
> param("X") eq "A" and "B" and "C" という記述は、本来 param("X") eq "A" and param("X") eq "B" and param("X") eq "C" と書く必要があります。 ただし、お望みの条件は unless ( param("X") eq "A" or param("X") eq "B" or param("X") eq "C" ) になります。
No.3のkumozさんが書いておられるようにShift-JISだと第2バイトが正規表現 のメタ文字とかぶってエラーになることが多々あります。 とりあえず、kumozさんがおっしゃるように use strict; use warnings; use CGI::Carp qw(fatalsToBrowser); を追加して、エラーを捕捉したほうがいいですね。 use strict; use warnings; も追加しておくとバグが入りにくいコードが書け るようになると思います。 Shift-JISは何かとバグが出るので、use utf8としてUTF-8にするか、EUC-JPに するのも手だと思います。 手っ取り早く解決するには、 if($data =~ /$word[$a]/){ を、 if($data =~ /\Q$word[$a]\E/){ として、メタ文字を無効化する方法もあります。 あと、検索をするなら正規表現よりindexを使ったほうが高速で動作するでお薦 めです。and検索のサンプルコードとして以下はいかがでしょうか？ my @words = split(/\s|　/,$in{word}); foreach my $data (@data) { my $hit_count = grep index($data, $_) >= 0, @words; if ( $hit_count == @words ) { push @query, $data; } }
＞ちなみに現在CGIもJAVASCRIPTも使ってます。 ＞ということはできるという意味でしょうか? ＞それとも、ログイン管理をするために新しくWEBアプリを使うためのユーザーIDを作ったりする必要があるということですか? パソコンにログインしているユーザー名を取得する事は出来ますが、 ちょいと手間です。 まず、JavaScriptを埋め込んだHTMLまたはcgiを作り JavaScriptでログインユーザー名を取得し、 それを、目的のcgiにリンクで引数として渡すなどをすれば 取得は出来ます。 やり方としては以上なんですが、 一段階噛ましておかないといけないので少し手間なわけです。 また、ブラウザによってはJavaScriptの動作のON/OFFが出来るブラウザもあるので 絶対に取得出来る保証もありません。 なので絶対に取得されたい場合は上記にお話しされている ＞ログイン管理をするために新しくWEBアプリを使うためのユーザーIDを作ったりする必要があるということですか? の方が安全かもしれません。
split すればいい. @A = split //, $a;
通常書けません（書くのは別にかまいませんが期待通りにはならないでしょう）。 逆にPerlスクリプト中にHTMLをヒアドキュメントという形で記述することは一般的です。 PerlはWebが生まれる前からありましたが、PHPはWebの為に生まれました。
前の質問もそうですが、何が言いたいのかよくわかりません。 > テキストファイルにA,B,Cが存在した場合、 > Aが存在するので、A,B,Cと出力する > というロジックにしたいのですが、 テキストファイルにどういうフォーマットでデータが格納されているのでしょう? また、コマンドラインパラメーターで Aだけしか与えていないのに A,B,C が存在する場合と文章が続く意味が不明です。 もうちょっと説明を考えてください。 print "$ARGV[1],$HA{$ARGV[1]}" ってわけでもないだろうしなあ。
q{}の意味 http://www2u.biglobe.ne.jp/~MAS/perl/ref/q.html @ARGV[2..$#ARGV]の意味・・・perl 配列 スライスでググてください $#ARGVの意味・・・perl 配列 最後のインデックスでググってください 懸案については、 $tmp{$ARGV[1]}=q{,} . join q{,}, @ARGV[2..$#ARGV]; でいけるかと思いますが、何か設計がまずそうな気がします。 もう少し周辺のコードを書くか、何故$tmp{$ARGV[1]}というハッシュ構造にしたかを 書いてくれれば、いい回答が得られるかもしれません。
LWPなどでリクエストを送るのダメですか？ 例えば、HTTP::Liteで単純に書くと、 --- #何か処理 my $GET = 何か処理した結果; use HTTP::Lite; my $http = new HTTP::Lite; my $req = $http->request("http://localhost/b.cgi?" . $GET) or die "$!"; print $req; LWPならもっと複雑なこともできます。
過去のQ&Aは参考になりませんでしょうか？ 参考URL：http://hiroba.kodate.jp/qa2808695.html
別にいいのでは？ どのレベルから大規模と呼ぶのかわかりませんが・・・ ただ、負荷が高くなりますので、mod_perlかfastcgiは必須でしょう。 逆にmod_perlを使用できるのであれば、おそらくJavaより高速に動作すると思いますよ。 後は、コーディングルールでしょうか。 多人数でコーディングするときはどうしてもルールがまちまちになりがちです。 Javaであればある程度制約があり、そこそこ統一されますがPerlは自由度が高すぎるので、同じPerlプログラマであっても他人のコードはとても読みにくかったり・・・ レコード数については100万行だろうと１億行だろうとそれはDBの設計とチューニングの問題になりますので、プログラムする言語はなんであろうとそう変わりません。 一般的なホスティングでどこまでできるのかは分かりませんが、DBのチューニングは必須だと思いますし、ハードウェア構成から考える必要があると思います。
上記の内容だけでプログラムするなら ############################################## # $hyoka全員の評価点が加算されたものが代入されている #全評価点を人数で割って、小数点を切り捨て。 $ans = int($hyoka / $ninzu); #評価点分だけ星を付ける。 for (1 ... $ans) { $str .= "★"; } print qq($str\n); ############################################## といった形になると思いますよ。 まぁ小数点第１位を四捨五入して計算した方が 良いような気もしますけどね。
そういう仕様でしょう。 Perlの数値定数の場合は 0x 先行で 16進、 0 先行で 8進を意味します。 だから、chmod(0750,$file); は chmod(488,$file); と等価です。 一方、数値が必要なところに文字列があると自動的に数値に変換されますが、その時は 0x や 0 先行で 16進や 8進という規則がありません。 つまり、chmod('0750',$file); は chmod('750',$file); と等価でさらに chmod(750,$file); と等価です。 chmod(0750,$file); とは違うのです。 '0750' または '750' という文字列から 488 という数値を得るには、 oct('750') または oct('0750') が使えます。 参考URL：http://perldoc.jp/docs/perl/5.8.4/perlfunc.pod
恐らく0777は777に、0755は755になっているのかな？ 変数処理において$in{'per'}が数値として処理されているので頭の0が取れているんじゃないでしょうか。 前後の処理が全く分かりませんので、適切なアドバイスが出来ませんが、対処療法でよければ、値チェックで修正って言う手もあります。 ＃$in{'per'} って、まさかformのパラメータをそのまま渡してるんですか？かなり危険ですけど…
以下スクリプトで、各案のパフォーマンスを計測してみました。 -- #!/usr/bin/perl useTime::HiRes qw(gettimeofday); my@testData = qw(aaaa ajjj kaoa jjjj axxxx);# テストデータ # aを含む4文字にマッチする正規表現 全案 my%matchesIt4CharIncluding_a= ( # Tacosanさん 全ケースベタ書き案 'No.1' => qr/^(?:a...|.a..|..a.|...a)$/, # kirikirkazさん 明示的バックトラック案 'No.2' => qr/^(?=.*a).{4}$/, # poppo64さん 明示的バックトラック逆案 'No.3' => qr/^(?=.{4}$).*a/, # kinoko2009さん 評価コード埋込案 'No.4' => qr/(?(?{length!=4||index($_,"a")<0})(?!))/, # (参考) パターン展開コード埋込案 'No.5' => qr/^[b-z]{0,3}+a(??{'[a-z]{'.(4-length($&)).'}+'})$/, ); my$times= 1000_000;# パフォーマンス計測用 繰り返し回数 foreach my $No (sort(keys(%matchesIt4CharIncluding_a))) { my($start, $n)= (get_utime(), $times); printf("%s MATCH's", $No); printf(" : ( %s )", join(' ', grep(/$matchesIt4CharIncluding_a{$No}/, @testData))); grep(/$matchesIt4CharIncluding_a{$No}/, @testData) while ($n--); printf(" x %d time=%.6fs\n", $times, get_utime() - $start); } sub get_utime { return sprintf('%d.%06d', gettimeofday()); } __END__ 以下、実行結果。 [WindowsVista on Core2DuoT9400@2.53GHz] C:\Users\user\Desktop>matchesIt4CharIncluding_a.pl No.1 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=8.511500s No.2 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=8.518548s No.3 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=8.526566s No.4 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=12.486100s No.5 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=51.380000s [Linux on VMwarePlayer for WindowsVista] user@ubuntu:~$ ./matchesIt4CharIncluding_a.pl No.1 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=4.751165s No.2 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=5.005868s No.3 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=5.051104s No.4 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=8.477054s No.5 MATCH's : ( aaaa ajjj kaoa ) x 1000000 time=36.206683s 見た目にもシンプルで分かりやすい正規表現が高速、という結果となりました。 これは、多少バックトラックが発生したとしても、ユーザーで回避策コードを 埋め込むよりも、Perlの正規表現エンジンの最適化は優れているので、巧妙・ 技巧的なコードに拘る必要はない、ということなのかもしれません。
> ヘルパーで作成された myapp_fastcgi.pl を使いたいのですが、そちらにアクセスさせただけでは毎回実行されてしまいます アクセスして実行できるなら、使えるんじゃないんですか？
^ ですかぁ？ 「頭」と読んでたかなぁ・・・　（もちろん頭の中で）。 記号の名前としては「カレット」のようです。 ついでに書いておくと、| の名前は「パイプ」といいます。 コマンドを | ではさんで列記する場合、「パイプでつなぐ」とか言いますね。
(じっとコードを追ってみる...) ああ, その通りです＞#8. 両方を同時に評価するパスがあると思いこんでました... eof() は OK でしたっけ? eof の方が安全?
可能ならその「require される側のファイル」を全部載せてください.
表示するときに print Encode::decode('utf8', substr($text, 9, 12)); とする. そもそも 12文字表示されているという時点で「UTF-8 と思われていない」ことに気づかなきゃ.
URL の内容をそのまま書けばいいんじゃないですかね。アホみたいに 正直に書けば、以下のようになります。@prefsとか、@tokyo_cities などを好きな値に変えればよいと思います。 #!/usr/bin/perl -T use strict; use warnings; use utf8; use CGI::Carp qw(fatalsToBrowser); my @prefs = qw("東京都" "大阪府" "愛知県" "千葉県"); my @tokyo_cities = qw("小平市" "町田市" "三鷹市"); my @osaka_cities = qw("大阪市" "豊中市"); my @nagoya_cities = qw("名古屋市" "半田市" "瀬戸市"); print "Content-type: text/html; charset=UTF-8\n\n"; print << 'END_HEAD1'; <HTML> ... URL と同じ ... function funcSubmit() { URL の javascript と同じ } function funcMain(b) { URL の javascript と同じ } END_HEAD1 print 'var prefs = new Array(', join( ',', @prefs ), ');', "\n", 'var cities = new Array();', "\n", 'cities[0] = new Array(', join( ',', @tokyo_cities ), ');', "\n", 'cities[1] = new Array(', join( ',', @osaka_cities ), ');', "\n", 'cities[2] = new Array(', join( ',', @nagoya_cities ), ');', "\n"; print << 'END_HEAD3'; // --> </SCRIPT> </HEAD> END_HEAD3 print << 'END_BODY'; <BODY onLoad="funcMain(false)"> URL の BODY と同じ </BODY> </HTML> END_BODY
一旦 CGI スクリプトを経由して、リダイレクトで移動させるのはどうで しょう？つまり、 (1) パラメータをチェック (2) Submitボタンが押されていたら、ファイル保存などした後でリダイレ クト (3) 押されていなかったら、フォームを表示 つまり、 if (パラメータチェック) { ファイル保存 リダイレクト } else{ HTML表示 print "<FORM ACTION=自身のCGIスクリプト METHOD='post'>\n"; ... } ということです。 #!/usr/bin/perl -T use strict; use warnings; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; use constant DEST_URI => 'http://www.google.com/'; my $q = CGI->new(); my ($button) = $q->param('Submit'); if ( defined $button ) { # Save File, etc print $q->redirect(DEST_URI); } else { print $q->header( -charset => 'UTF-8' ), $q->start_html(), $q->h2("Forms"), $q->hr, $q->start_form( -method => 'get', -action => $ENV{'SCRIPT_NAME'} ), $q->submit( -name => 'Submit', -value => 'Value' ), $q->end_form, $q->end_html; }
全文見たわけではないのでこれは勘ですが、 No.1のお礼のコード見る限り doctype宣言をループ内で出力するとか無茶なことしてるし、 あなたのスクリプトがおかしいから テスト環境ではたまたまうまくいったけど 本番環境でうまくいかないように思えます。 最終的にサーバーの問題であると決めるにしても、その前に自分を疑う努力をした方が良いと思います。 たいていの場合一番信用できないのは自分なんだし。
それはCGIの領域に入るので質問の意図と違ってくるかと思います。 もう私しか見てないようですし、改めてスクリプトを全て載せた上で質問するとよろしいかと思われます。
あ、なるほど。 strictをロードできないのかと思ってましたが、もしかしたらstrictは質問者さんのモジュールの名前ですか？ そうだと仮定すると、strictはすでにそういうモジュールがあるのでそちらが使われたんだと思います。(小文字で始まるモジュールは「プラグマ」と言います) なので質問者さんのモジュールはロードされずに、そのモジュールにアクセスした時エラーが出たとかしたのだと思われます。 どちらにしろエラーメッセージを補足してもらえれば分かるかと思います。
> 「クライアントはサーバの機能もなければならない」という不可解な前提を「動作試験段階では」ということで理解 この文面だけだと誤解をされているように思えるのですが 問題点は 　ブラウザをプラットフォームとしてプログラムを実行させることが「サーバを必要」 とさせているのです。 ブラウザにはそんな機能が無いので、HTTPサーバ側でCGIというインターフェースでもってそれを補っているのです。 基本的にブラウザはその名の通りブラウズの機能しかないのです。 動作試験だろうが本番稼動だろうが、質問者様の機能を前提にすると、CGIを実装するHTTPサーバアプリがそこに必要となります。 前回答者さんのおっしゃるようにクライアント・サーバというのはサービス形態上での立場を表す便宜上での言葉でしか有りません。 インターネットでは接続されているすべての端末を一律「HOST」といいます。決してサーバとかクライアントという言い方はしません。 数あるインターネットのサービス、例えばWebサービスという狭義の範囲において、閲覧するHOSTを便宜上クライアントと呼び、コンテンツを提供するHOSTをHTTP(Web)のサーバと呼ぶのです。 もうご存知かもしれませんが、GoogleがGearsというブラウザ用プラグインで、オフライン状態のローカルSQLiteをまわせるモノを提供してます。 詳細は使ったことが無いのでよくわかりませんが何かの参考になるかも・・・。
確かに質問にある例だと、B5e からI1m までなにがどうなって この出力になるのかわかりませんね。 ということでお遊び。 use strict; use warnings; use feature ':5.10'; my $data = do {undef $/; <DATA>}; my @records = split qq{(?=\nB)}, $data; foreach my $record (@records) { my $c; print join qq{\n}, reverse map {s/ /++$c/e; $_} reverse split qq{\n}, $record; } __END__ B a I b I c I d B e I f I k I m B h I n 出力結果: B4a I3b I2c I1d B4e I3f I2k I1m B2h I1n まあそれっぽくなってるのではないかと。
元を残しつつ効率をよくしてみました。 (ここから) print "Content-type: text/html\n\n"; open(OUT,"+<$memfile") || &error("Can't write $memfile"); flock(OUT, 2); while(<OUT>){ if(/^$del<>/o){ next; } push @arr, $_; } seek OUT, 0, 0; foreach(@arr){ print OUT $_; } truncate(OUT, tell(OUT)); close OUT; print "<html>完了しました<br><a href=?mode=menu>戻る</a></body></html>"; exit; (ここまで) perlを独学で学んでいるならソースの最初に use strict; use warnings; をおまじないとして書くといいと思います。 詳しい意味は調べてください。
パターンマッチにこだわるのなら "???" の部分は "^$" になるでしょう。 正規表現をネット検索すれば、代表的なパターンを見ることが出来ます。
初歩的な質問になるんですが httpdソフトは動いてますか？ またperlは関連付けられて動いていますか？
Spreadsheet::ParseExcelの内容を知りませんが、perlでのプログラミングでは随所で小さなテストプログラムを作って確認を怠らない必要があると思っています。（←怠ったために、何度かはまっています） ところで if($cell=~"。"){ で、あっていますでしょうか？ if($val=~"。"){ ではないのでしょうか？ パターンマッチの判定部分では、「。」を含む文字コードは無関係のようです。 たとえば、perl単体 （v5.6.1 built for MSWin32-x86-multi-thread）で === @a = ("あいうえお。","かきくけこ","さしすせそ。","たちつてと"); foreach $i (@a) { print "$i"; if ($i =~ "。") { // or $i =~ /。/ print "\n"; } } === を実行すると === あいうえお。 かきくけこさしすせそ。 たちつてと === となります。
あいたたた、・・・英語力ですね（笑 Perlのコメントって//だっけ？ブツブツブツ レス不要です。
難しいねぇ、Ｋシェルだっけ？Ｂシェル？ははは。複数行にわたってパターンを検出するのは、たまにイラっとするけど、しかたないね。nahaha596さんの言いたいであろう事を想像するに・・・複数行にわたる、if-then構文 　　if <expr> 　　then を見つけたら、元をコメントアウトして単数行のif-then構文 　　# if <expr> 　　# then 　　if <expr> ; then に直す。どお？履歴を残すあたり、仕事っぽいな。複数ファイル内っていうのは、また、別問題、複数ファイルを扱うときは、僕なら、perl内では使わない。こういうのをフィルタとか言ったりします。というわけで、無責任ながら、下記の要領はどうかな？ ---------- ここから ---------- 　　　　//===== Open files and read script ===== 　　　　open FH, "FILE_A.txt"; 　　　　open FO, "FILE_A_NEW.txt"; 　　　　@script = <FH>; 　　　　 　　　　//===== Loop script lines (but not last line) ===== 　　　　for $i ( 0 .. $#script-1 ) { 　　　　　　$line_current = $script[$i]; 　　　　　　$line_next = $script[$i+1]; 　　　　　　 　　　　　　// Case, multi-line if statement 　　　　　　if(　　$line_current =~ /if/ 　　　　　　　　&& $line_next =~ /then/ 　　　　　　) { 　　　　　　　　// Comment out 　　　　　　　　print FO "#$line_current"; 　　　　　　　　print FO "#$line_next"; 　　　　　　　　 　　　　　　　　// Generate and output new statement 　　　　　　　　chomp $line_current; 　　　　　　　　chomp $line_next; 　　　　　　　　print FO "$line_current ; $line_next\n"; 　　　　　　　　$i++; 　　　　　　} 　　　　　　// Case, unmatch 　　　　　　else { 　　　　　　　　print FO "#$line_current"; 　　　　　　} 　　　　} 　　　　 　　　　//===== Purge last line if remain ===== 　　　　if( $i == $#script-1 ) { 　　　　　　print FO $script[$#script]; 　　　　} ---------- ここまで ---------- Tacosanさんの言ってる事わかる？大事な事だよ。私の示したスクリプトは、安易なマッチングしかしていなくて、Ｂシェルスクリプトの構文解析には程遠いです。もし、質問が学校の宿題程度ならかまいませんが、仕事の依頼なら話にはならないです。また、仕事の依頼を受けるなら、Tacosanさんの言うようなアプローチが必要です。でないと、無限のデバッグ作業が待っています（笑）。蛇足ながら、本気で構文解析を行い強力なフィルタを作りたいなら、YACCとLEXのライブラリを使うのが近道かもしれません。 でも、まあ・・・なんだ、質問を明確に出来る実力があると、質問することもなくなって来るんだろうけどね。がんばれ～。
u2122さんへ >あともう一つ教えて頂きたいのですが、 >もし規定の数字を超えた場合(2)クリックしてもcgiを動作しないようにする場合には、 >どのようにプログラムを変更するれば良いのでしょうか？ これはクリックしてもカウンターが進まなければ良いのですか？ CGIその物を止めるのは無理ですからねぇ。 まぁ方法としては、 $cnt = <IN>; した後で、$cntが規定回数以上であれば、 足さないで、ファイルへの書き込みもしなければ、 対応出来るかと思います。 ただ、現状このプログラムは非常に危うい動きをしています。 (２)に変更される場合は一度構成を考えないしてから 書き直したほうが良いかと思いますよ。
って～か, そもそも「/a/ にマッチする文字列」ですら無限に存在しますけどね. ba なんかもマッチするし.
サーバー上で動いているPerlの変数は当然サーバー上に有りますが、 それならサーバーを経由しないでとはどういうことなの？
ダブルクオーテーション ゛゛ が複数あるためエラーになってます type=\"text\" name=\"name\" のように円マークをつけてあげてください。 携帯から回答のため記号が変だったらすいません。
全体として何をしたいのかきちんと書いてくれないかなぁ. 質問文に書いてあることから「IP アドレスがど～たらこ～たら」って解釈できないんだよ. あなたが思うほど超能力者は多くないと思ってほしい.
素直に書いてみました。 use File::Basename; my $input_file = 'input.txt'; my $output_file = 'output.txt'; my $script_file = basename($0); my $target_dir = '.'; open my $in, '<', $input_file or die "$!"; my @search_words = <$in>; close $in or die "$!"; chomp @search_words; my $re_search_words = join( '|', map {quotemeta} @search_words ); my $re_exclusion_files = join( '|', map {quotemeta} ($input_file, $output_file, $script_file) ); my @target_files = grep !/$re_exclusion_files/, glob("$target_dir/*.*"); open my $out, '>', $output_file or die "$!"; for my $target_file (@target_files) { my $target_basename = basename($target_file); open my $in, '<', $target_file or die "$!"; while (my $line = <$in>) { if ( $line =~ /$re_search_words/ ) { my $match_word = substr($line, $-[0], $+[0] - $-[0]); print {$out} "ヒットしたファイル名 $target_basename $.行目 $match_word\n"; } } close $in or die "$!"; } close $out or die "$!";
教員の方でしたら、以下の定番アプリをお奨めします。 やりたいことは全て出来るでしょう。 http://www.netcommons.org/
なにをどのように改造したいのかが、上記の文言からわかりませんでした。 空メール会員登録がしたいのか? ｅ－ラーニング（クイズ）の問題を変えたいのか? 改造がしたいのか? 設置は出来ているのか? それとも、設置も出来ていないのか? わたしもperlに詳しくはありませんが、もっと細かく質問しないと分からないと思います。
ＣＧＩ クイズ（問題）perlの入手先に聞いたほうが早いような気がします。
No.2です。 > 1.不特定行にあるBBBをサーチしてCCCとDDDがあるかをチェックします。 > 2.CCCとDDDが見つからなければ次の行をサーチします。 > 3.CCCとDDDが見つかればBBBの見つけた行と結合する。 > 4.対象がなければ終了。 まだ、プログラミング可能なレベルに仕様が決まりませんね。 こういう事ですか？ 1 最初の BBB を探す。 2 見付けた BBB の位置より後の DDD を探す。 無ければ終了。 (検索範囲を、同じ行と次の行に限定する必要がありますか？) 3 見付けた DDD の直前の単語(例では CCC)を得る。 4 見付けた BBB と DDD の間にある改行を全てスペースに置換して行を結合する。 5 処理終了。 (他に BBB があっても処理しなくて良いですか？)
HTMLの作成はlibディレクトリ内のRCal.pmで行われています。 そこを見ればわかると思いますよ。
「"." でも ".." でもなければ表示する」って書けばいい. 簡単には print "<a href=\"$lookdir$dir\">$dir</a><br>\n" unless $dir eq '.' || $dir eq '..'; とか. でも, <br> で改行するのってなんかあほっぽい気がする. 意味上はリストなんだから <ul> を使う方がいいような気も.... あと, $ext を設定するところも $ext = (split(/\./, $filename))[-1]; ってやるとか.
> １つの命令で書けるのでしょうか、 > それとも１個づつコピーしていかなければならないのでしょうか ひとつの命令では書けないと思います。 一行ずつコピーすればよいのではないでしょうか。 ファイルには最新のレコードが先頭にあり、古いレコードが 続くという並びですよね。単純に先頭の 100行を違うファイルに コピーし、その後 ファイル名を元のファイル名に変えればよい のではないでしょうか。 Linux 系の OS を使っているのでしたら、system 関数で OS コマンドを 呼び出し system "head -100 orig_file > new_file && mv -f new_file orig_file" とする手もあります。
use encodingがお薦めできない理由は、これがスコープをもっていないことと、 Perl IOレイヤーを勝手に操作することです。 自分の書いたソースファイルだけに影響を及ぼすだけならいいのですが、他の ソースファイル（モジュール）を取り込んで利用するときに、そのソースファ イルにまで影響が及びます。 詳しくは以下サイトをご覧ください。 [Perl] encoding プラグマについて http://scape.blog.so-net.ne.jp/2008-09-06 参考URL：http://scape.blog.so-net.ne.jp/2008-09-06
while ($content =~ m/<a href=\"\.\.\/(qa[0-9]+\.html)\">/g){ にマッチしてないみたいです。
それだけの質問文では、何に困っているのか・何が質問したいのか判らないです。 ・空メールとは、本文も添付ファイルのないメールの事ですか？ ・空メールの何が出来ませんか？ 送信? 受信？ 受信後の処理？
my $mech = new WWW::Mechanize( autocheck => 1, onerror => undef ); として、 $mech->get($uri); print "get_source error\n" unless $mech->success(); または、 my $mech = new WWW::Mechanize( autocheck => 1, onerror => sub { die "get_source error"; } ); でどうでしょう。 参考URL：http://digit.que.ne.jp/work/product/document/per …
素人の方がいきなりゲームは難易度が高いと思います。 まずはCGIを使った簡単な掲示板やカウンタを作るべきでしょう。 オススメの本ですが、 出来るだけ簡単に書いてある本ですと、以下の本はどうですか？ http://www.amazon.co.jp/はじめての人のためのかんたんPerl-CGI入門-紙谷-歌寿彦/dp/4798001228/ref=sr_1_12?ie=UTF8&s=books&qid=1250533600&sr=1-12 PerlとPHPですが、 両方とも文法も言語の考え方も似たようなものですので どちらか使えるようになれば、もう片方の習得も容易だと思います。
作戦は、ふたつあります。 作戦1 <input type="hidden" name="stime" value="1250475796"> この INPUTタグを form 中に含めてください。 表示用の開始時刻とは別にです。 ・stime はパラメーターの名前なので、適当に変更してください。 ・1250475796 は、time() の生の値です。 その方が、入力後の引き算が楽です。 作戦2 表示用の開始時刻をそのまま入力するには、以下の様にします。 <input type="text" name="stime" value="表示時刻" readonly> テキスト入力欄らしくない体裁にするのはちょっと面倒かも知れません。 いずれの場合も method="get" なら、URL書き換えで開始時刻を偽るという不正行為がいとも簡単にできてしまいます。
フリーCGIで有名なKentさんではダメでしょうか? http://www.kent-web.com/data/postmail.html >携帯(3キャリア)対応 とのことですが、携帯の場合は、フォームに入力させるようもmailtoが主流のような気がしています。 Kentさんのcgiはあまりクセが無いように思ってますので設置も簡単かと思います。
「URI」と限定していいなら「< や > (% も?) はエンコードすることにして <> を区切りに使う」というのがわりとシンプルかも.
投稿されたコードのURIをマウスオーバすると、 リンク情報が http://....2009); と表示されて、コピベしたときに2009以降にゴミがついたのでしょう。それ でも開けてしまうのは、yahooがf=2009以降のクエリーをつかっていないから だと思われます。 なので、2009" ;"#6197153243450676860';の2009以降は意味がなくて、 正しいURIを指定すればOKということです。
それでいいはずだけど？エラー表示はどうなりました？ Content-type:text/html は細かいけど、一応スペースじゃね？ Content-type: text/html あんま影響ないと思うけど・・・ 追加した部分を削除してもう一度試してみ？ それで成功すればその部分が影響してるって事だけど 特に気になる点はみられないな。 この場合エラーは報告されないからわからないけど FTPあたりでネットワークエラーが発生してるのかもね。 suexecとかどっかのログとか見れば分かるのかもわからんけど。
$# は意味ありますよ?. 対応する配列の「最後の添字」だったかな? つまり, $#key なら「配列 @key の最後の添字」だったような気がする.
こんにちは。No.2のものです コツとしては 「ほしいものを厳密に表現しましょう」 です。 ggable様の考える、「任意文字数のアルファベット＋任意桁数の数値で構成された単語」は 　[a-zA-Z]+[0-9]+ ではなく、 　(?<![a-zA-Z])[a-zA-Z]+[0-9]+(?![0-9]) であることが、サンプルから読み取れました。 これに2つの条件を加えまして・・・ 　(?<![0-9])(?<![a-zA-Z])([a-zA-Z]+[0-9]+)(?![0-9])(?![a-zA-Z]) このままでもいいのですが、まとめてすっきり、 　(?<![0-9a-zA-Z])([a-zA-Z]+[0-9]+)(?![0-9a-zA-Z]) という感じです
正規表現の[～] の中で全角文字を使っているのが原因でしょう。 たとえば、％はEUCで \xa1\xf3 ですから、[%％] は、「\x25 か \xa1 か \xf3」という1バイトにマッチします。 そういう場合は、 正規表現を [\!\#\%\-…]|！|％|－|… といった感じで、 全角文字は | で並べる形にするのがいいでしょう。 あるいは、一手間かかりますが、エンコーディングの処理をして、 スクリプトはuse utf8しておけば、 $ascii|$twoBytes|$threeByte みたいな文字の境目チェックは不要で、 $data =~ /[！＃％]/ と書くだけでも全角文字にマッチさせられます。
ちょっと時間がないので 細かいプログラムは書けませんが my $from = $header->get('From'); my $subject = $header->get('Subject'); で題名は取得できているので あとは以下のように、if構文で題名によって処理を分ければよいと思いますが？ if($subject eq "その1"){} elseif($subject eq "その2"){} else{}
通例パッケージの最初ですることになってます。 その方が見やすいですし、strictやutf8などのプラグマは範囲がスコープ内に限られてしまうので、 関数内で指定しまうと他のスコープで有効でなくなるので意味がありません。
Net::POP3でメールを受信して、MIME::Parser で Subject:からのコマンド解析と添付ファイルの抽出・ファイル保存を行い、 http://homepage3.nifty.com/hippo2000/perltips/rc … Net::FTP で保存したファイルのアップロード http://www.itmedia.co.jp/enterprise/articles/080 … すればいいでしょう。 アップロードが終わったらファイル削除を忘れずに。 それと、アップロード先のディレクトリがあるかどうかは確認した方がいいでしょうね。手を抜くなら、「UP User/Photo」なんかの時には問答無用でアップロード前に「User」と「User/Photo」のディレクトリ作成するだけでもいいでしょう。
http://bellcall.nsf.jp/f2mail/demo/f2mail.html ↑ そのものズバリです。
こんなコードでテストしてみました。sjis <-> jis,euc,utf8 すべてうまくいけましたよ。 #!/usr/bin/perl use Jcode; print "content-type: text/html; charset=Shift_JIS\n\n"; $sjis='Japan,東京都千代田区霞が関1-1-1 コッカイビル１Ｆ'; print '<font color=red>'; print Jcode::getcode($sjis).' -> </font>'; $jis=Jcode::convert(\$sjis,'jis'); print '<font color=red>'; print Jcode::getcode($jis).' => </font>'; print $jis." <br>\n"; print '<font color=red>'; print Jcode::getcode($sjis).' -> </font>'; $euc=Jcode::convert(\$sjis,'euc'); print '<font color=red>'; print Jcode::getcode($euc).' => </font>'; print $euc." <br>\n"; print '<font color=red>'; print Jcode::getcode($sjis).' -> </font>'; $utf8=Jcode::convert(\$sjis,'utf8'); print '<font color=red>'; print Jcode::getcode($utf8).' => </font>'; print $utf8." <br>\n"; print "<br>\n"; print '<font color=red>'; print Jcode::getcode($jis).' -> </font>'; $sjis=Jcode::convert(\$jis,'sjis'); print '<font color=red>'; print Jcode::getcode($sjis).' => </font>'; print $sjis." <br>\n"; print '<font color=red>'; print Jcode::getcode($euc).' -> </font>'; $sjis=Jcode::convert(\$euc,'sjis'); print '<font color=red>'; print Jcode::getcode($sjis).' => </font>'; print $sjis." <br>\n"; print '<font color=red>'; print Jcode::getcode($utf8).' -> </font>'; $sjis=Jcode::convert(\$utf8,'sjis'); print '<font color=red>'; print Jcode::getcode($sjis).' => </font>'; print $sjis." <br>\n"; __END__
#!/usr/bin/perl use CGI; my $q = new CGI; &main(); sub main { 　　my ($mode, $action, $ymd, $w, $f, @file); 　　#パラメータ取得 　　$mode　　= $q->param('mode'); 　　$action　= $q->param('action'); 　　$ymd　　 = $q->param('YMD'); 　　$w　　　 = $q->param('w'); 　　#ファイル名生成 　　$f = $ymd . "\.txt"; 　　#ファイル生存確認 　　if (-e $f) { 　　　　#ファイル読み込み 　　　　open(FILE, $f) or die; 　　　　eval{flock(FILE,1);}; 　　　　@file = <FILE>; 　　　　close(FILE); 　　} 　　#後は原本通り 　　foreach my $diary (reverse @file) { 　　　　my ($day,$date,$year,$month,$subject,$descrip,$mynum) = split(/\,/, $diary); 　　　　if($diary =~ /$mynum/){ 　　　　　　print qq|$date $subject<br>$descrip<br><br>\n|; 　　　　} 　　} } とりあえず書いてみたのですが、書いて思ったのが、 いまいち主旨が見えないと言うか、どうしたいのだろうと思うのですよ。 まず、 私の環境では 　　if($diary =~/'302'/){ 　　　　print qq|$date $subject<br>$descrip<br><br>\n|; 　　} でも正常に動きませんでしたが、これは環境の違いかもしれないので置いておいて、 > if($diary =~/'$mynum'/){ で引っかからない部分ですが、 これは検索部分を'で括っているので、 $diary内から"$mynum"という文字列を検索している事になります。 なので引っ掛からないのは当然かと。 それとは別に、これの直前で > my ($day,$date,$year,$month,$subject,$descrip,$mynum) = split(/,/, $diary); した上で if($diary =~/$mynum/){ をやれば全てが引っ掛かると思うのですが、ここらへんがイマイチ何をしたいのか見えない所。 引っ掛けるだけなら if ("$date$day" eq $ymd) { 　　#処理 } もしくはパラメータから通し番号を受け取って #改行コードの削除 $mynum =~ tr/\r\n//d; if ($mynum eq $nid) { 　　#処理 } なんて書けば良いと思いますがどうでしょう？
(ぼそ) 「ポインタ」と「リファレンス」は同じものだと思っていい (endぼそ) 現状では サブルーチン sub_func で引数をいったん変数 $self, $array_ref にコピーし, この「コピーした」$array_ref を書き変える という動作です. コピーした時点で $_[0] と $self, $_[1] と $array_ref は「同じ値を持つ別の変数」です. だから, サブルーチン main の変数はどれも変化しません. ちなみに $_[1] = [4, 5, 6]; だと @data3 以外は書き変わります. まあ, これも妥当かな. ということで @$array_ref = (4, 5, 6); では?
($b) = $str =~ /(.*),(.*),(.*)/$2/; ↓ (undef, $b, undef) = $str =~ /(.*),(.*),(.*)/$2/; とか。 まあ素直にキャプチャしないカッコを使うなり、別のやり方をするなり したほうが良いとは思いますけど。
OUT に対して print する.
Crypt関数は一方向性暗号ですので 生成された数値から、元の数値を導き出すことは 総当りで調べるほかありません。
wikiに書いてあったperlのスクリプトをみてみましたが、 ３７行目の「next;」部分を書き換えて、変数に本文を取り込むように書けば できるようになると思いますよ。 ＃サンプルのスクリプトは本文取ってません。 例えば、３７行目を $contents .= $_;と書き換え ７５行目以降ののデコード、文字コード変換をかけて 以下のように変更 #Subjectのデコード $contents = &DecodeFld("$contents"); #文字コード変換(JIS→EUC) &jcode::convert(\$contents, "euc"); #通知メール対象チェック if($contents =~ /ほげ.*/){ #本文に「ほげ」と書いてあるものを転送 $flg_go = 1; }
$i という変数がどこから沸いて出たのかよくわからないのですが、 質問にあるコードはループの一部だったりしませんか? んで、$i がループの制御変数だったりとか。 仮に、$i が0から5まで変化すると仮定すると、 1のときに書き込んだ内容は、2のときの書き込みオープンで消えてなくなります。
考えすぎていはいませんか？ 単に， s/[ 　]/■/g;# [] の中身は半角スペースと全角スペース でよいのでは？
例外が発生するなら、catchすればよいのでは。 参考URL：http://flex.ee.uec.ac.jp/texi/perl/perl_39.html
以前、LWP::UserAgent と HTTP::Request::Common と使って、gmail にログ インしようとしましたが、上手くいかずあきらめました。そのときは、 Mechanize を使いました。Mechanize は UserAgent を継承しているので UserAgent の機能は全部使えると思います。 #!/usr/bin/perl use strict; use warnings; use WWW::Mechanize; my $mail = shift || die 'require mail account'; my $uri = shift || 'https://www.google.com/accounts/ServiceLogin?ser … my $pass; { system "stty -echo"; print "Password: "; chop( $pass = <STDIN> ); print "\n"; system "stty echo"; } my $mech = WWW::Mechanize->new(); $mech->agent('Mozilla/5.0'); $mech->timeout(10); $mech->get($uri) or die "$uri:$!"; $mech->submit_form( form_number => 1, fields => { 'Email' => $mail, 'Passwd' => $pass } ) or die "$!"; print $mech->content();
コマンドプトンプト、一瞬開きますね・・・。すみません。
Switchモジュールや5.10のgivenを使わない手としては既存の構文を利用した次のようなものがありま す。 SWITCH: { local $_ = "foo"; /^abc/ && do { $abc = 1; last SWITCH; }; /^def/ && do { $def = 1; last SWITCH; }; /^xyz/ && do { $xyz = 1; last SWITCH; }; # default print "$_はどのcaseにもマッチしませんでした\n" } C言語と同じくlastを使って抜け出す必要があるのがちょっとアレだと個人的に思いますが。 http://www2u.biglobe.ne.jp/~MAS/perl/waza/switch … http://www.tech-web.net/perlmania/perlsyn3.html
サーバにログインできれば (適当な値を渡すことにより) Perl のスクリプトとして実行することはできるはずです. ログインの詳細については「サーバを運営しているところ」に聞いてください. あと, 「適当な値」がなんであるかは知りません. で, 後半の「do file でファイルが読み込めているかどうか」を確かめる方法も XPDFJ を使ったことがないので知りません. 「スクリプトのある位置からの相対指定」だったら "macro/なんとか" ではまずい気もするけど.
INCはモジュールを検索するパスのようなものです。 > この@INCにセットされたディレクトリとはどこのことを言っているのでしょうか。 エラーメッセージに書かれているとおりです。すなわち、 /usr/lib/perl5/5.8.5/i386-linux-thread-multi /usr/lib/perl5/5.8.5 /usr/lib/perl5/site_perl/5.8.5/i386-linux-thread-multi ．．．．．．． デフォルトの値はperlがインストールされているディレクトリなどの情報をベースに決定され、通常は一般ユーザへのパーミッションがないディレクトリのみです。 INC 変数の値に要素を追加したり、環境変数PERL5LIBを設定することで後から追加したりすることもできたはずです。 あと、use lib を使うときに絶対パスを書くことでも対処できます。(セキュリティ的にはベスト)
じゃあ最強の手段, 型グロブに対する参照でどうだ. if (defined *Print{CODE}) とか (Print が foo パッケージで定義されているなら) if (defined *{$foo::{Print}}{CODE}) とか.
「元のデータに問題がないかどうかわからない」というなら, まずそれを確かめてください. データ自体が間違っていたら話にもなりませんよ.
#2です >if($in{'page'} eq "") { $in{'page'} = "index"; } if($in{'page'} eq "") { $in{'page'} = "index.html"; } >open(IN,"./ｔmp/$tsite/$in{'page'}.html"); open(IN,"./ｔmp/$tsite/$in{'page'}")||&ErrorNotFile; >print "Content-type: text/html\n\n$buffer\n"; if($in{'page'} =~ /^(.*?)\.html$/){ print "Content-type: text/html\n\n$buffer\n";exit; }elsif($in{'page'} =~ /^(.*?)\.lzh$/){ print "application/x-lzh-compressed\n\n$buffer"; exit; }else{ print "Content-type: text/html\n\n不正なファイルが要求されました。"; } #以下追加 sub ErrorNotFile { print "Content-type: text/html\n\nファイルが存在しません"; exit; } のように変えてください。
STDIN に限らず, ファイルハンドルに対する <> 演算子は (スカラーコンテキストでは) 「1行読み込む」という動作をします. 次に <> で読み込むことを考えると, 当然「次の行に進む」ことになっていないとおかしいですよね. 諦めて配列に保存してください.
＞ 一文字目がaからzで二文字目が=のものを取り出す処理と my @foo = grep { /^[a-z]=/ } @test; ＞一文字以上の空白の後ろにtest:があるものを取り出す処理は my @baa = grep { /^\s+test:/ } @test;
CGIモジュールつかいませんか？ my $q = CGI->new; my $pass = $q->param('pass');
まず最初に警告やエラーメッセージの意味を知りたい時は perldoc perldiag とするとメッセージの意味がずらっと並んだページが表示されるので、そこで探してみると分かります。 若干場当たり的な対処法としては no warnings 'internal'; とすれば警告は出なくなるようです。 恐らく警告が出る理由なのですが、まずPerlはC言語で作られています。 (若干違いますが、分かりやすく説明すると)そのC言語の中で既にメモリが破棄されているにもかかわらずもう一回破棄しようとしているので警告が出てる、といった状況だと思います。 これもまた恐らく、なのですが、これはPerlインタプリタの問題ではなく、Cを使って実装されているなんらかのモジュールがメモリ破棄をしくっている可能性があります。 なので現段階としては冒頭の no warnings 'internal'; が妥当な回避方法だと思います。 ただ質問者様がCを使ったモジュールをご自分で実装している場合はそのモジュールを直せば済む話ですが。
試しに、 use strict; my $num = 0; my $h; open($h,">test.csv"); print $h "$num\,$num\n$num\,$num"; close($h); としてみました。 A1、A2、B1、B2、全てに０が入っています。 どういった出力になっているのかもう少し詳しく分かれば何か分かるかもしれません。 エクセルのおせっかい機能か正常に出力されていない気がします。
中島さんのPDFJですか． 正直にいうと，PDFというものは大変に複雑なものなので ・PDFJが手におえない ・ソフトがインストールできない という状況下では，無理でしょう． 逆に言うと ・あなたの環境では何が使えるのですか？ ・あなたのスキルはどれくらいですか？ ということが問題になります． 一般には，使える道具がすくなければ， よりプリミティブな知識と高いスキルが要求され， 道具が多ければ，比較的作業が楽になるという トレードオフです． たとえば，あなたの環境でghostscriptが使えるのであれば いったんPostScriptを生成して， それをghostscriptで変換すればPDFは作れますが， 和文の扱いが環境によりますし， PostScriptを生成できますか？ ということになります． PDFを手書きする（不可能ではありません）よりは PostScriptを手書きする方が楽ですが， その分ghostscriptという道具が必要になるというわけです．
関数型プログラムになれてれば 読めるコードですけど，Perl風味が混じってるので ちょっとしんどいですね． リファレンスを知ってるかどうかが重要です． {map{$_,1}@array2 }-> {$_} ここが何をしてるのかわかれば，大体OKかな map{$_,1}@array2 の部分では，@array2の要素を一個じつ$_1にいれて 1とペアにしています．たとえば，@array2=(a,b,c,d)だったら aを$_にして，a,1 をつくって bを$_にして，b,1をつくって・・・とやって (a,1,b1,c,1,d,1) というリストを作ります．これがmapの機能 これを { } で囲んで { (a,1,b1,c,1,d,1) } というのを作るんだけども，これは { a,1,b1,c,1,d,1 } と同じで，無名のハッシュ（ハッシュのリファレンス）を 作る．つまり {a=>1, b=>1, c=>1, d=>1} と同じ． リストをそのままハッシュに変換できるということと，それを 無名ハッシュのコンストラクタで処理してるところが かなりPerl風味です． このハッシュリファレンスに対して >{map{$_,1}@array2 }-> {$_} とするんだけども，後ろの$_はgrepが渡してくる @array1の各要素ですので @array1=(a,b,d,x)だとすると a に対しては 1 b に対しては 1 d に対しては 1 x に対しては undef となります． これを ! で否定するのだから a に対しては false b に対しては false d に対しては false x に対しては true がでてきて grepではtrueになるものだけがでてくるので 結果として @deff=(x)となります． 例では， @array1=(a,b,d,x) @array2=(a,b,c,d) なので，これは， @array1の中にあって @array2の中にはない要素を引っ張り出す というのが正しい言い方であって 一概に「配列を比較する」といいきれるかは微妙です． そもそも「配列を比較する」ということ自体が どういう意味かが明確ではないということにも注意が必要です．
#!/usr/bin/perl use warnings; use strict; my @logs = <DATA>; my @dels = qw(1234 1236); my @new_logs = (); foreach my $log (@logs) { my $del_match = 0; DEL_CHK: foreach my $del (@dels) { if ( $log =~ /Num=$del<>/ ) { $del_match = 1; last DEL_CHK; } } push @new_logs, $log if $del_match == 0; } print foreach @new_logs; __DATA__ Num=1234<>title=111 Num=1235<>title=222 Num=1236<>title=333 Num=1237<>title=444 Num=1238<>title=555 --- Num=1235<>title=222 Num=1237<>title=444 Num=1238<>title=555
#!/usr/bin/perl use warnings; use strict; use WWW::Mechanize; my $mech = WWW::Mechanize->new(); print "default ", $mech->timeout, "[sec]\n"; $mech->timeout(5); print "modified ", $mech->timeout, "[sec]\n"; --- default 180[sec] modified 5[sec]
日本語の文章をソフトウェアで処理するには「わかち書き化」等の処理が必要で、その為のライブラリをお探しという事ですね？ 有名なものだけでも以下があります。 他にも、きっといろいろあると思います。 それぞれの特徴や Perl用ライブラリの有無はご自身で確認なさってください。 ChaSen 形態素解析器 http://chasen-legacy.sourceforge.jp/ MeCab 形態素解析エンジン http://mecab.sourceforge.net/ KAKASI 漢字→かな(ローマ字)変換プログラム http://kakasi.namazu.org/index.html.ja
convert input.pdf[0] output.jpg 参考URL：http://d.hatena.ne.jp/val90/20070227/1172558857
(?<=) は後方参照 (back reference) ではなく、戻り読み (look-behind)です。 解釈としては #1 の方の推測の通りで、先頭か、。の直後からの 。以外の文字列で 。が登場するまで。 ということになります。 戻り読みの部分が、^ (先頭) か 。 の選択 (alternative) になっているわけです。これにより、「一文」をきちんと頭から尻尾までマッチさせる ようになります。
「自動的に更新する」と思うからいけないのであって, 「実行時に動的にファイル名を取得する」と思えばいい. このファイル名形式がそのまま続くのであれば, 例えば $logdir = "./log"; opendir(DIR, $logdir); $latest = (sort { $b <=> $a; } grep { /^\d+\.txt$/; } readdir DIR)[0]; closedir(DIR); open(FILE, "$logdir$latest"); なんかでできないか?
#!/usr/bin/perl -T use warnings; use strict; use utf8; use CGI; use CGI::Carp qw(fatalsToBrowser); use CGI::Pretty; my @threads = ( { name => 'AAA', date => '2009-01-03', subject => '333', }, { name => 'BBB', date => '2009-01-02', subject => '111', }, { name => 'CCC', date => '2009-01-01', subject => '222', }, ); my $q = CGI->new(); my ($sort_key) = $q->param('sort_key'); if (( !defined $sort_key ) || ( ( $sort_key ne 'name' ) && ( $sort_key ne 'date' ) && ( $sort_key ne 'subject' ) ) ) { $sort_key = 'name'; } my @tables; foreach my $thread ( sort { $a->{$sort_key} cmp $b->{$sort_key} } @threads ) { push @tables, $q->p( "name = $thread->{name}, date = $thread->{date}, subject = $thread->{subject}" ); } print $q->header( -charset => 'UTF-8' ), $q->start_html( -lang => 'ja', -title => 'Sort' ), $q->a( { -href => $ENV{SCRIPT_NAME} . '?sort_key=name' }, 'Sort Name' ), $q->br, $q->a( { -href => $ENV{SCRIPT_NAME} . '?sort_key=date' }, 'Sort Date' ), $q->br, $q->a( { -href => $ENV{SCRIPT_NAME} . '?sort_key=subject' }, 'Sort Subject' ), $q->br, @tables, $q->end_html;
対象が $_ にあるとすれば, 範囲演算子 .. を使って print if /^2 parameter/ .. /^\}/; とも書けます.
意味がよくわからないんだけど, そう思う人は ML みたいな関数型言語がいいかもしれない.
submitボタンは<form method="post"></form>の内側に記述されていますか？同じページ内にformエリアが２つ以上あるとか。
その気になればなんとでも. 例えば $a =~ s/UPFILE([1-4])/"画像" . [qw(１ ２ ３ ４)]->[$1-1]/eg; とか.
いままで問題がなかったのですからContent-typeの問題とは考えにくいです。 ユーザー側のプロバイダ？の原因のような気がします。 やはり詳細のヒアリングをお勧めします。
ご質問が多少冗長気味ですので、正しく把握できたかどうかわかりませんが 察するに ・CGI にて、問題とその解答フォームを表示する ・ユーザーがその解答フォームを使用して解答。 その際、問題番号と解答時間(どちらかというと解答日時ですよね?)を保存できるように ・CGI で使用する問題ファイルはひとつに ・解答を保存するファイルも管理を容易に ということでしょうか。 であれば、私ならこうします。 1)問題ファイルをひとつにまとめる。 CSV 形式にて、問題番号、問題、解答を保存した問題ファイルを作成します。 2) "誰が解答したか"という情報が要るので、認証画面か、ユーザー ID の項目を作り、以後、それを使用する(hidden で埋め込むか、クッキーを用いるかはお好みで)。 3)ユーザーの解答を保存するファイルユーザー名を元にしたファイル名で作成し、そのファイルに、 これも CSV 形式で、解答日時、問題番号、解答を保存する。 上記のようにすれば、 > 同じファイルに複数の人がアクセスして解答するとき、 > アクセスした人とその結果を、テキストファイルなどに記録する > 簡単な方法はあるでしょうか？ このケースに対応する必要はなくなります。 初心者と書かれていますので、恐らくは難しく考えすぎているのでしょう。 もっとシンプルに考えれば、すんなり解決するかもしれませんよ。
単に for ループの中でパターンマッチング じゃダメ?
アップしたファイルを保存するディレクトリのパーミッションが、書き込み可能になっていますか？ html や cgi を置くディレクトリのパーミッションは、書き込み権限を落としてあることが多いように 思います。その場合は、open(OUT, ">$filename") ... の行で失敗します。
いちおう #3 の時点で「シンボルテーブルを読む」のは想定したんですけど, *b = \$a; とされてしまうと「シンボルテーブルを読んでも $a と $b を区別することができない」のであきらめました＞#4. っつ～か, この状況で $a と $b を区別する意味が私にはわかりませんが. そういう意味で「変数名が必要な状況」がわからないというのは同意. ALGOL ならよかったのにね.
$data = do {local $/ = undef; <IN> }; こう書けば、他の所の$/には影響しないです。
単純に連想配列を渡すだけではだめ (複数のスカラーを渡すのか配列を渡すのか連想配列を渡すのかの区別がつかない) だけど, 参照を渡すことにすればできます. 受け取った方では ref を使って「何が渡されたのか」を知る.
「if ( $input{'aaa'} !~ /^[A-Z]{2}$|^[A-Z]{2}\d{1}$/ ) { &Error("エラー"); }」 と「『&error("もう一度入力してください")』のサブルーチンに飛んでしまいます。」 の関係が分からんのだけど, どうなっているんでしょうか? あと, そのようにエラーになる場合の $input{'aaa'} の値はどうなっていますか? ちょっと確認する限り, 正規表現としてはそれで OK です. 「最終的にどこまで短く書けるか」というのは #2 にありますけどね.
foreach(@array1,@arrray2,@array3,@array4){ ・・・・・・ } で良いですか？ もしも処理中の要素がどの array の要素が知りたいなら、この方法じゃ無理ですが。 この件に限らず、Perlでは 配列を書くべき所には複数の配列やスカラ変数をカンマ区切りで書けます。 (場合によっては丸括弧でくくる必要あり)
参考までにこちらを見てみてはいかがでしょうか？ http://d.hatena.ne.jp/naoya/20050809/1123563794 最低限レベル７は超えてレベル８のCPANにバグレポートうんぬんはさておき Webアプリをある程度自由自在に作れていれば「俺は、perlが使えるぜ」 って言ってみてもよいのでは？　笑 webアプリをある程度なんてざっくり言ってみても それがMVCを理解しているのか、フレームワークが使えるのか DBを使いこなせるのかなどなど細かいとこを見ていくといろいろ あるので、一概の「webアプリつくれるぜ！」と言ってみても できる人から見ればどこが？ って場合もありますけどねぇ　汗
2つの文字列の違いはutf8フラグがついているかいないかです。 utf8フラグはperlが文字列として解釈できる内部コードに付くフラグなので、 内部コードであるか、そうでないかの違いと言うこともできます。 内部コード（utf8フラグがついた文字列）にはutf8が使われていますが、 utf8フラグの有無で挙動が変わるので、 実際にはutf8フラグがついた内部コードと、utf8フラグがついていないutf8バイト列は 別物と考えた方が分かりやすいです。 別物なので、外部から取ってきたデータがutf8のバイト列なら、 ちゃんとperlの内部コードに変換しなければなりません。 具体的には、 　my $decodedStrFromWeb = Encode::decode("utf8", $testStrFromWeb); として、utf8を内部コードにデコードします。 デコードすることでperlはそれを文字列として解釈できるようになります。 逆に内部コードを外部（ファイルなど）に出力するときには、 内部コードからutf8などにエンコードすることが望ましいです。 PerlIOレイヤを使えば、このようなエンコード・デコード処理はある程度透過的に行えます。 なお、内部コードが出現するべき文脈で 内部コード以外のバイト列（utf8フラグが付いていない文字列のこと）が出現した場合、 perlはそのバイト列を内部コードに自動的に変換します。 しかし、この自動変換ではバイト列をlatin-1文字コードによる文字列と見なしてdecodeするため たいていの場合予想外の変換結果になり文字化けしたように見えます。 例えば、 $utf8_flag . $no_utf8_flag; の様な文字列連結を行う場合、utf8フラグが付いていない文字列が自動変換されるので、 $utf8_flag . Encode::decode("latin-1", $no_utf8_flag); と書いたのと同じ事になります。 ###Sample### use utf8; use strict; use Jcode; use Encode; # ※標準出力にUTF8で出力する（PerlIOレイヤ） #binmode STDOUT, ":utf8"; # utf8フラグが付いていないバイト列 my $testStrFromWeb=Encode::encode("utf8","あいう"); #↓「あいう」と表示される。ただし※のコメントを外すと文字化けする。 print "testStrFromWeb:".$testStrFromWeb."\n"; #↓文字化けする。 print "testStrFromWebを表示:".$testStrFromWeb."\n"; my $strCode=$testStrFromWeb; $strCode =~ s/(.)/sprintf "%X", ord($1)/eg; #↓E38182E38184E38186と表示される print "$strCode\n"; my $getcode = Jcode::getcode(\$testStrFromWeb); #↓utf8と表示される print $getcode ,"\n"; # UTF-8を内部形式にデコードすれば、$testStrInPerlと同様に扱える。 my $decodedStrFromWeb = Encode::decode("utf8", $testStrFromWeb); # utf8フラグが付いている文字列（＝perlの内部形式） my $testStrInPerl="あいう"; #↓「あいう」と表示される。 print "testStrInPerl:".$testStrInPerl."\n"; my $strCode=$testStrInPerl; $strCode =~ s/(.)/sprintf "%X", ord($1)/eg; #↓304230443046と表示される print "$strCode\n"; my $getcode = Jcode::getcode(\$testStrInPerl); #↓utf8と表示される print $getcode ,"\n"; ###End### [参考] Perl 5.8.x Unicode関連 http://www.rwds.net/kuroita/program/Perl_unicode … UTF8 フラグあれこれ - daily dayflower http://d.hatena.ne.jp/dayflower/20080219/1203493 …
もちろん店舗ID から直接「その親店舗」を見付けることはできません. が, どんな方法を使っても結局のところ「なんらかの補助的な情報」は必要です. とはいえ, その「補助的な情報」そのものを店舗ID から調べることができればいいわけで, 端的には map { $index{$ID[$_]} = $_; } @ID; としてしまえば「店舗ID」と「配列 @ID に対する添字」を相互変換することができます. つまり, 店舗ID が $ID であるような店舗の親店舗は $ID[int(($index{$ID}-1)/N)] で得られます... 多分.
配列を使うってことは「1台の車に対して複数の行き先が存在する」ということでしょうか. さておき, そのこと自体は push @{$car[0]{cue}}, $elem; で可能です. この場合 @{} としなければならないことに注意.
$str =~ s/(?<!')((?>\w+))(?!')/sprintf("DDD(%s)", $1)/xmsge; でどうでしょう。
・テキストエディター ・FTPクライアント ・ローカルサーバ環境 いきなりレンタルサーバにアップしてバグでサーバダウンをして同じサーバ利用者に迷惑をかけないため
変数 $url が空でないときだけリンクをつけたいなら print "<div class=\"line_right\"><a href=\"$url\">\n$comment</a>" unless $url eq ''; でいいと思う. 「空白だけからなる」場合にどうしたいのかは知らない. でも「regist」はひどいなぁ.... 昔の FORTRAN じゃあるまいし, 無理に 6文字に詰めなくてもいいのに.
なるほど。 既に $comment =~ s/&amp;/&/g; $comment =~ s/&lt;/</g; $comment =~ s/&gt;/>/g; これと同じ処理がされているのですね。 それを外せばタグはタグとして実行されますが、XSSなどの危険性は覚悟してください。
ほぼ、既に答が出ているようですが、cygwinのperlでは改行コードを0x0A で、data.txtはdos形式の改行だからということのようですね。 以下のように入力セパレータが0x0Aで、dos形式のファイルをchompして も、0x0Dが残ることがわかります。 $ cat check_chomp.pl #!/usr/bin/perl use warnings; use strict; print "--- Now Return Code\n"; print_char_cord($/); my $file = shift || 'data.txt'; open my $fh, '<', $file or die "$file: $!"; while ( my $line = <$fh> ) { print "\n--- Before chomp\n"; print_char_cord($line); chomp $line; print "\n--- After chomp\n"; print_char_cord($line); } close $fh or die "$file: $!"; sub print_char_cord { my $str = shift; while ( $str =~ m/^(.)(.*)/s ) { printf( "%s = 0x%X\n", $1, ord $1 ); $str = $2; } print "\n"; } $ perl check_chomp.pl ~/tmp/data.txt --- Now Return Code = 0xA --- Before chomp a = 0x61 b = 0x62 c = 0x63 = 0xD = 0xA --- After chomp a = 0x61 b = 0x62 c = 0x63 = 0xD --- Before chomp d = 0x64 e = 0x65 f = 0x66 g = 0x67 h = 0x68 = 0xD = 0xA --- After chomp d = 0x64 e = 0x65 f = 0x66 g = 0x67 h = 0x68 = 0xD ワンライナーでchompしたいときは、例えば次のように$/を変えてやれば、 OKです。 $ perl -nle '@chars= split(//, $_); print join(",",@chars);' ~/tmp/data.txt a,b,c, d,e,f,g,h, $ perl -nle 'BEGIN{$/="\x0D\x0A"} @chars= split(//, $_); print join(",",@chars);' ~/tmp/data.txt a,b,c d,e,f,g,h $
暗号化されます。 どうしても気になる場合、Etherealなどのフリーソフトで、 通信をキャプチャしてデータをチェックしてみると良いでしょう。
・「並び順はあらかじめ決まっている」ということですが, 並び順はどのように与えるのですか? ・「元データに存在しないキー」は誰がどのように与えるのですか? ・今はどの行も 4個のデータからできていますが, 「異なる個数になる」とか「行ごとに異なる」とかいうことはありますか? 最低限これくらいはないとスクリプトの書きようがないですね. tanpopo なんていったいどこから出てきたものやら.
Locationで呼び出すHTMLの後ろにランダムな引数を渡してやればどうでしょう。 print "Location: foo.html\n\n"; を my $time = time; print "Location: foo.html?$time\n\n";
>外部ファイルの使用については大丈夫だと思います． >そこで，外部ファイルというのは具体的にどのようなファイルでしょうか？ 複数の単語を１つにまとめるための情報を定義したものです。（辞書ファイルのようなものと考えて下さい） 記述の方法は、これから自分で決めることになります。１つの例として、（これが実用に耐えることを意味しませんが）以下のような記述があげられます。三毛猫、ドラ猫のように最後の１文字が猫であるものを、１つのグループにししたい場合、*猫のように定義します。 ここで、*とは何でも良い文字（ワイルドカード）という意味です。 従って、 *猫 *犬 とすれは、最後が猫、犬で終わるものに関する定義をおこなったことになります。尚、*はひとつの例で、この文字をかならず使う必要はありません。また、この場合、野良猫と海猫も*猫にマッチしますが、海猫は除きたいと言う場合は、そのような情報も必要になります。
「URLを上から順に引っ張ってくる」の意味が今ひとつよくわからないんだけど, 「1行ずつ読み込む」と解釈すれば open my $fh, '<', 'utl.txt'; while (my $url = <$fh>) { chomp $url; ファイルを取得してなんかする } close $fh; という形でいいんじゃないかな.
infoseekでは http、ftp以外は独自に socketが使えないと思いますから無理じゃないですか。
$pattern は index 関数の引数にもなっているので '*' のままとし、 if ($_ =~ /\Q$pattern/) または if ($_ =~ /[$pattern]/) のようにすれば、うまくいくように思います。
たぶんjavascriptを使わないとできません。javascriptは得意で ないのでかなり冗長かもしれませんが、以下の内容をCGIで出力すれば よいと思います。charsetをUTF-8にしているので、実行するときはUTF-8 で保存して下さい。重要なところは、画面を表示するときにonloadで set_input_focus()を呼んで、textbox.setSelectionRange(2, 2)で 2文字目にインプットフォーカスを動かしているところです。 --- <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja"> <head> <title>タイピング</title> <script type="text/javascript">//<![CDATA[ function set_input_focus() { var textbox = document.form1.input; textbox.focus(); textbox.setSelectionRange(2, 2); } //]]></script> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> </head> <body onload="set_input_focus()" charset="UTF-8"> <h1> こんにちは </h1> <hr /> <form method="post" action="/cgi-perl/javascript/typing.cgi" enctype="multipart/form-data" name="form1"> <input type="text" name="input" value="herro" /><input type="submit" name="Send" value="Send" /></form><p> herroはheまで合ってます </p> </body> </html>
flashはよくわかりせんが、 2.CGIにて受信後、受信した文字をopenで保存（.txtファイル作成） については、次のようにすればできます。 --- #!/usr/bin/perl -T use warnings; use strict; use CGI; use CGI::Carp qw(fatalsToBrowser); my $file_name = '/tmp/x-www-form-urlencoded.txt'; my $q = CGI->new(); my ($text_data) = $q->param('text_data'); open my $fh, '>', $file_name or croak "$file_name: $!"; binmode $fh; print $fh $text_data; close $fh or croak "$file_name: $!"; # 確認用出力 print $q->header( -type => 'text/plain', -charset => 'UTF-8' ); print "filename $file_name:\n"; print "text_data value:\n"; print "---\n"; print $text_data, "\n"; --- my $file_name = '/tmp/x-www-form-urlencoded.txt'; と $q->param('text_data') は環境に合わせることになると思います。 flashで var lv: LoadVars = new LoadVars(); lv.xxxx = テキストデータ とすると $q->param('xxxx') とかになるんでしょうかね htmlでこのCGIプログラムの動作を確認するときは、次のようにします。 前のCGIファイルの名前をx_www_form_urlencoded.cgiとして、htmlファイ ルとCGIファイルが同じ階層のディレクトリにあるとしています。 --- <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitio … <html xmlns="http://www.w3.org/1999/xhtml"> <head> <meta http-equiv="Content-Type" content="text/html;charset=utf-8" /> <title>x-www-form-urlencoded test</title> </head> <body> <h1>input test</h1> <form action="x_www_form_urlencoded.cgi" method="POST"> <p> data: <input type="TEXT" name="text_data" enctype ="application/x-www-form-urlencoded"><br/> </p> <HR> <input type="submit" value="Submit Registration Info"> </form> </body> </html>
考えられるエラーの原因は次の2点ですね。 (1) EOM の前にスペースがある (2) サブルーチンの呼び出し方が間違っている 　　head(); それと、ヒアドキメントを使うなら、Content-type: text/html\n もその中に入れれば良いのでは、、、 print <<"EOM"; Content-type: text/html\n <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
ファイル名の文字コード（通常はOSの標準文字コードと一致するので、Windowsならsjis、Linuxならeuc）と、 "$input"に入っている文字列の文字コードを統一させて下さい。 HTMLフォームから送信されたデータは、殆どの場合、HTMLファイルの文字コードが使われます。 HTMLフォームを使って送信すると、ブラウザが自動的にURLエンコードしますので、 CGIはそれをURLデコードした後で、文字コードを変換して下さい。 URLデコードの処理はCGI.pmが、文字コードの変換はEncode.pmが使いやすいと思います。
$str = '　あいうえabcoaお ▲3+'; if( $str =~ /お/ ){ print "マッチ"; }else{ print "マッチしない"; } としたらマッチしたので、アルファベット以外のでもマッチすると思いますが。
＞ &#x8A2D;&#x5B9A; これは文字数値参照コードです。 16進ユニコード u+8A2D u+5B9A ですから 次のコードで変換できると思います。 use Jcode; $uni='&#x8A2D;&#x5B9A;'; $uni=~s/&#x([0-9A-F]+);/chr(hex $1)/ieg; print Jcode::convert(\$uni,'sjis'); 参考URL：http://webmastertool.jp/ccc.plx
すみません。 補足です。 標準入出力ファイルはデバイスファイルのくくりでした。 混乱させてすいません。
SMTPサーバーを外部にする以外の解決方法もあるのでコメントしました。 ただし、ホスティングの環境に依存してしまうため、 場合によっては有効な手段ではないかもしれません。 １つの解決方法ですが、DNSの設定を入れることです。ホスティング環境の名前解決で使用しているネームサーバー（レゾルバ）のmxレコードの設定で自社環境のIPを指定するということです。 ただしこれはホスティングの環境に依存してしまいますので有効な解決策かどうかは試してみないとわかりません。 （WEBの設定とメールの設定が連動しているとできないと思われます） ２つめの方法としては転送することで回避することができるかもしれません。（但し、これも環境に依存してしまいます） ホスティング環境のメールアカウントに転送設定をかけて、サブドメインに転送するようにします。(aaa@jisha.xxxx.co.jp) サブドメインのAレコードもMXレコードも自社側のサーバーをしておきます。 自社サーバー側でサブドメインでもメールを受信できるようにしておけばメールの受信ができると思います。 参考になりましたら。
エラーメッセージを見れば分かりますが, use Check; の時点では @INC が変更されていません. なぜかというと, use はコンパイル時に処理されるのに対し unshift は実行時に処理されるからです. つまり, 今の場合「字面としては unshift が前にある」が実行の順序としては「use Check; が先」なのでうまくいきません. use lib 'o:/public_html/post_service/cgi/lib'; とするか, BEGIN ブロックに入れればよかったような気がします.
これだけではわかりませんが、 サーバーのエラーログはどうなってますか？ ローカルでテストした結果は？ $ perl index.cgi ローカルサーバーでの結果は？ 　http://local.host/index.cgi?mou=1
$flg = 0; open(DB,"$memfile") || &error("Can't write $memfile"); eval{flock(IN,1);}; $Mes = "該当の名前<br>"; while(<DB>){ ($name,$add,$mail) = split(/,/); if(index($name,$keyword) >= 0){ $Mes .= "・$name<br>"; $flg = 1; } } close(DB); #表示 if($flg){ print $Mes; }else{ print "該当しませんでした"; } これでできると思います。 気になる点は 1.splitが<>で区切っている 2.$start .. $endになにが代入されているか です。 中2の回答なので変なところはあると思いますが参考までに。
NULL文字を入れているのって、同じフォーム名を複数使った場合の区切り文字ってことはないですか？ ソースコードを細かく追ったわけではないので違っていたらごめんなさい。 よくフォームのデコード処理でNULL文字は区切り文字として使われることが多いので。 参考になりましたら。
既にファイルが存在する場合には、ファイル名を変えるという処理の場合だとこんな感じです。（効率はあまりよくないですが・・・） # 最大100個まで対応 foreach my $i ( 1 .. 100) { $filename = $gazouno . "-$i"; if ( -e $filename ) { #既にファイルがあったら次の番号でトライ next; } else { #ファイルがなかったら $ok_filename = $filename; } } if ( $ok_filename eq '') { &error('既にファイルが100個保存されています'); } else { open(FILE,">$ok_filename"); print FILE ${***DATA***}; close(FILE); } 効率をよくするのであれば、ファイル保存をするたびに$countに数を足していくのがいいかと思います。 ++$count; $filename = $gazouno . "-$count"; なお、timeだと同じ時間にUPされてしまうとファイル名がかぶってしまうので、$gazouno = $^T . $$;にするといいと思いますよ（長いですが）。 $^Tは時刻、$$はプロセス番号です。 参考になりましたら。
> 表示する数は10個を設定しているのに1個しか表示できないのです。 > if ( $SMAX < $max ) { $n = $max - $SMAX; } > if ( $CMAX < $max ) { $n = $max - $CMAX; } > の「<」と「-」が怪しいのでは、と思ってます。 if 文自体に問題があるとは思えません。print 文を使って、変数の中身を確認してみてはどうで しょうか。 > if ( $CMAX < $max ) { $n = $max - $CMAX; } > else { $n = 0; } > > print "Content-type: text/html\n\n"; > for ( ; $n < $max; $n++ ) { > print $list[$n]."\n"; > } 上記の書き方は、HTML タグが含まれていないのでブラウザの表示が非常に見にくいと思います。 print $list[$n]."\n"; の \n はブラウザのソースが改行されるだけであり、($list[$n] に HTML タグが含まれていなければ) ブラウザの表示上は改行されません。たとえ 10 個が表示されたとし ても、まとめて１行で表示されることになります。少し書き直してみましたので、参考にしてみて ください。 if ( $CMAX < $max ) { $n = $max - $CMAX; } else { $n = 0; } print "Content-type: text/html\n\n"; print "<p>\$n($n) = \$max($max) - \$CMAX($CMAX)</p>\n"; print "<ol>\n"; for ( ; $n < $max; $n++) { print "<li>$list[$n]</li>\n"; } print "</ol>\n";
if($string != m/-Hoge/){print '!=>',$string;} でなくて if($string !~ m/-Hoge/){print '!=>',$string;} だと思います。
後の行のデータを前の行の末尾に追加するには、１行毎の処理ができませんので、 一時的な配列を利用する等になるかと思います。以下は、簡単なコード例です。 use strict; my @block = (); while (my $line = <DATA>) { if ($line =~ /^アルファベット/) { print "$block[0]\n", @block[1 .. $#block] if @block; chomp $line; @block = ($line); } else { $block[0] .= substr($line, 1, 1); push @block, $line; } print "$block[0]\n", @block[1 .. $#block] if eof; } __DATA__ アルファベット= 1A 2B 3C アルファベット= 1A 2B アルファベット= 1A 2B 3C 4D 5E 6F
Access では、末尾の半角スペースは保存時に削除されるというのが仕様です。 解決法としては、定型入力 プロパティを & と設定することで、 半角スペースも保存することができます。 アクセスファイルには半角スペースが保存されていますか？ 安全に対処するのであれば保存時に半角スペースは別文字に変えておくのがいいと思います。 本質的な解決策ではないですが・・・・ 参考になりましたら。
#!/usr/bin/perl use warnings; use strict; # Example of Loading CGI Module dynamically my $module = 'CGI'; eval qq ( require $module; import $module; ); my $q = CGI->new(); 参考URL：http://blog.clouder.jp/archives/000184.html
readdir でリスティングさせてご要望のような形にするとしたら 例えば配列@listに全ファイル名を代入 @listをforeachで回して下のようにprintを繰り返す ----------------------------------------------- 　　ファイル名１　　　　　　　｜　□　←ファイルアイコン(クリックでダイアログ表示) ファイルアイコンのリンク先はエクセルをダウンロードさせる為のCGIです。同じCGIでサブルーチンを用意すれば良いと思います。 GETでファイル名を渡せばＯＫですね。 エクセルをダウンロードさせる為のサブルーチンは下のような形でしょうか。 sub dlwork { # ファイルのパスとダウンロードする時のファイル名を引数から受け取る my$filepath = shift @_; my$filename = shift @_; # 確認ダイヤログ表示用にHTTPヘッダ送信 print qq|Content-type: application/vnd.ms-excel\n|; print qq|Content-Disposition: attachment; filename="ファイル名"\n|; print qq|\n|; # 該当ファイルを一度読み込んで出力 open(FILE,"$filepath"); while(<FILE>){ print; } close(FILE); } エクセル以外の時はそのファイルに合わせたヘッダーの条件分岐が必要ですね。 htaccessでヘッダー指定ができたら良いのですが、ＩＥだとhtaccessのヘッダー出力を無視するんですね。 マルチパートでのアップロードに関しては参考URLがものすごい解り易いです。 解らない所があったらご自分の言葉で構いませんので出来るだけ具体的にご質問下さい。 参考URL：http://www.ss.iij4u.or.jp/~somali/web/_perl_uplo …
$data[0] は "222,問題番号,999,2009年6月22日 22時40分13秒\n" のような文字列ですよね。これに +1 するのは、perl だからできるものの 少し乱暴ではありませんか。最初の数字の部分を取り出して、+1 しましょ う。 例えば、 my ($data2) = split /,/, $data[0], 2; $data2++; のように。
自信がないんですが、量指定子と紛らわしいといっているんだと思いま す。以下の例なら何も言われませんでした。参考URLも参考になると思いま す use warnings; use strict; our $COOKIE_PREFIX = 'aaa'; my $name = 'aaaa_bbb'; # Quantifier follows nothing in regex; ... # 量指定子{}と紛らわしい ? # if ( not $name =~ /$main::{COOKIE_PREFIX}_(.+)/ ) { # print "test1\n"; # } # else { # print "test2\n"; # } # 何も言われない if ( not $name =~ /${main::COOKIE_PREFIX}_(.+)/ ) { print "test1\n"; } else { print "test2\n"; } 参考URL：http://perldoc.jp/docs/perl/5.10.0/perldiag.pod
$num = 1.18; $num /= 0.25; if($num%1){ $num = int($num+1); } $num *= 0.25;
やりたい事が良くわからないのですが、ひとつの事をする為のファイルが Shellスクリプト と Perlスクリプトの 2本になるのがヤな訳ですか？ > 複雑なことをすると-eオプションでは動いてくれないみたいなのです。 複雑な事って、 「'」を含んだり改行を入れたいって事ですか? Shellの種類にもよりますが、POSIX Shell なら以下でどうですか？ #! /usr/bin/sh echo This is Shell output. perl <<EOF print "This is Perl output.\n"; print "I can use ' and \".\n"; print "I can use multi line.\n"; EOF echo This is Shell output 2.
スクリプト自体には問題はなくて、CGI側で何かの条件で弾いているのかも しれません(例えば UserAgentなど)。 参考にあるかどうかわりませんが、 動作確認した結果をはっておきます。 ### html <form action="/URL" を <form action="MechanizeTest.cgi" に変更 その他テスト用に変更 ### MechanizeTest.cgi #!/usr/bin/perl -T use warnings; use strict; use CGI; use CGI::Carp; my $q = new CGI; print $q->header("text/plain"); print "These are the parameters I received:\n\n"; my @params = $q->param; foreach my $param (@params) { print "$param:\n"; my @values = $q->param($param); foreach my $value (@values) { print " $value\n"; } } ### Mechanize.pl ...... # Get HTML Contents print '-- HTML Form', "\n"; $mech->get($uri) or die "$!"; print $mech->content(); # Send Form print '-- Send Form', "\n"; $mech->submit_form( form_number => 1, fields => { 0 => '1', 1 => '2' }, ) or die "$!"; print $mech->content(); ### 結果 -- HTML Form <html><head><title> T i t l e</title></head><body> Second Level Title<br><br> <form action="MechanizeTest.cgi" method="post"> <input type="hidden" name="NAME" value="ABCD"> [Third Level Title 1] <br><select name="0"> <option value="0">AAA</option> <option value="1">BBB</option> <option value="2">CCC</option> <option value="3">DDD</option> </select><br> [Third Level Title 2]<br> <select name="1"> <option value="0">AAA</option> <option value="1">BBB</option> <option value="2">CCC</option> </select><br> <input type="submit" value="Display"></form> <hr>Not Found Data<br><hr> <a href="http://www.google.co.jp">link test</a> </html> -- Send Form These are the parameters I received: NAME: ABCD 0: 1 1: 2
> フォームから送信されてくる名前＝$in{'name'}　の読み名がわからない 連想配列(ハッシュ)変数です。 $in{'name_1'} は、「ハッシュ変数 %in の、キー'name_1'の値」です。 このキー(添字)部分をperl のコードとして変数を元に生成すればいいだけです。質問者さんのコードでは、$in{'name_$i'} となっていますが、 シングルクオート(')で囲まれた中身は「文字列」で、変数展開されませんから、そのままの「name_$i」というキーでの参照になっています。 これを、 'name_'.$i とすれば、「name_」という文字列と、変数$i を連結(演算子 . )したものである、「name_1」などをキーとして参照できます。 あと、for でループしているなら、現在値は $_ で参照できますから、変数$iを使わなくてもいいので、まとめると ---ここから--- foreach (1..3) { print "$in{'name_'.$_}"; } ---ここまで--- となります。
コードに use warnings が入っているのですよね。 デバッグも済んでいるのでしたら、 no warnings qw ( uninitialized ); で、この警告の表示を抑制してもよいと思います。
基本的に日本語は使えないと思ってください。 URLエンコードをすれば使えるかもしれません。
こんな感じでしょうか？ @{$sort} = sort {$a->{'num'} <=> $b->{'num'}} @{$data};
> しかし、画像の枚数が1回実行すると２枚少なくなり > 再度実行すると今度は６枚少なくなってしまいます ・rename は、変更先と同名のファイルが既に存在していた場合、そのファイルは消えてしまいます。 ・cmp は、文字列的にソートしますが、$k.'.jpg' で生成されるファイル名は、ソートすると順番が変わります。 たとえば、0.jpg～12.jpg の13ファイルある場合、 これをソートすると、 0.jpg 1.jpg 10.jpg 11.jpg 12.jpg 2.jpg … 9.jpg という順番になります。 これを、0.jpg～12.jpg にrenameすると、 rename("0.jpg", "0.jpg"); #なにも起きない rename("1.jpg", "1.jpg"); #なにも起きない rename("10.jpg", "2.jpg"); #これで、2.jpg が消える rename("11.jpg", "3.jpg"); #これで、3.jpg が消える rename("12.jpg", "4.jpg"); #これで、4.jpg が消える rename("2.jpg", "5.jpg"); #これで、5.jpg が消える 以下略 といったことになります。 ファイルが消えるのを防ぐためには、 ・作業用のディレクトリを作成し、対象ファイルを一旦そちらに移動する などの操作が必要があります。 ---ここから--- $tempdir = "tempdir".$$; $num=0; while (-d $tempdir) { $tempdir = "tempdir".($num++); } mkdir($tempdir); foreach(@SDATA) { rename("./abc/$_", "$tempdir/$_"); } for ($k=0; $k<@SDATA; $k++) { $new = $k.'.jpg'; rename ("$tempdir/$SDATA[$k]", "./abc/$new"); print "rename '$SDATA[$k]', '$new'\n"; } rmdir($tempdir); ---ここまで--- といった感じで。
そりゃ当然でしょう. 内側の while ループを抜けたあとで FILE から読めるってのも変でしょ? FILE をオープンしなおすか seek FILE, 0, 0; が必要じゃないですかね.
"Content-type: text/html;"の出力が、print "Set-Cookie: ";の後ろになっ ていませんか？もし、そうであれば、"Content-type: text/html;"を前に持っ てきてみて下さい。
CPANやapt-getなどでTerm::ReadLine::Gnuをインストールしてください
　use Calendar::Simple; 　use CGI::Carp qw(fatalsToBrowser); を 　use CGI::Carp qw(fatalsToBrowser); 　use Calendar::Simple; とすればどうか
my $localValueの所をour $localValueとし、doAnything内で$MyBase::localValueのようすればその変数に直接アクセスできます。 ourはパッケージ変数を宣言するものです。 パッケージ変数については参考URLをどうぞ。 http://www.google.co.jp/search?hl=ja&q=perl+%83p …[%83W%95%CF%90%94&lr=lang_ja http://d.hatena.ne.jp/perlcodesample/20080308/12 …
一番基本的なことですが、 ＞for ( $cnt=0 ; $cnt<2 ; $cnt++) ＞{ ＞} これをはずすと正常に動作するのでしょうか？
管理者権限付きのサーバーですか。 色々と構築する前に、バックアップをしましょう。 失敗しても元の環境に戻せるよう確認しましょう。 私も最初は何十回も再インストールのリカバリ続きでしたよ。(T_T) 頑張って下さい。
#!/usr/bin/perl my $foo = '漢字　日本'; # デコード $foo =~ s/([^\w ])/'%' . unpack('H2', $1)/eg; $foo =~ tr/ /+/; print "デコード：$foo\n\n"; # エンコード $foo =~ tr/+/ /; $foo =~ s/%([0-9A-Fa-f][0-9A-Fa-f])/pack('H2', $1)/eg; print "エンコード：$foo\n\n"; exit;
確かに激しくヘンな Makefile だと思います。 趣旨・目的が判らないので修正提案は本当はできないんですが、あえて当てずっぽうで直してみると... 誤> all:a a 正> all: a a.pl 誤> allrun:a a 正> allrun: a a.pl ./a.pl 誤> ./a.out 正> ./a clean: -rm ./a 誤> -rm ./a 削除> でしょうか？
ぱっと見、あっているようです。$numと@DELに意図した値が入っていないの かもしれません。 foreach $del (@DEL) { のあとで、$numと$delをprintし てみるかデバッガで見ると何かわかるかもしれませんね。
#usr/bin/perl my $foo = 'hiada1-6fihoaidu5-6'; $foo =~ s/([a-z]\d-\d)/ $1 /g; print $foo; #-> hiad a1-6 fihoaid u5-6
これソフトじゃないです。スクリプトです。 Perlでかかれたスクリプトなので、Perlが動く環境を準備して、スクリプトとして実行します。 MacでもPerlインストールはできますが、ふつうのソフトウェアじゃないのでそれなり知識はいります。 後者はサーバ上で動くので、CGIを設置できる知識とサーバを使えれば利用できます。 ちょっと調べましたが簡単な方法ってあまりないですね・・・。
Telnetログインできる機器であれば Net::Telnetモジュールを使用すれば、ユーザ名が聞かれても ログインしコマンドを実行することが可能です。 (SSHであればNet::SSHってのもあります。) (例) #!/usr/bin/perl use strict; use warnings; use Net::Telnet; my $host = "hostname"; my $pass = "password"; #ホストに接続しログイン my $telnet = new Net::Telnet(Timeout => 10); $telnet->open($host); $telnet->login($user,$pass); #コマンド実行(dateコマンドを実行) my @result = $telnet->cmd("date"); print "@result\n"; #ログアウトし切断 $telnet->cmd("exit"); $telnet->close; exit; ※使い方の詳細はperldocやcpanで確認してください。
> open(MAIL,"|$sendmail $address"); > print MAIL $message; > print MAIL "BCC: $bcc_address\n"; > close(MAIL); これだと、本文($message)の末尾に「BCC: …」という行が追加されるだけです。 送信先は sendmail の引数で指定しますから、 > open(MAIL,"|$sendmail $address $bcc_address"); > print MAIL $message; > close(MAIL); と、bccのメールアドレスも引数に追加しておけば、 そちらにもメールが届くようになります。 それと、 > $message = <<EOF; > Subject: 質問 > From: $email > Errors-to: $email > Reply-To: $email ここに、 > To: $address という行は追加しておくべきでしょう。 このままでは、メール内に宛先が入ってません。 いわば、$address の方にも Bcc で送っているような状況です。 それと、 ・Subject: は、Mime エンコードするべき ・MIME ヘッダ(MIME-Version、Content-Type、Content-Transfer-Encoding)を付けるべき かと思います。
宛先に届いたメールには、末尾に Bcc: bccbcc@gmail.com と書かれていることでしょう。 Bccはヘッダに書かれていなくてはなりません ヘッダとボディは空行で区切られるのでReply-Toの次にある空行でヘッダは終わりです 空行より前にBccを書きましょう しかしこんなことなどどうでも良いほどの大問題がありますね $in{'address'}をチェックして自社以外には送らないようにしなさい このままではspamの踏み台間違いなし Subjectに日本語を使うならエンコードしなさい
あれ? rename 'backlog3' 'backlog2'; なんかじゃダメなんだったっけ＞#1.
＞普通の？皆からブラウザでアクセスしてもらうための方法ということで、 ＞HTTPクライアントを作成しないで、ブラウザからのみでアクセスできる方法を探しています。 なるほどそうでしたか。 ＞何かこの9999@hogeというのをつける方法に関して良い情報が他にもありましたらぜひ教えてください。 その方法ですが、No.1の方も書かれているとおり、 今後は使えなくなっていく可能性が高いです。 Basic認証ではなく、たとえばCGIを使った認証などに切り替えられるなら、 切り替えていかれたほうが良いかも知れません。
ハッシュで数えればいいのでは. my %count; while (my $line = <>) { $count{$_}++ for split ' ', $line; } とか.
sendmail は実行結果を exit status に返すので、 呼び出し側でそれを見れば、ある程度の状況判断は可能です。 http://www.linux.or.jp/JM/html/sendmail/man8/sen … > EX_OK > すべてのアドレスについて完全に成功しました。 > EX_NOUSER > ユーザ名が認識できません。 > EX_UNAVAILABLE > 処理に必要なリソースを得ることができません。 > EX_SYNTAX > アドレスに文法的な間違いがあります。 > EX_SOFTWARE > 引数が間違っているなどの、内部的なエラーです。 > EX_OSERR > ``cannot fork''' のような、一時的な OS エラーです。 > EX_NOHOST > ホスト名が認識できません。 > EX_TEMPFAIL > メッセージはすぐには送られませんでしたが、キューには入れられました。 perl側で $? をチェックして、エラーになったときはしばらく待ってから再チャレンジするようにしてはどうでしょうか。
単純に $hex=sprintf("%06X",$decimal); フラグにて　0 数値の前を0で埋める。 　　　　　　6　その桁数 　　　　　　X　16進数(大文字) では?　
たぶんキーに直接 $h{$key+0} と書いてもいいんじゃないかな. 値を考える限り「1 を掛ける」でも同じはずなんですが, 通例「0 を足す」と思います. 「文字列から数値への変換関数」をオーバーロードしたいときも「+0」というキーで表されますし.
えぇと.... <@data> とか <@out> とかで何をしたいのでしょうか＞#4. こんなところでグロブする必要性は見えないのですが.... あと, @ARGV は Perl の変数であって「環境変数」じゃないよ. 環境変数は %ENV からアクセスする. まあ #3 では変な方向に走ったけど, わかりやすくするなら #2 のように ・「。」で split する ・それぞれの個数をハッシュで数える ・ハッシュのデータを出力する という方針でいくべきでしょうね.これ全体を while (<>) でくくればほぼんど OK.
for文と言えば、 for(my $i=0, $i<@hoge.length; $i++){ 　#何かの処理 } を想像されるかもしれませんが、foreach文のeachを省略しても perlは、foreach文だなっと解釈して処理してくれます。 つまり省略せずにきちんと書くと foreach my $value ( 1..$winfo{'LIMIT'} ) { my ( $wkey ) = sprintf( "%03d",$value ); $wnum{ $wkey } = sprintf( "%s名",$value ); } のようになり上記の場合 (1..$winfo{'LIMIT'})の１個１個の要素が $valueに格納されて処理がループされるところが my $valueの部分を省略すると暗黙的に$_に格納されることを利用して foreach ( 1..$winfo{'LIMIT'} ) { my ( $wkey ) = sprintf( "%03d",$_ ); $wnum{ $wkey } = sprintf( "%s名",$_ ); } となりforeachはforと書いてもperlではforeachだと認識してくれるので for ( 1..$winfo{'LIMIT'} ) { my ( $wkey ) = sprintf( "%03d",$_ ); $wnum{ $wkey } = sprintf( "%s名",$_ ); } となってます。 ( 1..$winfo{'LIMIT'} )の中身は他の方より説明がありますので 省略させてもらいます。 perlでは省略形式がやたらと多いんで最初は戸惑うことが多いかと思いますが、案外すぐになれることができますんでがんばってください！
僕も前似たようなことしたのでお答えさせていただきます 僕のケースは検索結果が違うのは間違いでした totalResultsAvailableの項目を抜き出してみてください ちゃんとUTFの方のページと同じ数字になるはずです 多分僕と同じキーワードで同じURLをチェックしたのだと思います 僕のケースだとフラグの立て方が甘くて１回目をスルーして２回目の結果がヒットしてちょうどshift-jisの方と似たような位置にあったので間違えました 参考になれば幸いです 下記に参考ページのリンクも掲載していますのでチェックしていてみてください 参考URL：http://www.geekpage.jp/web/yahoo-developer/
拝見したところ必要な情報は、税込みの2100円ということですので スマートな方法としてPerlのパターンマッチ演算子(m//)を使い、ここで必要な値(2100円)を取得する事ができます。 あとは取得した値の前に"[単価]"文字列を追加します。 以下の内容でいかがでしょうか。ご参考になればと思います。 #!/usr/bin/perl use strict; use warnings; use utf8; my $text = '金額＝(税抜2000円)2100円'; my ($zeikomi) = $text =~ m/(\d+円)$/; print '[単価]'. $zeikomi;
Unicode ブロック指定の \p{InKatakana} なんかが使えると楽かも.
「４文字」というのが、どの文字コードの「４文字」なのかによって違ってきます。
すでに良い回答が付いているので、ひとつだけ。 > $obj->decode($bytes) > $objという文字コードで記述されている$bytesという文字列をutf-8に変換したもの、という意味なはず。 Perlの内部形式が UTF-8 であるからにはそうとも言えますが、違う理解をした方が良いですよ。 $obj->decode($bytes) は、「$objという文字コードで記述されている$bytesという文字列を内部形式にインポートする」ものと理解してください。 実際、$bytesという文字列が元々 UTF-8 であっても、decode() してはじめて内部形式として使用できます。 そのあたりの理解が進むまでは、「内部形式は、既知のどの文字コードとも異なる」と思っていた方が、うまくいくケースが多いと思います。 私が言う内部形式というのはマニュアルでは「UTF-8フラグが付いた文字列」とか言う表現になりますが、私はこのネーミングは入門者に優しくないと思っています。
個人情報やらあるのかもしれませんが、できるだけ詳しく状況を書いていただかないと どうにも答えられないと思います。 その予約システムを動作させているマシンが「サーバー」で、 いままで X というサーバーで動かしているときには問題はなかったけど Y というサーバーで動かすようにしたら問題が出たということでしょうか? >/home/sites/FQDNドメイン名/ユーザーＩＤ/ファイルの場所 これは、その「サーバー」のディスクでの置き場所ですよね。 マシンを変えてレスポンスタイムがどうこうという話なら、 Perlのスクリプトのつくりがどうこう言う前に、そのマシンの性能を 比較してどうとか、実はNFSにファイルが置かれるようになったとか いくつか思いつかないでもないですが、いずれにしても 今回の補足程度のものしかだしていただけないのなら、 こちらとしても考えるだけ無駄ということになってしまいます。
Perl5.8 環境では、 Jcode は内部的に Encode に全面依存するので Jcode.pm ファイルのみ @INC 上に置けば良い筈です。 にもかかわらず 「Can't locate Jcode/_Classic.pm」 と言うのは、何かヘンですね。 Perl のバージョンであるとか Encode.pm が健全かとか調べるのが良いと思います。 # 質問のタイトルは内容を表わすものにしましょうね。 そうでないと、全く本文を読まない人とか回答できるのにしない人が増えそうですよ。 今回なら、「Can't locate Jcode/_Classic.pm in @INC」でも良いでしょう。
そうですねぇ。 課題ですので、調べごとをしつつがんばってみましょう^^ 下記に考えの道筋の助けになると思うことを書いてみますね。 まずは、問題を分解して考えて一つずつクリアしていきましょう。 ＞１つのサイコロを振ったとき さいころが登場するので、乱数をつかって１～６の数字が 出るようにするにはどうしたらようでしょうか？ 見方をかえると６個の数字を乱数で再現できればよいので… ０から・・・にひと手間加えるってことでよさそうですね。 ＞３以下の数字が出た場合，もう一度サイコロを振っても良いものとする． どうやら、最大２回さいころを触れるようですね。 for文を使うと1回目2回目とカウントできそうですね。 ただし、2回目に行くには3以下でないといけないので for文の中にif文で3以下かそうじゃないか調べる必要がありますね。 つまり、for文の中で最初に調べた乱数を用いたサイコロを 実行して値を出してそれを判別してあげればよいと思います。 3以下ならそのままで、4以上ならfor文を抜けることを考えましょう。 ＞合計が６になる確率 合計がと言っているので、さいころ(乱数を用いたさいころ)を振るたびに 数値を保存する変数が必要そうですね。上で話に出たfor文の中で乱数で 作ったサイコロを振るたびに足し算してあげるとよいですね。 for文を抜けたら6以上かそうじゃないかをif文で調べると 6以上になった時の回数をしることができます。 ここまで、できたら答えは目前ですね。 上記の内容で１回（３以下が出たらもう一回振ることも含めて）のサイクルができました。 知りたい内容は、確立なので1000回とか1万回繰り返した際に実際に 何回6以上になることがあるかを調べればプログラムを使ってもとめた ことになると思うので、上記プログラムをfor文の中に収めて 1000回とか1万回繰り返してみるとある値(確立)に収束すると思うので 最後に6以上になった回数/for文で繰り返した数　で確立が出ると思います。 大筋はこんな感じ。 for(){ ←1000回/1万回と回数を増やして試してみる。 　for(){　←３以下の時もう１回振れるようにしておく。 　　乱数をつかってさいころを再現。 　　サイコロの値を足し算する。 　　if(){ 　　　４以上ならfor文を抜ける 　　} 　} 　if(){ 　　サイコロの合計が６以上なら１カウントする。 　} } サイコロの合計が６以上の回数/for文の繰り返しの数で確立を求めプリントする。 いかがでしょうか？？ がんばってみてください。
> CGIでHTMLに出力したいです。(できればShift_JISで) それなら ------------------------------ print encode 'sjis', substr $aaa, 0, 3; ------------------------------ とすればいいです。
http://weeeblog.net/logs/2008/04/04_1632.php XML::Simpleを使えばできます。 ・・・がデータ構造的にbazaxさんの言うようにはできません(あとPerlの文法的にも難しいと思います) bazaxさんの提示したXMLをprint Dumperしてみると次のようになりました。 ---------------------------------- $VAR1 = { 'Age' => [ '29', '32' ], 'Seiseki' => [ { 'Math' => '60', 'English' => '50', 'Gymnastic' => '10' }, { 'Math' => '40', 'English' => '60', 'Gymnastic' => '50' } ], 'Sex' => [ 'M', 'F' ], 'Name' => [ 'A', 'B' ] }; ---------------------------------- このようにAとBの結果が混ざってしまいます。 データ構造を ---------------------------------- <Person> <A> <Age>29</Age> <Sex>M</Sex> <Seiseki> <English>50</English> <Math>60</Math> <Gymnastic>10</Gymnastic> </Seiseki> </A> <B> <Age>32</Age> <Sex>F</Sex> <Seiseki> <English>60</English> <Math>40</Math> <Gymnastic>50</Gymnastic> </Seiseki> </B> </Person> ---------------------------------- のように変えれば ---------------------------------- $VAR1 = { 'A' => { 'Age' => '29', 'Seiseki' => { 'Math' => '60', 'English' => '50', 'Gymnastic' => '10' }, 'Sex' => 'M' }, 'B' => { 'Age' => '32', 'Seiseki' => { 'Math' => '40', 'English' => '60', 'Gymnastic' => '50' }, 'Sex' => 'F' } }; ---------------------------------- となり、 ---------------------------------- my $xml = XMLin($filename); print $xml->{A}->{Seiseki}->{English} # => 50 ---------------------------------- のように値にアクセスできます。
例えば、root 権限の使える別のプログラムでクォータ情報を収集し、 一般権限でアクセスできるファイルに書き出しておく、などが考えられま す。 root 権限がまったく使えないのであれば、あきらめましょう。
if (...) { statement; } のように 1文だけを制御するときは statement if ...; と後ろに書くこともできます. unless, while, for なども同じように書けます. さりげなくかっこが消えることにも注意.
>>hiddenのnameは何に使うのか教えていただけましたら、幸いです。 　データーを送信(渡す)したい時の任意の変数名だと思います。 　例えば、write とか ok というデーターを送りたい時に、任意の name名で、 　name=kakikomi value=write 　name=check value=ok 　として送り、受け取ったPerl等で、$IN{'kakikomi'} には write が入り、$IN{'check'} には ok が入ります。 　
Perlには、IO::Socketモジュールがあります。
私もやってしまったことがあるのですが、 useで読み込まれるファイルと、 「使おうとしている関数が所属しているパッケージ」が違うということは ありませんでしょうか。 例えば、perlモジュールパス上にある hoge.pm を読み込みたくて、 use hoge; と書いたのに、 カレントにも hoge.pm があって、 そちらが読み込まれている、のような状態です。 もしそうだとすれば、 コマンドラインで perldoc -l hoge とすると、読み込まれるモジュールのフルパスが表示されるので、 それで確認ができます。 まったく見当違いでしたらすみません。
> ローカル時刻ではなくて、「時差」そのものを知りたいのです。 あ、すみません。 時差を求めるには use DateTime; use DateTime::TimeZone; my $local_dt = DateTime->now(time_zone => 'local'); my $tz = DateTime::TimeZone->new(name => 'local'); print $tz->offset_for_datetime($local_dt); # => 32400 のようにすればUTC(GMT?)との時差が秒数で返ります。 日本は+9時間なので9 * 60 * 60で32400が返るはずです。
CGI.pm のソースコードの中に <button が見当たらないので、 CGI.pm では <button> タグは作れないと思います。
私の環境では、 utf8 や encoding を use してる場合に単純にはできませんね。 下記は、スクリプトを UTF-8 で書いて STDOUT のコードを Windows の SJIS にする例で、正しく動作します。 CGI.pm 3.15 は utf8フラグに対応してない模様です。 #! /usr/bin/perl -w useEncode; useutf8; useCGI; binmode(STDOUT, 'encoding(Windows-31J)'); my$esc= CGI::escape('あ'); print("$esc=", decode('utf8', CGI::unescape($esc)), "\n"); 再度質問される場合は、上の例の様に問題を確認できるなるべく短いスクリプト全体を書いて頂ければ解決が早いかも知れません。
> my ($year, $mon, $mday) = ("2011/08/01" =~ /(\d{4})\/(\d{1,2})\/(\d{1,2})/); > 教えて頂いたコードだと日付がうまく取れませんでした。 > カッコをつけたら日付が取れましたが、これでよいのでしょうか？ すみません、そらで書いたコードなので間違えてました。これで問題ないです。 timelocalはlocaltimeの逆の関数なので、月は0～11になるため、1引く必要がある点だけ注意してください。
use strict; use warnings; use Tk; ### Main Window my $window = MainWindow->new(); ### Frame # Goods my $goods_frame = $window->Frame( -width => 240, -height => 30, -borderwidth => 2, -relief => 'flat', ); $goods_frame->pack(); # Price my $price_frame = $window->Frame( -width => 240, -height => 30, -borderwidth => 2, -relief => 'flat', ); $price_frame->pack(); # Confirm my $confirm_frame = $window->Frame( -width => 240, -height => 30, -borderwidth => 2, -relief => 'flat', ); $confirm_frame->pack(); ### Widgets # Goods Label my $goods_label = $goods_frame->Label( -text => 'Goods', -width => 10 ); $goods_label->pack( -side => 'left' ); # Goods Entry my $goods_entry = $goods_frame->Entry( -width => 30, -background => 'white' ); $goods_entry->pack( -side => 'left' ); # Price Label my $price_label = $price_frame->Label( -text => 'Price', -width => 10 ); $price_label->pack( -side => 'left' ); # Price Entry my $price_entry = $price_frame->Entry( -width => 30, -background => 'white' ); $price_entry->pack( -side => 'left' ); # OK Button my $ok_button = $confirm_frame->Button( -text => 'OK', -width => 8 ); $ok_button->pack( -side => 'left' ); # Cancel Button my $cancel_button = $confirm_frame->Button( -text => 'Cancel', -width => 8, ); $cancel_button->pack( -side => 'left' ); ### Loop MainLoop();
前のQAでの流れでこちらもよろしくとのことで回答させていただきます。 もうすでにたくさんの方々がキモの部分を回答されているので蛇足になってしまいますが・・・。 スペースの都合でコンパクトにしているのなら申し訳ありませんが、変数の取り扱いについて二言三言。 あくまでソースから受ける印象としてコードを小さくしようとするあまり変数の住み分けが混乱しているように思われます。 まず初期のコーディングでは変数は出来るだけ局所的に定義し、サブルーチンはグローバル変数に依存せずそれ単体で動作 するように作ると、バグがどこにあるのかがわかりやすくなりますし、サブルーチンが他のものに使いまわせるストックと して財産にもなると思います。 また、変数はそれぞれ機能別に用意し、元のデータを壊す(上書き)ことなく取り扱えば、元データを2次3次使用できます。 そうすることで整理がつき問題点がはっきりするのではないかと思います。 　「loop_make」ではぱっと見で一番の問題は配列変数「@aaa」を戻り値にしているにも関わらず代入等をそれに対して行っ ていないことから、出口を用意しておいて処理をどう書いてよいのかわからなかったのではないでしょうか。 　この場合ハッシュのPUSHを行っている配列「@loop」が「@aaa」がくるべきところなんですよというご指摘が先達よりなさ れております。 　また、戻り値を配列のリファレンスに指定しながら、それを別の配列に代入しようとしていることから、こうしたいという 気持ちは伝わるのですが、強引過ぎると思います。メモリー効率の良い処理をさせる姿勢は良いのですがリファレンスは多用 しない方が後々のメンテの為にも良いと思います(もちろん適材適所で臨機応変に)し、限度はありますが今のリソースが豊富 な時代では、ある程度考慮しなくても良いと思います。 　結果としてTemplateモジュールでループ処理を行う為には 　　・ハッシュのリファレンスを配列に入れ 　　・その配列のリファレンスをハッシュに入れて 　　・ハッシュのリファレンスをパラメータとしてTempleteモジュールに渡す 　と分離した方がそれぞれの役割が整理されわかりやすくなるし、そうすることで縦横の表を作成する２重ループなども応用 させやすくなるかと思います。 　Perlはいい加減に書いても動いてしまうことが多いので、しっかりと整理して取り組まないと期待した結果は得られません。 　構造化プログラミング教科書風に書くと以下のようなリストになるかと思います。 ## -------------------------------------- use HTML::Template; my @aDT = ( 　'aa<>ab<>ac', 　'ba<>bb<>bc', 　'ca<>cb<>cc' ); my %hLoop; my @loop = &loop_make(@aDT); my $hLoop{loop} = \@loop; my $template = HTML::Template->new(filename=>'sample.html'); $template->param(\%hLoop); print "Content-Type: text/html\n\n"; print $template->output; exit; ## -------------------------------------- sub loop_make{ 　my @aDT = @_; 　my @aRT; 　my @aItems = ('one','two','three'); 　foreach(@aDT) { 　　my @aTmp = split(/<>/); 　　my %hTmp; 　　for(0..$#aItems){ 　　　my $sKEY = $aItems[$_]; 　　　my $sVAL = $aTmp[$_]; 　　　$hTmp{$sKEY} = $sVAL; 　　} 　　push @aRT, \%hTmp; 　} 　return @aRT; } ## -------------------------------------- ながながとすいませんでした。
IISがperlに-Tをつけずに実行しています。 『アプリケーションの構成』でperl.exeを-Tつきで実行するように設定すればいいんじゃないですかね(IIS使ったことないので軽く調べただけですが) ただそれをやると.cgi全部-Tつきで実行されるようになるので、別の問題が出る可能性があります。
一応書いておくと, もとの正規表現が $re = qr/< (?:[^<>]|(??{$re}))* >/x; と等価なので, 区切りが 2文字以上になったときに (?:[^<>]|(??{$re})) をどうするか, もっというと [^<>] をどう処理するかという問題に落とすことができます. これは「開始の区切りである < もしくは終了の区切りである >」のいずれでもないもの, ということなので, これを 2文字以上のときにどう書くかという問題に帰着されます. で, 結局これが (?=&lt;|&gt;) を使って表せるぞ, ということで. ああ, (?:[^<>]|(??{$re})) に合わせるなら (?(?!&lt;|&gt;).|(??{$re})) の方が近いかも. あと, 開く記号と閉じる記号がちゃんとマッチしない (より正確には「開く方が多い」) 場合にどうなるかは試していないのでわかりません.
binmodeするところまでは良いのですが、テキストエディタでバイナリデータを開くor保存する際に表示できない文字などでかなりの情報が失われます。 gifファイルをバイナリエディタで開いて以下のような表記で写していけば良いでしょう。 print OUT "\x47\x49\x46\x38\x39\x61 以下略"; ＃この先頭部分は"GIF89a"と直接記述しても大丈夫です。 バイナリエディタからのコピペで済ませたい場合は $hexstring = "47 49 46 38 39 61 ..."; $hexstring =~ s/\s//g; print OUT pack("H*", $hexstring); のようにpackを利用するなどです。 ＃質問文中のヒアドキュメントの場合、末尾に余分な改行が含まれてしまうことも問題の一つになっていると思います。 ＞Perlの勉強段階などでモジュールなどを使わないようにしたいと思っています。 画像データをフルスクラッチで出力することはPerlのプログラミングとは別分野の知識が多く必要になります。 画像フォーマット、さらにそこで使用されているデータ圧縮の技術、画像を加工する場合は画像処理に関しての知識も必要になるでしょう。 Perlの学習のために画像の操作を題材とするのはあまりお勧めしません。 参考URL：http://ja.wikipedia.org/wiki/テキストファイル
もう解決されましたか？ use Time::HiRes; while (1) { 　　open (OUT, "> data.txt"); 　　printf (OUT "%.2d:%.2d:%.2d\n", (localtime (time))[2, 1, 0]); 　　close (OUT); 　　Time::HiRes::sleep (0.8); } パッケージ名(?)を指定してsleepを呼び出せば、できるっぽいですね。
ちょいと調べてみました。 上記のエラーは、モジュールの読み込みには成功しているが Jcodeモジュールとして　Jcode($value)->utf8;　のような使い方がない為 あなたのコードにJcodeって名前のサブルーチン(&main::Jcode)が定義されてませんよ。 ってエラーがでてますね。 こうすると、質問者様の期待する挙動に近づきます。 my $obj = Jcode->new($text); #オブジェクトを生成。$textは変換前の文字列 $text = $obj->utf8(); #utf8に変換する。 前回のコメントに ＞つまり送られてくるフォームデータがどの文字コードか分からないわけです。となると、ここでは ＞$str2 = Jcode->new( $str1, "utf8")->sjis; ＞のようなコードは使えません。 とありましたが、本来文字コードの変換というのは、 必ず何の文字コードから何の文字コードに変換するか 指定しないといけません。 いや、指定しなくてもできてますが？？ と、思うかもしれませんが、それはこういうことなんです。 たとえば、ひらがなの「あ」は、 shift_jisだと82A0 EUC-JPならA4A2 utf8なら3042 と、いった文字コードになります。 これは、shift_jis/EUC-JP/utf8のみで考えると 他のどの文字の文字コードとも重なりません。 つまり、3042という文字コードが来たら「あ」がきたな わかり、これはshift_jisで送られてきたんだな。 と、判別しているわけです。 つまり、文字コードを指定しなくても変換してくれる仕組みは、 送られてきた文字の中に他のどの文字コードとも重ならない文字が あるからそれをもとに判別して変換をしているというわけです。 逆に言えば短い文字列で他の文字コードと重複しているような文字が 送られてきたら判別ができないので、間違った文字を返します。 例えばshift_jisで半角のああ「アア」を送ると、半角カナのあは B1なのでB1B1と送られてきます。 プログラム側がutf8なんかで書いているとまずutf8の文字コードで B1B1にあたる文字があるか探し始めるんで、「臼」って文字を返してきます。 いわゆる、文字化けの仕組みです。 このようなことが起きるので、文字化けを完全に防ぎたいならば 変換前の文字コードを決めてしまわないと文字化けをおこす可能性があります。 じゃ、どうするかといったばあい方法は、二つ。 ブラウザから送られてくる文字コードは何がくるかわかりません。 サイトの指定するコード以外は、文字化けを起こすものとして無視する。 二つ目。 文字化けの仕組みで説明したように、文字コードが重複しない文字を inputタグのtype="hidden" value=""←にしかけておいて その文字でまず文字コード判別をおこない それを変換前の文字コードとする。なんてことが考えられます。 いかがでしょうか？
質問者さんのやりたいこと（バイトコードから別の文字コードのバイトコードへ変換する）だけを行うのであれば、 下記サイトを参考にされるとよいです。 http://www.horse-water.mydns.jp/tips/tips_P00023 … Jcode.pmを使うのであれば... use Jcode; my $after_str = Jcode->new($before_str, 'euc')->utf8; のように、 Jcode->new(変換する文字列，変換前の文字コード)->utf8; でよいようですね。 Encode.pmを使うのであれば... use Encode; Encode::from_to($str, 'eucJP', 'utf8'); のように、 Encode::from_to(変換する文字列，変換前の文字コード，'utf8'); でよいようですね。 ほそく。 http://blog.livedoor.jp/dankogai/archives/510315 … ↑このページで説明している内容は、utf8フラグのお話です。 ただ単にutf8に変換する（いわゆるバイトコードからバイトコードへ）とは別の話です。 バイトコード同士で変換する場合は、変換後すぐ出力しても問題ありませんが、utf8フラグ付きで変換するとエンコードしてフラグをとらずに標準 出力にマルチバイト文字列を出そうものなら、Wide Charaほげほげ。と叱られます。 ブラウザに出力しようものならば、文字化けしちゃいます。 そんなわけで、正しいutf8フラグの使い方はこうですよ～ って説明されているのが上記ページです。
多重投稿申し訳ありません。 一箇所間違えてました。 push(@aLP01,\%hTMP); は push(@aLP01,\%hTmp); としてください。 実際の動作確認していないので他にもあるかも・・・。 いちおう考え方の説明ということで許してやってください。
１つの配列に格納してから、出力するという方法があります。$line1 は a.20090504.csv から読み込み、$line2 は他の csv から読み込むものとして、 $line1 = "1,2,3,4,5,6,7"; $line2 = "a,b,c,d,e"; $array[0] = "20090504"; @array[1, 3, 6, 9, 10, 11, 12] = split /,/, $line1; @array[2, 4, 5, 7, 8] = split /,/, $line2; print "<tr>\n"; print "<td>$_</td>\n" foreach @array; print "</tr>\n"; > ※ちなみに、これですとCSVファイル名の20050504だけがtrに入るようになっています。 > これは、こうしたいのでこうしているのですが、繰り返しtrに投入されるようになっているのも気になります。 > どうしたら直るでしょうか。 これは、csv の１行目のみ <td>$days</td> を出力して、２行目以降は <td></td> を出力したい ということなのでしょうか？ 仮にそうだとして、次のような方法があります。 1) while ($line = <IN>) { ... $array[0] = $. == 1 ? $days : ""; ... 2) foreach $i (0 .. $#kasou) { ... $array[0] = $i ? "" : days; ...
１つのルーチンを２０行程度にまとめられれば、小さな画面でも十分読む事が出来ると思います。 私も20インチのワイドディスプレイを縦型にして（９０度傾けて）、高さ1650pxを確保していますが、 エディタのウインドウを分割すると800px以下になりますから、基本は小さな画面で読みやすい事ですね。 if($test == 1){ 　　&do_test1(); # test1を実行する。というか、コメントが無くても「do test1」という言葉でわかるはず 　if($test1 == 2){ 　　&do_test2(); 　} } if($test == 1){ 　　# test1を実行する 　　300行ぐらい続く 　　300行ぐらい続く 　　300行ぐらい続く 　if($test1 == 2){ 　　# test2を実行する 　　300行ぐらい続く 　　300行ぐらい続く 　　300行ぐらい続く 　} } サンプルとは言え、ある程度きっちり書いておいた方が良いと思います。 クラス（パッケージ）化するのは、 人が見たときには「一定の処理をグループ化する」という意味では、サブルーチンと同じだと思います。 ローカル変数をグローバル変数の用に使える（サブルーチンに引数として渡す必要がない）、変数名の競合対策などとしてはかなり有効な手段だと思いますが、 見やすさという意味では、ほとんど変わらないと思います。
YAMLモジュールとリファレンスを使ってよければ。 ./file/data.txt ================================================ # File created by... # since 5/May/2009 - category : Vegetable 　　data : 　　　　- Tomato 　　　　- Lettuce 　　　　- Potato # Carrot - category : Fish 　　data : 　　　　- Salmon 　　　　- Tuna - category : Fruit 　　data : 　　　　- Banana 　　　　- Orange ================================================ ↑行頭の半角スペースが認識してくれないので代わりに全角スペースをいれました。行頭の全角スペースを半角スペースに直して使っていただきたいです。 ./test.pl ================================================ use strict; use warnings; use YAML(); my $data = YAML::LoadFile("./file/data.txt"); for(my $i=0; $i<@{$data}; $i++){ my $str = ""; for(my $ii=0; $ii<@{$data->[$i]{data}}; $ii++){ $str .= $ii. "=". $data->[$i]{data}[$ii]. " "; } print "$i | $data->[$i]{category} : $str\n"; } ================================================ <<出力>> 0 | Vegetable : 0=Tomato 1=Lettuce 2=Potato 1 | Fish : 0=Salmon 1=Tuna 2 | Fruit : 0=Banana 1=Orange
本当にそれはnon-breaking spaceでなければならないのでしょうか？ SPACE(U+0020)のままであるべきものならCSS 2.1の white-spaceプロパティを使う事も検討してください。 検討し，non-breaking spaceであることが必須であるならば，以下続けます。 >半角スペースは''へ変換してくれません。 指している文字が違うので変換されてはいけません。(前者はU+0020,後者はU+00A0) 結論から言えば実体参照を使う必要はなく，そのままU+00A0の文字を出力してあげればよいようです。 #ただ、現状、ブラウザの実装としてはnon-breaking spaceを出力したファイルを読み込ませたときにユーザーがその文字をテキストエディタにコピーしたときにはU+00A0ではなくU+0020になります。
こんにちは。 > ＆ikeike　を選択すると sub ikeikeに手軽にジャンプするにはどういうeditorでどうしたらいいのでしょうか？ 勘違いでしたら、すみません。 エディタ上の、同一ソース上でサブルーチン本体の定義部分にジャンプしたいということでしょうか？ その場合、秀丸エディタの場合ですが、正規表現で検索されては如何でしょうか？ ※もし、正規表現の構文等が解らない場合は秀丸エディタのヘルプをご覧下さい。 （もう既に試されている場合は、御免なさい） 　　＜検索パターンの例＞ 　　　　例１：　^[ \t]*sub[ \t]+ikeike[ \t]*({|$) 　　　　　　この例ですと、行頭から "sub ikeike" と記述された個所にヒットします。 　　　　　　　・行頭及び単語の間に、スペースorタブが複数あってもヒットします。 　　　　　　　・また、ルーチン名の後に '{' があるかまたは、行末だった場合にヒットします。 　　　　例２：　sub ikeike 　　　　　　"sub" と "ルーチン名" の間がスペース１個と決まっているような場合は、正規表現パターンでなくても 　　　　　　単純に、このようなパターンでも良いと思います。 また、複数のルーチンを検索する際に、検索パターンを毎回入力するのが面倒な場合は、秀丸エディタのマクロ機能 を利用して、検索を半自動化する方法もあります。 マクロ利用の際のおおよその手順は、 １）サブルーチン呼び出し個所のルーチン名部分を、カーソルで選択状態（反転表示）にする。 ２）作成した検索マクロを実行する。 　　マクロの処理としては、 　　　　・選択部分の文字列（ルーチン名）を取り出して、正規表現の検索パターンに加工する、 　　　　　　　　↓ 　　　　・作成した検索パターンで、正規表現による検索を実行する。 　　　　　　　　↓ 　　　　・検索結果によりメッセージ等を表示する。 　　　　　　　　↓ 　　　　・マクロ終了 　　のような流れになるかと思います。 以上が、質問者さんの目的とする内容と違っていた場合は、申し訳ありません。（その際はスルーして下さい） 【補足：秀丸のサンプルマクロ】 参考までに、上記の処理を行う秀丸エディタ用のサンプルマクロを作ってみましたので宜しければ試してみて下さい。 ■使用方法 注）下記記述において、使用されている秀丸エディタの設定（カスタマイズ）等により、メニュー項目及び操作等が 　　異なる場合がありますので、その際はご使用の環境に合わせて適せん置き換えて下さい。 １）下記のサンプルマクロを、拡張子 .mac として適当な名前を付けて、秀丸エディタがあるフォルダに保存して下さい。 ２）秀丸エディタを起動して、メニュー「マクロ」　→　「マクロ登録」 　　で開いた「マクロ登録」ダイアログで、上記１）で保存したマクロファイルを登録して下さい。 　　その際、タイトルを適当な名前で登録して下さい。（例： "Perl サブルーチン検索"） 　　※登録が完了したら、メニュー「マクロ」下に、登録したマクロのタイトルが表示されると思います。 ３）続いて秀丸エディタで、Perlのソースを開きます。 ４）ソース内のサブルーチンを呼んでいる個所で、ルーチン名をマウスでダブルクリックすると、ルーチン名が 　　選択状態（反転表示）になると思います。 ５）上記４）の状態で、メニュー「マクロ」→「（登録したマクロのタイトル）」 をクリックするとマクロが実行されます。 　　◎ルーチン定義が見つかれば、その個所にカーソルが移動し、 　　　"サブルーチン定義が見つかりました。" のメッセージボックスが表示されます。 　　◎ルーチン定義が見つからなければ、 　　　"サブルーチン定義はありませんでした。" のメッセージボックスが表示されます。 ■サンプルマクロ 注１）下記ソースには、字下げのために全角スペースを入れています。 　　ファイルに保存する際は、お手数ですが全角スペースを削除するか、半角スペースorタブに置換してから 　　保存して下さい。 注２）下記マクロは、最近の秀丸エディタのバージョン（Version 7.00以降）であれば多分動作すると思います。 　　　もし、上手く動作しなかった場合は申し訳ありません。 　　　また、マクロの修正及び機能の追加等を行いたい場合は、ご自身で適当にいじってみていろいろ試して 　　　みて下さい。 //----------------------------------------------------- // 秀丸エディタ用　「Perl サブルーチン定義検索」マクロ　Ver 1.0.0 //----------------------------------------------------- FsPerl_main: //変数の初期化 $rtname = ""; $schptn = ""; $mes = ""; //現テキスト＆秀丸の設定状態を保存 #save_x = x; #save_y = y;　　　　//カーソル位置のX,Y座標 #save_selecting = selecting;　　//選択状態 #save_rectselecting = rectselecting;　　//BOX選択状態 #save_seltopx = seltopx; #save_seltopy = seltopy;　　//選択範囲の開始X,Y座標 #save_selendx = selendx; #save_selendy = selendy;　　//選択範囲の終了X,Y座標 #save_srchopt = searchoption;　　//検索フラグの値 $save_srchbuf = searchbuffer;　　//検索バッファの内容 //選択文字列があるかチェック if (selecting==0 && rectselecting==0) { 　　$mes = "サブルーチン名を選択して下さい。"; 　　message $mes; 　　endmacro; } //選択文字列が複数行でないかチェック if (seltopy != selendy) { 　　$mes = "単一行内のサブルーチン名を選択して下さい。"; 　　message $mes; 　　endmacro; } //選択文字列（ルーチン名）を取得 $rtname = gettext( seltopx, seltopy, selendx, selendy, 1 ); //検索パターンを作成（正規表現 "sub xxxxx"） $schptn = "^[ \\t]*sub[ \\t]+" + $rtname + "[ \\t]*({|$)"; //選択状態の解除 escape; escapeinselect; //検索実行 searchdown2 $schptn, regular, nocasesense, hilight, loop; if (result) { 　　//見つかった場合 　　//検索バッファを再保存 　　$save_srchbuf = searchbuffer; 　　//検索結果のメッセージ表示 　　$mes = "サブルーチン定義が見つかりました。"; 　　beep; message $mes; } else { 　　//見つからなかった場合 　　//マクロ実行前のカーソル位置＆選択状態を復元 　　if (#save_rectselecting) {　　//マクロ開始前がBOX選択状態だった時 　　　　//選択状態の復元 　　　　moveto #save_seltopx, #save_seltopy; 　　　　beginrect; 　　　　moveto #save_selendx, #save_selendy; 　　　　//範囲選択モードを解除(範囲選択はそのまま) 　　　　endsel; 　　} 　　else if (#save_selecting) {　　//マクロ開始前が選択状態だった時 　　　　//選択状態の復元 　　　　moveto #save_seltopx, #save_seltopy; 　　　　beginsel; 　　　　moveto #save_selendx, #save_selendy; 　　　　//範囲選択モードを解除(範囲選択はそのまま) 　　　　endsel; 　　} 　　//検索結果のメッセージ表示 　　$mes = "サブルーチン定義はありませんでした。"; 　　beep; message $mes; } //秀丸の検索設定状態を復元 setsearch $save_srchbuf, #save_srchopt;　　//検索バッファの内容、検索フラグの値 //マクロ終了 endmacro;
X11::GUITest とかどうか http://search.cpan.org/~ctrondlp/X11-GUITest-0.2 … 参考URL：http://search.cpan.org/~ctrondlp/X11-GUITest-0.2 …
＞ if(1241006761 > time > 1241006160) Perlではこういう書き方はできません。 次のようにします。 if(1241006761 > time && time > 1241006160)
binmode FIN, ':utf8'; 　　ファイルハンドル FIN に結びつけたデータの文字コードは UTF-8， 　　と設定。openより前でないと想定した動きにならないと思いますが。 open(FIN, "name.txt"); 　　ファイル name.txt を読み込みモードでオープンし，ファイルハンドル 　　FINに結びつける。File-INでなくても可，お好きな名前を与えてください。 $line = <FIN>; 　　FINから一行分（改行文字が現れるまで）を読み，変数 $line に代入。 chomp($line); 　　$lineの末尾の改行文字を切り落とす（次行で \n を新たに付加しているので） print "hello!$line\n"; 　　"hello!" という文字列，変数 $line の中身（"name.txt"の一行目から 　　改行を除いたもの），改行文字（\n），の３つを続けて標準出力に出力。 close(FIN); 　　ファイルハンドルのクローズ。
Time::Local を使えば、日付表示文字列から、エポック値(通算秒)が得られます。 あとは、行を読み込んだ時に、前行のエポック値との差が60を超えているようだったら、その間を60間隔でループして空データ出力するようにすればいいでしょう。 --- #! /usr/local/bin/perl use strict; use Time::Local; my $previous = 0; while (<>) { my ($year, $month, $day, $hour, $minute) = m|^(\d{4})/(\d{1,2})/(\d{1,2} )\s+(\d+):(\d+),|; my $current = timelocal(0, $minute, $hour, $day, $month-1, $year); if ($previous > 0) { for (my $t = $previous + 60; $t < $current; $t += 60) { my (@l) = localtime($t); printf("%04d/%d/%d %02d:%02d,\n", $l[5]+1900, $l[4]+1, $ l[3], $l[2], $l[1]); } } print ; $previous = $current; } ---
結果をXMLで取得するだけなら DBIx::XML_RDB http://search.cpan.org/~msergeant/DBIx-XML_RDB-0 … とか XML::Generator::DBI http://search.cpan.org/~msergeant/XML-Generator- … があります。 でも、どっちも結果をXMLに変換してるだけなので、 MySQL -X オプションを使いたいという要望には合わないかもしれません。
EUC にコンバートできてないです。 データはファイルから読み込んでいますか。 スクリプトの中でSJISで配列を作って、それを読み取ってその文字列をEUCにコンバートするのはうまくいかないようです。 ※ use Jcode; はループの外にした方が良いのでは（実害は無いけど） ※ 何で Jcode::convert($_, 'euc'); を２回やってるのかな？ 【HINT】 次のSJISコードの文字列を％エンコードすると右のようになります。 三菱電機 → %8E%4F%95%48%93%64%8B%40 姉鰭電機 → %8E%6F%95%68%93%64%8B%40 東芝 → %93%8C%8E%C5 「三菱電機」が「姉鰭電機」になる原因は次のエンコード間違い。 %4F → アルファベット O %6F → アルファベット o %48 → アルファベット H %68 → アルファベット h
perl のバージョンによるけど, 最近のバージョンなら「Unicode の漢字かどうか」の判定ができます. やり方は忘れた.
> @$ref_array->[$i] #配列の値へアクセス 非常に惜しいのですがこれだけ違います。 配列の値へアクセスするには $ref_array->[$i] か ${$ref_array}[$i] です。 後者は見た目の通り見にくいため、一般的に前者の書き方が好まれます。
headってLWP::Simple::headですよね？ > CGIでRefererの送信方法 リファラを設定するにはLWP::UserAgentじゃないとできないようです。 http://www.google.co.jp/search?hl=ja&q=lwp+refer … http://www.ksknet.net/perl/lwpuseragent_we.html
perlのHTTPクライアント用のライブラリといえば、LWPが定番だと思います。 http://homepage3.nifty.com/hippo2000/perltips/LW … http://blog.livedoor.jp/dankogai/archives/508065 … それから、ネットワークプログラミングを解説してくれているページも参考になるかと。 http://x68000.q-e-d.net/~68user/net/
１の方法で解決可能です。 そのソフトのドキュメントで言うとこのあたりの技術を使います。 http://www.sirmiles.com/repl_ace/readme/contents … 簡潔な例に置き換えますが 「ja-」で始まる行の小文字アルファベットを全て大文字にするなら以下の正規表現で対応します。 検索文字列：(?<=^ja-.*)([a-z]) 置換文字列：${CONV_Upper($1)} オプション：正規表現を使う、行モード 「lang=ja」の行の次の行の小文字アルファベットを全て大文字にするなら以下の正規表現で対応します。 検索文字列：(?<=^lang=ja\r\n.*)([a-z]) 置換文字列：${CONV_Upper($1)} オプション：正規表現を使う、行モード ちなみにPerl5系では(?<=)内に可変長のパターンが置けません。 そのソフトが使用している正規表現エンジンで運良く対応していたため実現できたという形です。
CGIでもできます。 というか、昔は全部（必ず）この方法でした。 CGIではボタンを押すたびにページ全体を読み直し、表示し直さないと行けないので、時間がかかる事があります。 利用者の利便性（表示の待ち時間を減らす）を考えれば、JavaScriptをおすすめしますが、 JavaScriptを使用できない、使用を停止している環境もある事を忘れずに。。。 index.cgi --------------- #!/usr/bin/perl use CGI; my $q=CGI->new; my $smt=$q->param('smt'); my $checked=$q->param('chk_on')?'checked':''; my $message=($smt)?'':$q->param('message'); print "Content-Type: text/html\n\n"; print <<_HTML_; <html> <body> <form action="index.cgi" method="post"> <label><input type="checkbox" name="c1" value="1" $checked>check1</label> <label><input type="checkbox" name="c1" value="2" $checked>check2</label> <label><input type="checkbox" name="c1" value="3" $checked>check3</label> <br> <input type="submit" name="chk_on" value="全てチェックする"> <input type="submit" value="全てはずす"> <hr> <input type="text" name="message" value="$message_tmp"><br> <input type="submit" name="smt" value="送信"> </form> <hr> _HTML_ if($smt){ $message=$q->param('message'); print <<_HTML_; <h1>投稿した内容</h1> <p>$message</p> _HTML_ } # if($smt) print <<_HTML_; </body> </html> _HTML_ exit; 未検証です。
Cookie 書き込みの基本的な方法はふたつです。 1 レスポンスヘッダに Set-Cookie: を含める。 これは、普通はCGIで行います。 # 他の方法が知りたいと言うご質問なんですね？ 2 JavaScript で document.cookie を設定する。 # この方法で良いでしょうか？ 参考URL：http://www.tohoho-web.com/wwwcook.htm
参考URLを見ていただくとわかりますが モジュール使用ですがWIN32APIが使用できます。 終了に使うAPIであるTerminateProcessを使用すれば なんとかなると思います。 実践していないので、なんとも言えませんが 参考までに 参考URL：http://www.kaimei.org/note/mag/perl_w32.html
デコードには違いありませんが フォームからPOSTまたはGETメソッドで送られたデータを 連想配列に%inに格納して 値にタグ埋め込みのように確認表示時などに問題となる文字をHTMLの特殊文字コードに変換している というもの（サブルーチン）です。
極めて正常な動きだと思います。 %E7%A7%BB%E8%BB%A2 は Shift_Jis にも EUC-JP にも UTF-8 にも解釈できます。 Shift_Jis 遘サ霆「 EUC-JP 腱肢拶 UTF-8 移転 Encode::Guess というのは、そういうものです。 '%E7%A7%BB%E8%BB%A2' をUTF-8 だと断定する根拠が無いから UTF-8 だと判定しないのです。 過大な期待はやめましょう。
Perl のスクリプトとしてデバッグする気はありませんか? 参考URL：http://www.tohoho-web.com/wwwcgi7.htm
単に、ファイル名が "(" や ")" を含んでいるだけでしょう。 UNIX系OSでは、Windows と違ってファイル名にとっても多くの文字を使用できます。 理論上使用不可なのは "/" のみです。(ディレクトリ区切り記号と区別できないから) 現実的には、印字可能でない文字や "*" 等のシェルで特別な意味を持つ文字も不便です。
相対パスでの指定はデフォルトで禁止されているため、以下のようにする必要があります。 ・Perlスクリプト側 my $template = Template->new({ RELATIVE => 1 }); ・テンプレート側 [% INCLUDE '../html/header' %] なお、$template->error() で「relative paths are not allowed (set RELATIVE option)」という内容のエラーが確認できます。 また、INCLUDEとINSERTとPROCESSは兄弟のような機能で、この事に関してはINSERTの項に書かれていたりします。
＞plファイルを置くディレクトリは間違っていないようです。 　あくまで、サーバー上での相対パスですから、/cgi-bin/count.pl で無ければなりません。http://が付いているということは、HTTPサーバー経由ということですが、それじゃファイルを開いたり、実行させたりなんて出来ません。 　ですが、@nifty@homepageでは、SSIは使えないので意味ないですけど・・・ 　方法としては、文字データとして含めたいなら、トップページ自体をindex.cgiとして/cgi-binにおき、index.cgiでページを書き出すか、画像タイプのアクセスカウンター---提供されているアクセスカウンターを使うかになります。 トップページは、http://hpcgi3.nifty.com/****/ になります。 __________ここから、index.cgi_________ #/usr/local/bin/perl use strict; my $countfile="count.dat"; open IN,"$countfile"; $count=<IN>; close IN; my $count=$count+1; open OUT,">$countfile"; print OUT $count; close OUT; print "Content-type: text/html;\n\n"; while(<DATA>){ s/<\!-- counter -->/$count/; print; } # __END__の後にHTMLソースをそのまま書いておく。 ___END__ <html> <head>略</html> <body> <p>あなたは<!-- counter -->人目の・・・</p> </body> </html>
解決しましたか。よかったです。 ポイントですか。 具体的に何のポイントなのか、何を教えてほしいのかがちょっと分からないのですが・・・ コーディングする際の注意点などでしょうか。 とりあえず注意点、というか私がいつも考えていることは、いくつかに分けて考えることです。 あと常に一箇所に集中することです。 全体を見ず、現在の部分で何をやればいいのかということを考えて、必要な処理だけを書いていきます。 余談で、LinuxとかOSのソースコードは1000万行以上あるらしいので全て見ることは現実的に不可能に近い訳ですが。。。 http://slashdot.jp/linux/article.pl?sid=08/10/24 … それと、シュワルツ変換というものを知らなかったので調べてみたところ次のページを見つけました。 (Perlの例が載っててよかった。。。) http://www.wdic.org/w/TECH/%E3%82%B7%E3%83%A5%E3 … これによると ------------------------------------ リストを、各要素に一定の演算を施したもので操作したいが、 最終的に必要なのが演算の結果ではなく、本来の要素である場合に用いる手法。 ------------------------------------ らしいので少なくともソートではないです(間違っていたらすみません)。 どうやって昇順(あるいは降順)に並べるか、という「ソートの手法(アルゴリズム)」ではなく、 上記のような状況に対する「コーディングの手法」みたいなもので、ソートは上記の文で言う「一定の演算」という部分にすぎません。 このページの例では、大文字小文字の区別をつけずにソートしたいが、 結果として表示するものは元の文字列にしたいというものです(結果がすべて大文字や小文字になっていたら変ですよね)。 そしてそれを実現するために、このコードでは 1. ソートする配列の要素を「元の文字列」とソートに必要な「全て小文字にした文字列」を要素にもつ「配列のリファレンス(ポインタのようなもの)」にして(一つにまとめる)、 ------------------------------------ map { [ $_, lc($_) ] } @unsorted ------------------------------------ 2. 大文字小文字の違いを無視するために、「全て小文字にした文字列」で比較し、ソートする ------------------------------------ sort { $a->[1] cmp $b->[1] } ------------------------------------ 3. ソートされた結果の「元の文字列」を取りだす ------------------------------------ map { $_->[0] } ------------------------------------ というようなことをしているようです。
> ぜひアドバイスを願います。 だからですね、どういう仕様が適切かは要求内容、つまりあなたが「外見上どういう表示や振舞をするページ」を作りたいかによって違う訳です。 その要求内容よって、登録ページは 1回の動作で 1件のファイルを作るのが適切か 1件の共通ファイルに追記して行くのが適切かとかとても沢山の事が変化します。 どういう場合はどうしろというノウハウ集は書ききれませんし、要求内容を全て提示されてもあなたの替りに仕様決め作業をしてあげる気は私にはありません。 あなた自身の実力で解決するか、さもなくば身近からまたは有償で力を貸してくださる方を見付けるのが良いと思いますよ。
> ただ、もしmod_perlを使用する場合、前回の値が保持されないようにする場合は、 > やはり一度@namesをundefしてから使用するようにした方がいいですか？ 配列やハッシュでもそれ自身に代入を行うと、以前の内容は上書きされて残りません。 例) -------------------------------------------------------------- @name = ('a', 'b', 'c'); print join(',', @name); # a,b,c が表示される print "\n------------------\n"; @name = (1, 2, 3); print join(',', @name); # 1,2,3 が表示される ------------------------------------------------------------------ ですので、「@names = $test->param;」とした時点で、以前の内容が@nameに残っている可能性はありません。 それから、グローバル変数はどこで変更・参照されるか把握するのが難しいのでなるべく使わないようにし、ローカル変数を多く使うようにするのが良いと思います。他のルーチンとのデータのやり取りは、基本的に引数と戻り値を使うようにします。 変数にmyを付けて宣言すると、その変数の有効範囲を宣言のあるブロック({}で囲まれた範囲)の内部に制限することが出来ます。(ローカル変数) http://www.rfs.jp/sb/perl/02/01.html#2%EF%BC%8E% … ただし、ブロックで囲まれていない部分ではmyをつけてもグローバル変数とあまり変わらなくなってしまいますので、ご注意を。 サブルーチンを含まないブロック(ブロック自身はサブルーチンでも良い)の中で宣言されたローカル変数であれば、他の場所で変更されたり前回の結果を参照してしまう心配は有りません。 ちなみに「use strict;」を付けるとmyやourなどの宣言無しで変数を使うとエラーになり、変数名のタイプミスやスコープの勘違いの発見が容易になります。 ごく簡単なプログラム以外では「use strict;」を使う方が良いです。
求めている回答とは違うかもしれませんが、Perlの文法チェックをしたいだけならば、コードに use warnings; を書き込むだけで、色々教えてくれますよ。 英文なので、ちょっと「うっ」ときますが、そのメッセージを更にインターネットで検索してみれば、大半の内容は記事が見つかる場合が多いです。 個人的には、コードを書いている端から警告を入れてくれるEclipse + EPIC がお勧めです。 http://www.atmarkit.co.jp/fjava/rensai3/eclipsep … http://www.tkrb.jp/guide/2007/11/perleclipse_1.h …
文字列としてスクリプト中に書いてなければ大丈夫. あと, while で「@がなくなるまで置換する」ってのはわかる. わかるんだけど, それだけなら while を使わずとも s/@//g なり tr/@//d なりすればいいんじゃないのかってのが #2 の「でも」以下の趣旨.
perlだと「計算」などのsubmitボタンを押して（画面をリロードさせて）からでないと計算してくれませんから、使い勝手からいえばjapascriptのほうがリアルタイム更新でいいかもしれません。 ネットを探せばhtmlソースに記載された（簡単な修正で使用できる）ページがありそうですが。
Aがリクエストを処理してBのCGIをLWP::Simpleのget()とかで呼び出し、Bはデータベース処理の結果をXMLで返す。 Aは、受け取ったXMLを解析してHTML表示してはどうでしょう。 自家製ウェブサービスみたいな感じですかね。
回答ではありません。 ご容赦下さい。 現在、load averageをどうやって取得しているのか（CPANなどで配布されているモジュール？オリジナルのプログラム？etc.）の情報は投稿できませんでしょうか？
1 メタタグの他に、レスポンスヘッダの content-type: で UTF-8 を指定したりしていませんか? レスポンスヘッダとメタタグと実際の出力内容で、文字コードを統一するのが基本です。 サーバー(Apache等)の設定によっては、文字コードの自由度が無いかも知れない点にも注意してください。 2 Perl が EUC で書かれていても、STDOUT に EUC が出力されるとは限りません。 encoding とかの使い方は、正しく理解されていますか？ 3 teraterm + vi で確認する際は、teraterm での文字コード設定が重要なのはご存知ですよね？
スイッチ0でレコードセパレータをNull文字にしてみては？ 例) ----------------------------------------------------------------- perl -p0e 's|^.|ok|' ./text --------------------------------------------------------------------- 参考URL：http://www.ibm.com/developerworks/jp/linux/libra …
確かに %uXXXX の有無で処理を分ける必要は有りそうですね。 %uXXXX の有無で Encode::Guess の候補を切替える方法でも大丈夫そうです。 例) --------------------------------------------------------------- use Encode qw/from_to/; use Encode::Guess; $hikisu = $ARGV[0]; if ($hikisu == 1) { $s = '%u4f11%u6b62%u30fb%u89e3%u7d04%u30fb%u5fa9%u6d3b'; # UTF-16 } elsif ($hikisu == 2) { $s = '%E4%BC%91%E6%AD%A2%E3%83%BB%E8%A7%A3%E7%B4%84%E3%83%BB%E5%BE%A9%E6%B4%BB'; # UTF-8 } elsif ($hikisu == 3) { $s='%B5%D9%BB%DF%A1%A6%B2%F2%CC%F3%A1%A6%C9%FC%B3%E8'; #EUC } elsif ($hikisu == 4) { $s='%8Bx%8E%7E%81E%89%F0%96%F1%81E%95%9C%8A%88'; #SJIS } if ($s =~ /%u[0-9a-fA-F]{4}/) { Encode::Guess->set_suspects('utf-16be'); } else { Encode::Guess->set_suspects(qw/shift-jis euc-jp 7bit-jis/); } $s =~ tr/+/ /; $s =~ s/%(?:([0-9A-Fa-f]{2})|u([0-9A-Fa-f]{4}))/pack('H*', defined($1) ? $1 : $2)/eg; my $decoder = Encode::Guess->guess($s); die $decoder unless (ref($decoder)); &from_to( $s, $decoder->name, "shiftjis" ); print $s; ------------------------------------------------------------------- 参考URL：http://www.kt.rim.or.jp/~kbk/perl-5.8/guess.html
要はあなたが作成したスクリプトを他の人に使ってほしいわけですよね。（つまり、実行形式(exe)で配布しても良いですよね） 有料になりますが、active state社のPerl Dev Kit (PDK) でスクリプトを実行形式のプログラムに変換することができます。 また、同様の機能をもつものにindiagstar社のperl2exeがあります。 どちらも、無料のお試し版が提供されていますので、それでためされてみてはいかがでしょうか。 http://www.activestate.com/ 参考URL：http://www.indigostar.com/perl2exe.htm
$arr = [ {val=>'1'},{val=>'2'},{val=>'3'} ]; $template->param(arr => $arr); もしくは @arr = ( {val=>'1'},{val=>'2'},{val=>'3'} ); でどうでしょうか。
Windowsのコマンドプロンプトは''を引数の括りとして認識しません 's/./*/'はそのままPerlにただの文字列として認識されます 括るなら""で *は展開されないんで空白がないなら括らなくてもいいです
> 莨第ュ「繝サ隗」邏・・蠕ゥ豢サ SJIS系の端末をお使いですね。 #!/usr/local/bin/perl use CGI("unescape"); binmode(STDOUT, ':encoding(Windows-31J)'); print unescape('%u4f11%u6b62%u30fb%u89e3%u7d04%u30fb%u5fa9%u6d3b'), "\n";
Unicode?
>perl -wc board.cgi で一行ずつ実行していきますよ。 　ただし、サーバーにtelnetで接続することになるのですが、一般的なサーバーではtelnetは許可されていないでしょう。 　私自身は、ブラウザ経由で任意のプログラムに引数を渡しながら、Perlのデバッグが出来るCGIを作って持ってますが、公開の予定はありません。 　もちろん、エラーログを閲覧できる環境なら、サーバーのエラーログに記録されてますから、それを見ると良いです。 　ただ、一般の方が行う場合は、もっと簡便な方法があって、そのCGIの先頭に #!/usr/local/bin/perl BEGIN{ $| = 1; print "Content-type: text/html\n\n"; open(STDERR, ">&STDOUT"); } と書いておくと、ブラウザからチェックできるはず。 ★なお、CGIはサーバーに上げてテストするものではなく、ローカルで動作確認をしてからサーバーに上げるものですよ。 　無限ループに落ちるようなエラーだったりしたら大勢に迷惑を掛けるかも 　ローカルにperlやHTTPサーバーを用意して、必ずローカルで十分テストしてからサーバーに上げましょう。
単純にdfコマンドの出力をprintすれば出来ると思いますが、そういうことで良いのしょうか？ 例) -------------------------------------------------- print `df`; ------------------------------------------------------
たとえば、 組み合わせ ( http://iruka.la.coocan.jp/cgi-bin/members.cgi ) な感じかな？？
デフォルトで socket type として何が設定されるか確認して下さい。 また、setlogsock で socket type を明示的に設定した場合、結果はどのようになるでしょうか? 当方以下の環境ですが、masa_0820 さんのスクリプトでは「tagの前に<数字>が付いてしまう」という現象は確認できませんでしたが、setlogsock('stream'); の一行を追加し、socket type を stream にすると同じ現象がおきました。 Solaris 10(x86) 8/07 perl 5.8.4 (/usr/perl5/5.8.4/bin/perl) なお、私の環境では、Syslog.pm の中で @connectMethods は以下のようになっており、socket type はデフォルトで tcp -> udp -> unix -> stream -> console の順になっています。 /usr/perl5/5.8.4/lib/i86pc-solaris-64int/Sys/Syslog.pm 15 my @connectMethods = ( 'tcp', 'udp', 'unix', 'stream', 'console' );
ImageMagickの文字合成は、 UTF-8でエンコードされた文字以外では文字化けします。 ImageMagickの仕様です。 そして、jcode.plはUTF-8を扱うことはできず、 ここは素直にJcode.pmを利用する他ありません。 （PerlのバージョンによってはUTF-8の扱いも可能） 参考URLのページの下の方に書かれてある、 「Tarballを直接入手」という項目より、 ZIP版のJcodeをダウンロードして、展開したのち、 そこに含まれる Jcode.pm ファイルを use しているスクリプトと、 同一のディレクトリに置くことで利用できます。 参考URL：http://openlab.ring.gr.jp/Jcode/index-j.html
掲示板スクリプトの改造方法がわからないという事ですか？ 誰かが作ったものを利用しているなら、その開発者に問い合わせてみてください。 こういう記述を足せば動く、みたいな単純なものではないので、 元の掲示板スクリプトがどうなっているかわからなければ第三者には答えようがないのです。 自分が作ろうとしているなら、そういう機能があるスクリプトをダウンロードしてきて中身を研究してみてください。
こちらが詳しいのでどうぞ・・・私のブックマークからめぼしいもの :: Cepheid :: - ImageMagickの使用例 | 画像へ文字を記入する ( http://www.ss.iij4u.or.jp/~somali/web/im_example … ) ImageMagick - Image Processing and Display Package ( http://www.stat.ufl.edu/system/man/ImageMagick/w … ) 　→ImageMagick - Image Processing and Display Package ( http://www.stat.ufl.edu/system/man/ImageMagick/w … )
PerlがCGIとして動いていて、受け取ったデータをそのまま hoge.cgi の入力にしたいのであれば、最初から FORMタグを hoge.cgi 向けに書きましょう。 actionパラメーターに hoge.cgi のURLを書くだけです。 # Perlが直に POSTリクエスト送出というのは、Spam書き込みロボットに必要な技術なんで、あまり広まって欲しくないです。
最初のs?はshttpを考慮してるんだと思う。 shttpのサイトなんて見たことないけどね。 httpsの方がはやったから廃れたっぽい。 > 教えていただいた方法を試してみましたところ、エラーが生じてしまいました。 こっちで試してみたけど動いたよ。 環境とエラー内容くらい提示してみたら？ リンクになってる文字列の前後に、 ZERO WIDTH SPACE がついてたからこのせいかもね。 単純にコピーするとこんなになっちゃう。 $com =~ s{ ( ​http://$chars+​ | [^A-Za-z]+ > この部分を削除してみましたところ希望通りの動作で動いてくれましたが 削除するとこんな風になるんだけど、希望通り？ aaa<br> aa<br> あいうえおhttp://okwave.jp/<br> かきくけこbbb<br> bbb<br> b<br>
なぜ getcを使おうと思われたのでしょうか? これは(なにもしなければ)バイト単位で取り込みますから、 > while ($c = getc $fh ) { これで $c に入ってくるのは泣き別れしたバイトデータです。 >echo あ|perl -E "while ($c=getc) { say unpack q{H2}, $c}" 82 a0 0a このような泣き別れたバイトデータと任意の多バイト文字を比較しても 決して等しくなることはありません、 どのようなフォーマットのデータなのかわかりませんが、 一行単位とかで読み込んで処理したほうが簡単だと思うのですがどうでしょうか?
セッションIDを渡してますね。 表には表れませんがfirefox + Live HTTP headersで確認すると GET /search?sourceid=navclient-ff&features=Rank&client=navclient-auto-ff&googleip=O;null;235&ch=8dc19095c&q=info:http%3A%2F%2Fwww.4d-nail.com%2Fnail_base.php HTTP/1.1 となってます。 　ただし、この方法だとある程度個人情報をサーバー側に保存することになります。 　ですので、簡単にしようと思ったら、適当に暗号化したPATH_INFOを使うというのもありかと。 下記サイトなどが参考になるかと 【参考サイト】 PHP:Cookieを使わずにセッションを使う 　 http://www.res-system.com/weblog/item/583 cookieを使わずにセッション管理する。｜PHPプログラムメモ｜プログラムメモ 　 http://logic.stepserver.jp/data/archives/481.html こちらは、Perlについて 【参考サイト】 Perlでセッションを使う　その２：クッキーを使わず、POSTやGETでセッションIDを渡す - ウィリアムのいたずらの開発日記 　 http://blog.goo.ne.jp/xmldtp/e/f86b615441324a29f …
配列に入れるよりは、そのままs///置換演算子を使う。 $data='地球 温暖 温暖 化 化 の の 要因 要因 は'; $data=~s/(.+)\n{1}(.*)/$1\t$2/gm; print "$data\n";
「できれば」のところが謎. @html と $html の関係は? それはおいても, #2 が言われるように「本当に時間がかかっているのはどこか」をきちんと把握しないと駄目でしょうね. 実はメモリが逼迫してるために遅くなってる, とかいうオチだったりして.
他の方が書かれているように、ハッシュを利用すればそのデータ構造は再現できます。 my $hash = { name => "", addr => "", score => { english => "", science => "" } } というように。クラスで使いたければ、クラス変数をこのような構造で作ればいいわけです。 しかし、スクリプトを見たところ、print $inst[0]->{score}->{english}はちゃんと表示されるはずです。。もういちど、自分のスクリプトを良く見直してみてはどうでしょう。
すみません, ちょっと試してみましたが :: だけでなく main:: にも入ってます. というか, そもそも :: と main:: は同じでしたね.
$aaa[0] =~ /@UserDataNum/ は展開すると $aaa[0] =~ /11 13 34/ となるので整数にマッチすることがないのが問題です。 この部分を grep で書き直してみたのが下記です。 if( not( grep {$aaa[0] == $_ } @UserDataNum ) && ( $TODAY < $a2)){ これで望みの動作になるのではないでしょうか。 参考URL：http://perldoc.jp/docs/perl/5.10.0/perlfunc.pod# …
#2さんの流用 use utf8; binmode STDOUT,":encoding(cp932)"; my $input = '『カテゴリ1』...%E9gfdadas879gdsa\tmpフォルダ\1114-2-346\1051.doc'; if( $input =~ m/(『.+?』).*\\([^\\]+)$/ ) { ($category, $filename) = ($1, $2); print "$category\n$filename\n"; }else{ die('入力がおかしいよ。');
bind_paramを使ってデータ型を指定します。 http://www.rfs.jp/sb/perl/dbi/06.html にわかりやすく説明されていると思います。 参考URL：http://www.rfs.jp/sb/perl/dbi/06.html
NTPで時計合わせをしたら良いかと思います。 しかしOracleがある環境なら、時計もADで管理されているような気がしますが・・・
連投でスミマセン。 ＞Perlをもっと勉強しようかとあぐねいているとこらです。 よくこういう掲示板に、勉強するかどうか迷っています、という質問があるんですけど、逆にあんまり気持ちがわからないですね～ 勉強してみて、自分に合わないと思ったら「自分に合わない」という知見が得られるし、Perlがダメなところが分かってもっといい言語を学ぼうとか、場合によっては自分で言語を作ってやろうとかそういうことになるでしょう。 別にPerlを勉強したから脳に損傷を受けるとかそういうことはないですよね。 むしろ、使わない言語であっても頭はよくなるから特になるんですよ。 売っている入門書の中には場合によっては３～４日で読み終わるものもありますよね。。 ここで素人の意見をあーでもない、こーでもないと聞く時間がむしろ惜しいと思うんですけど、そのへんどうなんでしょう～？ もし、コンピューターを本職にするなら、仮に C や Java が「本業」になったとしても、Perl は技術者にとって「ハサミとノリ」みたいなもんだし、簡単だからすぐわかるので（他の言語で挫折して Perl に入る人も多い）勉強して損にはならないと思います。
ActivePerl 5.10 であれば、 　C:\foo\> file1.pl で動くはずです。 この場合、file1.pl がなぜ Perl のプログラムだとコンピューターは知っているかというと、シェバング行（#!)　は関係なくて、拡張子（.pl）と perl.exe が関連付けられているからです。 file1.pl を見るとトカゲ（ヤモリ？）のアイコンになっていると思います。 これは、拡張子 .pl が perl.exe に関連付けられている証拠です。 現在 hello world と表示されないのは、 　C:\foo\> file1.pl < file2.txt の「<」が Windows によって正しく解釈されないのが原因です。 正しく動いていないだけで、file1.pl は動いてはいますよ。 もし動いていなかったら、エラーメッセージが出ると思います。 何も表示されていないのは、動いている証拠です。 <STDIN> の代わりに、ダイアモンド演算子 <> を使って、 　#! perl 　while(<>){ 　　print; 　} みたいにして、実行は 　C:\foo\> file1.pl < file2.txt の代わりに、 　C:\foo\> file1.pl file2.txt とすると、予想通り hello world が表示されるはずです。 Windows は STDIN をちゃんと扱ってくれないみたいですね。 　C:\foo\> perl file1.pl < file2.txt とすると、perl.exe が < をちゃんと処理してくれるので、予想通り動くということでしょう。 で、Windows の ActivePerl でプログラムを書く場合でも、シェバング行を書く意味はあります。 たとえば 　#! perl -w と書くと、あぶないことをやっていると警告メッセージが出ますし、 たとえば 　#! perl -d と書くとデバッガーが起動します。 （ただ警告メッセージを出す場合は、-w を使わないで最初に 　use warnings; 　と書く方が今風です。） もしシェバング行をちゃんと書いていたら、UNIX サーバーに持って行ったり、Windows で UNIX 風動作を楽しむための環境 Cygwin を使う時に同じプログラムが使いまわせますし、こういう掲示板にプログラムをコピペするときもすぐに Perl のプログラムと分かってもらえます (^^)
最初の質問の内容をちゃんと理解していませんでした。申し訳ないです。 それぞれの中見出しについて処理するようにしてみました。 DOM について調べれば、沢山の解説サイトが見つかります。DOM の使い方は言語に依存しないので、JavaScript での解説でも使い方を知るには十分だと思います。(DOM の入門向けの解説は、JavaScript によるものが多いので)
if( $FORM{'comment'} =~ /s?https?:\/\/[-_.!~*'()a-zA-Z0-9;\/?:\@&=+\$,%#]+/){ $url=$&; print "$url\n";} # 複数を取り出したければ @url = $FORM{'comment'} =~ /s?https?:\/\/[-_.!~*'()a-zA-Z0-9;\/?:\@&=+\$,%#]+/g; foreach(@url){print "$_\n";} exit;
後出し条件によって質問の全体像が見え辛くなった気がします。 まとめ直してもらえませんか？ 登場サーバーが全部で何台か、それぞれでの 自作 HTML/CGI や SSI の可否は特に重要です。
せっかくなのですべては書きません。 テキストを読み込んだら、一行ごとに　/\=/で切り離して、ハッシュ(連想配列)たとえば $0,$1,$2を $ID{$1}=$1;#password $ID{$1}=$2;#address といく。 これで、任意のIDから値が取れだせる。実際には、 各行をパターンマッチで読んで、 m/$name\=(.*)=(.+)$/として探して、マッチする行だけ使うほうが良いかも、時間はこの方が遅いけど、ID忘れ、パスワード忘れ、アドレス忘れへの対処が出来る。
@LINE = map($_->[1], sort{$a->[0] <=> $b->[0]} map{m/([^\"]*)/, [$1, $_]} @LINE); かな。 # テストしてません。
shellは何をお使い？ perlで書かれたプログラムをshellから起動する方法？ それともSEDを使うとか・・
これでどうかな？ $myaddress='aaa@example.com'; # 自分のアドレス open(IN, "エラー.dbx"); foreach(<IN>){ 　if(/^To: .*?([-+\w.]+\@[-\w.]+\.\w{2,5})(\W|$)/ && $1 ne $myaddress){ 　　push(@emails,$1."\n"); 　} } close(IN); print @emails; ※空白は変えてね！
なんだか質問で提示されたコードにtypoが多くて 回答にも自信が持てませんが @deny = qw(アホ バカ http); このようにdeny.cgiに書き込むほうが楽そう。 unshift ( @data , '@deny = qw('. $FORM{'deny'} .');' ); で、どうでしょう。 qwについては http://pub.ne.jp/wakapon/?entry_id=440238 こちらを参考に。
使っている文字コードを Perl に教えてやればいいんだけど.... use Encoding でいいのかなぁ?
> このような感じで書いたのですが、同じ行に並べることができなかった それは、 > @lines = <>; で読み込んだ時点で、配列には改行込みで格納されているからです。 読み込み後に「 chop @lines; 」とすれば、改行無しのデータになります。 ただし、挙げられたコードでは、最初に全てのデータを読み込んでいますので、このままでは「秀丸で表示できないほど大量のデータ」は処理できないと思います。 以下のように、 必要な行だけデータとして持って、不要になった行は適宜読み捨てるようにした方が良いでしょう。 --- $keyword = "重要"; $before = 3; $after = 3; @lines = ('dummy'); # ダミーデータ。読み取りループの最初にshiftで消える for(my $i = 0; $i < $before + $after; $i++) { $line = <>; chop($line); push(@lines, $line); } while ($line = <>) { chop($line); shift(@lines); push(@lines, $line); if ($lines[$before] =~ /$keyword/) { print join("\t", @lines)."\n"; } }
補足ありがとうございます。 >print OUT "@N"; この、ダブルクォートでくくっているのが原因です。 "$var" とか、"@N"のように変数をダブルクォートでくくった場合 variable interpolation といって、変数の内容が展開されますが 配列の場合は#3の方の回答にある特殊変数$"の内容が要素の間に挟まるようになっています。 そしてその変数のデフォルト値が空白なので、空白が湧いて出てくるように見えるのです。 回避方法は#3の通り$"に空文字列を設定するか、あるいは ダブルクォートでくくらずに print @N; で良いと思います。 以下ドキュメント(perldoc perlvarで確認できます)から。 $" This is like $, except that it applies to array and slice values interpolated into a double-quoted string (or similar interpreted string). Default is a space. (Mnemonic: obvious, I think.)
そこに書いてある通り, Template->new() を呼び出すときに ABSOLUTE なり RELATIVE のオプションを与えないといけないんじゃないの? 与え方は知らんけど, 調べれば出てくるような気がする.
数字の 0 を読んだところで while(my $c = getc STDIN){ $strp .= $c; } のループから抜けてしまっています。ここの条件判定は while( defined (my $c = getc STDIN)　){ ... } でないといけません。
そゆことです。 継承されることがあるなら、使い分ける必要があるってことです。 $self->isa(__PACKAGE__) は Test::A を継承しているか調べています。他にも can とかあります。リフレクションみたいなことをするには必要になります。本題とは離れてしまって申し訳ない。 http://search.cpan.org/~nwclark/perl-5.8.9/lib/U … 他に似たような手段には caller もあります。 基本的な事はこちらが参考になると思います。 http://perldoc.jp/docs/perl/5.8.8/perlobj.pod http://perl-users.jp/articles/perl5oo.html
Class::DBI は開発がほぼ止まっていますので、ORマッパーを利用するのでしたらDBIx::Classを使うべきです。 セッションに関しては、CGI::Session と言うモジュールもあります。こちらの方が伝統的なモジュールでメンテナンス状況もよさそうです。 フレームワークに関しては、CGI::ApplicationはCGIプログラムに求められるインタフェースだけを定義した程度のとても薄いフレームワークですので、使っても差し支えないと思います。Catalystに関してはCatalyst独自の知識を多く要求されますので、Perlそのものの勉強として使うのには向いてないかもしれません。
/(?:.*\\)?(.*)\./ とか?
あ, たぶんわかった. 「shift-jis だと全角スペースが 8140 だから @ を含んでいるように見える」 ということかな. Perl のバージョンにもよるけど, 一度適当な文字コードに変換してから split やなんかを実行し, 再度 shift-jis に戻して move するのが安全かな. あと, 「$file をそのまま使うと無理やりリネームされてしまう」ということについては「処理の対象ではないファイルについてはあらかじめ除外しておく」のが正しいと思います. 今でも「.」とか「..」は初めから除外してますよね. これと同じように, たとえば next unless ($file =~ tr/@//) == 8; とかすればいいと思います.
すみません, 別の質問を見ていて, こちらを完全に無視していたことに気付きました. ごめんなさい. そっちの質問でちょっと調べたのですが, #3 の解釈でおそらく正解だと思います. どうも 1->[0] を $1[0] と解釈しているようです. あれ? 手元の ActivePerl では main:: に 1 が存在する.... そりゃそうか, :: と main:: は同じだもんなぁ. しまった, あっちにもフォロー入れとかないと....
それはできなかったはず. ${@table[0..2]}[0] = x; (右辺の x も適切にクォートしましょう) が ${$table[0], $table[1], $table[2]}[0] = 'x'; と解釈され, この前の {} 内がスカラコンテキストで評価されることにより ${$table[2]}[0] = 'x'; と処理されたんだと思う.
> 下記のようなルーチンがあります。呼び出す際はどのように記述すれば良いのでしょうか？ ご質問の意味がよくわからないんですが、以下に解釈して良いですか？ 「phone.pl の中に理解不能なサブルーチンがあります。 試しに使ってみたいのですが....」 えと、ここいら辺は避けて通る事を強く強くお勧めします。 機種名表示の為に質問せにゃならん技術力の持ち主にとっては百害あって一利なしです。 深く説明できませんが、人様に不愉快を大きく超えた迷惑をかける結果になる危険をはらむものです。
１．ファイルが読み込まれていない ２．while条件式が間違えている ３．if条件式が間違えている。 ためだとおもいますが。 以下のようにすれば動作するとおもいますが。 注）サンプルで作ったため動作未確認。 open(IN, "$filename") @IN = <IN>; foreach (@IN) { @arg = split(/\t/); if(($arg[5] eq "LBa3_00011") and ($arg[13] eq "1")) { print "$arg[5]\t$arg[6]\t$arg[7]\n"; } } close(IN); exit(0);
できなかったにしても, 単に「できなかった」とだけ書くのではなく「これこれこうなった」とまで書くようにしてほしい. 実際にどうなったかというのは, 考える上で大きなヒントになる. あなたの周りがどうかはさておいて, 一般に超能力者は多くないと推定されるんだから. 「回答しやすい質問」というものを心掛けてほしいなあ. でなんだけど, これは「split をそのまま書いたんだろうな」と推測できる. もしそうなら, split するときにタブで区切るように直してくれ.
お使いのブラウザが、スクリプト無効に設定されていませんか？ また、「しかし入れても表示されない」とのことですが、具体的にどこに何を入れたのかを書いてください。 「URL名」と書かれた部分に、指定ウィンドウの名前か「_blank」などを書きます。
・POST ・クッキー ・セッションとかDBとか
具体的な目的とか情報が少ないので的外れかもしれませんが、 元データが「09-12-11」という正しい書式になっているかどうかのチェックと、「0912」を取り出すのと、両方をまとめて書くなら、以下でどうですか？ ($str_date = $v_date) =~ s/^(\d{2})-(\d{2})-\d{2}$/$1$2/ or die '書式エラー';
> <STDIN>を入れておけば、止まってくれるので、同じように動作ができないものかと思っている次第です。 最終的にはそれでよいかもしれませんが 開発中はエラーメッセージを見るためにコマンドラインから実行するべきではないですか？ スクリプト中に本来の処理と無関係な <STDIN> を入れたくないなら、 perl test.pl pause と書いたバッチファイルを作ってこれを実行してもらうとか。 これならエラーメッセージも見られると思いますし。
はじめに「HTML枠」とおっしゃっていたのが、 ＞ 改造して上下にＨＴＭＬタグで表示装飾したいです。 上記ですね？ KENT-WEBさんでも他のところでも、基本的にはどのスクリプトであっても、スクリプト内にHTMLデータのヘッダ部分（headタグのことではない）を出力している部分がありますので、それを探して、任意の場所にご希望のHTMLタグを挿入すれば良いと思います。 あるいは、スクリプトによっては、はじめからそのような機能を備えています。 指定の文字列や画像やHTMLタグなどを上部あるいは下部に表示してくれます（「タイトル」や「ヘッダ・フッタ」など）。
#2です。あなたがなさりたいことは、こういうことですか。 #! /bin/perl use IPC::Open2; $pid = open2 RFH,WFH,"cmd1.exe"; # 子プロセスへ出力 foreach (1..10){ print WFH "AAAA",$_,"\n"; } close WFH; # 子プロセスから入力 @list = <RFH>; foreach(@list){ print "XXX",$_; } -------------------------------- cmd1.exeのソースの内容は #! /bin/perl while(<>){ print $.,":",$_; } ----------------------- 以下、実行結果 XXX1:AAAA1 XXX2:AAAA2 XXX3:AAAA3 XXX4:AAAA4 XXX5:AAAA5 XXX6:AAAA6 XXX7:AAAA7 XXX8:AAAA8 XXX9:AAAA9 XXX10:AAAA10 －－－－－－－－－－－ cmd1.exeは標準入力からデータを受け取り、標準出力へ処理結果を出力する。 perl本体は、cmd1.exeにとっての入力データを出力用パイプへ出力し、 cmd1.exeの処理結果を入力用パイプから読みとる。
>syntax error at hello8.pl line 5, near "++;" >syntax error at hello8.pl line 7, near "--;" ++や--の使い方が間違ってるから． 正しくは $a++; $a--; けど，こういう，increment/decrementは もっとわかってから使いましょう． 素直に $a=$a+1; $a=$a-1; で十分．
一番良い方法はCGIのスクリプトの中身を調べて、 プログラムの中身を把握することだと思います。 10000件のデータを保管しているとのことなので、ファイルなのか、DBなのか わかりませんが、通常きちんとしたフォーマットに従って処理されていると思います。 事情があって、サーバーにログインできずにCGIソースを閲覧する事ができないということであれば、対応は以下のとおりだと思います。 ■シェル等を使い、データをHTML形式でダウンロード 以下の一行で1万件のデータ自体はファイルに取り出せると思います。 for x in `seq 1 1000`;do wget --output-document=$x http://example.com/exmaple.cgi?$x;done; ■ダウンロードしたファイルの解析 ダウンロードしたファイルの解析については、出力される内容に依存しますので、どうすればというのはなんとも言えないですが、 HTML::Parser などを使うと比較的簡単に処理できると思います。 仕事半分、趣味半分でそうしたことをやってますので、 自分で行う時間がないのであれば、下記のフォームからでも ご相談いただければと思います。 http://e-uematsu.net/php/form.php
ヒントでは無理なようなので、具体的に・・・。 例では、./log/A/○○.txt　のようなパスの場合の記述です。 my $dir = '/log';# 対象ディレクトリ名(相対パスでもOKです) opendir DH, $dir or die "$dir:$!"; while (my $file = readdir DH) { use File::Copy; copy "./A/$file, "./B/$file" or die $!; } closedir DH; 以上。未チェックですが。
perl printf でネット検索すれば、すぐに出てきます。 http://www.rfs.jp/sb/perl/05/printf.html それから、質問のタイトルも不適切ですよ。
ああ, (\'a' \'b' \'c' \'d') はもちろん (\'a', \'b', \'c', \'d') です. これがさらにスカラコンテキストで評価されるので最後の \'d' が値として使われる, と.
>>「配列 0 .. 4 から 3個の要素を取り出したすべての組み合わせを作りたい」 > まさにその通りです。配列数も可変で、なおかつn個の要素を取り出した全ての組み合わせ…ということです。 次のプログラムは、for ループで n 個の組み合わせを生成し、comb ですべての組み合わせを生成します。 @list と $n を変更すると、柔軟に対応できると思います。 use strict; my @list = (["りんご","みかん","レモン"], ["ジュース","サイダー","リキュール","酒","スープ","アイス","キャラメル"], ["クレープ","パイ","ケーキ","スイーツ","チャンプルー"], ["～","…","・"], ["1人前","200g","1000円分","山盛り","ちょっと","一皿"]); my $n = 3; my @order = 0 .. ($n - 2); my @limit = map { $_ + @list - $n } @order; $order[-1] -= 1; for (my $i = $#order; $i >= 0; $i--) { if ($order[$i] < $limit[$i]) { $order[$i]++; if ($i < $#order) { $order[$_] = $order[$_ - 1] + 1 foreach $i + 1 .. $#order; } foreach my $j ($order[-1] + 1 .. $#list) { comb(@order, $j); } $i = $#order; redo; } } my @work; sub comb { my $idx = shift; foreach my $item (@{$list[$idx]}) { push @work, $item; if (@_) { comb(@_); } else { print join('', @work), "\n"; } pop @work; } }
　ローカルで十分テストして、サーバーにアップロードして、telnetが可能なサーバーなら、telnetでテストする。不可能なサーバーなら、telnetの代替手法を使います。 　ローカルにリモートと同じ環境を整えるのもよいでしょう。 　私は、独立したドライブにインストールされたCygwinとPerl,Apacheを使い。必要な場合は、他のドライブのFreeBSD環境でテストします。(借りているサーバーの多くがFreeBSDであるため) ＞ソフトインストールは不必要なのか知りたいです 　基本的なものはありますが、特殊なライブラリ等が必要な場合は、telnetで接続してインストールします。ローカルのFreeBSDでインストールしてバイナリで転送することもあります。 　要は、プログラムの程度、ローカルの環境、リモートの環境、そしてあなたの技量次第です。 　
Perl はよく知らない。 Linux もあまり知らない。 でもシステム屋さんやってた知識からの推測。 CentOS 5.2, Perl 5.8.9、CentOS 4.6という言葉があるので、 ・インストールされているファイル群に不足がある。 ・必要なファイルはインストールされているが、 　リンクなどの際のパス設定などに不足がある。 ・単純にインクルードのパス設定に誤りがある。 ・CentOS 4.6での Perl とバージョンが違うため設定変更が必要。 ・とみせかけて実はCentOS 5.2 がわのシステム設定だった。 などなど。 なんとなくマルチスレッド絡みのエラーなので こっそりＷＥＢサーバの設定も関係あるのかもしれません。
ひょっとしてこういう結果が欲しかった? >perl mogera.pl りんご 果物 #【apple】 ばなな 果物 #【banana】 なし 果物 #【pear】 細かな間違いもあるけど、ハッシュを勘違いしているような気もします。 #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use feature 'say'; use utf8; binmode STDOUT, ':encoding(cp932)'; my $list = "りんご リンゴ 果物 apple おれんじ オレンジ 色 orange ばなな バナナ 果物 banana もも モモ 花 peach もも モモ 木 peach なし ナシ 果物 pear あんず アンズ 木 apricot あんず アンズ 実 apricot"; my %xx; my %yy; foreach my $line (split qq{\n}, $list) { if ($line =~ /(.*) (.*) (.*) (.*)/) { $xx{$1} = $4; $yy{$1} = $3; } } while (my $line = <DATA>) { if ($line =~ /^([^t]+)\t(.*)$/) { print "$1\t$2\t\#【$xx{$1}】\n" if (exists $xx{$1} && $yy{$1} eq $2); } } __END__ りんご果物 おれんじ果物 ばなな果物 もも果物 なし果物 あんず色
実験すればわかるけど, 可能なら「0 を足す」のが最も簡単ですぜ＞#6.
すみません。半角→全角のアルファベットですね。 全角にはA-Zのような表現は使えず、更に文字化けを起こします。 こちらは掲示板（CGI）で使うということでしたら、コチラを参考にしてみてはいかがでしょう。 http://perl.misty.ne.jp/14.html#c 掲示板に組み込んだ時の安全性というのは、メールアドレスやＵＲＬ書き込みへの対処という意味でしょうか。 それでしたら、<A herf= ～> から</A>に挟まれた部分を「URL、メールアドレスへのリンクは禁止です。」などのメッセージに差し替えてしまう方法が有効です。 my $word = 'ここにリンク！　→　<a herf="http://perl.misty.ne.jp/14.html#c">prel</a> <a herf="http://perl.misty.ne.jp/01.html">prel</a> '; my $message = 'URL、メールアドレスへのリンクは禁止です。'; $word =~ s/<A herf.+\/A>/$message/gi; print $word; _END_
できる限り use strict; して my で変数を定義すべし. そうすれば, 「ちょっとしたスペルミス」は Perl のほうでチェックしてくれるので眼を皿のようにする必要もない.
Perlに限りませんが、おおざっぱにまとめると以下のようなものになると思います。 【スレッドを使わない場合】 1. サーバプロセス常駐開始 2. 任意のポートをlisten＆クライアントからの接続をaccept 3. 全クライアントに同報したいタイミングまでsleep（コンマ秒以下の精度で待ちたい場合はselect） 　　※ この間も2の処理やクライアントからのreadなどを行いたい場合はノンブロッキングI/Oを駆使してがんばる 4. 全クライアントへノンブロッキングで一気にwrite 5. 3へ戻る 【スレッドを使う場合】 1. サーバプロセス常駐開始 2. メインスレッドにてlisten開始 3. acceptしたら、そのクライアント専用のスレッドを作成　あとの処理はそのスレッドに任せ、メインスレッドは2に戻る 4. クライアント専用スレッドは、何も考えずにその特定クライアントとの通信を必要に応じて行う　しかしメインスレッドからの同報要求があれば真っ先に対応する 5. 何か同報したいデータがあれば、メインスレッド（あるいは同報専用スレッドを用意）から全クライアント専用スレッドへ何かしらの手段でスレッド間通信を行う スレッドを使ってしまえば楽ですが、１クライアント毎に１スレッドが生成されますので、クライアント数が大きい場合(数千など)はさばききれないかもしれません。 以上ご参考まで。
こんにちは。 Perlがどうのというよりまず、プログラムというものをどのように動かすのかが整理出来ていないように思われます。 コレはどんなプログラム言語を使うにしても同じです。なぜなら、結果的に命令を受けるのは同じコンピューターだからです。 １．何をさせたいのかを整理する。 　　・英文から単語を抽出したい 　　・単語の出現頻度をカウントしたい 　　・それを多い順に並べたい 　　・それを画面に出力したい 実現するには、上の大まかなプロセスが必要だと分かってくるはずです。 これが分かってしまえば、後はそれら一つ一つを別のプログラムと思ってスクリプトの手順を考えてみます。 ２．何をしたらいいのか考える 何をさせたいのか、から「何をしたらいいのか」に変わります。ここがポイント。 コンピューターに分かるように話すには、どうやって言えばその通りにしてくれるのか…というステップ。そしてそれは今回、「Perlという言葉で話す」という条件が初めて適応されるシーンです。 まず、最初の英文から単語を抽出する所を考えてみましょう。 　・英文を渡す 　・単語で区切る 　・区切ったそれを個々の物として分類したままの状態にさせる 英文を渡すのはファイルを開いて入力すればよい、というのがすぐに分かりますね。 では、次に英語を読めない（というか、文字という概念すらない）コンピューターに単語を理解してもらうにはどうすればいいでしょうか。 英文の特徴を見極めて、人がその橋渡しをしてあげるしかありません。 特徴は、先に書かれた御方の仰るとおり、単語と単語の間に必ずスペースがある事です。 （多分、課題を英文に限定されたのは、ここの所に気が付いて欲しかったのだと思いますが…） させたい事がはっきりとしない段階では、マニュアル本はあまり意味がありません。こういったプロセスを経て初めて、「コレが出来そうな関数はどれかな？」と調べる事ができます。 関数の説明には、表だった使い方や使用目的が書いてあると思います。 しかし、説明されている使用目的と違っていても、自分のやりたい事に転用出来そうならばそれを使ってみて構わないのです。 関数の説明の、文字で書かれた用途を見るよりも、それがどんな動きをするものなのか、動作の本質を見てください。 プログラムを書くに当たって、一番大事な事は、させなげばならないプロセスをはっきりと認識する事です。 認識してしまえば、それらはとても小さくて簡単なプログラムの集合体だと気が付くはずです。 ある程度の関数の知識があればより考えやすくなりますが、ここまでのプロセスにはプログラムの言語の知識はあまり必要がないです。 いきなり書き始める前に、完成図をしっかりとイメージし、プロセスを考えてみてください。 スクリプトを詳しく書いて答えを開示する事も出来ますが、それはあなたの課題なのであなたの書き方で答えを導いてください。 こういう風にプロセスを分解すれば、全然難しくない課題ですから。 特にPerlは様々な書き方でそれを実現させる事が出来る言語ですしね。 ここでネタばらしをもらってしまっては、多分ずっと自力でスクリプトを扱うのはムズカシイと思います。 がんばって！！！
mime_pls でできるかどうか分かりませんしどのくらいの人がやる気になるかもわかりませんが, あくまで理論的には「1」もエンコードすれば回避できます. つまり, 例えば 「1月1日」 =?US-ASCII?Q?1?= =?ISO-2022-JP?B?GyRCN24bKEI=?= =?US-ASCII?Q?1?= =?ISO-2022-JP?B?GyRCRnwbKEI=?= 「1月 1日」 =?US-ASCII?Q?1?= =?ISO-2022-JP?B?GyRCN24bKEI=?= =?US-ASCII?Q?_1?= =?ISO-2022-JP?B?GyRCRnwbKEI=?= とすれば区別できます (Q と B が混在しているという指摘は本質ではないので却下). 厳密に言うと MIME の規格はこの狭間を「完全に無視しているわけではない」のですが, なぜか中途半端にしか決めていないという不思議な状況.
XML::LibXMLなどのモジュール使うのが一番楽だと思いますが。
いや、だから八百屋に来て魚を売ってくれといってるようなもので、 不親切でもなんでもないんですが。 わたしもいちおう多少はPHPもわかりますが、PHPのカテゴリで 再度質問なさった方がもっとPHPに詳しい人の助言がいただけると思います。 つーか、仕事か何かの部分的なたらい回しですか?
すみません。#4です。 >ただ、tr///dの間に全角の＜＞を設定文字化けを起こすようです。 タイプミスで意味不明になりました。 正しくは、 ただ、tr///dの間に全角の＜＞を設定すると、文字化けを起こすようです。 です。失礼しました。 ついでの補足として、今回テストしたコードでは結局$wordに文字列を設定して処理させているのですが、 当初は#3の御方がなさっているようにファイルから一行ずつ読み込む想定でしたので、最後配列　@nokori　に入れ込んでおります。
ご質問の主旨と違っていてもうしわけありません。 No.2さんの仰るとおり、禁止Wordが厳しすぎるのではないでしょうか。このままですと、普通の言葉にも禁止が出てしまいます。 主にメールアドレスとＵＲＬに制限をかけたいのであれば、アドレスにしか使われない@やhttp:/などを排除対象にしてはいかがでしょう。 URLばかりが羅列された迷惑書き込みの殆どは、http:から書き始められていますし。メールアドレスの@は、顔文字などでも使われるので、文字クラスを使って、アルファベットｏｒ数字に挟まれているもののみを排除するようにしてはどうでしょうか。（顔文字の場合、記号と隣り合っていることがほとんど） @haijyo = ('http:/','\w@\w'); とか。いかがですか？
えぇと, 単に「tr で数える」だけなら tr/\t// で OK ですぜ＞#2.
そうそう, ちと Cygwin でやってみたけど, 見た感じスペースは入らないようですよ. 変数 CUT1 にスペースが入っていなければ, \'${CUT1}\' でもスペースは入らないはずです. 使っている OS がなんなのかわからないので何とも言えませんが. なお, カテゴリーに合わせて Perl で書くと while ($line = <>) { chomp $line; print map { "'$_'\n" } split /,/, $line; } くらい?
my @list = ('ab', 'cd', 'efg', 'hijk'); foreach my $line (@list){ - - if ($line =~ /^[a,e]/){ - - - - print "$line "; - - } } 賀したいことですが、クラスを | で区切りたいので my @list = ('ab', 'cd', 'efg', 'hijk'); fmy @list = ('ab', 'ced', 'efg', 'hijk'); foreach my $line (@list){ if ($line =~ /^a | ^e/x){ print "$line "; } } では・・・・
各種パーサやモジュールの紹介と、簡単な説明が下記にあります。 【参考サイト】 Perl開発者がXMLツールボックスの中身を充実させるには 　 http://www.ibm.com/developerworks/jp/xml/library … お気に入りが、すでにXMLになっているなら、REX: XML Shallow Parsing with Regular Expressions ( http://www.cs.sfu.ca/~cameron/REX.html )だけで事足りるかも。
URLからその実体が 非cgi(htmlとか) か Perl か PHP かを知りたい訳ですよね？ 確実には判らないでしょう。 「表示」⇒「ソース」は、htmlとして受信した内容のテキスト表示です。 これは、実体が CGI の場合はそのCGIの生成物であって CGI のソースではありません。 つまり、ご質問の「Perlはどうかの判定」には*あまり*役にたちません。 (「あまり」の真意は最後に) 多くのWebページオーナーは、PerlCGI には .cgi を、 phpには .php を拡張子として付けるので、参考にはなるでしょう。 しかし、技術的には、任意の拡張子と任意の動作(CGIを起動するかそのファイルをそのまま返すか等)をひもつけることができます。 極端な例として、Webページオーナーが閲覧者を欺こうと考えた場合には、ページ中の画像表示のための <img src="img.jpg"> を CGI で受ける事もできるでしょう。 で、拡張子以外の判断材料としては、html中の metaタグがあります。 これは「表示」⇒「ソース」で見る事ができます。 metaタグにはその htmlを作成した Web作成ソフトの名前とか生成した CGI の名前が書かれている場合があります。 善良な Webページであれば、本当である場合も多いでしょう。 巧妙にウソを書かれたなら、見破る手段が無いのもまた事実ですが。 要は、大方当れば良いのなら拡張子や METAタグを参考にすれば良いし、特殊なケースや悪意の Webページオーナーに騙されたく無いなら手段は無いと思います。
> $wk1は明示的に確保などしておらず、直接rtnaで作成しています。 この 1行の意味が致命的に重大です。 可能性1 ============================================ rtna 内で my $wk1 とか local $wk1 とか書いていれば、 rtnbからは見えません。 可能性2 ============================================ そうで無ければ、 両 rtn は、同じソースの同じ package 内ですか？ 可能性3 ============================================ rtnb から$wk1が見えるはず状況であっても、rtnb内で my や local で $wk1 を定義すれば、やはり見えなくなります。 可能性4 ============================================ $wk1 がリファレンスの場合や $wk1 を参照するリファレンスがあると、あなた自身が意図せずに内容を書き換えるケースもあります。 上記いずれもハズれの場合や理解できない場合は、同じ問題が発生するできるだけ短い完全なコードを手間をかけて作って貼り付けてください。 # 完全とは、それだけで実行できる『Perlのソースとして完結したもの』です。 # できるだけ短いとは、せいぜい2~30行で。
http://blog.livedoor.jp/dankogai/archives/508065 …
正直いって「# 来月のリンク部分」にある if (($next_month) && ($next_month <= $thismonth)) という条件の意味 (特に後ろのところ) が分からんのだけど, まあ基本的には同じですね＞#2. 一度「年」と「月」をわけて「月」をインクリメントする. で, 「月」が 13になったら「年」をインクリメントして「月」を 1に戻す, と.
>各##～##の文字列を対応するエレメントの値に置き換える、 >解釈はこれでいいのでしょうか・・？ はい，その解釈で正しいです。
アクセスログを採るためにHTMLに<IMG>タグを埋め込んでCGIにアクセスし、そのレスポンスとしての出力でしょう。（多分）
リストコンテキストで、gフラグをつけてマッチを実行すれば数値の部分だけ取り出すのは簡単にできます。 use strict; use warnings; use feature 'say'; use Regexp::Common; while (<DATA>) { chomp; my @numbers = /$RE{num}{real}/g; say join ' ', @numbers; } __END__ a:0.001 b:-11.111 c:50.5 d:-12.345 a:0.001 b:-11.112 c:50.5 d:-12.346 a:0.001 b:-11.113 c:50.5 d:-12.347 実行結果: 0.001 -11.111 50.5 -12.345 0.001 -11.112 50.5 -12.346 0.001 -11.113 50.5 -12.347 Regexp::Commonをインストールする必要がありますが、#2のTacosanさんが 示されているような正規表現を使えばRegexp::Common抜きでも同様のことが可能です。
>/^(\d{4})(\d{2}-1)(\d{2})$/); 二番目の {2}-1 の-1が問題でマッチに失敗してるのでは? timelocalに渡すので1を引きたいのでしょうけど、それは取得してから やるべきでしょう。
あ～, 端的にいえばその通りです. お気を悪くされたのなら申し訳ありません. つまり, (1) では date/log.txt というファイルにログを保存しているんですが, (2) では @lines という配列にデータを置いていることを想定しています. だから, ファイルと配列との間で適宜データをやり取りしないとだめなんだけど, その辺はちゃんとプログラムにあるのかなぁと気になったので. date/log.txt の中身は知りませんが, 「1行に 1個のデータ」という形なら １．date/log.txt から @lines に読み込み ２．@lines に新しい記事を追加する ３．@lines が大きすぎたら (2) のように減らして ４．date/log.txt に @lines の内容を書き戻す のような処理が必要だと思います. また, (2) で pop してますが, これは「古い記事ほど配列の後ろ (添え字の大きいところ) にある」という形でデータをもつ必要があります. ここも注意が必要ですね. この順にデータをもつなら unshift/pop を使うことになります. 逆順なら push/shift. あと蛇足なんだけど, ディレクトリの名前は「date」でいい? ひょっとして「data」だったりしませんか?
１・広告を表示させたい場所にスカラー変数を定義しておく。 ２・広告内容を外部ファイルとして作成し、任意の場所に置いておく。 ３・プログラムの冒頭で、絶対パスでファイルを指定し、広告欄に設定したスカラー変数に代入する。 とかでは不都合ですか？ これだと広告内容を書き込んだファイルを書き換えれば、全ての掲示板の広告を差し替えられるはずですが。 広告内容は当然html表示ですので、タグで書いてテキスト形式で保存しておけばおけば何でもアリだと思います。
期待されている動作かどうかわかりませんが、 参考 URL の location.replace は どうでしょうか。 参考URL：http://www.scollabo.com/banban/magazine/review_0 …
> しかし、test.cgi?a=wのように > パラメータをつけての実行が実現できません。 このとき、test.cgi をどのように呼び出していますか ? zxcv0000 さんが書かれているように、事前に $ENV{REQUEST_METHOD} や $ENV{QUERY_STRING} を 設定していますか ? CGI.pm を使うと、コマンドラインから呼び出す場合も test.cgi a=w のように呼び出せるのでお勧めです。参考 URL のデバッグ 方法のところを見てください。 参考URL：http://perldoc.jp/docs/modules/CGI.pm-2.89/CGI.pod
補足 書き方ってのはnewの位置じゃなくて中括弧（波括弧）の事ね
Openでパイプを使って起動した子プロセスには、環境変数は全てコピーされるはずです。 どの変数が消えたり変ったりしてますか? > 環境変数(IPアドレスとか、POSTデータ) CGIパラメーターが環境変数として渡されるのは GETメソッドの場合です。 (GETメソッドの場合、URL上でも xxxx?a=1&b=2 の様にパラメーターを表現できます) POSTメソッドの CGIパラメーターは、STDIN から入力します。 だから、これを子プロセスに引き継ぐには、それなりの工夫が必要です。 工夫というと、例えば以下のいずれかです。 ・ 親が STDIN を読む前に子プロセスを起動する。 ・ 親は入力した STDIN を記憶しておき、子プロセスの起動後に記憶内容をパイプで渡す。 子プロセスの STDOUT を親がパイプで読みたいなら、さらに面倒。 (パイプ指定の open() だけでは STDIN/STDOUT 両方のパイプは多分不可) いずれの場合も、CGI.pm なんかを親が使うとまずいかも知れません。
回答に　エラー発見　 ｅｓｃａｐｅ　ｓｅｑｕｅｎｃｅ　＆　メタキャラクタ　＞　削除　要請　＞　ＡＤＭＩＮ
Windowsには独り善がりな所があって、 CP932 を シフトJIS と呼び、 UTF16LE を Unicode と呼んだりしています。 Perlで使用する場合、 shiftjis (一般のシフトJIS) ではなく、 CP932 (Windows独自のシフトJIS) を指定します。 WindowsのActivePerlでシフトJIS文字列を扱うときは、多くの場合、 CP932 を指定した方が問題が少ないです。 参考URL：http://ja.wikipedia.org/wiki/Microsoft%E3%82%B3% …￤
大事なことがスルーされてる・・・ まず，最新のPerlてのはPerl5.10です． ActivePerlを入手すればいいでしょう． ところが，Perlは ・Perl4以前 ・Perl5.6よりも前 ・Perl5.6 ・Perl5.8以降 で全然，動作が違います． perl4およびPerl5.6よりも前のものには 日本語を自然に扱える「jperl」が存在しますが， Perl5.6にはjperlはないと思ってください． Perl5.6でunicode化された（という触れ込み）なので jperlが存在しないのですが，Perl5.6はまだまだUnicode周りが 甘いので実質上日本語では使い物になりません． したがって， 日本語を自然に使いたくて，最新のものとなると Perl5.8以降となりますが， 1998年の本だと古すぎて，役に立たない可能性があります． また，今から学習するのに わざわざPerl5.8よりも以前のものを使うのにも 意味があるとはいえません． そういうあたりと書籍が前提としているバージョンを 考慮して，Perlを入手する必要があります． 場合によっては違う本も視野にいれたほうがいいのかもしれません．
そういう「仕様」だからです。 perl の関数は、 scalar と list のどちらで評価されているかによって、返す値を変えることができます。 例えば、localtime 関数は、list context だと日時を配列で返しますが、 scalar context だとフォーマットを整えた文字列を返します。 print join(',',localtime). "\n"; print scalar(localtime)."\n"; map や grep は、「list context の時は結果のリストを返す」「scalar context の時は、結果の要素の数を返す」という仕様になってます。 (これは、配列を scalar context で評価した場合と同じ挙動です) ですが、sort 関数は「list context の時はソートしたリストを返す」「scalar context の時は何を返すかは未定義」という仕様になっているのです。
デフォルトで、PATHに追加する「Add Perl to the PATH environment variable」と関連づけする「Create Perl file extension association」にチェックが入っていたはずですが 外したりしていませんよね
本体のスクリプトのファイル名が main.cgi だとしてそこと同じ ディレクトリに index.cgi というファイル名で以下のような スクリプトを書いてください。 #!/usr/bin/perl # ↑Perl のディレクトリ # wrapper use strict; use CGI::Carp qw(fatalsToBrowser); use File::Spec; use File::Basename; use Cwd; # カレントディレクトリの設定 my $fn = File::Spec->rel2abs(__FILE__); $fn =~ s/\\/\//g; my ($dir) = (fileparse($fn))[1]; chdir $dir if(getcwd() ne $dir); # main.cgi を読み込む require './main.cgi'; exit; そして、すべてのリクエストを index.cgi に対して行うように するとスクリプトのあるディレクトリがカレントディレクトリになり ます。 ただし、すべての環境で動作するかどうかは分かりません。
や, それは「変数 $ent? に入れているわけじゃない」ことを理解してるんだよね? まあ, 結果的にできてればいいかもしれんけど....
system で起動するときに使うシェルは sh でしたっけ? だったら cp -r DIR1 DIR2 > /dev/null 2>&1 です. エラーメッセージだけを消すなら cp -r DIR1 DIR2 2> /dev/null でいいかもしれない.
"...などの、配列の構造体に格納"ということから、 恐らく、ハッシュ（いわゆる連想配列）に格納したい、 ということのなのでしょうね。 ハッシュ変数は頭に "%" をつけたものです。 もしそれをご存知ないようでしたら まずそこまで勉強されるのがよいでしょう。 ハッシュに特化した関数がいろいろあり簡単に記述できます。
CSV は、プログラミングの勉強ネタの宝庫だと思います。 " " で囲まれたセルは、「,」(カンマ) 以外でも以下の注意が必要です。 勉強のために取り組んでみるのは良い事ですが、手っ取り早く実用に耐える物が欲しい場合は自分に合った仕様のモジュールを探す選択肢もありかと思います。 1 " が閉じない内に改行が来たら、それはテーブルとしての改行では無くセルに埋め込まれた改行文字。 あるバージョンの MSExcelは、テーブルとしての改行は CRLF、 セル内埋め込みは LF と使い分けるかも知れませんが、それを期待してはいけません。 (業界規格では、CSV中の改行は全て CRLF と規定されていたと思います) 2 " " で囲まれた中に "" (2個連続した")が現れたら、それはセルに埋め込まれた 1個の " です。 3 MS-Excel が 「1/2」を「1月2日」に変換するのを抑止する方法は、MS-Excel のバージョンにより違います。 例えば Excel2003 向には ="1/2" とか"=""1/2""" と書いたりします。 読み込むCSVの作成ソフトによってはそういう工夫が入っているかも知れません。 4 その他、MS-Excel が日付や数値と解釈するのが不都合なケースは結構あって、手作業やアプリケーションで作成されたCSVはそれらを文字列と認識させる為の工夫が入っているかも知れません。
timelocalを使えばできますが、timelocalの引数は 年、月、日、時、分、秒を分けて与える必要があります。 use Time::Local; my $strtime = "20081202123000"; my($year, $month, $day, $hour, $minute, $second) = ($strtime =~ /^(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})$/); my $time = timelocal($second, $minute, $hour, $day, $month-1, $year); といった感じで。 (timelocal/localtime は、月が0～11で表されるので、1ずらす必要があることに注意) あとは、引き算して60で割れば経過分数になりますね。
画像CAPTCHAを使いたいなら、 以下のページの「CAPTCHAの実装」にいくつか載ってます。 CAPTCHA - Wikipedia http://ja.wikipedia.org/wiki/CAPTCHA PerlならGD::SecurityImageでしょうかね。 （提供してるのは画像認証機能だけなので、フォームへの組み込みなどは自分でやる必要があります。）
Win32::Process はPerlモジュールの名前です。 詳細は以下で確認ができます。 http://search.cpan.org/~jdb/Win32-Process-0.14/P … なお、プライオリティのセット方法は以下の関数です。 $ProcessObj->SetPriorityClass($class) 参考までに。 参考URL：http://search.cpan.org/~jdb/Win32-Process-0.14/P …
一行野郎で。 perl -i.bak -E 'BEGIN{$/=\200};while(<>){say $_}' 対象ファイル マルチバイト文字の泣き別れなどはdon't careです。 5.10 頼前のバージョンであるなら、-E を -e に変え、say を print $_, "\n" にしてください。
たとえば、 $hoge = 'あの人はＫＹだ'; $hoge =~ s/KY/空気の読めない人/; print $hoge; という感じでしょうか。 出力される前に入れればよいです。
どう？っていわれても漠然としてますね。。。 仕様もあやふやな部分がありますし。 私ならば、 ・入力させるところを作る。 標準入力？WEB上でやるの？それともほかのものを使うの？ どのような形で入力させるのか？ ・入力されたものを配列に入れる 数字は数桁になるか？ 最大二十個と言うのは、数桁のものも含む数字が20個以内なのか、数字（一桁の数字）が20個以内なのか？ ・逆順にする ・表示する 表示とはどのような形式で？ と言う順番で作ります。
すっかり忘れてました。 もう解決されてしまったと思うのですが、なんとなく忘れてたことがやな感じで消えないので回答を書いておきます。 >CGIを実行する場合はローカルマシンよりサーバへFTP接続していると思っていいんですよね？ >したがってremote_fileというのがサーバ上のファイルでlocal_fileというのがローカルマシンのファイルですか？ >なにか大きな勘違いでもしているのでしょうか？ 　しています。 　CGIを実行した際には、ブラウザとCGIの乗っているWEBサーバ(以降WEBサーバ)が接続されているだけです。 　CGIは、WEBサーバ上で動作しますので、CGIプログラムの中で実行される内容はすべてWEBサーバ上の出来事になります。 　それを踏まえたうえでソースを読むと、、、前述のプログラムは、WEBサーバ上でFTPクライアントが起動され「my.host.com」に接続して、「my.host.com」に置かれたファイルをWEBサーバ上にダウンロードするという意味になります。 　なので、ちょっと違うと・・
No.1 のつづきです。 暗号文字列中に印字不能文字が現れて困るなら、とっても面倒な処理が必要です。 (コード表に無い数値をスキップせにゃなりません) 私は知りませんが、面倒を見てくれるモジュールを探す方が良いでしょう。 出力が暗号バイナリ列で良いなら、 $maxchr を 0xff にしたらどうでしょう？ Perlのバージョンや use してるモジュールによっては binmode(STDOUT) を追加したり、 ord/chr を pack/unpack に変更が必要かも。
結局丸投げじゃん。 use strict; use warnings; my @charas; while (my $line = <DATA>) { chomp $line; next if $line =~ m{^//}; if ($line =~ /^\^chara/) { push @charas, $line; next; } if ($line =~ /^\^music/) { my @f = split q{,}, $line; my @name = $f[1] =~m/([a-z]+) _ ([a-z]+) (\d+)/x; printf qq{mp3loop "%s\\%s_%04d.mp3"\n}, $name[1], $name[0], $name[2]; } } foreach my $chara (@charas) { my @f = split q{,}, $chara; printf qq{ld c,":a;mp\\%s_%s_%s.%s.jpg",%s,%s\n}, $f[1], $f[2], $f[3], $f[6], $f[4], $f[5] ; } __END__ ^music,rei_bgm0001 ^music,rei_bgm0002 ^music,rei_bgm0003 ^music,rei_bgm0004 ^music,rei_bgm0005 ^music,rei_bgm0006 ^music,rei_bgm0007 ^music,rei_bgm0008 ^music,rei_bgm0009 ^music,rei_bgm0010 ^music,rei_bgm0011 ^music,rei_bgm0012 ^music,rei_bgm0013 ^music,rei_bgm0014 ^music,rei_bgm0015 ^music,rei_bgm0016 ^music,rei_bgm0017 ^music,rei_bgm0018 ^music,rei_bgm0019 ^music,rei_bgm0020 ^music,rei_bgm0021 ^music,rei_bgm0022 ^music,rei_bgm0023 ^music,rei_bgm0024 ^music,rei_bgm0025 ^music,rei_bgm0026 ^music,rei_bgm0027 ^music,rei_bgm0028 ^music,rei_bgm0029 //30 ^music,rei_bgm0030 ^chara,ううう,えええ,いいいa,long,center,あああ ^music,rei_bgm0031 ^music,rei_bgm0032 ^music,rei_bgm0033 ^music,rei_bgm0034 ^music,rei_bgm0035 ^music,rei_bgm0036 ^music,rei_bgm0037 ^music,rei_bgm0038 ^music,rei_bgm0039 ^music,rei_bgm0040 ^music,rei_bgm0041 ^music,rei_bgm0042 ^music,rei_bgm0043 ^music,rei_bgm0044 ^music,rei_bgm0045 ^music,rei_bgm0046 ^music,rei_bgm0047 ^chara,くくく,けけけ,ききき,long,center,かかか ^music,rei_bgm0048 ^music,rei_bgm0049 ^music,rei_bgm0050 ^music,rei_bgm0051 ^music,rei_bgm0052 ^music,rei_bgm0053 ^music,rei_bgm0054 ^music,rei_bgm0055 ^music,rei_bgm0056 ^music,rei_bgm0057 ^music,rei_bgm0058 ^music,rei_bgm0059 //60 ^music,rei_bgm0060 ^music,rei_bgm0061 ^music,rei_bgm0062 ^music,rei_bgm0063 ^music,rei_bgm0064 ^music,rei_bgm0065 ^music,rei_bgm0066 ^music,rei_bgm0067 結果: mp3loop "bgm\rei_0001.mp3" mp3loop "bgm\rei_0002.mp3" mp3loop "bgm\rei_0003.mp3" mp3loop "bgm\rei_0004.mp3" mp3loop "bgm\rei_0005.mp3" mp3loop "bgm\rei_0006.mp3" mp3loop "bgm\rei_0007.mp3" mp3loop "bgm\rei_0008.mp3" mp3loop "bgm\rei_0009.mp3" mp3loop "bgm\rei_0010.mp3" mp3loop "bgm\rei_0011.mp3" mp3loop "bgm\rei_0012.mp3" mp3loop "bgm\rei_0013.mp3" mp3loop "bgm\rei_0014.mp3" mp3loop "bgm\rei_0015.mp3" mp3loop "bgm\rei_0016.mp3" mp3loop "bgm\rei_0017.mp3" mp3loop "bgm\rei_0018.mp3" mp3loop "bgm\rei_0019.mp3" mp3loop "bgm\rei_0020.mp3" mp3loop "bgm\rei_0021.mp3" mp3loop "bgm\rei_0022.mp3" mp3loop "bgm\rei_0023.mp3" mp3loop "bgm\rei_0024.mp3" mp3loop "bgm\rei_0025.mp3" mp3loop "bgm\rei_0026.mp3" mp3loop "bgm\rei_0027.mp3" mp3loop "bgm\rei_0028.mp3" mp3loop "bgm\rei_0029.mp3" mp3loop "bgm\rei_0030.mp3" mp3loop "bgm\rei_0031.mp3" mp3loop "bgm\rei_0032.mp3" mp3loop "bgm\rei_0033.mp3" mp3loop "bgm\rei_0034.mp3" mp3loop "bgm\rei_0035.mp3" mp3loop "bgm\rei_0036.mp3" mp3loop "bgm\rei_0037.mp3" mp3loop "bgm\rei_0038.mp3" mp3loop "bgm\rei_0039.mp3" mp3loop "bgm\rei_0040.mp3" mp3loop "bgm\rei_0041.mp3" mp3loop "bgm\rei_0042.mp3" mp3loop "bgm\rei_0043.mp3" mp3loop "bgm\rei_0044.mp3" mp3loop "bgm\rei_0045.mp3" mp3loop "bgm\rei_0046.mp3" mp3loop "bgm\rei_0047.mp3" mp3loop "bgm\rei_0048.mp3" mp3loop "bgm\rei_0049.mp3" mp3loop "bgm\rei_0050.mp3" mp3loop "bgm\rei_0051.mp3" mp3loop "bgm\rei_0052.mp3" mp3loop "bgm\rei_0053.mp3" mp3loop "bgm\rei_0054.mp3" mp3loop "bgm\rei_0055.mp3" mp3loop "bgm\rei_0056.mp3" mp3loop "bgm\rei_0057.mp3" mp3loop "bgm\rei_0058.mp3" mp3loop "bgm\rei_0059.mp3" mp3loop "bgm\rei_0060.mp3" mp3loop "bgm\rei_0061.mp3" mp3loop "bgm\rei_0062.mp3" mp3loop "bgm\rei_0063.mp3" mp3loop "bgm\rei_0064.mp3" mp3loop "bgm\rei_0065.mp3" mp3loop "bgm\rei_0066.mp3" mp3loop "bgm\rei_0067.mp3" ld c,":a;mp\ううう_えええ_いいいa.あああ.jpg",long,center ld c,":a;mp\くくく_けけけ_ききき.かかか.jpg",long,center
参考まで 使い方：第１引数に^music,rei_bgm0001などの数行が記録されたファイルを指定します。 $ cat bbb ^music,rei_bgm0001 ^music,rei_bgm0002 ^music,rei_bgm0003 ~hoge,hoaegha001 ^music,rei_bgm0004 ^music,rei_bgm0005 ^music,rei_bgm0006 ^music,rei_bgm0007 ^music,rei_bgm0008 $ perl script.pl bbb mp3loop "bgm\rei_bgm0001.mp3" mp3loop "bgm\rei_bgm0002.mp3" mp3loop "bgm\rei_bgm0003.mp3" mp3loop "bgm\rei_bgm0004.mp3" mp3loop "bgm\rei_bgm0005.mp3" mp3loop "bgm\rei_bgm0006.mp3" mp3loop "bgm\rei_bgm0007.mp3" mp3loop "bgm\rei_bgm0008.mp3" 引数で指定されたファイルをreadlistで読み込み、改行コードを除いてsedbgmnameに1行渡しています。 sedbgmnameでパターンマッチをおこなっています。 （１）（２）はスクリプトを参考にパターンマッチを調べれば解決できると思います。 （３）は意味がよくわかりませんでした。 それでは、頑張ってください。 #!/usr/bin/perl use strict; use warnings; sub sedbgmname { return unless (@_); foreach ( @_ ) { if ( /([^,]*),(.*)/ ) { print "mp3loop \"bgm\\$2\.mp3\"\n" if ( $1 eq '^music' ); } } } sub readlist { my ( $readfile ) = @_; open ( FILELIST, $readfile ) or die; while ( <FILELIST> ) { chomp; sedbgmname($_) ; } close ( FILELIST ); } my ( $filepath ) = @ARGV; exit 1 unless ( -e $filepath && -f $filepath && -r $filepath ); &readlist( $filepath ) or die; __END__
こんな感じで重複データを削除できると思います。 @chlist = map { my %seen; [grep !$seen{$_}++, @$_] } @f;
ソースコード検索で結構引っかかりますが http://www.google.co.jp/codesearch?hl=ja&lr=&q=l … 参考URL：http://www.google.co.jp/codesearch?hl=ja&lr=&q=l …
> print SH "GET $page\n"; これじゃダメです。ちゃんと http プロトコルに従ってリクエストを出しましょう。 http://www.studyinghttp.net/cgi-bin/rfc.cgi?2616 … ・GET コマンドは、プロトコルバージョンを指定する必要がある ・リクエストが終わりであることを示すために、空行を出力する必要がある というわけで、最低限だと print SH "GET $page HTTP/1.0\n\n" で動作する場合が多いと思います。 ただし、これで動くのはタマタマというかサーバ側の親切のおかげですので、 もうちょっと手堅くやるなら $page =~ m#http://([^/]+)(/.*)$#; $host=$1; $path=$2; print SH "GET $path HTTP/1.1\n";　# "GET /index.html HTTP/1.1\n" print SH "Host: $host\n"; # "Host: 127.0.0.1\n" print SH "\n"; といった感じで。 でも、こだわり始めるときりがないので、そういうのは HTTPプロトコルに基づいたページ取得ライブラリを利用する方が簡単です。 例えば、LWP::Simple を使えば、 http://homepage3.nifty.com/hippo2000/perltips/LW … use LWP::Simple; $html = get('http://127.0.0.1/index.html'); と、実質たった1行でページ取得ができます。
use utf8; binmode STDIN, ":utf8"; binmode STDOUT, ":utf8"; open (IN, "<:utf8","LBa3_00028.txt") or die; これでいかがでしょうか？
今回も外れているかもしれませんが、#!/usr/local/bin/perl がコメント扱いされている 可能性があると思います。 コマンド行の hello.pl や１行目の /usr/local/bin/perl が見つからなかった場合は、 通常「No such file or directory」のエラーメッセージが出ます。一方、#!/usr/local/bin/perl がコメント扱いされた場合は、次の行の print は Perl の print ではなく、通常のコマ ンドとしてパス上を探します。見つからなかった場合に、「command not found」のエラ ーメッセージが出ます。(以上は Linux の場合で、Cygwin の場合は違うのかもしれません。 その場合は、スミマセン。) #!/use/local/bin/perl がコメントとして扱われるケースとしては、 ・１行目の先頭に空白がある ・１行目が空行で、２行目に #!/usr/local/bin/perl が書いてある ・ないとは思うが ##! になっている などがあります。一度、見直してみては ?
まずは #2 でも言われてますが「取り出す」というのがどういう処理なのかわかりません. そもそも「テキストファイル取り出したい 200個のファイル名があるのですが」というところは日本語としておかしいので意味不明. あと, 使ってる OS にもよるのでそれも書いてほしい.
>もうひとつ教えてほしいのですけど、抜き出した値が200.000や-12.000 整数部分が一桁に限らないということですね。 \d\.\d+ -?\d\.\d+ の \. の前の部分が整数部分の数字になります。 現状でそこは \d つまり数字一つしか想定していないのでここを 複数の数字を受け付けるようにすればOKです。 つまり、 \d+\.\d+ もしくは \d*\.\d+ のようになります。これは、前者は整数部に必ず数字がなければいけませんが 後者は .1828459 のようなものも受け付けます。
> http://members.at.infoseek.co.jp/sakura_editor/f … より引用。 | 正規表現を複数行にマッチさせるには？ | [類似質問] | 改行をまたぐ正規表現を作るには？ | できません．ごめんなさい．JRegex を使った改造版を(全略)さんが公開されており，そちらでは複数行マッチが可能です． というわけで、サクラエディタでは行をまたぐ置換はできません。 > たしか\nを置換してみたら↓が→になりました。 > のでCRを表す文字があるのかなとか。 CRLFにマッチさせるには \r\n を使ってください。
今、「Perl」でググると、1位がWikipediaで、2位がkent-web.comのPerl基礎入門といったように、旧来からのコンテンツが上位にあって、初心者がモダンなPerlの書き方を探すのが少しめんどくさい状況にあります。(2008/06/16) http://www.itmedia.co.jp/enterprise/articles/080 … 世間に溢れている掲示板のCGIではJcode等を利用して文字コードの変換を行うのが常識とされており，実際に私もjcode.plやJcode.pmを利用してきた。しかし，Jcodeモジュールはutf8フラグまで考慮されておらず，Perl5.8においては，文字コード変換はEncodeモジュールに任せるのが一貫性が取れている。(2005/06/01) http://blogs.dion.ne.jp/riji/archives/1203431.html >utf8に変換したい場合は本来どう書くものなのでしょうか？ 上記のとおり，Perl 5.8をお使いなら，標準モジュールのEncodeを用いるのがあるべきコーディングスタイルだと思います。 http://okwave.jp/qa4413021.html の私の過去の回答 ANo.3 および，その回答からさらにリンクでたどることができる私の過去の回答を参照。 もっと詳しい解説がお望みならこちらを。 http://www.rwds.net/kuroita/program/Perl_unicode … http://www.bugbearr.jp/?Perl%2FUnicode
プログラミングの初心者にはちょっと荷が重い気もしますが、 なんでそんな処理をするものを書くのですか? まずは ,20081202-110842,20081202-182321 このデータから、10分間をひとつの要素とした配列に対して その時間が使われているかどうかのフラグを埋めるとかはできますか?
時刻が午前0時のときのみ、前日の24時として表示したいということでしょうか。 それならばまず$hourが0かを判定し、真ならlocaltimeから24時間を引いて$hourに24を代入する、とかでいかがでしょうか。
先ほどの行を以下のようにif文で囲ってみてください。 if ($FORM{mode} !~ /kanri.*/) { $value=~s/>/&gt;/g; $value=~s/</&lt;/g; }
自分用メモを兼ねて、総まとめ。 #!/usr/local/bin/perl use strict; use warnings; use utf8; binmode STDIN, ":utf8"; binmode STDOUT, ":utf8"; open (FILE, "<:utf8","./list.txt"); my @input = <FILE>; close FILE; my %table = ( 　'あ' => 1, 　'ぁ' => 1, 　'か' => 1, 　'が' => 1, 　'さ' => 1, 　'ざ' => 1, 　'た' => 1, 　'だ' => 1, 　'な' => 1, 　'は' => 1, 　'ば' => 1, 　'ま' => 1, 　'や' => 1, 　'ゃ' => 1, 　'ら' => 1, 　'わ' => 1, 　'い' => 2, 　'ぃ' => 2, 　'き' => 2, 　'ぎ' => 2, 　'し' => 2, 　'じ' => 2, 　'ち' => 2, 　'ぢ' => 2, 　'に' => 2, 　'ひ' => 2, 　'び' => 2, 　'み' => 2, 　'ゐ' => 2, 　'り' => 2, 　'う' => 3, 　'ぅ' => 3, 　'く' => 3, 　'ぐ' => 3, 　'す' => 3, 　'ず' => 3, 　'つ' => 3, 　'っ' => 3, 　'づ' => 3, 　'ぬ' => 3, 　'ふ' => 3, 　'ぶ' => 3, 　'む' => 3, 　'ゆ' => 3, 　'ゅ' => 3, 　'る' => 3, 　'ん' => 3, 　'え' => 4, 　'ぇ' => 4, 　'け' => 4, 　'げ' => 4, 　'せ' => 4, 　'ぜ' => 4, 　'て' => 4, 　'で' => 4, 　'ね' => 4, 　'へ' => 4, 　'べ' => 4, 　'め' => 4, 　'ゑ' => 4, 　'れ' => 4, 　'お' => 5, 　'ぉ' => 5, 　'こ' => 5, 　'ご' => 5, 　'そ' => 5, 　'ぞ' => 5, 　'と' => 5, 　'ど' => 5, 　'の' => 5, 　'ほ' => 5, 　'ぼ' => 5, 　'も' => 5, 　'よ' => 5, 　'ょ' => 5, 　'ろ' => 5, 　'を' => 5, 　); my $anser; foreach my $input(@input){ 　print "入力文字列 = $input"; 　foreach my $num(split //,$input){ 　　$anser = ($anser + $table{$num}) % 9; 　　} 　if($anser == 0){ 　　print "解答 = 9\n";} 　else{ 　　print "解答 = $anser\n";} 　$anser = 0; }
まず、encodingプラグマは使うべきではないことを断っておきます。 (参考URL参照) で、ソースコードを見る限り、euc-jpで出力されることはないような気がします。ただし、文字化けする可能性はあります。 encodingプラグマは、STDOUTを:encoding('～') とPerlIOが噛むようにしてしまいます。よって、渡すのはUTF-8フラグが立っている文字列でなければなりません。 提示頂いているスクリプトでは、encode関数によってバイト列が渡されており、この使用法は正しいものではありません。 参考URL：http://blog.livedoor.jp/dankogai/archives/508575 …
ザックリしすぎていて実際に何を質問したいのかが よくわからないのですが。。。 とりあえず、外部設定ファイルをソース内で呼び出す方法について ここで言う外部設定ファイルというのは サブルーチンや変数、配列が記述されたライブラリなのでしょうか？ それとも キー＝値 という物が羅列されているファイルでしょうか？ ライブラリであるなら、 require( "ファイル名" ); でいいでしょう。 キー＝値であればファイルを読み込んで、キーと値を分解して 連想配列にでも入れておけば後で使いやすいでしょう。 別にライブラリとかを使う必要も無く %COMS = (); #外部ファイルの内容を入れる連想配列 open( COMMON, "ファイル名" ); chomp( @common = <COMMON> ); foreach $line ( @common ){ my( $key, $val ) = split( "=", $line ); $COMS{$key} = $val; } と数行のコードで間に合います。 いくつものファイルを読み込む場合は、サブルーチン化して ファイル名だけを引数に渡して、連想配列を返す形にすれば よいでしょう。 フルパス名をハードコードしないというのであれば パスなどを記述した設定ファイルを用意しておいて それをrequire()で呼び出す等すればよいかと思います。 こんな感じであってますかね？（＾＾；； 違う場合は補足でもしてください。
print()すればいいんじゃないですか？？？ あれ？違うのかな？ 通常Webであれコマンドラインであれprintで標準出力するのが デバッグの基本です。 例えば、コマンドラインの出力内容をファイルにリダイレクト する場合などは、#1さんの様に別のログに出力する方法を 取る事もあります。 あとは、Webで出力内容を変数に入れていって最後にまとめて 表示する場合などで、Content-type: text/html より先に 内容を表示したい場合などは print "Content-type: text/html;\n\n"; print 変数 . "\n"; とかします。 画面表示に本来のヘッダであるContent-type: text/htmlが 出力されますが、デバッグ中なら問題はないでしょう。
localtime() 関数をスカラーコンテキストで呼び出すと、次のような出力が得られます。 Mon Dec 1 17:10:08 2008 必要なデータはすべて揃っているので、少し加工するだけですみます。 my ($week, $month, $day, $time, $year) = split /\s+/, scalar(localtime()); print "$week, $day $month $year $time +0900\n";
いろいろ書いたけど結局のところ「ファイル全体を読み込んでからパターンマッチング」でいけるはず. だから $/ = undef; my $line = <>; my ($contents) = ($line =~ m!<BODY.*?>(.*?)</BODY>!i); $contents =~ tr/\n//; あたりでいいような気はするけど, 複数行のマッチングはやったことないから不安. m とか s とかのオプションは必要だったっけ....
<input type="hidden" name="mes" value="$FORM{'mes'}"> ↑このコードが原因です。と言うか、全然サニタイジングをしてないので、他のカラムでもダブルクォートが来るとNGだと思います。 やっつけで本文中のダブルクォート問題だけ直したい場合は、 (my $escaped_comment = $FORM{'mes'}) =~ s/"/&quot;/g; 中略中略中略中略中略中略中略中略中略中略 <input type="hidden" name="mes" value="$escaped_comment"> 等とすればいいでしょう。
「=?iso-2022-jp?B…?=」の部分は、MIME の B encoding です。 まずばMIMEの復号を行ってから、その後dえ感じコードの変換処理を行う必要があります。 jcode.plを使うような旧式な記述方式であれば、 --- require 'mimer.pl'; require 'jcode.pl'; $subject = 'Subject: =?iso-2022-jp?B?GyRCJWEhPCVrJE4lRiU5JUgbKEI=?='; $subject = &mimedecode($subject); &jcode'convert(*subject, 'sjis'); print "-->$subject\n"; --- とすれば、MIME をデコードしたShift JIS 文字列の取得ができます。
ご提示のソースをコピーして cgi で動かしてみましたが、 私の環境ではこのままで問題なく動作しています （多少改行を入れました）。 Summarizeとmecabの接続部分や、 mecab 自体がちゃんと動作しているかを 確認してみてはどうでしょうか。
エラー処理は、まちがっていないと思うのですが、 $DBI::errstr には何が入っていますか。
Activestate社から522用にビルドされたパッケージをダウンロードして ローカルでppmインストールすればｏｋ． http://ppm.activestate.com/PPMPackages/zips/5xx- … バージョンは古いですけど、perl本体が古いのだから致し方ないと思ってください。
そもそも、あるディレクトリにあるファイル名を取り出すのに opendir/reeaddir/closedir を使うこともないと思います。 @files = grep { -f } glob("$dir/*.txt"); てな感じで一気にリストが取れるのではないかと。
本当に「文字単位でマッチしている」んだったら, いくらバイト表現しても無駄です. つまり, 文字単位でマッチするときには s/[\x81-\x9F][\x40-\xFC]//g; は「文字コードが 0x81～0x9F の文字」の直後に「文字コードが 0x40～0xFC の文字」が来るパターンを削除します. でも, Shift_jis にはそんな文字はないのでこの正規表現は無意味ですよね. スクリプトを Shift_jis で書いて, s/ぁ-ん//g; とやったらひらがなが消えたりして.
http://sourceforge.net/project/showfiles.php?gro … 上からこれを http://downloads.sourceforge.net/pydns/pydns-2.3 … こんな感じ import DNS DNS.ParseResolvConf() r=DNS.Request(qtype='mx') res = r.req('connect.com.au') res.show() r=DNS.Request(qtype='soa') res = r.req('connect.com.au') res.show()
どういう局面で困っているのかよくわかりませんが、たとえば組み込み関数のint()ではどうですか？
どこが律速かわからないので効率的な高速化手法はちょっとわからないのですが, とりあえず「ファイル操作はなるべく減らす」という方針はどうでしょうか. 現状だと各ファイルの 1行ごとに「出力ファイルのオープン→1行出力→クローズ」を繰り返していますが, ハッシュを使えば無駄なオープン/クローズを減らすことができるはずです. 例えば open(FILE, $dir) or die "$dir: $!"; my %contents; while (my $line = <FILE>) { my ($a, $b) = split(/,/, $line); push @{$contents{"$a,$b"}}, $line; } close(FILE); while (my ($filename, $contents) = each %contents) { open(NEWFILE, ">>./out/$filename.txt") or die "$dir: $!"; print NEWFILE @$contents; close(NEWFILE); } のような感じにすればちょっとは速くなるんじゃないかな.
読み込むとき、というかPerlが実行されているときの環境です。 perlre というドキュメントを見ると i Do case-insensitive pattern matching. If "use locale" is in effect, the case map is taken from the current locale. See perllocale. とありますから、通常はアクセント記号つき文字は大小文字無視の対象になりません。 で、localeを有効にするには use localeすればよいです。 NAME locale - Perl pragma to use and avoid POSIX locales for built-in operations SYNOPSIS @x = sort @y; # ASCII sorting order { use locale; @x = sort @y; # Locale-defined sorting order } @x = sort @y; # ASCII sorting order again DESCRIPTION This pragma tells the compiler to enable (or disable) the use of POSIX locales for built-in operations (LC_CTYPE for regular expressions, and LC_COLLATE for string comparison). Each "use locale" or "no locale" affects statements to the end of the enclosing BLOCK. See perllocale for more detailed information on how Perl supports locales. もし環境変数とは関係なく設定したいのなら、perllocale にあるように # Import locale-handling tool set from POSIX module. # This example uses: setlocale -- the function call # LC_CTYPE -- explained below use POSIX qw(locale_h); # query and save the old locale $old_locale = setlocale(LC_CTYPE); setlocale(LC_CTYPE, "fr_CA.ISO8859-1"); # LC_CTYPE now in locale "French, Canada, codeset ISO 8859-1" setlocale(LC_CTYPE, ""); # LC_CTYPE now reset to default defined by LC_ALL/LC_CTYPE/LANG # environment variables. See below for documentation. のようにします。 とはいえ自分では use localeしたことってほとんどないので 実際にどうなるかはよくわかりません。 ドキュメントを読む限りではそれでいいと思うのですが。
while(read(STDIN,$buf,80)){print $buf,"\n";} マルチバイトを無視して良いなら、こんな感じかな。(80バイトで千切る例) perl4でも動く古典的なコーディングです。
テストしていないので自信はないのですが、配列名を文字列として組み立てて eval するとうまくいくのではないかと思います。 > foreach $w (@{$mn}) { # この行を、下のように変更する foreach $w (eval('@' . $mn)) {
#1　です。 なんとなく、ご理解いただけたようで。 私の文章にも、ちょっとミスがありまして、 おわかりのようですが、文章中盤でのＡさん、はＡ１さん、です。m(_ _)m それで、追記です。 じゃあ、デッドロックが出にくくするのには、どうするか？ですが、 複数の処理が実行される場合には、それが別々の処理でも、 可能な限り更新順序を一定にするのが基本的に楽な方法です。 ここで（また？・・すみません）プログラムが　ＰＧα　と　ＰＧβ　があって Ａ１さんは　ＰＧα　を実行して Ａ２さんは　ＰＧβ　を実行しているとします。 先ほどの例では、 ＰＧα　は　α　の次に　β　を ＰＧβ　は　β　の次に　α　を　書き換える、との例でしたが（説明用に） ＰＧα　も　ＰＧβ　も　書換順を　α　の次に　β　とすると デッドロックは起こり得ません。 現実、このように綺麗に作ることは難しいのですが、 考え方として参考になれば。
あまり試したことがないので、もっとスマートな方法があるかもしれませんが…… gオプションで繰り返し評価したらどうでしょうか？ 分かりにくいと思うので、サンプル借りてきました。 http://katamari.jp/weblog/index.php/2007/10/31/p …
違うフォルダにインストールすれば共存可能です。 インストーラのはじめの頃にインストールフォルダを選ぶ画面がありますのでそこで設定できます。 インストール時にPATHや拡張子の関連付け、IISの関連づけの選択がありますので古いバージョンをメインに使うのであればチェックボックスをはずせばOKです。 WebサーバーがIISの場合、設定はインストール時にチェックボックスをはずせば上書きされません。（チェックしたままだと新たにインストールしたもので上書きされる）インストール後、ディレクトリごとにどのバージョンのPerlを使うか設定することも出来ます。
> $q->td([$q->radio_group({-name => "try", -value => "1", -default => "" -label => "a"}), "あいうえお"]), > $q->td([$q->radio_group({-name => "try", -value => "2", -default => "" -label => "k"}), "かきくけこ"]) 上記の書き方では、別のラジオグループに属しているものと解釈されて、適切な出力が得られないと思います。 radio_group の戻り値は配列に入れることができるので、それを編集加工して埋め込むという方法があります。 my @radio = $q->radio_group( -name => "try", -values => ["1", "2"], -default => "-", -labels => { 1 => "a", 2 => "k" } ); print( ..... $q->td([$radio[0], "あいうえお"]), $q->td([$radio[1], "かきくけこ"]) ..... );
いや, とりあえず「どの質問に答えるか」ということについては「自分が答えられそうか」ということをまず考えて, その上でわりときまぐれですね. ただ, 自分が答えておいて「わからん」と言われるとやっぱり気になるので, 一度答えた質問に対してはなるべく解決してもらえるとうれしいなぁ, と思うわけです. あ, そうそう, サブルーチンじゃない方の for は多分 .. を使って for my $mm (1 .. 12) とか書いた方が Perl 的だと思います. .... すみません, いくつかバグってますね. @dd_max の最初の 0 は消してください & $dd に対する範囲が間違ってます.
> ↓はPOSTされ、CGI.pmで受領したデータを、現在のperlスクリプトが使用するutf8形式にデコードする。と考えてよろしいでしょうか？ > my $in_data1 = Encode::decode('utf8', $input_data->param('data1')); #変更 意味合いとしては、utf8の文字列を内部形式(uft8)にデコードしてます。 しかし実際には、UTF-8フラグが付くだけです。 私も前に答えたときは確信がなかったので言いませんでしたが、 文字化けする原因は$in_data1や$in_data2にUTF-8フラグが付いていないことです。 たとえば、以下のコードのようにわざとUTF-8フラグを落とすと 最後のprintで出力されたテキストはutf8としても読めないものになってしまいます。 #-----------------------------------------------------------# use strict; use utf8; use open ":utf8"; use open ":std"; #標準入出力にutf8を指定。 my $data="こんにちは"; #use utf8してるのでUTF-8フラグが付いている utf8::encode($data); #わざとUTF8フラグを落とす #↑は$data = Encode::encode('utf8',$data); と同じ。 print $data; #正しく出力されない # UTF8フラグが落ちてるので、出力時に$dataの内容がLatin 1と見なされて # 強引にUTF8に変換(upgrade)されてしまい文字化けする。 #-----------------------------------------------------------# あなたが最初に提示しているコードの場合、 文字化けはUTF8フラグが立っている文字列と UTF8フラグが立っていない文字列を連結したときに起こっています。 このときもUTF8フラグが立っていない文字列がupgradeされるので 文字化けしてしまいます。 Encode::decode('utf8', $data); はutf8をutf8(内部形式)に変換しており一見無意味なようですが、 この処理をしないとperlは$dataがutf8だと言うことが分かりません。 なのでちゃんと教えてあげないと、perlは不適切なupgradeをしてしまうのです。 [参考] Perl 5.8 以降においての Unicode 文字列の扱い方 : NDO::Weblog http://naoya.dyndns.org/~naoya/mt/archives/00061 … Perl 5.8.x Unicode関連 http://www.rwds.net/kuroita/program/Perl_unicode … > もし元の文字コードがわからなかったら Encode::Guessなどで推測は可能ですが、 推測は失敗することもあります。 普通は送り側も自分で書きますから 送られてくる文字コードが不明と言うことは普通はないのではないかと思います。 > binmode(STDIN,":encoding(sjis)") ; ブラウザはgetやpostでデータを送るときに 「%A4%B3%A4%F3%A4%CB%A4%C1%A4%CF」のようにエンコードしてから送るので、 たとえ漢字やひらがなを送ったとしても実際に送られてくるのはASCII文字だけです。 （CGI.pmが元に戻しているので気づいていないかもしれませんが。） なのでエンコード指定は無意味なきがします。 あと、postの場合はSTDINからデータが得られますが、 getの場合は環境変数から取得するのでSTDINのモードを変更しても影響ないでしょう。
＞documentrootはわかるんですが、server_pathはどこで設定するんでしょうか？ 　環境変数{'SCRIPT_FILENAME'}に、使用しているCGIの、コンピューター上のパスがあるはずです。 　例のものだと　/cgi-bin/ENV_FORM.cgi です。 作成されているCGIのPATHは、これで分かりますよね。 /でsplitして、配列に入れればよいです。 　それから、同じ数だけ引けば、分かる。 　対象のplファイルのある場所は、telnetを使うか、telnet.cgi(探してください。)を使ってfindで探せば、PATHは分かるはずです。 / ｜-- home/ ｜　　　｜-- index.cgi ｜　　　｜ ｜-- user ｜　　　｜-- pl/ ｜　　　｜　　　｜-- abc/ ｜　　　｜　　　｜　　　｜--cde.pl 　もうすこし具体的なことがわかれば・・・
open(P,"ls -1 |");##lsコマンドを実行し、標準出力を受け取る。 while(<P>)##順次読み込む { if(/\.(.+)$/)##ピリオド(\.)以降の文字列(.+)にマッチすれば、 { print $1,"\n";##マッチした文字列($1)を標準出力に改行付きで出力。 } } close(P);##lsコマンドとのパイプを閉じる
「携帯サイト作成ソフト アドセンス」でググればけっこうありますよ。
Perl のバージョンによっては, プラグマなんかで対処できるかもしれない.
use utf8していると、utf8フラグと向き合うことになりますので 引っかかりやすい部分はあると思います。 具体的にどのようなコードを書いてどんなエラーが出たとか補足していただけますか? #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; use utf8; use Encode qw/from_to decode encode/; binmode STDIN, ':bytes'; my $str = "";#たぶんokwaveで変換しちゃうだろうけどはしご高。 my $outstr = encode('7bit-jis', $str, Encode::FB_PERLQQ); say $outstr; #→ \x{9ad9} #echo |nkf -S -j|hexdump #00000000: 1B 24 42 7C 62 1B 28 42 0A .$B|b.(B. $outstr =~ s/\\x\{9ad9\}/\x1b\x24\x42\x7c\x62\x1b\x28\x42/; say $outstr; こんな感じで、JISっぽい文字列にはしご高を埋め込めてます。 上記の出力を再度 nkf に食わせてsjisに戻すとsjisのはしご高になります。
「欲しい文字以外を削除する」という 考え方は如何でしょうか。 　tr/^[\x00-\x7f]//d; 　　↓ 　s/[\x80-\xFF]//g; ただし、文字コードによっては、やはりうまく行かないと思います。 文字コードによって、「日本語部分」の表し方が違っており、 日本語部分の中にASCII文字と同じコードが含まれる場合があります。 UTF-8 や euc-jp、SJIS でしたらこの方法で大丈夫だと思いますが、 JIS はダメです。 どんな文字コードも入力可能にするのでしたら、 Tacosan さんの仰言るように 最初に nkf -g あたりでコード判定をして UTF-8 に文字コード変換してから入力するのが良いかと思います。
それもそうだけど ($data,"shiftjis","utf8"); の部分がすごく謎だと思う＞#1.
同様の現象に当たったことがあります。 原因を追究してなく、回避していただけなのですが 回避方法はすでに気づかれているエンコードを行うことでした。
> ｐｐｍはちゃんと起動しています とはどんな状態でしょうか？ いつからだったか失念しましたが。ppm は GUI化され起動に時間が かかるようになっています。 "install time-hires" と入力されるのであれば、従来のCUIでの 操作ですので、コマンドプロンプトで ppm-shell で起動できます。
再帰呼び出しを使って、全部の組み合わせを生成しています。 use strict; my @kana1 = (['a', 'u'], ['n', 'm'], ['ko', 'co']); my @work =(); comb(0); sub comb { my $i = shift; foreach my $str (@{$kana1[$i]}) { push @work, $str; if ($i == $#kana1) { print join('', @work), "\n"; } else { comb($i + 1); } pop @work; } }
# 256行目～260行目 if ($name eq "comment") { $value =~ s/\r\n/<BR>/g; $value =~ s/\r/<BR>/g; $value =~ s/\n/<BR>/g; } この部分で、改行コードが<BR>に変換されています。 <BR>なので改行が見た目に反映されます。 変換せずに、削除すれば良いので、 $value =~ s/\r\n//g; $value =~ s/\r//g; $value =~ s/\n//g; このような記述に変更すれば動作すると思います。
今回の場合、URLエンコードが必要となります。 行っている処理は、URLデコードなので、逆です。 また、&jcode'convert(*value, 'sjis') は、 “$value”の文字コードを sjis に変換するので誤りです。 仮に、&jcode'convert(*URL, 'sjis') としても、 URLエンコードを行う前にSJISに変換する必要があります。 # 古臭いですが &jcode'convert(*URL, 'sjis'); $URL =~ s/(\W)/'%'.unpack("H2", $1)/ego; print "Location: $URL\n\n"; # どうでしょう？
書いちゃったので参考までに。 use strict; use warnings; my $datafile = 'a.txt'; my $targetfile = 'b.txt'; open my $ifh, '<', $datafile or die "can't open $datafile ($!)"; my @data; while (my $line = <$ifh>) { chomp $line; push @data, [split q{ }, $line]; } close $ifh; open my $tfh, '<', $targetfile or die "can't open $targetfile ($!)"; my $tmpname = $targetfile . '.tmp'; open my $tmp, '>', $tmpname or die "can't open work file ($!)"; while (my $line = <$tfh>) { if (index($line, '"') >= 0) { my $datum_ref = shift @data; $line =~ s{(".+?)" (\s+ end=) "(.+?)"}{"$datum_ref->[0]"$2"$datum_ref->[1]"}x; } print {$tmp} $line; } close $tfh; close $tmp; rename $targetfile, $targetfile . '.bak'; rename $tmpname, $targetfile; 修正前のファイルも残したほうがいいよね、つーことで。 本当はもうちょっとこったやり方をしないといけないのだけど手抜き。 #.+ → .+? だけのつもりだったのに何をやってるんだ
こういうやり方もあるということで。 #!/usr/bin/perl use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; $/ = "<NAME>\n"; while (my $record = <DATA>) { my %h; chomp $record; next if ($record eq ''); foreach my $item (split qq{\n}, $record) { $h{$item}++; } printf("%2d %s\n", $h{$_}, $_) for (sort {$h{$b}<=>$h{$a}} keys %h); printf "=====\n" } __END__ <NAME> 田中 佐藤 佐藤 山田 田中 <NAME> 佐藤 田中 渡辺 渡辺 佐藤 実行結果: 2 田中 2 佐藤 1 山田 ===== 2 佐藤 2 渡辺 1 田中 ===== 二番目の名前の並びがちと期待通りではないですね。
正式にサービスというか80番ポートが有効になっていますか。 HTTPプロトコル(80番ポート)でアクセスできないといっているようなので Perl側ではなく、サーバかPC側の問題です。 もしかするとファイアウォール(FW)で80番ポートがブロックされている 可能性があります。 FWを何か使用しているならFW側の設定で80番ポートを開けたり AnHTTPdの80番ポート利用を許可してあげてください。 AnHTTPd側でAnHTTPdのサービスが正常に起動しているかどうか確認した 方がいいでしょう。 AnHTTPdの画面でエラーは表示されていませんか。
こんな感じですか? ---ここから--- use strict; my($group, $list, $matchset); while (<>) { chop; if (/^group/i) { $group = $_; $list = $matchset = ''; } elsif (/^list/i) { $list = $_; $matchset = ''; } elsif (/^(match|set)/i) { $matchset = $_; } elsif (/\S/) { print "$group,$list,$matchset,$_\n"; } } ---ここまで---
Anhttpdが起動していないとか。
どの程度化ける? 特定の文字だけ? (jcodeって「～」が化けるバグがたしか未だに存在していたはずだけど)
どういう事なのか少々意味が理解できないのですが、useはPerlが 実行する部分です。 Apacheはサーバであり、CGIなどでPerlを動かす際にその呼び出す プロセスとなりますが、useはPerlのコンパイラが解釈するので Apache側から制御はできません。 useで読み込むディレクトリの追加は use lib '追加したいディレクトリ'; または use lib qw(追加したいディレクトリをスペース区切りで複数列挙); です。 use './a/b'; # './a/b' を @INC に追加する use qw(./a ./b); # '.a' と './b' を @INC に追加する
本文を出力する前に、 print "Content-type: text/html\n\n"; とかは出力してありますか？ http://homepage2.nifty.com/sak/w_sak3/doc/sysbrd …
500 エラーだけでは、エラーの詳細が分かりませんね。 掲示板のプログラムに、次の1行を書いてみたらどうでしょうか。 use CGI::Carp qw(fatalsToBrowser); （http://allabout.co.jp/internet/cgiperl/closeup/C …　を参考に） すると、エラーの詳細が画面に出てきますので、それを修正すればいいと思います。
その三か所を修正すれば動くと思うのですが、それで動かないというのであれば > open(FILE,">>/tmp/$tim[5]$tim[4]$tim[3].txt"); を、 print "/tmp/$tim[5]$tim[4]$tim[3].txt\n"; open(FILE,">>/tmp/$tim[5]$tim[4]$tim[3].txt") or die $!; のように変更して、期待通りのファイル名になっているか、 エラーが出ないかどうかを確認してください。 あと、 　@tim = localtime(time); 　$tim[5] += 1900; 　$tim[4] += 1; 　for($idx=0;$idx<5;$idx++){ 　 　$tim[$idx] = sprintf("%02d",$tim[$idx]); 　} open のときのためだけにこれをしているのであれば、 openのところを my $filename = sprintf '%4d%02d%02d', $tim[5]+1900, $tim[4]+1, $tim[3]; open FILE, '>>', "/tmp/$filename" or die "could not open '$filename'($!)"; のようにしてしまったほうが良いと思います。 入力の whileも気になるけど、こっちはまあいいや。
論理が理解できん.... 「言語に依存すること」なら当該言語のカテゴリーで質問するのが適切だろう. 「言語に依存しないこと」なら言語のカテゴリーで質問するのは間違っている. あなたは「ext3 における総ディレクトリ数は言語に依存して決まる」とお考えですか? その根拠は? ちなみに「総ディレクトリ数」についてだけ:「ディレクトリ」は特殊なファイルだ.
こんな感じでいかが？ 何がどうなっているかは、調べてみてください！ ------------------------------------------------------ use strict; use warnings; open (my $fh1, "<", "A.txt") or die "$!"; chomp(my @data_a = <$fh1>); close $fh1; open (my $fh2, "+<", "B.txt") or die "$!"; my @data_b = <$fh2>; for(my $i=0; $i<@data_b; $i++){ $data_b[$i] =~ s/".+"/"$data_a[$i]"/; } seek $fh2, 0, 0; truncate $fh2, 0; print $fh2 @data_b; close $fh2; ------------------------------------------------------
use strict; use warnings; my $time = <STDIN>; chomp $time; if($time =~ /^(\d+)h(\d+)m(\d+)s$/){ print "$time=", $1 * 3600 + $2 * 60 + $3, "\n"; }else{ print "$time=no time\n"; } 前者は、こんな感じで 後者についてですが、ハッシュ自体値は重複できても、キーは重複できません。ということで、ハッシュに格納した時点で質問が成立しなくなるので、 上記リストをハッシュに格納する前に キーにあたる部分がいくつ重複しているか知りたい ということならば下記のようにすると調べられます。 use strict; use warnings; my @array = ('a',20,'b',30,'a',40); my %count; for(my $i=0; $i<@array; $i++){ if($i % 2 == 0){ $count{$array[$i]}++; } } foreach my $key (sort keys %count){ print "$key:$count{$key}\n"; }
すみません。 こちらも不注意でした。 201以上でしたら、以下です。 200～300を他の3桁と分けました。 =~ /^(2[0-9][1-9]|[3-9][0-9]{2,}|[1-9][0-9]{3,})$/ )
ひとつ聞き返したいことがあるのだけど、 なぜそれをperlでやろうとしているのかがわかりません。 やろうと思えば出来ると思いますが、GMT(Generic Mapping Tools)とか、もうすこし目的に合ったツールを探してみたほうが苦労が少なくなると思います。 GMTでマップを作成→gimpやirfanviewで画像の形式を変換という方法がベターだと自分は思います。
charsetをShift_JISとしていることから十中八九ShiftJIS使ってるからということだと思いますが、 CGIでいきなり動かさないでコマンドラインで試してみるか、ログを見ればすぐに判断つくような問題ではないですか? Unmatched [ in regex; marked by <-- HERE in m/ラー <-- HERE メン/ at okw.pl line 5. あるいはエラーメッセージをブラウザ画面に出るようにしとくとか。
sendmailに与える文字を詳しく。 メールは、ヘッド部と本文があり、間は空行で切られているはず。 ヘッダ内はBase64 たとえば、=?ISO-2022-JP?B?GyRCTmMbKEI=?= になるはずですよね。 そのあたりは?? CGIにおいて、 一旦EUCにして文字列を扱う sendmailに渡すときヘッダはBase64エンコード、本文はJis という処理になります。
ソースからインストールする必要がなければ、参考ＵＲＬにperlの実行形式のプログラム（sprac solaris10用）がありますが、それをインストールするのが、簡単かと思います。 今回、あなたが、ソースからインストールすることにした理由に非常に興味があります。差し支えなければ、その理由を教えていただけませんでしょうか。 参考URL：http://sunfreeware.mirrors.tds.net/
sprintf使うなら0パディングはsprintfにやらせた方がすっきりすると思いますよ。 sub get_date { ($ss,$mm,$hh,$dd,$mo,$yy,$day)= localtime(time); $day = ("日","月","火","水","木","金","土")[$day]; return sprintf("%d年%02d月%02d日(%s)%02d:%02d:%02d", $yy+1900,$mo+1,$dd,$day,$hh,$mm,$ss); } > 今はまだEUCでスクリプトを書く方が安全なのでしょうか？ 私がperlを使い始めたのはperl5.8以降からなので ずっとUTF-8でperlコードを書いてますが特に困ったことはないですね。 今までEUCで書いてた人がどう思うかは知りませんが。
最終的にあるデータを読み込んでカウントできればよいという 認識でもよいですか？？ という前提をしてみて下記のようなやり方はいかがでしょうか～？ データ自体は別ファイルにあるとする ファイル名:log.txt データは下記10個入っているとする。 windows95 windowsXP windows98 windows98 windowsXP windows2000 windows98 windowsXP windowsVista windowsXP でカウントする側のコードが ----------------------------------------------- use strict; use warnings; open (my $fh, "<", "./log.txt") or die "$!"; flock($fh, 2); chomp(my @list = <$fh>); close $fh; my %count; foreach my $str (@list){ $count{$str}++; } chomp(my $word = <STDIN>); if($count{$word}){ print $word, "の検索回数は、", $count{$word}, "回です\n"; }else{ print "。・゜・(ノД`)・゜・。そんなのないよ…\n"; } ----------------------------------------------- これをプロンプトで実行して windowsXPと入力すると windowsXPの検索回数は、4回です となります。 実際には、web上で入力してもらたキーワードに対するデータを表示することになるでしょうから、 chomp(my $word = <STDIN>); の代わりに差し替えて使ってもらえばよいかと思いますがいかがでしょうか？
ちょっぴり便乗させていただいて… 階乗の計算を1..$hogeのリストをforで計算 するってのもよいかもしれませんねぇ。 ---------------------------------------------------------- use strict; use warnings; print "数字を入力してください。\n"; chomp($_ = <>); die "これは数字ではありません\n" unless /^\d+$/; printf("入力された数字の階乗は%dです。\n", &kaijo($_)); sub kaijo { my $num = 1; $num *= $_ for(1..$_[0]); return $num; } ----------------------------------------------------------
cpan SOAP::Lite
>#2 >>> str = "foo \n" >>> str 'foo \n' >>> str.rstrip() 'foo' perl -e "$str=qq{foo \n};chomp $str; print qq{'$str'}" 'foo '
print "<input type=text name=data$i size=70 value=\"${\"data$i\"}\">\n"; とすればよいです。 しかし、ここはすなおに配列を使って my @data = split(/<>/, $data); my $i = 0; while ($i < 5) { $i++; print "<input type=text name=data$i size=70 value=\"$data[$i-1]\">\n"; } みたいにした方が楽だと思います。
何をしたいのか・どこがわからないかを明確にしないと回答は 付きにくいですよ。 画像のリサイズについては参考URLを参照ください。 参考URL：http://www.drk7.jp/MT/archives/001205.html
内部形式がUTF8なので、プログラマは PerlIOレイヤやuse utf8(またはuse encoding)、decode/encodeなどを利用して 文字列を内部形式に変換する(UTF8フラグを立てる)必要があります。 なので文字コードを意識しなくてすむわけではないです。 ただ、PerlIOレイヤを使えば変換している記述を省くことはできるかもしれない。 Perl 5.8.x Unicode関連 http://www.rwds.net/kuroita/program/Perl_unicode … perluniintro - Perl Unicode の手引き http://perldoc.jp/docs/perl/5.8.1/perluniintro.pod 内部形式がUTF8になった利点は、 文字列を(バイト単位ではなく)文字単位でちゃんと扱えるようになったことだと思います。 # 余談 openやopendirでファイル名やディレクトリ名を指定するときは (Windows環境では) CP932にデコードしないと文字化けするけど、 このあたりの処理をPerlIOレイヤみたいな仕組みで透過的にできないのかな？
/bin とかpathの通ったところに置くのは?
>This is perl, v5.8.5 built for sun4-solaris Excelで検算したとかあったのでWindows用のPerlだと思ってたのですが Sparc Solarisのでしたか。 であれば、CPUの違いによる可能性もあるのでもし可能なら Windowsのか、あるいは別のOS(x86用のものがたぶん望ましい)のもので 確かめられるのならやってみてください。 あと、bigintつかってても出力に pritnf使うとまずいです。たぶん。 bigint自体の文字列化のメソッドを使ってどうにかしてください。
末尾の文字列を利用すれば、YES/NO の判定ができるのではないかと思います。 %judge = (good => 'YES', up => 'YES', down => 'NO'); while (<FH>) { print OUT "\n$1,$judge{$4},$3" if /^(\d+)\s+(NO\s+)?(\d+)([a-z]+)/; }
その記述はおかしい・・ その文書、そのものを１行ずつ読むのではなく、CGIの内部で、QUERY_STRINGなどで送られたデータを処理した後ではないですか? だとすると、その前に スカラー変数=値 ないし 配列=値 という処理があるのでは？ だとすると、 if ($ABC =~/^\s$/){処理} のはずです。
.NET 正規表現とは違ったアプローチになりますが、一応あることはあります。 (.NET 正規表現互換も、package Something; use overload; sub import { overload::constant qr => \&substraction } sub substraction { #... } みたいなことをすればできるかもしれませんが――私はよく知りません) 本題に戻りますが、Unicode ブロック属性を用いれば目的は果たせると思います。 例えば: use utf8; print 1 if 'あ' =~ /\p{InHiragana}/; このように、\p{InHOGE} という形の文字クラス (と呼ぶのでしょうか) が utf8 プラグマの機能として (自信なし) 用意されています。 ちなみに、CJK 統合漢字の属性は \p{InCJKUnifiedIdeographs} だったと思います。 さらにこの属性を自分で作ることもでき: sub InKana { return <<'EOF'; +utf8::InHiragana +utf8::InKatakana EOF } まあこんな感じで、+ から始まる属性は追加、- から始まるやつは削除という風に定義できるらしいです。 応用すれば CJK から J を引いたクラスも作れると思います。 文字のバイト列を調べて平仮名かどうか調べる――といったテクニックの現代版と言えるのでしょうか。分かりません。 `perldoc perlunicode' で more details を得ることができると思います。 なお、この回答は全般的に「自信なし」です。
ヘッダは、 print "content-type: text/html\n\n"; でないとダメです。
無料かつ著作権表示が不要なCGIを配布しているものです。 ※もちろん、リンクを貼っていただけたら嬉しいですが・・・ 基本的は、デザインはHTMLファイルで別に持たせています。 詳細はサンプルを見ていただけたら分かるかと思いますが。 お気に召しましたらご利用頂けますと嬉しいです。 参考URL：http://kemu.net
1 つ補足させていただきます。文字列の比較演算子について。 以上は ge, 以下は le, より大きいは gt, より小さいは lt です。 目的に応じてお使い分け下さい。 先程の私の回答では、質問文のプログラムに則ってこれらの演算子をチョイスさせていただきました。 もし意図と異なる場合は、gt を ge に変えてみてください。 ご参考までに数値の比較演算子との比較表: < lt > gt <= le >= ge <=> cmp
>012345 6.6666ppm 2.6asc 3.9asc GOOD 0 0 >========= ==== >print OUT "$1,$2" if /^01234\d+\s+(-?[\d.]+)+\s+\d+\s+\d+s+(\d)/; \d は数字を意味しますので、(\d+) では GOOD を捕捉することはできません。GOOD, NO, MIN 等の大文字だけの単語をを切り出すには、([A-Z]+) を使うことができます。\s (空白類) と \S (空白以外) で行の構造にしたがって正規表現を組み立てると、捕捉することができます。 print OUT "$1,$2" if /^01234\d+\s+(-?[\d.]+)\S+\s+\S+\s+\S+\s+([A-Z]+)/; また、途中を読み飛ばす次のような方法もあります。 print OUT "$1,$2" if /^01234\d+\s+(-?[\d.]+).*\b([A-Z]+)/;
メールデータの解析は、普通はMIME::Parserモジュールを使います。 というより、サンプルとして上げられている方法よりも、ずっと簡単です。 http://search.cpan.org/~doneill/MIME-tools-5.427 … パースすると、送信者、送り先、件名、本文などなど個別に取り出せますから、必要なものをとりだして必要なら加工なりして転送すればOKです。 添付ファイルの場合は、multipartとして「本文の一部」に含まれますから、本文全体からtext/plainだけを取り出せば、本文テキストだけ、ということになります。
検索のロジックは、 ------------------------------ 1行取りだして、$lineに入れる $lineの内容を$valueに入れる $valueにキーワードが含まれているかどうかチェックする ------------------------------ というようになっています。これを全行分くりかえしています。 $valueがチェックの対象ですから、チェックの対象を変更したいなら$valueを調整すればOKです。 上記の「$lineの内容を$valueに入れる」の部分を、「$lineのうち必要なものだけを$valueに入れる」という処理に変えます。 簡単な方法としては、この行を、 $value = $line; 　↓↓ $value = join ',', (split /,/, $line)[1, 3, 4, 5]; に書き換えれば良いと思います。 CSVの左から2、4、5、6個目の項目だけ取り出して、$valueに入れています。 チェックさせたい項目を指定してください。一番左がゼロ、次が1、２、３…です。 ちなみに、カンマで区切って取り出した後にわざわざまたカンマでつないでいるのは、キーワードとフィールドの切れ目を考慮してのことです。 ところで、最初に書いたロジックをもう一度よく見てください。 なんだか無駄なことしていますよね。$lineは何のためにあるのか？はじめから$valueに入れればいいのに。 そういう意味では、今回のように特定の項目だけ対象にすることを想定してあるのかもしれませんね。
後者では (たとえば $_ = "test1" だと) open("test1", "+<test1.txt"); flock("test1", 2); print "test1" ""; truncate("test1", tell("test1")); close("test1"); 相当になります. で, truncate は第1引数にファイルハンドルをとると「そのファイルハンドルで現在オープンしているファイル」を, そうでないときには「その名前を持つファイル」を対象とします. だから truncate の第1引数にファイルハンドル test1 を渡せばいいんだけど.... typeglob とかハッシュとかを駆使すれば一応はできる, はず.
http://search.cpan.org/search?query=Crypt&mode=all /^Crypt::/ なモジュールならば、大体ご期待に添えるのではないでしょうか。 私が知っているのは Crypt::Blowfish と crypt() 関数ぐらいですが――。 http://search.cpan.org/perldoc?Crypt::Blowfish
いろいろ方法があるけど, 効率を考えて普通は連想配列を使うかな. エラー処理を全部無視すると my %address; { open(my $fh, "<FILE1"); $address{$_} = 1 while <$fh>; } { open(my $fh, "<FILE2"); $address{$_} = 0 while <$fh>; } { open(my $fh, ">OUT"); while (my ($key, $val) = each %address) { print $key if $val; } } とか. 効率を全く無視していいなら my @remove; { open(my $fh, "<FILE2"); @remove = <$fh>; } { open(my $fh, "<FILE1"); open(my $out, ">OUT"); while (my $addr = <$fh>) { print $addr unless grep { $addr eq $_ } @remove; } でもいいけど. 連想配列を使う方法は応用が広いのでなれると便利です.
$ENV{DISPLAY}を設定する必要があるとか何とか まずはApacheのエラーログを確認してはどうですか
スカラー変数からならこうしてはどうでしょうか。 my $str = <<'TEXT'; aaaaaa bbbbbb cccccc dddddd TEXT print join(',', map {"'$_'"} split(/\n/, $str));
Cコンパイラが必要ですので、使用するサーバーでコンパイルできる 環境になければインストールは諦めた方がよいです。
実際のファイルを処理するには、いろいろと難しい問題があるように思います。次の簡単な コードは、</div> を忘れているとダメ、複数の </div> が同じ行にあるとダメというもの ですが、出発点ぐらいにはなると思います。 use strict; my ($range_end, $depth, $r) = ('</div>'); while (<DATA>) { if ($r = /<div class="center">/ .. m!$range_end!) { s/(<img [^>]*?) ?class="right"/$1/; $depth = 0 if $r == 1; if ($r > 1 and /<div /) { $range_end = 'dummy_string' unless $depth; $depth++; } if ($depth and m!</div>!) { $depth--; $range_end = '</div>' unless $depth; } } print; } __DATA__ <div class="center"> <img src="xxx.gif" class="right" alt=""> (削除) </div> <div class="other"> <img src="xxx.gif" class="right" alt=""> (そのまま) </div> <div class="center"> <img src="xxx.gif" class="right" alt=""> (削除) <div class="other"> <img src="xxx.gif" class="right" alt=""> (削除) </div> </div> <div class="other"> <img src="xxx.gif" class="right" alt=""> (そのまま) <div class="center"> <img src="xxx.gif" class="right" alt=""> (削除) </div> </div>
my $path=(lc(($ENV{SERVER_PROTOCOL}=~m|(\w*)/?|)[0])||"http&quot;)."://".$ENV{SERVER_NAME}.($ENV{SERVER_PORT}!=80?":".$ENV{SERVER_PORT}:"").substr $ENV{SCRIPT_NAME},0,rindex($ENV{SCRIPT_NAME},'/')+1;
まあ、大体はANo.1さんとANo.2さんの回答でOKですが、上記の場合は こう言い換えた方が分かりやすいかもしれません。 $param{back} に数字以外が含まれていたら $str =~ s/<!--back start-->.+<!--back end-->//g を実行する。 Perlは式の結果(trueかfalseか)によってorまたはand演算子で つなげていくことができます。 openでよく見ますよね。 open(FILE, 'FILENAME') || die('ファイルが開けません'); みたいな感じのはopen関数はファイルを開くことに成功した場合 trueを返し、失敗するとfalseを返すため、成功すれば式中のor以降は 実行されず、失敗すればor以降が実行されます。 なお、上記の記述は少々欠陥がありますね。 もし、 $str の中に <!--back end--> が1つだけ含まれている場合なら 問題ないのですが、複数含まれている場合は最後まで置換してしまいます。 (わざとである場合もあるかも) $str =~ s/<!--back start-->.+?<!--back end-->//g とした方がいいと思いますが...。
親記事だけをカウントして、改ページ処理をすればいいです。 $pagev = n; #１ページに表示する件数 $page++; foreach(@DATA){ ($num,$body,$img) = split(/<>/,$_); if($img ne ""){ if(++$gcount < $prev * ($page -1)){ # 前ページ分スキップ $res=""; next; } $img = "<p><img src=\"$img\"></p>"; print <<EOM; <h1>$num</h1> <p>$body</p> $img <p>$res</p><hr> EOM $res=""; if(++$count == $pagev){ # 改ページ print qq(<a href="$ENV{SCRIPT_NAME}?page=$page">次のページ</a>); last; } }else{ $res .= $body; } }
if文自体は正規表現によるパターンマッチングです。 http://www.komonet.ne.jp/~perl/chap7.htm \x81～\x9Fおよび\xE0～\xFCはShift_JIS漢字コード（２バイトで１文字）における１バイト目の文字コードの範囲です。 範囲指定の先頭が [^ ですのでShift_JISの１バイト目でない文字・・・つまり漢字コードの２バイト目かまたは英数字にマッチします。 その次にくる\\[^\\]は、perlで￥自身を表すには\\と表記しますので、￥が１コあって￥以外の文字に続くことを意味します。 「処理1」の部分がわからないとハッキリしたことは言えませんが、$lvalueに入っている文字列がWindows（またはMS-DOS）でのディレクトリ名として正しいか判定している文ではないでしょうか？
Mac OS X Tigerのperl (v5.8.6)だと、dというデバッグコマンドは存在しないような。 お使いのperlのperldebugを読んでみては。
apacheのプロキシ機能を稼働させて、apacheのログを解析するほうが、簡単かも。
ANo.2への「この回答へのお礼」に記載してある質問に対して回答します。 Perlの方の記載は、いたって簡単です。Action Scriptで取り込みたい変数名と同じ変数に対して、Flashに渡したい値をイコールで連結して書けばよいです。複数のパラメータがある場合には、&でつないでください。以下に例を挙げます。($dataと$other_dataにPerlで計算した値が代入されているとします） print "Content-type: text/plain\n\n"; print "first_value=$data&second_value=$other_data"; Flash側で、同じ変数（この場合は、First_valueとsecond_value）を使ってこのデータにアクセスできるので、後は、AcstionScriptで自由に調理してください。
use File::Basename; system("cat -n $_ > " . basename($_) . ".OUT") for @ARGV; でできたりして.
つまり、「abc defあいうえおghi jkl」と記述されている「example.txt」があるとして、それを「exampleあいうえお.txt」にリネームしたいということでしょうか。 $ perl -ne '($str) = /abc def(.+?)ghi jkl/ or next; $old = $ARGV; rename $old, ($ARGV =~ s/(.+?)(\.)/$1$str$2/, $ARGV)[1]' *.txt 良い例ではありませんが、動くことは動くと思います。 /abc def(.+?)ghi jkl/ や *.txt などの部分を適宜置き換えて試してみてください。 リネーム処理ですが、正規表現より簡単なやり方は思い浮かびませんでした。
何がどううまくいかないのでしょう? エラーメッセージもなしですか?
SubversionのクライアントツールのTortoiseSVNを使うと ソースの世代管理は楽になります。 差分表示ツールもついてますし、他の人が紹介されている 差分ツールも設定できます。
http:// が付いていないと、host メソッドを呼び出すことはできないというわけですね。 今回のケースでは単に http:// を付けた URI を渡せばよいだけですが、もしも http:// が付いているかどうか分からない URI を受け取って、そのホスト部分を取得したいという場合は: #!/usr/bin/perl use strict; use warnings; use URI; if (defined (my $input = <>)) { chomp $input; my $URI = URI->new($input); $URI = URI->new("http://$input") unless $URI->can('host'); print $URI->host, "\n"; } このように、can メソッドを使って host メソッドが呼び出し可能かどうか調べるという方法が考えられます。
そういう目的で使用するのがセッション管理です。 セッションID(SESID)を利用することでセッション管理を擬似的に 再現するものです。 大手のサイトでログイン処理を行うような者では大抵、セッション管理で ログイン状態を管理していると思います。 PerlだったらCGI::Sessionが有名ですが、他にもいくつかあります。 PHPでは初めからセッション管理機能が実装されています。 セッションIDは任意の時間で有効期限を設定したりできます。 また、CookieにSESIDを登録しておくと自動でログインさせたり Cookieの有効期限が切れたときに自動でログアウトしたりします。
連投ですみません。 ubuntu をプリインストールしている EeePC があると書きましたが、ウソです。 eeeXubuntu というのを入れないといけなくなりますが、そうすると無保証になります。 http://ja.wikipedia.org/wiki/EeeXubuntu#eeeXubuntu 海外版だと Xandros Linux という Debian 系のものがプリインストールされたものが買えて、海外版を日本で売っている業者もいるようですが、海外版を日本で買うにせよ、Windows 用を買ってきて OS を入れなおすにせよ、初心者向けではないですね。 となると、ubuntu をもともと入れている DELL のネットブックがぼくのおすすめ（？というほど強い気持ちではない？ ^^;）です。 http://enterprise.watch.impress.co.jp/cda/hardwa … なお、ノートパソコンでサーバーを立ち上げるメリットがもう一つあります。それは内臓バッテリーがあるので停電でも安心、ということです。一般サーバーでは UPS というのを使いますが別売りになります。
>>「サーバーがダウンして、シャットダウンすら発行されない状態に なった場合」、あるいは、「なかなかデータが来ない場合」を想定し た、タイムアウト処理をしなくても問題ないのか？ということです。 問題あります。しないとまずいです。 >>そういう処理をしたサンプルを見たことがないので、その辺は、 プログラムで特に何もしなくても、下位層で上手くやってくれて いるのでしょうか？ 通常は、下層でやってくれますが、そのタイムアウト時間が自分の望む値になっているとは限りません。自由に設定できるようになっていても、実装がそうでないこともあります。なので、ユーザの（作成者の自分も含めて）満足できるようにするには、自分でつくることになると思います。 なお、あまりサンプルを見ることが無いのは同感です。 ＴＣＰ／ＩＰに関して、きちんとプログラミングをする場合、まずは「UNIXネットワークプログラミング/W.リチャード スティーヴンス著〈Vol.1/2)」を購入されることをお勧めします。ちょっと高価ですが、安物の参考書では、参考になりませんので・・・。
$datafile='./sample.js'; open(FH,">$datafile"); print FH "document.write(\"$in{'name'}\");\r\n"; close(FH); でどうでしょうか。 「ログ」ということですので、どんどん下に追加していく場合は open(FH,">$datafile"); を open(FH,">>$datafile"); にしてください。 (>が一つ増えている)
＞perl って省略が多いせいか、調べても分からない部分が多くて・・。 ＞いい参考サイトがあったら教えてください。 どの言語でもそうですが、サイトでチョコチョコ調べるというよりは最初はドンと本で勉強した方がいいと思いますよ。 http://www.amazon.co.jp/gp/product/4774108170/re … http://www.amazon.co.jp/%E5%88%9D%E3%82%81%E3%81 …
ここを見たら、 http://www.imagemagick.org/script/perl-magick.php ActivePerlの場合、ppmでインスコできないのは、Visual Studioを準備してnmakeでdllを作るのが基本ですな。 visual studio 2005 express editionでできるかも。
Net::SMTP->new のパラメータに、Debug=>1 を追加すれば、 うまくいかない原因がわかりそうです。 参考URL：http://q.hatena.ne.jp/1099119043
ANo.3&ANo.6です。 > Jcodeを使わない場合以下の行を削除する以外に > 変更が必要な箇所はありますでしょうか？ 出力がベタでいいならCGIのコードをRSSのコード(UTF-8)に合わせるぐらいでしょうか。 読み込むRSSが一箇所なら配列での処理は無駄になりますのでメインのループも不要になってコードもすっきりするかと思います(元は複数のRSSを読み込むようにしていたため)。 後、テーマ設定の配列が不要(これもRSSをHTMLに変換して利用していた名残)なのでこれも消しといてください。 とりあえず何事もトライしてみることが解決と学習の早道です。 失敗してから問うようにしたほうが回答を得やすいかと思います。
変更時刻のファイルテスト演算子-Mが使えそうな。こんな感じ： next unless -M $file < 30; 何を持って「30日以上」なのか不明なのではずしてるかも。 参考URL：http://perldoc.jp/docs/perl/5.6.1/perlfunc.pod
$str =~ s/(\W)/sprintf("%%%02x", ord($1))/eg; でどうでしょうか。
適切なカテゴリーで質問したほうがいいと思います。 シェルスクリプト（Bash)のmailコマンドなら 教えて！goo > [技術者向] コンピューター > OS > Linux系OS phpスクリプトなら 教えて！goo > [技術者向] コンピューター > プログラミング > PHP ######### sendmailコマンドは? http://tech.bayashi.net/pdmemo/sendmailbyperl.html とかはどうでしょう？
＞ my($mgk) = new Image::Magick(format => "png"); http://www.imagemagick.org/script/perl-magick.php を見た感じだと、formatは読み取り専用の属性みたいなので、 その本の記述が古くなっているのでは。 new時のformat指定は不要と思われ。Readの際ImageMagickがよしなにしてくれることを期待したほうが、手っ取り早そうな。
>この判断の前にサーバーに、「あんたのVerは？」 >って聴いて分岐させるべきだとおもうのですが、 >その方法はあるのでしょうか？ Webサーバに適当なHTTP要求を送信すれば，それに対するWebサーバからのHTTP応答の中にHTTPバージョンを示す値が含まれていますので，それを検査することになります。CGIプログラミングの入門書に解説が載っているでしょう。 ただ，今回のご質問の場合は。 HTTP/1.0のWebサーバ，HTTP/1.1のWebサーバ，ともにそのWebページを取得できればいいという最も基本的なニーズですから，単にHTTP/1.1要求を送信すればよいはずです。 RFC2145「HTTPのバージョン番号の使い方と解釈について」を参照。 http://www.tech-web.net/note/RFC2145.html#version
「可能か」という質問については「可能です」と答えておきます。 perlのプログラミングの素養がある人であれば、それほど難易度の高い問題ではありません。 ですが、質問者さんにできるかというと、そういった質問をしているぐらいの知識ではかなり難しいと思います。 まともに業務としてプログラム開発を発注するとすごく高くつきますから、 そういうのに詳しい「知人」に頼んで作ってもらうとか、そういう線で考えるのがいいんじゃないでしょうか。 少なくとも、見ず知らずの人に「作ってください」と言えるレベルではないです。
自分は C:\usr\bin に、 「perl.exe」と「perl58.dll」をコピーしたら、 #!/usr/bin/perl のままで使えています。 (どうしてこんな方法で使えるかは不明です。) Apacheはxamppのものをつかっています。
１つ目のやり方は、 1)先に、#に関係なくすべてのURLをHTMLに変換しておく。 2)「<a href=」直後に来るアドレスに含まれる#をすべて置換する。 ２つ目のやり方は、普通に条件式を作ってやるやり方で、コード例を記載しておきます。（専門家ではないので、やや冗長かもしれませんが・・・） my $char = '-_\.!~*\'()a-zA-Z0-9;/?:@&=+$,%#'; $form{'msg'} =~ s|(https?:\/\/[$char]+)|&change($1)|sge; sub change{ my ($line) = @_; if($line =~ m|(https?:\/\/[$char]+)\#([$char]+)|){ $line = "<a href=\"$1#$2\">$1%23$2</a>"; }else{ $line = "<a href=\"$line\">$line</a>"; } return $line; }
#3のスクリプトで5.10依存なのは say を使っていることだけなので、 そこを修正すれば前のバージョンでもokですよ。
変数にファイルハンドルを代入するには型グロブを使用します。 $fh = *FILEHANDLE; これで、変数 $fh に FILEHANDLE のファイルハンドルが代入されます。
-p0777　というのは、-p というオプションと 777 という引数を与えた -0 オプションの複合ワザです。 >この0777とは何の意味があるのですか。 コマンドラインで perldoc perlrun とすると解説が読めます。 -0[*octal/hexadecimal*] specifies the input record separator ($/) as an octal or hexadecimal number. If there are no digits, the null character is the separator. Other switches may precede or follow the digits. For example, if you have a version of find which can print filenames terminated by the null character, you can say this: find . -name '*.orig' -print0 | perl -n0e unlink The special value 00 will cause Perl to slurp files in paragraph mode. The value 0777 will cause Perl to slurp files whole because there is no legal byte with that value. 要するに、-0777 とすると、ファイルを行毎に切り出すようなことをしないで 丸呑みする(slurp files)ということです。
>その時点でセキュリティは最悪なので、 CGI::Sessionの使い方がわからないレベルの質問者が自作でセッション処理を作ったところでその作ったプログラムがセキュリティーに問題がある物になる可能性が高いですから中途半端な知識で下手に自作するより CGI::Sessionが使えるようにした方がいいでしょう。
まずは揚げ足取りから。 もともとのXMLには /y:ResultSet/y:Result/y:Categories/y:Children/y:Child/y:title/y:Short (ただし，上記xpathで用いられる名前空間接頭辞yは名前空間urn:yahoo:jp:categorySearchを指す) に該当する要素が21個存在していますから >結果を表示すると結果を20件表示するはずなんですが、 >21件目の空のリストが書き出されてしまいます。 ではなく >結果を表示すると結果を21件表示するはずなんですが、 だと思います。 さて，当方環境では 空のリスト(空行)が表示される現象が再現できませんでした。 代わりに，最後にのShort要素の内容が二回繰り返される現象を確認しました。 foreach my $category_id_item ( @category_id_items ){ if($category_id_item=~/<Short>(.+?)<\/Short>/) { $category_Name=$1;} print "$category_Name<br />\n"; } と foreach my $category_id_item ( @category_id_items ){ if($category_id_item=~/<Short>(.+?)<\/Short>/) { $category_Name=$1; print "$category_Name<br />\n"; } } の違いではないでしょうか？ #if文の閉じ括弧}の位置が違う #最後の要素が終わったあと，()内の条件がfalseと等価になって(この演算子の結果が何になるかは俺は確認してない)，print文はその外にあるので， #Short要素が無い時は代入文が実行されず #直前の内容が出力される。 ##俺の回答を見ていたら解るかも知れないが，俺は正規表現によるXMLのParseプログラムが嫌いです。DOM派です。 ##文字参照とか実体参照とかCDATA区間とか，名前空間接頭辞が違う，とかいう状態に変更される可能性も無くはないと思っているので。
デフォルトで入っているEncodeを使って以下のように変換してみては？ use Encode qw/ from_to /; $query0 = 'insert into aaatbl (filename) values("$aaa"); &from_to($query0, 'shiftjis', 'euc-jp' ); $sth = $dbh->prepare("$query0"); $sth->execute; $sth->finish;
この課題で検索のアルゴリズムを考えるときは、以下の点に留意したほうがいいでしょう。 ・二重カウント（「森」さんは「森田」さんでもヒットしてしまいます） ・苗字と普通名詞・地名等との区別（「川原で」「上野駅」など）
元の BreakPutter.cgi を少し見てみました。その中に、次のコードがあります。 sub Change { $result = $input{'document'}; $break = $input{'tag'}; if ($break eq 'br_head') { $result =~ s/(\r\n|\r|\n)/$1<br>/g; } elsif ($break eq 'br/_end') { $result =~ s/(\r\n|\r|\n)/<br \/>$1/g; } elsif ($break eq 'br/_head') { $result =~ s/(\r\n|\r|\n)/$1<br \/>/g; } else { $result =~ s/(\r\n|\r|\n)/<br>$1/g; } } 少し問題はあると思いますが、それはともかくとして Change サブルーチンの最後の段階で $result は、デコード済みで <br> タグ付きのデータになっています。Change の末尾に $result をファイルに落とすコードを追加すれば、サーバーに保存することができます。 それとも、考えているのはクライアント側での保存ですか？
$command = "HELO $server\r\n"; としても同じですか ? 行末が CRLF じゃないといけないという厳しいメールサーバかも しれません。
CPAN のドキュメントだと $dsn = "DBI:mysql:$database"; $dsn = "DBI:mysql:database=$database;host=$hostname"; $dsn = "DBI:mysql:database=$database;host=$hostname;port=$port"; のようにデータベース名とホスト名の間は、セミコロン ';' に なっています。 > $db = DBI->connect('DBI:mysql:db1:localhost', $user, $passwd); では、コロン ':' ですが、よいのでしょうか。 参考URL：http://search.cpan.org/~capttofu/DBD-mysql-4.008 …
なるほど・・821からですか． ＃そろそろ5.10にうつろうかな・・・Pugsでもいいんだけど(笑) >現象の発生するサンプルは今、もうちょっと簡略化できないか 一応，シンプルにするためにソフトリファレンスを ディスパッチテーブル（ハッシュ）にしたりする方法を 書いたのですが。。。 あとはサブルーチン，regex・・・これは本当に必要なのかな それから，ややこしい正規表現を書くときには xオプションも考えるべきでしょうね． 参照：Perlベストプラクティス（D.Conway，オライリー）
CGIプログラミングってオライリーの、表紙がネズミの本ですか? だとするとこの本の邦訳は相当古いものになってしまっているので、 使っているHTML::Parserのバージョン違いによるものかもしれません。 ><HTML><HEAD><TITLE>store</TITLE></HEAD><BODY><A href="abc.html">abc</A></BODY></HTML> これはHTML4あたりだと不正なHTMLではないですか? bodyのすぐ下に直接テキストを置くことはできなかったはずです。 HTML::Parserに対して想定するHTMLのバージョンを指定できたと 思うので、マニュアルを見て(perldoc HTML::Parser)、 2.0あたりのHTMLを指定して試してみてください。
ひとつの手としては、...... データを管理しているのはdb.cgiのようなので、これを開いて書き換えるような新しいCGIを作り、毎日1回自分で実行するというはどうでしょうか。 (毎日1回実行するところはcronが使えるなら自動化できます。)
失礼！ $host1 = ENV{'REMOTE_ADDR'}; $host2 = gethostbyaddr(pack("C4", split(/\./, $ENV{'REMOTE_ADDR'})), 2); if($host1 eq $host2) { &error; } 但しこれはIPの逆引き可能なサーバに限ります。
あとが大変ですが $/ = undef; が正攻法かな?
とりあえずPerl（というかHTMLをprintしてるだけ）のサンプルコード。 print "Content-type: text/html\n\n"; print "<html><body>"; print "<textarea rows=3 cols=20>(1)\n(2)\n(3)</textarea>"; print "</body><html>"; で，ANo.1と同様の疑問なのですけれど，検索エンジンで検索したというそのやり方にたどり着いていれば十分だと思うのですが，何が分からないのでしたっけ。
> 色々なフォームは沢山見つかりますが、上記だけは見つかりません。 えーとですね…この補足は、ANo.1の回答者様が挙げられている参考URLもちゃんとご覧になってサンプルを片端からチェックした上でのご発言ですか？ そのサイトの「フォームメール」というカテゴリ（現時点で既に130ものサンプルが掲載）の、わずか6番目に出てくるPGD WORKSさんのメールフォームが、質問者様が見つけられないと嘆いておられるパターンの1つ、「メッセージ各項目セル毎に表示されるフォーム」の仕様になっている様ですけど…？ もう一方の「上部表示されるフォーム」も、根気よーく探せば見つかる筈ですので、まずは上記のサイトの130のサンプルを全部チェックするのは当たり前、それで該当するスクリプトがなければ更に探索の手を広げる、ぐらいの気構えで頑張って下さい。そこまでしても望みのものが見つけられない、ということであれば、後は自作か業者に頼むかしかありませんので。
ブラウザ（ヘッダ送信） ↓ Proxy（ヘッダ加工） ↓ Webサーバーへのhttpリクエスト （Webサーバーがヘッダ情報を環境変数にしてくれる） という仕組みですから、匿名を目的として設置されたProxyがアクセス元やProxyを使っていることをヘッダ情報として出さない限りは、環境変数としてそれが提供されませんので、 ヘッダ情報を元にした環境変数以外の環境変数を使うしかないです。 そのうち、アクセス制限に有用な情報はREMOTE_HOSTぐらいしかないと思います。 ただそのREMOTE_HOST情報を元にして、匿名Proxy経由を排除したり 海外のIPを丸ごと排除したりということは、可能です。 掲示板ということなら、投稿処理をアカウント制にしてしまうのも方法の一つかと。 それと、キーワードのブラックリストをファイル化しておいて、 合致する文字が投稿文章そのもに現れたら、投稿エラーにするという方法もあるかと思います。
/^[-\w]*[-a-z][-\w]*$/ でいいのでは。
SJISで全角スペースの文字コードは 0x8140(\x81\x40) です。 0x40 はPerlで配列変数の接頭辞を表す @ に相当します。 Perlではスクリプトソースコード中のダブるクォート定数文字列内に 含まれている変数は展開挿入されてしまいますので \x40 以降に 変数として使用可能な文字列が続いている場合、それを配列として 展開挿入してしまいます。 そのため、あまり全角スペースを直接使用するのは好ましくないです。 SJISのまま全角スペースを表現したい場合は "\x81\x40" のように するかシングルクォートにして展開挿入しないようにするか、 外部ファイル化してopenなどで読み込むかなどをしないといけません。 これはバックスラッシュ問題と同様のPerlスクリプトをSJISで書いた 場合の問題です。 ヒアドキュメントで << の後に付ける文字列をクォートで囲まない 場合、ダブルクォートと等価になりますので、次のようにシングル クォートで囲んでみてください。 $mailbody .= <<'EOD'; この間です。 EOD
単に"テスト"と吐き出したいだけですから，use utf8 無しでいけると思います。 HTTPヘッダでのcharset指定と，IE対応のため utf8 ではなく utf-8 指定した，次のコードで試すとどうなりますか。 sub HEADER{ print "Content-type: text/html; charset=utf-8\n\n"; print << "-----END-----"; <!DOCTYPE HTML PUBLIC -//IETF//DTD HTML//EN> <html><head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> <META HTTP-EQUIV="Pragma" CONTENT="no-cache"> <title>Test Program</title></head> <body>\n -----END----- } "テスト"を文字列として扱いたいのなら use utf8 することになります。関連した過去の私の回答はこちら。 http://okwave.jp/qa4081348.html http://okwave.jp/qa4177909.html http://okwave.jp/qa4042131.html http://okwave.jp/qa3745875.html
同じページにＡと言うリンクとＢと言うリンクがあって Ａのリンクから来たのかＢのリンクから来たのかを記録したいって事ですかね？ それならＡリンクに<a href="～xx.cgi?mode=xx&xx_id=123">を貼って Ｂリンクに<a href="～xx.cgi?mode=xx&xx_id=456">を貼ればいいですよ。
はずしてるかもしれませんが、 binmode(STDOUT); が抜けているとか？
わけの分からない連番のついた変数を使ってるとか、シンボリックリファレンスを使っているとか 突っ込みたいところはあるんですがそれはおいといて、 配列の要素数が同じな場合は先頭の文字コードの大小で決めると言うパターンを例にすると こんな感じになります。 あと >ハッシュの配列 配列のハッシュ、ですよね。 #!/usr/bin/perl use strict; use warnings; use feature ':5.10'; no strict 'refs'; my @array0_n = qw(a b c d); my @array1_n = qw(e f g); my @array2_n = qw(h i); my @array3_n = qw(j); my @array4_n = (); my @array5_n = (); my @array6_n = qw(k); my @array7_n = qw(l n); my @array8_n = qw(m o p); my @array9_n = qw(q r s t); my %array1 = ( 0 => [ @array0_n ], 1 => [ @array1_n ], 2 => [ @array2_n ], 3 => [ @array3_n ], 4 => [ @array4_n ], 5 => [ @array5_n ], 6 => [ @array6_n ], 7 => [ @array7_n ], 8 => [ @array8_n ], 9 => [ @array9_n ], ); #配列の要素数の多い順にソート。要素数が等しいときは先頭の文字で決定 my @array2 = sort { scalar @{$array1{$b}} <=> scalar @{$array1{$a}} or $array1{$b}[0] cmp $array1{$a}[0] } keys %array1; our @array9_n2 = qw(a2 b2 c2 d2); our @array1_n2 = qw(e2 f2 g2); our @array2_n2 = qw(h2 i2); our @array3_n2 = qw(j2); our @array4_n2 = (); our @array5_n2 = (); our @array6_n2 = qw(k2); our @array7_n2 = qw(l2 n2); our @array8_n2 = qw(m2 o2 p2); our @array0_n2 = qw(q2 r2 s2 t2); foreach (@array2){ my $x = "array${_}_n2"; say "$_, $#{$x}, @$x<br>"; } say '######'; my @ary_of_ary = ( \@array0_n2, \@array1_n2, \@array2_n2, \@array3_n2, \@array4_n2, \@array5_n2, \@array6_n2, \@array7_n2, \@array8_n2, \@array9_n2, ); foreach (@array2){ say "$_, $#{$ary_of_ary[$_]}, @{$ary_of_ary[$_]}<br>"; } perl okw.pl Use of uninitialized value in string comparison (cmp) at okw.pl line 34. Use of uninitialized value in string comparison (cmp) at okw.pl line 34. 9, 3, a2 b2 c2 d2<br> 0, 3, q2 r2 s2 t2<br> 8, 2, m2 o2 p2<br> 1, 2, e2 f2 g2<br> 7, 1, l2 n2<br> 2, 1, h2 i2<br> 6, 0, k2<br> 3, 0, j2<br> 4, -1, <br> 5, -1, <br> ###### 9, 3, a2 b2 c2 d2<br> 0, 3, q2 r2 s2 t2<br> 8, 2, m2 o2 p2<br> 1, 2, e2 f2 g2<br> 7, 1, l2 n2<br> 2, 1, h2 i2<br> 6, 0, k2<br> 3, 0, j2<br> 4, -1, <br> 5, -1, <br> 面倒なので34行目で出ている警告は消してません。
とりあえず $s, $t を確認してみてはいかが?
それはHTMLやJavaScriptの問題になると思います。 ターゲット名を指定してやればいいだけです。 <form target="B"> <input type="submit"> </form> こんな感じ。 参考URL：http://www.tohoho-web.com/html/form.htm
>実行環境がなく困っています・・ たぶん、この質問自体も、インターネット喫茶等から、行っていることとご推測致します。お困りのあなたに成り代わって、私のテスト環境で試験させていただきました。以下のようになりました。 "match"が表示されました。 ですのでマッチします。 perl virsion v5.8.5 CentOS release 4.4 (Final) で確認させていただきました。
[...] は配列リファレンスを作りますぜ＞#4. ついでにいうと中に対して配列コンテキストを要求します. つまり [@{$x}] は $x を (シンボリック) リファレンスとする配列の中身をそのまま持つような配列リファレンスを作ります. [...] が配列コンテキストを要求するのがポイントで, そうじゃない (つまりスカラコンテキストだ) と @{$x} が「要素数」に変換されてしまいます. で, 今の場合の () は完全にオプショナルです. [...] が配列コンテキストを要求しているので中の (@{$x}) は配列コンテキストで評価されますが, その場合 () は単に冗長なだけです.
これはまたえらく複雑なことをしていますね。 5.10で確認して起きないということであれば、Perlのバグとみてよいかと思います。 5.8→5.10で内部構造的に結構変わっているので、該当するバグのフィックスがあったかどうか というのはわかりません。 sub regex とその中で作っている無名サブルーチンで、同じような my $foobra = shift というパターンをしているのがちょっと気になるといえば気になります。 サブルーチンが増えるというのが気にならないのであれば、 現在無名サブルーチンになっているのを名前をつけて独立したサブルーチンにした上で 置換部で呼び出してみたらどうでしょうか?
File::Readbacwards を使うってのは駄目なんだろうか． seekして最後から探してくれるCPANモジュール． PurePerlだし，必要な処理だけ移植するのも 難しくなさそう． PerlHacksで紹介されてるくらいだから きっと便利なものでしょう．
javascriptですが 私が以前、質問して回答いただいたものです。 sprinkle.jsを使えば良いと思います 参考URL：http://oshiete1.goo.ne.jp/qa3977331.html
そのサーバが、DNSを使ったホスト名解決をサポートしてないのでは。 サーバの管理者に確認してみては。 だめなら、wikipedia.simpleapi.netをIPアドレス直書きして、代わりとしてHTTP要求ヘッダーHostを$reqに追加するとか。
何で配列を使わずに妙な番号のついた通常の変数を山盛り使ってるんでしょうか。 とりあえず下二桁を逆順に出していると言うことで #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; #use utf8; #use Encode qw/from_to decode encode/; while (my $line = <DATA>) { chomp $line; my @array = split /<>/, $line; my $itemcount = 0; foreach my $item (@array) { say "No. $itemcount $item"; $itemcount++; } say "\$itemcount=$itemcount"; my $outstring1; my $outstring2; my $outstring3; foreach my $item (reverse @array) { $outstring1 .= "<br>$item\n"; my $d1 = chop $item; my $d10 = chop $item; $itemcount--; $outstring2 .= "<br>M_${itemcount}_10=$d10\n"; $outstring3 .= "<br>M_${itemcount}_1=$d1\n"; } say $outstring1; say $outstring2; say $outstring3; } __END__ 10<>78<>51<>78<>00<>72<>43<>82<>65<>29<> No. 0 10 No. 1 78 No. 2 51 No. 3 78 No. 4 00 No. 5 72 No. 6 43 No. 7 82 No. 8 65 No. 9 29 $itemcount=10 <br>29 <br>65 <br>82 <br>43 <br>72 <br>00 <br>78 <br>51 <br>78 <br>10 <br>M_9_10=2 <br>M_8_10=6 <br>M_7_10=8 <br>M_6_10=4 <br>M_5_10=7 <br>M_4_10=0 <br>M_3_10=7 <br>M_2_10=5 <br>M_1_10=7 <br>M_0_10=1 <br>M_9_1=9 <br>M_8_1=5 <br>M_7_1=2 <br>M_6_1=3 <br>M_5_1=2 <br>M_4_1=0 <br>M_3_1=8 <br>M_2_1=1 <br>M_1_1=8 <br>M_0_1=0 あんまり短く書いてもわけわからないでしょうからとりあえずこんなところで。
>・CPAN経由で ># perl -MCPAN -e 'install Tk::TableMatrix' >・yum install >・cpan2rpm >最終的にはCPANからファイルをダウンロードして解凍して、 > ># perl Makefile.PL 上から順に試していったということですか? たぶんcpan シェルでできなかったのも Problem gettimeofday() Using -L/usr/lib to find /usr/lib/libX11.so.6.2.0 Cannot find X include files via /usr/include Cannot find X include files anywhere at ./myConfig line 315. Compilation failed in require at Makefile.PL line 19. BEGIN failed--compilation aborted at Makefile.PL line 23. この辺の問題っぽいですが、X window system のヘッダはどこにありますか?
とりあえず、見た感じで間違っていそうなのは以下。 $shop{place} = $todoufuken[0]; ↓ $shop->{place} = $todoufuken[0]; どうやらハッシュのリファレンスっぽいので。 あとは分かりません。
比較して差異があったら上書きっていうことは結局、AとBは内容が 同じになってしまうのではないでしょうか。 それでいいのでしょうか。 それなら、単にファイルをコピーするなり丸ごと上書きするなりで いいと思うのですが。 それともAとBを比較してBにない情報がAにあったらその部分は上書きし BにあってAにない情報は無視ということでしょうか。
あと、実際の所はどんなに工夫を凝らしても回避策はいくらでもある ため、絶対に破られるのであまり信用しすぎない方がいいです。 あまり、条件を厳しくしすぎると普通の文まではじいてしまいますし。
Perlはよく分かりませんので、勉強がてら 自分のスペースに設置して試してみました。 >> 「お届け先都道府県」 1066行目付近を以下のようにしたら、動くと思います。 $key = 'お届け先都道府県'; #$val = "" if ($val == 0); $val = "" if (!$val); >> 連続して注文を実行すると、重複注文を避けるため「商品の注文は完了しています。」とシステムエラー これは、私の環境では発生しませんでした。 ・注文確定前にバスケットと確認画面を何往復しても問題なし ・注文完了後、TOPに戻って再注文も問題なし。 あと、order.html の お届け先郵便番号のフォーカス移動がおかしいです。 125行目付近の if(this.value.length==3)zip.focus() 　　　　　　　　↓ if(this.value.length==3)zip2.focus() とすれば、直ります
こんなのはどうですか？ $target = quotemeta('ゼ'); s/$target/ぜ/;
良く分かりませんが、文字コードを適切に変換して Base64 または quoted-printable エンコードするライブラリでしょうか。 恐らく現在では、此の様なエンコード用途には MIME::Base64 モジュールや MIME::QuotedPrint モジュール等を使うのが一般的だと思います。 他のファイルで mimew.pl が使用されている部分を、全て此れ等のモジュールが提供する関数で置き換えるのが良いのではないでしょうか。 http://perldoc.jp/docs/modules/MIME-Base64-2.12/ … http://perldoc.jp/docs/modules/MIME-Base64-2.12/ … 詰り、 require 'mimew.pl'; を全て use MIME::Base64; use MIME::QuotedPrint; で置き換え、 &bodyencode($body); の様な部分を全て encode_base64 $body; で置き換え、 &bodyencode($body, 'qp') の様な部分を全て encode_qp $body; で置き換えると言う方法です。 其の他の &benflush; 等と言った部分は削除する事に成ります。 又、完全に置き換え終わったならば mimew.pl は不要に成ります。 文字コードの変換に関しては、入力 / 出力共に UTF-8 と仮定すれば必要無いのではないでしょうか。 但し自信は有りません。御了承下さい。
「入れ替えている」と考えるからおかしく感じているんだと思います。 このアルゴリズムは「1要素ずつランダムに選んで」「後ろから並べていく」というものです。 たとえば、10要素をシャッフルする場合、 $i=9のとき:deck[0～9の乱数]とdeck[9]を入れ替える 　　→10個の要素からランダムに選んだ1つを、配列の一番最後(deck[9])に配置する。 　　以後、deck[9]は変化しない。 　　残るシャッフル対象はdeck[0]～deck[8]の9要素 　　次のループ以降ではdeck[0]～deck[8]からランダムに抽出していくので、この要素間で順番に意味はありません。 　　ですから「ランダムに選んだ1要素を最後に配置する」処理を行う時に「残りの要素の順番」は気にする必要は無いので、 　　「ランダムに選んだ要素」と「最後の要素」の入れ替えで簡単に実現できます。 $i=8のとき:deck[0～8の乱数]とdeck[8]を入れ替える 　　→9要素からランダムに選んだ1つを、配列の最後から2番目(deck[8])に配置する。 　　以後、deck[8]は変化しない。 　　残るシャッフル対象はdeck[0]～deck[7]の8要素 (略) $i=2のとき:deck[0～2の乱数]とdeck[2]を入れ替える 　　→3要素からランダムに選んだ1つを、配列の最後から8番目(deck[2])に配置する。 　　以後、deck[2]は変化しない。 　　残るシャッフル対象はdeck[0]～deck[1]の2要素 $i=1のとき:deck[0～1の乱数]とdeck[1]を入れ替える 　　→2要素からランダムに選んだ1つを、配列の最後から9番目(deck[1])に配置する。 　　以後、deck[1]は変化しない。 　　残るシャッフル対象はdeck[0]の1要素 　　　　→もうシャッフル操作は不要 という流れになります。
まだ締め切られていないようなのでぺたり。 #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; use File::Slurp qw/slurp read_file write_file/; use List::MoreUtils qw/all each_array/; my $dirname = '.'; my $joint_file = 'joint.txt'; my @files = grep {$_ !~ /$joint_file/} glob "$dirname/*.txt"; my @joint_base = slurp($joint_file); chomp @joint_base; foreach my $file (@files) { my @lines = slurp($file); my $it = each_array @joint_base, @lines; my @newlines; while (my @l = $it->()) { push @newlines, join(q{,}, @l) if all {defined $_} @l; } write_file($file . ".new" , @newlines); } File::Slurp とか List::MoreUtilsがない場合用。 #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; sub slurp { my $file = shift; open my $fh, '<', $file or return; <$fh>; } sub write_file { my $file = shift; open my $fh, '>', $file or warn "can't ooen $file"; print $fh @_; } my $dirname = '.'; my $joint_file = 'joint.txt'; my @files = grep {$_ !~ /$joint_file/} glob "$dirname/*.txt"; open my $fh, '<', $joint_file; #open my $fh, '<', $joint_file; or die "could not open $joint_file by $!"; my @joint_base = <$fh>; close $fh; chomp @joint_base; foreach my $file (@files) { my @lines = slurp($file); my @newlines; my $min = @lines < @joint_base ? @lines : @joint_base; foreach my $i (0 .. $min-1) { push @newlines, join(q{,}, $joint_base[$i], $lines[$i]); } write_file($file . ".new" , @newlines); } 要素数の短いものに合わせて切り詰めます・
しまった。よく考えたら、$fh->seekや$fh->truncateのところで、プロセスが死ぬと、役立たずの印('+')を書き込まないから、次にロックを取得したプロセスが、データの一貫性を壊しちゃいますね。 なのでやっぱり、別途ロックファイルを用意するのがベスト、という事に。
ここでは if の条件で使われているので, 件の URL にある「フリップフロップ演算子」の方＞#3. 意味は「左にある条件が成り立ってから右にある条件が成り立つまでの間」です. 今は s/// if /\+CCC/ .. /\+DDD/; なので「/\+CCC/ が成り立ってから /\+DDD/ が成り立つまでの間 s/// を実行する」という意味になって, 結局「/\+CCC/ にマッチする行から /\+DDD/ にマッチする行までに対して s/// で置換する」ということになります. ただ, 「パターンとして覚える」なら s/// if /\+CCC/ ... /\+DDD/; と . をもう 1つ加えた方が安全かも.
use Fcntl してますか? The possible values and flag bits of the MODE parameter are system-dependent; they are available via the standard module "Fcntl". See the documentation of your operating system's "open" to see which values and flag bits are available. You may combine several flags using the "|"-operator. -- ここまで sysopenのドキュメントから You can request that the old constants (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) be provided for compatibility reasons by using the tag ":Fcompat". For new applications the newer versions of these constants are suggested (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC). -- ここまで Fcntl.pm のドキュメントから。
#2様、 >ところで、配列の添字数を取得するのにscalarを使用しているみたい >ですが、 @ を $# にするだけで取得できるのでは。 多分、スペースシップ演算子を使っている時点で、scalar は必要ありませんが、明示した方がわかりやすいと思ったまでです。 また、添字数を取得しているという意味ではありません。
Unicode::Japanese モジュールを使用する場合は、サーバ上で、その変換を行うプログラムがあるディレクトリに Unicode という名前のディレクトリを作成し、その中に Japanese.pm をアップロードすれば OK です。 Japanese.pm は、下記のページの上の方にある "Source" と書かれたリンクから入手できます。 http://search.cpan.org/dist/Unicode-Japanese/lib … ちなみに、ソースコードを UTF-8 でお書きになられているならば、特別なモジュールを使わなくても簡単に変換できます。 ---------- use utf8; binmode STDOUT, ':utf8'; # 標準出力に UTF-8 を使う $a = "あいうえお"; $a =~ tr/あ-ん/ア-ン/; # ひらがなから全角カタカナへ変換 print $a; # 「アイウエオ」と表示 ---------- お察しの通り、 $a =~ tr/ア-ン/あ-ん/; とすれば逆の変換もできます。
確かにいっぱいおかしかったので修正: sub treelist_ { my ($dir, $lv) = @_; opendir my $dh, $dir; my @files = grep { $_ !~ /^\.\.?$/; } readdir $dh; closedir $dh; for my $file (@files) { print ">" x $lv, "$dir/$file\n"; treelist_("$dir/$file", $lv+1) if -d "$dir/$file"; } } sub tree { for my $dir (@_) { print "$dir\n"; treelist_($dir, 0); } } tree('.'); これでどうだ.
正規の速度で動かすのが先決では?
{...} の中と => の左オペランドでは「構文として」bare word が使えます. これは言語仕様上も想定されているものであり, use strict 'subs' のもとでも利用可能です. これに対し, その他の場面で出てくるときは「perl がよきにはからってくれている」だけで, use strict 'subs' を付けるとエラーになります. 従って, この 2つを混同してはいけません＞#3.
$nyuuryoku eq "11" ではなく $nyuuryoku == 11 とすれば解決すると思う。
foreach my $line (@file) { my $suji = ( int( my $count++ / 3 ) + 1 ); $line = "$suji,$line"; } ↑↑↑↑ my 宣言の位置を変えるとなおせます。 my $count; foreach my $line (@file) { my $suji = ( int( $count++ / 3 ) + 1 ); $line = "$suji,$line"; }
よく考えたら, そもそも「一発で全部やりたい」とする意味がわからん. たいていの場合で「短いけど凝った記述」よりも「長いけど素直な記述」の方が安全. 今の場合だと「\n で split して各行を処理したあとまとめる」ということになるのかなぁ? ど～しても「一発」にしたいならサブルーチン使えばいいだけ.
#1です。 直接、ディスクフルの状態で試験した訳ではないので、自信なしですが、 エラーが発生すれば（ファイルパス名不正、アクセス権なし等）、 copy ("foo.txt", "bar.txt") or die "Copy failed: $!"; move ("foo.txt", "bar.txt") or die "Move failed: $!"; open(OUT,"> file.txt")or die "Can't open file.txt: $!"; の３行については、die以降の文が実行されますので、 ディスクフルのエラーでも、die以降の文が実行されると考えて良いと思います。 しかしながら、 print OUT "DEF"; close(OUT); についても、ディスクフルの場合は、ここでエラーが発生する可能性がありますので、 上記の２行についても、エラーチェックはすべきです。 一般論で言えば、全ての処理で、エラーチェックはきちんと行うべきです。（業務で使用しない場合は別ですが）
変数の構造が知りたいときは、Dumperを使うと便利です。 ActivePerlなら、ppm を使って　install Data::Dumper をしてください。 use Data::Dumper; print Data::Dumper->new( [$bigtitle] )->Indent(1)->Sortkeys(1)->Dump;
>if( ($var%3==0)or($var%10==3)or(int($var/10)==3) ) と >if( ($kazu%10==3)or(int($kazu/10)==3) ) を見ると、無駄が良く分かる。 if ($var%3==0){ # ここで3の倍数を除去 $count++; }else{ while ($var>0){ if ($var%10==3){ $count++; # 判定だけならここで終了すべき。($countは3の数を正確に表わさない) last; }else{ $var=int($var/10); # perlのint()は切り捨てなのでいつかは0になる } } こんなところか。 ・3の倍数を事前に除去すること ・($kazu%10==3)or(int($kazu/10)==3)のように、下一桁と下二桁をいっぺんに判断しているのが無駄 #1さんが「while の条件は $kazu > 0 のほうが自然」と言った意味はなぜか考えよう。
> 最後にもう１点だけご質問なのですが、requireは１度読み込まれたら再度読み込まないように内部的に記憶しているようですが、 > useはそうでないとどこかのサイトで見たことがあります。 すみません。差し支えなければ、そしておぼえていらっしゃるのなら そのサイトを教えていただけませんか? 確かに require については、複数回同じモジュールを requireしても 実際に読み込まれるのは一回だけというのはその通りです。 use についてもドキュメント (perlfunc の use の項)に Imports some semantics into the current package from the named module, generally by aliasing certain subroutine or variable names into your package. It is exactly equivalent to BEGIN { require Module; Module->import( LIST ); } except that Module *must* be a bareword. (略) The "BEGIN" forces the "require" and "import" to happen at compile time. The "require" makes sure the module is loaded into memory if it hasn't been yet. とありますので、複数回指定したとしても実行されるのは一回だけだと思われます。 あーひょっとして >Module->import( LIST ); この部分のことでしょうか? いまちょっと試してみましたが、モジュールに import というメソッドがあれば、 use した回数だけ呼ばれてますね。 ただ、メモリの使用量云々については心配しないで大丈夫でしょう。
$line =~ /^>(\d+)/ 上の式では正規表現で文字列$lineのパターンマッチを行っています． 式のおおざっぱな意味は「$lineは'>'で始まり，数字が1回以上連続する文字列か？またYESなら数字の部分を取得（$1に代入）せよ」です． ifステートメントの式として指定しているので，このときの$lineの中身が'>1234'となっていればifの判定式は真となり，$1に'1234'という文字列が代入されます． 正規表現に関して，詳しくは参考URLをご覧ください．（もしくは検索してください．） さて，IDの書かれている行は ＞">ID|12345678|・・・"という風になっていまして とのことですので，正規表現をこれにあわせる必要があります．（言葉の説明を読む限りでは">ID|12345678・・・|"のタイプミスでしょうか．これくらいならみて気づく範囲なので問題ありません．が，お仕事で自分の作成したスクリプトの仕様を書く場合はご注意ください．《なんだか偉そうなことをいってますね．すみません．》） ifのかっこの中を次のように書き換えてみてください． $line =~ /^>ID|(\d+)|/ これで，きちんと動くと思います． **************************************** Perlの本を知りたいとのことですが，Perlはもともとテキスト処理に優れた言語らしいので，Perlの入門書をうたっている本であればどの本でも，ファイル処理や文字列処理に関する基本事項は書かれていると思います． このサイトにいらっしゃるほかの多くのPerlユーザの方々と比べると私はまだPerlに出会ってから日が浅い―自己紹介にもあるとおり10ヶ月ほどです―ので，私の勧めるものが参考になるかどうかといえば疑問符がつきますが，武藤健志さんの「独習Perl」と結城浩さんの「Perl言語プログラミングレッスン[入門編]」をお勧めします． 私はまず「独習Perl」をサンプルコードを打ちながらザッと読んで感覚をつかみ，「プログラミングレッスン」でじっくり理解していきました． 現在の私のPerlに関する知識は「プログラミングレッスン」によるところが大きいので，こちらだけでもよいかもしれません．この本があらかた理解できるようになったら，「初めてのPerl」や「続・初めてのPerl」といった少し格式の高い本に手を出しても，自分で読み進められると思います． それと，リファレンスとしてPerlコマンド辞典のようなものが手元にあると便利です．知っているコマンドの詳細はperldocで調べれば済みますが，知らないコマンドについてもそれが何をするためのコマンドなのか概要とサンプルコードが書かれているはずなので，暇なときにパラパラめくって読むといいかもしれません． 参考URL：http://perl.misty.ne.jp/16.html#a,http://www.toh …
ネットワーク関連処理についてはあまり詳しくないので，素人考えでアドバイスさせていただきます．ご了承ください． まず，質問文に書かれているコードでは，LWP::UserAgentモジュールを使用して，あるURLに対してHTTPのGETメソッドを送信することで，ファイルをリクエストし，レスポンスとしてファイルの内容を得ています．これはFirefoxやInternet ExplorerなどのWebブラウザでWebページを閲覧する場合と同じことをしているわけですから，誰にでも公開されているファイルなら読み込むことは可能ですよね． 一方，そのファイルに書き込みを行う場合，書き込む権限を持っている必要があります．別サーバというからには，そのサーバにアカウントを持っていて，サーバ同士で連携をとりたいということなのでしょうか． その場合，接続元と接続先の両方のサーバの種類（WindowsサーバかLinuxサーバか，Perlのバージョンはいくつか，etc.）やあなたが持っている権限（Perlモジュールを自由に設定できるか，シェルコマンドは利用できるか，telnetやSSHを用いてサーバにログインできるか，FTP接続制限等はあるか，etc.），書き換えが必要となった経緯や理由などを書いておくと，回答が得られやすいかと思います． 参考までに，私が考えついた限りでは， ・Net::FTP等を使用してFTP経由で書き換える ・Net::SSH等を利用してリモートログインして書き換える ・接続先サーバに，リクエストに応じてファイル内容を書き換えるCGIを設置し，そのCGIを通して書き換える．（掲示板にメッセージ書き込むのと同じ原理です．） というような方法が使えそうです．
入力１回目[改行] 入力２回目[改行] 入力３回目[改行] という入力では，<STDIN>を使った場合と結果は同じですね．入力を 入力１回目 入力２回目 入力３回目[改行] 入力１回目[タブ]入力２回目[タブ]入力３回目[改行] などとして実行してみるとどうでしょうか．1行の入力で同じ出力結果が得られませんか． このあたりの動作を理解するには，バッファリングに関する知識が必要になります．バッファリングとは，入力や出力を効率的に行うため，文字列をバッファという場所に一時的に保存しておき，後で一気に受け渡しを行う（フラッシュする）処理のことです．この場合，改行を入力した時点でバッファのフラッシュが行われます． バッファリングに関して，詳しくは検索してみてください． 画面が改行されるのは，あなたが入力した改行がそのまま画面に表示されるからです．入力同士の区切り文字としてデフォルトでは改行が指定されているので，「入力 → 改行（区切り文字＆バッファのフラッシュ） → 入力 → 改行（区切り文字＆バッファのフラッシュ） → 入力 → 改行（区切り文字＆バッファのフラッシュ）」という動作をすることになります． <STDIN>を使った場合でも，区切り文字に改行以外の文字を指定することで，1行の入力による複数値の取得ができるようです．ただし，バッファのフラッシュのために必要となる，最後の改行は必須です． 次のスクリプトを実行して，「入力 → 半角スペース（区切り文字） → 入力 → 半角スペース（区切り文字） → 入力 → 半角スペース（区切り文字） → 改行（バッファのフラッシュ）」という入力を行ってみてください． $/ = " "; # 半角スペースを区切り文字に指定 my $var1 = <STDIN>; my $var2 = <STDIN>; my $var3 = <STDIN>; print "$var1\n$var2\n$var3";
>my($date) = tslib->getDate(); 本当にエラーになってませんか？ それと、 use tslib とかやってますか？ 別ファイルにあるのをどのように使ってるのか 疑問なんですけど。
他の皆さんと同じでなぜforeachでループさせたくないのかがまったく 分かりませんが(というより何をしたいのか自体分かりませんが)。 上記なら $name='aaa'; %allarray = ( 'aaa' => 'あああ', 'kakaka' => 'かかか', 'sasasa' => 'さささ', ); $TopName = $allarray{$name}; print $TopName; exit; と変わりませんよね? (ループさせる意味自体がない) 特定の値を代入しているハッシュキーを取得したいなら my $name='あああ'; my %allarray = ( 'aaa' => 'あああ', 'kakaka' => 'かかか', 'sasasa' => 'さささ', ); my $TopName; while(my ($key, $value) = each(%allarray)) { if($name eq $value) { $TopName = $key; last; } } print $TopName; exit; こうなんですけどね。
先の方の補足要求で指摘されているとおり，いささか情報不足だと思います． 各数値の求め方（ランダムな値なら定義域）や「こういうデータをこのように変換したい」というような具体例があると，やりたいことが伝わりやすいと思います． とりあえず，質問文からくみ取れた範囲で書いてみたので，試してみてください．$debugの値を1にしておけば簡単な処理の流れがみられます． my $debug = 0; my $filename = "reference.fasta"; my ($tmp_len, $tmp, $out, $x, $y, $rnd_pos); # 読み込み open FILE, "+< $filename" or die "$!"; while(my $line = <FILE>){ # 1行ずつ読み込む chomp $line; # 行末の改行を取り除く $tmp .= $line; # 一次保存用変数に連結する } $tmp_len = length $tmp; print "$tmp_len文字のデータを読み込み\n" if($debug); # XとYの決定 do{ $x = 1 + int rand($tmp_len / 2); }while($tmp_len % $x or $x == 1); $y = $tmp_len / $x; print "$x文字 x $y行 のデータを作成\n" if($debug); # ランダムに並べ替え for(1 .. $y){ $tmp_len = length $tmp; print "[$_] \$tmp：$tmp\n" if($debug); $rnd_pos = int rand($tmp_len - $x); print "\$tmpの$rnd_pos番目から$x文字を\$outに移動して\$outを改行\n" if($debug); $out .= substr($tmp, $rnd_pos, $x, '') . "\n"; } # 保存処理 print "$filenameの中身を消去\n" if($debug); seek FILE, 0, 0; truncate FILE, 0; print "$filenameに\$outを書き込み\n" if($debug); print FILE $out; close FILE;
$. が「現在の行番号」を表します. で, $_ が「読み込んだ行」なので "$.: $_" で「読み込んだ行の前に行番号を追加する」ということになります. あと, 書式が必要なら指定できる printf もちゃんと用意されてます. 使える書式はだいたい C と同じです. ということで Leopard なら perl -ne 'printf "%06d: %s", $., $_' ファイル名 でいいし, Windows でも printf "%06d: $s", $., $_ while <>; というスクリプトを書いて perl スクリプト ファイル名 で OK. ただし複数のファイルを一度に処理しようとすると行番号が「前のファイルの続き」になるのは同じ.
こんな感じで文字列を変数に保存しておいて，ファイルの中身を削除してからもう一度書き込むとか．もしくは，別のファイルを書き込みモードで開いて読み込みながら書き込んで，完了したら元のファイルを削除して，新しく作ったファイルを元のファイルの名前でリネームしてもいいかも． my $filename = "reference.txt"; open FILE, "+< $filename" or die "$!"; my $tmp; # 保存したい文字列を入れておく変数 my $count = 0; while(my $c = getc FILE){ # 1文字ずつ読み込む next if($c eq "\n"); # 改行は飛ばす $tmp .= $c; # $tmpに1文字ずつ連結 $count++; # カウントアップ $tmp .= "\n" unless($count % 50); # 50文字連結したら改行 } truncate FILE, 0; # ファイルの中身を全削除 seek FILE, 0, 0; # ファイルの先頭に移動 print FILE $tmp; # $tmpの内容を書き込む close FILE;
自前のsystemであるmysystemを自作します。 これは、第１引数にタイムアウト時間（秒）を取り、 第２引数以降は、systemを呼び出すときのパラメータの集合をとります。 mysystemの戻り値は -1:fork失敗（通常あり得ない） -2:タイムアウト（第１引数で指定された時間内にコマンドが終了しなかった） 255:execエラー（第２引数以降が正しくないのでコマンドとして実行できない）（但し、この仕様は255を終了ステータスで返すコマンドがあるとそのステータスと区別ができない、ということがあるが、まず、これが問題になることはないだろうという前提で作成。対策が無いわけではないが、ソースが複雑になるので、とりあえず、簡易版） とします。 以下ソースです。 ------------------------------------------ #! /usr/bin/perl $stime = time(); $result = &mysystem(60,@ARGV); $etime = time(); printf ("result=%d,excuted time=%d\n",$result,$etime-$stime); #自前のsystem # P1:タイムアウト時間（単位：秒） # P2:systemへ渡す文字列 # 戻り値: -1:fork error # 255:exec error（コマンド文字列不正） # -2:timeout # 以外:コマンドの終了ステータス sub mysystem { use POSIX qw( SIGKILL ); my $timeout = shift(@_); #タイムアウト時間 my @cmd = @_; #コマンドリスト my $pid = fork(); # fork失敗 if (!defined($pid)){ return -1; } #子プロセスの場合 if ($pid == 0){ exec(@cmd); # execが成功すれば戻ってこない # 下記の文が実行されるのはexec失敗の場合だけ exit(255); } #親プロセスの場合 while($timeout>0){ #my $ret = POSIX::waitpid($pid,&POSIX::WNOHANG); my $ret = waitpid($pid,&POSIX::WNOHANG); #プロセス終了時（プロセスの終了ステータスは$?に格納されている） if ($ret != 0){ #プロセスの終了ステータスを返す printf("ret=%d,pid=%d,sts=%d\n",$ret,$pid,$?); return ($?/256); } # プロセスが終了していない場合1秒待つ $timeout--; sleep(1); } #タイムアウト検出時 #子プロセスをKILLする kill(SIGKILL,$pid); #殺した子プロセスをみとる（成仏させる） waitpid($pid,0); # タイムアウトで終了 return -2; } ------------------------------------------ 上記のスクリプトをsampl.plで保存し、 sampl.pl 実行したいコマンド名 と入力して下さい。 その 実行したいコマンド名を実行し、60秒以内に完了しなければ、 そのコマンドをKILLし、-2で戻ります。（linux(cent-os4.4)）で動作確認済みです。
>上のenvをつける理由が知りたいです。以下では駄目なのでしょうか？ >#!/usr/bin/ruby env を使うのは、rubyのようなインタプリタをおかれている場所が統一されていない場合に、 env に探させて起動するということで、スクリプトを書き換えないでも 多くの場所でそのまま使えるようにするという目的です。 #env自体も /usr/bin なのか /bin なのかという話もありますが。 ですので、 /usr/bin に rubyがあるのなら、 #!/usr/bin/ruby にして問題ありません。 envを使うことで別の問題が出たりするんで、嫌う人もいます。
(～, $utf16le, ～) = unpack("～a16～", $bin); でどうでしょう。
すみません, 言い忘れていたことがあります. ロジックとしては間違っていない (かもしれない) ですが, 「普通の書き方」ではないです. まず, ファイル sansyo.txt をディレクトリに存在する全てのファイルに対して毎回読み直してますが, 普通に考えたらこれは無意味です. 最初に 1回だけ読めばいいはず. また, eq で比較するのではなく, sansyo.txt の内容から適切なハッシュを作るのが常道でしょう. まとめると, 最初に my %cvt; open(FILE2,"sansyo.txt"); for my $line (<FILE2>) { chomp($line); my ($a, $b, $c) = split(/,/, $line); $cvt{"$a,$b.txt"} = "$line.txt"; } として「$cvt{リネーム前} = リネーム後」という形でハッシュ %cvt を作っておき, あとは for my $dir (readdir(DIR)) { next unless -f $dir; rename($dir, $cvt{$dir}) if defined $cvt{$dir}; } とするのが普通じゃないかなぁ.
・diagrams.txtというテキストファイルに時刻表のデータがある． ・時と分の区切りは半角のコロン（:）． ・毎時のダイヤは改行なしで1行に収まっている． ・時間の前のアルファベットは1文字． と仮定してとりあえず書いてみました． 1行目でファイルを開いて，2行目で行ごとに読み込んで，3行目で時と分を切り分けて，4行目で分単位でソートした順に表示して，5行目で改行して，2行目に戻って繰り返して，終わったら6行目でファイルを閉じる．という動作をします，多分． open FILE, "diagram.txt" or die "$!"; while(my $line = <FILE>){ my ($h, $m) = split /:\s*/, $line; print $h . ':'; print ' ' . $_ foreach(sort {substr($a, 1) <=> substr($b, 1)} split /[\s　]+/, $m); print "\n"; } close FILE;
すみません。 下の回答の補足です。 もし、文字コードから16進数文字列を作成したい場合は # 文字列から16進数文字列を作成 my $msg = unpack("H2", "\x41"); # "\x41" は 'A' と同等 print "16進数文字コード: $msg\n"; こんな感じにするか以下のようにします。 # 数値を16進数文字列に変換する my $msg = sprintf("%x", 0x41); print "16進数文字コード: $msg\n"; # 上のコードだけならば # printf("16進数文字コード: %x\n", 0x41); # とすることができる print "数値: " . hex($msg);
こんにちは、 atom_seed さんのご意見と同じ考えですが、興味があったのでほんのちょっと見てみました。 開放することが問題なら、 ドライバの中で読み込み用にオープンしているところで読み書き用にオープンして排他ロックかけて、 ファイルハンドルをオブジェクト内に保存しといて、書き込み時に再利用したらどうですか？ もしそれで解決するなら簡単にできましたよ。 >今もいろいろ調べていて、どうやら仕様上のバグという可能性が高くなってきました…。 バグだと思われたなら、今後のために作者の方へメールを出されたら良いかもしれません。 でも、 >どうなるのが正しいといえるか。 と atom_seed さんもおっしゃっていますが、 それが質問者さんの仕様に合わなかったのなら、ご自身で書かれるのがベストでしょう。
おっと、書き忘れ。 ただし、この方法だと [0-9a-f]{2} が含まれていて文字コードでない 部分までデコードされてしまったり、EUC-JPやUTF-8などで一文字が 奇数バイトになる場合に一番最初のコードの先頭に0を付けて偶数 バイトにする必要があるなどの点には気をつけてください。 ・・・あとは、注意点なかったかな。
@map$i = split(/<>/,$_); を @{"map$i"} = split(/<>/,$_); とか $map[$i] = [split(/<>/,$_)]; とかに変えると, あとの使い方次第で幸せになれます. 後者の方がお勧め.
use utf8; print length("言語：perl"); # 出力結果は 7
他の掲示板やWikiなどのスクリプトを参考にしてください...だと 不親切なので、取り敢えず簡単な方法を。 $msg = <<'HTML'; 掲示板を作成しております。 テキストをHTMLに変換するソースサンプルを教えてください。 たとえば、こちらのサイトみたいにURLを入力すると リンクとして表示されるサイトです。 http://yahoo.co.jp ↑のようにリンクとして表示させられればOKです。 HTML $msg =~ s/([^=^\"]|^)(http\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\%]+)/$1<a href=\"$2\" target=\"_blank\">$2<\/a>/g; print $msg; exit; WebPatioからパクってみました。 Child Tree では正規表現の部分は以下のようになっていますね。 s/([^=^\"]|^)((http|ftp|https)\:[\w\.\~\-\/\?\&\+\=\:\@\%\;\#\,\|]+)/$1<a href=$2 target=$TGT>$2<\/a>/g; より正確なURLのリンク変換は非常に難しいです。 http://www.din.or.jp/~ohzaki/perl.htm#URI http://www.din.or.jp/~ohzaki/perl.htm#httpURL 参考URL：http://www.din.or.jp/~ohzaki/perl.htm#URI,http://www.din.or.jp/~ohzaki/perl.htm#httpURL
例えば push @a, (1, 2, 3); のように、1度に複数のキーと値の組を追加したいでしょうか？ ハッシュのスライスを使えば以下のように出来ます。 my %hash = ( a => 1, b => 2, z => 26, ); printf "%s %s\n", '-' x 7, 'before'; printf "%s => %s\n", $_, $hash{$_} for sort keys %hash; @hash{"c", "d", "e"} = (3, 4, 5);# ハッシュのスライス printf "%s %s\n", '-' x 7, 'after'; printf "%s => %s\n", $_, $hash{$_} for sort keys %hash; 頭に % ではなく @ が付く事に注意してください。 @hash{"c", "d", "e"} は ($hash{"c"}, $hash{"d"}, $hash{"e"}) とほぼ同じ意味です。
以下のような処理ではどうでしょうか? 例えば、4桁の場合、36進数を「YYZ0」からスタートすると、 YYZ0 YYZ1 … YYZY YYZZ YZ00 YZ01 … YZZY YZZZ Z000 Z001 … という数列になりますので、冒頭の/Y*Z/を削除することで、 0,1,…Y,Z,00,01,…,ZY,ZZ,000,001,… という数列が得られます。 #! /usr/local/bin/perl use strict; use Math::BaseCalc; my $digits=5; my $bc = Math::BaseCalc->new(digits=>['0'..'9','A'..'Z']); my $base = $bc->digits; my $offsetstr = $bc->to_base($base-2)x($digits-2).$bc->to_base($base-1).$bc->to_ base(0); my $laststr = $bc->to_base($base-1)x$digits; my $stripre = '^'.$bc->to_base($base-2).'*'.$bc->to_base($base-1); print "start = $offsetstr, end =$laststr, re = s/$stripre//\n"; my $offset = $bc->from_base($offsetstr); my $size = $bc->from_base($laststr); for (my $i = 0; $i <= $size; $i++) { my $str = $bc->to_base($i+$offset); my $result = $str; $result =~ s/$stripre//; print "$i: $str -> $result\n"; }
Acme::EyeDrops Acme::Bleach この２つのモジュールであれば、他のプログラムにと言うより、読めない。
0 から z までの 36 文字を１つの文字列変数に入れ、36 進数に変換するときに substr を、10 進数に戻すときに index を使えば一応はできます。しかし、この 方法では 13, 14 桁位までは問題ないですが、より大きな桁数では無理です。 use strict; my $base_str = "0123456789abcdefghijklmnopqrstuvwxyz"; my $base_36 = convert_36(1234567); print "$base_36\n"; my $base_10 = convert_10($base_36); print "$base_10\n"; sub convert_36 { my $number = shift; my @work; while ($number > 0) { unshift @work, substr($base_str, $number % 36, 1); $number = int($number / 36); } return join('', @work); } sub convert_10 { my @work = reverse split //, shift; my $number; foreach my $idx (0 .. $#work) { $number += index($base_str, $work[$idx]) * (36 ** $idx); } return $number; }
Perlの連想配列(ハッシュ)は順番を保存する機能がないのでバラバラに なってしまいますが以下のようにしたらどうでしょうか。 (以下は単純に文字列を処理しているので実際にはその文字列処理の 部分をファイル処理に変えてやればいいです) use strict; my $LOG = <<'LOG'; START 08:00:00 Job001 START 08:05:00 job002 END 08:07:01 job001 START 08:08:00 job003 END 08:10:00 job002 LOG my $log = {}; foreach(split(/\n/, $LOG)) { my ($flg, $time, $job) = split(/\s/, $_); $log->{lc($job)}->{uc($flg)} = $time; } while(my ($key, $value) = each(%$log)) { printf("%s %s - %s\n", $key, $value->{'START'}, $value->{'END'}); } 1; 順番を保存したい場合はTie::IxHashというPerlモジュールを使用して ください。 参考URL：http://katsubemakito.net/cgiperl/variable/hash/p …
binmode FILEHANDLE, ":raw";# バイナリモード binmode FILEHANDLE, ":crlf"# テキストモード 第2引数を省略すると ":raw" が指定されたものと解釈され、バイナリモードになりす。 参考URL：http://perldoc.jp/docs/perl/5.6.1/perlfunc.pod
my $res = $ua->request($req); で，指定したURLを使用してクライアントからHTTPリクエストを投げ，その結果Webサーバから返ってくるHTTPレスポンスを変数$resとして受け取っている。 $res->is_success $res->status_line $res->header("Content-Type") $res->code $res->header("Server") などはすべて，そのHTTPレスポンスオブジェクトから取り出すことができるさまざまな属性値を参照するもの。 http://search.cpan.org/~gaas/libwww-perl-5.813/l … $res->content もその一つで，Webサーバから返ってきたHTML全行をまとめて参照するメソッドです。 ANo.1で紹介された書き方ならHTML全行がまとめて$hensuに代入されますし， @lines = split(/\n/, $res->content); のように書けば，改行でHTML各行をバラして配列@linesに代入できます。
$esc_0208 = shift || $esc_0208; これは以下のようなことを一度にやっていると解釈してください。 # @_ (サブルーチンの引数リスト)の先頭から一つ shift (取り除いて) # $esc_0208 に代入する $esc_0208 = shift(@_); # $esc_0208 の内容が 0 || '' || undef だったら $esc_0208 の # 値を代入する $esc_0208 = $esc_0208 unless($esc_0208); また、サブルーチンなどの戻り値は最後に処理された値です。 例えば sub test { 1; } は sub test { return 1; } と同じ意味だし、 sub test { ("test", 1); } は sub test { return ("test", 1); } と同じ意味になります。 どちらかというとPerlの基本を学び直した方がよいように思います。 Perlはこういった省略記法が多く存在するので同じ事をするにも 複数の書き方があり、びっくりするようなこともあります。
自力で添付付きメールを解析する。 添付メールの基本構成は以下の通りです http://cns-guide.sfc.keio.ac.jp/2003/2/2/3.html 正規表現で切り出した部分より上部を次々に削除して行くとモジュールを使うより高速です。（だと思っています；） マルチパート（添付付きのメール）は 本文 と 添付部分 の区切りにboundary（バウンダリ）という文字列を利用しています。 boundaryの文字列はヘッダ部分で指定してあります。 一度、メーラーで受信した添付メールのソースを見ると構成がわかります。 インターネットメールは基本的にテキストデータしか送受信できませんので添付ファイル部分はBASE64というものでエンコードされてテキスト化されている事が標準です。この添付部分をデコードして保存する手順になります。 メールに関する知識付けの為に一度、手作業で行ってみるのも楽しいです。
それで、jcode.pl の何が知りたいのでしょうか? 「jcode.plを使いたいから、その使い方が知りたい」のか 「perlの勉強のため、jcode.plを読み解いているが、コードの意味が分からない」のか、 その理由によって回答も変わってきます。 前者なら、ANo.1がほぼ答えの全てです。 詳しくは http://mikeneko.creator.club.ne.jp/~lab/kcode/jc … を読んでください。 後者だとしたら、まずは上記リンクを読んで、この関数の仕様を把握してください。内容は基本的に、仕様そのままです。 各行の処理内容は以下の通り。 ・jis_inout 1行目: jis_inout呼び出しの第一引数が指定されている場合は、それを$esc_0208 に代入します。指定されていない場合はもとのまま。 2行目: $esc_0208が1文字だけの場合は、頭に "\e\$"を補います。 3行目: jis_inout呼び出しの第一引数が指定されている場合は、それを$esc_asc に代入します。指定されていない場合はもとのまま。 4行目: $esc_ascが1文字だけの場合は、頭に "\e\("を補います。 5行目: 変更後のエスケープシーケンスを返します。 ・get_inout 1行目: ローカル変数の宣言 2行目: 引数文字列が $re_jis0208 にマッチするかどうか調べ、マッチする場合は、マッチした文字列を $esc_0208 に代入 3行目: 引数文字列が $re_asc にマッチするかどうか調べ、マッチする場合は、マッチした文字列を $esc_asc に代入 4行目: マッチした文字列のリストを返す となってます。
そもそも何でバージョンをかかない？ Perl5.8.8だと $str = "12万3456円"; $index = index($str,"円"); $newStr = substr($str, 0, $index); print $newStr; だけでもSJISでも期待の動きをする． ＃まあ，危ない文字だと動かないだろうから ＃各種プラグマの類は書くべきだけど けど・・そもそも正規表現にしない事情がまるでわからない 最近のPerlだとベースがUTF8だから 日本語がどーのこーのとか二バイトがどーのこーのは 基本的にはない．
たぶんそのスクリプトの先頭の方に require 'foo.pl'; こんな記述があると思います。 複数行になっているかもしれません。 そしてそのfoo.plを開くと これも先頭の方に package com; と記述があるはずです。 そしてfoo.pl内の変数 $baa にアクセスするには $com::baa と記述する決まりなのです。 同じようにfoo.pl内の関数 sub goo () { … } にアクセスするには &com::goo() とします。 このことをパッケージと言います。 「perl パッケージ」で検索するといろいろ出てきます。 http://search.goo.ne.jp/web.jsp?MT=perl+%E3%83%9 …
http://oshiete1.goo.ne.jp/qa4101062.html で書いた モジュール確認用(linux版)のスクリプトをwindowsに移植(って大げさな)してみました 結果： -------------- O [ CGI.pm ] = C:/usr/lib/CGI.pm -------------- X [ Image/Size.pm ] is Nothing -------------- O [ File/Spec.pm ] = C:/usr/lib/File/Spec.pm -------------- O [ CGI/Cookie.pm ] = C:/usr/lib/CGI/Cookie.pm -------------- O [ DBI.pm ] = C:/usr/lib/DBI.pm C:/usr/lib/Bundle/DBI.pm C:/usr/lib/PerlEx/DBI.pm -------------- X [ DBD/mysql.pm ] is Nothing -------------- O [ HTML/Entities.pm ] = C:/usr/lib/HTML/Entities.pm -------------- O [ LWP/UserAgent.pm ] = C:/usr/lib/LWP/UserAgent.pm -------------- X [ SOAP/Lite.pm ] is Nothing -------------- O [ File/Temp.pm ] = C:/usr/lib/File/Temp.pm -------------- X [ Image/Magick.pm ] is Nothing -------------- O [ Storable.pm ] = C:/usr/lib/Storable.pm C:/usr/lib/DBI/Gofer/Serializer/Storable.pm C:/usr/lib/Memoize/Storable.pm -------------- X [ Crypt/DSA.pm ] is Nothing -------------- O [ MIME/Base64.pm ] = C:/usr/lib/MIME/Base64.pm -------------- X [ XML/Atom.pm ] is Nothing -------------- O [ Archive/Tar.pm ] = C:/usr/lib/Archive/Tar.pm -------------- O [ Archive/Zip.pm ] = C:/usr/lib/Archive/Zip.pm -------------- O [ IO/Compress/Gzip.pm ] = C:/usr/lib/IO/Compress/Gzip.pm -------------- O [ IO/Uncompress/Gunzip.pm ] = C:/usr/lib/IO/Uncompress/Gunzip.pm ##########以上です 恥ずかしいけど、スクリプトの中身も一応アップ #!/usr/bin/perl print"Content-type: text/html\n\n"; print "<html><pre>\n"; ## 調べたいモジュールを@pm_test に入れる # 例: @pm_test = ('Crypt::DSA','Image::Magick','uso::desu','file::Find'); @pm_test = ('CGI', 'Image::Size', 'File::Spec', 'CGI::Cookie', 'DBI', 'DBD::mysql', 'HTML::Entities', 'LWP::UserAgent', 'SOAP::Lite', 'File::Temp', 'Image::Magick', 'Storable', 'Crypt::DSA', 'MIME::Base64', 'XML::Atom', 'Archive::Tar', 'Archive::Zip', 'IO::Compress::Gzip', 'IO::Uncompress::Gunzip' ); ## windows版 $lib_path= join(" ", @INC); $lib_path =~s/\//\\/g; @pm_path = `dir $lib_path /b /s`; #print join("<HR>\n",@pm_path); # 画面に全てのfileを表示するなら行頭の#外し #__END__ foreach $pm_test(@pm_test) {print"--------------\n"; $pm_test =~s/::/\//g; $pm_test = $pm_test .'.pm'; foreach(@pm_path) {s/\\/\//g; if(/$pm_test/i) {$yn{$pm_test} .=" $_"; } } if($yn{$pm_test}){print "O [ $pm_test ] = $yn{$pm_test}";} else{print "X [ $pm_test ] is Nothing\n";} } __END__
forで日付の配列を作る処理は問題ないので、表示されないとすると、if文の条件が該当しないから表示されていないだけでしょう。 まずは、ifをなくしてすべて表示させてみてください。 それから、全体の流れから推測すると、このifは、選択済みのoptionタグか、そうでないoptionタグのどちらかを表示する分岐ではなかったのでしょうか？
> my(@weekdayname) = ('日','月','火','水','木','金','土'); をどこかに追加 > my ($yyyy, $mm, $dd) = (localtime($day0))[5,4,3]; ↓ > my ($yyyy, $mm, $dd, $w) = (localtime($day0))[5,4,3,6]; > sprintf('%4d/%2d/%2d', $yyyy, $mm, $dd) ↓ > sprintf('%4d/%2d/%2d(%s)', $yyyy, $mm, $dd, $weekdayname[$w])
CPAN でインストールすると、インストール先のディレクトリに 関連ファイルの一覧が入った .packlist というファイルが作られています。 .packlist に記載されているファイルを削除すればよいです。 一括して削除するなら cat {インストールディレクトリ}/.packlist | xargs rm でまとめて削除できます。
確実な方法 CGIを呼び出すときに、それぞれのHTMLからURL情報を渡す。 CGI終了時にHTTPヘッダで「Location:URL情報\n\n」で呼び出し元にロケーションしなおす。 不確実な方法１ 環境変数のリファラ情報を取得 CGI終了時にHTTPヘッダで「Location:リファラ情報\n\n」で呼び出し元にロケーションしなおす。 不確実な方法２ CGI終了時にJavaScriptの「go.history(-1)」などのコード吐き出しブラウザに任せる。 リファラ情報にこだわる方がよくおられますが、HTTPでのプロトコル上必須情報ではないので、インターネットセキュリティソフトなどがエンド側で入っているとデフォルトでブロックされるケースが多いです。 スクリプトも切ってる人がいるし・・・。
接続先のホストが存在しない(icmp destination unreachable)という 応答が返ってきて、終了しているということはありませんか。 存在するが、ファイアウォール等で telnet ポート(port 23)への 接続をドロップしているようなホストを指定するとどうなりますか。
> This email address must be verified first before you can use it > for Sender/From field. となっているので、メール送信者(エンベロープおよびヘッダ)のアドレスに 問題があるのではないでしょうか。 sendmane.exe で発信する際のエンベロープ Sender は、初期設定で 指定するのでしょうか。sendmane.ini に設定されている 発信者のメールアドレスがプロバイダで使用しているメールアドレスに 一致しているか確認するとよいと思います。 また、XMailServer を使用されているようですが、XMailServer には 中継先のメールサーバとユーザ認証する仕組みがあるので、それを 使用してもよいと思います。 参考URL：http://www.xmailserver.jp/sample/xmailcfg/cgi/sm …
＞ このプログラムだと10000個あるテキストデータの一つしか処理できません． 確認です。 MAC（またはMACで作ったテキストファイル）でやってるんですか。 １個のファイルは意図したように処理できて、そのように10000個のファイルを連続処理したい。ということですか。
DBMとかはつかったこと無いので、、 普通にcsvfileに書き込み/読み出しすれば足りていましたし CSVの方が他にも使い回しが出来るので、、、 DBMについては http://www.lr.pi.titech.ac.jp/~abekawa/perl/perl … http://memo.blogdns.net/cgidbm.html あたりを見ていただくか 詳しい人に追加回答いただけると嬉しいです さてと、以下 思いつきで書きますので 適当に取捨選択してください #2の応用ですが インターネット上のメールアドレスだと 最低でも 4つ以上の 半角英数字を含むと思います(＜＝a@*.jp 　LAN内だと a@aも有るが) それを利用してサブディレクトリを生成すれば >メールアドレスをファイル名にしたファイルを作成 も現実的に成りますね $mail に 入力された アドレスがあるとして TESTするなら $mail = 'a@example.com';# ←TEST用アドレス @list_p = ($mail =~/\w/g); #↑ @list_p の各要素に 半角英数字または _ が一つづつ格納される(以前の質問での他の回答者の受け売りですが ) print join(" - ",@list_p); # ← 確認のため表示してみる # 上の例だと a - e - x - a - m 以下略 と表示される 取得した値のうち $list_p[0] ～$list_p[3] まででディレクトリの階層とします データ用の親ディレクトリを /home/tarou/list/ (以下では list/)として 上のサンプルアドレスだと list/a/e/x/a/ と言う階層に a@example.com と言うfileをおきます。 既に数十件のアドレスが登録されている状況を考えると １．入力されたアドレスから list/a/e/x/a/ と言うディレクトリのパスを取得 ２． fileTEST演算子で ディレクトリが存在するか確認 　　　＝＞アドレス自体を確認するまでも無く　新規だと言う事が判る 3．list/a/e/x/a/a@example.com が有るか fileTEST演算子で確認 尚 個人情報保護の観点から list/ 以下のフォルダに 他人がアクセスできない工夫が必要です suexec でCGIが動くなら ディレクトリのパーミッションを 700 にすれば 大丈夫だと思いますが suexecでないなら共用サーバーではhttpアクセスは防げますが 他のユーザーが設置した CGIによるfile読み込みを防げませんので 現実的ではないですね
「awk とか perl」と書いておきながら awk は使えないので perl. perl だともう普通のプログラム言語なので, もっと簡単に my $name; while (my $line = <>) { # 1行読み込んで chomp; #念の為行末の改行を消して if ($line が氏名だったら) { $name = $line; #氏名を記憶する } else { print "$name$line\n"; #氏名と現在の行をまとめて表示 } } で終わり.
チェック用のサブルーチン作っちゃいますけれどね、私なら。 条件煩雑だし、将来拡張もできるようにしたいから。 sub cond_check { my ($in) = @_; my $cond_check = 0; for my $key ('nam','tel','add') { ++$cond_check if ($in->{$key} ne ''); } ++$cond_check if ($in->{'pre'} > 0); if ($cond_check == 0 || $cond_check == 4) { return 1; } return; } 呼び側は、 if (! cond_check(\%in) ) { &error("エラー"); }
iモードIDは、DoCoMo契約があるかぎり同じですが、FOMAカードは、紛失や破損の場合、新しいものに変わってしまうので、iモードIDの方が変わらないと思います。
ファイルのダウンロードをさせならが、ファイル名を宣言すればOKです。 print qq|Content-Type: application/octet-stream\n|; print qq|Content-Type: application/download; name="$filename"\n|; # $filename=target.zip print qq|Content-Disposition: attachment; filename="$filename"\n|; # print qq|Content-Length: $filesize\n|; # 設定すればダウンロード時間が表示されます print qq|\n|;
レンタルサーバ上にFTPでUPしてると考えて良さそうですね。 FFFTPであればサーバ上のファイル名を右クリック→属性変更で、 数字の755でOKです。 「実行可能」のチェックボックスにチェックを入れてもOKです。
DBD::mysqlモジュールが存在しない場合、エラーが標準エラー出力に出てしまうので、 print "Can't connect to MySQL"; の表示は出ないですね。evalでキャッチできないかやってみましたけれど、やっぱり標準エラー出力にエラーメッセージが出ただけでした。 インストールされているモジュールは、以下のやり方で確認できます。確認されてみてはどうでしょうか。 #!/usr/bin/perl # print "Content-type: text/plain\n\n"; print "perl version: $] (",sprintf("%vd", $^V),")\n\n"; BEGIN{ unshift(@INC,'./'); $ENV{'PERL5LIB'}='./'; } my @modules = qw( CGI DBI DBD::SQLite DBD::MySQL Encode DB_File SDBM_File Switch NOMODULE ReadOnly ); foreach (@modules){ print "$_: "; eval "use $_;"; print (eval "\$${_}::VERSION" || 'not available'); print "\n"; } print "\n";
どうも本当に質問者さんのやりたいことがわかりません。 単純に print したときは規定のフォーマットが使われて文字列化されるので 9.09998333572203e+17 のようになっているのでしょう。 17桁使うとして整数表示させるなら %17.0f とかいう書式もありますし、 先の回答に書いたように、データそのものは「浮動小数点数形式で格納されている整数」 なので、それを「整数化」というのが具体的にどういう操作を言っているのかわかりません。 入力文字列に対して正規表現を使うなりして validation してから 手持ちゴールドとやらの加減算処理をすればよいのではないでしょうか。 仮に909998333572203000のような文字列入力があって、それを数値化したときに 9.09998333572203e+17 という内部表現になっていたとしても 数値として扱うことはできますから、でかすぎる数字として弾くのは 難しいことではないと思います。 #たぶん下のほうの数字の精度が怪しいはず
bodyタグにこんなのを書くとどうでしょう？ <body onload="document.forms[0].submit();">
> ●ありがとうございます。いただいたコメントをもとに、 > samplev2.plを以下のとおり修正し実行しても、同じエラーが出力さ > れてしまいます。なぜでしょう？ main側のuseで指定するのはパッケージ名ではなくてファイル名のはず。だから、 package main; use samplev2; our $e2g = new TwoWayMap(); としないと、perlはどのファイルがクラス定義をしているのか分からない。 また、クラス定義をする側のファイルの拡張子はplではなく、pmを使うのが普通だったはず。 samplev2.pl →　samplev2.pm
＞でも「どっち食べる？」とかって聞かれたら普通どちらかのみですよね・・・ その質問は、残ったほうを聞いた人が食べるという前提ですよね。 プログラムで、x==3 || x==5 だと両方が同時に真となることはないわけですが、そういうのと同じです。 残った方を捨てる前提で「どっち食べてもいいよ」なら両方食べてもOKです。 「千円くれるか晩飯おごってくれたら頼みを聞く」と言って、千円もらった上に晩飯おごってくれたらどうしますか？
use Socket; $addr = inet_aton('172.17.5.5'); でよいみたいです。 参考URL：http://www.linux.or.jp/JM/html/LDP_man-pages/man …
perl だけだと難しいので、perl の system 関数で ssh(Secure Shell) を 使ってリモートホストのスクリプトをキックすればよいでしょう。 > 1.DBのdumpをとる system "ssh リモートホスト /path/to/dump/script.sh"; > 2.WEBサーバに転送する system "scp リモートホスト:/path/to/dump/file /path/to/dump/file"; > 3.WEBサーバにあるdumpからDBを復元する system "scp /path/to/dump/file リモートホスト:/path/to/dump/file"; system "ssh リモートホスト /path/to/restore/script.sh"; なお ssh は公開鍵認証等で自動認証するよう設定するとよいです。 参考URL：http://www.stackasterisk.jp/tech/systemConstruct …
条件文を長くするのは確かに読みづらくなりますよね。 エラーをカウントする変数 $error_count のようなものを用意し、 エラーの場合には、$error_count++　のようにカウントアップしておいて、最終的にこれが 0か、1以上かを調べてエラー処理させると、すっきります。 if ( $in{'nam'} eq '' ) { $error_count++ } if ( $in{'tel'} eq '' ) { $error_count++ } if ( $in{'pre'} < 1 || $in{'pre'} > 47 ) { $error_count++ } if ( $in{'add'} eq '' ) { $error_count++ } if ( $error_count > 0 ) { # エラー }else{ # 問題なし }
質問の意図が二通り考えられますが、どちらにせよ無理です。 ○指定したURLに httpでアクセスしてファイル一覧を取得したい場合 ・ LWP モジュールとかを使えば指定URLにアクセスしてHTMLデータなどを取得することはできます。 ・ですが、http プロトコルでは、ファイルの一覧の取得はできるとはかぎりません。 WWWサーバの設定で、「indexが存在しない場合はファイル一覧のHTMLを自動生成する」ようにしていた場合で、index ファイルが存在しない場合に限り、ファイル一覧のhtmlが表示されます。 ・また、一覧が表示される場合でも、その形式は、WWWサーバの設定によって変わってきます。汎用的にhtmlからファイル一覧を抽出するのは無理です。 ○指定したurlに該当するファイルシステムに直接アクセスしたい場合 ・ホスト名でlocalhostを指定していますが、だからといってそのアクセス先のファイルシステムがcgiを動かしているホスト上にあるとはかぎりません。 　(proxy しているなど) ・また、指定したディレクトリ( /images/ )が、ファイルシステムとして存在しているとは限りません。CGIなどで動的にデータを生成している場合もあります。 そのため、汎用的に「urlに該当するファイルシステムに直接アクセス」する方法はありません。 素直に、cgi内に絶対パスを持たせた方がいいでしょう。
もう解決されたかもしれませんが、perl初心者の私でも答えられそうな質問が未解決になっておりましたので回答させていただきます。 クエリとはURLの ？ 以降の事でCGIにデータを渡す方法の一つ、GETメソッドと言います。 クエリでは #(シャープ)を含むそれ以降の文字列をCGIに渡す事が出来ません。 クエリに使う文字列にはURLエンコード処理された文字列を使います。 まず、「ジャンプするURL」をエンコードして下さい。 ご自分でエンコードできない場合は参考URLのようなページでエンコードが可能です。 エンコードしたURLを、 ?url=　の後に付けてください。 これでクエリに使えない文字が使えるようになりました。 次にご提示されているperlスクリプトにも変更が必要です。 スクリプトを何も変更されていないと仮定しまして、78行目 $url =~ s/^url\=(.*)/$1/; の行の下に以下の1行を追加します。 $url =~ s/%([0-9A-Fa-f][0-9A-Fa-f])/pack("C", hex($1))/ego; これはデコード処理と言いましてエンコードした文字列を元の文字列に戻す処理です。 終わりです。 perlは結構面白いので是非色々と勉強してみてください。 参考URL：http://hpcgi1.nifty.com/glass/url/url_encode.cgi
use encoding は一見便利に見えるけど、落とし穴がそこらじゅうにあるのでお勧めしなかったんですがね。 ドキュメントを見ると USAGE use encoding [*ENCNAME*] ; Sets the script encoding to *ENCNAME*. And unless ${^UNICODE} exist and non-zero, PerlIO layers of STDIN and STDOUT are set to ":encoding(*ENCNAME*)". Note that STDERR WILL NOT be changed. Also note that non-STD file handles remain unaffected. Use "use open" or "binmode" to change layers of those. という部分があります。 つまり、open で開いたファイルから取ってきた内容についてはそのままでは use encoding の影響は及びません。 open するときにそのファイルのエンコーディングを指定するか、 binmode でopen 後のファイルハンドルに対して指定します。 #!/usr/bin/perl use strict; use warnings; use Jcode; use encoding 'euc-jp'; open my $fh, '<:encoding(euc-jp)', 'sample02.txt' or die "Cannnot open sample02.txt : $!"; #分割する文書の取得 my $line = <$fh>; close $fh; print Jcode::getcode($line), "\n"; print join("\n", split(//, $lines)); 実行結果: utf8 こ ん に ち は 。 お ひ さ し ぶ り で す 。 こ れ で W e b も O K ！
えっと.... さしあたり 5.8.8 ですが, プロトタイプにおける & は原則として「サブルーチンへのリファレンス」でないとダメです＞#5. 「ブロックが書ける」とか「実はそのあとのコンマも省略できる」というのは, 「最初の引数のプロトタイプとして & が書かれている」場合の特殊事情のはず.
ANo.2 で書いた通り、この関数はスカラーコンテキストかリストコンテキストかで、全然別の値を返しています。 呼び出し方は間違えてないですが、返値の表示方法がちょっと間違えてます。isprimeの動作をテストするなら foreach my $arg ( 5, 12 ) { print "isprime($arg)\n"; my $result = &isprime($arg); if ($result) { print "\$result is true\n"; } else { print "\$result is false\n"; } my @result = &isprime($arg); print "\@result = (@result)\n"; } とでも実行してみてください。
最近Perlは全然さわってないので文法も分からないので考え方だけですが for nextを 3～10で回して本日日付にそれを加算したものを出力します。 VBScriptで書くなら Response.Write "<option>選択可能です!</option>" & vbCrLf For i = 3 to 10 　HIDUKE = Now + i 　Response.Write "<Option>" & Month(HIDUKE) & "月" & Day(HIDUKE) & "日(" & _ 　　Array("日", "月", "火", "水", "木", "金", "土")(Weekday(HIDUKE) - 1) & ")</option>" & vbCrLf Next と言う感じでしょうか
ロリポップということなので、Webサーバのタイムアウトが30秒設定なのだと思います。 とすると、Perl内部で連続起動することで処理を分断してもダメなんじゃないかと。つまり、一度ブラウザに結果を返さないといけないのではないかと思います。 なので、t-okuraさんの回答のようにLocationで再度CGIを呼び出すようにするとかAjaxにするとかの方法になるかと思います。 たぶん、MovableTypeで記事を再構築する時に処理を分割しているのが参考になりやすいかと思います。
１．そもそも FTPなどでの転送時に アスキーモードで送っていますか？ ２．次に#2さんも書かれているパーミッションですが land.toのサーバー仕様： http://land.to/newshiyou.php を見るとSuExec です(CGIがotherではなくユーザー権限で動く) ですので http://www.kent-web.com/bbs/joyful.html の下の方にあるパーミッション一覧表の suEXECサーバ 側の値にしてください 　(一般用の値でもサーバーエラーにはなりませんが 　　間違えて .cgiや .cgiを置くディレクトリを707 や775 777 などにするとサーバーエラーです） ３． その次には #4さんの触れている 書き換え時の文法ミスですが 　そもそも .cgi はサーバーに上げる前にローカルでチェックすることが必須ですので Windowsをお使いなら http://pocketstudio.jp/win/activeperl/ 辺りをみてインストールし コマンドプロンプトで テストしてください 　それについてよくわからなければ 　補足に　お使いのOS(WindowsXP とか MAC OSX とか)をお書き添えください
unless は if の逆で「与えられた条件が成り立たないときにブロックを実行する」という文です. 今条件として $in{pre} とだけ書いてありますが, これだと「空文字列か (数値の) 0, あるいは (文字列の) "0" のときに偽, その他のときに真」となります. つまり, unless ($in{pre}) と書くと結果的に 「$in{pre} が空文字列か数値の 0, もしくは文字列の "0" のときに以下のブロックを実行する」という意味になります.
つられて間違えてしまいました。 type con >t.txt としてください。
はて ? 書かれているとおりでよいのではないですか。 if (入力変数 eq '選択してください') { &error("都道府県を選択して下さい！"); } なにが問題なのでしょうか。
> cgiを操作して、任意のwindowsクライアントマシンのファイル（CSVです）をperlのopenで開いて、linuxサーバに保管したい そういうことなら、アップローダーを使えばいいんじゃないでしょうか。 # 動作としては逆（クライアントからサーバへアップロード）になりますけど
exec 関数は実行後、制御が戻らないので、 “print”の前にスクリプトが終了してしまいます。 system 関数を使うのが無難な方法だと思います。 また、配列に実行結果を入れたい場合、 バッククオートで実行すると良いと思います。 my @result = `tasklist`; # 当方、XP Home 環境なので、tasklist が無いので未確認です。
必ず3点の画像というのであれば、3つの入力欄を設けるのが一番手っ取り早いのではないでしょうか。 あとは、SWFUpload（http://swfupload.org/）を使うと普通のウィンドウズアプリのように一つのダイアログで複数ファイルをアップロード可能です。
先に回答が出てありますが、 それでは、ファイルの最後に記述された数字で埋められます。 x に最も近い手前の数値で埋めるには以下のようになります。 my $new; my $last_str; open FILE, '+<ban5.txt' or die; while (<FILE>) { chomp; if ($_ eq 'x') { $_ = $last_str } $new .= $_ .\n; $last_str = $_; } seek FILE, 0, 0; print FILE $new; close FILE; もっと工夫した書き方も色々と出来ますが、 全体の流れを原始的に書くとこのような感じになります。
#5さん >何かどうも変なんですが いや、だから shebang行の末尾に CR+LFなのだと思いますよ 質問文や #1さんへの補足に書いた内容に間違いが無ければと言う 前提でですが
質問者さんが今使っているのは 5.*10* なので、5.6とか5.8に するのは「バージョンアップ」ではないのではないでしょうか? >#1 使用するバージョンを5.8.xにするか(ActiveStateからまだダウンロード できます)、ppm のリポジトリに http://cpan.uwinnipeg.ca/PPMPackages/10xx/packag … を登録してみてください。 ここには5.10用のDBD::MySQLも登録されているようです。 リポジトリの追加手順はこんな感じです。 C:\>ppm install http://cpan.uwinnipeg.ca/PPMPackages/10xx/packag … もっと詳しい説明などは↓を。 ActivePerl 10xx Win32 PPM packages http://cpan.uwinnipeg.ca/PPMPackages/10xx/
VBSのhelpを身ながらやってみたところ、ヘッダーを取得することができました。 use strict; use Win32::OLE qw(in with); use Win32::OLE::Const 'Microsoft Word'; my $word = Win32::OLE->GetActiveObject('Word.Application') || Win32::OLE->new('Word.Application', 'Quit') || die; # 読み込み my $doc = $word->Documents->Open('E:\test.doc') || die; my $header = $doc->Sections(1)->Headers(1); my $s = $header->Range->Text; print "$s\n";
Windows上のPerlということはActivePerlですか? であれば、ドキュメントに理由が載ってます。 changes-58.html (インストールしたディレクトリの htmlというサブディレクトリの下にあります) Build 804 Friday, Nov 29, 2002 What's new in the 800 Series Support has been enabled for large file access on all platforms, meaning that file manipulation facilities within perl can cope with files larger than 2GB or 4GB. 原因は5.6系列では未対応だったから。 対処法はバージョンを上げること。
正規表現なら m/.*\\(.+)$/; でいいはずです＞#4. $' を使うなら m/.*\\/ でマッチさせる.
あ, #3 のマッチはやっぱり m/<.*?>/sg と s を入れないとダメだった.
予め変数に出力内容をためておいて、それをEOMの中に配置すればよいと思います。 my $kt; @kt = split( /&/, $Slog[3] ); foreach (@kt) { $kt .= "[<a href=\"$Ekt$_$Eend\">$kgori{$_}</a>] "; } $PR_data=<<"EOM"; $kt EOM
じゃ、シンプルなものを 詳しく説明します #1とは別途です。混乱しますので#1に書いたことは無視してください # 以下の HTML cgi ともに EUCコードで書いています # メールに書き出すときだけ JISコードに変換します #尚、このスクリプトの場合はJcode.pmが必要です ##最初のFORMを送る mail.htmの中身の内FORMタグ部分のみ <form action ="./mail.cgi" method ="POST"> name<input type = "text" name="n"><P> <textarea name="txt" rows="5" cols="70"></textarea><P> <input type="submit" value="1 確認" name="send"> </form> #次にそれを受けるmail.cgiの中身 #ここでは省略しますが、まずMime-Typeヘッダ出力 #　それから %formに入力した文字列をデコードして入れた前提です # 上のHTMLから送られていますので # $form{'n'}と$form{'txt'}は名前と本文 # $form{'send'}には submitボタンの文字列が入っていますが # $form{'send'} の値が 頭に 2 が付く場合は メール送信処理 それ以外は確認画面を表示します if($form{"send"} =~ /^2/) {&send_mail;} else {&form2;} exit(); #######メインルーちん は以上 #######form2　確認画面表示 ルーちん ## sub form2{ print<<FORM2; <h2>FORMメール</h2> 確認するなら[1確認]を押す。送信してよければ[2送信]を押す<P> <PRE> 名前: $form{'n'} 本文: $form{'txt'} </PRE> <form action="$ENV{'SCRIPT_NAME'}" method="POST"> name<input type = "text" name="n" value="$form{'n'}"><P> <textarea name="txt" rows="5" cols="70"> $form{'txt'} </textarea><P> <input type="submit" value="1 確認" name="send"> <input type="submit" value="2 送信" name="send"> </form> FORM2 # ここの確認画面で "2 送信" の方のボタンを押すと次の画面だとメール送信 # "1 確認" ボタンを押すともう一回確認表示になります } #### #####sendmail メール送信処理ルーちん ##### sub send_mail{ use Jcode; $form{'n'} = Jcode->new($form{'n'}, "euc")->jis; $form{'txt'} = Jcode->new($form{'txt'}, "euc")->jis; $my_mail='tarou@hoge.example.com';# 自分のメールアドレス $sendmail='/usr/sbin/sendmail'; open(OUT,"| $sendmail -t"); print OUT<<MAIL; X-Mailer: CGI-TEST-MAIL ver0.1 From: $my_mail To: $my_mail Content-Transfer-Encoding: 7bit Content-Type: text/plain; charset="ISO-2022-JP" Subject: Form-mail name = $form{'n'} text : $form{'txt'} --------------- [ http://hoge.example.com/~tarou/ ] MAIL print<<END_MSG; <html><body><h2>送信しました</h2> END_MSG close(OUT); } __END__
手元の「プログラミングPerl」 (O'reilly) を見ながら, っと. まず次のようなモジュール foo.pm を作ります: -------------------- ここから -------------------- package foo; use overload '+' => \&add_foo, q("") => \&stringify; sub import { overload::constant integer => \&make_foo, float => \&make_foo; } sub unimport { overload::remove_constant integer => \&make_foo, float => \&make_foo; } sub make_foo { bless { val => $_[1] }; } sub add_foo { my ($foo1, $foo2) = @_; bless { val => $foo1->{val} - $foo2->{val} }; } sub stringify { $_[0]{val}; } 1; -------------------- ここまで -------------------- これを使って次のような test.pl を作ると -------------------- ここから -------------------- use strict; use foo; print 1+2, "\n"; -------------------- ここまで -------------------- めでたく期待通りの結果.
ドメインと内容はそれっぽいですが、必要最小限のものだけしかないようです。 参考URL：http://perldoc.jp/
なんかややこしいスクリプトなんで、読み間違ってたら申し訳ないんだけど、 最初に現れたArrayからその後の最初に現れた);までの範囲を 切り出したいと言う話なら、 #!/usr/bin/perl # -*- coding: utf8 -* use strict; use warnings; use Fatal qw(:void open close); use feature ':5.10'; while (<>) { my $cond = /Array/../\);/; print if ($cond); last if $cond =~ /E0$/; } こんなんとか。 Arrayと);に挟まれた部分全部という話なら while (<>) { print if /Array/ .. /\);/; } で。 ファイル名の付け替えとかその辺は面倒なので省略。
＃Perlは門外漢ですが（汗 @ARGVに入ってきませんか？$ARGV[0]などで使えたと思います＞引数。
仕上がりの構造を分かりやすくしてみました。 my $dom = { '/path' => '.' }; my @dir = ($dom); while ( my $dir = shift @dir ) { 　　opendir( DIR, $dir->{'/path'} ); 　　my @path　　　　= split( '/', $dir->{'/path'} ); 　　my $current_dir = pop @path; 　　my $parent_dir　= pop @path; 　　while ( my $path = readdir(DIR) ) { 　　　　next if ( $path =~ /^\.\.?$/ ); 　　　　my $full_path = "$dir->{'/path'}/$path"; 　　　　$dir->{$current_dir} ||= []; 　　　　if ( -d $full_path ) { 　　　　　　push( @dir, { '/path' => $full_path } ); 　　　　　　push( @{ $dir->{$current_dir} }, $dir[-1] ); 　　　　} 　　　　else { 　　　　　　push( 　　　　　　　　@{ $dir->{$current_dir} }, 　　　　　　　　{　 'file_name'　 => $path, 　　　　　　　　　　'full_path'　 => $full_path, 　　　　　　　　　　'current_dir' => $current_dir, 　　　　　　　　　　'parent_dir'　=> $parent_dir, 　　　　　　　　} 　　　　　　); 　　　　} 　　} 　　delete $dir->{'/path'}; 　　closedir DIR; } # 動作確認（モジュールがないときはインストールしてください） use Data::Dumper; print Data::Dumper->new( [$dom] )->Indent(1)->Sortkeys(1)->Dump; exit;
理解したいなら、動作確認は自分でできるようになったほうが良いと思いますよ。 以下、判定プログラムです。 while (<DATA>) { my $url = $_; print $url; if ( $url =~ '^http://([?^/]*[.-])?(abc|efg?|hij|xxx)[.-]' ) { print qq| OK\n|; } else { print qq| NG\n|; } } __DATA__ http://hij.com/ http://aahij.com/ http://hijaa.com/ http://aahijaa.com/ http://aa-hij.com/ http://hij-aa.com/ http://aa-hij-aa.com/ http://www.hij.com/ http://www.aa-hij.com/ http://www.hij-aa.com/ http://www.aa-hij-aa.com/ http://www.aahij.com/ http://www.hijaa.com/ http://www.aahijaa.com/ http://www.zzz.com/hij.html http://www.zzz.com/aa-hij.html http://www.zzz.com/hij-aa.html http://www.zzz.com/aa-hij-aa.html http://www.zzz.com/aahij.html http://www.zzz.com/hijaa.html http://www.zzz.com/aahijaa.html 結果では、 http://hij.com/ http://hij-aa.com/ がOKとなります。
次の簡単なコードを試してみてください。 $DATE = `date +%Y_%m_%d`; print "$DATE$DATE\n"; 私の使用している VineLinux では、日付が２行に表示されます。日付が２行に表示される場合は、 $DATE の末尾に改行が付着しているので chomp $DATE; とすればうまくいくと思います。
条件によって何かしらの動作を切り替える仕組みを条件分岐といいます。 一般的には、if文を使って条件分岐させます。 エラーがあるときとないときで分岐させる場合は、エラーの有無をif文で判断し、エラーがあれば、配列(たとえば@error)にエラーメッセージをpushしていきます。 その後、さらにif文で@errorに値があるかどうかを判断し、あれば、その内容を画面に出力するページを表示し、exitで終了します。 エラーがなかった場合は、確認ページを表示しexitします。
http://wb-i.kir.jp/sample/E_SHOP120/e_shop.cgi これなんかはフリーですし、検索もついてます。 確か、色々著作権表記をけさなければ、 いじっていいはず。
ANo.1です。 >書き込みオープンのチェックはどのようにしたらできるのでしょうか？ 最初に確認しておけばよかったのですが「何も出力されない」というのはdata.datがサイズ0で作成されるのでしょうか？それともdata.datの作成がされないのでしょうか？open(OUT, ">data.dat"); でも返り値がfalseの場合、エラーメッセージを出力させてみてください（or dieでいいです）。
久しく触っていないので結構怪しいですが… > 空入力された場合の条件式がわかりません。 if (length($string) == 0) で、どうでしょう？ > 入力チェック後のページ切り替え ページを切り替えるにはhttpヘッダでlocationを出すとか、<meta http-equiv="refresh" ～～～>を含むhtmlを出力するとか、ページ全体をperlスクリプトから生成するとか、他から読んで吐き出すとか…色々方法はあると思います。 用途にあった方法でやれば良いんじゃないでしょうか。
F9のインストール状況が良くわからないのでなんともいえないのですが、Perlモジュールのインストール方法はいくつかあるんですが、このやり方「perl -MCPAN -e shell」は近年になってからの方法なので、昔ながらの方法で試してはいかがでしょうか。 でかいリストになりますが参考URL「http://www.cpan.org/modules/01modules.index.html」から必要なパッケージをダウンロードしてから、作業ディレクトリで ・TARボール解凍(tar -vzxf TARボールファイル) ・Make生成（perl Makefile.PLなど） ・Make（make　とか　make allとか） ・Make試験（make test） ・インストール（make install） の手順で大概いけるはずで、もしだめならば「開発環境」が整っていない（未インストール状態:普通のひとは不要ですので）のだと思います。 ほかには「ppm」なんていうのも一時期流行っていたような・・・。 まぁ、基本をおさえておいて損は無いと思います。 参考URL：http://www.cpan.org/modules/01modules.index.html
Macのターミナルという端末（アプリケーションの中にあります）を開いて、 次のコマンドを使います。 chmod 755 <指定のファイル> 　同じように chmod 777とかやります。ファイルだけではなく勿論ディレクトリ（フォルダー）にも使えます。 ターミナルに入った時点でたぶん自身のホームディレクトリにいると思うので、ホームディレクトリから見て、 chmod 755 ~/Library/WebServer/CGI-Executables とかこんな感じだと思います。 現在の場所は、 pwd というコマンドで確認できます。 注意！ 　​http://homepage.mac.com/dnagase/macosx/perlcgi.h … このサイトで紹介しているディレクティブでは、xxxx.plというファイルが使えません！perlで書いたものでも、xxxx.cgiというファイル名にする必要があります！
No1 です。軽率に回答してしまったようで、申し訳ありません。 while(my($key,$val) = each %PL) { @VS_VALUES = split(/\s/,$val); if($form{'vc_name'} eq $VS_VALUES[5] && $key ne $form{'pname'}) { &repair('VS'); ..... %PL の呼び出す順番を変更した場合、if($form{'vc_name'} eq $VS_VALUES[5] && $key ne $form{'pname'}) にどのような影響を及ぼすのか %form ハッシュや @VS_VALUES 配列の詳細を把握していないと判断できません。 また、repair('VS'); サブルーチンで %form や @VS_VALUES を書き換えていると推測できますが、どのような 処理をしているのかも分かりません。どうやら私の手には負えないので、前回の回答は撤回したく思います。
in という名前のハッシュを使っているところからして、cgi-lib.pl を使ってますね? であれば、 > use strict; > use warnings; と >my %in; は削除してください。 しかしなんでピンポイントで、条件判定のところだけ 書き換えるということを試さないのでしょうか?
URLをそのままにしたい場合(アクセスログが無意味になるやり方なのでCGI内でリファラ別に記録を取ったほうが良い)は #!/usr/bin/perl my $ref = $ENV{'HTTP_REFERER'}; my $keywords = 'キーワード1|キーワード2|キーワード3|キーワード4|キーワード5';## 特定のリファラーを含むURL ## デフォルトページファイル my $F_NAME = "topa.html"; ## 条件によりHTML変更 if( $ref =~ /$keywords/ ){ $F_NAME = print "topb.html"; }## if文条件記述を少し正確にしてアレンジしてみました：仕事でログ解析に使えます ## HTML読み込み出力 print "Content-type: text/html\n\n"; open(INHTML,$F_NAME); while(<INHTML>){ print; } close(INHTML); 蛇足ですがリファラはHTTPでは必須の要素ではないため隠蔽されていることが多いです。
@line にファイルから読み込んだデータがそのまま入っているのでは ないでしょうか。例えば、こんな感じで @line = <> ; そうであれば、chomp @line として各行にある行末の改行をとればよい です。
文字クラスの指定がテキトーですが、どうですかね。 eucで書いてます。 参考になれば。 #! perl use strict; my $str = << '__END_OF_STR__'; perl5.8.5でCGIのプログラムを作っています。 全角・半角が混じったテキストで20文字毎に改行を入れたいと思っています。 プログラムの文字コードはEUCで書いています。 （変換前）12345678901234567890123456789012345678901234567890 　　　↓ （変換後）12345678901234567890\n12345678901234567890\n1234567890 という感じです。 いろいろな方法で実現できると思ったのですが スマートな書き方を教えていただけますでしょうか。 よろしくお願いいたします。 __END_OF_STR__ $str =~ s/\n//g; $str =~ s/((?:[\xA1-\xFE][\xA0-\xFF]|.){20})/$1\n/go; print $str; ＿＿結果＿＿ perl5.8.5でCGIのプログラムを 作っています。全角・半角が混じったテキス トで20文字毎に改行を入れたいと思ってい ます。プログラムの文字コードはEUCで書 いています。（変換前）123456789 01234567890123456789 01234567890123456789 0　　　↓（変換後）1234567890 1234567890\n12345678 901234567890\n123456 7890という感じです。いろいろな方法で 実現できると思ったのですがスマートな書き 方を教えていただけますでしょうか。よろし くお願いいたします。
Unicode::Japanese のソースをローカルで解凍し、 Unicode/Japanese.pm を レンタルサーバの適当なディレクトリにアップロードして、 use lib qw(/path/to) のようにそのディレクトリを指定してやることによって、 Unicode::Japanese をロードするということもできなくはありません。 PurePerl での利用になるので、XS をインストールした場合に比べると、速度は遅くなりますが。 参考URL：http://www.nishishi.com/blog/2005/12/perl_module …
GPSによる位置取得と経路探索（ナビゲーション）は全く別のアプリケーションなので（確かに組み合わせると便利ですけれど）GPS関連からではなくて別に探さないと見つからないと思います。 また、質問の内容だと何をしたいのかがよくわかりません。目的地と同じ街の中で誘導したいのかそれとも日本中（世界中）から誘導したいのか、徒歩なのか車なのかあるいは公共交通機関を使うのか、などです。相手の最寄り駅から自分の最寄り駅までの電車の乗り換えに限定したナビゲートというのもあり得ます。 そういう仕様を考慮して、探索規模がそれほど大きくなければ（例えば東京都内の電車による移動だけとか）自分で探索プログラムとそのためのデータをもって探索することも可能です。 が、一般的には規模が少し大きくなるとデータ量も探索処理も大変なことになります。ですので、自前でプログラムを持つのではなくて外部の探索サービスを利用するのが簡単です。 外部の探索サービスを利用する場合、公共交通機関の乗り換え順くらいならば文字でも表現できるので表示は難しくないですが、車や徒歩での移動経路を表示したいとなるとやはり地図を表示してその上に経路を描きたくなります。これはこれでまた違う（地図表示という）アプリケーションになります。 一般的に探索した経路は緯度経度の列で表現されたりしますので、それをそのまま地図上に表示しようと思ったら地図は（全部の交差点が直行しているような）簡略化されたものではなくてリアルな（普通の）地図が必要です。世の中には無償で使える地図データもありますけれど、市販の地図画像とか書店等で売っている地図帳の画像を取り込んだりすると権利関係で問題があるので使えません。 ということを鑑みると、結局経路探索から地図上への表示まで外部サイトに頼るのが簡単です。ただ企業など営利が絡んだところで使う場合にはそのサイトに話を通しておいた方がよいと思います。その場合、利用規約上制限があるサービスもあります。 経路探索を提供しているところはYahoo!とかGoogleとかを始め、経路探索の会社や地図系の会社とか色々あります。Googleを例に取るとこんな感じで試せます。 Googleマップの経路探索にアクセスしてみます。（http://maps.google.co.jp/maps?f=d） 出発・到着地を仮に入れて検索してみます。経度緯度での入力は35.6789,139.8765みたいに緯度経度をカンマ区切りで入力します。 検索結果の地図右上にある「このページのリンク」を見るとどういうパラメータでアクセスすればこの経路ページを表示できるかがわかります。 そのURLを別ウィンドウで表示させたりすればよいかと思います。 なお、Google MapやTransitは携帯電話からも使えます。自分のサイトと組み合わせたときの使い勝手はちょっと工夫しないといけないかもしれないですが。 GoogleマップのAPIを使うともうちょっとスマートにアクセスできる（自分のウィンドウの中に表示するとか）ので調べてみてください。Google TransitのAPIってのもあるみたいですが、こちらは見てみたことないのでわかりません。
if文内で上位のキーを不意に作成してしまうのが原因ですね。 上位のキーがあるときに下位のキーを調べるという書き方にすれば解決できますよ。 if ( exists $family{'uncle'} && exists $family{'uncle'}->{age} ) { }
少しきれいに、かつ、具体的に書き直してみました。 これでどうでしょう？ my %header = ( '', split( /^([\w\-]*)\: /m, $header ) ); chomp %header; $sub = jcode( $header{'Subject'} )->mime_decode()->sjis;
直接の質問への回答とは異なりますがご容赦ください。 私の場合は、ローカル環境ではメールは送信させず、ファイル（宛先のメールアドレス.txt）として保存するように分岐させています。
ソースに表示されるということは、 正しく、print する場所に書いていると思うので、 原因は、httpd の設定にあると思います。 たとえば、Apache の標準設定では、拡張子が .shtml の時のみ、 SSI を実行されるので、設定に、.cgi を追加する必要があります。（非推奨） また、 htaccess が使えない場合は、設定をするために、サーバ管理者である必要があるので、あまり現実的では無いかもしれません。 require での失敗の件ですが、 正しく“真”が返っているか確認してみて下さい。 require で読み込まれるスクリプトは、最後に必ず“偽”以外の値を返しておく必要があります。 簡単なスクリプトであれば、最後に 1; を追加するだけで良いです。 また、require の代わりに、do を使うことも可能だと思います。 この場合、真を返さなくてもエラーは出ず、 スクリプトとして実行されるので、SSI に似た挙動と呼べるのかもしれません。 print do '../menu/menu.cgi';
>プログラミング[その他]のカテゴリに書き込んだところ http://okwave.jp/qa4029332.html 上記リンク先で触れられていない手段については，「"www::mechanize"　Perl　ログイン」というキーワードでGoogle検索すればイメージをつかむことができるでしょう。ということで一応，技術的な回答です。 私が質問者の立場なら，そんな攻撃プログラムを実行して警察沙汰になるような真似はしません。ANo.1・ANo.2は正しいと私も思います。
「コーディングの全て」をこちらの環境でためすと　"%7s"でも"%8s"でもそれぞれ正確に動作しました。 以下"%7s"での出力例のコピペです。 --------------------------------------------------- 借入金一覧表 戻る 氏名,事由,異動日,借入額,限度残 47213,1,20080503, 3000, 50000 38221,5,20080508, 25000, 100000 18994,1,20080506, 2700, 385000 38221,5,20080508, 25000, 100000 18994,1,20080506, 2700, 385000 --------------------------------------------------- プログラム以外に原因があるかもしれませんね。。。 ちなみに、こちらの動作環境は、WinXP IE7 ActivePerl5.8.7でした。 しかし、経験上開発環境としては、多少の差異はないはずです。
ファイルを開く/書き込むの部分は省略しますね。 下記のように正規表現で置換すれば実現できます。 my $i; while (<DATA>) { $_ =~ s/numberCol" vAlign="top">(\d+)/'numberCol" vAlign="top">'.(++$i)/e; }
ソースをちょろっと読んだ限りでは, 配列の要素として 21億個以上は使えるはずです. まあ, そんなに配列をとろうとしたら必要なメモリが多すぎて破綻するような気はしますが.
writelog 内に問題があるのでは？ 完了画面が出ないっていうのは、 具体的にはどうなるのでしょうか？ Script Error ですか？
ちょっとたいへんですがSocketを使う手も有ります。 ## ---------------------------------------------------------------------------------ここから use strict; use Socket; ## この配列にページを格納 my @aBUFFER; ## URLをセット $arg = 'http://www.hoge.com/index_hoge.html'; # デフォルトホストの設定 my $host = ''; my $path = ''; my $port = getservbyname('http', 'tcp');## ポートは基本的に省略されるので # URL解析処理 $arg =~ m!(http:)?(//)?([^:/]*)?(:([0-9]+)?)?(/.*)?!; if ($3) {$host = $3;} if ($5) {$port = $5;} if ($6) {$path = $6;} ## 元のデータをデバッグ用に残す my $con_host = $host; my $con_port = $port; my $url = $path; # ソケットの生成 $ip = inet_aton($con_host) || die "host($con_host) not found.\n"; $sockaddr = pack_sockaddr_in($con_port, $ip); socket(SOCKET, PF_INET, SOCK_STREAM, 0) || die "socket error.\n"; # ソケットの接続 connect(SOCKET, $sockaddr) || die "connect $con_host $con_port error.\n"; autoflush SOCKET (1); # HTTP要求を送信 if ($http eq '1.1') { print SOCKET "GET $url HTTP/1.1\n"; print SOCKET "Host: $host\n"; print SOCKET "Connection: close\n\n"; } else { print SOCKET "GET $url HTTP/1.0\n"; print SOCKET "Host: $host\n"; print SOCKET "Connection: close\n\n"; } # HTTP応答を受信 while (chomp($buf=<SOCKET>)) { push(@aBUFFER,$buf); } # 終了処理 close(SOCKET); ## ---------------------------------------------------------------------------------ここまで 最終的にHTMLの行ごとに配列@aBUFFERに格納されます。 また、応用すれば他のプロトコルもカバーできます。 プロトコルの学習にどうぞ。
私がデバッグしたいる間にatom_seedさんから適切な回答が付きましたね。 ＃普段phpばかり書いているのでPerlは仕事が遅い（汗 ちなみに「perl タブ区切り」で検索すると、そこそこ有用なサイトがHitします。「タブ区切りで切り出し」くらいはコピペ出来そうでした。spliceはお手元に文法リファレンス（もしくはリファレンスサイトのURL）がないと思いつかないかもしれませんが、無骨でよければforeachで回してカウンタが2以外のものを使って出力用のデータを作っても間に合います。 お手元にリファレンスをお持ちでなければ、リファレンスになりそうなサイトのURLをBookmarkしておいてください。 　　http://www.site-cooler.com/kwl/perl/ 　　http://perl.misty.ne.jp/
ハッシュ化して処理をするとやりやすくなりますよ # 一旦各行をハッシュ化して、配列に入れなおします my @data; foreach my $line (@lines) { my %hash; @hash{ '名前', '所持金', '限度額', '最終異動日' } = split( /<>/, $line ); push( @data, \%hash ); } # あ：限度額の降順の場合 @data = sort { $b->{'限度額'} <=> $a->{'限度額'} } @data; # い：最終異動日の昇順の場合 @data = sort { $a->{'最終異動日'} cmp $b->{'最終異動日'} } @data; # 並べ替えたものを出力 foreach my $data (@data) { my %hash = %{$data}; print join( "<>", @hash{ '名前', '所持金', '限度額', '最終異動日' } ), "\n"; }
http://www.rfs.jp/sb/perl/05/sprintf.html $a=sprintf("%03d",3); print $a,"\n";
コンパクトにまとめてみました。 my @load_data = ( 'a', 'h', 2, 26, 'f' ); @hash{ a .. z } = ( 1 .. 26 ); # 逆引きデータを作成 @hash{ values %hash } = keys %hash; # 双方向変換 my @convert_data = map { $hash{$_} } @load_data;
#!/usr/bin/perl use strict; use warnings; use POSIX qw/ceil/; while (<DATA>) { chomp; print $_, " -> ", ceil($_), "\n"; } my $v = 2**32+0.002; print $v, " -> ", ceil($v), "\n"; __END__ 123.0 123.0000001 124 -123.5 実行結果: 123.0 -> 123 123.0000001 -> 124 124 -> 124 -123.5 -> -123 4294967296.002 -> 4294967297 POSIXモジュールは標準添付なのでインストールする必要はありません。
無理に one-liner にすると perl -pe 'BEGIN { @cvt{"a" .. "z", 1 .. 26} = (1 .. 26, "a" .. "z"); } s/[[:alnum:]]+/$cvt{$&}/eg;' とかできそうだけど... う～ん, 意味不明.
私の環境ではマッチしましたよ． $str="今日のおかずは味噌汁／煮付け"; if($str=~m/／/){ print "マッチしました\n"; } まずは，文字コードをeucにして保存しなおしたあと，もう一度実行してみて動くかどうか試してください．それでもうまくいかない場合は，どの文字列でマッチングしたら失敗したのか具体的に教えてください
原因はわかりませんが、CPAN の作業用ディレクトリである /Users/kondoujuya/.cpan を消してみてはいかがでしょうか。
> for ($i = 0; $i < 7; $i++) { > @list = pop(@fields); > return @list; > } @list = pop(@fields); のようにすると、ループのたびに新たな代入となって、逆順のリス トとはなりません。return @list; は、呼び出し元がないのでエラーになってしまいます。 ３項の for を使っていますが、ブロックの中で $i を使ってないので意味がないように思 います。元のコードをなるべく生かして書き直してみましたので、参考にしてみてください。 while ($array = <DATA>) { chomp $array; @fields = split /,/, $array; @list = (); while (@fields) { push @list, pop(@fields); } print join(',', @list), "\n"; } __DATA__ a,b,c,d,e,f,g 1,2,3,4,5,6,7
ひょっとしてひょっとして、 qw(a b c d e f) なリストを連結して f:e:d:c:b:a のような結果を求めてたりします? もしそうなら > $a = join($aaa,@a); $new = join $aaa, reverse(@a); とか。
前回は枝刈りを省略したコードでしたので、枝刈りを組み込んだものを紹介しておきます。 組み込んである枝刈りは、次のとおりです。 1) 0 は R または T 2) N は 9 ではない 3) N + C は 9 以下 4) M は N + C または N + C + 1 のどちらか 5) １の位の和の末尾は N 6) 桁上がりを含む 10 の位の和の末尾は O use strict; my ($add_alp, $ans_alp) = split /\+-+\+/, join '+', map { /([-\w]+)/; $1 } <DATA>; my %alp_idx = (N => 0, C => 1, M => 2, A => 3, O => 4, R => 5, S => 6, T => 7, I => 8, D => 9); my (@work, $up); perm(0 .. 9); sub perm { my @list = @_; foreach my $n (@list) { next if !$n and (@work <= 4 or @work == 6 or @work >= 8); next if !@work and $n == 9; last if @work == 1 and $work[0] + $n > 9; next if @work == 2 and !($work[0] + $work[1] == $n or $work[0] + $work[1] == $n - 1); if (@work == 7) { my $total = $work[4] * 2 + $work[0] * 5 + $n * 2 + $work[3] + $work[1] + $work[6] + $work[5]; next if substr($total, -1, 1) != $work[0]; $up = substr $total, 0, length($total) - 1; } if (@work == 8) { my $total = $work[7] * 2 + $work[4] * 5 + $work[1] * 2 + $n * 2 + $work[3] + $work[6] + $up; next if substr($total, -1, 1) != $work[4]; } push @work, $n; if (@work == 10) { my $add_num = join('', map { /[A-T]/ ? $work[$alp_idx{$_}] : $_ } split(//, $add_alp)); my $ans_num = join('', map { $work[$alp_idx{$_}] } split(//, $ans_alp)); if ($ans_num == eval($add_num)) { print join(' ', sort keys %alp_idx), "\n"; print "$work[$alp_idx{$_}] " foreach sort keys %alp_idx; print "\n\n"; } } else { perm(grep !/$n/, @list); } pop @work; } } __DATA__ INTO ONTO CANON INTACT AMMONIA OMISSION DIACRITIC STATISTICS ASSOCIATION ANTIMACASSAR CONTORTIONIST NONDISCRIMINATION + CONTRADISTINCTION ------------------- MISADMINISTRATION kabaokaba さんへ いつどこで見たかは思い出せないのですが、Higher-Order に関して興味深いコードがあります。 0000000000 から 9876543210 までの特殊なインクリメントを、for ループで生成するものです。 参考にしていただけましたら、幸いです。 use strict; my @alpha = 'a' .. 'j'; my @order = (0) x @alpha; $order[-2] = -1; my $quit = join '', reverse @alpha; my @perm; while (join('', @alpha) ne $quit) { for (my $limit = 1, my $i = $#order - 1; $i >= 0; $limit++, $i--) { if ($order[$i] < $limit) { $order[$i]++; @alpha[$i .. $#alpha] = sort @alpha[$i .. $#alpha]; push @alpha, splice(@alpha, $i + $_, 1) foreach @order[$i .. $#order]; push @perm, join('', @alpha); last; } else { $order[$i] = 0; } } }
簡単に手順だけ紹介します。 a.dat というログデータだったとします。 ・新しいログをb.datへ書き込み ・a.datの中身をb.datへ追記 ・b.datをa.datへリネーム
できるかできないかという話ならできる。 >そのファイルのリストを出力して、クリックすると表示させたい GUIプログラムにしたいってことですか? >私ができることはテキストファイルの中身を表示するくらいです 丸投げと大差ないレベルの質問で正直助言しようにも書くことが多すぎて無理。
もしかしての話ですが、 $random_x = int( rand(999) ) + 1; <b> ${random_x} と半角で入力</b> if ($FORM{'guard'} ne $random_x){&er_("　エラーです。　");} ――みたいに記述してて、 CGI起動(rand)→ブラウザ受信→ユーザ入力→ブラウザ送信→CGI起動(rand)&POSTデータ処理 ――と処理されてるとか。もしそうなら、送信データを処理するタイミングでは値が変わってるだろう（偶然同じになる可能性もある。）から、ダメじゃないかと。
何度もすいません 前のリストの配列によるサンプル出力の訂正 print $yomi.$space.$title."<BR>"; です。 あわててコピペしてしまいました。 すいません。
>$second = $temp[int rand(scalar @temp) + 1]; うわ，まちがった(^^;; $second = $temp[int rand(scalar @temp)]; ですね．
To フィールドを付けなきゃいいのに.
「ＨＴＭＬ内にＰｅｒｌの処理を組み込むには、どうすればいいのでしょうか？」 逆でしょ? Perlの中にHTMLを埋め込んでいるのですから、forループで回したいときはヒアドキュメントをいったん止めればよいかと。
で、どこがわかりませんか？ RSSの仕様がわかっているのならば、元データをRSSの仕様通りにCGI側で吐き出してやればいいだけです。
#1でのTacosanさんの回答の1です。 つまり、 @a = grep(/マッチパターン/,@a); これは @aの内容を列挙→ grepに掛ける→条件に合うものだけのリストを作成→作成したリストを代入。 となります。 grepに掛かる前の@aの内容は、代入の際に「丸ごと」破棄されます。 perly.y /* Binary operators between terms */ termbinop:term ASSIGNOP term /* $x = $y */ { $$ = newASSIGNOP(OPf_STACKED, $1, IVAL($2), $3); TOKEN_GETMAD($2,$$,'o'); } op.c OP * Perl_newASSIGNOP(pTHX_ I32 flags, OP *left, I32 optype, OP *right) { dVAR; OP *o; (略 if (is_list_assignment(left)) { static const char no_list_state[] = "Initialization of state variables" という具合なので、代入の左右両辺が同じ変数かどうかのチェックは多分やってません。
もう回答がいくらか出ているので細かいことは言いませんが、以下のことも確認してみてください。 ファイルから読み取ったデータには、各行の最後に「\n」（改行）が入っていたりします。 （フォームの回答「aaa」とファイル内の解答「aaa\n」はeqにはなりません） if文のところをこんな風にいじってみてください if (param('answer') eq $ans){ 　　↓ if (param('answer')."\n" eq $ans){ もしくは if (param('answer') eq chop($ans)){ 改行コードが\nであること前提の話ですが以上です。
他の方も書かれているようにSuEXECでは無いとして FTPなど(或いは読むための専用CGI)だけで読めてwebからは読めなくするには １． #2さんの書かれた公開ディレクトリ以外の場所に保存する ２.　file名の頭に . をつけると通常はアクセス出来ません ３． fileを暗号化する http://www.sea-bird.org/doc/Solaris8/Perl_1.html 例えば ユーザー：tarou　other：apache で質問のような形でアップロードされたFileは SuEXECの場合 所有者:tarou パーミッション:600　ですが SuEXECでない場合 所有者：apache パーミッション:600 となり 　FTPなどでユーザーtarouでログインして見た場合 　　パーミッションが逆に 006 になってしまうと思います。 またother権限で動いているCGIによってfileを 所有者：tarou にすることも出来ないはずです
こんちは $data = q{FNAME,LNAME,"12,400",0,0,0,"2,400","3,800"}; @a = map {s/[",]//g;$_} $data =~ /(\"[^"]+\"|[^,]+)(?:,|$)/g; print join(" - ", @a);
IO::Tee を使うとか。 EXAMPLE use IO::Tee; use IO::File; my $tee = new IO::Tee(\*STDOUT, new IO::File(">tt1.out"), ">tt2.out"); print join(' ', $tee->handles), "\n"; for (1..10) { print $tee $_, "\n" } for (1..10) { $tee->print($_, "\n") } $tee->flush; 標準モジュールではないのでインストールしないといけませんが。
>LinuxのOSにより、 正しく表示されるのはどういったもので、文字化けするのはどういったものですか? ディストロとか、使っているシェルとか、環境変数の設定状況とか。
else{ print header(-charset => 'Shift_JIS'); ##省略## print endform; { ↑else を閉じれていません。} として下さい。
CGIで書き出すヘッダ情報で「Location:」を使うといいと思います。 具体的には、 print "Content-type:text/html\n\n"; （これからHTMLファイルを出力し始めます、という意味） のようになっている所を削除してから、 ###ここから### if (param('answer') eq $ans){#答えがあっていれば print "Location: ｈttp://（CGIファイルまでのパスは略）/002.cgi\n\n";#ｈttp://～～に飛ばす }else{#不正解なら print "Content-type:text/html\n\n";#もう一度同じフォーム画面を表示 print "HTMLでフォームを出力"; } ###ここまで### としてみてください。 （以下のイメージで動作予定） 001.cgiのフォームに回答入力 　↓　　　　↑（不正解なら） 001.cgiに回答を渡し、判定 　↓（正解なら） 002.cgiにジャンプ なお、回答中の文章では「http」を自動リンク回避のため「ｈttp」と記述しています。 コピーするときは半角に直し忘れないでください。
０バイトダウンロードはファイル読み込みの権限がない場合に発生します。 FUTOMIのサーバアナライザなどであなたのWebサーバがブラウザ経由でどのユーザ権限でアクセスしているのかをチェックして権限を設定してください。 最低でも「644(rw-r--r--)」かなと思います。ただファイルの権限がそうでも、それより上のディレクトリに読み込み権限がなければたどりつけませんが・・・。 ご確認ください。
画面の最下部に All Download ってボタンがあります。 それを押下すると Language Distributions という見出しと、 Perl、Python、Tclのリンクが出ますので Perlを選択 (Get Current Release)。 それで AcitvePerlのダウンロードページに行きます。
もし、Macのメールソフトについてのご質問でしたら、Macのカテゴリ( デジタルライフ > Macintosh )でされた方が、回答をもらいやすいと思います。 Perl についてのご質問でしたら、スクリプトのサンプル（パスワードなどは適当に変えて）を載せるなどして、具体的に説明された方が回答をもらいやすいと思います。
> エラーメッセージはでないで、真っ白い画面がでます。 ウェブブラウザを変えて試しても同様ですか? その時にウェブブラウザでソース表示をさせてみましたか? Internet Explorer の場合は文字エンコードの選択がうまくいかない時や 構文エラーがあると真っ白い画面になることがあります。 (バージョンにもよりますが) > これは$FORM{'url'}のエンコードの問題なのでしょうか？ $FORM{'url'} が正常にとれているかどうかはこの変数をファイルに吐き 出してみたりしてはどうでしょうか? open(OUT,">check.txt"); print OUT $FORM{'url'};close(OUT); まともな URL ではない場合や Not Found や Forbidden などのエラーの 場合には $content になにも入らないと思われるので > print "Content-type: text/html\n\n$content"; この行で Use of uninitialized value in concatenation (.) or string などのエラーとなると思われます。 # 環境について何も書かれていないのでなんとも言えませんがサーバへ # root でログインできるのであれば tcpdump や ethereal や wireshark # (tethereal や tshark) 等で通信内容をキャプチャしてみても良いかも # しれません。
Windows や Linux については、上で回答されているようなので、 書籍を紹介してみます。 すでにご存じかもしれませんが。 『実践バイオインフォマティクス ゲノム研究のためのコンピュータスキル』 著者: Cynthia Gibas 出版社: オライリー・ジャパン 『バイオインフォマティクスのためのPerl入門』 著者: 水島 洋 出版社: オライリー・ジャパン 参考URL：http://www.kenkyuu.net/books-05.html
print "Location: 【URL】\n\n"; で、【URL】の場所に「移動」します。 これはあくまで「移動」なので、perlで途中まで書いて残りを別ファイルに、みたいな事にはなりません。 (CGIの仕組みからいってもそれは無理です。) HTMLをスクリプトから分離しようという考えは素晴らしいと思います。 それにはHTML::Templateが役に立つと思います。 http://perldoc.jp/docs/modules/HTML-Template-2.6 …
$ENV{'REMOTE_ADDR'} これでIPアドレスを判断できます。
ユーザーエージェントについて http://developers.softbankmobile.co.jp/dp/tool_d … その他技術資料 http://developers.softbankmobile.co.jp/dp/tool_d …
$A = 'aaa/bbb/ccc/ddd/eee/fff/ggg'; $A =~ s/(\w+\/){4}//g; print $A; # 結果eee/fff/ggg
>substrはバイトでカットするため、半角、全角混じり文字列の全角の真中を切ってしまうことが有ります。 というか。。。微妙な問題なのに Perlのバージョンとか種類を書かないのはなぜ？？ Perl5.6とPerl5.8でも違うだろうし， Perl4とかJperl4とか Perl5.00*と対応するJperlとか． ついでにいうと，localを使うのも意味不明だなあ． 推察するに相当古い環境ですか？ 少なくとも，Perl5.8.8 on Winでは use encoding "sjis"; print substr("aあいう",1, 2); で「あい」って出てきますよ．
お使いの環境をお書きになってないのでわかりませんが…… ※ Linux だと仮定します、的外れでしたらご容赦ください。 >「-man」の時に日本語が表示されず文字化けしてしまいます。 __END__ のすぐ下に =encoding などで文字コードを指定するとどうなりますか? また そのスクリプトを less で表示すると化けますか? 環境変数 LANG はどうなっていますか? # たぶんスクリプト内の日本語のエンコードと環境変数のエンコードとが異なっていると # 化けるのではないかと思われますが……
本文を読んでません。 > ●IPアドレス ※$ENV{'REMOTE_HOST'}) IPアドレスはREMOTE_ADDRです。 REMOTE_HOSTはサーバー負荷の軽減のため、使えないようにしているホスティングサービスもあります。（空文字列になります） うまくとれないじゃなくて、 何がどううまく取れないか、どんな文字列が取れることを期待してどんな文字列を取れたのか、 という質問の仕方にすれば、より有益な回答が得られると思います。
＃プラグインを使う・・というのはちょっと知らないのですが（汗 こんな感じでいいのでは？ 　　http://isoya.at.webry.info/200703/article_2.html あと、 >(1)Captcha画像作成(cgi/perl) >　↓ >(2)フォームページにCaptcha画像を表示（html） (1)に(2)まで含ませる方が効率いいのでは？まして >(4)エラー時にはデータを持ったまま(2)に戻る となると静的なhtmlでは無理なので、どのみちCGIからブラウザにフォームを返すことになりますよね？
確かに「を～」で始まったら意味不明ですけど$$は自分のプロセスIDなので、 (自分のプロセスID)を起動できなかった というのもやっぱり意味が通らないということでは同じだと思います。 execに失敗したというのならまだわからないでもないですが。
コマンドプロンプトでは \ と / を区別してますが, Windows 内部ではパスの区切としてどちらも使えます. MS-DOS のときからず～っとそうなんだけど, 意外と知られてない.
Perlで多用されているアプリとしては仕事柄サーバアプリと狭い世界が主になりご参考になるかどうかわかりませんが ・POP before SMTP -> サーバアプリです。メール送信者が所定時間内にPOPを利用したかどうかをチェックするアプリです。 ・SnortSnarf -> TCP/IPの監視ソフトSnortのはき出すログをホームページに変換して視覚化してくれるツール CGI以外で今のお仕事で実稼動させているのはざっと思いつくだけで ・アップされたCSVファイルを定期的に加工処理してDBに入れる ・入力文字列からQRコード画像をはき出す ・サーバ内にアップされたたくさんの未処理画像ファイルから定期的に縦横をそろえたりサムネイルを作ったりする ・DBデータの修復と定期バックアップ ・Webのはき出すログから集計に必要なログのみ抽出して定期的に保存 などなどです やってみると案外何でもできるものです。歴史が古いので悪く言えば「枯れた技術」です。 ぽっと出の開発言語(「出版社名」「宝石名」「コーヒー産地の島名」)なんかで顧客を人柱にした挙句、次の仕事に追われてアフターケアもろくにできないものを売りつけるよりは、もみにもまれた技術で安全確実に運用できるもの(←作る人しだいかな)を売るほうがよっぽど誠実かと思うのですが。 まあ、目先の新しいものにとびつく顧客も自業自得なので、そういう人にはそれなりのもので作ってあげるんですが・・・サポートがもうたいへんです。 余談： HP専用言語というのはCGIのことを指して言われていると思いますが、ご存知と思いますがCGIは別にどのような言語でも「標準入出力(STDIOってご存知ですよね)」さえ備わっていれば何でもOKなのです。 ですので、CでもPascalでもDelphi(OOP-Pascal)でもModula-2でもCGI用のアプリは出力時にHTTPヘッダを出力するだけで組めてしまうのです(実行にはWebサーバが処理できるよう設定する必要がありますが)。 実際、Delphiで作るCGIなんていう本も出版されています。(わたくしも二十ン年前TurboPascal3からのユーザでDelphiはまっ先に買いに走った口で触る機会は減りましたがDelphiファンです) Perlの強力な正規表現(呪文？)さえ駆使できるようになれば、開発効率が大変に良い言語なのです。 なんか回答するつもりがヒートアップして爺の愚痴みたいになっちゃいました。すいません。
cron環境の設定の問題だと思う 解決方法: ***.shのプログラムを作ってみてください。 cronの中に ***.sh　を設定してください
coralというのはこれですね（http://hmdt-web.net/coral/） perlをお使いのようなので、CGIモジュールでも使ってformのパラメータさえ取得できればあとはsystemコマンドで起動してやればできそうな気がします。 #!/usr/bin/perl use CGI; $coral = /[path]/[to]/coral; $q = new CGI; my $URL = $q->param('URL'); my $NAME = $q->param('name'); system("$coral -o $NAME $URL"); というスクリプトを作って、 http://your_host_name.com/coral.cgi?URL=www.appl … でアクセスすればよいのではないかと（未検証）。 書き出しディレクトリやコマンド自体のパーミッション（apacheの設定含む）には注意が必要です。 ※coralを使ったことがないのであてずっぽうです。
ファイルのタイムスタンプを変更します。 Linux なら、touch というコマンドがありますが、 Perl だけでも、utime という関数を使えば可能です。 Windows は確か、アクセス時刻の扱いは微妙だったような気がしますが、 最終変更時刻は問題なく変更できると思います。 参考URL：http://www.site-cooler.com/cgi-bin/kansuu.cgi?la …
ちなみに5.6でも$_は実体を共有してます． この手のことがあるので $_とか@_は値を変えないか 明示的にコピーですね
tr が使えます。 $kosuu = $koumoku =~ tr/-/-/; 以下ドキュメントから　(perlop) If the "/d" modifier is used, the REPLACEMENTLIST is always interpreted exactly as specified. Otherwise, if the REPLACEMENTLIST is shorter than the SEARCHLIST, the final character is replicated till it is long enough. If the REPLACEMENTLIST is empty, the SEARCHLIST is replicated. This latter is useful for counting characters in a class or for squashing character sequences in a class. Examples: $ARGV[1] =~ tr/A-Z/a-z/; # canonicalize to lower case $cnt = tr/*/*/; # count the stars in $_ $cnt = $sky =~ tr/*/*/; # count the stars in $sky $cnt = tr/0-9//; # count the digits in $_ どのバージョンからだったか覚えていませんが、この目的に使われることが 多いので、最適化されているはずです。
こんにちわ この「書き込んだ人のサイトURL」というはどうやってわかるのでしょうか？ このURLがわかるのであればCGIを修正することで可能と思います。 ただRSSリーダみたいなので、決まった手段でURLを特定するのって難しそうですねー。
こんな感じでしょうか？ $|=1; print "検索文字列? >"; chomp( $keyword = <STDIN> ); exit if ( $keyword eq '');
trashfunkさん bashと言うことなので、viなどのエディタを使用して、~/.bashrcを変更します。 $ vi ~/.bashrc として、 export PATH="naniyara/ActivePerl-5.10/bin:$PATH を追加します。
>だとすると今度は+>と+>>と+<の違いが良く分からないなぁ。 +> オープンしたときに、ファイルの長さを0にしてしまう +< オープンするがファイルを切り詰めることはしない ですね。 +>> はどうなんだろう。切り詰めないのかなあ? まず自分でファイルに書き出して、それを読み返したいなんてときは +> でいいですね。 ファイルの一部分だけ書き換えるなんてときは +< でしょう。 とはいうものの固定長で扱えない通常の行からなるデータを この形で扱えるとは考えない方がいいと思います。
>さて、なんでドキュメント見ないかというとsakusaker7さんのご想像どおりです。 >自分で調べるより誰かに聞いた方が手っ取り早いという私の怠慢です。お許しを！ perldoc ほげほげ とすればドキュメントが参照できるというのを知らない人が多いみたいなので そうなのかなあと思ってただけですがw 英語はちょっと…という場合でも、perldoc.jp あたりをみれば、 マニアックなモジュールでなければ結構日本語に訳されたものがありますよ。 > CGI.pmがデフォルトでXHTMLを出力する仕様になっているということは、 > 今後はHTMLでホームページ作りをするよりも、XHTMLを学習した方がよいということでしょうか。 XHTMLがわかればHTMLはそれよりもゆるい規則なので、まあXHTMLやっとけば無難だろう という気はします。ただ、XHTML 1.1だと厳しすぎるんじゃないの? という印象はありますがまあそれはさておき。 #HTML5が決まるとどうなるかはちとあれですが。
すみません、私には説明があまりわからないです^^; その自動遷移の機能を付けるHTMLファイルでは、どうやって引数を受け取るつもりなのですか？ 先頭画面からID・パスワードが渡ってるかどうか？を、HTMLファイル上で何を使ってどうやって調べているのですか？ ＞FORM{'～'}をつけることもできるのでしょうか？ これってHTMLファイル上なので文字列って言う意味ですよね？ meta refreshの引数のに関してはHTMLファイルに1行書き込むだけでテストできますのでやってみてください。
手動でインストールの意味がよくわかりませんが、 ppmとかCPANとかのパッケージマネージャを使わないでインストールするということなら、 アーカイブを解くと Makefile.PL というのがありますから、 Perl Makefile.PL make make test make install でインストールできます。 使っているPerlがActivePerl なら、makeはnmakeになります。 モジュールのインストールについてのメモ http://homepage3.nifty.com/hippo2000/perltips/mo … Cによるライブラリコードが含まれているモジュールだと、Cコンパイラが必要になります。 Net::Nslookup はそうではないようですが。
> コチラのサイトさまよりダウンロードをさせていただきましたアンケートCGIです。 # 最初からそのように仰って頂けたら、とても良かったのではないかと思います。 本来の動作の確認に配布されている「アンケート CGI」の設置をしてみました。 管理者がアンケートを開設すると、Yes/No の投票と一行程度のコメントが残せる もので、アンケートひとつについてしか投票は行えず、更に新しいアンケートを 追加すると今までのアンケートには投票もコメントも出来なくなるものでした。 これが元の動作で間違いないでしょうか? そして、あなたが改造なされたのが表示処理の箇所だけのみであればデータが上書きされ てしまうことはないと思われます。 # と、ここまで調べてやっとなんとなくわかりました。 結局、あなたがなさりたいことは「表示する時の番号の振り方が古いものと新しいものが 逆になってしまい気持ちが悪いから順序を変えたい」と仰っておられるのでしょうか? # スクリプトのコードの全てを確認していないので絶対とは言えませんけれど……。 POST メソッドの URL の部分に使っている $num 等は一切変えずに HTML の表示部分に 別の変数を使って投票や管理等の処理に影響が出ないようにすれば、可能ではないかと思わ れます。また、保存や読み出している箇所に一工夫するのも方法のひとつでしょう。 できれば、次回からは改造された部分を差分として提示されて、例えば「 682 行目の □□部分を○○に変更しました」というような感じにお書きになって頂けないでしょうか? # さすがに回答に CGI の設置と、ここに貼られたコードの差分まで調べて動作の確認 # は荷が重い……、という理由で他の方々からの回答は得られてないのかと思います。 # こんな余計な意見ばかり申し上げて申し訳ないのですが……。 # では、がんばってみてください。
※ これは perl というよりは CGI の話題かと思いますが……。 「信頼性」というのがどこまでの信頼性を求めているのかはわかりませんが、次のようなものかと思われます。 > ユーザーエージェントを取得する際には「$ENV{'HTTP_USER_AGENT'}」 クライアント側のソフトウェアが HTTP リクエストのヘッダに User-Agent: (ブラウザ名称など) として仕込むもので、クライアント側のソフトウェアによっては書き換えることも可能です。 > 「$ENV{'REMOTE_USER'}」でユーザー認証 サーバ側のソフトウェア(Apache など)が BASIC 認証などの認証処理が成功した場合に設定する値です。 サーバ側のソフトウェアの実装が確実であれば、この値はほぼ信頼しても良い値かと思われます。 > REMOTE_ADDRの信頼性 プロキシサーバを経由している場合はプロキシサーバの IP アドレスになります。 サーバ側のソケットから取得している値ですので「決まったリモートホストからしかアクセスさせない」 というようなものに用いるには、ほぼ信頼しても良いと思われます。
#1の例は質問者さんのスクリプトを最大限活かそうと思ってのものですので、 #2の方のコメントも踏まえつつお好きに改変してくださいませ ＞質問者様
質問にある条件だけならこんなのでも。 #!/usr/bin/perl use strict; use warnings; use Fatal qw(:void open close); my $isep = '&'; my $osep = ','; open my $fp1, '<', shift; open my $fp2, '<', shift; open my $fp3, '<', shift; while (1) { my $rec1 = <$fp1>; my $rec2 = <$fp2>; my $rec3 = <$fp3>; last if !$rec1 && !$rec2 && !$rec3; my @field1 = split $isep, $rec1 if $rec1; my @field2 = split $isep, $rec2 if $rec2; my @field3 = split $isep, $rec3 if $rec3; my @of; push @of, $rec1 ? $field1[2] : ''; push @of, $rec2 ? $field2[2] : ''; push @of, $rec3 ? $field3[2] : ''; print join($osep, @of), "\n"; } 実行結果: 222,bb,bnb 555,ee,bnb 888,hhh,bnb ,,bnb やっつけで書いたのでリファインの余地が大いにあります。
CTRL+D でも同じように編集を終えられると思う。 素直に、__END__ を打ち込むのが、流儀なのかも。
>$titleyouと同じ扱い方をしている$urlyouや$idyouも、同様に、HASH(0x856eaec)　の様な形で出力されると思うのですが、 > これらに関しては、求めている値（URLやID）が出力されます。 > この違いは何なのでしょうか？ これは元のXMLデータがどのようなフォーマットになっているのか、 また、それを XML::TreePP がどのように解析するかの問題でしょう。 ですから違いは何か、といわれても違うように扱われる何かがあるんでしょうねえとしか。 > -type:#text > この１行のみが表示されました。 ということは、 $titleyou=$hash->{title}; $hash->{title} からたどれるハッシュには '-type' と '#text' という 二つのキーがあるということですね。 '#text'の方に本体があるっぽいので、 $titleyou = $hash->{title}->{#text}; とすればタイトルの文章が取れそうな気がします。 '-type' の方は何かの説明でも入るんですかねえ。 こっちも $hash->{title}->{-type}; で内容が取れるはずなんで、一応チェックしてみてください。
------------------------------------------------------------- my @results; my $count; if ($sth->rows == 0) { print "<font color=red>該当するデータはありません</font>"; }else{ print "<font color = red><b>".$sth->rows."件見つかりました！</b></font><br>"; } while(@results = $sth->fetchrow) { print @results, "\n<P>"; } ------------------------------------------------------------- $sth->rows で件数が取得できますので、最初に出力してしまえば問題はなくなるのではないでしょうか。 while(@results = $sth->fetchrow) はデータ無しの場合は回らないので問題ないかと思います。
おそらく規格書のような形でのきちんと明文化されたものはないと思います。 その上で、 ドキュメント(perlguts.pod)とソース(pp.c, av.c)を見た感じでは、メジャーバージョンが同じならおそらく 一貫した動作になると思われますし、5.6以降とか言う形でも 矛盾した動作はないと思います。 それ以前は確かめるのも大変なのでパス。 Perlの参照は、Cのポインタとは違うものです。ですから $p = \$list[1]; print("$$p\n"); splice(@list, 1, 0, 'x'); print("$$p\n"); # 'b' が表示される # $list[2] を参照 ($list[1] ではない) ここでの $p は $list[1]のアドレスを抱えているわけではありません。 実体そのものを指し示しています。 ですから、spliceによって配列内で移動があったとしても 指している実体が変わることはありません。 ある意味、@list は構造体へのポインタが並んでいるものと とらえればいいと思います。 削除の方に関しても同様です。 そして、ある変数の実体をリファレンスによって共用しているとき、 指されている実体の方で複数箇所から参照されているという情報をもっています(リファレンスカウント)。 どこからも指し示されなくなって初めて実体が解放されます。 したがって >上書きされることはないのでしょうか? このような心配は無用でしょう。
>この場合はもうどうしょうもないのでしょうか？ jcode.pl を使う限りでは。 UTF-8も扱うことのできるJcode.pmを使うとか手段はありますが、 細大漏らさず説明を書くには文字数が足りません。 あるいはgmail側の設定の Use default text encoding for outgoing messages Use Unicode (UTF-8) encoding for outgoing messages というメッセージの符号化に関する選択で上の default text encoding を選択するとか。 こっちは自信ないですけど。
#3です。 試していなかったので、ちょっと確認してみました。 ファイルを開くところでディレクトリを指定していなかったのでファイルが開けずに書き込まれない状態になっていたようです。 ですので、ディレクトリの指定を追加してください。 $dir = "A"; open(OUT , "> ex.txt"); opendir(DIR , $dir); while ($file = readdir(DIR)) { open(IN , "$dir/$file"); print OUT while (<IN>); close(IN); } closedir(DIR); close(OUT);
use と requireを同時に使ったのが理由ではありません。 #1の方の回答にある通り、use strict; をはずせばこのエラーは なくなると思いますが、 use strict; use DBI; require 'cgi-lib.pl'; require 'jcode.pl'; なんでCGI.pmとかJcode.pm を使わないのでしょう? これらを使えばuse strict していても問題ないはずです。 あとは our $in; our $parameter; our $name; を先頭付近に追加してもいけるかな?
たぶん if ($line =~ /\<product/){ $line =~ /path=\".*\"/;#path取得 $1; } ここで$1に何か入っていると思っていて、さらに if($data[0] == $1){#取得したパスとdata.txtとってきた値を比較 ここでそれを参照しているつもりなんだろうけど、それじゃだめです。 まず$1とか$2とかで取り出すには、 $line =~ /path=(".*")/; のように、キャプチャのためのカッコを書かないといけません。 つぎに、仮にここでキャプチャしていたとしても if ($line =~ /\<\/product\>/) { こことか $data[0] =~ s/\//_/g; ここで正規表現を使った操作をしてしまっているから、ぶっ壊されます。 $<*digits*> Contains the subpattern from the corresponding set of capturing parentheses from the last pattern match, not counting patterns matched in nested blocks that have been exited already. (Mnemonic: like \digits.) These variables are all read-only and dynamically scoped to the current BLOCK. データファイルの読み込みは一回だけやれば十分だと思うけど もう寝るので指摘だけ :)
参考URLをご覧になってみて下さい。 再接続しなおすことのコストを考えると、最初に接続・最後に切断が良いようです。 参考URL：http://homepage3.nifty.com/hippo2000/perltips/db …
>なぜがプログラムに書いていないのに 書いたとおりにしか動きません。どういうスクリプトなのか全然書かれていませんが、ブラウザにhtmlを返すんですよね？どのあたりに「0」が表示されますか？
>配列の検索はできないのですね。。。 ある配列で、ある条件を満たす(満たさない)要素だけ取り出したい/取り除きたいということなら grep という関数が使えますよ。 >if (@list =~ /test/) { #行にtestという文字列があるぎょうだけ書き出し test というのが含まれるものだけ残すというのであれば、 @filterd = grep {/test/} @list; という感じです。 一度にフィルタリングしてしまうか、1行1行チェックしながら 出力するかどうかはまあ好みの問題ですのでお好きに。 #細かいこというとメモリの使用量とかありますけどね。
もしかすると ANo.2 の方のご指摘で動作しているのかも知れないですが > サーバーで指定されたパスを入力しているので > perlのパスは間違ってないと思います > パーミッションの設定も７５５と指定されており > そうしているので、間違ってないはずです > txtファイルは６４４と指定されてるので > そうしているのですがなぜかエラーが出てしまいます・・ となると、他に考えられるのは FTP での転送モードでしょうか? Windows の改行コードは CR(0x0d)+LF(0x0a) UNIX 系の改行コードは LF(0x0a) UNIX 系のサーバだと改行コードに CR が入っていると先頭部分の処理用 プログラムの指定部分で /usr/local/bin/perl: bad interpreter: No such file or directory というエラーが発生しているのではないでしょうか? それは CR という改行コードも文字列の「^M」として扱い /usr/local/bin/perl^M と解釈される訳で、「/usr/local/bin/perl」が見つからないということに なると思われます。 FTP 転送にどんなものを使われているかの記述がないので細かいことは 言えませんが、ASCII(アスキー)、BINARY(バイナリ)とかの転送モードが 異なっているのではないでしょうか?
引数を一度 split して文字に分解して, 文字ごとに処理していけばいい (もちろん最後に join する) んじゃないかなぁ? 例えば sub magical_increment { my @inputs = reverse split //, $_[0]; my $flag = 0; for my $ch (@inputs) { if ($ch =~ /[0-8A-Ya-y]/) { $ch++; $flag = 1; last; } elsif ($ch == '9') { $ch = 'A'; $flag = 1; last; } elsif ($ch == 'Z') { $ch = 'a'; $flag = 1; last; } else { $ch = '0'; } } push @inputs, '1' unless $flag; join '', reverse @inputs; でできるかなぁ? もうちょっと賢くできるけど....
> set path=%path%自分のpath変数値;C:自分のttftinkerのある場所 ここは、 set path=%path%;C:自分のttftinkerのある場所 の書き間違いと思います(%path% は「自分のpath変数値」を示します)。 状況を詳細に書かれているのですが、出た問題について何も書かれていま せんので、実のあるアドバイスは難しいと思います。 どのステップでどんな問題が出たのかを、出たエラーメッセージそのまま 書かれるとよいと思います。
一応これで動くかな？？ 感じだけ掴み取ってください。動作テストしてないので。 $b_dir = "back_dir/";#バックアップを置いておくディレクトリ $n_dir = "new_dir/";#通常使用のディレクトリ $new_line = "追加したい項目"; opendir(DIR, $n_dir); while($file = readdir(DIR)){ $nfile="$n_dir$file";# 一応わかりやすいように。。 $bfile="$b_dir$file"; #### ## まずはファイルテスト if (-T $nfile) {# テキストファイルかどうかチェック。　$n_dirにログファイルしか置かないのであれば、-Tじゃなくて-fでもいいかも。 ##### ## 読込み open(IN, $nfile); @list = <IN>; close(IN); ##### ## バックアップ出力 open(DB,">$bfile"); print DB @list; close(DB); ##### ## NEWライン出力 push(@list, $new_line);#新しいライン挿入 open(IN,">$nfile");#いよいよ出力 print IN @list; close(IN); } else{next;}#ファイルテストに失敗したら、次いってみよ～。 } closedir(DIR); 通常使用のフォルダから読み取り、それはバックアップとして$bfileに書き出します。 そこに新しい項目を追加（push)して、通常使用のフォルダに書き出します。 あってる？
正規表現でいくなら seq =~ s/^(.{3})/$1-/; ですね. なんで .{2}(.) にしたのかが理解できん.
ここに自作のtimelocal関数が乗っています。 http://www3.wind.ne.jp/habe/hakoniwa/tips/tips_1 …
# cpan cpan> install LWP::UserAgent でインストールできませんか？
試してみましたが，すべての変数が送信されています。後述のCGIスクリプト(Perl)によりPOST送信されたHTTPリクエストのボディ部を捕獲したのがこちら。（↓改行なしの一行です） ---------------------------------------- S1-2=%24%24selectdata%5B0%5D%5B7%5D&S1-3=%24%24selectdata%5B0%5D%5B8%5D&S1-4=%24%24selectdata%5B0%5D%5B9%5D&S1-5=%24%24selectdata%5B0%5D%5B10%5D&S1-6=%24%24selectdata%5B0%5D%5B11%5D&S1-7=%24%24selectdata%5B0%5D%5B12%5D&S1-8=%24%24selectdata%5B0%5D%5B13%5D&S1-9=%24%24selectdata%5B0%5D%5B13%5D&S1-13=%24%24selectdata%5B0%5D%5B18%5D&S1-14=%24%24selectdata%5B0%5D%5B19%5D&S1-15=%24%24selectdata%5B0%5D%5B19%5D&button=%8DX%90V&no=%24%24selectdata%5B0%5D%5B0%5D ---------------------------------------- （'$$selectdata[0][7]'などの文字列をそのまま渡したので，記号が'%24%24selectdata%5B0%5D%5B7%5D'とエスケープされていますけれど） スクリプトはこちら。 ---------------------------------------- print <<'HERE_DOCUMENT'; Content-type: text/html <html> <body> <H5>【障害対応情報項目】</H5> <FORM ACTION="serch_e-001.cgi" METHOD="POST"> <INPUT TYPE="text" NAME="S1-2" VALUE="$$selectdata[0][7]" SIZE=30> <INPUT TYPE="text" NAME="S1-3" VALUE="$$selectdata[0][8]" SIZE=30> <INPUT TYPE="text" NAME="S1-4" VALUE="$$selectdata[0][9]" SIZE=30> <INPUT TYPE="text" NAME="S1-5" VALUE="$$selectdata[0][10]" SIZE=30> <INPUT TYPE="text" NAME="S1-6" VALUE="$$selectdata[0][11]" SIZE=30> <INPUT TYPE="text" NAME="S1-7" VALUE="$$selectdata[0][12]" SIZE=30> <INPUT TYPE="text" NAME="S1-8" VALUE="$$selectdata[0][13]" SIZE=30> <INPUT TYPE="text" NAME="S1-9" VALUE="$$selectdata[0][13]" SIZE=30> <INPUT TYPE="text" NAME="S1-13" VALUE="$$selectdata[0][18]" SIZE=30> <INPUT TYPE="text" NAME="S1-14" VALUE="$$selectdata[0][19]" SIZE=30> <INPUT TYPE="text" NAME="S1-15" VALUE="$$selectdata[0][19]" SIZE=30> <INPUT TYPE="submit" NAME="button" VALUE="新規検索"> <INPUT TYPE="submit" NAME="button" VALUE="更新"> <INPUT TYPE="hidden" NAME="no" VALUE="$$selectdata[0][0]"> </FORM> </body> </html> HERE_DOCUMENT ----------------------------------------
そのような要件を実現するための仕組みが"OpenID"です。 参考URL：http://openid.net/
当たり前のことの確認ですが。 Webブラウザの「ソースコード(HTML)の表示」機能を用いて，Perlが出力したHTML文字列を表示して目で確認してみたところ， <img src="http://d.hatena.ne.jp/" target="_blank">http://thumbs.bookmacro.com/w/80/h/60/u/http://d … " border=0> のように，変数 $siteurl='http://d.hatena.ne.jp/ ' がちゃんと文字列に展開されていることについては大丈夫なのですよね。 大丈夫であるなら，$siteurl に格納された具体的な文字列の例を知りたい気がします。
Windowsネットワークにおいてアドレスやホスト名でファイルアクセスする時は、'\\ IPアドレス | ホスト名 \'のように、先頭に'\'を２つ付与します。 $DIRBASEは、 $DIRBASE = '\\@@@.@@@.@@@.@@@\test\'; もしくは $DIRBASE = "\\\\@@@.@@@.@@@.@@@\\test\\"; とすべきです。 （こう直したとしても別のエラーが発生する可能性がありますが）
"(ダブルクオート)内ではリスト値(@foo)も展開されますが、そのリスト値の区切り文字を定義する特殊変数で、デフォルトはスペースだそうです。 参考URL：http://www.tohoho-web.com/wwwperl1.htm#Tokushu
handler_inputサブルーチンの中で、 　$_[HEAP]->{tail_wheel} = POE::Wheel::FollowTail->new( 　　Filename => $_[ARG0], 　　InputEvent => 'handler_input', 　); とすれば、FollowTailが拾ってきた文字列に応じて、読み込み対象のファイルを変更できるはずです。 (ネストを表現するため、上記ソースには全角スペースが入っています。) ここから以下、蛇足。 グローバル変数$fileは、my宣言したほうが良いです。 あと、testサブルーチンの最後でexitしてますので、この場合whileは意味をなさないですね。 それから、POE::Kernel->_stopが叩かれない限り、その先へは進みませんので、やはりwhileループ自体不要です。直接mainで&test($file)として問題ないです。 # つい、気になったので。失礼しました。
こんちには ファイル全体を連結して文字列をつくり 置換してはどうでしょう local($/) = undef; $line = <IN>; で <line_a>: aaaaaa\n<line_b>: BBBBBB\n ↓ <line_a>: AAAAAA\n<line_b>: BBBBBB\n と置換する
正規表現を文字列で与えることはもちろん可能ですが, 「aaa, bbb, ccc を全て含む」というのは (書けないことはないけど面倒なので) やめた方がいいと思います. 素直に && でつなぐ (あるいはもっとひねる) 方が安全です. ひねった方向でいくと, 例えば $ARGV[1] が "aaa/bbb/ccc" だとして my @patterns = map { qr/$_/ } split(/\//, $ARGV[1]); open(FL, $ARGV[0]); while (my $line = <FL>) { print $line unless grep { $line !~ $_ } @patterns; } close(FL); でいける... はずです. 試してないけど.
foreach my $value1 (@list1){ if($_ =~ /$value1/ ){ do something} elsif {foreach my $value2 (@list2){ if($_ =~ /$value1/ ){ do something}} 上のコードは、@list1 の最初の要素が偽の場合に制御が elsif に渡るので うまくいきません。また、elsif では丸括弧で囲んだ条件を指定する必要が あります。質問のようなケースでは、grep を使うのが簡単だと思います。 my $str = $_; # grep が独自の $_ を使うため if (grep /$str/, @list1) { do something; } elsif (grep /$str/, @list2) { do something; } elsif (grep /$str/, @list3) { .......
なんとなく別解。 require 5.008; use strict; my %Convert = ( # '(.+) \\((.+)\\)', '$2 ($1)' # ,'(.+)\\.csv (.+)\\.dat', '$2.csv $1.dat' '(.+) \\((.+)\\)', '%2$s (%1$s)' ,'(.+)\\.csv (.+)\\.dat', '%2$s.csv %1$s.dat' ); while(<DATA>){ foreach my $key ( keys %Convert ){ #s/$key/$Convert{$key}/gi; s/$key/sprintf $Convert{$key}, $1, $2/gie; } print; } __DATA__ a (b) B (C) test.csv file.dat データをちょっといじってますが、 b (a) C (B) file.csv test.dat となります。
>ホームページスペースでsocketなどを使用できないようにしてあります。 モジュールの Socket ではなくて関数の方の socket ですか? ある手順を踏んで、以後その関数を呼べないようにすることはできますが 実行開始時点からできたかどうか…
ウェブ屋のネタ帳に「画像もDBに格納して管理する －扱いがめんどうなLOB (ラージオブジェクト)は使わない方法も含め」という記事があります。 参考になるでしょう。 参考URL：http://neta.ywcafe.net/000774.html
#1です。 ＞緯度・経度情報などもdisplay:noneなどでページ内に呼び出しておく感じでしょうか。 そうなりますね。 GoogleMapsApiに詳しくないので検証してませんが一応例を。 テーブルの例 <table id="infoTable" style="display:none;"> <tr><th><a href="ログAのURL">ログA</a></th><td>ログAの経度</td><td>ログAの緯度</td></tr> <tr><th><a href="ログAのURL">ログA</a></th><td>ログBの経度</td><td>ログBの緯度</td></tr> </table> スクリプトでログを扱う部分の例 var tbl = document.getElementById('infoTable'); //以下3行、同じ事を二回する必要はなさそうなので外に出しましたが、 //動作しないようなら addMarkerの前に移して baseicon.shadow = "img/s.gif"; var icon = new GIcon(baseicon); icon.image = "img/0.png"; for(var i=0;tbl.rows[i];i++){ addMarker( new JPoint( tbl.rows[i].cells[1].innerHTML, tbl.rows[i].cells[2].innerHTML), icon, tbl.rows[i].cells[0].innerHTML); }
＞Perlの中で記述している変数をPHPに渡す場合はどのように記述すればよいのでしょうか？ PHPに引数を渡すか、ファイルに保存して読み込めばいいんじゃないでしょうか。 参考URL: コマンドライン引数を受け取る 参考URL：http://phpspot.net/php/pg%83R%83%7D%83%93%83h%83 …
>で、目的はニュース記事のタイトルとリンク抽出なので、 >&gt;&lt;title&gt; >と >&lt;/title&gt;&lt; >で囲まれた部分、及び、 >link&gt;&lt;guid isPermaLink=&quot;false&quot;&gt; >と >&lt;/guid&gt;&lt; >に囲まれた部分を抽出する方法 やっぱり，回答1は的外れじゃないか(笑) 予想はしてたけど。 #!/usr/local/bin/perl use LWP::Simple; use XML::RSS; use LWP::UserAgent; use XML::XPath; use XML::DOM; sub getData{ my $url = 'http://news.google.com/news?hl=ja&ned=us&ie=UTF- … my $ua = new LWP::UserAgent; my $response = $ua->get($url, 'User-Agent' => 'Mozilla/4.0'); return $response->content; } sub getPairs{ my $data = @_[0]; my @pairs; my $xp = new XML::XPath( xml => $data ); $hoge = $xp->findnodes("/rss/channel/item/title/text()"); $fuga = $xp->findnodes("/rss/channel/item/link/text()"); while($hoge->size() > 0 ){ push(@pairs,[$hoge->pop()->getNodeValue(),$fuga->pop()->getNodeValue()]); } return @pairs; } sub generateContent{ my $pairs = @_[0]; my @pair; my $document = new XML::DOM::Document; # not in DOM spec my $xmlDecl = $document->createXMLDecl("1.0","UTF-8","no"); $document->setXMLDecl($xmlDecl); # not in DOM spec my $doctype = $document->createDocumentType("html","http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" ,"-//W3C//DTD XHTML 1.0 Strict//EN", ""); $document->setDoctype($doctype); my $Eul = $document->createElement("ul"); while($#$pairs > 0){ $pair = pop(@$pairs); my $Eli = $document->createElement("li"); my $Ea = $document->createElement("a"); $Ea -> setAttribute("href",$$pair[1]); my $Ea_text = $document->createTextNode($$pair[0]); $Ea->appendChild($Ea_text); $Eli->appendChild($Ea); $Eul->appendChild($Eli); } my $Ebody = $document->createElement("body"); $Ebody->appendChild($Eul); my $Etitle = $document->createElement("title"); $title_text = $document->createTextNode("Q3798395 TestCase 1"); $Etitle->appendChild($title_text); my $Ehead = $document->createElement("head"); $Ehead->appendChild($Etitle); my $Ehtml = $document->createElement("html"); $Ehtml->setAttribute("xmlns","http://www.w3.org/1999/xhtml"); $Ehtml->appendChild($Ehead); $Ehtml->appendChild($Ebody); $document->appendChild($Ehtml); return $document; } sub generateHTTPHeader{ my $headers = ''; $headers = $headers . 'Status: 200 OK' . "\n"; $headers = $headers . 'Content-Type:text/html;charset=UTF-8' . "\n\n"; return $headers; } sub Main{ # toString is not in DOM Spec. the output functionality is defined in DOM Level 3 Load and Save Module #指定された文字列をp要素の子のテキストノードとして持つ，HTMLを生成。 #/まあ、生ソース自体は別にこんな事しなくてもContent-Typeをtext/plainとすれば出来るが。 print generateHTTPHeader(); my @arr = getPairs(getData()); print generateContent(\@arr)->toString; exit; } Main(); exit; #格好つけてXPathを使ってみたけど，XSLTのほうが楽そうだった気がする #正規表現や文字符号化方式については俺詳しくないのでパス。なので意地でもDOMを使う(笑) #ただし，このコードが取ってきているのは #/rss/channel/item/title/text() #だけで， #/rss/channel/title/text() #/rss/channel/link/text() #や #/rss/channel/image/title/text() #/rss/channel/image/link/text() については考えてない。
ドキュメント見れば書いてますよ。 perldoc -f require Otherwise, "require" demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of "eval" with the caveat that lexical variables in the invoking script will be invisible to the included code. Has semantics similar to the following subroutine: Note that the file will not be included twice under the same specified name. perldoc.jp あたりに日本語訳されてるものもあるはずです。 ファイル名は perlfuc です。
どうやら、LWP::Simple の UserAgent が問題のようですね。 以前も似た質問があり、Amazon も同じ理由で取得不可能でした。 LWP::Simple では UserAgent を指定できないので、 (モジュール自体を直接編集すれば可能) LWP::UserAgent を使い UserAgent を指定すれば良いです。 use LWP::UserAgent; my $url = 'http://news.google.com/xxxxxx; my $ua = new LWP::UserAgent; my $responce = $ua->get($url, 'User-Agent' => 'Mozilla/4.0'); my $data_from_web = $responce->content;
> request.getHeader("X-Up-Subno") > というperlスクリプトを使うことは分かりました。 perl では '.' でオブジェクトとメソッドをつなぐようなことはしないので これはPerlスクリプト(の一部)じゃないですよ。 #Perl6とかはとりあえずなしで あと、request ってほかのとこで作成済みのインスタンスじゃないですか?
$noの後ろに#jumpとか入れたら、スクリプトで「no」がキチンと取れなくなりませんか？変更するとしたら 　　>print "<form action=\"$script\" method=GET>\n"; を 　　print "<form action=\"$script#jump\" method=GET>\n"; ですかねぇ。未検証ですのであしからず。
>このような「指定日時の何時間後を求める」ような関数は >存在するのでしょうか。 日付時刻型の変数にしてしまえば、単なる加算（2*60*60を足すだけ）です。 >日付；$yyyymmdd （例20080229) >時刻；$hhmm (例2315) この状態から年・月・日・時・分にばらして時刻型にする・・のはわかりますよね？ 　　http://www.din.or.jp/~ohzaki/perl.htm#Date2WDay 　　
idの保存というのは単にそれ用の変数を別に用意しておいて、 次回の実行のために値をコピーするだけですよ。 たとえばこんなかんじ。 use strict; open(FILE, 'test.csv') or die "can't open input($!)"; open(NEWFILE, '> atest.csv') or die "can't open output($!)"; my $prev_id = undef; while (my $line = <FILE>) { chomp $line; if ($line =~ /^id/) { print NEWFILE "id,year,flag\n"; next; } my ($id, $year) = split(/,/, $line); #ここの処理が分かりません。 #------ my $flag; if ($id eq $prev_id) { $flag = 0; } else { $flag = 1; } $prev_id = $id; #----- print NEWFILE join(',', $id, $year, $flag), "\n"; } close(NEWFILE); close(FILE); $prev_id はwhileループの中で宣言できないので注意です。 $flagへの値のセットは条件演算子(?:)を使ってもいいですが、その辺はお好みで。
すみません訂正です。 if $h==0 は if $h!=0 の間違いです。 手元では unless $h==0 と書いていたのを、unlessじゃないほうが よいだろうと思って回答をポストするときにいじったときに ミスりました。
>どこかのサンプルでサブルーチンの中にサブルーチンが書いてあったのですが、 そもそもその「サンプル」がないとお話になりませんが， sub hoge{ my $a=shift; sub huga{ print "naka\n";} huga; return $a; } print hoge(10); この程度のことは当然可能です．たぶん，Perl4でも動くでしょう． Perl5からはいわゆるコードリファレンスがあるので， サブルーチンを返すサブルーチンや サブルーチンを引数にするサブルーチンもかけます．
＃前半部分はNo.2さんと本質的に同じだったから削除(^^;;; ＃せっかくかいたので，後半だけアップします． $a="xxxxx"; for (1..10){ $a=~m/x/g; print pos($a); } これの結果をみてもらえるとわかると思いますが， $aを/gでマッチさせたときには 「マッチ位置」pos($a)が付随します． そして，マッチ失敗したら，クリア(undef)されます． ＃参照：perldoc -f pos posとかは，/gcや\Gなんかと合わせて使われますようですね
逆に質問してみると 演算子と関数の違いとは何でしょうか． （複数であることもある）値を与えて， 何らかの結果を出すもの という意味において差があるのでしょうか． となるわけです． 意図どおりに動けば，どっちでもいい くらいに考えて細かい用語は後回しです． ちなみに，とある言語では 1+1を (+) 1 1 と書けたり， f(x,y)を x `f` y と書けたりします(^^;
単純に$seqからXを探して、そこから$lengthと1 (Xの長さ) だけ戻って、$length分の文字列を@fragmentlistに取得したら、どうでしょうか。 my $seq = "AAAAAAXBBBXCCX"; my $length = 6; my @fragmentlist; while ($seq =~ /X/g) { my $idx = pos($seq) - $length - 1; push @fragmentlist, substr($seq, $idx, $length) if $idx >= 0; } foreach my $fragment (@fragmentlist) { print $fragment , "\n"; }
こんな感じの具体例が知りたかったんでしょうか？ あくまでサンプルなのでDBサーバへの接続情報などは実際にはCGI本体とは分離して使用します。 ************************************************************* #!/usr/local/bin/perl use DBI; ## SQL権限用ユーザIDおよびユーザPW $uSQL_ID = 'ユーザ名'; $uSQL_PW = 'パスワード'; $SQL_DBName = 'データベース名'; $SQL_Server = 'データベースサーバIPアドレスまたはサーバ名'; $SQL_Access = 'DBI:mysql:'.$SQL_DBName.':'.$SQL_Server; ## データ入力 my $sql = "insert into テーブル名 (カラム名一覧) values (データ一覧)"; f_SQL_Exec($sql); ## データ取得 my $sql = "select * from テーブル名 where 検索条件"; my @aDATA = f_SQL_Data_Get($sql); データ表示 print "Content-type: text/plain\n\n"; foreach(@aDATA){ print "$_\n"; } exit; ## 終了終了 ## ************************************************ ## DB制御「SQL送信:戻りデータあり」： ## 　　　　　 select文など ## ************************************************ sub f_SQL_Data_Get{ my $flg = 0; my $cc = $_[0]; my $db = DBI->connect($SQL_Access,$uSQL_ID,$uSQL_PW); my $cmd = $db->prepare($cc); my $st = $cmd->execute; if(not $st){ print "Content-type: text/plain\n\n"; print "SQLエラー！\n"; print "$cc\n"; exit; } my @aDt; my $num_row = $cmd->rows; if($num_row > 0){ for(my $i=0; $i<$num_row; $i++){ my @aTmpDt = $cmd->fetchrow_array; my $sTmpDt = join("\t",@aTmpDt); push(@aDt,$sTmpDt); } } $cmd->finish; $db->disconnect; # return @aDt; return wantarray ? @aDt:$aDt[0]; } ## ************************************************ ## DB制御「SQL送信:戻りデータなし」： ## 　　　　　 insert文やupdate文など ## ************************************************ sub f_SQL_Exec{ local $cc = $_[0]; local $db = DBI->connect($SQL_Access,$uSQL_ID,$uSQL_PW); local $cmd = $db->prepare($cc); local $st = $cmd->execute; if(not $st){ print "Content-type: text/plain\n\n"; print "SQLエラー！\n"; print "$cc\n"; exit; } $cmd->finish; $db->disconnect; } ## ************************************************
あ, test2.pl を付け忘れました. -------------------- ここから -------------------- #!/usr/local/bin/perl print "$ARGV[0]\n"; exit; -------------------- ここまで -------------------- です. 正直なところ, 「Unix系 OS」の正体はわからないしどんなシェルを使っているかもわからないので, どうしようもないですねぇ.
perlから直接ダイアログを呼ぶなら、PerlTKを使ってください。 http://www.geocities.jp/m_hiroi/perl_tk/index.html
こんにちは。 前にも同様の質問があったようですが、解決してはいないようです。 で、確認です。 perl -S ppm とか perl -S ppm.bat とコマンドラインで実行したときどうなりますか? 何かのエラーが出たのなら、略さずそのまま補足にお願いします。
>MYSQLからPHPにデータを書き込ませる、読み込ませるといった場合、 >$sql="insert into～";とかpost getで投げるなどの決まりの構文があると >ゆうことまでは理解できます。PERLをMYSQLに投げる場合も同じように考え >たらいいのでしょうか？いろいろなサイトをあさってみても構文例がやや >こして理解できません。 文章の内容が意味不明です。GETとかPOSTはブラウザ（フォーム）からスクリプトへのデータの渡し方の問題です。で、PerlでもphpでもSQL文を作成して、そのSQL文を実行させる（phpだとmysql_query関数）という方法でMySQLとやりとりします。Perlだとuse DBIなどが必要になってくるので、まずはphpのマニュアルにあるサンプルなどを読んでみてはどうでしょう？ 　　http://jp.php.net/manual/ja/function.mysql-query … 　　http://jp.php.net/manual/ja/function.mysql-fetch …
マッチした行を数えて行く変数を用意して、マッチするたびに+1すれば? my $match_count; while (<>) { if (/条件/) { $match_count++; 　　　print; } } print "マッチした行は${match_count}行ありました"; とか。
ファイルの存在チェックといっても、外部に公開していない（ブラウザで読めない）ファイルのチェックはできません。 単純にURLのリクエストが成功するかどうかという話しならドキュメントヘッダを読み出してみればいいかと思います。 LWPライブラリを使うと少しは楽できると思います。ただしhttp通信の基礎は勉強しておいた方がいいと思います。→#1さんの参考URL === サンプルコード === use LWP::Simple; if(head 'http://example.com/') { die 'ok';#trueなら成功 } else { die 'error'; } exit; LWPのサンプルetc. http://homepage3.nifty.com/hippo2000/perltips/lw … 実際にhttp通信を行いますので、ブラウザでアクセスするのと同等の時間が掛かります。 レンタルサーバ等では許可されていないかもしれません。 ブラウザでもたまにNGになる事があるように、一度NGになっても何回かリトライした方が確実ですが、その分レスポンスは遅くなります。
use strict は、安全でない構文に警告を出してくれます。 そのまま外して構いません。コード自体に変更はいりませんよ。 下記のスクリプトの foreach の中身だけ、処理を書き換えてください。
絶対パス ルートディレクトリ（root：根）を起点にした経路(path)表記 相対パス カレントディレクトリ（current：現在の）を起点にした経路(path)表記 具体例での説明は ANo.1 のとおりです，が… > 相対パス「../Program Files\Internet Explorer\IEXPLORE.EXE」 > （「../」は「一つ上位のディレクトリ」を意味します。 > 相対パス「./Internet Explorer\IEXPLORE.EXE」 > （「./」は「現在のディレクトリ」 …はすべて，「../」ではなく「..\」，「./」ではなく「.\」が正しいです。 ディレクトリ表記に，￥を使うのがWindows系OS，／を使うのがUNIX系OSなので。
お尻に RewriteRule ^index.html$ /m/index.html [R=302,L] を追加すればよいのではないでしょうか。
0.　情報が抜け落ちています 81行目にあなたがどんな改変を行ったかがわからない。 0a. 携帯のブラウザは百花繚乱、機種で判断してはいけません。 リリースした時期によって実装が違うようです。 1. それでもごり押ししてcgi-pl2.18 1999/02/23(!)(以下.pl)　を読んでみました。 考えられる点。 W54SAのブラウザがPOSTデータを吐くときに POST hogehoge(何かの文字列。この件に関係ない) Host: foobarhoge (何かの文字列。この件に関係ない) Content-type: application/x-www-form-urlencoded; charset=shift_jis とサーバーに返しているようです（憶測） すると $type と $ENV{'CONTENT_TYPE'} には application/x-www-form-urlencoded; charset=shift_jis が入ります。 本来 「;charset=shift_jis」というのは.plでは望まれていない余計な情報であるため、（８２行目の$type eq 'application/x-www-form-urlencoded'を見てください。*この余計な情報がついているとここを通り抜けてしまう） 奇形情報として　80行目から始まるifを通り抜け 117行目の elsif ($ENV{'CONTENT_TYPE'} =~ m#^multipart/form-data#) にもマッチせず 280行目の &CgiDie("cgi-lib.pl: Unknown Content-type: $ENV{'CONTENT_TYPE'}\n");　でエラーを吐きます。 これがあなたの見ているエラーです。 2a.　望ましい改善策。 CGI.pm　がサーバーの条件や、仕事の条件で使えるのであれば こちらを利用する。(98年に製作された物を使うのは危険すぎる。) 圧倒的に最新であり改善されている可能性があります。 2b. 望ましくない改善策。 付け焼刃ですが、 82行目の $type eq 'application/x-www-form-urlencoded' を $type =~ m{application/x-www-form-urlencoded} に変えると尻尾にごみがついていてもとりあえずエラー処理しなくなるはずです。 3.　まことに勝手なお願いですが、３０分ほど費やした私のために。 もしこれがあなたのお役に立てて給料がたくさんクライアントから頂けたら お礼ポイントは結構ですので どんな募金でもＯＫですのでコンビ二にでも立ち寄られた際に　50円くらい　募金箱に入れていただけ無いでしょうか。 では御健勝をお祈りして。
「新しいファイル」に対する処理をいつ行うのかにもよりますが, 「現在のファイルを処理してから」ということであれば my @files = ('file1.txt'); my %read; while (@files) { my $file = shift @files; next unless $read{$file}++; open(my $fh, $file); while (my $line = <$fh>) { (chomp($line), push @files, $line and next) if $line =~ /\.txt$/; $line に対して何か処理 } close($fh); } のような感じでできるかもしれません. 「新しいファイルを見付けたらすぐ処理する」方針だと再帰ですね. ちなみに動作チェックはしてません.
>確認されている４項目のうち、 >まさに３番目のどうＦＯＲＭを作ればよいのかが分かりません。 1・2番目が出来ているのであれば難しくはないと思います。まして4番目もOKならそのまま流用できますよ。 　　print "<div>"; 　　print "<select name="term">"; 　　（ファイルを開く） 　　Loop（ファイルから1行読み込み：EOFならLoop終了） 　　　　読み込んだ行から品名を取り出す（$hinmeiとする） 　　　　print "<option value=\"$hinmei\">$hinmei"; 　　　　ここまでを繰り返し 　　print "</select>"; 　　print "</div>"; 要するにLoopの前でselectまで出力しておいて、Loopの中で「option」だけをprintする形です（Loopを抜けたらselectを閉じる）。
use utf8; use Encode; use URI::Escape; my $utf8String = 'テスト'; my $urf8BytesEsc = uri_escape(encode('utf8', $utf8String)); my $eucBytesEsc = uri_escape(encode('euc-jp', $utf8String)); my $sjisBytesEsc = uri_escape(encode('shiftjis', $utf8String)); print 'http://www.google.co.jp/search?hl=ja&q=' . $urf8BytesEsc ,"\n"; print 'http://dictionary.goo.ne.jp/search.php?MT=' . $eucBytesEsc , "\n"; print 'http://example.com/search.cgi?sjis=' . $sjisBytesEsc , "\n";
特に問題ないようにみえますね。 なんらかのデバッグはされましたでしょうか。 print デバッグという最も基本的なデバッグ方法があります。 変数の値を実際に出力してみて確かめる方法です。 まず、プログラムのはじめのほうに、 （#!/usr/bin/perl の後ならどこでもよい） use Data::Dumper; の1行を記述します。 次に、 たとえば、$name2 ならば、 適当な箇所で、 warn '$name2: ', Dumper($name2); のように記述します。 ハッシュ変数なら、 warn '%data: ', Dumper(%data); といったぐあいです。 そして、プログラムを実行すると、変数の値が標準エラーに出力されます。 $a: $VAR1 = '_KINOU5_1b_1_'; 期待通りの値が変数に格納されているかどうかを確かめてみてください。
下記のcgiをindex.htmlに <img src=ac_log.cgi>等IMGタグで 読み込ませれば時間とアクセスIPが取れますがどうでしょう？ #ac_log.cgi ############################################################ #!/usr/bin/perl use strict; use warnings; my (@TIME, $access_log); (@TIME) = localtime(time); $access_log = (1900+$TIME[5]) . "/"; #年 $access_log .= ($TIME[4]+1) . "/"; #月 $access_log .= $TIME[3] . " "; #日 $access_log .= $TIME[2] . ":"; #時 $access_log .= $TIME[1] . ":"; #分 $access_log .= $TIME[0]; #秒 $access_log .= "\t" . $ENV{REMOTE_ADDR} . "\n"; #IP #ファイルに追記 open(FILE, ">>./access.log") or die; eval{flock(FILE,2);}; print FILE $access_log; close(FILE); #画像読み込み open(IMG, "image.gif") or die; eval{flock(FILE,1);}; print "Content-type: image/gif\n\n"; binmode(IMG); print <IMG>; close(IMG); exit; ############################################################
CGI としてプログラムを実行し、生成された画像をWebブラウザで表示したい ということでしょうか。 [エラーについて] 1. Premature end of script headers: /XXX/XXX/XXX.cgi これは、 レスポンスに適切なhttpヘッダがありませんよ ということです。 そのため、 print "Content-Type: image/png;\n\n"; の1行を最初に出力する必要があります。 2. display: Unable to connect to X server (). display というのは、X (GUI) へ画像を表示するコマンドです。 open( OUT, "| display -") の箇所で、httpサーバ上でCGI としてプログラムを実行して、 X Serverへ画像データをわたせなかった、 ということです。 CGIプログラムで生成した画像を、Webブラウザで表示するためには、 X Server へデータを投げるのではなく、 http client であるWebブラウザへと画像データを返す必要があります。 そのためには、 CGI プログラムは、標準出力へと画像データを出力すればよいのです。 以上をふまえて、 次のように書き換ればよいです。 before: -------------------------------------------------------------------------------- open( OUT, "| display -") or die( "Cannot display image: $!" ); binmode OUT; print OUT $image->png(); close OUT; -------------------------------------------------------------------------------- after: -------------------------------------------------------------------------------- binmode STDOUT; # 標準出力（BINモード） print "Content-Type: image/png;\n\n"; # httpヘッダ print $image->png(); --------------------------------------------------------------------------------
ざっとみただけだけど Web::Scraperの依存関係を調べると >ppm search WEB::Scraper Downloading ActiveState Package Repository packlist...not modified 1: Web-Scraper Web Scraping Toolkit inspired by Scrapi Version: 0.24 Author: Tatsuhiko Miyagawa <miyagawa bulknews.net> Provide: Web::Scraper version 0.24 Provide: Web::Scraper::Filter Require: HTML-Parser Require: HTML-Selector-XPath Require: HTML-Tagset Require: HTML-Tree Require: HTML-TreeBuilder-XPath Require: HTTP-Response-Encoding Require: UNIVERSAL-require Require: URI Require: XML-XPathEngine Require: YAML Require: libwww-perl Repo: tcool CPAN: http://search.cpan.org/dist/Web-Scraper-0.24/ こんだけ Require が付いてるのがあって、 YAMLあたりは確かCコンパイラでコンパイルする必要がある ルーチンがあったように記憶しているので、 インストールしないで、というのが単にコピーしてということなら 無理でしょう。 レンタルサーバーの方は知りません。
こんばんは。 恐らくデータのサイズが32768バイトを超えているのが原因かもしれません。 参考サイトを載せますね。 ＃OKWaveでも話題に出てたようです。 http://digit.que.ne.jp/work/wiki.cgi?Perl%E3%83% … http://okwave.jp/qa1493606.html
\Q～\E って使えなかったっけ? もしくは quotemeta とか.
> RewriteRule ^(.*)$ /index.php/$1 [L] 紹介された例(サイトの最上位ディレクトリ)とコンテンツの配置が 違っています。 ci ディレクトリの下なので RewriteRule は下記になるはずです。 RewriteRule ^(.*)$ index.php/$1 [L]
>何かよい方法は考えられますか？？ 真っ先に考えるのが、ログイン・ログアウト機能を持たせる事です。 パスワードに有効期限を持たせておいて、それをログインの代わりにするのもアリだと思います。 >事前にユーザーとパスワードを登録しておくcgiがあり ということからも、非現実的な案でもないと思います。 このcgiを少し改造すればいいだけですので・・・ １．年度.htmにアクセスする前の段階でログインをしてもらっていれば、ログインしている間はパスワードが適用されるようにする。 ２．ログインすると、そのユーザーとログイン時間を記録したログインファイルを作っておく。 ３．checker.cgiの起動時にそのユーザーに対応したログインファイルを探す。 ４．ログインファイルが無ければ(もしくは規定の時間が過ぎていれば)パスワードを要求し、 あればログイン時間をチェックしてパスワードの入力をしたことにする（そのままupload.cgiに飛ばせばいいですね）。 ５．ログアウトしたらログインファイルを消す。もしくは、４．で規定の時間が過ぎていた場合も消す。 こんな感じで実装すればいいかと思います。 パスワードファイルにログイン時間を含めてしまえばパスワードファイルにログインファイルの機能を持たせることになり もっとシンプルになりますが、普通は別にしておいたほうがいいと思います。 ３．で探す時にあるかないかで判断できるのが大きいですし ４．でchecker.cgiを経由した時にログイン時間を再記録して、ログインの有効期限を延ばしたりということを考えると あまりパスワードファイルに機能を持たせる事は得策で無いからです。 (ファイルの書き込みが失敗する可能性も考慮しないといけない)
$nendo/temp ってフォルダはあるんですか?
先頭が bbb でも ccc でも ddd でもない任意の文字列とマッチさせたいと いうことでしょうか。 こんな感じでしょうか my $str = "aaa"; if ($str =~/^(?!bbb|ccc|ddd)(.+)/) { print "t=".$1,"\n"; }
別サーバのファイルにアクセスする為にはhttp通信で取り出します。 socketモジュールやlwpライブラリを使います。 たぶん LWP::Simpleモジールを使うのが一番簡単だと思います。 http://homepage3.nifty.com/hippo2000/perltips/LW … LWP:Simpleのドキュメント（和訳）
「utf-8のLinuxマシンで、sjis(改行コードCR+LF)のデータファイルを読込み、euc-jp(改行コードLF)でファイルに出力したい」 という要件を満たすためなら、nkf を使うのが、最も簡単かと思います。 コマンドラインから、 $ nkf --version と実行して、バージョンが表示されれば、nkf を使うことができます。 以下のように実行すれば、 sjis(改行コードCR+LF)のデータファイルを読込んで、 euc-jp(改行コードLF)で出力します。 $ nkf -SeLu data.txt > data_new.txt 元のファイルを残さずに上書きするなら、 $ nkf -SeLu --overwrite data.txt ってな感じで。
しっかりとした検証はしていませんが… 2行目はリストコンテキストの評価となり、3行目はスカラコンテキストでの評価になるからだと思われます。
#1です。 >早速同じ形でおこなってみましたが、 >$option1_total_count　は常に0 であれば、 $option1_total{$option1}++; の部分を $option1_total{$option1}=1; と書き換えてみてください。 それでもダメなら、コーディングミスです。 >@option1_cool_keys = grep(/クール/,@option1_total_keys); >を付け加えるとインターナルサーバーエラーになってしまいます いきなりサーバで動作させるのは止めましょう(^^; 最悪、cgiがサーバリソースを食いつくすような無限ループに陥るような可能性があります。 プロバイダのcgiサーバだと、こう言う事を繰り返すと使用禁止になります。 (自分では実行を止められないため、サーバの管理者に頼む事になります) 最悪でも、Windows環境（ローカル）で動作するPerlで動作を確認してから実行すべきです。 ちなみに、紹介したコードは動作確認をしてません(^^; サーバにログインできる権限があれば、最低でもperl -c -wは実行しましょう。(構文チェック) それと、気になっていたのがコーディングミスです。 perlの特色として「変数は宣言しなくても使える」というものがあります。 これは即ち、変数名が少しでも違ってたら別の変数と解釈されるということでもあります。 一番コーディングミスの影響が大きいところです。 Perl5ならuse strictが使えるはずですので、事前にmyで宣言するようにして 変数のスコープを明示化しましょう。 >ハッシュ系はいまいち苦手 ハッシュ(配列)をうまく使いこなせてこそのPerlです。 Perlでハッシュ(配列)を使わないなんて、普通はありえません。(^^; この場合、%option1_totalというハッシュは $option1の値をキーとした配列を作成しているはずです。
>>「PageLog.html」についているカウンタは正常に動くのは >>確認しました。（ログとかはいらずカウンタだけでよいので） 　状況がちょっと分らないのですが、ログ(ファイル)がないとアクセスカウンターは永遠に動かないと思いますが？ 　そのPageLog.htmlはリロードや再アクセスするとちゃんとカウンターが動くのでしょうか？ fly.exeは、それらアクセスカウンターに必要なファイルを圧縮してまとめたものではないでしょうか。この場合は不要と思われます。 >>ページをローカルで開くとカウンタは「×」で表示されてしまいます。 　と言うことは画像のアクセスカウンターと思いますが、画像ファイルなどのパスは合っていますか？ 　「×」が表示されるということは、画像表示のところまでは来ていると思いますので、その辺のパスとかではないでしょうか。 　「×」が表示された画面でソースを見てみると分ると思います。
garbageというぐらいだから、(株)とかのゴミ文字(一文字)が変換できないという意味では？ だとすると、黙って変換してくれるJcodeの方が良いと思う。 ゴミ文字は、黙って??になるべ。 (例) use Jcode; Jcode:convert(\$str, $ocode, $icode);
my $string =<<END; あいうえお かきくけこ さしすせそ END ですか ? my $string = "あいうえお かきくけこ さしすせそ"; でもできますよ。 参考URL：http://allabout.co.jp/internet/cgiperl/closeup/C …
ちょっと離れてました。 とりあえず >$line =~ s{(\d+) (.*) の 四角形}{ ($1 * 10) . 'mm 正方形' }exg; >ができません。置き換えしたところで評価ってできるんでしょうか？ できますよ。 }exg ってくっついているおまけの 'e' ってのが それをやれという指示になってます (evaluate の e) 置換結果が期待通りでないということなら、 実際にどういうマッチ結果になっているかを $& や $1 を print して確かめるようなことをしてみてください。
原因ですが、Unicodeと他のコードとの変換のときに用いる変換表の混乱によるものです。 詳しくは、 Unicode ff0d あたりをキーワードに検索してみてください。 回避策ですが、 use encoding 'shiftjis' を use encoding 'cp932' に変更してみてください。 use encoding 機能は使わないほうが良いと思いますが これはまた別の話ですので割愛します。
dot5はWindows Serverポイですね。sendmailが実装されているか疑問ですね。 下記テストCGIにより直接sendmailを起動して動作確認をしたらどうでしょうか。 To:とFrom:のメールアドレスは適当にどうぞ。 ファイルのパーミションは755とかにして下さい。CGIの改行コードは、LFだけかCR+LFのどちらでしょうか？管理元に聞いてみて下さい。 #! /usr/bin/perl # print "Content-type: text/html\n\n"; # $exsendmail = '/usr/sbin/sendmail'; # $mailhead = <<"MAIL1"; To: hogehoge\@hoge.com From: hogehoge\@hoge.com Subject: Test Mail Sending MIME-Version: 1.0 Content-Type: text/plain; charset=ISO-2022-JP Content-Transfer-Encoding: 7bit MAIL1 # $mailmess = <<"MAIL2"; Test Mail MAIL2 # if ( open(MAIL, "| $exsendmail -t") ) { print MAIL $mailhead; print MAIL $mailmess; close(MAIL); } # exit(0);
>上記のように直しましたが、何も表示されなくなってしまいます。 下記のコードを実行してみればよいのではないでしょうか。 $information = 'kaori64501'; $top_html .= <<EXIT; <head> <meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"> <meta http-equiv="Content-Style-Type" content="text/css"> <html><body> $information </body></html> EXIT print $top_html; 「kaori64501」と表示されないのなら，この11行のコードに問題があるのでしょう。 「kaori64501」と表示されたのなら，質問文のコードをながめていても解決せず，あなたが提示を省略した箇所に問題があるということです。
＞5000ファイルを処理する時 エディタを使うよりも素直にPerlでやったほうが早いんじゃない？
一応原因はつかめました。 正しく動いているわたしの環境で、 C:\Perl\site\lib\auto\YAML\Syck のディレクトリ 2008/01/22 16:29 <DIR> . 2008/01/22 16:29 <DIR> .. 2008/01/22 16:29 423 .packlist 2008/01/22 16:28 0 Syck.bs 2008/01/22 16:28 77,824 Syck.dll 2008/01/22 16:28 786 Syck.exp 2008/01/22 16:28 1,910 Syck.lib 2008/01/22 16:28 257,024 Syck.pdb 6 個のファイル 337,967 バイト この中の Syck.dll の名前を変えます。 C:\Perl\site\lib\auto\YAML\Syck>ren Syck.dll Syck.dll.1 YAML::Syckを使ったテストスクリプトを実行します。 E:\work\t\0122>perl testyaml.pl YAML::Syck::VERSION = 1.01 Can't locate auto/YAML/Syck/DumpYAML.al in @INC (@INC contains: c:\home\perl C:/ Perl/site/lib C:/Perl/lib .) at C:/Perl/site/lib/YAML/Syck.pm line 113 と同じエラーが起きるようになりました。 このことから、Syck.dll がしかるべき位置にインストールされていないのが 直接の原因であると思われます。 xamppをキーワードに検索したところ VistaにXAMPPをインストールする際の注意点[to-R] http://blog.webcreativepark.net/2008/01/06-02431 … インストールするXAMPPですが最新版の1.6.5ですとperlアドオンがインストールできません。 旧バージョンのページで1.6.2をダウンロードしてインストールすればperlアドオンのインストールに成功します。 という情報が見つかりました。 ActivePerlと、XAMPPに同梱のperlと二つ入っている というお話でしたが、 後者のディレクトリ構成がどのようになっているのか わかりませんので、 Syck.dll をどこに置けばよいという回答はできません。 #インストールして調べろというのは勘弁。 とりあえずは手作業で、 ご自分の cpanが使った作業ディレクトリにある Syck.dll他のファイルを、 c:\perl\site\lib\auto\YAML\Syck というディレクトリに放り込んだらどうなりますか? c:\perl\site\lib\YAML に Syck.pmはあるんですよね?
> ハッシュからキーを取り出すことができるようで、 > これをsakusaker7さんの方法でループさせてチェックすれば > 大丈夫なのではないかと思っております。 残念ながらハッシュに入っていないキーを参照しているために出ている ワーニングです。 なので sakusaker7 さんがやっているようにキー文字列を明示的に あたえてやる必要があります。気づきませんでしたが、sakusaker7 さんの 意図したコードは、下記になると思います。 my @keys = qw( キー文字列を列挙 ); foreaech my $key (@keys) { $form{$key} ||= ''; }
XAMPPですか、PerlインタプリタはActivePerlのものと同じだけど ディレクトリ構成とかが違うみたいですね。 ちょっと調べたところではなんかアドオンを入れないとcpanも まともに使えないとかありましたけどその辺は大丈夫ですか? Syck.dllがきちんとインストールされていないと動かないはずなので とりあえず、Syck.dll が一体どこにインストールされたのか チェックしてみてください。 一つ確認ですが、XAMPPのものとは別に、自分でActivePerlを インストールしていませんか?
たとえば S010.csv がなかったときに SA010.csv を作らないでいいのなら #open (FILE, $file) or die; ←この行を open(FILE, $file) or next; ← こうする open (NEWFILE, ">$newfile") or die; 　while (my $line = <FILE>) { 　my ($aaa, $bbb, $ccc) = split(/,/, $line); 　print NEWFILE join(',', $aaa, $bbb), "\n"; 　} とすればいいんじゃないですかね。 警告メッセージを出すなりはしてもいいと思いますが。
> Permission denied って文句たれてるんで、自分がそこには入れないディレクトリだったりしません? お手数ですが、 ・使っているOS ・実行時の操作 (シェルのコマンドラインから実行しているとか、cron経由で起動してるとか) を説明してもらえますか? > /ファイルパス/ 行番号 54. まあ本当の名前そのまま書かないでもいいんですが、 この54行目でエラーになっているというファイルはどんなファイルですか? 自分で作った(File::Findを使っている)スクリプトのファイルですか? それとも別の何かですか? まず適当な作業ディレクトリに移って、 そこで3段くらいのディレクトリ構造と幾つかのダミーファイルを置いてみて、 シェルからスクリプトを実行して正しく動作するか確認してみてください。
オライリーの『Perl & LWP』という本（日本語訳はまだ出ていません。）やオライリー・ジャパンから出ている『Spidering Hacks』という本が詳しいと思います。
コマンドプロンプトで実行できるならパスはあんまり気にしなくても system で動くはずなんだがなぁ....
下記の様に、myを前に付ける事。 my $uploadname = $fh; my @pathary = split(/\\/, $uploadname); my $lastpos = @pathary; それと、こっちの方が正解かもな。 やってみんと分からんが。 my @pathary = split(/\//, $uploadname);
質問者が考えられているプログラムには、無理があると思います。 my @list1 = ([1,6],[2,5],[3,4],[5,14],[20,25]); my @list2 = ([2,3],[5,8],[12,20],[16,28]); while($i < @list1){ while($n < @list2){ ..... #終点の比較 if($list1[$i]->[1] < $list2[$n]->[1]){ $i++; } elsif($list2[$n]->[1] < $list1[$i]->[1]){ $n++; } } } 上のプログラムでは、次のように進みます。 1) 1 - 6 と 2 - 3 を比較する 2) 1 - 6 と 5 - 8 を比較する 3) 2 - 5 と 5 - 8 を比較する この時点で、list2 の 2 - 3 の比較は終了していて、本来比較しなければならない list1 の 2 - 5 と 3 - 4 とは行われないままになってしまいます。これを行うように while ル ープに組み込むのは、至難の技のように思います。 次の条件式 (elsif の条件式も含めて) には誤りがあります。1 - 6 と 12 - 20 を比較した 場合を考えてみてください。重複がないのに条件式は真となってしまいます。 #重複か否かの比較 if($list1[$i]->[0] < $list2[$n]->[0] && $list1[$i]->[1] < $list2[$n]->[1] ){ 重複の判断は、どちらかの最小値 (または最大値) が他方の範囲内にあることを確認すること でできます。 if ($list1[$i]->[0] >= $list2[$n]->[0] && $list1[$i]->[0] <= $list2[$n]->[1] or $list1[$n]->[0] >= $list2[$i]->[0] && $list1[$n]->[0] <= $list2[$i]->[1]) { もう少し単純なプログラムを考えてはどうでしょうか。次のような foreach の２段重ねる 方法でも十分ではないでしょうか。 my @list1 = ([1,6],[2,5],[3,4],[5,14],[20,25]); my @list2 = ([2,3],[5,8],[12,20],[16,28]); my $flag1 = 0; my $flag2 = 0; foreach my $list1_ref (@list1) { foreach my $list2_ref (@list2) { if ($list1_ref->[0] >= $list2_ref->[0] && $list1_ref->[0] <= $list2_ref->[1] or $list2_ref->[0] >= $list1_ref->[0] && $list2_ref->[0] <= $list1_ref->[1]) { $flag1++; $flag2++; } } } print "list1 : $flag1\n"; print "list2 : $flag2\n";
use Pg; していませんか。perl と postgresql のインタフェースには、DBI を使う DBD::Pg と PostgreSQL ネイティブインタフェースの Pg とがあります。Pg は、PostgreSQL 7.3? くらいから別配布となり、http://gborg.postgresql.org/ から Pg-2.1.1.tar.gz が入手できたのですが、http://pgfoundry.org/projects/pgperl/ に移動したようです。しかしこのプロジェクトページには何も登録されていません。CPAN には、http://search.cpan.org/~mergl/pgsql_perl5-1.9.0/ が登録されていますが、古そうです。 どうしてなくなったのか分かりませんが、DBD::Pg を使って書き直すか、Pg-2.1.1.tar.gz を他の場所から探し出すしかないでしょう。
> XML用のライブラリって標準だったかな？) corelist XML XML was not in CORE (or so I think) corelist XML::Simple XML::Simple was not in CORE (or so I think) corelist XML::Parse XML::Parse was not in CORE (or so I think) コアモジュール(標準添付)ではないですね。 #5.8.8の場合 うまくいかないってのはたぶん改行を含んでいるのに sオプションつけてないとか、 最長一致で次の要素まで飲み込んでるとか そんな理由だと思いますが 自前で正規表現でゴリゴリやるなってのには賛成です。
先に回答されているように等しくありません。 exists は $hash{'key'} の key 自体が存在しているか調べられます。 exists の結果が偽なら defined も偽になりますが、 defined が偽でも、key 自体が存在していれば exists は真を返します。
> ブロバイダやレンタルサーバーのHPにperlのパスは書いてありますというのですがどのように調べるのですか。 ANo.1の方が言われる通りです。 > それとも自分のHPのperlのパスを調べるのですか。 そうです。それがANo.1の方が言われている事です。 ↓↓プロバイダの案内例 http://www.avis.ne.jp/user-support/homepage/serv … 大抵は、#!/usr/bin/perl か、#!/usr/local/bin/perl のどちらかですが、各プロバイダのサーバーによって異なりますので、確認した上でこの記述を必要に応じて変更することになります。
hex は 16進数を10進数に変換した値を返します。 つまり、引数の値に変化はありませんので、 結果を受け取る必要があります。 $_ = hex は、引数の値として、$_ が使われています。 $_ = hex($_) ということになりますね。 混乱するうちは、できるだけ省略をしないことをお奨めします。
ブラウザの立場からすれば，自分の手元に来るHTMLが解析対象であって， それが静的なファイルであろうが，PerlやPHPやRubyやPythonで作られたプログラムで生成されたものがCGI経由で来る形であろうが，全く関係ない。 でやってみたけど， >作成されたページは普通最初の（先頭の）入力ボックスに カーソルが位置づけされますよね。 少なくとも普通のHTMLと当方のMinefieldの組み合わせでは，されない。 おそらくECMAscript等による方法で実現している。 今回掲示するXHTMLにおいてもその方法を用いているため，無効にしているユーザーには有効とならない。 人によってはこうしたフォーカスの移動が余計なお世話に思う人もいる(俺も賛成。tabindexあたりだとうれしく思うんだけど)ので，使うときは良く考えてから使うこと。 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dt … <html xmlns="http://www.w3.org/1999/xhtml"> <head> <title>Q3677043 TestCase 1</title> <script type="text/javascript"> function init(){ document.getElementById("name").focus(); } </script> </head> <body onload="init();"> <form action="example.cgi" method="POST" enctype="x-www-urlencoded" accept-charset="UTF-8"> <dl> <dt>ダミー</dt> <dd><input type="text" id="dummy"/></dd> <dt>名前</dt> <dd><input type="text" id="name"/></dd> <dt>住所</dt> <dd><input type="text" id="address"/></dd> </dl> <p><button type="submit">送信</button></p> </form> </body> </html> プログラムによってXHTMLを生成しているなら そのソースコードに上記同様の仕組みを組み込めばよい。 (プログラムのソースコード出さないとプログラム側の修正箇所はこちらからは絶対に明示できない) #今回はその性質上form要素によってどこかに送信することを前提としてソースコードを作成したが，どこにも送信しない場合はform要素を用いないこと。
× $_をデリファレンス（その結果の[0]） print $$_[0]; ○ $_[0]をデリファレンス print ${$_[0]}; 優先順位の問題
どのようにメールを送信しているかわかりませんが、 Return-Pathの設定を行えば通常のMTAであれば、 エラーがあればReturn-Pathにメールが帰ってきます。 但し、AUの場合はユーザ毎にエラーを返信するか設定できるので、 ユーザが返信しないように設定していれば返信されないと思います。 (迷惑メール対策の一環です) MIME::Liteを使用した場合の例を書いておきます。 use strict; use MIME::Lite; my $subject = 'hogehoge'; my $message = 'fugafuga'; my $mail = MIME::Lite->new( From => 'from@example.jp', To => 'to@example.jp', Subject => $subject, Data => $message, ); $mail->add('Return-Path' => 'return@example.jp'); $mail->send("sendmail", "/usr/sbin/sendmail -t");
・・・XAMPとかAll-In-One-eclipseっていうんなら 仮にもWebアプリを作るのでしょう・・ しかも，PadWalkerなんて・・・ と思ったら。。。EPIC・・・あー・・・ EPICがPadWalkerを要求してるのか． WindowsのActivePerlならコマンドプロンプトで ppm install PadWalker とすればよい． もしくは，GUIのPerl Package Managerで選択していれるだけ． CygwinのPerlだったら CPANモジュールあたりで cpan install PadWalker なんかでいけるはず（Cygwinは使ってないがUNIX系と同じはず） けど・・・これくらいのことは自力でWebを漁って 調べられないとWebものは厳しいと思う．
再度、投稿してさい。
あなたが作成されたものを、共通関数として登録し、それを呼び出せば、見た目クールになるかとおもいます。クールかどうかは、呼び出し側のイメージなので、呼び出されるほうは、結構、泥臭いことをやるのが普通かと思います。
自分も気になったので追求してみました。 「一番内側の<div>～</div>」に一致、ということなら下記の方が確実かもしれません。試験はしましたがちょっと自信はありません。 $str =~ m{<div\b[^>]*?>([^<]*|<(?!div)\b[^>]*>)*ABC.*?</div>};
どの \* ? C:\perl\lib>grep "\\\*" cgi.pm $CGI::DefaultClass->binmode(\*main::STDOUT); $CGI::DefaultClass->binmode(\*main::STDIN); $CGI::DefaultClass->binmode(\*main::STDERR); return ("start_$1","end_$1") if $tag=~/^(?:\*|start_|end_)(.+)/; : read(\*STDIN, $$buff, $len, $offset); next unless /\*/; # not a pattern match $pat =~ s/\*/.*/g; # turn it into a pattern (my $i = $$self) =~ s/^\*(\w+::fh\d{5})+//; my $ref = \*{"Fh::$fv"}; $query = new CGI(\*STDIN); $query->save(\*FILEHANDLE) $q->save(\*OUT); my $q = new CGI(\*IN); 正規表現の中にあるのは、'*' がメタ文字なのでそのエスケープ。 それ以外は、型グロブのリファレンス。
No.1 の補足に回答いたします。 STDINに関係ないメソッドを呼ぶ文には全く問題ありません。 実証済みです。 > perl -MCGI -e "$c = new CGI(); $c = new CGI(); print $c->start_html;" < なお、useについてですが、Perlは内部でuseしたライブラリ名を記憶していて、同じモジュールをuseしない(2回目のuseは無視)ようになっているので、二カ所で同じモジュールをuseしても、全く問題ありません。
こういうことでしょうか？ シングルクォートは全角から半角にしてしまっています。 $a = "5'\sAACGCATTTTTT^\s3'"; $b = "3'\sTTGCGTAAAAAAAA^\s5'"; print $a; print $b;
Perl 5.10.0では、switch文が新規導入されてます。 given ($foo) { when (/^abc/) { $abc = 1; } when (/^def/) { $def = 1; } when (/^xyz/) { $xyz = 1; } default { $nothing = 1; } }
>相変わらず取り払ってもエラーが消えず。 #1の補足にあるスクリプトで試してみましたが、こちらではエラーになりません。 スクリプトは utf-8で保存しています。 binmode をしないと Wide character in print at mmm.pl line 10. という警告が出ますが。
＞何か異なることはあるのでしょうか。 何を聞きたいかが、分からないので、難しいですねー。 難易度は、ＪａｖａやＣの方が難しいです。 逆にいうと、難しいので、この言語が分かれば、他の言語もある程度は、分かるようです。 なので、先にＣの習得を薦める人もいます。 プログラム言語は、その言語に得手不得手がありますが、基本的な概念は、似通っていますし。 ループとか、変数の扱い方とか、関数とか、オブジェクトとか。 Visual BasicやDelphiだと、難易度は同じくらいかな？ まぁ、ＰｅｒｌやＰＨＰは、人様のスペースを借りたり、変なスクリプトを作ると、そのサーバを使っている人全員の迷惑になったり、設置する時に中身を見られて、笑われたりしますが。 ＰｅｒｌやＰＨＰは、配布すれば、中身が見られてしまうので。 （ＨＰ上では、中身を見ることは、普通出来ませんが。 Visual BasicやDelphiも、配布すれば迷惑になりますが、それは配布された個人だけですし。 データの削除とかを除けば、仕様ですと言っちゃえばいいし、必ず、フリーソフトには、”当方は責任は持ちません！！”って明記されてますし。 Ｗｅｂデザイナーは、ピンキリです。 この辺の単語のイメージは、新しい言葉なので、ピンキリだと思います。 Ｗｅｂデザイナーでも、ＦＬＡＳＨなんかは、デザイン面も強くなおかつ、プログラムも必要でしょうし。 Ｗｅｂデザイナーさんを雇う時は、何が出来るかを聞いた方がいいです。
use Net::FTP; sub main(){ my $ftp; my $path; my $loginresult; $ftp = Net::FTP->new("localhost", Debug => 0); $loginresult = $ftp->login('himajin100000@example.com','example'); if ($loginresult == 1){ #ログイン成功 $ftp->cwd("./hoge"); $path = $ftp->pwd(); #出力結果はディレクトリが存在していれば/hoge print $path; #もちろん，別に変数に受けずに #print $ftp->pwd(); #といきなりやっても良い }else{ #ログイン失敗 print "login failed"; } } &main;
Q.No3610729 で既に解決できているような気がするんだけどなぁ....
$color に「,」で区切った形式で入るなら 同じようにsplitで配列として取り出せます。 ($title,$mail,$home,$color,$link) = split '<>',$file; foreach (split ',',$color) { print qq|<font color="$_">■</font>\n|; }
まだ深いとこまでつめてないんですけど、 Perl のライブラリが格納されているディレクトリの下の WWW/Mixi/Scraper/Mech.pm というファイルに一行追加してみてください。 use WWW::Mechanize::DecodedContent; use WWW::Mixi::Scraper; #←追加 use WWW::Mixi::Scraper::Utils qw( _uri ); 多分これで動きます。 > どなたかご教授いただければ幸いです。 「教示」 誤字等の館：ご教授願います http://www.tt.rim.or.jp/~rudyard/torii009.html
\d は数字 \D は数字以外 住所には数字がある だからマッチしない． 一番単純なのは以下のような感じ． Perlのバージョンと実行環境が不明だから Windows上でPerl5.8以降を使ってると仮定したコードです． use strict; use warnings; use encoding q(shiftjis); my $data1 = "<abcd>東京都港区赤坂六本木1丁目1-1</abcd>"; my $data2; if ( $data1 =~ m{<abcd>(.*)</abcd>}gms ){ $data2 = $1; } print $data2;
単純に 1 日後なら 1*24*60*60 秒足し算すればよいのでは？
こういうやり方もあるということで。 #!/usr/bin/perl use strict; use warnings; my $color = 0xffffff; my $mask = $color ^ 0xeeeeee; while (<DATA>) { my ($now, $host) = split; printf <<EOM , $color; <tr bgcolor="#%06x"> <td>$now</td> <td>$host</td> EOM $color ^= $mask; } __END__ 0130 hogehoge 0200 fugafuga 2230 moge 1500 helloworld 1700 greatquux 1800 goigoi 0915 gachapen 実行例: <tr bgcolor="#ffffff"> <td>0130</td> <td>hogehoge</td> <tr bgcolor="#eeeeee"> <td>0200</td> <td>fugafuga</td> <tr bgcolor="#ffffff"> <td>2230</td> <td>moge</td> <tr bgcolor="#eeeeee"> <td>1500</td> <td>helloworld</td> <tr bgcolor="#ffffff"> <td>1700</td> <td>greatquux</td> <tr bgcolor="#eeeeee"> <td>1800</td> <td>goigoi</td> <tr bgcolor="#ffffff"> <td>0915</td> <td>gachapen</td> って、tr の閉じタグないけどいいの?
とりあえず「<>が存在しない」「データの最後はかならずDelay」という条件付でならこんな感じ my $FN = 'ファイル名'; my $key1 = 'Arrival Time: '; my $key2 = 'Last SR timestamp: '; my $key3 = 'Delay since last SR timestamp: '; open(IN01,$FN); while(my $line = <IN01>){ ## データがそろうかEOFまで読み込み $line .= <IN01> while(!($line =~ /$key3/) and !eof(IN01)); ## データがそろっていると仮定して処理 if($line =~ /$key3/){ ## 改行置き換え $line =~ s/\r\n|\r|\n/<>/g;; my $arrive = $line; my $last = $line; my $delay = $line; ## キーワードから必要部分を抽出 $arrive =~ s/.*$key1([^<]+).*/$1/; $last =~ s/.*$key2([^<]+).*/$1/; $delay =~ s/.*$key3([^<]+).*/$1/; ## 表示部分 my $DT = sprintf("%s,%s,%s\n",$arrive,$last,$delay); print $DT; } } close(IN01); ただし、データの内容次第でつくりが違ってくるのでデータの条件をしっかり把握することが肝心です（順序が入れ替わるケースが無いかどうか、3種のうち欠ける物がないかどうかなど）。
１．サーバ側では管理していない ブラウザはサーバにページを取りに行くたびに、一度度覚えたuserID/passwardを送信している。 よってブラウザを終了するまでが有効期限かな。 ２．http.confに ErrorDocument 401 表示したいページ の1行を追加。 ３．平文で流れる ４．digest認証がある mod_auth_digest.soを使用 ５．書籍は知らないが、apacheのマニュアルに認証部分が纏めてある http://httpd.apache.org/docs/2.2/howto/auth.html
> 001から999の表示で動作的には大丈夫でしょうか？ 「001から999までの0埋め3桁の数字」という事なら、 sprintf( '%03d', int( rand( 999 ) ) + 1 ) ――とか。
Formmail.plは大変設置が難しいので、スーパーコンピュータープログラマー でも設置に苦労するプログラムです。それを設置しようとするとはかなり 上級のプログラマさんかなんかでしょうか・・・・？ 私のような日曜プログラマでも少し気付いたことがあるのでアドバイスを少し。 まず、cgi-lib_pl.txtについてですが、これは最新版を手に入れていらっしゃるでしょうか？ もし手に入れてなければ、WinUp等（あなたの使ってるOSによります。 できれば追加情報としてお使いのOS等を教えていただけると幸いです）で入手した方がいいかもしれません。 次にsendmail.aspですが、これは特殊なプログラムで環境によっては動かない 事が往々にしてあります。もう少し詳細が分かれば何かアドバイスできるかもしれません。
JSON なるものが見つからないという warning の前に何かずらずらでてませんでした? 自分のところでは見つからないってことはないんですけどねえ。 >JSONのモジュールを別途インストールし（手動でソースを取ってきて,適当と思われるディレクトリに格納した まさか tar玉開いて手作業でコピーしました? 標準的な格納場所って話ですけど、OSやらディストリによって微妙に違ってたりしますが、 >　@INC contains: /usr/lib/perl5/5.8.6/i386-linux-thread-multi > /usr/lib/perl5/5.8.6 > /usr/lib/perl5/site_perl/5.8.6/i386-linux-thread-multi まさにこの辺のディレクトリがその環境における標準的な位置ですが。 ユーザーが別途cpanコマンドでインストールしたパッケージはこの場合だと 多分三番目の site_perl の下のディレクトリに格納されると思います。 あるいは、環境変数 PERL5LIB に自分がインストールしたディレクトリを 設定すると、そこも参照するようになります。
こんにちは。 こんな感じ？ ------------------------------------------- 1) aa.txtというファイルを読み取りモードで開く 2) bb.txtというファイルを追記モードで開く 3) aa.txtの1行を文字列として読み出す。 4) ファイル終端に達してしまったら 　4-1) 開いたファイルを閉じて終了 5) 読み取れたら 　5-1) 読み出した行にに対してAAをマッチング 　5-2) マッチしたら、bb.txtに出力 6) 3に戻る。 ------------------------------------------- perlを問わず、普通、ファイルに対する操作は、ファイルを開いて、読み取って(書き込んで)、閉じて、が基本です。 これらの機能を使うには、、、は、調べてみると分かるかなと思います。 外部からの入力は、GUIアプリじゃなければ、プログラムへの引数とか、標準入力とか使います。 マッチングは、、、色々サイトを見てみるとわかるかなと思います。 初めてだと大変かもしれませんが、根気良くうんうん唸りつつ色々調べたり試してみると身につきます。 がんばってくださいましー。
こんにちは。 何だか理解がぐちゃぐちゃな気がします。 ですので、基本的な仕組みの説明を少ししてみます。 あと、サンプルでは、タグをHTMLにしてますけど、xhtml使っているならそれ様に置き換えてください。 HTMLに記述されたもの(<SCRIPT>で記述されたJavaScript含む)は、PCとかクライアントの上で処理されますし、CGIは、WEBサーバ上で処理されされます。 perlも、通常は、CGIの仕組みと併用されてWEBサーバ上で動くものです。 perlは、perlの構文しか理解できないので、HTMLをそのまま書いても、通常のperlと見分けがつかずエラーになって終わるのが普通です。 ※なので、数式が表示されているという状況が良くわかってません ※perlの構文は、色々サイトがあると思うので、探してみてください。少なくともJavaScriptとは違います。 ですので（本当の理由は他にあるけれど)、perlを利用する場合には、perlから、HTMLをprint関数で出力してInternetExplorer等のブラウザに返すというやり方をします。 こうすると、ブラウザからすると、xxx.htmlというURLからHTMLにアクセスしている時と同じような返信を、WEBサーバから送ることになります。 こんな感じ。ファイル名は、仮でtest.cgi ※一行目は、プロバイダなど環境により異なります。 ---------------------------------------------------- #!/usr/bin/perl print "Content-Type: text/html\n\n"; print "<html>\n"; print "<body>\n"; print "</body>\n"; print "</html>\n"; ---------------------------------------------------- $loginをどこから受け取るの？とかは、書かれていないのでとりあえず理解されているものと思うことにして省略しますが、後は、その中に、 ---------------------------------------------------- #!/usr/bin/perl # #$loginの受け取り処理(省略) # print "Content-Type: text/html\n\n"; print "<html>\n"; print "<body>\n"; if( $login eq "" ){ #非会員向けHTML }else{ #会員向けHTML } print "</body>\n"; print "</html>\n"; ---------------------------------------------------- という風にifを埋め込んで、分岐を行います。 HTMLをそのまま埋め込みたいなら、CGI(perl)より、PHPの方がいいかもしれません。。。 、、、という感じで、どうでしょ。。。後出来ます？
Perl のバージョンを5.8以降に限定していいという前提が許されるなら use strict; use warnings; #use Encode qw(decode); use utf8; while (my $line = <>) { chomp $line; #my $str = decode('sjis', $line); my $str = $line; utf8::decode($str); print "true\n" if $str =~ /[\p{Hiragana}\p{Katakana}\p{Han}]/; } ループの最後の方で使っている正規表現で、ひらがなかカタカナか漢字が 含まれているかを判定しています。 ただしここでいう漢字には通常日本語では使わないような(でもUnicodeの規格には含まれている) モノが含まれます。 たとえば「トウ小平」のトウの字とか、「深セン」のセンの字とか。
検索パターンの方をファイルから読み込んでいるのですね。 では、こちらの改行コードが問題になります。 $mailaddress = <FILE>; chomp $mailaddress; ファイルから読み込んだら、行末の改行コードも含まれますので、 不要な場合は削除して下さい。 ----------------------------------------------------------- >1. $mailaddress = "abcde@fghijk.com"; >2. $mailaddress = "abcde\@fghijk.com"; ダブルクオートで囲った文字列は変数が展開されます。 1は @fghijk の部分が変数名と誤解されてますね。 2の様にエスケープするか、シングルクオートで囲えば問題ないはずです。 $mailaddress = 'abcde@fghijk.com'; ファイルから読み込んだ場合は、変数は展開されませんので、 問題ないはずです。 また、@ は正規表現内ではエスケープ不要です。 ----------------------------------------------------------- しかし、メールアドレスに使われるピリオドは問題です。 これは正規表現では特別な意味を持ちますので、 エスケープする必要があります。 念のためピリオド以外もエスケープして、 下記のような感じでどうでしょう？ $mailaddress = <FILE>; chomp $mailaddress; $mailaddress =~ s/([\$\(\)\*\+\.\?\[\\\]\^\{\|\}])/\\$1/g; @hit = grep(/$mailaddress/,@data);
localtime なりで時刻データを取得してそれを元に表示しているのなら scalar で受けてその文字列を弄繰り回すよりは、文字列を作るところから 考え直すべきでしょう。 use POSIX qw(strftime); print strftime('%m/%d %H:%M', localtime); 実行結果 12/30 23:04 まあこの程度なら localtimeを配列で受けて自分で整形しても大した手間じゃありませんけどね。 @time = localtime; printf '%02d/%02d %02d:%02d', $time[4]+1, @time[3, 2, 1];
procmail経由で起動したいのがPerlスクリプトってだけでここで訊くのは微妙に場所が違うような気もしますが、 #それに設定を書くのはprocmailじゃなくて .procmailrc とかでは? PROCMAIL http://www.jaist.ac.jp/~fjt/procmail.html .procmailrc の書き方 http://www.ipc.hokusei.ac.jp/doc/online/procmail … この辺解説でどうですか。 問答無用で実行させるなら 0: * | hoge.pl こんなんでいいのかな。 10000バイト以上で実行だとこんな感じ。 0: * > 10000 | hoge.pl
ヘッダーでURLが戻ってくるのであれば以下のコードで 取得できると思います while ($response->is_redirect) { $url = $response->header('Location'); }
やっぱり接続できないのは不自然ですね。 ブラウザからは閲覧できるので、perl.exe に通信が許可されていない可能性があります。 ファイアウォールがあるのなら、原因はそこかもしれません。 どのエラーも接続エラーなので、接続を試みたプログラム自体には問題がない可能性が高いです。
「反映されない」ってどういう意味なんでしょうか? 何かメッセージは出ていませんか?
