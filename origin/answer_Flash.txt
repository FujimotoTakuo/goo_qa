＃２です。 おそらくブラウザは Internet Explorer をお使いかと思います。 おまじないみたいなもので、確実な効果を期待できることではありませんが、別のブラウザを試してみる手があります。 有名所の Firefox と Google Chrome で実験してみてください。 なんとなく、どちらかで普通に再生できるような気はするのですが… https://www.mozilla.org/ja/firefox/new/ https://www.google.co.jp/chrome/browser/desktop/ なおAdobe Flash Playerは、必要に応じて各ブラウザ向けの最新版を導入してください。 これでもダメな場合は誰かPCに詳しい人… 業者に頼んでもいいのですけど、質問者さんの家に来てもらって、質問者さんと同じ環境を体験してもらって、その上で対策してもらうのがいいように思えます。 PCを買い替えて解決するかと言われると、ここでの文章でのやりとりによる断片的な情報しか得られない私では判断ができないです。
どうゆうサイトかわからないと答えようがないですが、そのサイトに『ご利用方法』とか『よくある質問(FAQ)』に 曲の聴き方とか、曲が聴けないときなどのことが載っていないでしょうか？ または、ブラウザのIEでは聞けないけどGoogle Choromeだったら聞けるなどの場合もあります。
忍者の場合は忍者ツールへログインし、サービス追加で、ホームページを追加。 名前登録をabc（ホームページ作成する場合のid名） ドメインはプルダウンから選択：例：kan-be するとurlが以下の様に決まる http://abc.kan-be.com/ 管理ページにはftpパラメータが表示されているので、ftpを使ってアップロードする。xyz.mp3という音声データをアップしたとすると http://abc.kan-be.com/xyz.mp3　がフルurlになる訳です。
不明な点が多いのですが、フラッシュファイルとはswfファイルのことですか？ swfファイルであれば読み取り用のデータなのでFLash含めどのソフトでも編集することはできません。 通常Flashで制作したファイルはflaというデータ形式で保存され、 それを動画としてサイト内などで見るにはswfファイルに出力しなければいけません。 そしてFlash内からリンクを張るにはActionscriptという言語でプログラミングする必要があります。 「<a href....」などのHTMLではないのですが、質問内容を読む限り質問者様はご存じないようなので、 Flash側のリンクを編集するのは難しいように思えます。 以上を踏まえると、フラッシュファイルをまるごとaタグで囲ってリンクさせるのが良いと思うのですがいかがでしょうか。 もしHTMLの知識をお持ちでなくてもDreamweaverのプロパティからももちろんリンクの設定はできます。
suzuka http://www.cty-net.ne.jp/~uzgensho/ 簡単と書いてあるけど、慣れるまでは難しいよ(^_^; http://allabout.co.jp/gm/gc/66769/
Flash や AIR は全くの門外漢ですが、「flash tab 遷移」で検索したら Adobe の以下のページにたどり着きました。以下ページの通り tabIndex を設定するのはいかがでしょうか。 http://www.adobe.com/jp/macromedia/accessibility …
> flash.ocxでエラーが頻発する場合、名前を変更してもまたflashplayerのアップデートごとに同じ作業を繰り返さなければいけないということでしょうか アップデートしたらflash.ocxがなくなっていませんか? あればエラーにならないはずですが。 > その場合古いVerのOCXが残ったままになってしまうのですが、それでも問題無いでしょうか 管理者権限でログインしてからflashplayerをインストールしてみてはいかがですか。
ムービークリップ なのか FLV なのか いまひとつハッキリとしませんが。。。 「ムービークリップ」と「FLV」とは本来全く別物ですよ。 (例えば「ムービークリップ」と「音」とも本来全く別物でしょう？) 結局， 今回の話では FLV などどうでも良くて， ８つのムービークリップ内のタイムラインに 何某かのアニメーション(今回はたまたまFLV)を用意しておいた上で それら８つのムービークリップの再生を MovieClip.stop() や MovieClip.play() などで制御したい。 ということですね？ > 使用するムービークリップの数は全部で８つでございます。 それはどこにどのように用意されていてどう見せたいのでしょうか？ > そして次のムービークリップへ移動し、 これでは， 具体的にどういう状況を書かれているのかさっぱりわかりません。 例えば ８つのムービークリップが全て同時に見えるように (例：４×２列など)でステージ上に配置しているのでしょうか？ また例えば ８つのムービークリップは(違うレイヤーの)同じ座標に 重ねて配置してあって表示非表示を切り替えることによって １つずつを見えるようにするのでしょうか？ また例えば ８つのムービークリップはシンボルとして登録してあるだけで 実際にはステージ上に配置しておらず スクリプトによってシンボルをステージ上に呼び出すようにするのでしょうか？ まだまだまだまだ… たくさんの配置や表示方法があります。 ムービークリップはどこにどのように置いているの(置く予定なの)か？ また表示のさせかたはどうするのか？ これらによってすることも変わるわけですから 当然スクリプトも全く違う内容になるわけですよ。 そこら辺の肝心な部分をハッキリ明記してもらわなければ 誰も回答できないと思います。 もし回答できたとしても， それはその回答者が勝手に決め付けた状況での勝手な回答になると思います。 (After effect や adobe Media Encoder の説明など，どうでもいいことです。) > そこにあるボタンをクリックしない限りは > 写っているのは丸のままですが、 > クリックをしたら四角に変化し、 この文章から， 「ボタンのクリック」によって いずれかの「ムービークリップが再生される」ことはわかります。 つまり 逆に言えばムービークリップを配置させたり表示させるのは 手動またはスクリプトになるわけですよね？ わかることはそこら辺のことだけです。 それ以外はわからないことだらけです。 > この場合、どういった方法を用いるのが最適でしょうか？ 「どう表示させたいのか？」 これがわからないため回答不可能です。
素人くさい方法かもしれませんが、 以下の方法で判定可能ではないでしょうか。 //5秒後判定フラグ private ver isAfterFiveMin:Boolean; //タイマー private var timer:Timer = new Timer(5000,1); //5秒後を判定したい処理 private function xxx():void { //5秒後判定フラグに"5秒後ではない"を設定 isAfterFiveMin = false; //Timerイベント発動、5秒後に5秒後判定フラグに"5秒後である"を設定するメソッドを呼び出す timer.addEventListener(TimerEvent.Timer, setIsAfterFiveMin); timer.start(); } private function setIsAfterFiveMin():void { timer.stop(); timer.removeEventListener(TimerEvent.Timer, setIsAfterFiveMin); //5秒後判定フラグに"5秒後である"を設定 isAfterFiveMin = true; } //クリックされたら実行される処理 private function onClick():void { if(!isAfterFiveMin) { //クリックされた時5秒以内なら、ラベルAに飛ばす } else { //クリックされた時5秒後なら、ラベルBへ飛ばす } } 開発環境がなく確認はできていません。 不備があれば修正を加えてお試しください。
メインの最初のイベントとして Stage.scaleMode = "noScale"; と書けば良いのではないでしょうか？ その他それに関するURL 「Flashゲーム講座＆ASサンプル集【Flash の画面表示について】」 http://hakuhin.jp/as/stage.html http://hakuhin.jp/as/stage.html#STAGE_00
んーと、質問者様は何か勘違いされていませんか？ 確かにボカロ曲の PV 動画を再生する上で現在は Flash, 将来的には HTML5 を使っている/使うことになることは確かです。 しかし、それはあくまでも動画を再生するプラットフォームとして上記の技術を使っているだけで、動画作成者が全員 Flash を使っているという事ではありません。現在では Flash は選択肢の一つでしかありません。 たとえば、以下の URL のページは手書き PV の作り方の一例を書いていますが、ページを読めばわかる通り PV を作っていくうえで Flash も HTML5 も使っておりません。 http://note.chiebukuro.yahoo.co.jp/detail/n242811 また、MMD PV も制作する上で Flash は必要ありませんし、MMD 自体にも Flash の技術は使用していません。 ですので、 > ボカロ曲の動画作成などではFlashとHTML5 > どちらを使うようにしたら良いでしょうか。 という問いに対しては、「どちらも特に必要ではありません。動画作成のための学習としては的外れです」と回答いたします。
残念ながら動作しません。 Adobe AIRは現在Windows RTでの動作はサポートされていません。 Windows RT向けのAIRランタイムも無いですし、AIR SDKにはWindows RT向けに書き出す機能はありません。
JavaScriptはメモ帳でも書くことできますよ http://dotinstall.com/lessons/basic_javascript_v … ドットインストール(はじめ方の動画) FLASHは作るためのソフトが必要です 無料のでは http://parafla.coaworks.jp/ parafla http://www.cty-net.ne.jp/~uzgensho/ Suzuka http://vectorian.com/giotto/ vectiruan giotto があります
該当記事のスクリプトは、AS2.0で書かれたものなのでAS2.0書き出しにしてください。 AS3.0書き出したいという場合には、スクリプト自体をAS3.0で書き直す必要があります。
> Flash Professional CS6のHTML5対応書き出しによる、EaseJSライブラリを使ったCanvasアニメーションで と、言う事はHTML5で作らなければならないのでしょうか？ そうです。 CanvasオブジェクトはHTML5対応ブラウザでないと動作しません。
そのBallというクラスの定義は、 class Ball extends MovieClip という継承宣言は入っていますか？ stageにaddChild()できるのは、MovieClipやSpriteクラスを継承したクラスのインスタンスだけですよ。
画像が透過しているかどうかでクリックイベントの出方は変わりません。 マウスの位置を見て処理を分けるなり、画像を分割しておくなりする必要があります。
基本的には，「降参！」です～。 つまり「完全なループなし」の検索方法は考え付けませんでした。 しかし， 検索(走査)用データの下準備にループを使用するだけで 検索(走査)自体にはループを使用しない方法であれば考え付きました。 一応，その半分降参状態の方法例を書きます↓。 //----------------------------------------- //配列「_array」を作成 var _array:Array = new Array(); //変数「img」に適当なダミー値を入れておく var img = "dummy"; _array.push({ data:img,_speed:0}); _array.push({ data:img,_speed:31}); _array.push({ data:img,_speed:62}); _array.push({ data:img,_speed:93}); _array.push({ data:img,_speed:124}); _array.push({ data:img,_speed:155}); _array.push({ data:img,_speed:186}); _array.push({ data:img,_speed:217}); _array.push({ data:img,_speed:248}); _array.push({ data:img,_speed:279}); _array.push({ data:img,_speed:309}); _array.push({ data:img,_speed:338}); _array.push({ data:img,_speed:367}); //走査用のキー「_scan」を下準備 (※ココにループ！) for (var i:int = 0; i < _array.length; i++) { _array[i]._scan = Math.abs(_array[i]._speed - 150); } //「_scan」をキーにして数値順でソート _array.sortOn("_scan", Array.NUMERIC); //１つ目の「_speed」キーの値を出力窓に出力 trace(_array[0]._speed);//→「155」 //----------------------------------------- 検索(走査)自体にループ文は使用していないでしょう？ (もっとも，ActionScript コンパイル後のマシン語に近い言語では，sortOn 内部でループを実行させているのかもしれませんが。) このあと， _array.sortOn("_speed", Array.NUMERIC); を実行すれば 配列の中身は元通りの順に戻ります。
こんにちは Ajaxの流行で、業務用のFlashウィジェットは最近あまり見なくなったのですが、しっかり生き残ってるものもありますねｗｗｗ 仰っている動作状況だと、環境がいまひとつわからないのですが、一般的な「Flash on ブラウザ」環境ですと、２つの条件があります。 ■Flashを表示しているHTML側の設定 開かれるFlashが大きく画面をはみ出してしまう場合は、収めているHTML側のボックスで（だいたい<object>を内包している<div>）に style="height:600px;overflow:scroll" などをつけてブラウザのスクロールバーを出せばOKです。 ■表示されているFlash自身の設定 Flash側の画面サイズ（Flashでいうステージサイズ）がそもそも大きすぎる場合は、Flash側でステージを狭めスクロールバーを出す必要があります。 > Flashのデザインを開設したサイトを見ますと とありますが、これはおそらく、Flash Professional を使って開発する場合の話だとも思うのですが、Scroll Pane Componentというものを使うと思います。ただ、ビジネス用ですと、開発はおそらくFlash Builderなので、UI定義部分でScrollPaneでラップすることになり、処理的にはそんなに難しいものではありません。 いずれの場合にも、昨今Flashで作られたアプリはエンジニアも限られ、担当者の退社やツールの開発が止まってしまったこともあり、開発側はあまり手をかけたくないのが本心ではないでしょうか。 お見受けしたところ、どうもHTML側の改修で済みそうな感じがするのですが。。
一般的には、 1) 40個の値を昇順/降順どちらでも並べ替え 2) 端から値を２つずつ比較 3) 値が異なってれば値の種類の数を＋１ とか。 3, 7, 15, 4, 8, 7, 12, 1, 10, 8, 9, 7 だと分かりにくいけど、 1, 3, 4, 7, 7, 7, 8, 8, 9, 10, 12, 15 なら数えやすいみたいな。 -- > 実際はテキストボックスが40個ほどあり でも、入る数字が00～99の２桁なら、 1) 0～99までループ 2) 対象の数字と40個の数字と一致するものがあれば種類の数を＋１ とかでもループ回数はたかが知れてるのでＯＫだと思いますし。
ブラウザを開いたところにそのSWFファイルをドラッグ&ドロップしてみてください。 多分それで再生できると思います。
一応コチラ↓をご参考に。 「Flash（ActionScript3.0）でゲーム制作を行っています。 - Yahoo!知恵袋」 http://detail.chiebukuro.yahoo.co.jp/qa/question …
スクリプトとしてはとりあえず 次のような感じ↓で良いのではないでしょうか。 //==================================== var myWall:Wall = new Wall(); myWall.x = 275; myWall.y = 200; addChild(myWall); var myBox:Array = new Array(10); for (var i:int=0; i<10; i++) { myBox[i] = new Box(); myBox[i].x = Math.random() * 550; myBox[i].y = Math.random() * 400; addChild(myBox[i]); //------↓以降を追加変更↓------ //(各Boxマウスオーバーでハンドカーソルにする(要る？)) myBox[i].buttonMode = true; //各Boxクリック時に関数 removeBox を実行 myBox[i].addEventListener(MouseEvent.CLICK,removeBox); } //関数 removeBox の定義 function removeBox(e:MouseEvent):void { //クリックされたターゲットをこの階層の表示リストから削除 removeChild(DisplayObject(e.currentTarget)); } //==================================== 上記スクリプトの最後の部分↓ですが //クリックされたターゲットをこの階層の表示リストから削除 removeChild(DisplayObject(e.currentTarget)); 以下ではこの行についてのみの説明を書きます。 この最後の行は 次↓のように変更してもかまいません。 removeChild(Box(e.currentTarget)); または Box クラスが MovieClip クラスを継承している場合は 次↓のように変更してもかまいません。 removeChild(MovieClip(e.currentTarget)); もし removeChild(e.currentTarget); のように 引数を「e.currentTarget」だけにした場合， その「e.currentTarget」は 単なる「Object」クラスのインスタンスとして認識されてしまうため removeChild(=表示リストから削除する) という命令を使うことができなくなります。 (「Object」クラスのインスタンスには，例えば「配列」や「関数」や「音」など "表示されないオブジェクト" も含まれるため「表示リストから削除する」という命令が通用しない。) したがって少なくとも クリックされたターゲットを "表示オブジェクト(DisplayObject)" として認識させる必要があります。 そのために DisplayObject(e.currentTarget) のように書いて イベントターゲットを「DisplayObject」に変換しているわけです。 MovieClipクラスも，Boxクラスも， 少なくとも DisplayObjectクラス は継承しているはずですから， Box(e.currentTarget) や MovieClip(e.currentTarget) などにしてもかまわないということになります。 もし Box クラスが MovieClip クラスを継承していれば クラスの継承関係は次のようになります。 Object > EventDispatcher > DisplayObject > InteractiveObject > DisplayObjectContainer > Sprite > MovieClip > Box これらクラスのうち DisplayObject 以下のクラスとして認識させれば removeChild できるという意味です。 認識させるクラスは作者の都合で適当に決めれば良いです。 ちなみに， Array(配列) クラスであれば継承関係は次のようになります。 Object > Array Function(関数/メソッド) クラスであれば継承関係は次のようになります。 Object > Function Sound(音) クラスであれば継承関係は次のようになります。 Object > EventDispatcher > Sound これら３つはどれも DisplayObject を継承していませんよね？ したがって これらはどれも元から表示リストに加える(addChild する)ことができないので 表示リストから削除する(removeChild する)こともできないわけです。 (他にも DisplayObject でないオブジェクトはたくさん存在します。) または， 別の書き方として次のように変更しても良いでしょう。 removeChild(e.currentTarget as DisplayObject); removeChild(e.currentTarget as Box); removeChild(e.currentTarget as MovieClip); この「as」は ActionScript の略(=AS)ではなく， 英語の前置詞である「as (…として)」が語源でしょうね。 【英文例】I looked up to him as an engineer. 【和訳文】私は技術者として彼を尊敬している。 【Script】removeChild(e.currentTarget as DisplayObject); 【和訳文】表示オブジェクトとしてのイベントターゲットを表示リストから削除
そうですね。 ＃１の方も書かれていますが 絵やアニメーションにもよりますけど Flash のみでも結構(かなり)な絵は描けますよ。 Flash は ドロー系(ベクター系/ベクトル系) ソフトですから Adobe Illustrator で描けるような絵はたいてい描けると思って良いです。 つまり「カッチリ」系の画はかなり描けるソフトだと思います。 と言うか Flash は元々 Smart Sketch (スマートスケッチ) というドロー系お絵かきソフトが前身です。 (Google検索例 http://www.google.co.jp/search?hl=ja&source=hp&q … ) ですから， Illustrator では描きにくい「フワッ」としていたり味わいのある水彩画風な画や Illustrator が苦手とする写真加工などは Flash も同じく苦手とする分野です。 (つまり Adobe Photoshop で描くようなペイント系(ビットマップ系)の画や写真加工にはあまり向いていません。) ↓まずは Flash でのお絵描きの基本から 「ひっぱってつまんでほいほいほい♪」 http://f-site.org/articles/2002/01/01000000.html ※「この記事の詳細を読む」をクリック 「アクアなボタンを作ってみよう！」 http://f-site.org/articles/2002/04/01000000.html ※「この記事の詳細を読む」をクリック ↓Flash のみで描かれた画です(FLAのDL可能) 「Vectorkid.com - Tutorials - illustrating, flash, vector, art, tutorials, drawing, effects, 3d」 http://www.vectorkid.com/tutorials.html ※ PAGE 2 へも続きます ↓次に Flash でのアニメーション作成技法 「タップ割り」 http://f-site.org/articles/2003/09/22190604.html ※「ムービーを見る」をクリック 「ブレ」 http://f-site.org/articles/2003/10/12003250.html ※「ムービーを見る」をクリック 「フォロー」 http://f-site.org/articles/2005/10/13012123.html ※「ムービーを見る」をクリック 「ケシコミ」 http://f-site.org/articles/2005/12/05231617.html ※「ムービーを見る」をクリック 「歩き」 http://f-site.org/articles/2006/05/12160729.html ※「ムービーを見る」をクリック 「走り」 http://f-site.org/articles/2007/02/28170546.html ※「ムービーを見る」をクリック ↓Flash で作成されたTVアニメーションなどの例 「rumparo-tita web」 http://rumparo-tita.jp/ 「ズモモとヌペペ - Wikipedia」 http://ja.wikipedia.org/wiki/%E3%82%BA%E3%83%A2% … 「鷹の爪団のFlashアニメーション講座 デジハリ・オンラインスクール」 http://online.dhw.co.jp/feature/tume/ 「ブラック・ジャック ＜Flashアニメ＞」 http://www.b-ch.com/ttl/index.php?ttl_c=1533 などなど。 ↓最後に手前味噌ですが 　私が Flash のみで描いたみた 　いかにも Flash 的だと思う画例です。 　(私はココでは ActionScript 系の回答ばかりしてますが 　実は Flash などでの作画系の方が本職に近いです。)
> URLVariables　や　URLRequest　や　URLLoader　あたりが未対応なのでしょうか？ AIR for AndroidでURLLoader等を使っているサンプルもあるので、 未対応ということはなさそうです。 が、私はAIRには詳しくないので、 　http://livedocs.adobe.com/flex/3_jp/langref/flas … この辺を参考に、 ・ioErrorイベントでエラーの有無を調べる ・httpResponseStatusイベントで通信の状態を調べる ・サーバ側のログをチェック などといった方法で調査してみてください。
下記の点をはっきりさせておかないと、答えるのは難しいですね。 ・主さんがおっしゃる音ゲーのルールとは ・主さんが、どこまでこのコードを理解しているのか ・自分でやってもわからないとありますが、どのへんまでやったのか
譜面は1つしかありませんが、こんな感じですかね。 1フレーム目に下記のコードをコピペすれば動くと思います。 Eキーをタイミングよく押すとあたり判定が走ります。 内容はソースを読めば、すぐにわかると思います。 import flash.events.Event; import flash.display.Sprite; import flash.display.Graphics; import flash.display.MovieClip; import flash.display.DisplayObjectContainer; import flash.events.KeyboardEvent; import flash.ui.Keyboard; import flash.display.StageAlign; import flash.display.StageScaleMode; stage.align = StageAlign.TOP_LEFT; stage.scaleMode = StageScaleMode.NO_SCALE; graphics.lineStyle(1, 0xffffff, 0.6); graphics.moveTo(0, stage.stageHeight * 0.5); graphics.lineTo(stage.stageWidth, stage.stageHeight*0.5); var markList:Array = []; const speedX:Number = -5; var interval:int = 50; var count:Number = 0; var hitMC:MovieClip = createHitArea(); addChild(hitMC); function _onKeyDown(e:KeyboardEvent):void { if (e.keyCode == Keyboard.E) { hitMcScale(); checkHitMark(); } } function checkHitMark():void { for (var i:int = 0; i < markList.length; i++) { if (hitMC.hitTestObject(markList[i])) { markList[i].hit(); break; } } } function hitMcScale(s:Number = 1.4):void { hitMC.scaleX = hitMC.scaleY = s; } function createHitArea():MovieClip { var mc:MovieClip = new MovieClip(); var g:Graphics = mc.graphics; g.beginFill(0x00ffaa); g.drawCircle(0, 0, 40); g.endFill(); mc.x = 50; mc.y = stage.stageHeight*0.5; return mc; } function update():void { count ++; if (count%interval == 0) { var mark:MovieClip = createMark(); mark.position(stage.stageWidth, stage.stageHeight*0.5) .appendTo(this); markList.push(mark); } for (var i:int = 0; i < markList.length; i++) { if (markList[i].isKilled) { markList.splice(markList.indexOf(markList[i]), 1); continue; } markList[i].update(); } if (hitMC.scaleX > 1) { hitMC.scaleX -= 0.05; hitMC.scaleY -= 0.05; } else { hitMC.scaleX = hitMC.scaleY = 1; } } function createMark():MovieClip { var sp:MovieClip = new MovieClip; var _speedX:Number = speedX; var _speedY:Number = 0; var g:Graphics = sp.graphics; g.beginFill(0xffffff*Math.random()); g.drawCircle(0, 0, 30); g.endFill(); sp.cacheAsBitmap = true; sp.update = function():void { this.x += _speedX; this.y += _speedY; if (this.x < -this.width - 30 || this.y > stage.stageHeight+100 || this.y < -100) { this.kill(); } }; sp.position = function (x:int, y:int):MovieClip { sp.x = x; sp.y = y; return this; } sp.appendTo = function (d:DisplayObjectContainer):MovieClip { d.addChild(sp); return this; } sp.kill = function ():void { sp.isKilled = true; sp.parent.removeChild(this); } sp.hit = function():void { _speedX = 20; _speedY = Math.random()*30-15; } return sp; } stage.addEventListener(KeyboardEvent.KEY_DOWN, _onKeyDown); addEventListener(Event.ENTER_FRAME, function(e:Event):void{ update(); });
このような「配列の配列」はジャグ配列と呼ばれます。 2次元配列とは違い、配列の各要素が別個の配列になっているので、 行ごとに列数を変えることができるのが大きな特徴です。 test[0] □□□ test[1] □□□□□□ test[2] □□□□ test[3] □□□□□
＝＝＝【本題の回答の前に】＝＝＝＝＝＝＝＝＝＝＝＝ ２つ目の for文 の一部分に間違いがありますね。 for(var i:int; i<player01Card.length ;i++) { 　↓iの初期値が抜けてます↓ for (var i:int = 0; i<player01Card.length; i++) { と言うか... 本来 var i は最初の for文 の方などですべきです。 最初の for文↓ for(i=0;i<60;i++){ 　↓変更↓ for (var i:int=0; i<60; i++) { ２つ目の for文↓ for(var i:int; i<player01Card.length ;i++) 　↓変更↓ for (i = 0; i<player01Card.length; i++) { 　 . 　 ＝＝＝【本題の回答】＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > 何が問題なのか、 これについては， ２つ目の for文 の後辺りに trace(i); と書いてムービープレビューしてみると その問題の原因がわかると思います。 for文 を抜けた後 変数 i に代入された値は player01Card.length (=60) になって止まっているため どのボタンをクリックしても player01Card[60].gotoAndStop(36); が動作します。 その player01Card[60] は存在しないはずなのでエラーが出るのです。 この件に関しては 書かれていらっしゃる http://oshiete.goo.ne.jp/qa/4646183.html で 超スローモーション的な動作説明を入れて詳細に書いています。 　 > ＞evnet.target.gotoAndStop(36);としてしまうと > カードの合成前の絵柄やテキストがgotoAndStopされてしまう こちらに関しては， まず第一に書かれていらっしゃる日本語の意味が良くわかりません。 「カードの合成前の絵柄やテキストがgotoAndStopされてしまう」とは？？？ さらに， 私の方で実際に作って検証してみましたが 無事にクリックした Card 内が フレーム36 で停止しましたよ。 ひょっとして Card のムービークリップは さらにその中に 子ムービークリップ が入っていて その 子ムービークリップ 内にも複数フレームがあって その中でも絵柄が変わるとか？？？ とにかく何だか良くわかりませんが， これに関しては target ではなくcurrentTarget を使えば解決するかもしれません。 evnet.target.gotoAndStop(36); 　↓変更↓ event.currentTarget.gotoAndStop(36); 　 . 　 　 ＝＝＝【オマケの回答】＝＝＝＝＝＝＝＝＝＝＝＝＝＝ target や currentTarget を使わずに Card クリック時に クロージャ(関数の一種) を実行させる方法もあることはあります。 ◎クロージャを使う方法例↓ //------------------------------------- var player01Card:Array = new Array(); //60枚のカードを生成 for (var i:int=0; i<60; i++) { player01Card[i] = new Card(); addChild(player01Card[i]); //(↓※私の個人的な動作検証用の行) //player01Card[i].x = i * 8; } for (i = 0; i<player01Card.length; i++) { //player01Card[i] クリック時に関数 onCardClick の戻り値を実行 player01Card[i].addEventListener(MouseEvent.CLICK,onCardClick(player01Card[i])); } //クロージャ を返す関数 onCardClick の定義 function onCardClick(obj:Card):Function{ //戻り値として クロージャ を返す return function():void{ obj.gotoAndStop(36); } } //------------------------------------- ※クロージャ は ActionScript 専用用語ではなく .　多くの言語で使われる一般的プログラム用語です。 　 　 その他， 私が「ただ考えてみた」というだけのことで 全くお薦めできない方法ですが 次のようにしても target や currentTarget を使わなくてもできることはできます。 (カードどうしが重なることがある上で，さらにカードの上下関係が変わる場合などは，このままでは使えません。) ◎カードの親クリックでマウスとヒットしたカードに命令する方法↓ //------------------------------------- var player01Card:Array = new Array(); //60枚のカードを生成 for (var i:int=0; i<60; i++) { player01Card[i] = new Card(); addChild(player01Card[i]); //(↓※私の個人的な動作検証用の行) //player01Card[i].x = i * 8; } //この階層に対してクリック時の関数を定義 this.addEventListener(MouseEvent.CLICK, function(event:Event){ //配列要素の最後から最初に向けてループ for(i = player01Card.length-1; i >= 0; i--){ //配列要素にマウスがヒットしていれば if(player01Card[i].hitTestPoint(player01Card[i].parent.mouseX,player01Card[i].parent.mouseY,true)){ //対象カード内をフレーム36に進める player01Card[i].gotoAndStop(36); //この for文 を抜ける break; } } } ); //------------------------------------- 　
質問内容が欲張り過ぎでしょう。 まるで業者に対する客の仕様発注書です。 質問に全て回答するなら本ができてしまいますよ。 (内容がそれだけ難しいという意味ではなく，「論理」や「手順」を説明するには相当な字数や画像が必要という意味。) 字数制限も厳しく画像が１枚しか貼れないココでは説明不可能です。 特に， >・上段の画像にマウスオーバーすると青い枠線が表示される。 それくらいのこと モーショントゥイーンとかシェイプトゥイーンとか使って自力で作成すべきでしょう。 とにかく字数制限もあるため 上記以外の項目についてスクリプトのみ(日本語説明抜き)で回答します。 CS5 で新規ドキュメントを作成し フレーム1にコピペするスクリプト例です↓。 //--------------------------- [SWF(frameRate = "20",width = "940",height = "380")] var col_arr:Array = [0xFF6666,0x66FF66,0x6666FF,0xCCCC00,0xCC66CC,0x66CCCC]; var c_len:int = col_arr.length; var cnt:int = 0; var big_mc_arr:Array = new Array(); for (var i:int = 0; i<c_len; i++) { big_mc_arr[i] = new MovieClip(); with (big_mc_arr[i].graphics) { beginFill(col_arr[i]); drawRect(0,0,900,280); endFill(); } big_mc_arr[i].x = 20; big_mc_arr[i].y = 20; addChild(big_mc_arr[i]); } var slide_mc:MovieClip = new MovieClip(); slide_mc.x = 50; slide_mc.y = 310; addChild(slide_mc); var small_mc_arr:Array = new Array(); for (i= 0; i<c_len*2; i++) { small_mc_arr[i] = new MovieClip(); with (small_mc_arr[i].graphics) { beginFill(col_arr[(i>=c_len)? i-c_len:i]); drawRect(0,0,160,50); endFill(); } small_mc_arr[i].n = i; small_mc_arr[i].x = 170 * i; small_mc_arr[i].addEventListener(MouseEvent.CLICK,setCnt); slide_mc.addChild(small_mc_arr[i]); } var mask_mc:MovieClip = new MovieClip(); with (mask_mc.graphics) { beginFill(0x000000); drawRect(0,0,840,50); endFill(); } mask_mc.x = 50; mask_mc.y = 310; addChild(mask_mc); slide_mc.mask = mask_mc; var l_btn_shape:Shape = new Shape(); with (l_btn_shape.graphics) { beginFill(0x666666); drawRect(0,0,20,50); endFill(); beginFill(0xFFFFFF); moveTo(3,25); lineTo(15,18); lineTo(15,32); endFill(); } var l_btn:SimpleButton = new SimpleButton(); with (l_btn) { upState = overState = downState = hitTestState = l_btn_shape; x = 20; y = 310; } addChild(l_btn); var r_btn_shape:Shape = new Shape(); with (r_btn_shape.graphics) { beginFill(0x666666); drawRect(0,0,20,50); endFill(); beginFill(0xFFFFFF); moveTo(5,18); lineTo(17,25); lineTo(5,32); endFill(); } var r_btn:SimpleButton = new SimpleButton(); with (r_btn) { upState = overState = downState = hitTestState = r_btn_shape; x = 900; y = 310; } addChild(r_btn); slide_mc.addEventListener(Event.ENTER_FRAME,approacheSlide); function approacheSlide(e:Event):void { e.target.x += ((cnt*170+50)-e.target.x)/5; if (e.target.x>50) { e.target.x-=c_len*170; cnt-=c_len; } else if (e.target.x < 50-c_len*170) { e.target.x+=c_len*170; cnt+=c_len; } } l_btn.addEventListener(MouseEvent.CLICK,upCnt); function upCnt(e:Event):void { cnt+=1; setBigMC(); } r_btn.addEventListener(MouseEvent.CLICK,downCnt); function downCnt(e:Event):void { cnt-=1; setBigMC(); } function setCnt(e:Event):void { cnt=2-e.currentTarget.n; setBigMC(); } function setBigMC():void { addChild(big_mc_arr[(cnt <= 2-c_len)?2-cnt-c_len:2-cnt]); } setBigMC(); var tmr:Timer=new Timer(5000,0); tmr.addEventListener(TimerEvent.TIMER,downCnt); tmr.start(); this.addEventListener(MouseEvent.MOUSE_OVER,stopTimer); function stopTimer(e:MouseEvent):void { tmr.stop(); } this.addEventListener(MouseEvent.MOUSE_OUT,startTimer); function startTimer(e:MouseEvent):void { tmr.start(); } var point_sh:Shape = new Shape(); with (point_sh.graphics) { beginFill(0x666666); moveTo(0,0); lineTo(0,-3); lineTo(74,-3); lineTo(80,-8); lineTo(86,-3); lineTo(160,-3); lineTo(160,-0); endFill(); } point_sh.x=390; point_sh.y=309; addChild(point_sh); //--------------------------- 上記スクリプトを フレーム1 にコピペして そのままパブリッシュやムービープレビューなどすれば動作確認できると思います。 本来 Sprite で済む部分にも あえて MovieClip を使っているのは 「本来そのようなものはそういうムービークリップを手作業で作れば良い。」 という意味合い(思い)を含めています。
追加 前述の参考URL最新版のアップデート（インストール）や、デスクトップ用IEの「ツール」「アドオンの管理」から「無効」を「有効にする」に変更してみてください。（「Shockwave Flash Object」） 更に、互換表示一覧のアップデートが無効担っている場合「有効」に変更
> BitmapDataの操作で、透明度を下げて次々と加算していき… その通りです！ bitmapData.draw() は、第3引数に colorTransform を取ります。 colorTransform を使えば、RGBA(赤・緑・青・透)を変更しつつ、bitmapData に転写することができます。 例えば、bitmapData に video のキャプチャを、透明度15分の1で転写するなら… - - - - - bitmapData.draw(video, null, new ColorTransform(1, 1, 1, 1 / 15)); - - - - - とすればオッケーです。 （ColorTransform の引数についての詳細については、興味がありましたら調べてみてください。） これを75回繰り返せば、75枚の画像を1枚の画像に重ね合わせられます。 ここでは video を転写するときに透明度を15分の1にしましたが、 全ての video のキャプチャを普通に bitmapData に転写してから、最後に透明度を15分の1にして統合しても、もちろん構わないです。
＃１＆＃２です。 ＃２では， なぜか【添付図】が付かなかったため 再添付します↓。
２万円では、企業に発注するには難しいみたいですよ。 プログラマの手取りが、日給１万円くらいで、企業に発注する場合は一日３万くらいが相場みたいです。 また、制作に１日でも、仕様書なんかを書くのに１日つくので、最低でも６万～１０万くらいは、覚悟しておいたほうがいいみたいです。 なので、個人がお願いするには、少しムリがあるかと。 まぁ、１人の人が一日で作って、給料が発生し、経費や会社運営で消えていくので仕方がないんだとは思いますが。 それでもとおっしゃるのなら、似たようなフリーソフトを作っている人を探して、有料で改造をお願いしてみるのはいかがですかね？ 大概のフリーソフトのReadMeには、何らかの連絡方法が書いてあります。 古いソフトだとアドレス変えている可能性も高いですが、企業に発注するよりかは、安く作ってくれるかと。 フリーソフトを作る人の中には、元々プログラマだった人もいますし、きちんと作る人も多いです。 http://www.vector.co.jp/ 強いて言えば、カテゴリーがFlashなのは気になりますが。 Flashアプリって、通常のアプリの中には入れないような？入れてもいいような？（苦笑
ご質問で書かれていらっしゃるように 「フレーム移動を使う」＆ 「極力現在のスクリプトやそれを書く場所を変えない」 という条件でしたら， リセットボタンに書かれたスクリプトのみを 単純に次のように修正すれば良いと思います。 //------------------ on (release) { //変数 i に 1～2 を入れながらループ for (i=1; i<=2; i++) { //「R_mc○」を削除 this["R_mc"+i].removeMovieClip(); } gotoAndStop(1); gotoAndStop(2); } //------------------ レイヤーに配置した MC を swapDepths() すると レイヤーとの結びつきが消えて宙に浮きます。 フレーム移動をさせて またその MC が出没したフレームに戻すと レイヤーに結びついた MC が再び現れて 宙に浮いた MC と共存してしまいます。 それらの MC を共存させたくない場合は 宙に浮いた MC を消してやれば良いでしょう。 その MC を消すメソッドが removeMovieClip() です。 なお removeMovieClip() では レイヤーに結びついた MC つまり 手動で配置した MC は消えません。 removeMovieClip() では ActionScript で生成や配置した MC や swapDepths() で宙に浮いた MC のみを消すことができます。 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ しかし... そもそもフレーム移動などが要る状況なのでしょうか？ もし，フレーム移動させる必要がないのであれば 私でしたらメインのタイムラインをフレーム1のみにして さらにリセットボタン自体に書いたスクリプトは全て消して そしてそのボタンには例えば「reset_btn」というインスタンス名を付けて フレームに書くスクリプトを次のようにしますけどね↓。 //--------------------------- //深度カウント用変数を用意 var dep_cnt:Number = 1; //変数 i に 1～2 を入れながらループ for (var i:Number = 1; i<=2; i++) { //★「R_mc○」内の再生を停止 this["R_mc"+i].stop(); //★「R_mc○」内の変数 target_mc に「W_mc○」の参照を代入 this["R_mc"+i].target_mc = this["W_mc"+i]; //◆「R_mc○」内の変数 start_x に「R_mc○」自身の初期x座標を代入 this["R_mc"+i].start_x = this["R_mc"+i]._x; //◆「R_mc○」内の変数 start_y に「R_mc○」自身の初期y座標を代入 this["R_mc"+i].start_y = this["R_mc"+i]._y; //「R_mc○」押下時に関数 dragMC を実行 this["R_mc"+i].onPress = dragMC; //「R_mc○」を放した時に関数 dropMC を実行 this["R_mc"+i].onRelease = dropMC; //「R_mc○」をMC外で放した時にも関数 dropMC を実行 this["R_mc"+i].onReleaseOutside = dropMC; } //関数 dragMC の定義 function dragMC():Void { //深度カウント用変数をカウントアップ dep_cnt++; //押下されたMCをその深度に移動 this.swapDepths(dep_cnt); //押下されたMCのドラッグを開始 this.startDrag(); //★マウスが動く度に関数 watchHitW_mc を実行 this.onMouseMove = watchHitW_mc; } //関数 dropMC の定義 function dropMC():Void { //放されたMCのドラッグを終了 this.stopDrag(); //★マウスが動く度に関数 watchHitW_mc を実行するのを解除 delete this.onMouseMove; } //★関数 watchHitW_mc の定義 function watchHitW_mc():Void { //★ドラッグ中のMCがそのMC内の変数 target_mc に //　代入したMCとヒットしていれば if (this.hitTest(this.target_mc)) { //★ドラッグ中のMC内をフレーム2で停止 this.gotoAndStop(2); } else { //★それ以外はドラッグ中のMC内をフレーム1で停止 this.gotoAndStop(1); } } //◆「reset_btn」クリック時に実行するメソッドの定義 reset_btn.onRelease = function():Void { //◆変数 i に 1～2 を入れながらループ for (i=1; i<=2; i++) { //◆「R_mc○」内の再生をフレーム1で停止 this._parent["R_mc"+i].gotoAndStop(1); //◆「R_mc○」の x座標 を R_mc○.start_x に戻す this._parent["R_mc"+i]._x = this._parent["R_mc"+i].start_x; //◆「R_mc○」の y座標 を R_mc○.start_y に戻す this._parent["R_mc"+i]._y = this._parent["R_mc"+i].start_y; } }; //--------------------------- 注釈行に◆を入れたところが，付け足し部分です。 「R_mc○」の初期座標は この場合特に「R_mc○」自身内の変数に代入保存する必要はありません。 前回までのスクリプトで， 「R_mc○」内の変数に「W_mc○」の参照を保存したので それに合わせているだけです。 MC の外(メインのタイムラインなど)に勝手な変数でも作って その変数に初期座標を代入保存でも良いですし また， 座標保存用の配列でも作って その配列の要素に初期座標を代入保存しても良いです。 　 フレーム移動をさせない場合の作成状態の図↓
１つのインスタンスに対して 同じ種類のイベントハンドラメソッドを 重複していくつも定義することはできません。 もし重複定義した場合は 後から定義した方だけが残って 前に定義した方は消えます。 ご質問で書かれて書かれていらっしゃるスクリプトを 同じフレームに全てまとめて書かれたのであれば， うまく行かない原因はこの辺にあるのではないかと思います。 例えば A という MC があったとして 次のようなスクリプトを書くと A をクリックしても ２つ目に定義したメソッドしか実行されません。 A.onRelease = function() { trace("１つ目のイベントハンドラメソッド実行"); }; A.onRelease = function() { trace("２つ目のイベントハンドラメソッド実行"); }; これは 同じ変数に違う値を入れて行くのと同じことで 普通は１つの変数には違う値を重複して入れることはできないので 次のようなことをすると 変数a の値は結局 8 になりますよね？ a = 5; a = 3; a = 8; これと同じ現象が起こります。 ちなみに本題とは関係ありませんが ボタンやMCに直接書くイベントハンドラの方は重複定義できます。 例えばある MC があったとして その MC 自体に次のようなスクリプトを書くと ２つとも実行されます。 on (release) { trace("１つ目のイベントハンドラ実行"); } on (release) { trace("２つ目のイベントハンドラ実行"); } ================================== 話を本題に戻して対処法です。 考え方やスクリプトの書き方などは無数にありますが 次のように書くのも１つの方法でしょう。 //--------------------------- //深度カウント用変数を用意 var dep_cnt:Number = 1; //変数 i に 1～2 を入れながらループ for (var i:Number = 1; i<=2; i++) { //★「R_mc○」内の再生を停止 this["R_mc"+i].stop(); //★「R_mc○」内の変数 target_mc に「W_mc○」の参照を代入 this["R_mc"+i].target_mc = this["W_mc"+i]; //「R_mc○」押下時に関数 dragMC を実行 this["R_mc"+i].onPress = dragMC; //「R_mc○」を放した時に関数 dropMC を実行 this["R_mc"+i].onRelease = dropMC; //「R_mc○」をMC外で放した時にも関数 dropMC を実行 this["R_mc"+i].onReleaseOutside = dropMC; } //関数 dragMC の定義 function dragMC():Void { //深度カウント用変数をカウントアップ dep_cnt++; //押下されたMCをその深度に移動 this.swapDepths(dep_cnt); //押下されたMCのドラッグを開始 this.startDrag(); //★マウスが動く度に関数 watchHitW_mc を実行 this.onMouseMove = watchHitW_mc; } //関数 dropMC の定義 function dropMC():Void { //放されたMCのドラッグを終了 this.stopDrag(); //★マウスが動く度に関数 watchHitW_mc を実行するのを解除 delete this.onMouseMove; } //★関数 watchHitW_mc の定義 function watchHitW_mc():Void { //★ドラッグ中のMCがそのMC内の変数 target_mc に //　代入したMCとヒットしていれば if (this.hitTest(this.target_mc)) { //★ドラッグ中のMC内をフレーム2で停止 this.gotoAndStop(2); } else { //★それ以外はドラッグ中のMC内をフレーム1で停止 this.gotoAndStop(1); } } //--------------------------- 　 注釈行で★を付けたところが 主な変更部分です。 上記スクリプトのミソは //★「R_mc○」内の変数 target_mc に「W_mc○」の参照を代入 this["R_mc"+i].target_mc = this["W_mc"+i]; だと思います。 例えば「R_mc1」でしたらその「R_mc1」内に 「target_mc」という変数(プロパティとも言える)を用意して その変数にドラッグするターゲットとなる「W_mc1」の参照を代入しておくわけです。 for文 や i を使わず 単純に書けば次のようになります。 R_mc1.target_mc = W_mc1; そしてドラッグ中の「R_mc1」が それ自身の変数に格納した「W_mc1」とヒットしていれば ドラッグ中の「R_mc1」内をフレーム2に進めるているわけです。 ちなみに 文字列 や 数値 や ブール値 などを除いて ActionScript の代入とは基本的に参照代入です。 ActionScript 1.0 でも 2.0 でも 3.0 でも (ついでに JavaScript でも) その点は共通です。 R_mc1.target_mc = W_mc1; これで 「R_mc1」内の変数 target_mc に「W_mc1」への参照が格納されます。 決して 「R_mc1」内に target_mc という名で「W_mc1」自体が入り込むわけではありません。 　 ================================== あと，ちょっと気になったので確認まで。 "質問文" のMCのインスタンス名の後に付けてある 1 とか 2 とかの数字が 半角になってたり全角になってたりしていますが 実際の作成物では全角など使わずちゃんと半角を使ってますよね？
Flash CS 5.5 は良いとして 今回のご質問での ActionScript 2.0 とは微妙ですね。。。 普通は 「ActionScript 2.0 を使用→Flash Player 7 以上用 SWF をパブリッシュ」 というのが一般的なのですが ActionScript 2.0 は場合によって Flash Player 6 でも 動作するのです。 今回質問されているものの場合 ちょうどその境界部分の辺に関係する箇所があって Flash Player 6 用と Flash Player 7 以上用 SWF とでは 違って来る部分が出て来るので どう回答すべきか悩むところです。 (具体的には getNextHighestDepth が使えるか使えないかという違いがあります。) しかしまあ， 字数もそんなに多くはならないと思うので Flash Player 6 用 SWF をパブリッシュする場合と Flash Player 7 以上用 SWF をパブリッシュする場合との 両方のスクリプト例を回答することにします。 大雑把に言えば Flash Player 6 用でも Flash Player 7 以上用でも どちらにしても一般的によく使われている方法の内容は同じで マウスプレスした(またはマウスアップした) MC の深度を その MC が存在する階層での一番上の深度に swapDepths させれば良いわけです。 この説明では Flash Player 6 用でも 7 以上用でも どちらにしてもとりあえず ドラッグする４つのMCに全て違うインスタンス名を付けます。 どれがどれでも良いので ステージ上のドラッグする４つの MC を１つずつ選択して プロパティインスペクタより，例えば 「drag_mc0」「drag_mc1」「drag_mc2」「drag_mc3」 というインスタンス名を付けるとします。 その場合の Flash Player 6 用 SWF をパブリッシュする場合の ４つの MC が存在する タイムライン の "フレーム" に書くスクリプト例です。 (この例では "MC 自体" にはスクリプトは一切書きません。) 　 ◎ Flash Player 6 以上用 SWF のスクリプト //------------------------------------ //深度カウント用変数を用意 var dep_cnt:Number = 0; //変数 i に 0～3 を入れながらループ for (var i:Number = 0; i<=3; i++) { //「drag_mc○」押下時に関数 dragMC を実行 this["drag_mc"+i].onPress = dragMC; //「drag_mc○」を放した時に関数 dropMC を実行 this["drag_mc"+i].onRelease = dropMC; //「drag_mc○」をMC外で放した時にも関数 dropMC を実行 this["drag_mc"+i].onReleaseOutside = dropMC; } //関数 dragMC の定義 function dragMC():Void { //深度カウント用変数をカウントアップ dep_cnt++; //押下されたMCをその深度に移動 this.swapDepths(dep_cnt); //押下されたMCのドラッグを開始 this.startDrag(); } //関数 dropMC の定義 function dropMC():Void { //放されたMCのドラッグを終了 this.stopDrag(); } //------------------------------------ 　 ◎ Flash Player 7 以上用 SWF のスクリプト //------------------------------------ //変数 i に 0～3 を入れながらループ for (var i:Number = 0; i<=3; i++) { //「drag_mc○」押下時に関数 dragMC を実行 this["drag_mc"+i].onPress = dragMC; //「drag_mc○」を放した時に関数 dropMC を実行 this["drag_mc"+i].onRelease = dropMC; //「drag_mc○」をMC外で放した時にも関数 dropMC を実行 this["drag_mc"+i].onReleaseOutside = dropMC; } //関数 dragMC の定義 function dragMC():Void { //押下されたMCを最高深度に移動 this.swapDepths(getNextHighestDepth()); //押下されたMCのドラッグを開始 this.startDrag(); } //関数 dropMC の定義 function dropMC():Void { //放されたMCのドラッグを終了 this.stopDrag(); } //------------------------------------ 　 上のスクリプト例では２例とも MCを押した時点で(関数 dragMC 実行時に) そのMCの深度を最高深度に移動させていますが， MCを放した時点で(関数 dropMC 実行時に) そのMCの深度を最高深度に移動させても良いです。 ちなみに this["drag_mc"+i].onPress = dragMC; などで使った [ ] を「配列アクセス演算子」と言います。 (名称不明な [ ] では調べようにも検索しにくいですよね。) 「FN0507001-ドット演算子と配列アクセス演算子」 http://www.fumiononaka.com/TechNotes/Flash/FN050 … その他に関しての詳細などは 例えば「Flash イベントハンドラメソッド」とか 例えば「ActionScript swapDepths」とか そんな感じのキーワードでGoogleなどで検索してもらうと 色々な情報がわかると思います。
「MC(ムービークリップ)を使う」ということですから MC の特性を生かして 例えば MC内の フレーム1 と 2 との表示を切り替えることによって 色を変えるという方法をまず考え付くべきでしょうね。 (この方法を使えば，「塗りだけの色を変える」とか「形と色を変える」とかその他色々なことに対応できます。) しかし... 「使用されている Flash のバージョン」も 「使用している ActionScript のバージョン」も書かれていませんね。。。 これでは具体的なスクリプトなど回答できません。 回答できなければ困るので こちらで勝手な条件を想定させていただきます。 Flash CS3 以上をお持ちで ActionScript 3.0 を使って Flash Player 9 以上用の SWF をパブリッシュするものとします。 この条件であるものとして以下を続けます。 まず，「左の□の赤MC」内は 2フレーム にして フレーム1 と フレーム2 にキーフレームを作り フレーム1 には 赤□，フレーム2 には 黄□ の絵を用意します。 ※参考【添付図】↓ この作業が終わりましたら 「シーン 1」などメインのタイムラインの編集に戻ります。 そして ステージ上の「左の□の赤MC」を選択した状態で プロパティインスペクタ(プロパティパネル)より 例えば「L_mc」というインスタンス名を付けます。 また ステージ上の「右の□の白MC」を選択した状態で プロパティインスペクタ(プロパティパネル)より 例えば「R_mc」というインスタンス名を付けます。 その「L_mc」や「R_mc」が存在するタイムラインのフレーム (例：メインタイムラインのフレーム1)に書くスクリプト例です↓。 //--------------------------- //左の「L_mc」内の再生を停止 L_mc.stop(); //右の「R_mc」上でマウスダウン時に関数 onR_mcMouseDown を実行 R_mc.addEventListener(MouseEvent.MOUSE_DOWN,onR_mcMouseDown); //関数 onR_mcMouseDown の定義 function onR_mcMouseDown(e:MouseEvent):void { //「R_mc」のドラッグを開始 R_mc.startDrag(); //マウスアップ時に関数 onStageMouseUp を実行 stage.addEventListener(MouseEvent.MOUSE_UP,onStageMouseUp); //マウスが動く度に関数 watchHitLR を実行 addEventListener(MouseEvent.MOUSE_MOVE,watchHitLR); } //関数 onStageMouseUp の定義 function onStageMouseUp(e:MouseEvent):void { //「R_mc」のドラッグを終了 R_mc.stopDrag(); //マウスアップ時に関数 onStageMouseUp の実行するのを解除 stage.removeEventListener(MouseEvent.MOUSE_UP,onStageMouseUp); //マウスが動く度に関数 watchHitLR を実行するのを解除 removeEventListener(MouseEvent.MOUSE_MOVE,watchHitLR); } //関数 watchHitLR の定義 function watchHitLR(e:MouseEvent):void { //もし「R_mc」が「L_mc」にヒットしていれば if (R_mc.hitTestObject(L_mc)) { //「L_mc」内の再生を フレーム2 で停止 L_mc.gotoAndStop(2); } else { //ヒットしていなければ「L_mc」内の再生を フレーム1 で停止 L_mc.gotoAndStop(1); } } //--------------------------- 　 回答文字数制限にまだ少し余裕があるため 上と同様の構造を作った上での Flash MX 2004 以上をお持ちで ActionScript 2.0 を使って Flash Player 6 以上用の SWF をパブリッシュする場合の フレームに書くスクリプト例も書いておきます↓。 //--------------------------- //左の「L_mc」内の再生を停止 L_mc.stop(); //右の「R_mc」上でマウスダウン時に実行するメソッドを定義 R_mc.onPress = function():Void { //「R_mc」のドラッグを開始 R_mc.startDrag(); //マウスが動く度に関数 watchHitLR を実行 this.onMouseMove = watchHitLR; }; //右の「R_mc」上でマウスアップ時に実行するメソッドを定義 R_mc.onRelease = R_mc.onReleaseOutside = function():Void { //このMC(R_mc)のドラッグを終了 this.stopDrag(); //マウスが動く度に関数 watchHitLR を実行するのを解除 delete this.onMouseMove; } //関数 watchHitLR の定義 function watchHitLR():Void { //もし「R_mc」が「L_mc」にヒットしていれば if (R_mc.hitTest(L_mc)) { //「L_mc」内の再生を フレーム2 で停止 L_mc.gotoAndStop(2); } else { //ヒットしていなければ「L_mc」内の再生を フレーム1 で停止 L_mc.gotoAndStop(1); } } //--------------------------- ※ご質問には 　「(吸着した)とき」と書かれていますが 　「(接触した)とき」と解釈を変えています。 　 (両スクリプトとも，いわゆる吸着はさせていません。) 　 　
結論から書けば 単純に二次元目を配列定義していないからですね。 (一次元目の要素を配列定義していないからです。) 次のようにすれば良いでしょう。 var mc_array:Array = new Array(); //↓※ mc_array[3] を配列とする mc_array[3] = new Array(); mc_array[3][2]=new mark_mc(); addChild(mc_array[3][2]); mc_array[3][2].scaleX = 0.5; mc_array[3][2].scaleY = 0.5; mc_array[3][2].x = 300; mc_array[3][2].y = 200; 　↑または↓ var mc_array:Array = new Array(); mc_array[3]=[ , , new mark_mc()]; addChild(mc_array[3][2]); mc_array[3][2].scaleX = 0.5; mc_array[3][2].scaleY = 0.5; mc_array[3][2].x = 300; mc_array[3][2].y = 200; ２つ目の書き方のバリエーションは 場合に応じて無数にあります。 　 ===解説(無視しても良い雑談混じりの話)====== 驚かれることかもしれませんが そもそも ActionScript には (その他 JavaScript など ECMAScript や C++ や Java などにも) 正確(狭義)な意味での 二次元配列(多次元配列) など存在しないのです。 次元的に言えば一次元の配列までしか存在しません。 mc_array[3][2] みたいなのを 広義な意味合いで， 普通に 二次元配列(多次元配列) という言い方はしますし それで間違いではないです。 しかし厳密に言うなら それは 二段階配列(多段階配列/ジャグ配列) なのです。 ActionScript や Java などなどの配列には そもそも一次元配列しかありませんが 配列の要素としてさらに配列を入れることができるため (一次元配列はいくらでも入れ子にできるため)， その 多段階配列 をもって 多次元配列 として使っているだけです。 身近な逆例として MS Excel の VBA などには 多次元配列 が存在します。 (VBA には 多段階配列 も存在します。) 例えば Excel VBA で 配列名 = Cells(開始行,開始列).Resize(最終行,最終列).Value のようなコードを書けば 自動的に二次元配列ができます。 仮に SheetArray = Cells(1, 1).Resize(5, 5).Value のようなコードを書いたとするなら MsgBox SheetArr(3, 2) でも MsgBox Cells(3, 2).Value でも同じ「B3」セルの値が表示されます。 ※ SheetArr(3, 2) です SheetArr(3)(2) ではありません ※ SheetArr(3, 2)←多次元，SheetArr(3)(2)←多段階 一方 ActionScript では var mc_array:Array = new Array(); のようなコードを書いたとしても 一次元配列しかできないため いきなり mc_array[3][2] などとアクセスされても 「そんなもの未定義だよ！」 というエラーになってしまうのです。 もっとも ActionScript などの場合は new Array() などと一々書かなくても ○○ = [] で自動的に 配列○○ ができるため 二次元目(狭義での二段階目)に new Array() を書かない場合も出てきます。 ◎ 二次元目(二段階目)に new Array() を書かない一般例↓ 【例１】 var my_arr:Array = new Array(); my_arr.push(["00","01","02","03","04"]); my_arr.push(["10","11","12","13","14"]); my_arr.push(["20","21","22","23","24"]); my_arr.push(["30","31","32","33","34"]); trace(my_arr[3][2]); //→「32」が出力される 【例２】 var my_arr:Array = new Array(); for (var i:int = 0; i<=3; i++) { my_arr[i] = [i + "0", i + "1", i + "2", i + "3"]; } trace(my_arr[3][2]); //→「32」が出力される 【例３】(こんな書き方もできます) var my_arr:Array = [[],[],[],[]]; for (var i:int = 0; i<=my_arr.length-1; i++) { for (var j:int = 0; j<=3; j++) { my_arr[i][j] = String(i) + j; } } trace(my_arr[3][2]); //→「32」が出力される 上の【例１～３】は, どれも一見 my_arr[0] = new Array(); my_arr[1] = new Array(); my_arr[2] = new Array(); my_arr[3] = new Array(); と書いていないように見えますが 書いていないように見えるだけで 実は書いているのと同じことなのです。 細かいことを書きましたが ActionScript などで 二次元配列(多次元配列) という言葉を使うことは間違いではありません。 すごいプロの方でも普通に 二次元配列(多次元配列) という言葉を使用しています。 ですから言い方に気を付ける必要はありません。 ただ 多次元的(多段階的)な配列を作るのでしたら 配列の中に配列を定義(作成)しなければ 多次元的な配列はできないということです。 (理由：ActionScript には本当の意味での多次元配列は存在しないため一発では定義できないから) (var my_arr = new Array(2); ←これでは要素数2の配列ができるだけ)
＃１です。 ＃１の【補足】を拝見させていただきましたところ なんとか全容が見えて来ました。 「スクリプトは フレーム2 に書かれていて，gotoAndPlay(2); はフレーム3に書いてある。」 ということで大筋は理解できました。 さらにまた， > この状態で、ご回答いただいたスクリプトの追加を両方試してみたのですが、 > // ボールが下に落ちたらゲームオーバー > if(ball._y>235){ > gotoAndStop(4); > } > このスクリプトがきかなくなるのか、 > ボールが下に落ちると5フレーム目のクリア画面に移動してしまいます。 この現象も確認できました。 こうなる原因ですが (あくまでも「原因」であって「悪いこと」でも「対処法」でもありません)， フレーム4 のゲームオーバー画面に， おそらくブロックが１個も置かれていないからです。 (「だから悪い」といっているわけではありません。あくまでも「原因」です。) フレーム2 でボールの位置が ball._y>235 の状態になれば(つまりボールが下に落ちれば) gotoAndStop(4); は実際に起こっているのですが， スクリプト自体は フレーム2 のその下に書かれてあることも引き続き責任を持って１回のみ実行されるのです。 (フレームの表示は フレーム4 になるのだけれど，フレーム2 のスクリプトは最後まで実行されるのです。) したがって フレーム4 に行ったときに 「ボールが１個もないぞ！」 ということになって，さらに gotoAndStop(5); も引き続き重なって実行されてしまうわけです。 したがって，見かけ上， > if(ball._y>235){ > gotoAndStop(4); > } このスクリプトが効かなくなるように見えるのです。 実際は効いているのだけど， すぐに次の命令が実行されるため，効いたように見えないだけです。 対処法は > if(ball._y>235){ > gotoAndStop(4); > } これを下に持って行けば良いでしょう。 フレーム2 のスクリプト全文例です↓。 //------------------------------------- // ボール移動 ball._x += vx; ball._y += vy; // 壁とボールの当たり判定 if (ball._x<5 && vx<0) { vx = -vx; } if (ball._x>235 && vx>0) { vx = -vx; } if (ball._y<5 && vy<0) { vy = -vy; } // パドルとの当たり判定 if (ball._x>pad._x-40-5 && ball._x<pad._x+40+5 && ball._y>pad._y-5-5 && ball._y<pad._y+5+5 && vy>0) { vy = -vy; vx = (ball._x-pad._x)/80*15; } // ブロックとの当たり判定 for (i=1; i<=40; i++) { bx = eval("block" add i)._x; by = eval("block" add i)._y; if (ball._x>bx-20-5 && ball._x<bx+20+5 && ball._y>by-5-5 && ball._y<by+5+5 && eval("block" add i)._visible == true) { eval("block" add i)._visible = false; // 左端or右端に当たった場合 if (ball._x<bx-20 || ball._x>bx+20) { vx = -vx; } else { // 上端or下端に当たった場合 vy = -vy; } } } // ---残っている(表示されている)ブロックの有無を取得--- // 変数 visible_block の初期化 visible_block = 0; //ブロックの個数分ループ for (i=1; i<=40; i++) { //もし block○ の _visible が true であれば if (eval("block" add i)._visible) { // 変数 visible_block の値を 1 にする visible_block = 1; //即この for 文を抜ける break; } } // もし変数 visible_block の値が 0 のままであれば if (visible_block == 0) { // フレーム5 へ行って停止 gotoAndStop(5); } // ボールが下に落ちたらゲームオーバー (★ココへ移動) if (ball._y>235) { gotoAndStop(4);//元々移動先が1フレーム目だったのを新たにつくった4フレーム目に変更しました。 } //-------------------------------------
単純に時計をスプライト内に作れば良いだけでしょう。 (＝スプライト内で完結する時計を作れば良いだけでしょう。) 別にそうしなくても良いですよ。 スライドショーをスプライト内に作っても良いですし スライドショーも時計も両方とも別のスプライト内に作っても良いです。 とにかく何にしても Flash とは「まず スプライト(ムービークリップ) ありき」なんです。 (メインのタイムライン自体も実は全体を包括する大きなスプライト(ムービークリップ)です。) Flash とはスプライト(ムービークリップ)をいくつも組み合わせて１つの作品を作って行くもの(作って行けるもの)なのです。 　 　 ＝＝＝例＝＝＝＝＝＝＝＝＝＝＝＝ 仮の条件として SWF6～8 のいずれかの Flash(SWFファイル) を書き出すものとします(SWF4 は無視)。 Suzuka の シンボルリスト のリスト欄を右クリックして 「アイテムを追加」→「スプライト追加」を選択します。 スプライト名は 「スプライト1」でも何でも適当で良いです。 サイズもどうでも良いですが 一応 幅[100]　高さ[20] に設定することにしておきますか。 シンボルリストで今作ったスプライトを選択し シンボルリストの左上の方にある「編集」ボタンをクリックします。 するとキャンバスの部分は スプライト内のタイムライン表示に切り替わります。 (スプライト内にもタイムラインは存在していてこの中にスライドショーでも何でも作れるのです。) (今回の説明では時計を作ることにします。) スプライト内のタイムライン部分を右クリックして 「アクションレイヤーを挿入」を選択します。 できたアクションレイヤーのフレーム1を選択して 画面右下の「スクリプトを編集」ボタンをクリックします。 するとスクリプトエディタが出てくると思うので そのスクリプトエディタのスクリプトを書く部分に次のように書きます。 //----------------------------------------- //テキストフィールド「time_txt」を作成 this.createTextField("time_txt", 0, 0, 0, 100, 20); //「time_txt」の枠線を表示 time_txt.border = true; //「time_txt」を背景アリにする time_txt.background = true; //毎フレーム実行するメソッドを定義 this.onEnterFrame = function() { // 現在の時刻オブジェクト now を作成 var now = new Date(); // 変数 h に時刻を取得 var h = now.getHours(); // 変数 m に分を取得 var m = now.getMinutes(); // 変数 s に秒を取得 var s = now.getSeconds(); // //２桁合わせ h = "0" + h; h = h.substr(-2, 2); m = "0" + m; m = m.substr(-2, 2); s = "0" + s; s = s.substr(-2, 2); // //「time_txt」に時刻を表示 time_txt.text = h + ":" + m + ":" + s; }; // 上のメソッドを即実行 this.onEnterFrame(); //----------------------------------------- これでスプライト内の編集は終わりですから 画面左上にある「スプライト1 (ID：1)」のように書かれてある部分をダブルクリックして メインのタイムラインの編集に戻ります。 そして シンボルリストで今作成したスプライトを右クリックし 「レイヤーに追加」を選択します。 これでメインのタイムラインに 時計のスプライトが配置されますから 後は「ウィンドウ」→「プレビュー」するとか または「ファイル」→「SWFファイル生成」するなどして動作確認をすれば良いです。 この時計はスプライト内で全てが完結していますから どのフレームに表示させても大丈夫です。 もちろん 上ではあくまでも仮の説明としてスクリプトで全てを作成しているだけで， 実際はスプライト内にテキストフィールドなどを好きなように手動配置しても良いです。 スプライトの中に別のスプライトを配置しても良いです。 (アナログ時計の針などはスプライトで作ると思いますし。) とにかく何重にでもタイムライン階層は作れます。
http://webdrawer.net/other/nonverblaster.html http://www.basics09.de/nonverblaster-hover//inde … http://phpjavascriptroom.com/?t=strm&p=jplayer http://phpspot.org/blog/archives/2010/06/jqueryv … http://nkshopping.biz/index.php?%E3%83%87%E3%83% … 動画は重いため　配信には転送量が問題になる これをまずクリアしなければ何もできない 普通なら　短時間の動画を数人のみに配信など限定的になるはず 現実的には　Youtubeなど動画投稿サイトの助けを借りるのが最善 クリアしたとして 埋め込みのプレーヤを選択することで　再生できる形式が変わる ユーザにアップする動画の形式を指定できるならflv 複数の形式に対応させるなら　サーバでエンコードが必要 配信の相手が誰かによる　ガラケ　スマホ　も対応するのか Winのみか　など必要なら処理の分岐が必要になる 個人的には　Youtubeを利用してAPIなどで利便性をはかる
単にテレビの画面でみたいってだけなら、機種にもよりますが、バソコンのディスプレイとして使えるのも結構ありますから、繋げればいいだけのような？。 説明書一度読んでみたら？
まずHTML5でもタイピングゲームが実現可能であるかという質問については「可能」。 HTML5で作るメリットはスマートフォン/タブレットなどの端末で動作する点。 逆にHTML5で作るデメリットは次のとおり。 ・今もなお32%という大きなシェアを誇る旧式IE (6～8)がHTML5に対応していない ※ http://news.mynavi.jp/news/2013/01/07/062/index. … 参照 ・動的型付け言語でレガシーなJavaScriptを使うためコンパイル時の型チェックを使うことができないためデバッグ工数が増加 ・Web標準と言われながらもブラウザ毎の挙動の差があるため、コンテンツ開発者がコードで吸収する必要がある ・Android標準ブラウザなどHTML5の挙動が不安定な端末が多い(Android OSというよりはメーカー毎のカスタマイズのため) ・マルチメディア(ビデオやオーディオ)においてブラウザ毎でサポートするコーデックやAPIが大きく異る (H.264, WebM, WebAudioあたり…) いずれもHTML5は開発者泣かせな現状かと。。 そもそもタイピングゲームであればキーボードを必要とするため、PCでの体験が想定されるのでFlashでも差し支えないはず。スマートフォンでタイピングゲームを提供するのであればHTML5での開発をしてもいいかもしれないが、そのようなケースは考えにくいと思う。 ちなみに… ・Flash Playerは11で開発は打ち切られていないし、まだまだ新機能の搭載が進んでいる ・HTML5 CanvasはFlashに比べてパフォーマンスが優れない (さらにHTML5 Canvasは再描画における消費電力が非常に高い) ・Flashの実行ファイルであるSWFファイルのフォーマットは仕様が公開されているのでブラックボックスではない ・Flash+ASの技術はHTML5+JSに比較的容易に転用が可能 (CreateJS+Haxeなどの技術を用いることで) ・Flashは表現系・ユーティリティなどのフレームワークが充実している 個人的には動作環境の選択をベースとして最適な技術を都度検討すればいいのではないかと考えている。 エンドユーザー的にそのコンテンツがHTML5であろうがFlashであろうが何で作られているかは気にしないと思うので。
AIRはデスクトップ・アプリケーションですので、 WEB上ではできないローカルファイルへのアクセスや ネットワーク、クリップボード、ファイルのドラッグ&ドロップなど ローカルPCのリソースを利用するアプリケーションの制作が可能です。 こちらが参考になるのではないでしょうか。 http://news.mynavi.jp/articles/2008/06/22/air/in … また、AdobeのAIRギャラリーなるものがあり、 公開されているたくさんのAIRアプリを確認することもできるので、 ご参考になさって下さい http://adobe-ria.jp/air/
その Flash ムービーが メインのタイムラインを使ったタイムラインアニメーションであって そのメインのタイムラインの再生を１度だけで停止させる場合に限って， OBJECT タグを使って Flash を貼り付ける場合は <param name="loop" value="false" /> というタグを入れたり EMBED タグを使って Flash を貼り付ける場合は <embed src="テスト.swf" loop="false" ～略～ という属性を入れれば 再生は１度だけで停止します。 「object タグと embed タグについて 」 http://livedocs.adobe.com/flex/3_jp/html/help.ht … 「Web Design Tips Flashで使える属性(パラメータ)」 http://webdesignerstips.blog73.fc2.com/blog-entr … 　 ただし， JavaScript で Flash を貼り付けている場合は その JavaScript の仕様などによって書き方は変わるので知りません。 また， 最初にも書きましたが， これでループ再生が停止できるのは 「メインのタイムラインを使ったタイムラインアニメーションであって そのメインのタイムラインの再生を１度だけで停止させる場合」 に限ってです。 メインのタイムラインを使っていたとしても ActionScript で動かしているアニメーションは止められません。 メインのタイムラインを使わずに ムービークリップ内(ムービーの中のムービー)のアニメーションは止められません。 マウスやキーなどに反応して動作するボタンの反応なども止められません。
ご参考に。 http://detail.chiebukuro.yahoo.co.jp/qa/question …
私もこの問題で悩みました。 調べたところ参考URLで示したFAQのページに以下の記述がありました。最も使うビジュアルデザイン機能がないとは、ちょっと信じられませんが。 Flash Builder 4.7には、Flash Builder 4.6に含まれていたFlexアプリケーション用のビジュアルデザインコンポーネントが含まれていますか？ Flash Builder 4.7は、Flash Builder 4.6以前のバ-ジョンで利用できたビジュアルデザイン機能をサポートしていません。Flexのビジュアルデザイン機能が必要な場合は、Flash Builder 4.6をアドビビライセンスストアでお買い求めください。 参考URL：http://www.adobe.com/jp/products/flash-builder/f …
こんなところでしょうか。 「F-site ケシコミ」 http://f-site.org/articles/2005/12/05231617.html 　↓↓↓ ムービーを見る http://www.ae-suck.com/amazing/tech/keshikomi.html 「ささきち流 Suzuka ＆ ParaDraw 講座-コマ動画(パラパラ漫画-消し込み(ケシコミ))」 http://suzupara.iinaa.net/kiso025.html
おそらく new ColorTransform( ) の ( )内に入れる引数を 勝手に配列だと決めていらっしゃるところが間違いなんだと思います。 colorTransDic[this["my_btn" + i]] = new ColorTransform(colors[i - 1]); これだと 「new ColorTransform( ) の 第１引数に colors[i - 1] 全部を入れて 第２引数～第８引数には何も入れない。」 ということになってしまいます。 　↓↓↓ new ColorTransform(colors[i - 1], , , , , , , ) つまり new ColorTransform( ) の 「第１引数には想定外の変なものを入れて， 第２引数～第８引数引数はデフォルトのまま。」 ということになりますから， 実際に次のような値が入ります。 　↓↓↓ new ColorTransform(NaN, 1, 1, 1, 0, 0, 0, 0) 動作的には次のように動きます。 　↓↓↓ new ColorTransform(0, 1, 1, 1, 0, 0, 0, 0) したがってどのボタンをクリックしても myMovieClip は new ColorTransform(0, 1, 1, 1, 0, 0, 0, 0) の色(赤が飛んだ色)にしかならないのです。 　 　 　 というわけで対処法です。 ◎ 対処法１ ご質問のスクリプトの次の部分を colorTransDic[this["my_btn" + i]] = new ColorTransform(colors[i - 1]); 次のように変えるのも１つの方法だと思います。 colorTransDic[this["my_btn" + i]] = new ColorTransform(colors[i - 1][0],colors[i - 1][1],colors[i - 1][2],colors[i - 1][3],colors[i - 1][4],colors[i - 1][5],colors[i - 1][6],colors[i - 1][7]); (↑改行無しの長い１行です。) ◎ 対処法２ ご質問のスクリプトの次の部分を //------------------------- var colors:Array = [[1,1,1,1,255,255,255,0],[1,1,1,1,122,122,122,0],[1,1,1,1,0,0,0,0]]; for (var i:int = 1; i<=3; i++) { colorTransDic[this["my_btn" + i]] = new ColorTransform(colors[i - 1]); this["my_btn" + i].addEventListener ( MouseEvent.CLICK , onClick ); } //------------------------- 次のように変えるのも１つの方法でしょう。 //------------------------- var colors:Array = [new ColorTransform(1,1,1,1,255,255,255,0),new ColorTransform(1,1,1,1,122,122,122,0), new ColorTransform(1,1,1,1,0,0,0,0)]; for (var i:int = 1; i<=3; i++) { colorTransDic[this["my_btn" + i]] = colors[i - 1]; this["my_btn" + i].addEventListener ( MouseEvent.CLICK , onClick ); } //------------------------- ◎ 対処法３ またはご質問のスクリプト全体を 次のように変えるのも１つの方法でしょう。 //------------------------- import flash.geom.ColorTransform; import flash.geom.Transform; var trans:Transform = new Transform(myMovieClip); var colorDic:Dictionary = new Dictionary(); var colors:Array = [[1,1,1,1,255,255,255,0],[1,1,1,1,122,122,122,0],[1,1,1,1,0,0,0,0]]; //ColorTransformのプロパティ名を配列に登録 var colorProp:Array = ["redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset"]; for (var i:int = 1; i<=3; i++) { colorDic[this["my_btn" + i]] = colors[i - 1]; this["my_btn" + i].addEventListener ( MouseEvent.CLICK , onClick ); } function onClick ( event:MouseEvent ) { var colorTrans:ColorTransform = new ColorTransform(); for (var i:int = 0; i < colorProp.length; i++) { colorTrans[colorProp[i]] = colorDic[event.currentTarget][i]; } trans.colorTransform = colorTrans; } //------------------------- 　 ActionScript ではありませんが 関連している内容の質問だと思われるURLです。 「JavaScriptでインスタンスを生成するときに、引数を配列の内容にするにはどうした... - Yahoo!知恵袋」 http://detail.chiebukuro.yahoo.co.jp/qa/question …
考え方や使い勝手などによって簡素化する方向も変わりますから 下に書くことは１つ方法例です。 まずは簡素化と言うよりも 普通の単純な書き方に整理します↓。 //----------------------------------------- import flash.geom.ColorTransform; import flash.geom.Transform; var trans:Transform = new Transform(myMovieClip); my_btn01.addEventListener ( MouseEvent.CLICK , onClick01 ); function onClick01 ( event:MouseEvent ) { var colorTrans:ColorTransform = new ColorTransform(1,1,1,1,250,30,0,0); trans.colorTransform = colorTrans; } my_btn02.addEventListener ( MouseEvent.CLICK , onClick02 ); function onClick02 ( event:MouseEvent ) { var colorTrans:ColorTransform = new ColorTransform(1.15,1.05,0.85,1,244,60,-178,0); trans.colorTransform = colorTrans; } my_btn03.addEventListener ( MouseEvent.CLICK , onClick03 ); function onClick03 ( event:MouseEvent ) { var colorTrans:ColorTransform = new ColorTransform(1,2,1,1,0,0,0,0); trans.colorTransform = colorTrans; } //----------------------------------------- さらに Dictionary クラスを使って 各ボタン対応の ColorTransform を適用させる流れにします↓。 //----------------------------------------- import flash.geom.ColorTransform; import flash.geom.Transform; var trans:Transform = new Transform(myMovieClip); //Dictionaryインスタンス「colorTransDic」を作成 var colorTransDic:Dictionary = new Dictionary(); //「colorTransDic」の各ボタン要素に各ColorTransformを登録 colorTransDic[my_btn01] = new ColorTransform(1,1,1,1,250,30,0,0); colorTransDic[my_btn02] = new ColorTransform(1.15,1.05,0.85,1,244,60,-178,0); colorTransDic[my_btn03] = new ColorTransform(1,2,1,1,0,0,0,0); //「my_btn01」～「my_btn03」クリック時に関数「onClick」を実行 my_btn01.addEventListener ( MouseEvent.CLICK , onClick ); my_btn02.addEventListener ( MouseEvent.CLICK , onClick ); my_btn03.addEventListener ( MouseEvent.CLICK , onClick ); //関数「onClick」の定義 function onClick ( event:MouseEvent ) { //クリックされたボタン要素に対応するColorTransformを適用 trans.colorTransform = colorTransDic[event.currentTarget]; } //----------------------------------------- これが１つの方法例です。 もっとも //「my_btn01」～「my_btn03」クリック時に関数「onClick」を実行 の部分などは さらに for文 を使って一気に指定することもできますよね。 「ActionScript 3.0で始めるオブジェクト指向スクリプティング 第32回　Dictionaryクラスを使う」 http://gihyo.jp/dev/serial/01/as3/0032
HP作成者側で解決する手段は現時点ではありません。 多分未来においてもないのかなぁ。。。（AppleとAdobeの関係性が良くなるとはちょっと思えない） なのでHP作成者側としてはモバイル用のサイトを別に設けてリンクを貼るより仕方ないと思います。 ちなみにちょっと蛇足ですが個人（見る側）の解決策はあります。 具体的にはブラウザをデフォルトではなく別のものをインストールする、ということですが まだまだFlashで作られているサイトも多いので需要はあるのだと思います。 ちなみにiOSでは以下のリンクにもありますがPuffinがオススメです。 「iPadでFlashのサイト見ることってよくあるよね～。　、、、はいっ、ウソですっ！ゲーム目的ですっ！」 http://mixture-art.net/?p=2773 参考URL：http://mixture-art.net/?p=2773
こんにちは。ActionScriptを勉強して２年程度のおっさんSEです。 記載されたページですが、ActionScriptを良く熟知され、かつデザイナー的センスをお持ちの方が制作されたページであるように思いました。 さて、ご質問の「どういった方法や考え方で」ということですが、まず、そのページを拝見して思いついた開発ツールと開発方法、および、利用必須な技術要素（ライブラリー）をご紹介します。 ■開発ツールと開発方法 　コンテンツの内容として、3Dを中心とした表示と操作になっているので、Adobe Flash Professionalは必須ではないと思います。それよりも、Adobe Flash Builder（有償）を使ったActionScriptを中心にした開発になるものと思います。 　（無償の開発ツールであれば、FlashDevelop） 　※但し、Adobe Flash Professionalだけでも実現は可能だと思いますが、個人的に、ActionScriptはFlash Builderでの制作が性に合っているので、私であればFlash Builderのみで開発します。 ■利用している技術要素と、その開発方法 　(1) 3D描画を実現するための3D描画ライブラリー 　　「Away3D」か「Alterative3D」の何れかを利用することになるでしょう。 　(2) アニメーション効果 　　マウスの動きに対応した、ゆるやかな動き（イージング）は「KTween」や「BetweenAS3」等のライブラリーを利用します。 　※ 入手は全てフリーですが、細かいライセンス制約はチェックしておきましょうね. あせらずに、それぞれのライブラリーの利用方法を習得し、それらを組み合わせることで、そのようなUI（→動き）を実現できるようになります。 尚、それぞれのライブラリーの紹介や利用方法に関する記事は、Webで検索・閲覧可能です。
もし Flash(SWFファイル) をネットにアップする場合でしたら その作成されているFlash(SWFファイル)自体の ロード待ち処理などを考えたりしなければならないため 下に書く方法が適切とは言えない場合も出てきますが スクリーンセーバーは基本的にローカルファイルですから 下に書くような方法で良いのではないかと思います。 まず，下に書く内容の大まかな骨子を書きますが 全体的には 「各季節(5季節)を別々のシーンに配置して 月によって再生させるシーンを変える。」 ということをすれば良いのではないかということです。 新規ドキュメントファイル(FLAファイル)を作成して そのドキュメント内に「桜」「雨」「緑葉」「紅葉」「雪」のアニメーションをつないで行くのですが そのときに各アニメーションをシーンごとに分けてコピペします。 新規ドキュメントを作成すると メインのタイムライン(の「シーン 1」)が見えるわけですが 「挿入」→「シーン」で「シーン 2」～「シーン 6」の５つのシーンを挿入します。 そして 「シーン 2」のタイムラインには「桜」 「シーン 3」のタイムラインには「雨」 「シーン 4」のタイムラインには「緑葉」 「シーン 5」のタイムラインには「紅葉」 「シーン 6」のタイムラインには「雪」 の各タイムラインをコピペします。 ドキュメントファイル内でのシーン移動は ステージの上にあるバーの右の方にある 「ガチンコ」アイコンをクリックすればできると思います。 アニメーションのコピペは 作成した各アニメーションのタイムラインの全てのレイヤーとフレームをドラッグで選択して 右クリックなどより「フレームをコピー」を選択し ペーストしたいシーンのフレーム1を選択して 右クリックなどより「フレームをペースト」を選択すればできると思います。 ・参考↓ 「アニメーション作成の手抜きテクニック：ITpro」 http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … →「フレーム全体をコピーする」の項目 各アニメーションFLAに シンボル名が同じシンボルがあると コピペするときに厄介なことが起こって困るので 各アニメーションFLAのシンボル名は違うものにしておいた方が良いと思います。 (例：「桜シンボル1」，「紅葉シンボル1」など) そして 何も配置していない 「シーン 1」のフレーム1を選択して 次のようなスクリプトを書きます。 //---------------------------------------------- //今現在の Date インスタンス my_tade を作成 var my_date:Date = new Date(); //my_date から 月番号(0～11) を取得 var month_num:int = my_date.getMonth(); //もし月番号が2～4であれば(3～5月であれば) if (month_num >= 2 && month_num <= 4) { //シーン 2 の フレーム1 から再生 gotoAndPlay(1,"シーン 2"); //もし月番号が5であれば(6月であれば) } else if (month_num == 5) { //シーン 3 の フレーム1 から再生 gotoAndPlay(1,"シーン 3"); //もし月番号が6または7であれば(7または8月であれば) } else if (month_num == 6 || month_num == 7) { //シーン 4 の フレーム1 から再生 gotoAndPlay(1,"シーン 4"); //もし月番号が8～10であれば(9～11月であれば) } else if (month_num >= 8 && month_num <= 10) { //シーン 5 の フレーム1 から再生 gotoAndPlay(1,"シーン 5"); //もし月番号が上記以外であれば(12または1または2月であれば) } else { //シーン 6 の フレーム1 から再生 gotoAndPlay(1,"シーン 6"); } //---------------------------------------------- これで 月によって違うシーンの冒頭にジャンプするようになります。 しかしこれだけでは ムービー全体がループ再生されてしまうので 各シーンの最終フレームにキーフレームを作って 次のように書いて行きます。 //---「シーン 2」の最終フレーム--------- //シーン 2 の フレーム1 から再生 gotoAndPlay(1,"シーン 2"); //-------------------------------------- //---「シーン 3」の最終フレーム--------- //シーン 3 の フレーム1 から再生 gotoAndPlay(1,"シーン 3"); //-------------------------------------- 他のシーンの最終フレームも同様に…。 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 結局のところ， new Date() で Date インスタンスを作成して getMonth() メソッド で月番号を取得し その月番号によって動作を変えれば良いのです。 シーンを使うと そんなに難しい知識は要りませんし説明も簡単であるため 各季節のアニメーションを各シーンに用意する方法を書きましたが 別にシーンを使わなくても良いのです。 例えば ５つの ムービークリップを用意して そのムービークリップ内のタイムラインに 各季節のアニメーションを用意して 月番号によって表示させるムービークリップを変えても良いわけです。 もしそういう方法を使うとすれば インスタンス名とか階層とか場合によってはクラスとか そういうものの概念などの理解も必要になってきたり 説明も難しくなってくるのでシーンで説明しただけです。 余裕があったり， 違うものを作る機会があれば， 色々な方法を考えてチャレンジしてみるのも良いかもしれません。
イラストレータで作成したロゴにアンチエイリアスはかけてないですよね。
原因とかそういう概念(思考パターン？)など普通には何もなくて 設定フレームレートというのはリミッターみたいなものですから 例えば 30fps 設定にした場合 再生速度が１秒間に30フレームまでに制限されるというような設定をしたのと同じようなことに過ぎません。 (ただし，HTML に wmode="transparent" で貼り付けると，ブラウザによっては設定フレームレートより早く再生される場合がありますが，これは例外です。) ですから 画面描画やスクリプト処理が PC の CPU や GPU を圧迫すれば どんどんフレームレートは下がります。 フレームレートが遅くなったり不安定になるのは 当たり前で普通の現象です。 昔は(今でも)「Flash は重い」と言われてましたが 正にこれが処理落ちによるフレームレートの低下現象です。 昔は(今でも)描画処理などは GPU でなく全て CPU 任せでしたし 昔の PC は CPU や メモリ などが少ないものが多かったですから (私など CPU:233MHz　メモリ:64MB のPCで Flash を作ったり見たりしてましたから) カクッ... カクッ... としか動かない Flash を見かけることは多かったです。 自己満足に浸っている自己中な作者が公開している Flash に重いものが多かったです。 　 ＝＝＝ ＝＝＝ ＝＝＝ 第一の回避策としては アルファ(透明/半透明)やフィルタ(ぼかしフィルタなど)の使用をなるべく控えて PC の CPU や GPU に負担をかけないようにしたり ActionScript でループ文を使用したり 何でも ENTER_FRAME イベントで動作させるのをやめるとか とにかく クライアントPC をいたわるような気持を常に持ち続けながら 作品の作成に携わるということが大切でしょう。 また， 例えば 30fps を出すのが難しそうでしたら 元から 15fps などに下げた設定で作る(クライアントPCに無理をさせない)というのも回避策になります。 　 あと， SWF を HTML に貼り付けるときのタグで quality="autohigh" にするなどして 再生速度を優先して画質を下げるようにするとか， または上にも少し書いたように wmode="transparent" で貼り付けるのも１つの方法だと思います。 　 その他，裏技的なことですが， 無音の短い mp3 でも用意して その音をライブラリなどに読み込んでレイヤーに配置し そのレイヤーに配置した音のプロパティで 「同期」の項目を「ストリーミング」にしておくのも１つの手です。 ※【添付図】↓ この「同期：ストリーミング」設定は 本来アニメーションと音をシンクロ再生させる設定です。 つまり フレームレートの低下で， 音だけが普通に再生されて アニメが取り残されるのを防ぐ設定です。 (いっこく堂の衛星放送のような現象が起こるのを防ぐ設定) この設定にしておくと フレームレートが低下した場合コマ飛ばし(フレーム飛ばし)をして 無理矢理，音にアニメを合わせる再生になります。 ですから カタカタと不自然なアニメになる場合もあります。 この設定にした音を１つでも入れておくと 実際に音が鳴っている鳴っていないにかかわらず， ムービー全体の再生が設定フレームレートに近い状態になります。 あまり良い方法とは言えませんが 裏技的で強引なフレームレート維持方法です。 　 ＝＝＝ ＝＝＝ ＝＝＝ 　 兎にも角にも フレームレート設定は「だいたいの目安」「おおまかなリミッタ」に過ぎないと思った方が良いです。 アニメーションなどの内容や クライアントPC の性能や閲覧状況などによって大きく変動します。 それを怪奇現象や不具合と思うのではなく， 普通で当たり前の現象だと思って作成すべきでしょう。
＃１です。 返事が遅くなってしまいましたが。 > ０１２３４ > ５６７８９ > > が > > □□□３ ４ > ５ ６ ７ ８ ９ > ０ １ ２ なるほど， ＃１のスクリプトだと確かにそうなりますね。 私の確認不足でした。 すみません。 それではスクリプトを次のように変更してみてください。 //----------------------------------------------- //「bg○」の参照を入れる配列を用意 var objA:Array = new Array(2*5); //「bg○」の座標を入れる配列を用意 var posA:Array =[ [70, 112], [106, 112], [142, 112], [178, 112], [214, 112], [70, 148], [106, 148], [142, 148], [178, 148], [214, 148], [70, 184], [106, 184], [142, 184], [178, 184], [214, 184], [70, 220], [106, 220], [142, 220], [178, 220], [214, 220] ]; //「bg○」の入る位置番号を入れる配列を用意 var numA:Array = new Array(objA.length); //「bg○」の生成＆配置 for (var i:Number=0; i<objA.length; i++) { objA[i] = _root.attachMovie("bg", "bg"+i, i+100); //●動作確認用(本題とは関係なし) //objA[i].createTextField("tf",0,-15,-15,24,24); //objA[i].tf.text = i; objA[i]._x = posA[i][0]; objA[i]._y = posA[i][1]; } //「hitBar」をドラッグできるようにする hitBar.onPress = function():Void{ this.startDrag(); }; hitBar.onRelease = hitBar.onReleaseOutside = function():Void{ this.stopDrag(); }; //毎フレーム実行 this.onEnterFrame = function():Void{ //配列「numA」の初期化と「bg○」の配置 for (var i:Number=0; i<objA.length; i++) { numA[i] = i; objA[i]._x = posA[numA[i]][0]; objA[i]._y = posA[numA[i]][1]; } // //「bg○」に関するループ for (i=0; i<objA.length; i++) { //「bg○」が「hitBar」にヒットしている間はループ while(objA[i].hitTest(hitBar)){ //★ j:Number=0; を j:Number=i; に変更 for (var j:Number=i; j<objA.length; j++) { numA[j]++; //★座標移動をココから削除(下に移動) } //★この for 文を付け足し for (j=0; j<objA.length; j++) { //★座標移動 objA[j]._x = posA[numA[j]][0]; objA[j]._y = posA[numA[j]][1]; } } } }; //----------------------------------------------- 変更したのは ★ を付けた部分で，その他は基本的にそのままです。 (● を付けてコメントアウトしてある部分は，私自身のための動作確認用スクリプトです。)
サーバサイドの変数をFlashに渡す方法は何種類かありますが、配列やオブジェクトのまま渡せる方式を推奨します。 ■ActionScriptでXMLを読込む ・サーバサイドでXMLに吐くメソッドを用意し、FlashからURLloaderで読み出す。 その後、ActionScriptで内容をパースしてオブジェクトを生成する。 ■Ajaxで読み、Flashに渡す ・javascript / Ajaxでサーバサイドから読み、取得したオブジェクトをExternalInterface経由でFlashに渡す。 個人的には、Ajax / ExternalInterface経由の方法をよく使います。理由は、 ・AJaxという旬の技術を使えるので、javascript/サーバサイドの技術情報が多い。 ・サーバサイドデバッグがやりやすい。 ・javascript側からオブジェクトをそのまま渡すので、Flash側の手間がない。 など。 方言の強いActionScript3の命令（XML解析の部分や、固有のイベント）をあまり深く使いたくない人間は、Ajax併用のほうが向いています。 XMLを使う方法も悪くないですが、配列やオブジェクト構造が複雑に組み合わさるデータで、そのたびにXMLスキーマを決めることや、正直ActionScriptのXMLパーサより、ブラウザのjavascriptパ－サのほうが出来がいいことを考えると、Flash側の手間を最小限に抑えるのが有利かと。 参考URL：http://livedocs.adobe.com/flex/3_jp/langref/flas …
私はこういう時はPapervision3Dを使ってますよ。 時間差の回転も簡単に出来ますから。 とくにＨＰで公開することを考えれば必須だと思っています。 ここでは細かく書けませんけど、本屋に行けば参考本もたくさんあります。 ご参考まで。 参考URL：http://phenotype.jpn.org/blog/archives/19
OSとの相性の問題ではないでしょうか。 「Windows7でmp3をsuzukaにぶち込むと落ちるのを改善する方法」 http://meteoblog-tana.com/?eid=115 「suzukaにflv,mp3が使えない FlashのQ&A【OKWave】」 http://oshiete.goo.ne.jp/qa/3544231.html 「Vistaでsuzukaを使うときは互換モードを98/Meに」 http://www.uneidou.com/907.php 「FAQ-7 - suzuka Wiki」 http://wikiwiki.jp/suzuka/?FAQ%2F7 > •MP3、WAVを取り込もうとすると、Suzukaが強制終了する。 > Suzukaを右クリック→プロパティの互換性で、 > 互換モードをWindows98/Meに設定するとできるようになるらしい。 > それ以外だと同様に強制終了するそうです。
こんにちは。#1です。 自分の環境（Win7/SP1, Flash Professional 6, フォルダをデスクトップ上に配置）で、以下の処理を行いました。 flashmo_085_news_list.xml に部分的に日本語を入れる。 flashmo_085_stylish.fla の中の、News用ムービークリップ内部のテキストフィールドのフォント設定を、"_ゴシック"、"等幅"、"メイリオ"いずれにしても、日本語が表示されました。 （面倒くさいので埋め込みは試していません） Flash上、swf再生、html再生いずれもOKです。
private → public にするだけとか
hugflashというソフトは、俗に言う「swfリッパー」という奴で、実行版のswfファイルから、画像や音楽などのメディア要素を引っこ抜くソフトです。 ActionScriptも抽出できるようですが、書き戻すことなど到底できません。 抽出した各種リソースを、Flash Professionalに入れ込んで、新しいFlashコンテンツを作ってください。 あと、「xmlをCGIから受け取る部分がセキュリティ上危ない」という話題で、xml読込機能を削除することも意味不明です。 クッキーやセッションで識別したり、あらかじめログイン作業を必須にしたり、セキュアにする手段を準備すれば、セキュリティ的に危ないことはまったくありません。 そのようなことを言っていたら、昨今のRESTfulなWebサービスは、Amazonを筆頭に全部セキュリティホールだらけのゴミになってしまいますが？
照合結果を記録する配列変数 score_tbl は、選択するべき項目と一致した数（ check_on フィールドの値）が”多い順に”並べ替えられます。 これは、先頭の要素である０番に、一致した数の最大値が配置されるということです。 従って、check_on フィールドの値が score_tbl[ 0 ].check_on と同じ値である要素を抜き出すと、一致した数が最も多かった要素を全て抜き出すことができます。 スクリプトの一例です。 （↓　各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） //＊＊＊ 　/* 　　初期設定 　*/ 　//チェックボックスの選択状況を格納する配列 　var check_status:Array = new Array(); 　//チェックパターンデータ 　//最後の要素はパターン名 　var check_ptt:Array = 　[ 　 [ 1 , 1 , 1 , 1 , 0 , 0 , 1 , 0 , 0 , "サンプルＡ" ] , 　 [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0 , 1 , "サンプルＢ" ] , 　 [ 0 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , "サンプルＣ" ] 　]; 　//評価を格納する配列 　var score_tbl:Array = new Array(); 　//完全一致を検出する変数 　//-1の時は完全一致なし、 　//完全一致の時は配列のインデックス番号が入る 　var match:Number = -1; 　//チェックボックスの総数 　var box_max:Number = 9; 　//チェックボタンが配置されているタイムラインを保持 　var box_line:MovieClip = this; 　/* 　　照合の処理 　*/ 　function Check_Compare():Void 　{ 　　var i:Number , j:Number; 　　var score:Number , check_score:Number; 　　//完全一致を検出する変数をリセット 　　match = -1; 　　//選択状況とパターンを総当たりで照合する 　　for( i = 0 ; i < check_ptt.length ; i++ ) 　　{ 　　　//評価をリセット 　　　score = 0; 　　　check_score = 0; 　　　//項目ごとのパターンと照合 　　　for( j = 0 ; j < box_max ; j++ ) 　　　{ 　　　　//選択するべき項目との一致を照合 　　　　//両方とも１（選択されている）である場合、評価が+1、それ以外は加算されない 　　　　check_score += check_ptt[ i ][ j ] & check_status[ j ]; 　　　　//選択するべきではない項目も合わせた総合評価 　　　　//一致していた場合、評価が+1、それ以外は加算されない 　　　　score += Number( check_ptt[ i ][ j ] == check_status[ j ] ); 　　　} 　　　//完全一致判定 　　　//完全一致（＝scoreが項目の総数と同じ）の場合、インデックスを記録する 　　　if( score == box_max ) 　　　{ 　　　　match = i; 　　　} 　　　//評価を記録する配列変数に結果を記録 　　　//フィールド名 　　　//　ptt_ref：パターンへの参照 　　　//　check_on:選択するべき項目と一致した数 　　　//　total_score:総合評価 　　　score_tbl[ i ] = { ptt_ref : check_ptt[ i ] , check_on : check_score , total_score : score }; 　　} 　　//完全に一致しているパターンがある場合は、それを出力 　　if( match != -1 ) 　　{ 　　　trace( "完全一致 : " + check_ptt[ match ][ box_max ] ) 　　} 　　//完全一致がない場合は、選択するべき項目が一致していた数が 　　//多かったパターンをすべて抜き出す 　　else 　　{ 　　　Judge(); 　　} 　} 　/* 　　照合結果を評価する処理 　*/ 　function Judge():Void 　{ 　　var i:Number; 　　var high:Number; 　　var flags:Number; 　　//照合結果を、評価の高い順に並べ替え 　　//選択するべき項目と一致した数が多いものほど高評価 　　//同点の場合は総合評価で優劣を決める 　　flags = Array.NUMERIC | Array.DESCENDING; 　　score_tbl.sortOn( [ "check_on" , "total_score" ] , [ flags , flags ] ); 　　//選択するべき項目が一致している数の最大を求める 　　//最大値とは、配列変数の先頭に並んでいるcheck_onの値のこと 　　high = score_tbl[ 0 ].check_on; 　　//最大値と同じ一致数を持つパターンを抜き出す 　　for( i = 0 ; score_tbl[ i ].check_on == high ; i++ ) 　　{ 　　　/*ここに、抜き出したパターンを 　　　　　利用する処理を書く*/ 　　　trace( "パターン名 : " + score_tbl[ i ].ptt_ref[ box_max ] ); 　　} 　} //＊＊＊ 紙面の都合上、ボタンの処理を省略させていただきました。 スクリプトの解説です。 同じパターンがないものとすると、完全に一致する場合は１つしかないはずです。 完全一致は、検出するための変数を用意して考えます。上記のスクリプトでは match という変数です。 照合を始める前に、match の初期値を仮に -1 と決めます。 １つのパターンとの照合が終わった時点で、完全に一致していた場合は match にパターンのインデックス番号を入れます。 照合が全て終わった後、完全に一致したものがあれば match にはパターンの番号が入っていますが、なかった場合は、match は -1 のままです。 この点を利用して、match の値をもとに完全に一致したパターンを出力することができます。 完全に一致したものがない場合は、score_tbl の値を check_on フィールドに注目して並べ替え、最大値を持つ要素を全て抜き出します。 上記のスクリプトでは、Judge という関数内でこの処理を行います。 ActionScript の for ループは、２番目に記述した条件が成立している間、ループが継続する仕組みです。 if 文の機能を併せ持っているようなものですから、条件を工夫すると、単純に繰り返すだけでなく、様々な状況を判断しながら効率よく処理を進めることができます。 ループの条件を「 check_on フィールドの値が最大値と同じである間」と定めると、最大値と異なる check_on の値を持つ要素が出てくるまでループが継続します。 score_tbl の要素は check_on の値が大きい順に並ぶので、最大値を持つ要素は必ず連続して配置されます。 合わせますと、ループが継続している間は、ｉ の値を利用して最大値を持つ要素だけを抜き出すことができます。 なお、No.7608367 では score_tbl の ptt_no フィールドにパターンの番号（配列変数 check_ptt のインデックス）を入れていましたが、今回は各要素の参照を入れて、score_tbl[ 番号 ].ptt_ref で該当するパターンを直接参照できるように変更してみました。 フィールドの名前や参照の方法が変わりましたので、ご注意ください。 ***** 前回も不明だったのですが。 一致している、というと、「選択するべきではない項目を”選択しなかった”」ことも正解といえるはずですが、これについてはどのように評価するのでしょうか？ 完全一致以外の場合、「選択しなかった」ことによる正解数を評価する必要がないのでしたら、score_tbl に総合評価を記録する必要はなく、並べ替えも check_on フィールドにのみ注目して行うだけで済みます。
コンストラクタ中にインスタンスメソッドを呼び出しているため、インスタンス未生成で空振りしている気がします。 loadイベントを定義して、インスタンス生成時に正しくメソッドを叩けばいいいかもしれません。 // コンストラクタ // 常識的にはクラスおよびコンストラクタメソッドはPascalCase public function MyButton(){ 　addEventListener('load', onLoadMC); } public function onLoadMC(){ 　addEventListener(Event.CHANGE,myButton_Change); 　Change(); } 使っているマシンにFlashがインスコされてなくて試せていません。 外していたらごめんなさい。
そもそも、Flashはhtmlの内部に設置されていますので、描画の開始がワンポイント遅れます。 ただ、ご質問の「サイズの違い」ですが、そのFlashには、おそらく内部で使用している「フォント」のアウトライン（字形）が読み込まれています。 Flash側でフォントを「デバイスフォント」に指定しますと、ターゲットPC上のフォントを使用するようになるため、サイズも描画速度も向上すると思います。 また、Flash側で、"_ゴシック"や"_明朝"などの、ブラウザデフォルトフォント指定を行っても、字形は埋め込まれないため、サイズ・描画速度とも大幅に改善されます。 いずれにせよ、FlashファイルはHTMLへのアドオンですし、比較にならないほど「リッチ」な環境を持ち込むので、速度的には劣って当然かと思います。 複雑なhtmlに対し、ブラウザでAjax動作をさせると、Flashのほうが速いことも多いですが。 要は内容次第です。
配列に、クイズ番号を格納しておいて、乱数発生で得た順序番号に該当する要素を取り除き、乱数発生範囲を一つ減らすことを繰り返せば、実現できるでしょう。 配列の場合は、最終要素を指す添え字を変数で保持、更新するといいです。律儀にやるなら、取り除いた要素の後続要素をひとうひとつ添え字を一つ減らした場所にコピーしてつめなおして、最終要素をさしていた添え字の場所にnullを詰めて最終要素をさす変数の値を１減らします。今回は、律儀にコピーする必要はなさそうなので、取り除いた要素の添え字の場所に最終要素をコピーすれば足りるでしょう。 もう一つの方法は、配列にクイズ番号を格納しておいて、シャッフルします。配列の要素を入れ替えるための添え字を乱数で選んで交換することを繰り返します。 ActionScript、配列、シャッフルでネット検索すると、十分サンプルコードは得られるでしょう。
その揺らす「ゲーム画面」とは 作成した Flash 内部全体ということでしょうか？ 良くわからないので とりあえずそういうことで話を進めます。 当然ながら「画面を揺らす」という関数やメソッド(イベントリスナー)は存在しないわけですから， 「画面を揺らすとはどういうことであるのか」を自分自身で考えて定義し それをスクリプトとしてコーディングして行く必要があると思います。 下のスクリプト例は 私が「画面を揺らすとはどういうことであるのか」を考えて定義してみた例です。 ステージ上に適当に何かを配置して (何かを置かないと振動の様子が見えないため) メインのタイムラインのフレーム1に書くスクリプトです。 //============================================= //Timerインスタンス「vibrate_tm」を作成 //(20 ミリ秒間隔で 100 回実行) var vibrate_tm:Timer=new Timer(20,100); //Timerインスタンスに振動させるイベントリスナーを登録 vibrate_tm.addEventListener(TimerEvent.TIMER,vibrateStage); //振動させるイベントリスナーの定義 function vibrateStage(e:TimerEvent) { //メインタイムラインの座標をランダムな±5にする root.x=Math.random()*10-5; root.y=Math.random()*10-5; //表示を即更新 e.updateAfterEvent(); } //振動を開始させるイベントリスナーの定義 function startVibration(e:Event) { //タイマーをリセット vibrate_tm.reset(); //タイマー開始 vibrate_tm.start(); } //---↓仮の振動開始イベント↓---- //ステージ上でマウスアップしたときに振動開始 stage.addEventListener(MouseEvent.MOUSE_UP,startVibration); //============================================= 上では 「仮の振動開始イベント」 として Flash の画面の任意の位置でマウスアップ(クリック)したときに Flash の画面全体を動かすようにしています。 実際には何が起こったときに振動を開始させるのかは知りません。 もし仮に 「上のスクリプトを書いたフレームが表示されたときに振動を開始」させるのでしたら 最後のイベントリスナーなどは不要になって 次のようにもっと短くなります↓。 //============================================= //Timerインスタンス「vibrate_tm」を作成 //(20 ミリ秒間隔で 100 回実行) var vibrate_tm:Timer=new Timer(20,100); //Timerインスタンスに振動させるイベントリスナーを登録 vibrate_tm.addEventListener(TimerEvent.TIMER,vibrateStage); //振動させるイベントリスナーの定義 function vibrateStage(e:TimerEvent) { //メインタイムラインの座標をランダムな±5にする root.x=Math.random()*10-5; root.y=Math.random()*10-5; //表示を即更新 e.updateAfterEvent(); } //タイマー開始 vibrate_tm.start(); //============================================= 　 ※ なお... 揺らす「ゲーム画面」とは Flash 内部ではなくて 「HTML に貼り付けた Flash 自体」だったり 「ブラウザごと」揺らすような場合でしたら ActionScript ではなく JavaScript などになりますよ。 (もし「パソコンのモニタ」を揺らすのでしたら ActionScript でも JavaScript でも無理でしょう。)
ActionScriptは一応、Javaの流れをくむオブジェクト指向言語ですので、不要になったオブジェクトや変数を明示的に開放する必要はありません。 システムが適当なタイミングでガベージコレクションをやってくれます。 ただし、AS3では、イベントリスナは、その対象になっているオブジェクトが消滅しても残り続けるので、明示的にremoveEventListenerで開放しなければいけません。 この仕様はバグっぽい面もあるので、のちのFlashPlayerでは改善されると思いますが。
＃１です。 > Error #2101: URLVariables.decode() に渡される文字列は、 > 名前/値のペアを含む、URL エンコーディングされたクエリー > 文字列でなければなりません。 > となります。 そう出るのでしたら URL エンコーディング すれば良いのではないでしょうか↓ dataObj.search_id =escape(MovieClip(root).search_id.text); dataObj.search_pass = escape(MovieClip(root).search_pass.text);
このような半透明なモーダルを重ねるだけなら、2,3個のアクションスクリプトを利用して作ることになります。 やり方を覚えれば１つのページ遷移は初心者でも１時間もあれば作れます。
eventObj.targetでまとめます。以下でどうでしょう。 function hiraku(eventObj:MouseEvent):void { //mc0を["mc"+i]としまとめて処理したい twObj=new Tween(eventObj.target,"rotation",Regular.easeInOut,0,30,1,true); } function modoru(eventObj:MouseEvent):void { //mc0を["mc"+i]としまとめて処理したい twObj=new Tween(eventObj.target,"rotation",Regular.easeInOut,30,0,1,true); }
お持ちの Flash 作成ソフトの(ソフト名やその)バージョン も さらには 使用する ActionScript のバージョンも全く書かれていないため 非常に回答しにくいわけですが。。。。。。。。。 (Flash 作成で何が最重要なのかをわかっていらっしゃらないような。) ソフトやバージョンはともあれ Flash ムービー内の拡大縮小を無しにして さらにステージの左上(0，0)を基準に整列する設定にした上で さらに全てのインスタンス(メニューとかボタンとか全て)の座標をActionScriptでコントロールするのです。 ActionScript 1.0 や 2.0 の場合は 次のページが全ての基本を押さえていると思います。 「Flashゲーム講座＆ASサンプル集【Flash の画面表示について】」 http://hakuhin.jp/as/stage.html ActionScript 3.0 の場合は 次のページが全ての基本を押さえていると思います。 「FlashゲームPG講座 For AS3.0【Stage クラスについて】」 http://hakuhin.jp/as3/stage.html Adobe Flash ではなく 例えば Suzuka を使用して ActionScript 1.0 で行く場合は次のページを熟読＆実践するとか。 「Suzuka 基礎・基本 フル画面Flash (Stageクラス)」 http://suzupara.iinaa.net/kiso411.html 逆にすんごく大まかに言えば 「リキッドデザイン」とか「リキッドレイアウト」という言葉と 「Flash 」などという言葉を足し算して検索すれば良いと思います。 Google検索「リキッドデザイン Flash」 http://www.google.co.jp/search?sourceid=navclien …
制作者自身がわからないというのは投げやりですね。 flaのステージのタイムラインにアクションが書かれているか、ドキュメントのプロパティでドキュメントクラスにクラスが設定されているかを確認します。いずれもなければそのファイルは空っぽです。swcを使ったコンテンツということですから、編集するには少なくとも1行以上のプログラムが必要です。
>（ループはしてもしなくてもよいです。） ということですから 例えば「送るボタン」には「next_btn」というインスタンス名を付け 「戻るボタン」には「prev_btn」というインスタンス名を付けた場合 スクリプトを次のように変更すれば良いでしょう(変更例)↓ //------------------------------------------------- // タイムライン: メイン // MovieClipインスタンス // サムネイル: button0_mc～button2_mc(★変更) // 前へ・次へ: prev_btn , next_btn(★追加) // 表示画像: my0_mc～my2_mc // フレームアクション var glow:GlowFilter = new GlowFilter(0x000033); var dropShadow:DropShadowFilter = new DropShadowFilter(); var filters_array:Array = [glow,dropShadow]; //カウンタ用変数を用意(★追加) var cnt:int = 0; // 新規Objectインスタンスの生成 var showList:Object = new Object(); // インスタンス名のプロパティに対応する //[インスタンスの参照，番号] を要素にもつ配列を格納(★変更) showList.button0_mc = [my0_mc,0]; showList.button1_mc = [my1_mc,1]; showList.button2_mc = [my2_mc,2]; button0_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); button1_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); button2_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); //prev_btnクリック時に関数prevShowを実行(★追加) prev_btn.addEventListener(MouseEvent.CLICK,prevShow); //next_btnクリック時に関数nextShowを実行(★追加) next_btn.addEventListener(MouseEvent.CLICK,nextShow); function xShow(eventObject):void { // Objectからインスタンス名のプロパティに納められた対応する参照を得る var show_mc:MovieClip = showList[eventObject.currentTarget.name][0]; // Objectからインスタンス名のプロパティに納められた対応する番号を得る(★追加) cnt = showList[eventObject.currentTarget.name][1]; xClearAll(); show_mc.visible = true; show_mc.filters = filters_array; } //関数prevShowの定義(★追加) function prevShow(e:MouseEvent):void { //もしcntが0より大きければcntを-1する cnt = (cnt > 0) ? cnt-1:cnt; //関数xClearAllを実行 xClearAll(); //my○_mc を表示してフィルターをかける this["my" + cnt + "_mc"].visible = true; this["my" + cnt + "_mc"].filters = filters_array; } //関数nextShowの定義(★追加) function nextShow(e:MouseEvent):void { //もしcntが2未満であればcntを+1する cnt = (cnt < 2) ? cnt+1:cnt; //関数xClearAllを実行 xClearAll(); //my○_mc を表示してフィルターをかける this["my" + cnt + "_mc"].visible = true; this["my" + cnt + "_mc"].filters = filters_array; } xClearAll(); function xClearAll():void { my0_mc.visible = false; my1_mc.visible = false; my2_mc.visible = false; my0_mc.filters = []; my1_mc.filters = []; my2_mc.filters = []; } //------------------------------------------------- ※ ★マークを付けた辺りを変更・追加しています。 【注釈１】 //もしcntが0より大きければcntを-1する cnt = (cnt > 0) ? cnt-1:cnt; などにある「?:」を三項演算子と言います。 もしわからない場合は Google などで「ActionScript 三項演算子」などと検索してみてください。 【注釈２】 //my○_mc を表示してフィルターをかける this["my" + cnt + "_mc"].visible = true; などにある [] を配列アクセス演算子と言います。 もしわからない場合は次のページなどをご参考に。 「ドット演算子と配列アクセス演算子 - Flash テクニカルノート」 http://www.fumiononaka.com/TechNotes/Flash/FN110 … ( http://www.fumiononaka.com/TechNotes/Flash/FN050 … )
具体的にどのようなことをしようとされているのかよくわかりませんが とりあえずボタン(SimpleButton クラスのインスタンス)の入れ子はできません。 MC(ムービークリップ)の中にMCを入れたり，MCの中にボタン(SimpleButton クラスのインスタンス)を入れることはできます。 > AS3では、_rootが使えないので、どうしたらよいのか分かりません。 _root は使えませんが root でしたら使えます。 ただ root と書いても 表示オブジェクト と捉えられるだけの場合が多いですから 「MCである root のことだよ。」と明示する必要があります。 もし ActionScript 2.0 以下で 「_root.MC2.○○;」 のような命令が通じる状況でしたら ActionScript 3.0 では 「MovieClip(root).MC2.○○;」 とすると通じる場合が多いです(ただし外部SWFをロードする場合を除く) Gogle検索例「MovieClip(root) as」 http://www.google.co.jp/search?hl=ja&ie=UTF-8&q= … (as は ActionScript の意味ではなく as(アズ) です。)
書かれていらっしゃる http://gihyo.jp/dev/serial/01/as3/0032?page=1 の本題は page=2 の方の Dictionaly クラスを使うということですが そのページの本題の件は全く抜きにして(全く無視して)， page=1 の方に書かれている状況と page=1 の最後のスクリプトを利用する方針で行くという意味ですか？ 良くわかりませんので， とりあえずはそういう方向(page=2 は無視する方向)で回答します。 　 そしてさらに page=1 の最後のスクリプトですが 最初の前文とスクリプト本体にあるインスタンス名とがずれています。。。 > // サムネイル: thum0_mc～thum2_mc .　↓ずれている↑ > button0_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); つまりどちらかが間違っているということですが 前文の方が間違っているということにします。 　 というわけで クロスフェードさせる場合のスクリプト変更例です↓ //------------------------------------------ // タイムライン: メイン // MovieClipインスタンス // サムネイル: button0_mc～button2_mc // 表示画像: my0_mc～my2_mc // フレームアクション //Tweenクラスとeasingクラスのインポート import fl.transitions.Tween; import fl.transitions.easing.*; var glow:GlowFilter = new GlowFilter(0x000033); var dropShadow:DropShadowFilter = new DropShadowFilter(); var filters_array:Array = [glow,dropShadow]; var showList:Object = new Object();// 新規Objectインスタンスの生成 button0_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); button1_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); button2_mc.addEventListener(MouseEvent.ROLL_OVER, xShow); // インスタンス名のプロパティに対応するインスタンスの参照を格納 showList.button0_mc = my0_mc; showList.button1_mc = my1_mc; showList.button2_mc = my2_mc; //my○_mc の表示順を一旦下に沈めておく setChildIndex(my0_mc,0); setChildIndex(my1_mc,0); setChildIndex(my2_mc,0); function xShow(eventObject):void { // Objectからインスタンス名のプロパティに納められた対応する参照を得る var show_mc:MovieClip = showList[eventObject.currentTarget.name]; //子表示インスタンスの数を得る var child_n:int = numChildren; //もし対応する my○_mc の表示順が一番上でなければ if (getChildIndex(show_mc) != child_n - 1) { //対応する my○_mc の表示順を一番上にする setChildIndex(show_mc,child_n - 1); //対応する my○_mc のアルファを 0 から 1 に 1.2 秒でトゥイーンさせる new Tween(show_mc,"alpha",None.easeNone,0,1,1.2,true); } } xClearAll(); function xClearAll():void { my0_mc.alpha = 0; my1_mc.alpha = 0; my2_mc.alpha = 0; my0_mc.filters = filters_array; my1_mc.filters = filters_array; my2_mc.filters = filters_array; } //------------------------------------------ 現状では切り替える my○_mc が３枚しかないため あまり早くグチャグチャと切り替えるとクロスフェードが変になります。 その点は御容赦ください。
できます。 ExternalInterfaceを使うとよいとおもいます。
前置きとして msg.text = String(event.delta); とは何でしょうか？？？ なぜそこにそんなもの(delta)がそこ登場するのかわからないので とりあえず上の１行は無かったものとして無視します。 > マウス右移動では、右回転に。 > マウス左移動では、左回転にしたいのですが・・・。 そう書かれましても 具体的にどのように動かしたいかによって 考え方やスクリプトは変わりますよ。。。 例えば次のような感じにしたいということでしょうか？ //---スクリプト全文例---------------------- //過去のマウスの座標を保存する変数を用意 var old_mouseX:Number = stage.mouseX; //マウスが動いたときに以下の function を実行 stage.addEventListener(MouseEvent.MOUSE_MOVE, function(event:MouseEvent){ //現在のマウスの座標を取得 var new_mouseX:Number = stage.mouseX; //現在と過去のマウスの座標の差に適当な定数を掛けた値を取得 var rot_speed:Number = (new_mouseX - old_mouseX)*1.5; //「mc」の回転をその角度だけ加算 mc.rotation += rot_speed; //現在のマウスの座標を過去のマウスの座標として保存 old_mouseX = new_mouseX; }); //----------------------------------------- ※注 mc.addEventListener(Event.ENTER_FRAME, function(event){…}); の部分を書いていないのは， 省略しているわけではなくて，不要なので削除しています。 　 　 ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ または， わざわざ mc.addEventListener(Event.ENTER_FRAME, function(event){…}); を用意されたのは 本当は回転する動きに重石を付けたかったからでしょうか？ つまり 例えば次のような感じにしたかったのでしょうか？ //---スクリプト全文例---------------------- //過去のマウスの座標を保存する変数を用意 var old_mouseX:Number = stage.mouseX; //回転の目標角度を入れる変数を用意 var target_rotation:Number = mc.rotation; //ダミーの角度を入れる変数を用意 var dummy_rotation:Number = mc.rotation; //マウスが動いたときに以下の function を実行 stage.addEventListener(MouseEvent.MOUSE_MOVE, function(event:MouseEvent){ //現在のマウスの座標を取得 var new_mouseX:Number = stage.mouseX; //現在と過去のマウスの座標の差に適当な定数を掛けた値を取得 var rot_speed:Number = (new_mouseX - old_mouseX)*1.5 ; //回転の目標角度をその角度だけ加算 target_rotation += rot_speed; //現在のマウスの座標を過去のマウスの座標として保存 old_mouseX = new_mouseX; }); //１フレーム進む時間ごとに毎回以下の function を実行 mc.addEventListener(Event.ENTER_FRAME, function(event){ //ダミーの角度を目標角度に 1/8 ずつ近づける dummy_rotation += (target_rotation-dummy_rotation)/8; //「mc」の回転をその角度にする mc.rotation = dummy_rotation; }); //----------------------------------------- ※注 rotation は -180～180 の間の角度になります。 したがって直接 mc.rotation を加算減算すると 回転する動きがおかしくなるので ダミーの角度を 加算減算 しておいた上で mc.rotation をそのダミーの角度にするようにしています。 以上， 具体的にどのように動かしたいかがわからなかったため 一応２つのスクリプト例を回答してみました。
ご質問で書かれていらっしゃる「素材」の方のページの最後に次のような文があります。 > 設定ファイルはswfファイルと同じフォルダ内に配置し、 > 名前は「cubicmenubar.txt」になります。 厳密に言えばこの文は間違っています。 SWFファイル(Flashファイル)は HTML に貼り付けて閲覧するわけですが ここで書かれている設定ファイルの「cubicmenubar.txt」は その SWFファイル を貼り付けた HTML と同じフォルダに置く必要があります。 ※SWFファイルと HTML とが同じフォルダにある場合に限って 　設定ファイルである「cubicmenubar.txt」を 　SWFファイルと同じフォルダ内に配置することになります。 SWFが素材ではなく自分自身で作ったものでしたら 「cubicmenubar.txt」を読み込むパスを http から始まる絶対パスにするなど他の方法もありますが SWFが素材であるため絶対パスでの指示はできませんから 相対パスで指示しているはずです。 運営されているGoogleサイトとは どのような仕組みやどのようなファイル構造になっているのかわかりませんが もし全く別フォルダにある複数の HTML に同じ SWF を貼り付ける場合は その HTML が存在する全てのフォルダ内に「cubicmenubar.txt」を置くような必要が出てきます。
http://www.forest.impress.co.jp/lib/pic/video/fl … これがFLASHを分解するソフト http://www.cty-net.ne.jp/~uzgensho/ これがFLASHを作成するフリーソフト 先の分解したデータや新たにデータを追加変更してこれで組みなおします。
わからないのは当然だと思います。 元からそのスクリプト(プログラムの考え方)が間違っています。 (間違っているものの説明などできない(する気はしない)ので説明は省略しますが。) スクリプトが間違っていることの実証として m_kazu を 4 固定として下のコードで確かめてみました。 //-------------------------- m_kazu = 4; for (i=1; i<=m_kazu; i++) { /*出現する場所をランダムにしてmyNumberに格納*/ eval("myNumber" add i) = random(9)+1; /*ランダムな数字が重ならないように*/ for (j=1; j<=m_kazu; j++) { while (eval("myNumber" add i) == eval("myNumber" add (i-j))) { eval("myNumber" add i) = random(9)+1; } } } trace(myNumber1 add myNumber2 add myNumber3 add myNumber4); //-------------------------- 上記スクリプトの20回試行で trace 出力より次のようなデータが得られました。 5343←× 8719 5643 1378 2375 9878←× 7685 3512 3647 4578 3615 9514 2183 2495 2779←× 5432 8667←× 8527 7954 9286 同じ数字が出にくくなっているだけのことで実際には同じ数字は出ます。 (また無限ループ(半無限ループ)に陥る可能性も秘めています。) こんなのダメでしょう。 　 Flash Lite 1.x には function や Array などはありませんからそのままは使えませんが 次のページを参考にする(考え方だけを盗む)と良いと思います。 「FN0212003 - 配列を偏りなくランダムに並替える - Flash テクニカルノート」 http://www.fumiononaka.com/TechNotes/Flash/FN021 …
一般的に new 演算子は，クラスのインスタンスを作成するときに使うものです。 頻繁に使います。 > １．Date()というコンストラクタを使うには"New"が必要なのでしょうか？ コンストラクタは確かに実行されますが 基本的にコンストラクタを使うとか使わないとかいうことではなくて Date クラスのインスタンスを作成するときに new Date() と書きます。 (new の n は小文字ですよ。) 上記の new Date() ように () 内に引数を書かない場合は 今現在の Dateクラス のインスタンスが生成されます。 () 内に年月日などを書けば その年月日の Dateクラス のインスタンスが生成されます。 その他 new MovieClip() と書くと， MovieClip(ムービークリップ)クラスのインスタンスが生成されます。 new Sprite() と書くと Spriteクラスのインスタンスが生成されます。 new Array() と書くと Array(配列)クラスのインスタンスが生成されます。 とにかく， new ○○() で ○○クラス のインスタンスが生成されるのです。 new ○○() だけでも○○クラス のインスタンスは生成されますが 実際にはそのインスタンスを名指しで呼ばなければ使えないことが多いです。 それで，その生成したインスタンスを呼ぶときのために var △△ = new ○○() と書いて，生成したインスタンスの参照を変数 △△ に代入して その △△ という変数名を通して そのインスタンスのメソッドを実行したり そのインスタンスからプロパティを得たり そのインスタンスにプロパティを与えたりするわけです。 ◎スクリプトの一例とその意味 //---------------------------------------------- //今現在の Dateクラス のインスタンスを生成し //そのインスタンスの参照を変数 date1 に代入 var date1:Date = new Date(); //そのインスタンスに対してgetHoursメソッドを実行し //今現在の時刻を取得して //出力ウィンドウに表示 trace(date1.getHours()); //----------------------------------------------
Flash Player 5 以上用の SWF をパブリッシュするとき テキストフィールド に変数名を付けてはいけません。 「Webコピペ屋テキストフィールドのインスタンス名と変数名について（Flash屋への道#007）」 http://www.jinlingren.com/eid29.html テキストフィールド にはインスタンス名を付けて 「そのインスタンス名.text」 や 「そのインスタンス名.htmlText」 でアクセスするようにします。 この場合は 「そのインスタンス名.text」が適切です。
> アップデートした際には > このflashplayerが更新されるわけではないのでしょうか。 その Flash Player はデバッグなどをするための開発者用スタンドアローン版 Flash Player です。 ですから Flash作成ソフト(Flash CS5.5など)をアップデートすれば Flash Player のバージョンが上がることがたまにあります(あまりありません)。 Flash作成ソフトを (Flash CS6 などに)アップグレードすれば Flash Player のバージョンも普通は必ず上がります。 何にしてもムービープレビューやデバッグなどするための Flash Player ですから ブラウザで閲覧する Flash Player とは関係がありません。 また スタンドアローン版 Flash Player だけを上げても 結局 Flash作成ソフト(Flash CS5.5など) でできることが多くなるわけではありませんから Flash作成ソフト(Flash CS5.5など) を同じものを使用し続けるのでしたら スタンドアローン版 Flash Player のバージョンを上げても普通は何の意味もありません。
タイムラインのフレーム1にでも書くのでしたら次のようになるでしょう。 //------------------------------------------------------ //何かのキーが押されたときに 関数 keyDownFunk を実行 stage.addEventListener(KeyboardEvent.KEY_DOWN,keyDownFunk); //関数 keyDownFunk の定義 function keyDownFunk(e:KeyboardEvent):void { //(取得したキーのキーコードを試し出力(動作とは関係なし)) trace(e.keyCode); //もしキーが 0 であれば if (e.keyCode == 96) { //フレームラベル「nextpage」のフレームへ移動(停止) gotoAndStop("nextpage"); } } //------------------------------------------------------ ただし > nextpageとフレーム名を付けたフレームに移動する これには場合がたくさんあるので 上記の通りに書いていつもうまく行くとは限りません。 もしかしたらこうかもしれません↓。 //フレームラベル「nextpage」のフレームへ移動(再生) gotoAndPlay("nextpage"); またはターゲットパス付きで 次のようにする場合もあるでしょう↓。 //フレームラベル「nextpage」のフレームへ移動(停止) MovieClip(root).gotoAndStop("nextpage"); こんなことを言い出せばキリがありませんので， 「だいたいそんな感じ」と思ってください。 　 　 なお，，， 私ココカシコで同じばかり書きすぎて面倒なので 今回はキーイベントの注意点(フォーカスのことについて)は書きません。 (キーイベントは注意書きの方が多すぎて回答が面倒。) フォーカスの注意点の例↓ 「Flashゲームのブラウザ内での動作について OKWave」 http://oshiete.goo.ne.jp/qa/6422938.html 「flashのキーボード操作についてなのですが OKWave」 http://okwave.jp/qa/q5931486.html
bitmapではなく 座標を配列に入れましょう。
＃２です。 勘違いしていた部分がありましたので、スクリプトを訂正いたします。 FlashPlayer 8 以上で動作します。 （↓　各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） //＊＊＊ /* 　初期設定 */ //チェックボックスの選択状況を格納する配列 var check_status:Array = new Array(); //チェックパターンデータ //最後の要素はパターン名 var check_ptt:Array = [ 　[ 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , "サンプルＡ" ] , 　[ 1 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , "サンプルＢ" ] , 　[ 0 , 1 , 1 , 0 , 1 , 1 , 1 , 1 , "サンプルＣ" ] ]; //評価を格納する配列 var score_tbl:Array = new Array(); //チェックボックスの総数 var box_max:Number = 8; //チェックボックスが配置されているタイムラインを保持 var box_line:MovieClip = this; /* 　照合の処理 */ function Check_Compare():Void { 　var i:Number , j:Number; 　var score:Number , check_score:Number; 　var flags:Number; 　//選択状況とパターンを総当たりで照合する 　for( i = 0 ; i < check_ptt.length ; i++ ) 　{ 　　//評価をリセット 　　score = 0; 　　check_score = 0; 　　for( j = 0 ; j < box_max ; j++ ) 　　{ 　　　//選択されるべき項目との一致を照合 　　　//両方とも１（選択されている）である場合、評価が+1、それ以外は加算されない 　　　check_score += check_ptt[ i ][ j ] & check_status[ j ]; 　　　//全体の照合処理 　　　//一致していた場合、評価が+1、それ以外は加算されない 　　　score += Number( check_ptt[ i ][ j ] == check_status[ j ] ); 　　} 　　//デバッグ 　　trace( "Score " + i + " = " + score ); 　　trace( "Check_on " + i + " = " + check_score ); 　　//評価を記録する配列変数に結果を記録 　　//フィールド名 　　//　ptt_no：パターンの番号 　　//　check_on:選択するべき項目と一致した数 　　//　total_score:総合評価 　　score_tbl[ i ] = { ptt_no : i , check_on : check_score , total_score : score }; 　} 　//評価の高い順に並べ替え 　//選択するべき項目と一致した数が多いものほど高評価 　//同点の場合は総合評価で優劣を決める 　flags = Array.NUMERIC | Array.DESCENDING; 　score_tbl.sortOn( [ "check_on" , "total_score" ] , [ flags , flags ] ); 　/*ここに、評価を利用する処理を書く*/ 　/*今回は一致した数が最も多かったパターンの名前を出力*/ 　trace( "一致数の高いパターンは " + check_ptt[ score_tbl[ 0 ].ptt_no ][ box_max ] ); } /* 　照合開始ボタンの処理 */ btn.onRelease = function():Void { 　var i:Number; 　//選択状況を配列変数に格納 　//選択されている場合1、されていない場合は0を入れる 　for( i = 0 ; i < box_max ; i++ ) 　{ 　　check_status[ i ] = Number( box_line[ "cbox" + i ].selected ); 　} 　//パターンと照合する 　Check_Compare(); }; //＊＊＊ 主な変更点ですが。 まず、パターンのデータが単調で結果を検証しにくかったので、変更しました。 選択するべき項目を選択した数が同数だった場合、選択するべきではない項目と一致している数が多いものほど評価が高くなることを検証しやすくしています。 同時に出力される、Score と Check_on の値に注目してください。 Check_on は、選択するべき項目が一致している数です。 Check_on が同点の場合は、選択するべきではない項目も含めた全体の一致数である Score が高い方が高い評価になります。 評価を配列変数に残し、関数外でも利用できるようにしました。 配列変数 score_tbl の各要素に仕切り（フィールド）を作り、複数の情報をまとめて管理しています。 フィールドの名前と内容は、スクリプト内のコメントをご参考になさってください。 並べ替えの結果、score_tbl[ 0 ] が最も評価の高いパターンの情報になります。 なお、この並べ替えを行うにあたり、FlashPlayer 8 から追加された、フィールドごとの条件を指定するソートを利用しています。 ソートの内容は、フィールド名”check_on”について降順で並べ替え、同点だった場合はフィールド名”total_score”に注目し、total_score の高い方が上位にくるソートです。 この機能を使うために FlashPlayer 8 以降の動作になりましたが、同様の内容で比較関数を自作すれば FlashPlayer 7 でも動作は可能です。 ちなみに完全一致については、 　score_tbl[ 0 ].total_score というようにフィールドの値を見て、これがチェックボックスの総数と同じであれば完全一致であると判断することができます。 Check_Compare 関数内で、選択するべき項目を正しく選択しているかどうかを調べ、一致している数を数える処理を追加しました。 この比較には、ビット演算の & （ AND ）を利用しています。 ビット演算は、２つの２進数を１桁ずつ比較し、両者の関係で 1 または 0 が決まる演算です。 今回は対象の数値がもともと 1 か 0 のどちらかなので、２進数の話はとりあえず気にしないでください。 演算の詳細はよそに譲りまして、AND は簡単にいうと、両方 1 の場合に 1 、それ以外は 0 になります。 選択されるべき項目はパターンデータの中では 1 で表わされ、選択状況の中でも選択されている項目はやはり 1 で表わされていますから、両方とも 1 であった場合に 1 （＝選択するべき項目が正しく選択されている）と判断することができます。 それ以外は 0 ですので、1 だった場合のみ、選択されるべき項目の一致数が加算される仕組みです。 そういう、おまじないだと思ってくださっても構いません。 ご質問の主旨を勘違いしまして、大変失礼いたしました。
>・写真5枚、写真と連動したテキストのスライドショー（横または縦の動き） >・「次へ」などのボタンは不要 >・最後にstop();またはループ >・写真は季節ごとに差し替えの更新があるので外部から読み込める仕様 >・お客様でも写真を差し替えれば可能な状態 > >アクションスクリプトじゃなきゃできないのか、 >タイムラインだけで大丈夫なのか、 >部分的にスクリプトを書けば可能なのかお教えいただけませんでしょうか。 普通ならスクリプトで作った方が簡単ですし、再利用や更新性などが良いですね。 外部XMLで画像URLや表示するテキストを指定して、更新は外部ＸＭＬだけです。 外部ＸＭＬでは、画像切り替え時間、切り替え効果、文字の色やサイズなど 必要に応じて設定できます。 参考） http://area115.com/fparts/parts/cs3/image_301/in … >jQueryとかでも実装が可能でしたらご教授いただければと思います。 ３Ｄとか文字の複雑な動きとか変形とかが無ければ、JQuery、Javascriptとかで作れます。 注意点は、ムービーを作る際にタイマーなどを使うと、ブラウザによって処理速度が違う 場合があります。 参考）正月にJquery＆Javascriptで作った習作です。画像はいっさい使用してません。 http://webfpc.com/2012/index.html
こちら↓はご覧になりましたか？ (代表としてOKWaveのURLですが) 「AS3.0でギャラリーのボタンの透明度を変えたい OKWave」 http://oshiete.goo.ne.jp/qa/7584914.html とりあえずは上記のようにして 致命的な欠陥や間違いなどを修正されるべきでしょう。 それを修正してから 「何がどうなったときにフェードアウトさせるのか？」 と言う内容を具体的に考えて(←スクリプトで考えるのではありません。イメージと日本語でしっかり考えるのです。) そして， そのイメージ通りになるようにスクリプトをさらに考える必要があるでしょう。 とにかく 今のままでは 致命的欠陥はある上に 「何がどうなったときにフェードアウトさせるのか？」 もわからないので すみませんがお話しにならない状態です。。。
paraflaのＨＰしか見てませんが、すぐにできるようです。mxmlとASを利用すれば、すぐに作れます。
最後の行には妙なHTMLタグのようなものが入っていますよね。 _root.time_secs.text = counter_secs;</span> この「</span>」さえ削除すれば問題ないと思いますが。 私がしてみたことですが。 Flash を起動させて， ActionScript 2.0 設定の新規ドキュメントを作成し フレーム1 のステージ上には 「time_days」「time_hrs」「time_mins」「time_secs」という インスタンス名を付けた４つのダイナミックテキストフィールドを用意しました。 そして 書かれていらっしゃるスクリプトを フレーム1 にそのままコピペし 「</span>」を削除しました。 これでパブリッシュやムービープレビューすれば 難無く動くカウントダウンするものができましたよ。 書かれていらっしゃるような > シーン=シーン 1, layer=ao, frame=1、行 7シンタックスエラー > ※該当箇所：var currentTime = today.getTime(); というエラーは出ませんでした。 エラーとして出るのは上にも書いた「</span>」についてのみです。 ココ(このサイトのこのページ)にコピペされたスクリプトと 実際に Flash のフレーム1に書き込んだスクリプトが違うのではないでしょうか？ 例えばその 7 行目がありますが↓ var currentTime = today.getTime(); この var の前に全角スペースなど入れていたら そのようなエラーが出ます。 (ココに書かれたスクリプトにはそのようなものは入っていないようです。)
～～～字数制限により＃１からの続き～～～ というわけで 全体的にスクリプトを考えなおしてみました。 Loader インスタンスは２つだけにして 画像を交互にロードし ロードした方の Loader のインデックス(表示順/Z軸方向順番/昔で言う深度)を上に持って行くという方法のスクリプト例です。 //＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ // 写真のURLを保存する配列 var photoArr:Array; // ボタンの参照を保存する配列 var btnArr:Array; // 写真を自動的に変更するタイマー var imageTimer:Timer; // 大きな画像を読み込むローダー２つ var bigImageLoader0:Loader; var bigImageLoader1:Loader; //ローダーを作成＆「mainTarget」内に配置 bigImageLoader0 = new Loader(); mainTarget.addChild(bigImageLoader0); bigImageLoader1 = new Loader(); mainTarget.addChild(bigImageLoader1); // 上側にあるローダーの番号 var loaderNum:int = 1; // 現在表示されている画像の番号 var imageNum:Number = 0; //-------------------------------- // 初期化の処理 //-------------------------------- // 写真のURLの配列を設定する photoArr = new Array(); photoArr[0] = "c00.jpg"; photoArr[1] = "c01.jpg"; photoArr[2] = "c02.jpg"; photoArr[3] = "c03.jpg"; photoArr[4] = "c04.jpg"; // ボタンの配列を設定する btnArr = new Array(); btnArr[0] = btnA; btnArr[1] = btnB; btnArr[2] = btnC; btnArr[3] = btnD; btnArr[4] = btnE; // タイマーを起動 startTimer(); // 大きな画像を読み込む loadImage(); // タイマーをスタートする function startTimer() { imageTimer = new Timer(2000,0); imageTimer.start(); //タイマーイベントで関数 gotoNextPhoto を実行 imageTimer.addEventListener(TimerEvent.TIMER, gotoNextPhoto); } //btn01をクリックした時に関数 gotoNextPhoto を実行 btn01.addEventListener(MouseEvent.CLICK,gotoNextPhoto); //関数 gotoNextPhoto の定義 function gotoNextPhoto(evt:Event = null):void { for (var i=0; i <=btnArr.length-1; i++) { btnArr[i].y -= 85; if (btnArr[i].y<=0) { btnArr[i].y=380; } } imageNum+=1; if (imageNum>=photoArr.length) { imageNum=0; } // 大きな画像を読み込む loadImage(); } //btn02をクリックした時に関数 gotoPrevPhoto を実行 btn02.addEventListener(MouseEvent.CLICK,gotoPrevPhoto); function gotoPrevPhoto(evt:Event):void { for (var i=0; i <=btnArr.length-1; i++) { btnArr[i].y+=85; if (btnArr[i].y>=381) { btnArr[i].y=40; } } imageNum-=1; if (imageNum<=-1) { imageNum=photoArr.length-1; } // 大きな画像を読み込む loadImage(); } // 大きな画像を読み込む function loadImage() { //loaderNum の 0 と 1 を入れ替える loaderNum^=1; // 新しい画像を読み込む var url="gallery_img/"+photoArr[imageNum]; var req=new URLRequest(url); this["bigImageLoader"+loaderNum].contentLoaderInfo.addEventListener(Event.COMPLETE, onImageLoad); this["bigImageLoader"+loaderNum].load(req); } // 大きな画像が読み込まれたら実行される処理 function onImageLoad(eventObj) { //↓全ての btnArr[○○] のアルファを 100% にしておく for (var i = 0; i <= btnArr.length-1; i++) { btnArr[i].alpha=1; } //↓読み込まれた画像に該当するボタンのアルファ 50% にする btnArr[imageNum].alpha=0.5; //ロードされたローダーの表示順を一番上にする mainTarget.setChildIndex(this["bigImageLoader" + loaderNum],mainTarget.numChildren-1); this["bigImageLoader"+loaderNum].alpha=0; this.addEventListener(Event.ENTER_FRAME, onFadeIn); } // フェードインをつける function onFadeIn(eventObj) { this["bigImageLoader" + loaderNum].alpha+=0.1; // フェードインの処理を取り除く if (this["bigImageLoader"+loaderNum].alpha>=1) { this.removeEventListener(Event.ENTER_FRAME, onFadeIn); } } //＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
クラス というのは MovieClip を継承するクラス(ライブラリの中にシンボルとしてあるもの)のことでしょうか？ またもしそうであれば new で呼び出した時点で，それはクラスではなく単なるインスタンスになると思うのですが。。。 > 2.1のインスタンスを渡すと中にある > 　TextFieldを根こそぎ列挙して、 >　 その中身の値を読みだす これに関してのみについて回答します。 (それ以外はよくわかりません。) 例えば ステージ上に３つのダイナミックテキストフィールドを用意するとしますよね。 そのうちの１つは無名にしておいて 後の２つには txt0 と txt1 というインスタンス名を付けるとします。 そして 無名のダイナミックテキストフィールドには 「あいう」と手入力しておいたとします。 txt0 には「123」と手入力しておいたとします。 txt1 には空(カラ)にしておいたとします。 その後適当に ステージ上にムービークリップやボタンなどをいくつか用意してみます。 その３つのテキストフィールドと いくつか用意した何かをまとめて選択し ムービークリップに変換します(シンボル名は適当)。 そしてライブラリの中の今作成したムービークリップを選択して プロパティのリンケージより「TextMC」というクラス名を付けるとします。 ※【添付図】↓ 上で作成したステージ上のムービークリップは不要なので削除します。 この状態で 例えばメインタイムラインのフレーム1に次のように書けば 一応はムービークリップ(インスタンス)内の テキストフィールドのみのプロパティが取得できますよ。 //======================================= var my_mc:TextMC = new TextMC(); //my_mc 内の表示オブジェクトを走査 for (var i:int = 0; i<my_mc.numChildren; i++) { //走査によって発見した表示オブジェクトを変数化 var prop = my_mc.getChildAt(i); // //もしその表示オブジェクトが TextField であれば if (String(prop) == "[object TextField]") { trace("発見したものは？…" + prop); trace("そのインスタンス名は？…" + prop.name); trace("その text は？…" + prop.text); trace("---------------------"); } } //(↓これはあってもなくても良いです) addChild(my_mc); //======================================= 　
「gallery.fla」ファイルの 「メインのタイムライン」の レイヤー「as」の 「フレーム1」のスクリプトの冒頭部分に とりあえずは次の★部分のような付け加えをすれば良いと思います。 //============================================= stage.scaleMode = StageScaleMode.NO_BORDER; var page:uint = 1; btn_home.addEventListener(MouseEvent.CLICK, xPage1); function xPage1(event:MouseEvent):void { //★---↓以下付け加え↓------------ if (Pict_mc != null) { removeChild(Pict_mc);//Pict_mcステージから削除 Pict_mc = null; //Pict_mcの参照を切る } //★---↑以上付け加え↑------------ if (page != 1) { page = 1; gotoAndPlay(currentFrame + 1); } } btn_hp_gallely.addEventListener(MouseEvent.CLICK, xPage2); function xPage2(event:MouseEvent):void { if (page != 2) { //★---↓以下付け加え↓------------ if (Pict_mc != null) { removeChild(Pict_mc);//Pict_mcステージから削除 Pict_mc = null; //Pict_mcの参照を切る } //★---↑以上付け加え↑------------ page = 2; gotoAndPlay(currentFrame + 1); } } //===以下略==================================== 　 その他問題点はまだあると思いますが， とりあえず書かれていらっしゃる件については何とかなるかと。 　 それと，，， Flash ではなく XML の冒頭ですが， <?xml version="1.0" encording="UTF-8" ?> ではなく <?xml version="1.0" encoding="UTF-8" ?> が正解ですね。 元のままでも Flash の動作的には問題がないかもしれませんが ブラウザは受け付けないと思いますよ。
すでに解決済みかもしれませんが、簡単にできます。mp3等のファイルを画像と同じような方法で挿入し、ASで少しプログラムを書けばすぐに完成です。
ColorShortcuts.init(); を予め実行しておく必要があります。 参考URL：http://www.tonpoo.com/tweener/properties/ColorSh …
そもそも Giam では Flash など作れません。 Giam で作れるのは アニメーションGIF です(それとMNG(それとAVI))。 つまりご質問は Flash とは全く関係がありません。 しかし，これも何かの縁だと思い， 数年かぶりに私も Giam を試しに触ってみました。 試したのは Giam Windows版 Version 2.09 です。 　 > もうこれ以上遅くすることは出来ないのでしょうか。 "もうこれ以上" とはどれくらい以上でしょうか？ Giam ではウェイトの入力値に 30000 の限界があるようですが 30000 もあれば普通は十分過ぎると思いますが。。。 例えば４枚の静止画 GIF を描いて Giam に読み込ませて４コマの GIF アニメを作るとします。 例えば １コマ目を選択して 　□ ウエイト有り にチェックを入れて 　ウェイト 1/100s　[200　 ] にしたとします。 そして例えば ２コマ目を選択して 　□ ウエイト有り にチェックを入れて 　ウェイト 1/100s　[1000　] にしたとします。 ※この様子【添付図】↓ そして例えば ３コマ目を選択して 　□ ウエイト有り にチェックを入れて 　ウェイト 1/100s　[100　 ] にしたとします。 そして例えば ４コマ目も３コマ目と同様に ウェイト を 100 に設定したとします。 上のようにして作ったアニメーションは， 　１コマ目の表示… 200×1/100＝２秒間 　２コマ目の表示… 1000×1/100＝10秒間 　３コマ目の表示… 100×1/100＝１秒間 　４コマ目の表示… 100×1/100＝１秒間 というような ものすごく ゆーーーーーーーっくり なアニメーションになるのですよ。 特に２コマ目の10秒間表示など， ほとんどアニメとは呼べないような感じです。 Giam では ウェイト の入力値限界が 30000 ですから １コマの表示時間の限界は 30000×1/100＝300秒(５分) になるようです。 １コマ５分以上って， 完全にアニメーションではない静止画の世界だと思います。 　 　 ◎もっと根本的なことに関する資料や考察 　(質問本題とはあまり関係がないかも？) 「GIF89aのすべて」 http://www.geocities.co.jp/siliconvalley/1361/gi … ～引用～ > GIF89aはGIF87aの規格を拡張したものです。 > GIF89aでは以下が追加されました： > 次のフレームを表示するまでの100分の1秒単位での待ち時間の指定 上記のページはリンク切れが多いですね。。。 ということで私がさらに詳細な内容を探したもの↓。 「とほほのGIF解析」 http://sound.jp/otaq/tohoho/wwwgif.htm ～Block: Graphic Control Extension より引用～ > Delay Time(2 Bytes) > 表示する際の遅延時間(100分の1秒単位)。 。 Giam で言う ウェイト とは GIF89a 規格 で言う Delay Time のようです。 この Delay Time の領域には 2Bytes＝16bit＝65535 が割り当てられていますから ひょっとしたらウェイト時間の本当の上限は 65535×1/100＝655.36(秒)≒10.9(分) くらいなのかもしれません(不明？？？)。 少なくとも Giam では 1コマ５分超 は無理ですので そういうことをしたい場合はあきらめてください。 (例えば「静止画GIFをJavaScriptによって30分間隔で切り替える」などの方がまだ普通の方法だと思います。)
すでに他の方も書かれていらっしゃいますが Flash Maker 3 (後の Motion Maker 4) は Adobe Flash と同じく SWF(Flash Player で再生させる Flash コンテンツ)ファイルを作成するためのソフトですよ。 作成した SWF(Flash)ファイル を HTML に貼り付けてブラウザで見るのです。 「みなとみらい夜景」 http://wmirena.umu.cc/MotionMaker/MotionMaker.html ↑このページの最後で SWF を作成してます。 またこのページの最初に見えていて動いているもの(スライドショー)も SWF(Flash)ファイル です。
Flashなら凝ったものができますが、表示するだけなら、youtubeにアップロードしてホームページに貼り付けるか、HTML5で直接動画を表示してもいいと思います。
＃１ です。 > ソフトのバージョンはCS5.5です。 CS5.5 だと 操作や検索などの キーワード は 「シンボルに変換」と「モーショントゥイーン(またはクラシックトゥイーン)」辺りですね。 基本的なやりかたとしては 何にしてもとりあえず写真をシンボル化すべきでしょう。 　 手順としてまずは ステージ上に４枚の画像を 描く か 読み込む かして ステージ上に配置しますよね？ 後からでも良いですが そのステージ上に配置した４枚の画像は タイムラインで別々のレイヤーに配置しておいた方が良いです。 それでそれら４枚のの画像を１枚ずつ選択して 「修正」→「シンボルに変換」より 「ムービークリップ」または「ボタン」または「グラフィック」のうちいずれかのシンボルに変換します。 以前は「グラフィック」シンボルに変換するのが一般的でしたが CS4 以降 ActionScript 3.0 設定では 3D変形の動きなども可能になった「ムービークリップ」に変換するのが無難のように思います。 シンボル名はデフォルトの「シンボル 1」～「シンボル 4」など適当で良いです。 シンボル化されたステージ上にあるものをインスタンスと言いますが 画像の場合はとりあえずこのシンボル化されたインスタンスでないと 「モーショントゥイーン(またはクラシックトゥイーン)」ができません。 「モーショントゥイーン(またはクラシックトゥイーン)」については 字数制限もありますし図もたくさん要るのでココでは説明しにくいです。 次のサイトなどを参考にしてみてください。 「シンボルとインスタンス-モーショントゥイーン-クラシックトゥイーン-シェイプトゥイーン」 http://daaa.jp/flash-animation/ 「2012年度 情報表現演習｜ 第6回」 http://www.ne.senshu-u.ac.jp/~expr/12/12_6.html 上のサイトなどを参考にしながら ご質問でも書かれていらっしゃるように インスタンスのアルファ値を 「モーショントゥイーン(またはクラシックトゥイーン)」で 0→100 にで変化させればフェードインができます。 100→0 にで変化させればフェードアウトができます。 　 　 【下の図】↓についてですが。 これは， ４枚の画像を入れたインスタンスをクロスフェードで入れ替えて なおかつループ再生させるスライドショーのようなものを作る場合のタイムラインの様子例です。 ４枚の画像を入れたインスタンスを別々のレイヤーの同じ座標に配置し 【下の図】のようにずらしてフェードインさせると，クロスフェードができます。 (※図示の都合上タイムラインの時間軸はかなり縮小しています。) それをスムーズにループ再生させる場合は 最初の画像と同じ画像を最後にフェードインさせて そのフェードインしきったフレームのキーフレームに gotoAndPlay(○○); と書いて 最初の画像がフェードインしきったフレームに戻してやります。 【下の図】では ○○ は 4 ですが，これはこの場合だけです。 作るものによって変わります。 このようにすると 画像1フェードイン →画像2フェードイン →画像3フェードイン →画像4フェードイン →画像1フェードイン →画像2フェードイン 　…　… という流れが自然にループ再生できます。 　 操作手順など技術系のことは説明が難しく わかりにくい説明だったと思いますが 一応以上で。。。
Flash上で数値を選択できる状態なのかどうかによって取得できるのかどうかが決まると思います。選択できない場合、画面全体をキャプチャ（録画）してその動画を解析すれば、スキャナと似たような仕組みで数値を取得することができるかもしれません。
＞ ちなみにこのページのソースをコピペして試すとシンタックスエラーになってしまいます。 このページのソースに全角スペースが含まれているからではないでしょうか？ 参考までにPHPから変数を渡す方法はこれ一つだけではありません。 XMLやJSONを用いて渡す方法もあります。もし興味があれば調べてみるとよいでしょう。 (以前バイナリデータをそのまま受け渡していたシステムも作ったことがあります)
回答ですが、 私はまだ2Dでしか作ったことがありませんので、 自動で上下左右、自在(キー入力)程度くらいしか作れません。 (この程度でならお金はかからないと思います。) 3Dの場合は私は作れません。 また画像の切り替えというのは複数の画像を使用して画像を入れ替えることです。
FlashMX単体でも可能か不可能かと言えば可能ですが、スクリプト周りが ActionScript1.0(初代)と貧弱なので、画像やムービークリップだけFlashMXで 描いてパーツごとにswfに吐き出し、無料のActionScript3.0開発ツール 「FlashDevelop」でスクリプトを書いていくのが、一番楽だと思います。 洋物ツールで、慣れるまでは手強いですが、設定で日本語表示も 可能ですし、慣れると大抵のFlashゲームが作れるようになります。 Flashにこだわらないなら、FlashDevelopでAIR※を使うことによって、 iPhoneアプリやAndroidアプリなんかも作ることができます。 (※AIRとは、Flashと殆ど同じ手法・プログラムでiPhone・Android・ Windowsアプリなどを作れてしまうフレームワークです)
Flash Makerを使ったことがなく、私もまたFLASH歴は浅いのですが…。 画像はすでにシンボル化されているのですね。 されていなければ、配置された画像を右クリック→シンボルへ変換します。 種類はボタンでも良いですが、ムービークリップにした方が後々扱いやすいかなと思います。 すると「プロパティ」に<インスタンス名>というグレーの入力欄が現れます。 そこに任意のインスタンス名を入れてください。たとえばMC_Btnとしておきます。 「プロパティ」がなければCtrl+F3、もしくはウィンドウ（W）から表示させてください。 次に、ステージでそのMC_Btnを選択した状態で、「コードスニペット」より [アクション]→[クリックしてwebページに移動]をWクリックします。 「コードスニペット」がなければウィンドウ（W）から。 すると新規レイヤーが作成され、アクションスクリプトの入力欄が現れます。 コメントアウトの説明文に従い、URLを書き換えるだけでOKです。 ご希望の動作と違っていたらごめんなさい。
こんな感じでしょうか？ var markup:XML = 　<TextFlow xmlns="http://ns.adobe.com/textLayout/2008"> 　　<p>あああ<br></br>いいい</p> 　</TextFlow>; trace(markup); markup.children()[0] = <p>ううう<br />えええ</p>; trace(markup); 参考URL：http://help.adobe.com/ja_JP/FlashPlatform/refere …
非常に古いバージョンですので、今ならflex4を使ってAS3で書いた方が早いと思います。
アクションスクリプトで飛ばさねばならないのでしょうか。 CS５ですが フレーム１を選択→画像を作成、シンボル変換→50フレームを選んで「フレームを作成」 →「モーショントゥイーンを作成」→シンボルを移動させる（自動的にキーフレームが挿入される） →100フレームを選んで「フレーム作成」→モーショントゥイーンのＴＬが勝手に伸びる →シンボルを移動させる→150フレームを選んで「フレームを作成」→同じくＴＬが伸びる ここでいったんフレーム１に戻り、インスタンスを選択してプロパティからＸ座標とＹ座標をメモります。（添付画像参照） （別に最初にメモしてもかまわないのですが） 再び150フレームに戻り、インスタンスを選択し、上記の座標を記入します。 プレビューするとぬるぬる動きます。 他のオブジェクトとの兼ね合いがあるのでしたら、最初にシンボルに変換してインスタンスを作成した際に、そのインスタンス内のＴＬで上記の操作を行えば、このインスタンスだけ、同じ動作を繰り返し行うことになります。
おそらく on(release){ getURL(_root.FlashVarsで受け取った変数名); } で行けると思います。 例えば <param name="FlashVars" value="myVar=http://○○/△△/□□.html" /> みたいにしてるのでしたら on(release){ getURL(_root.myVar); } ということになります。
>このような状況を解決するような手法、またはツールなどありましたらご教示お願いします。 デザイナー曰く「慣れたツールで作りたい」、つまり、ツールを変更したくないということですよね。 どんな高機能な他のツールを提案されても、デザイナーが断って終わりなのでは？ どちらかが諦めるしか無いでしょう。 デザイナーが他のツールを使うか、 デザイナーの望まれるツールで作成したファイルを、プログラマが使いやすいフォーマットになるように変換できるツールを作るか、手作業で変換するか。
こちらの「Projector」が該当します。 参考URL：http://www.adobe.com/support/flashplayer/downloa …
多分ファイル直接リンクでの動画呼び出しがfc2ホームページの仕様で制限されており、 ブログに外部呼び出しが出来ないんじゃないかと思います。 自分のサイト(ホームページ)のドメイン以外は外部呼び出し扱いになります。 fc2ホームページではファイル倉庫としての使用は出来ません。 例外で、ファイル名を「banner.拡張子」にすると外部呼び出し可能だとありますから、 ファイル名を「banner.swf」にしてみると出来るかもしれません。
http://dotinstall.com/lessons/fb_connect_php まずこっちでログインしてるFacebookのIDをとる方法を学習 （『ちょっと何言ってるかわからない』状態ならとりあえず PHPの本一冊買ってにらめっこしながら見てください） あとはASでSharedObjectなりPHP+MySQLでDBなりに IDごとに今日すでにクジを引いたかを記録 その際に時間の記録をサーバー側で用意すれば クライアント側で日付の改竄はできません 集計とかとりたいだろうし PHP+MySQLとかでDBに記録するほうが 使い回しが効きやすくていろいろ捗ると思います ついでに上記の動画のFBでログインの方法で アクセス制限もかけとけば不正アクセスも防げて 一石二鳥ってやつです
またよく読んでみたのだけど もしかして言ってるのが添付画像の部分のことなら やりたい事とやり方はだいたい合ってますが 基本クラスはシンボルごとの定義なので 同じシンボルのインスタンスごとに 基本クラスを変えるってのはできないです あとからインスタンスごとにスクリプトで 基本クラスを変えるというのもできないはずだし むしろできちゃう方がいろいろマズい気がします （同名型違いのプロパティがあってみたり 片方のクラスにあるプロパティが片方でなかったり 権限違いでプロパティにアクセスできなくなっちゃったり インスタンスの継承クラスが途中で変わるとかヤバいです） プロパティパネルのクラスのとこなら 先に言った通りそこはドキュメントクラスのことで やりたい事ができる所じゃないです 何れにしてもMovieClipの拡張クラスじゃないと フレームを使ったムービーの基本クラスにはできないです Class Main extentds MovieClip ドキュメントクラスや基本クラスに使うなら基本的にはこれです
一般的で普通の状態だと 質問するまでもなく普通に↓でできますけどね。 delete closs.onEnterFrame; 例えば 質問で書かれているスクリプトを書いた階層のタイムラインがフレーム2まであって フレーム1にそのスクリプトを書かれていたとします。 その場合，例えば(あくまでも例えば)， 次のようにすれば良いだけです。 //---------------------------------- //このタイムラインの再生を停止 stop(); function moveCross() { this._x = _root._xmouse; this._y = _root._ymouse; } closs.onEnterFrame = moveCross; //「closs」クリック時の動作 closs.onRelease = function(){ //★ closs.onEnterFrame を削除 delete closs.onEnterFrame; //このタイムラインをフレーム2に進めて停止 gotoAndStop(2); } //---------------------------------- もっともこの場合(に限って)は //★ closs.onEnterFrame を削除 delete closs.onEnterFrame; の部分を //★ closs.onEnterFrame を削除 delete this.onEnterFrame; としても良いです。 または //★ closs.onEnterFrame を削除 delete this._parent.closs.onEnterFrame; という回りくどい書き方をしても良いと言えば良いです。 また仮にもし スクリプトを書かれた階層が(closs を置いた階層が) _root(メインタイムライン) であれば //★ closs.onEnterFrame を削除 delete _root.closs.onEnterFrame; のように 絶対パスでターゲットパスを指定しても良いです。 どこに書いたスクリプトから delete closs.onEnterFrame をしたいのかがわかりませんが， とにかく普通に delete closs.onEnterFrame をすれば良いだけです。 もしスクリプトを書く階層が違う場合は ターゲットパス(closs に対するターゲットパス)に注意するくらいでしょうか。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath …
某所へされていた質問から進展したことと言えば > アクションスクリプト2.0 奇数と偶数… のように ActionScript のバージョンを明記されたことぐらいでしょうか。 その他は全く進展していないか，むしろ退化してますね。 なぜ「a」と「b」の２つもの入力用テキストフィールドがあるのでしょうか？ その理由も書かれていませんし「c」と「d」との関連もさっぱりわかりません。 また， > cとdに出力したいのですがうまくいきません。 と書かれていますが cとdには何を出力したいのでしょうか？ この辺もわかりません。 あくまでも例えばですよ， ご質問を次のように捉えることもできるわけです。 　↓↓↓ 「a」には十の位の数を１つ入力してもらい 「b」には一の位の数を１つ入力してもらい その「ab」(例：「13」や「81」など…)の２桁の数が もし奇数であれば「c」に「○」を出力し もし偶数であれば「d」に「○」を出力したい。 その他，捉え方など無数です。 某所へされていた質問には 「xが整数であれば 剰余演算子 (x%2) で判断できる」 という内容の回答(アドバイス)を書いてくださっている方がいるにも関わらず 整数であるのかないのかすら反応(補足)されてませんし。。。 その回答(アドバイス)はとりあえず正解なのですから， 質問者の方からさらなる反応(補足)がなければ 私も含めて他の人もそれ以上書きようがないでしょう？ 　 　 とにかく，わけがわかりませんので， 私が勝手にご質問を変更します。 　↓↓↓ ステージ上には インスタンス名「a」のテキスト入力のテキストフィールドと インスタンス名「c」のダイナミックテキストフィールドと インスタンス名「btn」のボタンがあります。 「a」にある数を１つ入力し ボタン「btn」をクリックしたとき もしその数が奇数であれば テキストフィールド「c」には「奇数」という文字列を表示し もしその数が偶数であれば テキストフィールド「c」には「偶数」という文字列を表示したいと思います。 ActionScript 2.0 でのスクリプトを教えてください。 以下は私が勝手に変更した質問に対する回答です。 「a」「c」「btn」が存在する タイムラインのフレームに書くスクリプト例です↓。 //============================================ //「btn」クリック時の動作 btn.onRelease = function():Void { // //「a」に入力された文字を数に変換 var a_num:Number = Number(a.text); // //もし「a」に入力されたものが非数であれば if (isNaN(a_num)) { //「c」に「数を入力して！」を表示 c.text = "数を入力して！"; //もし「a」に入力された数が小数であれば } else if (a_num != Math.floor(a_num)) { //「c」に「整数を入力して！」を表示 c.text = "整数を入力して！"; //もし「a」に入力された数が奇数であれば } else if (a_num%2 == 1) { //「c」に「奇数」を表示 c.text = "奇数"; //それ以外は } else { //「c」に「偶数」を表示 c.text = "偶数"; } }; //============================================ または， テキストフィールド「a」に対して 0～9 までの文字しか入力できないように制限をかけた場合 「btn」クリック時の動作は 次のような感じに変更になると思います↓。 //============================================ //「a」の入力文字制限(0～9) a.restrict = "0-9"; //「btn」クリック時の動作 btn.onRelease = function():Void { //もし「a」が未入力であれば if (a.text == "") { //「c」に「数を入力して！」を表示 c.text = "数を入力して！"; //「a」が未入力でなければ } else { //「a」に入力された文字を数に変換 var a_num:Number = Number(a.text); // //もし「a」に入力された数が奇数であれば if (a_num%2 == 1) { //「c」に「奇数」を表示 c.text = "奇数"; //それ以外は } else { //「c」に「偶数」を表示 c.text = "偶数"; } } }; //============================================ とにかく 漠然とした質問には，漠然とした回答しかできません。 つまり 質問が具体的でなければ，具体的な回答もできません。
或いはAIRでMySQLのクライアントを作ってしまうのもアリかもしれません。 幸いSocketが使えますし、MySQLはオープンソースなので望みはありそうです。 (ざっと見たところ大半がC、一部がC++で構成されているようです) もし作れたら成果物をswcライブラリとして公開すれと、それなりの需要がある気がします。
ParaFla! は ActionScript 1.0 しか使えませんから， ActionScript 1.0 です。
「言語(ActionScript)」だけを考えて解決しようとしていらっしゃいませんか？ 「言語」など自体を考えても答えは出ませんよ。 問題は言語ではなく 「サーバ(またはローカルPC)のハードディスクからXMLをロードするのには時間がかかる」 「XMLをロードしてからでないとそれを読んだり操作することはできない」 というたったそれだけの(超当たり前な)ことだけですから。 音波も届いてからじゃないと耳で聞くことはできませんよね？ 光も届いてからじゃないと目で見ることはできませんよね？ 届いた情報について考えるのはその後ですよね？ それとまったく同じことです。 その "単純で当たり前なこと" を理解しておけば いくつかの対処法は思いつくはずです。 //------------------------------------ ～～云々(略)～～ function XMLload(e:Event):void { ～～云々(略)～～ //別の関数 traceArr を実行 traceArr(); } //別の関数 traceArr の定義 function traceArr():void { trace(ary[5]); trace(ary_name[2]); } //------------------------------------ ↑function XMLload から見れば その関数外で取り出していることになりますよね？ または メインのタイムラインを２フレームなど複数フレームにして 書かれていらっしゃるスクリプトを 例えばメインのタイムラインのフレーム1などに書いておいて stop(); をかけておきます。 そして xmlファイル のロードが完了してから フレーム2 に進めてます↓。 //------------------------------------ ～～云々(略)～～ //このフレームで再生停止 stop(); function XMLload(e:Event):void { ～～云々(略)～～ //次のフレームで停止 nextFrame(); } //------------------------------------ そしてフレーム2には //------------------------------------ trace(ary[5]); trace(ary_name[2]); //------------------------------------ と書いても良いですよね？ 完璧に関数外です。 その他 あるムービークリップを作成しておいて xml のロードが完了してから， ムービークリップ内のフレームの再生を開始させて そのムービークリップ内で trace(MovieClip(root).ary[5]); trace(MovieClip(root).ary_name[2]); を実行させても良いでしょう。 とにかく最初に書いた 「サーバ(またはローカルPC)のハードディスクからXMLをロードするのには時間がかかる」 「XMLをロードしてからでないとそれを読んだり操作することはできない」 ということをとりあえずはしっかり認識して 「Event.COMPLETE という便利なものを使うことによってXMLのロード完了時に指定した関数を実行できる」 ということを理解すれば 後はどうにでもなるという感じだと思います。 昔は Event.COMPLETE みたいな便利物はなかったので 外部データのロードなどをする場合， 例えば 「フレーム1 で外部データのロード命令を出して フレーム2 と フレーム3 をループ再生させることによって ロードされたデータに最終データ(フッターデータ や 総文字数 などから割りだす)が入っているかどうかを確かめて 最終データが届いていたなら フレーム4 に進めてデータ処理をする」 みたいなことをしていたのですよ。 ロード待ち処理装置の自作です。 全部関数外です。 それに比べれば全自動でかなり楽なものです。 (全自動で楽になった分，単純当たり前な理屈をあまり考える必要もなくなったので，逆にわかりにくくなったかもしれませんね。)
結論から言うと、FlashBuilderでも使用可能です。 ただし、マウスをポチポチして操作できるような代物ではありません。 MinimalCompsの中のソースコードをそれなり改造する必要があります。 軽くMinimalCompsの中のコードを読んだところ、これらのコンポーネントは flash.display.Spriteを継承して作られているようです。FlashBuilderの MXMLデザインモードで使用するためには、mx.core.UIComponentを継承した、 またはmx.core.iVisualElementを実装したコンポーネントしか使用できません。 http://www40.atwiki.jp/spellbound/pages/97.html MinimalCompsをFlashBuilderで使用するには、↑でも書かれているように ActionScriptをゴリゴリ書いて実装していくのが正当な方法のようです。 どうしてもMXMLデザインモードで操作したい場合は、MinimalCompsの中の ソースコードを弄って、Spriteの代わりにUIComponentを継承してやる 必要があります。(試しにやってみたのですが、数か所UIComponentと 競合する部分があり、どうにも一筋縄ではいかないようです) 参考URL：http://help.adobe.com/ja_JP/FlashPlatform/refere …
「実行を○秒停止する」というニュアンスで考えるのではなくて 「実行を○秒待つ」または「実行を○秒遅延させる」と考えれば良いでしょう。 この遅延には Timer クラスを使えば良いと思います。 その場合の修正案です↓。 //--------------------------------------------- package { import flash.display.*; import flash.events.*; import flash.utils.*; //↓削除 //import fl.events.*; import flash.filters.*; //↓Timer クラスと TimerEvent クラスのインポート import flash.utils.Timer; import flash.events.TimerEvent; public class Main extends MovieClip { public var logoObj1:MovieClip = new logo1(); public var blur:BlurFilter; public var i:uint = 70; public var ii:uint = 0; //↓勝手に適当な付け加え public var w:Number = stage.stageWidth; public var h:Number = stage.stageHeight; //Timer インスタンス tm の宣言 public var tm:Timer; //↓待つミリ秒数の設定(1秒＝1000ミリ秒) public var wait_ms:uint = 5000; public function Main():void { opening(); } private function opening(e:Event=null):void { blur = new BlurFilter ; addEventListener(Event.ENTER_FRAME,BlurMinus); //↓Timer インスタンス tm を作成 tm = new Timer(wait_ms,1); //↓指定ミリ秒後に setBlurPlas を実行する設定にする tm.addEventListener(TimerEvent.TIMER, setBlurPlas); } private function BlurMinus(e:Event):void { blur.blurX = i; blur.blurY = i; logoObj1.filters = [blur]; logoObj1.x = w / 2; logoObj1.y = h / 2; addChild(logoObj1); if (i == 0) { //↓BlurMinus のイベントリスナーを削除 removeEventListener(Event.ENTER_FRAME,BlurMinus); //↓タイマースタート tm.start(); } i = i - 2; } //↓setBlurPlas の定義 private function setBlurPlas(e:TimerEvent):void { //↓毎フレームBlurPlasを実行 addEventListener(Event.ENTER_FRAME,BlurPlas); } private function BlurPlas(e:Event):void { blur.blurX = ii; blur.blurY = ii; logoObj1.filters = [blur]; logoObj1.alpha += 0 - logoObj1.alpha / 50; if (logoObj1.alpha==0) { //↓削除 //removeEventListener(Event.ENTER_FRAME,BlurMinus); removeEventListener(Event.ENTER_FRAME,BlurPlas); } ii=ii+2; } } } //---------------------------------------------
なんでALT属性が判っているのに・・・ objectやembedタグは非対応描画エンジン用に別のタグを入れ子にして対応できるようになってるよ。 <object><embed></embed></object> みたいにしたことない？ 同じ様に更に内側に希望のタグを入れ子にしていけば良いからやってごらん
>>1に半分被っていますが 「何故FLASHを使用した　サイトが減ってしまったのか」 iOSで一貫して、Windows Phoneは7以降はサポートせず、 またAndroidも今後Flashランタイムの開発中止を明言しています。 Flashを表示できないモバイル用とPC用で別箇にコンテンツを制作した場合、 それだけで工数(制作時間や制作/メンテ費用)は倍近くに跳ね上がります。 HTML5なら今時のブラウザやモバイルでも表示できるので、 その分浮いた時間と金でもっと中身を充実するためです。 「これから FLASHは衰退していくと考えられるのか」 非常にゆっくりと(恐らく5～6年かけて)衰退していくものと思います。 ただし、開発ツールであるFlash CSや同Builderはまだ当分生き続けるでしょう。 と言うのも、Flash衰退を見込んでかどうかは知りませんが、 Flashと同じノウハウでiPhoneやAndroidアプリが作れる AIRと呼ばれる機能が強化されているためです。
＃１です。 私がいつも使う簡易的な方法を書き忘れていましたので 方法を追加します。 配列に30個の何か(何でも良い)を入れて spliceメソッドでランダムな要素を３回抜き取っても良いと思います。 ご質問には 具体的に何をどのようにして表示させているのかを書かれていないため 回答としても具体的な方法は書けませんが 例えば次のような感じです。 //------------------------------------- //配列「arr」を作成 var arr:Array = new Array(); //「arr」の各要素に1～30の数を入れる for (var i:Number = 0; i<=29; i++) { arr[i] = i+1; } //３回ループ for (i=0; i<=2; i++) { //変数「rnd」に配列の要素数内のランダムな整数を取得 var rnd:Number = Math.floor(Math.random()*arr.length); //「rnd」からランダムな要素を１つ抜き取りその要素を取得 var num:Number = Number(arr.splice(rnd, 1)[0]); //出力窓に出力してみる trace(num); } //------------------------------------- 仮にもし 内部が 30フレーム のムービークリップ「mc0」「mc1」「mc2」があったとして， それらムービークリップ内をランダムなフレームで停止させるのでしたら 上記スクリプトの //出力窓に出力してみる trace(num); の部分を //この階層にある「mc0」～「mc2」内をそのフレームで止める this["mc"+i].gotoAndStop(num); のように変えれば良いだけです。 実際には何をどのようにして表示させているのかわからないので どのように変えるべきかは知りませんが。 なお， 最初に「簡易的な方法」と書きましたが 上記spliceメソッドを使う方法で 例えば1000文字のランダムシャッフルをするなど 大量な情報を処理しようとすると 配列の大きさを変えるためか結構時間がかかるのです。 大量な情報を処理する場合は ＃１に書いた「配列を偏りなくランダムに並替える」の方が早いです。
FlashDevelop 4.0.1 / FlexSDK 4.6を使用して検証してみました。 var urlVariables:URLVariables = new URLVariables("a=1&b=2"); var obj:Object = new Object(); for (var k:String in urlVariables) { 　obj[k] = urlVariables[k]; } for (k in obj) { 　trace(k, '=>', obj[k]); } trace(obj.a); trace(obj.b); と言うコードを組んだ結果、 b => 2 a => 1 1 2 となりました。 ConnectPHPと言うものが何者だか解らないのですが、 生の戻り値データを取得することはできないのですか？ つまり、Flash側で"a=1&b=2"という文字列は取れないのですか？
肝腎なバージョンを書かれていませんが。。。 > on (release) { > nextFrame(); > } これは Flash 5 以上 で使用できる範囲の ActionScript 1.0 ですね。 しかし。。。 Flash 5(12年くらい前のバージョン) は古すぎて 構造作り直しなども大変(回答するのもかなり面倒)になりますから 勝手に Flash MX 以上をお持ちで ActionScript 1.0 を使うものということに決めます。 Flash MX 以上とは Flash MX，Flash MX 2004，Flash 8，Flash CS3，Flash CS4，… のことです。 まずは 「ドキュメント全体をおおう透明なボタン」からですが これ自体に書かれた on (release) {…} などのスクリプトを全て消します。 そして ステージ上のその透明ボタンを選択して プロパティインスペクタより「インスタンス名」を付けます。 ここでは「btn」というインスタンス名を付けることにしておきます。 ※参考【添付図】↓ そしてスクリプトを書くためのレイヤーを別に用意して (すでに用意してあればそのレイヤーで良いです)， そのレイヤーのフレーム(フレーム1 など)に次のように書きます(コピペ可)。 //---------------------------------- //このタイムラインの再生を停止 stop(); //ドラッグする px 数の設定(※適当に変える) var drag_px = 50; //マウスを監視するオブジェクトを作成 var obj = new Object(); //マウスのリスナーとして obj を登録 Mouse.addListener(obj); //マウスをプレスした x座標 を入れる変数の宣言 var press_x; //「btn」プレス時の動作を定義 btn.onPress = function() { // //マウスをプレスした x座標 を変数に入れる press_x = _xmouse; // //「btn」クリック時の動作を定義 btn.onRelease = function() { //「btn」クリック時の動作を削除 delete btn.onRelease; //マウスが動いた時の動作を削除 delete obj.onMouseMove; //このタイムラインを次のフレームに進める nextFrame(); }; // //マウスが動いた時の動作を定義 obj.onMouseMove = function() { //マウスの座標がプレスした x座標 より drag_px 以上右になれば if (_xmouse>=press_x+drag_px) { //「btn」クリック時の動作を削除 delete btn.onRelease; //マウスが動いた時の動作を削除 delete obj.onMouseMove; //このタイムラインを前のフレームに戻す prevFrame(); } }; }; //---------------------------------- ※Flash MX 以上で使用可 　 Flash Player 6 以上で動作可 　 ActionScript 1.0(パブリッシュ設定は 2.0 でもOK) 「どれくらい(どこからどこまで)右にドラッグした時に前のフレームに戻すのか？」 などがわからなかったため勝手に， //ドラッグする px 数の設定(※適当に変える) var drag_px = 50; のようにして 50px 以上右にドラッグしたときにフレームを戻すようにしていますが この数値は適当に 10 とか 100 とかに変えてください。 あと， 「ドラッグ」には「ドロップ」が付き物です。 つまり 「マウスプレス」には「マウスアップ」が付き物です。 何が言いたいのかというと 「ドラッグ終了時に Flash 上でマウスアップする」ということは， 「ドキュメント全体をおおう透明なボタンをクリックする」のと同じことになるのです。 ですから「ドラッグ」が成立したときには 「透明なボタンクリック」を無効にしなければなりませんよね？ でないと，また元のフレーム(次のフレーム)に戻ってしまいます。 そんなこんながあったり on (release) {} では スクリプトを書く場所が分散してしまってやりにくいので onRelease などを使うように変更しています。 ○○.onRelease=function(){}; や ○○.onMouseMove=function(){}; などを 「イベントハンドラメソッド」と言いますが これらは delete で削除することができるので使いやすいです。 on (release) {} など 「イベントハンドラ」の方は，スクリプトで削除できません。 もし on (release) {} などを使う方向で行く場合は 別にフラグとなる変数をいくつか用意するなどして 色々な条件分岐した動作を考える必要が出てきます。 　 ◎ 【添付図】↓ について バージョンがわからなかったので 適当に Flash 8 での画面↓を用意しましたが バージョンによって見かけは変わります。 Flash MX ～ CS3 までは比較的似ているかもしれませんが Flash CS4 以降は全く別な感じに見えると思います。
エラー大量発生の原因は単純に フレーム "inhouse" には， 少なくとも player2 が存在しないからでしょうね。 (enter1 の方も存在しないかもしれませんが。) ※【添付図】↓ 仮にもし存在していたとしても， Event.ENTER_FRAME で ずっと this.gotoAndStop("inhouse"); をさせ続けるのはおかしいと思います。 (そのフレーム以外に行けなくなってしまいます。) player2 が存在してもしなくても 何にしても removeEventListener すべきでしょう。 //------------------------------ stop(); player2.addEventListener(Event.ENTER_FRAME,go); function go(event:Event):void { player2.x += 5; if (player2.hitTestObject(enter1)) { //↓追加↓ player2.removeEventListener(Event.ENTER_FRAME,go); this.gotoAndStop("inhouse"); trace("ok"); } } //------------------------------ 　 「タイムラインに置いたMovieClipからフレーム移動するとrootやstageが参照できない」 http://fumiononaka.com/TechNotes/Flash/FN1003002 … 　 　
どのバージョンのものかわからんから3.5aでどうなっているか知らんが、何かAdobeのサイトにコンパイラのソース(Java製)っぽいものがあった http://opensource.adobe.com/svn/opensource/flex/ … parseRangesのコード見る限り意図的にそうしているんじゃないかなあ？
http://movies.cmizer.com/cm/private/movie/k/Fv/e … これが動画の本体のようです。 このXMLを見ると中身にこのようなSWFがあります。 http://movies.cmizer.com/cm/template/sushi_ninki … 前回返答したプレイヤーSWFがこのSWFに各種画像(imageUrls)と 各種テキスト(textUrls)を食わせて、定型の動作をさせているだけのようですね。 http://cmizer.com/movie_editor 事実、下記リンクの中ほどにある「人気の事実を伝える 人気編」を見ると、 画像とテキストが異なるだけで動作が全く同じことに気づきます。
まず大前提として、hitTestPointはシェイプにしか反応できません。 それ以外のものは表示オブジェクトの矩形で判定されます。 ビットマップも同じです。(アルファ透過している部分も画像なのです) Illustratorから読み込んで作ったシンボルの中身がシェイプでできている、 即ちシンボル(グラフィック・ムービークリップ)やグループ、 描画オブジェクトが含まれていないことをまず確認してみてください。
「TextField柄」で塗り潰すのですから その TextField がどこにあっても同じです。 場所は関係ありません。 例えば ハンカチの「花柄」。 「花柄」は「花柄」です。 「山のどの辺りに咲いていた花か」などのような 花が咲いていた位置は「花柄」には関係ありません。 もし咲いていた位置が要るのでしたら ハンカチを「山柄」などにするべきでしょう。 例えば「山柄」にした上でその中に「花」を描くべきです。 (山頂付近に花を描くとか，山の麓に花を描くとか…。) 　 というわけで， TextField の位置が要るのでしたら， TextField 入りの Sprite でも用意して その「Sprite 柄」でBitmapDataを塗れば良いと思います。 // ～～～以上は略～～～～～～～～～～～～ var tf:TextField = new TextField(); tf.defaultTextFormat = new TextFormat("ＭＳ ゴシック",50,0xFF0E0E,true); tf.width = stage.stageWidth;// 幅 tf.height = 50; tf.autoSize = TextFieldAutoSize.CENTER; tf.y = 240; tf.text = "MISS!!"; //---↑以上は変更ナシ↑--- //↓２行付け加え var sp:Sprite = new Sprite(); sp.addChild(tf); //↓引数をSpriteに変更 canvas.draw(sp); //(↓念のため参照を切っておきます) tf = null; sp = null; // ～～～～～～～～～～～～～～～～～～
不可能ではないですが、現実的ではありません。 簡単に方法を示すと、 1.PSDを読み込む(またはダウンロードする) 2.PSDのフォーマットを解析する(PSDのデータ構造に関する知識が必要。下記リンク参照) 3.Photoshopのフィルタ効果を自作する 4.最終的にできたデータからビットマップを起こす となりますが、非常に低速な、負荷のかかる処理となるでしょう。 また、そこまで作るのに多大な工数を要すると思います。(最速でも数か月レベル) もう少し何がしたいのかを具体的に説明できれば、 もっとベストな代替方法が見えてくるかもしれません。 参考URL：http://www.fileformat.info/format/psd/egff.htm
携帯ソーシャル業界の挿入Flashは大抵バージョン1.1です。1.1ならほとんどのケータイに 対応しているためです。ごく初期(03～04年くらい)の機種は1.0しかダメってのがありますが、 1.0の容量制限がきつすぎるためか、流石にもうどこでもサポートしていないようです。 もしFlashを作りたいのでしたらLite2.0辺りが良いでしょう。AS2やAS3に慣れきった 状態でLite1.xの言語仕様見ると、余りのチープさ加減に軽く発狂できます。 (例：関数作れない、配列ない、オブジェクト指向なにそれ食べれるの) Lite2.0ならauとsoftbankは割と古くから対応していますし、 docomoも比較的最近の機種なら対応しています。 ただ、まともに携帯ソーシャルゲーを作るためには、Flashの知識だけではなく、 HTMLやサーバサイドプログラムの知識も必要となってくることを忘れてはいけません。 バージョンごとの機能や対応状況は、Wikipediaのページが大変詳しいです。 参考URL：http://ja.wikipedia.org/wiki/Adobe_Flash_Lite
連投申し訳ございません。 回答No.3のコードにおけるSnowクラスのコンストラクタ、Snow.Snow()に 誤りがありました。正しくは以下の通りです。 　/** 　 * コンストラクタ。 　 * @param id 通し番号。(番号が小さいほど大きく、速くなります) 　 */ 　public function Snow(id:int) 　{ 　　var amount:Number = id / LIMIT; 　　coefficient = amount + 0.1; 　　cacheAsBitmap = true; 　　addEventListener(Event.ADDED_TO_STAGE, onAddedToStage); 　　// ↓ Flashで予めシェイプを作ってリンケージする場合、ここからの処理は不要 　　var shape:Shape = new Shape(); 　　var r:int = 0xFF * (0.2 + amount * 0.8); 　　var g:int = 0xFF * (0.5 + amount * 0.5); 　　var b:int = 0xFF * (0.5 + amount * 0.5); 　　shape.graphics.beginFill((r << 16) + (g << 8) + b); 　　shape.graphics.drawCircle(0, 0, SIZE_MIN + (SIZE_MAX - SIZE_MIN) * amount); 　　shape.graphics.endFill(); 　　addChild(shape); 　　// ↑ Flashで予めシェイプを作ってリンケージする場合、ここまでの処理は不要 　}
当方の試験環境はAdobe Flash Builder 4.6(所謂Flex)ですが、 下記のコードで文字が大きく横に伸びるようになりました。 <?xml version="1.0" encoding="utf-8"?> <s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" applicationComplete="onCompleteHandler(event)"> 　<fx:Script> 　　<![CDATA[ 　　　import mx.core.UIComponent; 　　　import mx.events.FlexEvent; 　　　 　　　[Embed(systemFont="Segoe UI", embedAsCFF="false", fontName="Segoe UI", mimeType="application/x-font")] 　　　private var _font:Class; 　　　 　　　protected function onCompleteHandler(event:FlexEvent):void 　　　{ 　　　　var format:TextFormat = new TextFormat(); 　　　　format.font = "Segoe UI"; 　　　　format.color = 0xCCCCCC; 　　　　format.size = 24; 　　　　var field:TextField = new TextField(); 　　　　field.autoSize = TextFieldAutoSize.LEFT; 　　　　field.embedFonts = true; 　　　　field.defaultTextFormat = format; 　　　　field.text = "Hello, world!"; 　　　　field.scaleX = 3; 　　　　field.scaleY = 0.8; 　　　　var canvas:UIComponent = new UIComponent(); 　　　　canvas.addChild(field); 　　　　addElement(canvas); 　　　} 　　]]> 　</fx:Script> </s:Application>
もしすべてのflaファイルに画像以外に何も置いていないのであれば、 ドキュメントクラスから ---------- this.getChildAt(0).x = 5; ---------- とすれば、すべての画像のx座標を動かせるかと思います。
> 以下のような書き方だと > オブジェクトＡがオブジェクトＢに入っている間 > ずっとpointが+1されてしまいます。 それは 書かれていらっしゃるスクリプトの部分に元々原因があるのではなくて その if文 の実行のさせ方に元々の原因があるのでしょう。 おそらく onClipEvent (enterFrame) {}　の{}内や onEnterFrame = function() {};　の{}内， または onClipEvent (mouseMove) {}　の{}内や onMouseMove = function () {};　の{}内などで if文を実行させているから 「ずっと point が +1 される」のではないでしょうか？ あと， 「どうなったときに point が +1 され， どうなったときに point が +1 されなくして， さらにどうなったときに 再びpoint が +1 されるように戻したいのか。」 この辺もハッキリさせる必要があります。 つまり， ムービークリップA と B が接触した瞬間にだけ point を +1 して その後は一切 point を +1 する必要はないのでしょうか？ それとも またいつかは point を +1 させるような必要が出てくるのでしょうか？ ということです。 結局， 「今はどうしているのか」 そして 「だからどうしたいのか」 が良くわからないということですね。 これらのことがわからなくても漠然とした回答ならできます。 しかし具体的な回答はできないので 私が勝手に作った１つの対策入りの状況例を書きます。 　 _root のフレーム1のステージ上には インスタンス名「a」というムービークリップと インスタンス名「b」というムービークリップがあるとします。 ※【図】↓ その場合の， 「a」や「b」が存在するタイムライン(_rootなど)のフレーム(フレーム1など)に書くスクリプト例です。 //------------------------------ //変数 point の値の初期化 var point:Number = 0; //フラグとなる変数「flg」を用意 var flg:Boolean = false; //「b」をプレスしたときに実行する関数を定義 b.onPress = function():Void { //「b」のドラッグを開始 this.startDrag(); // //マウスが動いたときに実行する関数を定義 this.onMouseMove = function():Void { //もし「b」が「a」と接触した上で if (this.hitTest(_root.a)) { //もし「flg」が false であれば if (!flg) { //「point」の値を 1 加算 _root.point += 1; //試しに 「point」の値を出力 trace(_root.point); //「flg」をtrueにする flg = true; } //「b」が「a」と接触していなければ } else { //「flg」をfalseにする flg = false; } }; }; //「b」を放したときに実行する関数を定義 b.onRelease = b.onReleaseOutside=function ():Void { //「b」のドラッグを終了 this.stopDrag(); // //マウスが動いたときに実行する関数を削除 delete this.onMouseMove; }; //------------------------------ ※ActionScript 2.0 　 Flash MX 2004 以降で使用可 　 Flash Player 6 以上で動作可 スクリプトが書けましたら 「制御」→「ムービープレビュー」で 「b」をドラッグして動作検証してみてください。 勝手に作った状況での具体的な回答ではなく 漠然とした回答を書くとするなら 「フラグを用意してそのフラグを切り替えて 動作の分岐をすれば良いのではないでしょうか。」 ということです。 またはフラグなど用意せずに バッサリと delete ○○.onMouseMove; や delete ○○.onEnterFrame; などをしてしまっても良いかもしれません。 その辺は 「今はどうしているのか」 そして 「だからどうしたいのか」 によって変わります。
var t:Timer = new Timer(3000); t.addEventListener(TimerEvent.TIMER, function(e:*):void{ 　navigateToURL(new URLRequest("http://hoge.com/"));stop(); }); t.start(); 「Flash制作環境とバージョン、PC向けか携帯向けか、ActionScriptのバージョン」 上記は質問の際必ず明記してください。 PCかケータイ用か、あるいはFlashCSかFlashDevelop(Builder)かによって、 またActionScriptのバージョンによって書き方が全然違います。 (上記のコードはActionScript3でFlashDevelop(Builder)を想定しています。 またドキュメントクラス宣言、import宣言は省略しています。) FlashCSでしたらわざわざTimerを使わずとも(3秒*フレームレート)フレーム目に navigateToURLしてやるだけで行けるでしょう。
大きく2つの方法があります。詳細はここに書くには長くなりすぎてしまうため、ぐぐって見てください。 ・ムービークリップの「リンケージ」機能を使いflaから複数のasをぶら下げる ・asにasをぶら下げる(import命令、またはinclude命令を使います)
極力元のままを変えない方針で行くとするなら次のようになります。 (★部分＝追加または変更) onClipEvent (enterFrame) { //現在の時刻を取得 now_time = new Date (); //時間と分および秒を取得 hour = now_time.getHours (); minute = now_time.getMinutes (); sec = now_time.getSeconds (); //★追加：ミリ秒を取得 msec = now_time.getMilliseconds(); //時刻を表示 /* Flash Player 6 以上の場合は、 ここに時刻をダイナミックテキストに出力するスクリプトを書く */ //★変更：ミリ秒500未満の時にコロンを表示、それ以外は非表示にする colon_clip._visible = Boolean (msec < 500); }
Flash側でソースパスの設定を行います。 標準では「.」(現在のフォルダ配下のみ探す)となっていますので 「..」(現在のフォルダの 親 の配下のみ探す)を書き換えれば解決するものと思います。 ただし、パッケージ名を設定している場合はパッケージ名とディレクトリ構造を合わせるなど、 少々ややこしいことになりますので注意してください。 参考URL：http://help.adobe.com/ja_JP/flash/cs/using/WS3e7 …
一般的にWEB上で再生されるswfファイルのことをFlashと言います。 特にカタカナ表記でフラッシュと書かれている場合はほぼ100%このことです。 swfファイルはFlashPlayerで再生ができて、このFlashPlayerはPCのスタンドアロン、ブラウザプラグイン共にAdobeから無料で提供されていますし、ほぼ大体のブラウザにはデフォルトのプラグインとして組み込まれていますので、ユーザーがPlayerを意識する機会は滅多にないかもしれません。 また、モバイルプラットフォームで再生を可能にするFlashPlayerLiteというものもあって、こちらは携帯電話等に買ったときから既にインストールされている場合が多いです。 一般的なFlashという用語はそのくらいで完結するんですが、ややこしいことにこのswfファイルを作成するツールの一つとしてFlashというアプリが存在します。 Flashを作成したいと思う場合は再生側と明確にするために用語を区別する場合があります。 区別されてある場合は作る側をFlashIDEと呼んだり、もしくはFlashProfessionalとかCSとか呼んだりするのですが、作るツールの名称の歴史的経緯も長いため統一されていません。 ここらへんが、まず最初にFlashを作ってみたいと思う人をさらにややこしくしているのですが、再生する側のFlashと作る側のFlashを区別するのは今のところ読む人の理判断にゆだねている状況です。 ここから先、「Flash」という用語を再生するswfファイルの事と定義しておいて話を進めますが、 Flashを作るためには大きく分けて二つの方法があります。 １：Adobeが販売しているFlashCS5.5（もうじきCS6がでます）を買う ２：Adobeが無償提供しているFlexSDKを使う 1番は、アプリを買えば済む話しですので置いておいて、まず注目して頂きたいのは2番です。 FlexのSDKが無償で提供されているので、これを使えばFlashを作ることが出来ます。 FlexSDKそのものは無償ですが、これを便利に使うツールとしてFlashBuilderというアプリをAdobeが出しています。 > また開発ツールはFlash CS.5.5かFlash Builder4.5なのか教えて頂けると幸いです。 ですので、FlashCS5.5とFlashBuilderはどちらもAdobeの販売するアプリですので、どちらを使ってもFlashが作れます。 どちらがいいかは完全に好みですので、ご自身で選択されたらいいかと思います。 一般的にはデザインやアニメーション寄りならFlashCS、プログラム寄りならFlashBuilderがおすすめですが、 特にこうでないといけないというわけではないので、せっかくですのでいろいろ試してみることをおすすめします。 ちなみに私はどちらも特徴的なアプリですので、両方を状況に応じて使い分けています。 > いまいちFlexとAirの違いが分かりません。 Flexから作れるものがswfで、swfをアプリとしてうごかせる技術がAIRです。 違いも何も、Flexから作れるものがFlashとAIRです。 まとめます。 swfを再生＝Flashと一旦定義しておく。 FlashCS5からFlashは作れる。 FlexからもFlashは作れる。 Flexを便利に使うアプリのひとつがFlashBuilder。 FlashをアプリにできるのがAIRなので、 FlashCS5からFlashやAIRは作れる。 FlexからもFlashやAIRは作れる。 Flexを便利に使うアプリのひとつがFlashBuilder。 極端に単純化しましたので正確ではないですが、今後Flashの勉強のとっかかりになれば幸いです。
まず...， 大きく誤解をされているように思うのですが。。。 combobox_cb.selectedItem.label = ○○; ↑これだと(仮にこれが通用したとしても)， コンボボックス「combobox_cb」で選択しているアイテムのラベルが「○○」になってしまうだけですよ。 わかりますでしょうか？ 他のものに喩えるなら 「バッター(打者)をAからBに変更する」 のではなくて 「バッター(打者)の名前をAからBに変更する」 みたいな感じになるというか。。。 つまり 「選択アイテム自体を切り替える」のではなくて 「選択されたアイテムのラベルを変える」になってしまうということです。 (場合によっては同名のラベルがどんどん増えていくことになる。) そうではなく， 「選択アイテム自体を切り替える」」のでしたら， selectedItem.label ではなく selectedIndex を変える必要があります。 　 それと...， スクリプト中に次の１行↓がありますよね。 combobox_cb.prompt = 'フォント2'; この prompt を設定した場合 コンボボックスのアイテム 非選択時 には デフォルトでその prompt である「フォント2」の項目が選択されているということになるんです。 selectedIndex で言うところの -1 が選択状態になるということです。 この prompt には label というものがそもそもありません。 label などないのでそれを変えようとしても > TypeError: Error #1009: null のオブジェクト参照… となるのです。 　 あくまでも私の推測ですが ですから二重に誤解されているような気がします。 というわけで 私の推測を含む↓修正例(★の部分)です。 //--------------------------------------- package { import flash.display.*; import flash.events.*; import flash.text.*; import fl.events.*; import fl.controls.*; import fl.data.DataProvider; public class test extends MovieClip { var comboData:Array = new Array( {label:"フォント1"}, {label:"ＭＳ ゴシック"}, {label:"フォント3"} ); var combobox_cb:ComboBox; //★↓重複しているので削除↓★ //var combobox_cb:ComboBox; var format:TextFormat; var text:TextField; public function test () { init (); } private function init ():void { combobox_cb = new ComboBox(); combobox_cb.dropdownWidth = 200; combobox_cb.width = 200; combobox_cb.move (150, 50); combobox_cb.dataProvider = new DataProvider(comboData); combobox_cb.prompt = 'フォント2'; format = new TextFormat(); format.font = "ＭＳ ゴシック"; text = new TextField(); text.defaultTextFormat = format; text.text = 'テキスト'; addChild (combobox_cb); addChild (text); text.addEventListener (MouseEvent.CLICK, changeHandler); } private function changeHandler (e:Event):void { trace (e.currentTarget.getTextFormat().font); //★---↓以下変更↓---★ //コンボボックスの各アイテムをループ for (var i:int = 0; i <= combobox_cb.length-1; i++) { //もしラベルとフォント名が同じであれば if (combobox_cb.getItemAt(i).label == e.currentTarget.getTextFormat().font) { //そのアイテムを選択 combobox_cb.selectedIndex = i; //この forループ を抜ける break; } } } } } //--------------------------------------- 　
＃１ですが。。。 > パブリッシュプレビュー時には、下記のメッセージが表示されます。 > 「行6' { 'が必要です。」 > ～略～ > 行９とは…。 > 「 } 」となります。 は？ 何が？ 私はちゃんと作ってみて動作検証してから回答してるんです。 ちなみに もう一度最初から100フレームのムービーを作ってみて ＃１に書いたスクリプトをフレーム100のキーフレームにコピペしてみましたが エラーも出ない上，ちゃんと動作もしましたよ【図】↓。 　 　 > タイムライン最後のフレームに行っても、 > 再生停止せずに、 > すぐにループしてしまい最初のフレームに戻って再生されてしまいます。 最終フレームに stop(); だけを書いた場合も止まらないのでしょうか？ もし止まらないのであれば すでに異常なことをされているということです。
＃１です。 > ■症状 > テキストエリアをステージに配置せずASだけで作成し > プレビュー(Ctrl+Enter)すると > 必ずエラーになります。 > > ■解決策 > ASはそのままで、ステージにテキストエリアを配置しこれを削除してからプレビューすると > 問題なく表示されるのですが、これはなぜなのでしょうか？ 一体全体何を書かれているのでしょうか？ テキストエリアをステージに配置するようにしなけれなならない状況にしているのは 私ではなく質問者さん自身ですよ。 ご質問のスクリプトで > var textInput:TextArea = new TextArea(); と書かれていますよね？ こう書かれている以上， TextArea をライブラリに登録しておく必要があるのでしょう？ 質問する際にそういう状況だったからこそ，そのスクリプトが書けたのでしょう？？ 本来，そのようにしておくことに関しては 質問者の方が 「テキストエリアをライブラリに登録してある状態でスクリプトを実行しています」 などと書くべきことです。 質問者が書くべきその事項を書かれていないので 私が後にこのページを見た方が混乱しないよに 質問者に代弁して ＃１ で， 「本体FLAドキュメントのライブラリには TextAreaコンポーネントがすでに登録されているものとします。」 と書いているのです。 (なお，ステージ上に配置しただけでもライブラリに自動登録されるので使えます。) そもそも TextArea というのは Adobe の人がコンポーネントとして作ったムービークリップです。 わかりますでしょうか？ 一般的な テキストフィールド など 元の Flash に内包されているものとは違って TextAreaコンポーネントは ムービークリップの中にテキストフィールド などを入れて Adobe の人が ユーザ にとって使いやすいように ActionScript もろとも その構造を "Flashで" 作ったムービークリップです。 少なくともそういう構造をしたムービークリップを ライブラリに登録しておかなければ そのムービークリップを new で呼び出して使えないでしょう？ そういうことですよ。 とにかく。 ＃１で 「本体FLAドキュメントのライブラリには TextAreaコンポーネントがすでに登録されているものとします。」 と書かせる状況を作ったのは私ではありません。 なぜ質問者が勝手に作った状況を 回答者である私が説明にないとならないのか，，， 全くもって疑問ですし，本末が転倒しています。。。 　 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > this["mc"+i].buttonMode = true; > > できれば、指のマークにしたいのですが > 良い解決策はありますでしょうか？ そうすれば テキストフィールド内にマウスでアクセスできなくなりますが良いのですよね？ これも， くれぐれも誤解のないように書いて置きますが そのような状況(テキストフィールド にアクセスできなくなる状況)にしようとしているのは 質問者さんですよ(つまり回答者である私ではありませんよ。) 親であるムービークリップの mouseChildren を false にすれば良いです。 具体的には for (var i:int = 1; i<=3; i++) { //ムービークリップ「mc1～3」を作成 this["mc" + i] = new MovieClip(); //「mc○」のプロパティを適当に決める this["mc"+i].x=10; this["mc"+i].y=30+(i*30); this["mc"+i].buttonMode=true; //メインタイムラインに「mc○」を配置 addChild(this["mc"+i]); の部分を for (var i:int = 1; i<=3; i++) { //ムービークリップ「mc1～3」を作成 this["mc" + i] = new MovieClip(); //「mc○」のプロパティを適当に決める this["mc"+i].x=10; this["mc"+i].y=30+(i*30); this["mc"+i].buttonMode=true; //★↓付け加え this["mc"+i].mouseChildren = false; //メインタイムラインに「mc○」を配置 addChild(this["mc"+i]); のようにすれば良いです。
> タイムライン上だけで作ると惜しいものができたのですが、 > Images5までいってImages1に戻ったときに、 > Images5の上からImages1を重ねるという操作がわからず、 > タイムラインで作るのを諦めました。 と書かれていらっしゃいますが， そこら辺をどうするかを "具体的にイメージする" ということができなければ 結局何でやっても同じだと思いますよ。。。 何にしてもまずは具体的な動作シナリオ(アルゴリズム(手品のタネ))のイメージを作って そのイメージ通りに動くように タイムラインで動きを作ったり， ActionScriptをコーディングしたりするわけですから。 タイムラインで作る方法は 定番中の定番の方法ですが下の【添付図】↓をご参考に。 【添付図】↓を見てイメージは湧きましたか？ 本来，これくらいの仕組みは自力で考え出さなければなりません。 　 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 次にスクリプトです。 例えばメインタイムラインのフレーム1など， フレームに書くスクリプト例です↓。 //--------------------------------------------- //Imagesの色分け用に色指定する配列を適当に作成 var colArr:Array=[0xFF0000,0x00FF00,0x0000FF,0xFFFF00,0x00FFFF]; //スプライト Images1～Images5 を一気に作成＆配置 for (var i:int=1; i<=5; i++) { this["Images"+i] = new Sprite(); this["Images"+i].graphics.beginFill(colArr[i-1]); this["Images"+i].graphics.drawRect(0, 0,300,-500); this["Images"+i].graphics.endFill(); addChild(this["Images"+i]); } //２秒後に関数「startImages」を実行するタイマーを用意 var myTimer:Timer=new Timer(2000,1); myTimer.addEventListener(TimerEvent.TIMER, startImages); //カウンタ用の変数cntを用意 var cnt:int=0; //Images○の動作を開始させる関数「startImages」の定義 function startImages(e:TimerEvent):void { //カウンタをカウントアップ cnt = (cnt<5)? cnt+1:1; //動かす「Images○」のy座標を0にする this["Images"+cnt].y=0; //動かす「Images○」の表示順を一番上(最高深度)に移動 this.setChildIndex(this["Images"+cnt], this.numChildren-1); //毎フレーム 関数「moveImages」を実行 this.addEventListener(Event.ENTER_FRAME,moveImages); } //関数「moveImages」の定義 function moveImages(e:Event):void { //「Images○」をスライド this["Images"+cnt].y+=10; //「Images○」のy座標が500以上になれば if (this["Images"+cnt].y>=500) { //「Images○」のy座標を500で固定して this["Images"+cnt].y=500; //毎フレーム 関数「moveImages」を実行するのを解除 this.removeEventListener(Event.ENTER_FRAME,moveImages); //タイマースタート(２秒後に「startImages」が実行される) myTimer.start(); } } //関数「startImages」を初回実行 startImages(null); //--------------------------------------------- 　 タイムラインで作るにしてもスクリプトで作るにしても やはりどちらにしても肝腎なのは， 具体的な動作シナリオのイメージでしょうね。 　
リンク先の動作をあくまでも「Flash」として表示させたいのであれば仰っている通りAdobe Flash Professional CS5.5が必要となるでしょう。 ただ、CSS3やjqueryを用いても問題ないブラウザを公開対象としているのであれば「jquery スライドショー」等で調べてみてください。 Flashではなくとも、似たような動作は可能です。
当然ゲームと言ってもピンキリなので、何とも言えませんが、基本のプログラミングは学んでいるのであれば、難易度の低いトランプなどのカードゲームなら2週間もかからないんじゃないでしょうか。 趣味であればクオリティなどは自分のさじ加減だと思いますし。 Flashの言語の基本を覚えるのに1週間、初心者であれば、色々調べながらゲーム制作に1週間くらいでしょうか。かなり個人差はあると思いますが。 大体、制作の難易度順にゲームのジャンルをまとめるとこんな感じですかね。 【↑難易度低い】 ・カードゲーム(トランプ系) ・ボードゲーム(すごろく/オセロ系) ・パズル(テトリス/ぷよぷよ系) ・シューティング ・アクション/格闘 ・シミュレーション ・　RPG 【↓難易度高い】 RPGやシミュレーションゲームはプログラミングも大事ですが、完成させるまでは根気の世界だったりするので、難しいというより時間がかかります。 留意点はいきなり物理演算が必要なゲーム(ピンボールなど)や３Dに挑戦しないことです。 あと、将棋や、敵が自由に動き回るアクションなどの高度なAIが必要なものも避けましょう。 ほぼなんでも作れるようになる期間、ということだと最低2～3年はかかると思います。 すべてが出来るようになるまで勉強するのではなくて、作りたいもののために必要なことを覚える、という意識が大事です。 トランプのゲームであれば、初心者にオススメは神経衰弱です。 ちょうどソースありました。 http://allabout.co.jp/gm/gc/66837/ まずはソースを参考にしてみて、そこから自分でゼロから作ってみるといいです。 (年間休日２００日なんて仕事があるんですね・・・。うらやましい・・・。)
まず， > flashにflvの動画を埋め込んだらループしない などと書かれていますが，参考にされたページ http://itpro.nikkeibp.co.jp/article/COLUMN/20090 … には 「flvの動画の読み込み方」が書かれてあるのです。 「flvの動画の埋め込み方」など書かれていません。 ご自身の中でこの辺のことをハッキリさせてください。 もし「flvの動画の埋め込んだ場合」は SWFのタイムラインを使ってflvを再生させるのですから > 「パブリッシュ設定」の[HTMLラッパー] - > [再生]内にある項目の[ループ] などが関係します。 しかし 参考にされたページのように「flvの動画の読み込んだ場合」は FLVPlaybackコンポーネント内 で外部flvが再生されるのですから > [再生]内にある項目の[ループ] などは全く関係しません。 普通はSWFのタイムラインは基本的には止めておくものです。 (ループ再生どころか再生させること自体も普通はしない。) ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ というわけで FLVPlaybackコンポーネントに "読み込んだ" 外部flv動画を 無限にループさせる方法です。 まずステージ上に配置した FLVPlaybackコンポーネント を選択して プロパティインスペクタ(プロパティパネル)を表示させて 「インスタンス名」を付けます。 ここでは仮に「myPlayback」というインスタンス名を付けるとしておきます。 その「myPlayback」が存在するタイムラインのフレーム (例：メインのタイムラインのフレーム1 など)に 次のようなスクリプトを書きます(コピペでもOK)。 ◎ ActionScript 3.0 の場合 //------------------------------------- //VideoEventクラスのインポート import fl.video.VideoEvent; //「myPlayback」の再生が完了したときに関数「videoPlay」を実行 myPlayback.addEventListener(VideoEvent.COMPLETE,videoPlay) //関数「videoPlay」の定義 function videoPlay(e:VideoEvent):void{ //ビデオの再生を開始 e.currentTarget.play(); } //------------------------------------- ActionScript のバージョンを書かれていませんが Flash CS5.5 ということですから おそらく上の ActionScript 3.0 用スクリプトで良いと思います。 しかし ActionScript 2.0 設定のドキュメントを作成されている可能性も全くないとも言いきれませんので 念のため ActionScript 2.0 での場合のスクリプトも書いておきます。 ◎ ActionScript 2.0 の場合 //------------------------------------- // リスナーオブジェクトを作成 var videoListener:Object = new Object(); //ビデオ再生完了時の動作を定義 videoListener.complete = function(e:Object):Void { //ビデオの再生開始 e.target.play(); }; //「myPlayback」にイベントリスナーを登録 myPlayback.addEventListener("complete", videoListener); //-------------------------------------
> 横に弾んでいくのではなく、 > 同じ場所で縦にのみバウンドする動き つまり単純に 「x座標方向(横方向)移動関係のスクリプトを全て消せば良い。」 それだけのことでしょう？ 横に動く理由(原因)は 「x座標方向に動かしているからx座標方向に動く」 それだけのことです。 ですからこの理由(原因)を取り除けば良いだけです。 最初の「move_05_00_fla05_as1.fla」内の 「player(ボールMC)」自体に書かれたスクリプトを変更する場合は 次のようになります(x座標に関係する行を消しただけ)。 //--------------------------- onClipEvent (load) { _y = 150; dy = -10; } onClipEvent (enterFrame) { dy += 0.5; // 下方向に移動量を増やす _y += dy; // 地面に着いたらyの移動量を反転 if (_y>250) { _y = 250; dy *= -0.8; } } //--------------------------- 　 　 > また、バウンドがその場で止まったあと、 > 横に少し転がって止まる 私が上に書いたスクリプトでも 元のスクリプトでも，バウンドは決して止まりません。 -0.8倍 ずつ小さくなるだけです。 ですからまずは， 「『バウンドが止る』とはどういうことなのか」 を定義する必要があります。 その定義した状態(条件)になれば 『横に転がる』という動きをさせるわけですが 「どのように『横に転がる』のか」 これも書かれていないのでわかりません。 さらに「少し転がって」の 「『少し』とはどういうことなのか」 もわかりません。 『少し』とは 時間的に『少し』なのか，距離的に『少し』なのかすらもわかりません。 すべてにおいてアヤフヤですね(考える気すらもないのでしょうか？)。 もしスクリプトをコーディングするのでしたら その前にこの辺のことはしっかりと "具体的に" 考えておく必要があります。 スクリプト以前(以下)の話です。 とにかく他人まかせ(または PCまかせ)でアヤフヤなことだらけなので 私が勝手に決めた定義と動きで行きます。 //--------------------------- onClipEvent (load) { _y = 150; dy = -10; } onClipEvent (enterFrame) { dy += 0.5; // 下方向に移動量を増やす _y += dy; // 地面に着いたらyの移動量を反転 if (_y>250) { _y = 250; dy *= -0.8; //もし dy の絶対値が 1 未満になれば if (Math.abs(dy)<1) { //x座標を 80 に向けて 1/20 ずつ近づける this._x +=(80-this._x)/20; } } } //--------------------------- 　 気に入らない動きであれば自由に変更してください。 　 思うのですが， 何故このような動きにスクリプトを使う必要があるのでしょうか？ もし，ActionScript やそれ以前(以下)のことすら考える気もないのでしたら 最初からスクリプトなど使わずにモーショントゥイーンで作成すれば良いだけだと思います。 モーショントゥイーンを使えばもっと良い動き(情緒や感性あふれる動き)を簡単に作ることができますよ。 「移動するバウンドボール（オレンジのサンプルFLASH講座）」 http://orange.2-d.jp/flash/anime/03.html 「FLASH活用講座 トゥイーンアニメーションを作る」 http://juen-cs.dl.juen.ac.jp/html/flash/04/03/ex … 「24　リアルなボールのバウンド - MdN Design Interactive」 http://www.mdn.co.jp/di/articles/655/?page=4
as3ならJPEGEncoderというクラスがあるので簡単に実現できますが、 as2では、サーバ―にBitmapDataのピクセル情報をすべて送って サーバ側で変換しなければ無理なので、サーバの負荷がものすごい高くなります。 ■Flashの内容を画像に変換する方法 http://zapanet.info/blog/item/969 ■X-LABO:Flashステージ上の表示を画像データに http://www.dango-itimi.com/blog/archives/2005/00 …
Fladeは元々が ActionScript 1.0 用に作られた古い物理演算ライブラリですから なんとかすれば Flash Lite 2.0 で動くかもしれません(不明)。 Google検索「Flade」 http://www.google.co.jp/search?hl=ja&ie=UTF-8&q= … ActionScript 3.0 でも良いとかになると 次のように検索すればある程度情報が出てくると思います。 Google検索「物理演算 ライブラリ Flash」 http://www.google.co.jp/search?hl=ja&ie=UTF-8&q= …
function moveMC(e:Event):void { この書き方からすると、なんらかのイベントに関連付けた(addEventListenerした)関数であるように思いますが。 それなら、その関数を停止させたい場面でremoveEventListenerすれば良いだけだと思います。 書かれたソースを見る限り、moveMCはあくまで関数であり、オブジェクトではありません。 オブジェクトではないので、メソッドを定義させる事ができません。 moveMC.stop();は、stopメソッドの呼び出しという意味になるので、存在しないものを呼び出そうとしている間違いですね。 そんな間違いにエラーメッセージが「stopが定義されていない」と出るのだとしたら親切じゃないですね。 それとも、ActionScriptの内部的には関数であってもオブジェクトなのでしょうか？ ま、そんな疑問は余談ですが。 参考URL：http://oshige.com/flash/as3note_cs4/2009/09/-rem …
> 未定義である可能性のあるメソッドstop～ 未定義なんでしょ。 実装してやればＯＫ
よく分かりませんが、startMM内の mc.addEventListener(Event.ENTER_FRAME,moveMM); を mm.addEventListener(Event.ENTER_FRAME,moveMM); に、したらどうでしょう？
もう解決されてしまったかもしれませんが、 デフォルトの設定が記述されたxmlを書き直せば、 Flash再起動後、一括で設定が変わるはずです。 Macの場合は下記の場所にあるファイルを変更します。 (Windowsの場合はAdobe以下は一緒だと思ったので検索等で調べてください。) /Users/[ユーザー名]/Library/Application Support/Adobe/Flash CS5/ja_JP/Configuration/Publish Profiles/ default.xml おそらく設定を変更してなければ64行目 ---------------------------------------------------------- <OmitTraceActions>0</OmitTraceActions> ---------------------------------------------------------- ↓ 0を1に変更 ---------------------------------------------------------- <OmitTraceActions>1</OmitTraceActions> ----------------------------------------------------------
cntが0の場合 (mc.x<cnt*50) の部分は、(mc.x < 0) ですよね mc.xが0になると、(0 < 0) となり、条件式は偽(false)です。 10加算されることもなくなり、その後ずっと0のままになるのではないでしょうか？ if (mc.x<=cnt*50) { にしてみては？
mc.x などという書き方をされているところから推測して ご使用の ActionScript のバージョンは 3.0 ですよね？ また何の説明もありませんが mc.x の mc とはステージ上にあるムービークリップのインスタンス名ですよね？ その辺のことはちゃんと記述すべきです。 その他に関しても説明が不足し過ぎているため 「いったい何だ？ どうしたいんだ？」と思うことが多々多々ありますが 私の推測を含めて一応スクリプトを考えてみました。 /*===========================================*/ //カウンタとなる変数「cnt」を用意 var cnt:int=0; //「mc」を右に 5px 動かす関数「moveMC」を作成 function moveMC(e:Event):void { if (mc.x<200) { if (mc.x<cnt*5) { mc.x+=1; } else { //「mc」から毎フレーム実行する関数「moveMC」を削除 mc.removeEventListener(Event.ENTER_FRAME,moveMC); } } else { //指定時間間隔で関数「startMC」を実行するのをやめる myTimer.removeEventListener(TimerEvent.TIMER, startMC); } } //5秒間隔で動作するTimerインスタンスを作成 var myTimer:Timer=new Timer(5000,0); //指定時間間隔で関数「startMC」を実行 myTimer.addEventListener(TimerEvent.TIMER, startMC); //タイマースタート; myTimer.start(); //関数「startMove」の定義; function startMC(te:TimerEvent):void { //カウンタに１を加算 cnt++; //「mc」に毎フレーム実行する関数「moveMC」を登録 mc.addEventListener(Event.ENTER_FRAME,moveMC); } //関数「startMove」をすぐに実行 startMC(null); /*===========================================*/ 5秒間隔で5pxずつ動くのですから かなり地味な動きですよ。。。
事前にmc.xの初期値を控えておいて、 差分が10未満の時だけ+1するようにしたら良いんじゃない？ mc.addEventListener(Event.ENTER_FRAME,function(event){ mc.scaleX += 0.01; mc.scaleY += 0.01; if ((mc.x - mc.xの初期値)< 10) { mc.x = mc.x+1; } }); イベントそのものがいらないなら、removeEventListenerしちゃっても良いけど。
ｉＰｈｏｎｅではＯＳの構成上Flashファイルは使用出来ませんが、それ以外ではまだ現役です。 ＦｌａｓｈはWindows、Mac、ルナックスで動作可能なファイルですが、これに起因するフリーズも又多いアプリです。 アドビのＦｌａｓｈ作成ソフトは『HTML5』の環境でのファイル作成に移行していますので、近い将来ＩＥはＩＥ９以外では 閲覧出来ない可能性も有ります。 結論としては近い将来消滅すると考えています。
「ひとつ前のシーン」の件は少しややこしい(色々な場合がある)のでとりあえず置いておいて 「Shiftキー」を押すことで シーン「P33」のフレーム「P33end」に移動するスクリプトを書きます。 リスナー関数の仮引数(ご質問のスクリプトの場合は「event」)には 発生したキーボードイベントオブジェクトの参照が入ります。 そのキーボードイベントのkeyCodeプロパティを調べると そのキーボードイベントを発生させたキーコードがわかります。 『もしそのキーコードが「SHIFT」キーであれば…』というif文を付け加えれば良いので 次のようになります↓。 //************************************** stop (); stage.addEventListener (KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_033); function fl_KeyboardDownHandler_033 (event:KeyboardEvent):void { if (event.keyCode == Keyboard.SHIFT) { MovieClip(this.root).gotoAndPlay ("P33end", "P33"); stage.removeEventListener (KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_033); } } //************************************** Keyboard.SHIFT は Keyboardクラスの定数です。 このような書き方を知らなくても(ヘルプなどで調べなくても)別にかまいません。 fl_KeyboardDownHandler_033 内に trace(event.keyCode); などと書いて「制御」→「ムービープレビュー」すれば キーコード(コード番号)得られます。 「SHIFT」キーのキーコードは 16 です。 ですから上のコードの if文 の部分を次のように変えても良いです。 if (event.keyCode == 16) ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ さて「ひとつ前のシーン」です。 上のスクリプトを原型にして 関数名だけを変えて「ひとつ前のシーン」に移動する場合は次のようになります。 //************************************** stop (); stage.addEventListener (KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_034); function fl_KeyboardDownHandler_034 (event:KeyboardEvent):void { if (event.keyCode == Keyboard.SHIFT) { MovieClip(this.root).prevScene(); stage.removeEventListener (KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_034); } } //************************************** この prevScene() ですが これは gotoAndStop(○○) と同じで そのシーンの先頭フレームで止まります。 gotoAndPlay(○○) と同じように シーンの先頭フレームから再生を開始させたい場合は MovieClip(this.root).prevScene(); の後に MovieClip(this.root).play(); と書く必要があります。 ただし この MovieClip(this.root).play(); を付け加えて動作するのは Flash Player 10 以上(要 Flash CS4 以上)のみの場合があります。 この辺は場合(その他の条件)によって変わるので実際にやってみないと何とも言えません。
Internet Explorerを選択すると開けませんか。 あるいは、その添付ファイルをデスクトップ等に保存しておいて、Internet Explorer等のブラウザのウインドウ内にドラッグアンドドロップすると開けませんか。他のWEBブラウザでもいいと思いますが。
1です。 OSのバージョンは？ IEのバージョンは？ FlashPlayerのバージョンは？ リンク先を真似たっていうけど、正確に真似たの？ アレンジ加えてスクリプト書いたから動かないの？ ふわっとし過ぎなんですよ質問が。 回答つける人がいちいちリンク先なんか見に行かないですよ普通。 どういう風に書いてどういう風なエラーが出るとかもっと具体的にかないと 回答も曖昧な回答しかつかないですよきっと。
ムービークリップ内に子ムービークリップを作って 親元の方のムービークリップを回転させれば良いのではないでしょか？ と言ってもここでは 図なども１枚しか提示できませんしサンプルＦＬＡも提示できないので そういう技術系(図画工作系)の回答は難しいですね。。。 私の言っているのはこんな感じ↓のことです。 「Flash CS4 で 3D をやってみる！」 http://suzupara.iinaa.net/mixi/cs4_3d_1/
「function」は SWF4(携帯用Flash) では通用しません。 と言うことは， 作成しようとされている SWF は，SWF6以上(SWF8以下)ですよね？ そうだとするなら ご質問本題の回答以前の問題で， まずテキストフィールドに変数名を付けること自体が間違ったやり方です。 テキストフィールド に変数名を付けるのは Suzuka の場合は SWF4 を作成するときのみです。 (Adobe(Macromedia) Flash の場合は Flash Player 5 用以下の SWF をパブリッシュするときのみです。) 要するに昔の遺物で， テキストフィールド に変数名を付けた Flash は不具合が多々起こります。 (今回のご質問の件の不具合とは全く別の不具合です。) 「テキストフィールドのインスタンス名と変数名について」 http://help.adobe.com/ja_JP/AS2LCR/Flash_10.0/he … > 変数名をダイナミックテキストフィールドや > テキスト入力フィールドに割り当てることができます。 > これによって、変数に値を割り当てることができます。 > これは、旧バージョンの Flash Player (Flash Player 4 など)用 > のアプリケーションを作成するときに使用する可能性のある > 非推奨の機能です。 　~~~~~~~~~~~~ SWF6 以上では ダイナミックテキストフィールドには "インスタンス名" を付けて ダイナミックテキストインスタンス.text = ○○; でテキストフィールド内に○○を表示させます。 ダイナミックテキストインスタンス.text = ○○; この意味をもうちょっと厳密に書くと 「ダイナミックテキストインスタンスのtextプロパティに○○という値を代入せよ」 となります。 Suzuka の場合は さらにこうすることによって シンボルリスト内のダイナミックテキストを １つにできるというメリットも増えます。 ご質問本題に関してですが テキストフィールドの中の文字列を使ってさらに演算を繰り返すこともできます。 しかしそれは普通はしません。 「演算は演算」です。 そして 「その演算結果をテキストフィールドに表示する。」です。 このように別々に処理(キッチリと明示的に処理)をするのが一般的な方法です。 シンボル名「スコアスプライト」(インスタンス名「scoreBoard」)内には 例えば「message_txt」というインスタンス名を付けたダイナミックテキストと 「score_txt」というインスタンス名を付けたダイナミックテキストとを用意します。 また変数名は削除します。 その場合の 「スコアスプライト」内のフレーム1のスクリプト変更例です↓。 //---------------------------------- this.score = 0; this.message_txt.text = this.score_txt.text = this.score; function scorePlus() { this.score ++; this.message_txt.text = this.score_txt.text = this.score; } //---------------------------------- もし 演算用の変数(上記の場合のscore)は用意せずに テキストフィールド内の表示文字列を軸にして演算を繰り返す場合は 次のようになります(普通はしない方法)。 //---------------------------------- this.message_txt.text = this.score_txt.text = 0; function scorePlus() { this.score_txt.text = Number(this.score_txt.text) + 1; this.message_txt.text = this.score_txt.text; } //---------------------------------- 　
単純な形状なら、マスクで抜けばいいんじゃない？
_root.c = String( _root.a ); もしくは、 _root.c = _root.a + ""; とか。
まず確認ですが， Flash で「動画」と書かれると FLV などのいわゆる動画ファイルをイメージしてしまいます。 [Figure53-11:Telnetでのデータの転送]を見る限りでは そのいわゆるところの「動画」は全く関係なくて 単なるタイムラインを使ったアニメーションのタイムライン制御のご質問ですよね？ ＝＝＝ ＝＝＝ ＝＝＝ 例えば【下の図】↓のように 全部で30フレームのアニメーションがあって その フレーム10 で再生を停止させてボタンクリックで再生開始 また フレーム20 でも再生を停止させてボタンクリックで再生開始 というものを作るとします。 その場合 まず再生開始させるボタンには 例えば「play_btn」というインスタンス名を付けます。 ※下の図にはありませんが 　 インスタンス名は 　 ステージ上のボタンを選択して 　 デフォルトではステージ右側にあるはずの 　 「プロパティ」パネルの 　　　[ ＜インスタンス名＞ 　] 　 となっている欄に名前を記入して命名します。 その「play_btn」を フレーム10 と フレーム20 のキーフレームのみに配置します。 そして フレーム10 には次のようなスクリプトを書きます。 //----------------------------------------------- //(このタイムラインの)再生停止 stop(); //ボタン「play_btn」クリック時に 関数「playBtnClick」 を実行 play_btn.addEventListener(MouseEvent.CLICK,playBtnClick); //関数「playBtnClick」 の定義 function playBtnClick(e:MouseEvent):void{ //(このタイムラインの)再生開始 play(); } //----------------------------------------------- 見るからに「そのまま」という感じのプログラムですよね？ そして フレーム20 では 一旦消えた同じ「play_btn」に 「全く同じ動作(関数)」を実行させるようにするわけです。 しかしその「全く同じ動作(関数)」は すでに フレーム10 で定義してありますから ２度も３度も同じ定義をする必要はありません。 ですから フレーム20 に書くスクリプトは 次のように(たった２行分だけに)なります。 //----------------------------------------------- //(このタイムラインの)再生停止 stop(); //ボタン「play_btn」クリック時に 関数「playBtnClick」 を実行 play_btn.addEventListener(MouseEvent.CLICK,playBtnClick); //----------------------------------------------- 　
No1ですが、 SUPERcに関して、素人ブログ紹介のページをリンクしてしまったようですね。 本家は http://www.erightsoft.com/SUPER.html#Dnload がDLサイトです。 あと、アスペクト比は、NoChangeで変換すれば、白い部分で補うことは、なくなります。もちろん上記のソフトにもその項目は存在します。 http://pro.grassvalley.jp/catalog/procoder/proco … など、高画質変換ツールも存在します。 http://pro.grassvalley.jp/catalog/firecoder_blu/ … などこのメーカーのはプロフェッショナル向けなので、当然アップコンバーター、ダウンコンバーターが付属しています。私は、上記全て使用しています。やはり自由性（制限がない）があるのは、プロ用で機材、ソフトですね。そのメーカーのはオーサリングソフトにも同じ機能が付属していますので、編集ソフトであっぷ、ダウンが可能です。もちろん中から、変換ソフトも呼び出せます。 ノーチェンジで変換すると、HTMLなどで、サイズを指定すれば、当然、その大きさで枠がきまります。違うサイズだと、それを再生するソフトの仕様に準じます（黒べた、白べたで埋まります）。なのでよく、勘違いする方がおおいのです。
「どうするのか」というのは作者の意図で決めることが大半です。 ですから 「こうすべき」とか「これが良い」というような回答はできません。 というわけで 以下に書くことはあくまでも「たとえばの一例」です。 例えば「url.xml」の内容は次のようにします。 ------------------------------ <?xml version="1.0" encoding="UTF-8"?> <top> <menu> <title>Google</title> <url>http://www.google.co.jp/</url> </menu> <menu> <title>Yahoo!</title> <url>http://www.yahoo.co.jp/</url> </menu> <menu> <title>Bing</title> <url>http://www.bing.com/</url> </menu> </top> ------------------------------ この場合， 例えばフレームに書くスクリプトは次のようにします。 ※「制御」→「ムービープレビュー」での 　 動作検証用にいちいち trace を入れています。 　 (trace行は本来不要です。) //---------------------------- function startIndexMenu(success) { if (success) { //親のノードを取得 rootNode = index_xml.firstChild; trace("rootNode→ " + rootNode); // //親の持つ子ノードの数を取得 child_len = rootNode.childNodes.length; trace("child_len→ " + child_len); // //子の数だけ i の数を 0 から 1 ずつ加算しながらループ for (var i = 0; i < child_len; i++) { //子ノードを(一時的に)取得 var child = rootNode.childNodes[i]; // //_root の 変数「child○_title」に各 「title」を代入 _root["child" + i + "_title"] = child.childNodes[0].firstChild.nodeValue; trace("_root.child" + i + "_title→ " + _root["child" + i + "_title"]); //_root 変数「child○_url」に各 「title」を代入 _root["child" + i + "_url"] = child.childNodes[1].firstChild.nodeValue; trace("_root.child" + i + "_url→ " + _root["child" + i + "_url"]); } } } index_xml = new XML(); index_xml.onLoad = startIndexMenu; index_xml.load("url.xml"); index_xml.ignoreWhite = true; //---------------------------- そして 例えば１つ目のボタンには次のように書きます。 //---------------------- on (release) { getURL(_root.child0_url, "_self"); } //---------------------- ２つ目のボタンであれば次のように書きます。 //---------------------- on (release) { getURL(_root.child1_url, "_self"); } //---------------------- ３つ目のボタンであれば次のように書きます。 //---------------------- on (release) { getURL(_root.child2_url, "_self"); } //---------------------- ※以上の全スクリプト 　 ActionScript 1.0 　 Flash 5(CS5 ではなくてただの5)以上で使用可 　 Flash Player 5 以上で動作可 今現在のような こういう各ボタンの決め打ちのようなやり方では XMLのデータ量(XMLのリンク個数)の変更によって ボタンの数を変えたりすることはできません。 しかし フレームのスクリプトの方では //親の持つ子ノードの数を取得 child_len = rootNode.childNodes.length; によってデータ数を得て その個数によって forループ の数を変えていますから XMLに応じた動的コンテンツの作成にも一応は対応させているつもりです。 つまり さらに工夫することで， XMLからURLもそのリンク数自体も変えるというような さらなる発展につなげられるような形にはしているつもりです。
「全部をFlashで完結」とありますが、「親」も「コメント」も全部同じFlash内、ということですか？ > 「コメントボタン」をクリックして、ページ内に「コメント表示」 > サブ画面の「close」 とありますが、Flashには「ページ」も「サブページ」も「サブ画面」もありません。 コメントを表示するペイン（面）をムービークリップで用意しておいて、visibleやx/yプロパティで画面から消しておき、ボタンイベントで表示、別のボタンイベントで非表示にするだけです。 なので、表示/非表示だけなら非常に簡単かと。 （アニメーションやトランジションなどの各種モーションエフェクトは別として） 大変なのは、表示するペインに、コメントテキストを配置する部分です。 コメントといえば、外部から読み込んだ内容を動的表示するのだと思いますが、サーバから読込・内部オブジェクト配列に展開・テキストフィールド動的作成（個数可変のため）、親ムービークリップにAdd、件数によってはペイン内にスクロールバーも出さなければ。。。 こういう事例（別窓ふうテキストのリスト）はあまり見ないですが、Flashの苦手な事案に思えます。 HTMLとJavascript、Ajaxでやったが100倍、楽だと思いますよ。
＃１です。 そうですね。 ＃１で書いた上側のスクリプトと下側のスクリプトは同じ動きをしませんね。。。 検証不足で失礼しました。 下側のスクリプトを， 上側のスクリプトと同じ動きにするには 単純に同じように書けば良いだけでしたね。 ※＃１の下側スクリプトを変更↓ //------------------------------ var stepX:int=-1; //カウンタ「count」を用意 var count:int=0; MC.addEventListener(Event.ENTER_FRAME,xEnterFrame); function xEnterFrame(evt) { //「count」に 1 を加算 count++; //「count」の値が 5 になったとき if (count==5) { //「count」の値を 0 に戻す count=0; MC.x+=stepX*5; if (MC.x<=-1500) { MC.x=-640; } } } //-----------------------------
stage.addEventListener(KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_P1); これがずっと効き続けているから，そういうエラーが出るのでしょう。 ご質問の件に限ったことではなく 動作させ続ける必要がないイベントリスナーは なるべくその都度 removeEventListener で 登録を抹消する方が良いでしょう↓。 stage.addEventListener(KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_P1); function fl_KeyboardDownHandler_P1(event:KeyboardEvent):void { this.gotoAndPlay("P1ending"); stage.removeEventListener(KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_P1); } 再び必要になれば、 そのときにまた addEventListener をしなおせば良いです。 例えば上の例では、 上のスクリプトを書いたフレーム(シーン P1 の フレーム1？)に戻ってきたときには 自動的に再び addEventListener されるわけですから 普通はこのままで問題ないと思います。 または、 「シーン P1」内のみで this.gotoAndPlay("P1ending"); を実行させるようにするのも１つの方法です↓。 stage.addEventListener(KeyboardEvent.KEY_DOWN, fl_KeyboardDownHandler_P1); function fl_KeyboardDownHandler_P1(event:KeyboardEvent):void { if (this.currentScene.name == "P1") { this.gotoAndPlay("P1ending"); } }
HTMLのソースを見ればすぐにわかりますが，jQuery を使ったものですね。 「jQuery スライドショー」などのような感じで検索すれば情報はわんさか出てきますよ。 http://www.google.co.jp/webhp?hl=ja#hl=ja&site=w …
xx0から始まる連番だと楽なのですが… for (var i:int = 0; i < numChildren; i++ ) { getChildByName( parseInt ("xx" + i)).alpha = 0; getChildByName( parseInt ("xx" + i)).buttonMode = ture; getChildByName( parseInt ("xx" + i)).addEventListener(MouseEvent.ROLL_OVER, xxxOver); getChildByName( parseInt ("xx" + i)).addEventListener(MouseEvent.ROLL_OUT, xxxOver); getChildByName( parseInt ("xx" + i)).addEventListener(MouseEvent.CLICK, xxxOver); } しかし、名前がばらばらということで、 for (var i:int = 0; i < numChildren; i++ ) { getChildAt( parseInt (i)).alpha = 0; etc....... } で、できますが、これだと、ステージ上 (もしくはMovieClipの中)のすべてのMovieClipに適用されてしまいます。 そこで、適用したいMCを選択して新たにシンボル化してyyと名前をつけ、 for (var i:int = 0; i < numChildren; i++ ) { yy.getChildAt( parseInt (i)).alpha = 0; etc....... } もしくは、シンボル化したyyの中で、 for (var i:int = 0; i < numChildren; i++ ) { getChildAt( parseInt (i)).alpha = 0; etc....... } ただこれだと、addEventListener、alphaをそれぞれ個別に適用できませんし、 シンボル化してしまうので、FLASH上での取り回しが少し大変になります。 ほかにもやり方あると思いますけど...。
モバイル用HTMLで、Flash Playerがオワコンになったってこと。 なので、iOSアプリやAIRアプリの制作環境としては残ります。 ただこの分野は、圧倒的にネイティブアプリが強いので、サイズが大きく、動作も遅いFlashが生き残れるかどうかは微妙。 PC用HTMLでも、Windows 8のMetroインターフェースでは、Flashはおろか、Silverlightすらも動作しない。Appleに続き、Microsoftもプラグイン系技術は捨てると思われる。 元々、Flashには３つの側面があった。 ・映像再生 ・アニメーション再生 ・ビジネスアプリのインターフェース 「映像再生」はHTML5がネイティブ機能でサポート、「インターフェース」機能はAjaxに移行、アニメーションはHTML5のSVGに移行するのが世の流れのようだ。 SVGアニメーションでは、近々発売される、AdobeのSVGツール「EDGE」をチェックするのが早道かな？ 単純なものなら結構いけそうと思う。 悲しいことだが、Flashは完全に縮小に向かいつつある。 仕事依頼でも最近は「タブレット対応もあるのでなるべくFlashを使わずに」なテイストのものが増えてきた。 これからFlash習得を目指すのであれば、AS3.0のようなややこしい独自規格の学習は最小限にし、アニメーション制作程度に留めるのがいいのでは。その分、HTMLやCSS、JavaScriptに力をいれるべきだと思います。 参考URL：http://labs.adobe.com/technologies/edge/
タイムラインを使ったアニメーションがあって それに何かの動作を合わせるのでしたら Event.ENTER_FRAME でカウントをとって そのカウント数によって mc01 の 表示/非表示 を切り替えるのが１つの方法だと思います。 例えば 30fps で 11秒間 だと 331フレーム のタイムラインアニメーションがあった場合， フレーム1(経過時間0秒) に次のように書くのが１つの方法です。 //---------------------------------------- //カウンタにする変数の宣言 var cnt:int; //1フレーム進む時間ごとに毎回 関数「changeMc01」を実行 this.addEventListener(Event.ENTER_FRAME,changeMc01); //関数「changeMc01」の定義 function changeMc01(evt:Event):void { //カウントを 1 を加算 cnt++; //もしカウントが 301 になれば if (cnt == 301) { //"UP" を出力 trace("UP"); //「mc01」 を表示する mc01.visible = true; //もしカウントが 331 になれば } else if (cnt == 331) { //"down" を出力 trace( "down"); //「mc01」 を非表示にする mc01.visible = false; //カウントを 0 に戻す cnt = 0; } } //---------------------------------------- 各行に注釈行を入れているので見た目の分量は多く見えますが， 元のスクリプトよりは短いですし，単純シンプルだと思います。 　 　 ＝＝＝ ＝＝＝ ＝＝＝ > なるべくタイムラインを使わないで作成したいと > おもっているのですが、 そのタイムラインアニメーションの部分の動きがどんなものかわからないので何とも言えませんが Tweenクラスを使えば モーショントゥイーン や クラシックトゥイーン に近い動きを "だいたいの" 秒単位で指定できますから，それを使うのも１つの手かもしれません。 (ただしシェイプトゥイーン的な動きはTweenクラスでは無理です。) また Tween の終了時に motionFinish イベントも得られるので 「Tween が終わったときに ○○ する」という同期もとれます。 ◎検索例 ・Google検索「fl.transitions.easing」 http://www.google.co.jp/search?q=fl.transitions. … ・Google検索「fl.transitions.Tween」 http://www.google.co.jp/search?q=fl.transitions. … ・Google検索「Tween motionFinish」 http://www.google.co.jp/search?q=Tween+motionFin …
サイト拝見しました。 この分野のAction Scriptは、一般的なものより、Flash Media Server関連（ストリーミングやメッセージング処理）に関するものが中心になります。 （課金状況によってリアルタイムにストリーミング内容を変更したりすることが必要） おそらく、一般的なデザイン系のFlashスクールでは手も足も出ないでしょう。 自分の知っている範囲では、株式会社ロクナナワークショップか、株式会社クスールなど、かなり突っ込んだ内容のセミナーをやっている場所にいき、かつ明確に「FMS関連」 と目的を伝えて相談してみてください。 やや費用はかかりますが、複数人対応なら、出張講座もやってくれます。 課金ビジネス系のサイト構築なら、必ず元は取れると思いますよ。 株式会社ロクナナ http://rokunana.com/ 株式会社クスール http://www.cshool.jp/ 健闘を祈ります
「 Ctrl」+「Alt」+「Delete」キーを押してタスクマネージャーを起動してください。 「プロセス」タブを開き問題となる「basic」があれば「プロセスの終了」をクリックして 終了してください。
『「フラッシュ」の携帯端末向けの開発を終える』ではなく、『モバイルむけFlash Playerの開発を終える』の間違い。 要するに、『スマホのHTMLに埋め込むFlash SWF』がオワコンになる、ということ。ガラケー（Flash Lite）も同じだと思う。 まあ、iPhoneやWindows Phoneは最初からFlash完全アウトなので、Androidしか影響ないが。 AIRアプリやiOSアプリ変換など、単体動作のものは残るようだ。 あと、PC用のHTMLも危ないよ。 Windows 8 MetroインターフェースだとInternet Explorer 9ではFlash Playerは頭から動かないし、次のSafariもなんだか危なそう。 最新ブラウザが一つでも非対応になれば、いっぺんでSWFは死滅してしまう。 要するに、もうHTMLの中でFlashを使うな、ということじゃないのかな。 ゲームやアプリ開発者でない、大多数のWebデザイナは、Flash捨ててHTML5やCSS4、JavaScriptなんかに真剣に取り組んだほうがいいと思う。 でも不可解なのは、現在、モバイル上で、多数のAndoroidでちゃんとFlash Playerが動くし、Chromeなんかはサポート止める言ってない事実。第一、Androidキャリアでは、「WebのFlashもちゃんと動きます」がセールストークだったはず。 何でこんなことになったのか、全く分からない。Adobeは何を考えてんだか。
Flash上で映像とアニメーションを同期再生するのは、非常に難しいテーマです。 理由 ■Flashフレームに映像を読み込に、タイムライン上でアニメーションを合成する方式だと、映像の１コマ１コマが個々の画像として取り扱われるため、映像品質が劣化し、出力swfのサイズも巨大になって、再生不能になります（swfに書き出したらどういう意味かわかる）。 ■SWF再生時に、FLV Player等のコンポーネント（や自作のムーニークリップ）上に外部動画をローディングする方式だと、サイズは軽くなりますがが、映像とアニメーションの同期に問題が出ます。 映像は基本的に正しく再現されますが、Fkashアニメーションの再生速度は環境によって異なるため、ほとんどの場合、アニメーションの再生が遅れて酷いことになります。 なので。Flashで映像とアニメーションが同期再生するコンテンツを作るとすれば、 ■タイムライン合成 映像が小さサイズ、かつ短時間モノ（ループ再生など）の場合。 できるだけ映像を小さく作ってメモリの増大を抑える。 ■外部動画ローディング 映像とアニメを同期する必要がない場合は有望。 動機が必要な場合は、映像キーフフレーム位置にイベントを埋め込み、再生時にそのメッセージに合わせてタイミングをとりながら再生させる。 （"Person in presentation"などで使われている手法です） となります。 なので、ほとんどの場合は、FlashなどではなくAfterEffectsでリアルフレーム合成動画とするか、どうしてもFlashを使いたければ、動画フォーマットに書き出したものを、AfterEffectsやPremiereで、キー合成してムービーにするべきでしょう。
イベントリスナー(リスナー関数)の 引数 e には イベント が入り その イベント e の currentTarget または target プロパティで その イベント を受けた対象インスタンスが得られます(というかそのために e がある)。 ですから e.currentTarget で マウスオーバーイベント を受けた インスタンス を取得すれば良いです。 それと， そのイベントリスナー(リスナー関数)は何度も定義しても同じなので forの外に出した方が良い(出すべき)です。 //----------------------------------- for (var i:uint=1; i<4; i++) { var test_list:test = new test(); test_list.x=i*50; test_list.num=i; this.addChild(test_list); test_list.addEventListener(MouseEvent.MOUSE_OVER,test_func); } function test_func(e:MouseEvent) { trace(e.currentTarget.num); } //-----------------------------------
デバッガを使うと、タイムラインだけでなく、エラーが発生したレイヤーやフレーム・行も特定できます。 例えば、ムービークリップシンボル「シンボル 2 」に、名前を”スクリプト”と付けたレイヤーを作り、そのフレーム 10 に、次のようなスクリプトを書いたとします。 　var mc:MovieClip = null; 　mc.stop(); ↑　mc にはあえて null を入れていますから、当然、このフレームが再生された途端にエラー番号 1009 「 null のオブジェクト参照の～」が発生します。 このシンボルのインスタンスを配置した作品を、デバッガを通して動作確認します。 ムービー編集画面の「デバッグ」メニュー→「ムービーのデバッグ」で、デバッガが起動します。 （ CS5 では、メニューの配置や名称が変わっているかもしれません。デバッガの起動方法や詳しい使い方については、ヘルプ等をご参考になさってください） 問題がなければ、ムービーが再生されます。 しかし、スクリプトにエラーがあるとその箇所で再生が停止し、デバッグウィンドウが開いて、エラー発生時に再生していたシーンとシンボル名・レイヤー・フレームが表示されます。 反転表示になっているシンボルが、エラーが検出された箇所です。 先ほどの問題含みの作例をデバッガで見ると、 　シンボル名：シンボル 2　　レイヤー名：スクリプト　 フレーム：10 に問題があるらしいという情報が、デバッグウィンドウから得られます。 （表示例として画像を添付しましたので、よろしければご参照ください。青く反転しているシンボルが、エラーが検出されたシンボルです） さらに、エラーメッセージの最後 　　[○○○_fla.Timeline_○::frame10:2] の” frame10:2 ”の部分は、フレーム 10 に書かれているスクリプトの２行目、という意味です。 合わせますと、「シンボル２の”スクリプト”レイヤー、フレーム 10 に書かれているスクリプトの２行目」でエラーが発生した、と分かります。 つまり、シンボル 2 のフレーム 10 に書いた 　var mc:MovieClip = null; 　mc.stop(); ↑　この２行目の mc.stop(); 、特に mc のあたりが怪しいと、エラーの原因を突き止めていくことができます。
まずその前の AS2 版 ですが それは duplicateMovieClip(ステージ上にあるMCの複製) を使っているので 左上コーナーの１つは配置したままにしています。 AS3 では duplicateMovieClip(ステージ上にあるMCの複製) は使えないので 左上コーナーに MC を残す意味がありません。むしろ邪魔です。 ですからステージ上には 100×100 の ■MC は１つも残さない方が良いです。 そして if (i != 0) も削除します。 とりあえずそういうこととして このご質問で書かれているスクリプトでは 単に my_mc.addEventListener(MouseEvent.ROLL_OVER,onrollOver); の位置(書き場所)が悪いだけです。 「my_mc」は動的に参照を変える変数ですが 「my_mc」が生成した 各MC １個体 を対象としているときに my_mc.addEventListener(MouseEvent.ROLL_OVER,onrollOver); をすれば良いのです↓。 //------------------------------------------- import fl.transitions.*; import fl.transitions.easing.*; for (var i:int = 0; i<=15; i++) { //元あった if は削除 var my_mc:MC = new MC(); my_mc.x=i%4*100; my_mc.y=Math.floor(i/4)*100; addChild(my_mc); //ココに移動 my_mc.addEventListener(MouseEvent.ROLL_OVER,onrollOver); } function onrollOver(eventObj:Event):void { //ロールオーバーイベントを受けたインスタンスを取得 var target_mc:MovieClip=MovieClip(eventObj.currentTarget); //そのインスタンスをフェードアウト TransitionManager.start(target_mc, {type:Fade, direction:Transition.OUT, duration:2, easing:None.easeNone}); //そのインスタンスのイベントリスナーを削除 target_mc.removeEventListener(MouseEvent.ROLL_OVER,onrollOver); } //------------------------------------------- 配列などを使って 個々のインスタンスを参照する変数(要素)を別々に用意してもいいですよ。 そうするにしても 結局 生成した 各MC １個体 を対象として配列の要素に入れなければなりませんし 効率の良い書き方をするなら(何度も for文 を回さないとするなら) 結局，上の書き方と同じになります↓。 //------------------------------------------- import fl.transitions.*; import fl.transitions.easing.*; //生成する MC を格納する配列を用意 var mcArr:Array = new Array(); for (var i:int = 0; i<=15; i++) { //配列の各要素に生成した MC の参照を格納 mcArr[i] = new MC(); mcArr[i].x=i%4*100; mcArr[i].y=Math.floor(i/4)*100; addChild(mcArr[i]); //生成した MC の参照に対してイベントリスナーを登録 mcArr[i].addEventListener(MouseEvent.ROLL_OVER,onrollOver); } function onrollOver(eventObj:Event):void { //ロールオーバーイベントを受けたインスタンスを取得 var target_mc:MovieClip=MovieClip(eventObj.currentTarget); //そのインスタンスをフェードアウト TransitionManager.start(target_mc, {type:Fade, direction:Transition.OUT, duration:2, easing:None.easeNone}); //そのインスタンスのイベントリスナーを削除 target_mc.removeEventListener(MouseEvent.ROLL_OVER,onrollOver); } //配列に MC が入っているかどうかの検証(本題とは関係なし) mcArr[5].alpha = 0.5; mcArr[6].rotation = 45; //------------------------------------------- 細かい部分も変えていますが 要するに 配列を作っても作らなくても addEventListener(MouseEvent.ROLL_OVER,onrollOver); をする位置は同じ(この位置を考えましょう)ということです。
まずは大前提の条件が必要です。 『必ず先に testA_mc 内の var testC_mc:TestC = new TestC(); が実行されていて その後に 「テストC」の removeChild が実行される』 という場合について書きます。 また「テストA(testA_mc)」と「テストB」は 両者ともメインタイムライン(root) のステージ上にあるものとします。 この前提がある場合 「テストB」内のフレームには 次のように通常の 絶対パス でターゲットを指定するのが１つの方法例です。 MovieClip(root).testA_mc.removeChild(MovieClip(root).testA_mc.testC_mc); また次のように相対パスで指定しても良いでしょう。 MovieClip(this.parent).testA_mc.removeChild(MovieClip(this.parent).testA_mc.testC_mc); あまり使いませんが 場合によっては次のようにして stage まで遡った 絶対パス でターゲットを指定しても良いかもしれません。 MovieClip(stage.getChildAt(0)).testA_mc.removeChild(MovieClip(stage.getChildAt(0)).testA_mc.testC_mc);
＃１です。 ＃１の お礼 より引用 > MovieClip(root).hoge = MovieClip(root).fuga; > と書かずに、 > > var my_mc:MovieClip = MovieClip(root); > my_mc.hoge = my_mc.fuga; > と書くのは、 > 繰り返し、rootをMovieClip型に型変換するのは > 効率が悪いから、でしょうか？ むむむむ？？？ それは確かにその通りです。 書かれている通りで効率が悪いからですが， それ以前の問題で， ご質問に > MovieClip(root)を1回しか書かずに > 済ませる書き方は、ありませんでしょうか？ と書かれているのでしょう？ ですから その "1回しか書かず" の例を示しているわけです。 効率が良い悪いよりもっと前段階(最低条件)の話でそう書いているのです。
とりあえずは TransitionManager.start(this, {type:Fade, …略… と書かれている部分の this がダメです。 この場合ここで書いた this は「このタイムライン(階層)」という意味になります。 「このタイムライン(階層)」＝「スクリプトを書いたタイムライン全体」 ですから，このタイムラインに置いた表示オブジェクトは全てフェードアウトしてしまいます。 その上さらに for文 までブン回してますし...。 for文 も要りません。 書かれているリスナー関数の冒頭ですが↓ function onrollOver(eventObj:Event):void { これで，ここの引数である変数 eventObj には，ロールオーバーイベントが入ります。 さらに eventObj.target や eventObj.currentTarget で そのイベントを受けたインスタンスの参照が取得できます。 ですからそれを使います。 というわけで，書き換え例です↓。 //---------------------------------------------- import fl.transitions.*; import fl.transitions.easing.*; mc0.addEventListener(MouseEvent.ROLL_OVER,onrollOver); mc1.addEventListener(MouseEvent.ROLL_OVER,onrollOver); mc2.addEventListener(MouseEvent.ROLL_OVER,onrollOver); mc3.addEventListener(MouseEvent.ROLL_OVER,onrollOver); function onrollOver(eventObj:Event):void { //ロールオーバーイベントを受けたインスタンスを取得 var target_mc:MovieClip = MovieClip(eventObj.currentTarget); //そのインスタンスをフェードアウト TransitionManager.start(target_mc, {type:Fade, direction:Transition.OUT, duration:2, easing:None.easeNone}); //そのインスタンスのイベントリスナーを削除 target_mc.removeEventListener(MouseEvent.ROLL_OVER,onrollOver); } //----------------------------------------------
まず、上記のサンプル（と仰っているもの）はどこまでご理解されていますでしょうか？ 外部ファイルの読み込みは良く使う手法ですので、 書籍やgoogle先生に聞けばいくらでも情報は出てくるはずです。 最終目的があっても課程を理解していないと、恐らく到達点へ行くのは難しいです。 まずはご自分でお調べになって、「どういう風に調べて」「どういうことをして」「どこが分からない」かを 明確に示す必要があるかと思います。 ただわからないから作ってください、というのは失礼です。 プロとして活躍されている方もたくさんおりますので。
書かれている ActionScript 1.0 のものを "単純に" 書き替えるだけで良いと思いますが。。。 vx=0; vy=0 となっているところをあえて var vx ; var vy ; と書き替えてみたり vx=vx*0.65+…; vy=vy*0.65+…; となっているところをあえて vx= my_mc.x*0.65+…; vy= my_mc.y*0.65+…; と書き替えてみたりと なんだかあえて(わざと)妙な変形をしているようにしか見えませんよ。 ほとんど何も考えず "単純に" 書き替えると次のようになります。 my_mc.addEventListener(Event.ENTER_FRAME,onEnterframe); var vx = 0; var vy = 0; function onEnterframe(eventObj:Event):void { vx=vx*0.65+(stage.mouseX-my_mc.x)/2; vy= vy*0.65+(stage.mouseY-my_mc.y)/2; my_mc.x+=vx; my_mc.y+=vy; }
> 何が原因でこのような現象になるのでしょうか。 その my_mc と my_mc1 と my_mc2 を配置したときの手順 または my_mc と my_mc1 と my_mc2 を addChild したときのスクリプト を書かれていないため なぜそうなるのかは，そうした人物以外わかりません。 逆に言えば， my_mc と my_mc1 と my_mc2 を配置したときの手順 または my_mc と my_mc1 と my_mc2 を addChild したときのスクリプト に問題があるとしか言いようがないですね。 もし my_mc と my_mc1 と my_mc2 を手動で配置したのでしたら その上下順を入れ替えて配置すれば良いだけです。 あえて my_mc と my_mc1 と my_mc2 を配置するレイヤーを分けて そのレイヤーの順序で管理するのも１つの立派な方法です。 もし my_mc と my_mc1 と my_mc2 を手動で同じレイヤーに配置したのでしたら my_mc2 → my_mc1 → my_mc の順に１つずつのインスタンスを選択して 「修正(または右クリック)」→「重ね順」→「最背面へ」を繰り返せば良いでしょう。 もし my_mc と my_mc1 と my_mc2 をスクリプトで my_mc → my_mc1 → my_mc2 の順に addChild したのでしたら my_mc2 → my_mc1 → my_mc の順に addChild するように変更すればいいのではないでしょうか。 つまり my_mc2の重なりが最も手前になってしまうように配置したから my_mc2の重なりが最も手前になっているだけのことで それがmy_mc2の重なりが最も手前になる原因です。 そのようにしなければ良いだけではないか(そのようにしなければ良いだけだ)と思います。
早まってはいけません（笑 Adobeのキャンペーンは、CS製品全般についてであって、Flashを安売りするわけではありません。 ただし、 Windows8のMetroインターフェースにおいて、IEブラウザがFlash/SilverLightのようなプラグインをサポートしなくなるというのは本当らしいです。 自分はMicrosoft系のエンジニアでして、この発表に衝撃を受けています。 ブラウザ上ではXAMLやSVG、デスクトップ上では（Windows Phoneなどと同じく）XAMLアプリケーションが動くので、もはやSilverlightも必要ないのでしょう。 Flash/SilverlightはWeb界ではオワコンになりそうです（泣
タイムライン上のモーショントゥイーンの個所を長くとると、ゆっくり動くのでは？
著作権法はおもに無断使用の禁止を規定する物ですから、 逆に言えば、許可を得れば、著作物を（契約範囲内で）自由に使う事ができます。 必要があれば、著作権所有者（つまりOKWave）に問い合わせてみてください。 包括契約や個別契約、無料であったり有料であったりと、契約体系も様々です。 いわゆるオープンソースと呼ばれている物は、公開と同時に使用許可が出されていますので、無断でも使用できます。 （厳密にはソースコードを公開している事と、自由に使える事は同一ではありません。） BBSやメーリングリストなどの投稿は、歴史的背景も含めて「投稿者の暗黙的了解により自由に使っても良い」ということになっていますが、 それ（著作物を自由に使えること）を明確に定義した文書はありません。 JavaScriptになりますが、 http://okwave.jp/qa/q6130109.html No.8お礼の最後に「著作権放棄、またはMIT、GNU GPLにて」などと書いてみた物の、たぶん、著作権はOKWaveに帰属、利用規約10条により利用禁止でしょうね。 他に書きようがないコードだと思いますが、実際に使うときは可能ならアレンジした方が良いと思います。
配列にイージングを入れるのは良いのですが イージング自体ではなく "文字列" を入れているのが動作しない原因ではないでしょうか？ こんな感じ↓で動くと思います。 //----------------------------------------- //Tweenクラスを使用できるようにインポート import mx.transitions.Tween; import mx.transitions.easing.*; var easeList:Array = new Array(); //イージングの種類 easeList[1] = Elastic.easeOut; easeList[2] = Strong.easeOut; easeList[3] = Elastic.easeOut; easeList[4] = Back.easeOut; easeList[5] = Bounce.easeOut; bt1.onRelease = function() { //インスタンス「ball」の動きをTweenクラスを使って制御 for (var i:Number = 1; i<=5; i++) { var myTween:Tween = new Tween(_root["ball"+i], "_x", easeList[i], 39, 400, 2, true); } }; //----------------------------------------- または 配列の要素は普通 0 から始まりますから 次のようにするとか。 //----------------------------------------- //Tweenクラスを使用できるようにインポート import mx.transitions.Tween; import mx.transitions.easing.*; var easeList:Array = new Array(); //イージングの種類 easeList[0] = Elastic.easeOut; easeList[1] = Strong.easeOut; easeList[2] = Elastic.easeOut; easeList[3] = Back.easeOut; easeList[4] = Bounce.easeOut; bt1.onRelease = function() { //インスタンス「ball」の動きをTweenクラスを使って制御 for (var i:Number = 0; i<=4; i++) { var myTween:Tween = new Tween(_root["ball"+(i+1)], "_x", easeList[i], 39, 400, 2, true); } }; //----------------------------------------- さらに Tween を個別に管理したい場合は 次のようにします。 //----------------------------------------- //Tweenクラスを使用できるようにインポート import mx.transitions.Tween; import mx.transitions.easing.*; var easeList:Array = new Array(); //イージングの種類 easeList[0] = Elastic.easeOut; easeList[1] = Strong.easeOut; easeList[2] = Elastic.easeOut; easeList[3] = Back.easeOut; easeList[4] = Bounce.easeOut; bt1.onRelease = function() { //インスタンス「ball」の動きをTweenクラスを使って制御 for (var i:Number = 0; i<=4; i++) { _root["myTween"+i] = new Tween(_root["ball"+(i+1)], "_x", easeList[i], 39, 400, 2, true); } //個別呼び出し例 _root.myTween2.onMotionFinished = function() { this.yoyo(); }; }; //-----------------------------------------
これはよくできてますねー。 ただ、ロジックを言葉で説明するのは難しいですね・・・。 それだけ単純なものではないので。 まず、このあたりの仕組みは理解されていますでしょうか？ ■ランダムな大きさのグリッドがスクロールするアレ http://wonderfl.net/c/ttb1 このようにグリッドに矩形を配置してから、 次にロールオーバー時に変形した際、 拡大した矩形がどのオブジェクトと重なるのか、 そして、重なったオブジェクトはどの方向に縮小、移動させなければならないのかを オブジェクト毎に計算します。 オブジェクトには「最低限保つ大きさ」なども設定されていますので、 そのあたりも考慮に入れます。 例えば、一番左下のオブジェクトのヨコ方向だけの動きを考えてみます。 ロールオーバー時に、右に150px伸びるとして、 その右のオブジェクトを150px右に縮小させればいいのですが、 その右のオブジェクトは「120pxから80pxまで40pxしか縮小できない」と設定していたとなると、 残り110pxは右に移動させなければなりません。 さらにその右のオブジェクトも「150pxから80pxまで70pxしか縮小できない」となると、 そのオブジェクトも残り40px右に移動する必要がありますので、 さらにまたその右のオブジェクトも40px縮小しなければなりません。 ・・・という具合に玉突き事故が同時に起こっていると考えてください。 この計算を上下方向それぞれに同時に行ってから、 拡大縮小のモーションを行います。 動きを加えると一見複雑そうですが、 変形前と変形後にどのように配置されているのかを グリッド上に物が置かれていると考えれば理解しやすくなると思います。
> サムネイルに50％程度のフェードをかけ この「50％のフェード」の意味がよくわかりません。 まず思いついたのは フェードではなくてアルファ(_alpha/不透明度)ではないかということです。 「50％のアルファをかける」であれば意味がわかります。 その「50％のアルファをかける」場合の とりあえず元のスクリプトをそんなに変えないバージョンのスクリプト例です↓。 //---------------------------------------- import mx.transitions.Tween; import mx.transitions.easing.*; //bt1～bt4のアルファを変える 関数changeAlpha の定義 //(引数:アルファを100にするボタンインスタンス) function changeAlpha(btn:Button):Void { for (var i:Number = 1; i<=4; i++) { this["bt"+i]._alpha = 50; } btn._alpha = 100; } //関数changeAlpha を初回実行(引数:ボタン「bt1」) changeAlpha(bt1); bt1.onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, 0, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, 0, 1, true); //関数changeAlpha を実行(引数:クリックされたボタン自身) changeAlpha(this); }; bt2.onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, -400, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, 100, 1, true); changeAlpha(this); }; bt3.onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, -800, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, 200, 1, true); changeAlpha(this); }; bt4.onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, -1200, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, 300, 1, true); changeAlpha(this); }; //---------------------------------------- 上のスクリプトは 同じこと(お決まりのパターン)を何度も書きすぎなので 上と同じ内容をもう少しまとめると 次のように書くこともできます。 //---------------------------------------- import mx.transitions.Tween; import mx.transitions.easing.*; //bt1～bt4のアルファを変える 関数changeAlpha の定義 //(引数:アルファを100にするボタンインスタンス) function changeAlpha(btn:Button):Void { for (var i:Number = 1; i<=4; i++) { this["bt"+i]._alpha = 50; } btn._alpha = 100; } //関数changeAlpha を初回実行(引数:ボタン「bt1」) changeAlpha(bt1); //bt1～bt4に関するループ for (var i:Number = 1; i<=4; i++) { //各ボタンの 変数n に i-1 を保存しておく this["bt"+i].n = i-1; //各ボタンクリック時の動作 this["bt"+i].onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, -this.n*400, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, this.n*100, 1, true); //関数changeAlpha を実行(引数:クリックされたボタン自身) changeAlpha(this); }; } //---------------------------------------- 最初の話に戻ります。 > サムネイルに50％程度のフェードをかけ の解釈についてですが， 次のような意味に捉えることもできます。 スクリプトでの状態説明になりますが 「50％のフェード」とはこんな感じのことでしょうか↓？ //---------------------------------------- import mx.transitions.Tween; import mx.transitions.easing.*; //bt2～bt4のアルファを50にする for (var i:Number = 2; i<=4; i++) { this["bt"+i]._alpha = 50; } //bt1～bt4に関するループ for (var i:Number = 1; i<=4; i++) { //各ボタンの 変数n に i の値を保存しておく this["bt"+i].n = i; //各ボタンクリック時の動作 this["bt"+i].onRelease = function() { var mcTween = new Tween(Photo, "_x", Regular.easeOut, Photo._x, -(this.n-1)*400, 1, true); var mcTween = new Tween(waku, "_x", Regular.easeOut, waku._x, (this.n-1)*100, 1, true); for (i=1; i<=4; i++) { if (i != this.n) { var btTween = new Tween(this._parent["bt"+i], "_alpha", Regular.easeOut, this._parent["bt"+i]._alpha, 50, 1, true); } else { var btTween = new Tween(this, "_alpha", Regular.easeOut, this._alpha, 100, 1, true); } } }; } //---------------------------------------- 　 　 ＝＝＝＝＝＝＝＝＝＝＝ ◎オマケ > これをフレームにアクションを記述して > 修正しようとしたがうまく出来ず、 元のファイルのムービークリップやボタン自体に書いてあるスクリプトを全部消して ４つのボタンに「bt1」～「bt4」というインスタンス名を付けた場合 _rootのフレームに書くアクションは次のようになります↓。 //---------------------------------------- var position:Number = 0; Photo.onEnterFrame = function() { this._x -= (this._x+position)/3; }; for (var i = 1; i<=4; i++) { this["bt"+i].n = i; this["bt"+i].onRelease = function() { position = Photo["p"+this.n]._x; }; } //---------------------------------------- ※「Photo」の動く先の座標指定は 　 「Photo」内にあるMC(p1～p4)の 　 各座標が使われています。 ※上記全スクリプト 　 Flash Player 6 以上で動作 　 ActionScript 2.0
>ご指摘にあった「１）フォルダーに収められている写真の名前、保存場所のリストを作る」についてですが、ネットの貸しサーバにフォルダごと挙げていてそれを読み込むスクリプトを書いている状態なのですがそういうことではダメなのでしょうか？ 残念ながらダメです。 ActionScriopt2では保存場所やファイル名を指定して写真を読み込むことは出来ますが、指定したフォルダーにどんな写真が保存されているかを取得することは不可能です。 写真が増えるたびにASを書き換えるならば問題ないでしょうが・・・
ムービークリップ内に 最初から２つとか３つの(場合によっては４つや５つの) そのル画像を(または画像入りムービークリップを) 横並びに入れておけば良いのではないでしょうか。 １つの画像が例えば |谷山川山谷| だったとすると |谷山川山谷|谷山川山谷|谷山川山谷|… みたいに入れておくわけです。 その横長ムービークリップの基準点は ムービークリップの左上コーナーにしておくものとします。 そして， その横長ムービークリップを コンスタントに ＋方向(右方向) に20pxずつ動かすのですが 基準点がステージの左端(x座標=0)を超えた瞬間だけ その瞬間の座標から画像１枚分の横幅だけ －方向(左方向) に一気に移動させます。 するとループしているように見えます。 //------------------------------------------- //ステージ内の拡大縮小なし(？) stage.scaleMode = StageScaleMode.NO_SCALE; //ステージの左上コーナーを基準として整列 stage.align = StageAlign.TOP_LEFT; var speedX:Number=20; //画像１枚の横サイズ(例：320px) var pictureW:Number = 320; back_mc.addEventListener(Event.ENTER_FRAME, onEnterframe); function onEnterframe(eventObj:Event):void { var mc:MovieClip=eventObj.target as MovieClip; // //コンスタントに右移動 mc.x+=speedX; // //基準点のx座標が0を超えた瞬間だけ //(この瞬間の姿は実際には見えない) if (mc.x > 0) { //画像１枚分左に移動 mc.x -= pictureW; } } //------------------------------------------- ↓イメージ図↓
コンポーネントとしてのコンボボックスは用意されていないので、自作するしか無いですね。 ただ、タブレットは別として、モバイル型のAndroidやiOS端末のUIを考えると、コンボボックスはあまり適したものではないと思います。 コンボボックスとは、テキストボックスとドロップダウンリストが合体したものですが、画面サイズに制限のあるモバイル端末ではテキスト入力とリスト選択の切り替えをどういった処理で行うか、プログラム的にもユーザーの操作的にも難しくなるのではないでしょうか？ 通常はリストから選択で良いけど、選びたい項目がリストに無い場合はテキストボックスで入力してもらうというオペレーションを実装したければ、リストの中に「その他」という項目を準備しておき、それが選択された場合にテキストボックスを表示するという方法が良いと思います。
自分も同様の環境ですが、 「Cmd+'」の挙動については、Flash CS5のデフォルトでは「Cmd+Shift+7」に「反時計回りに回転」のキーボードショートカットが設定されているため、macの場合、そちらが優先されてしまっているようです。 ［ファイル］→［キーボードショートカット]から、どちらかのショートカットを変更するしかないですね。 自分はグリッドの表示は「Cmd+.」に割り当てています。 「Cmd+Tab」についても同様に、必要であれば別のショートカットを設定した方がいいでしょう。
一般的にフラッシャーと呼ばれている者です。10年近くやってます。 >1　こんな未経験、職歴なしの私でもwebプログラマーになれるのか？ 実力次第では職歴はなくともできますが、正直、実績はないとFlasherとしての就職は厳しいですね。 デザインのセンスや数学物理の知識、他の方が仰られているように他のプログラミング言語の経験や、サーバサイド開発の経験、最近ではスマートフォンアプリの開発経験など、制作物に活かせる自分の長所があると有利です。英語ができると尚良いです。いずれにしても大抵の制作会社では、実績や制作物でしか判断してもらえないと思ってもらった方がいいです。専門学校などに通いながら何か実績を作るか、独学であってもプロが納得するようなものを作る必要があります。ただ、「学校に行っていた」「勉強した」というだけでは雇ってくれるところはないと思います。 >2　そろそろ会社面接でも受けてみようと思うんですがwebデザイナーさんのようにポートフォリオを用意した方がいいのか？ 前述のように、実績がなければ雇ってもらえる可能性は低いので、ポートフォリオは必須です。自分が制作したサイトや作品を2～3点だけでも見せられる状態にしておきましょう。 １の方も仰られていますが、もし「作る」ということにそこまで強いこだわりがなければ、企画や管理側など、違った角度から攻めてみるのも手です。芸人という過去をお持ちでしたら、アイデアなどで勝負した方が勝てる見込みは大きい気がします。なぜかというと、まずFlashという技術自体が既に下火になりつつあります。as3などで学んだ知識は他でも活かせますが、Flashの仕事ということでいえば、今後5年で激減すると思います。 自分も含め、Flasherと呼ばれる人たちはそういう現実をわりとシビアに見ているので、あまり人にお勧めはしないですね。日々新しい技術を取り入れていかなければWebプログラマーとして成り立たないので、仕事の合間に勉強もしなければなりません。会社であれば休日も潰れますし、残業代が出ないところも多いでしょう。何よりも作ることや新しいことを覚えることが好きで生き甲斐、とまで思えなければこれから先は続けるのも厳しいかなぁと思います。
Win7 HomePremium 64bit IE8、Chrome、Firefox3.6、4.01 WinVista Ultimate 32bit IE7、Chrome、Firefox3.6、4.01、5.01、6.02、Safari5.1 以上試しましたがまったく問題なく動作しています。 Mac用FirefoxのFlashPlayerがうまく機能していないのかも？
＃１です。 > やってみましたが、動作しないのです。 と書かれましても どこで何がどう動作しないのかがわかりません。 例えば 「エラーが出て全く動作しない(パブリッシュも不可)」 「エラーは出ないがmc0～15がランダムに配置されない」 「mc0～15はランダムに配置されるがボタンで並び変わらない」 などなど様々なことが考えられます。 その状況を見ていない第三者にとっては 状況を見ている人よりももっと何のことかわからないのですよ。 一応私の方は ActionScript 2.0 設定であれば Flash Player 6 以上 SWF パブリッシュ設定 で動作確認済みです。 どこで詰まっているのかさっぱりわかりませんので スクリプトを次のように書き替えて(★部分の trace を追加しただけ)， 「制御」→「ムービープレビュー」で詰まっている部分を確認してみてください。 //---------------------------------------------------- //動くスピードの設定 var spd:Number = 12/100; //mc0～15 の最初の座標を一時的に記録する配列 var tempPosArr:Array = new Array(); //変数 i を 0～15 まで 1 ずつ加算しながらループ for (var i:Number = 0; i<=15; i++) { //mc0～15 の最初の座標(「正しい座標」)を各MC内の変数に記録 this["mc"+i].start_x = this["mc"+i]._x; this["mc"+i].start_y = this["mc"+i]._y; //mc0～15 の最初の座標を一時的に記録する配列に記録 tempPosArr[i] = [this["mc"+i]._x, this["mc"+i]._y]; trace("★↓ mc" + i + ".star_x に値が入っているか"); trace(this["mc"+i].start_x); trace("★↓ tempPosArr[" + i + "] に値が入っているか"); trace(tempPosArr[i]); } //mc0～15 を配置するランダムな座標の配列 var randPosArr:Array = new Array(); //テンポラリ配列からランダムな要素を抜き取りランダムな座標の配列に代入 for (var i:Number = 15; i>=0; i--) { randPosArr.push(tempPosArr.splice(Math.floor(Math.random()*(i+1)), 1)[0]); } trace("★↓ randPosArr に値が入っているか"); trace(randPosArr); //mc0～15 をランダムな座標に配置 for (i=0; i<=15; i++) { this["mc"+i]._x = randPosArr[i][0]; this["mc"+i]._y = randPosArr[i][1]; trace("★↓ mc" + i + " の座標はランダムになっているか"); trace(this["mc"+i]._x + "，" + this["mc"+i]._y); } //ボタンクリック時の動作 btn.onRelease = function():Void { trace("★↓ ボタンは動作しているか"); trace("ボタンがクリックされました"); //変数 i を 0～15 まで 1 ずつ加算しながらループ for (var i:Number = 0; i<=15; i++) { //mc0～mc15に毎フレーム実行する動作を定義 this._parent["mc"+i].onEnterFrame = function():Void { //「正しい座標」に向けてspdの割合ずつ移動 this._x += (this.start_x-this._x)*spd; this._y += (this.start_y-this._y)*spd; }; } }; //---------------------------------------------------- それと 他のスクリプトや他のインスタンスがじゃまをしているということはないでしょうね？ 例えば， 同じインスタンス名を付けた別物があるとか 他の onEnterFrame が重なって動作しているとか。 「制御」→「ムービープレビュー」で 下の【図】↓のような感じになれば良いのです。 この↓状態から btn をクリックすれば「正しい位置」に戻ります。
Flas CS5.5でiOS用に書き出すコンテンツは、SWFのようなWebコンポーネントではなく、完全なiOSアプリです。 したがいまして、内容と動作に問題なければ、問題なくAppStoreの審査に通ると思います。 ただし、Flashから生成されたアプリは、ランタイムを内包するためサイズが大きく、かなり低速で、動作中のメモリエラー発生確率も高く、品質的にはネイティブアプリに比べ相当に落ちることを覚悟してください。 所詮Flash。現状では、アプリケーションとして評価を受けることはかなり難しいと思います。 XCode / Objective Cで開発した正統なアプリには遠く及びません。
> 今はmcが1つですが、これを16個配置したいと思います。 > その方法を教えてください。 って，配置方法からですか？ よくわからないのでそういうこととします。 まずその１つある 100×100px のムービークリップですが そのムービークリップは基準点(＋印)が左上に来るように作成します。 そして，「my_mc1」では少しネーミングがよろしくないので(計算の簡略化の都合上よろしくないだけです)， 「my_mc1」ではなく「mc0」というインスタンス名を付けることとします(大切な部分は右の番号を0にするということ)。 それでその「mc0」は 400×400のステージの左上コーナーに配置しているものとします(【図】↓参照)。 その場合 その写真や「mc0」が存在するフレームには次のように書けば良いと思います。 //------------------------------------- import mx.transitions.*; import mx.transitions.easing.*; //変数 i を 0～15 まで 1 ずつ加算しながらループ for (var i:Number = 0; i<=15; i++) { //もし i が 0 以外であれば if (i != 0) { //「mc0」 を 「mc○」 という名で 深度 ○ に複製 mc0.duplicateMovieClip("mc"+i, i); //「mc○」のx座標を (i を 4 で割った余り)×100 に配置 this["mc"+i]._x = i%4*100; //「mc○」のy座標を (i を 4 で割った数の整数部分)×100 に配置 this["mc"+i]._y = Math.floor(i/4)*100; } //「mc0」 ～ 「mc15」ロールオーバー時の動作定義 this["mc"+i].onRollOver = function() { //フェードアウト TransitionManager.start(this, {type:Fade, direction:Transition.OUT, duration:2, easing:None.easeNone}); //このonRollOverイベントリスナーを削除(複数回実行阻止) delete this.onRollOver; }; } //------------------------------------- もし 16個のMC はすでに手動で配置してあって 「mc0」～「mc15」までのインスタンス名も手動で付けたという場合は これだけ↓で良いです。 //------------------------------------- import mx.transitions.*; import mx.transitions.easing.*; //変数 i を 0～15 まで 1 ずつ加算しながらループ for (var i:Number = 0; i<=15; i++) { //「mc0」 ～ 「mc15」ロールオーバー時の動作定義 this["mc"+i].onRollOver = function() { //フェードアウト TransitionManager.start(this, {type:Fade, direction:Transition.OUT, duration:2, easing:None.easeNone}); //このonRollOverイベントリスナーを削除(複数回実行阻止) delete this.onRollOver; }; } //-------------------------------------
Flash 作成ソフトも，そのバージョンも， ActionScript のバージョンも書かれていないため 具体的で詳細な回答はできませんが 大まかに言えば普通はマスクをマウス追従させますよ。 「マスクをマウスに追従させる [Flash] All About」 http://allabout.co.jp/gm/gc/66803/ 「マスクとマスクの追従　FLASHRAVE - FLASH 講座 -」 http://flashrave.org/as/mask/ ---その他(Adobe Flash 以外の Flash 作成ソフト)------- 「Suzuka ＆ ParaDraw 講座-マスク・グラデーションマスク」 http://suzupara.iinaa.net/kiso111.html 「Paraflaのマウスカーソルとマスク - 福祉用具と障害をお持ちの方のパソコン利用」 http://blogs.yahoo.co.jp/kouseinenkinnan/1243007 …
放射状のグラデーションを作る時、グラデーションの終端の方の色に「アルファ」を設定してみてはいかがでしょう。 「アルファ」は、カラーミキサーのＲ・Ｇ・Ｂの要素の下にあります。０％に近いほど透明になり、背景が透けて見えるようになります。 アルファが適用されている色で塗りつぶしたオブジェクトを選択すると、透過部分が真っ黒に表示されることがありますが、実際には透明になっています。
ぴったり正確に整数座標で原寸（または整数倍拡大で）配置しています？ ビットマップオブジェクトの解像度は72dpiや96dpiになっていますか？ ムービークリップの場合は、整数座標で配置しても、テキストフィールドなどが上左に配置されていて、そちらの座標が対象になり、ビットマップオブジェクトが結果的に整数座標配置になっていない、など。
実際のswfの中身がわからないと何とも言えませんが、 ご自身でflashのソフトをお持ちでしたら、問題のswfを外部ファイルとして読み込む仕組みを作ってはどうでしょう。 例えば、test.swfというswfを新たに作成し、その中にボタンを設置して、クリックしたら問題の自動再生してしまうswfを読み込むといった感じです。 質問者様のflashスキルがわからないのでここまでしか答えられませんが如何でしょうか。
結論から言いますと、startDragでは矩形の範囲しか選択できません。 ですが、ドラッグ対象のオブジェクトにMOUSE_DOWNした段階で MOUSE_MOVEイベントなどで常にマウスの位置を監視して、 特定の図形の上にマウスが納まっているかチェックすれば 台形であろうが円であろうがどんな形状でも可能です。 チェックする方法としては、hitTestObjectなどを使用するのが一番簡単でしょうか。 簡単な例としては以下のような感じです。 ----- import flash.display.MovieClip; import flash.events.MouseEvent; var c:MovieClip; //ドラッグするMC var m:MovieClip; //ドラッグ範囲のMC (台形) c.addEventListener(MouseEvent.MOUSE_DOWN, startDragObj); stage.addEventListener(MouseEvent.MOUSE_UP, stopDragObj); function startDragObj(e:MouseEvent):void { this.addEventListener(MouseEvent.MOUSE_MOVE, onDrag); } function onDrag(e:MouseEvent):void { // ドラッグ範囲上にマウスがあれば、マウスの位置にドラッグ if (m.hitTestPoint(mouseX, mouseY, true)) { c.x = mouseX; c.y = mouseY; } } function stopDragObj(e:MouseEvent):void { this.removeEventListener(MouseEvent.MOUSE_MOVE, onDrag); } -----
FlashEffは一般的なトランジションライブラリなので、トランジション実行時、必ずその対象であるムービークリップをメモリ中に読み込んでいる必要があります。 でないと動作中にハングアップしかねないし、また、トランジションはどのようなタイミングで行われるかわからない（極端なことをいえば最初のフレームから全画像がトランジションする場合もありえます）ので、その対象である画像のリンケージプロパティにかかわらず、開始前に強制的にプリロードを発生させているのではないでしょうか？ なので、FlashEffの対象画像を、別ムービーで手動プリロードし、遷移後のムービーで同一ソースファイルの画像オブジェクトをFlashEffでトランジションさせる、ということになるかと。 両者はあくまで別swfです。シーンはあくまでタイムライン編集の方便であり、内部的には一本のタイムラインとして処理されますので、シーン分けは無意味だと思います。 FlashEffの新版（v2）を持たないので、確実な検証はできませんが、Eff1や他のトランジションライブラリでは明らかにそうでした。「あらかじめmc化してプリロードしておくように」と明記されたものもあります。 Effは高価な製品で完成度も高いので、いろいろとお節介だということですね。きっと。
一般的な話で進めます。 ＞予期しないファイル形式です これは、Windows上の操作として、お話しますが、このメッセージが出る時は、 拡張子が偽造 されている時です。又は、同じ拡張子で、違うファイルフォーマットを採用しているアプリです。 これが起こる要因としては、昔のソフトと混在して使う場合です。 よくあるのが、MS-OfficeのWordファイルで、拡張子は　DOC　です。しかし、これはWindowsにデフォルトで付いてくる、エディターでも採用している拡張子で、当初、互換性は高かったのですが、 Wordが進化してゆくうちに、解釈できないスタイルが出てきたので、開けない場合が出てきています。もちろん、この２つの間のアプリの間で、互換性を歌っていませんので、当然と言えば当然なんですが、よく派遣社員の、ど素人の方が、変なファイルがある、と大騒ぎをするのを目にします。 実情を知らない方なのでしょう。 今では、Wordの標準拡張子は　DOCX（XML形式が一部入る）です。　DOCの拡張子は、下位互換のために、デフォルトで開けるようにはなっていますが、下位バージョンで作成したDOCだと、 互換で開きますか？ と聞いていきます。はい、だとそのまま保存しても、下位バージョンのWordで開いても、問題なく開けて、編集可能です。 いいえだと、現在のバージョンのスタイルが挿入される可能性があり、挿入された場合、終了しようとすると このままでは保存できません、フォーマット変更・・・ などと出て、DOCXで保存するよう強制されます。 今回のあなたの場合も同じだと思いますよ。 問題なのは、あなたがCS5は単なる、一部の画像の編集ツールとして使い、メインはFlash8で編集統合する。 と言う意図があるなら、インポート、エクスポートでの編集をお勧めします。
移動位置が狂うのは「R_btn」や「L_btn」クリックで お互いのボタン機能を操作していないからでしょう。 書かれているスクリプトでは 「R_btn」をクリックしても「L_btn」をクリックしても "クリックしたボタンのみ" の機能を無効にしています。 そうではなくて 「R_btn」をクリックしても「L_btn」をクリックしても どちらにしてもTweenが終わるまで "両方" のボタン機能を無効にしておく必要があります。 書かれているスクリプトを そのまま延長した場合のスクリプト例です↓。 (「★」を付けた部分が変更点) //------------------------------ //クラスのインポート import mx.transitions.Tween; import mx.transitions.easing.*; //画像１枚の横幅を設定 var g_w:Number = 120; //画像の枚数を設定 var g_n:Number = 7; //カウンタ用変数 var cnt:Number = 0; //「L_btn」を非表示にしておく L_btn._visible = false; //「R_btn(→ボタン)」クリック時の動作を定義 R_btn.onRelease = function():Void { //もしカウンタが 画像の枚数-1 未満であれば if (cnt<g_n-1) { var myTween = new Tween(my_mc, "_x", Regular.easeOut, my_mc._x, my_mc._x-g_w, 3, true); //★L_btn & R_btn のボタン機能を無効にする L_btn.enabled = false; R_btn.enabled = false; //myTweenのモーション終了時に実行するメソッドを定義 myTween.onMotionFinished = function() { //★L_btn & R_btn のボタン機能を有効にする L_btn.enabled = true; R_btn.enabled = true; }; //L_btnを表示する L_btn._visible = true; //なおかつカウンタが 画像の枚数-2になれば if (cnt == g_n-2) { //R_btnを非表示にする R_btn._visible = false; } //カウンタに1を加算 cnt++; } }; //L_btnクリック時の動作を定義 L_btn.onRelease = function():Void { //もしカウンタが 0 より大きい場合は if (cnt>0) { var myTween = new Tween(my_mc, "_x", Regular.easeOut, my_mc._x, my_mc._x+g_w, 3, true); //★L_btn & R_btn のボタン機能を無効にする L_btn.enabled = false; R_btn.enabled = false; //myTweenのモーション終了時に実行するメソッドを定義 myTween.onMotionFinished = function() { //★L_btn & R_btn のボタン機能を有効にする L_btn.enabled = true; R_btn.enabled = true; }; //R_btnを表示する R_btn._visible = true; //なおかつカウンタが 1 になれば if (cnt == 1) { //L_btnを非表示にする L_btn._visible = false; } //カウンタから1を減算 cnt--; } }; //------------------------------ 一応は以上です。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ しかし... 私はせっかちですから 閲覧者の立場で上のスクリプトを動作させると非常にイライラします。 私でしたらボタン機能は無効にせずに次のようにします。 (本題とは関係のない ★オマケ 機能も勝手に入れてます) //------------------------------ //クラスのインポート import mx.transitions.Tween; import mx.transitions.easing.*; //画像１枚の横幅を設定 var g_w:Number = 120; //画像の枚数を設定 var g_n:Number = 7; //表示する文字列の設定(★オマケ) var str_arr:Array = ["画像1", "画像2", "画像3", "画像4", "画像5", "画像6", "画像7"]; //文字列を表示するテキストフィールドを作成(★オマケ) //(本当は好きな場所に手動で「my_txt」を作成する) createTextField("my_txt", 0, 10, 10, 0, 0); my_txt.autoSize = "left"; my_txt.border = true; my_txt.background = true; //カウンタ用変数 var cnt:Number = 0; //「my_txt」に文字列を表示(★オマケ) my_txt.text = str_arr[cnt]; //「L_btn」を非表示にしておく L_btn._visible = false; //「R_btn(→ボタン)」クリック時の動作を定義 R_btn.onRelease = function():Void { //もしカウンタが 画像の枚数 未満であれば if (cnt<g_n) { //カウンタに1を加算 cnt++; //-g_w*cnt に向けて x座標 をTween var myTween = new Tween(my_mc, "_x", Regular.easeOut, my_mc._x, -g_w*cnt, 3, true); //L_btnを表示する L_btn._visible = true; //なおかつカウンタが 画像の枚数-1になれば if (cnt == g_n-1) { //R_btnを非表示にする R_btn._visible = false; } //「my_txt」に文字列を表示(★オマケ) my_txt.text = str_arr[cnt]; } }; //L_btnクリック時の動作を定義 L_btn.onRelease = function():Void { //もしカウンタが 0 より大きい場合は if (cnt>0) { //カウンタから1を減算 cnt--; //-g_w*cnt に向けて x座標 をTween var myTween = new Tween(my_mc, "_x", Regular.easeOut, my_mc._x, -g_w*cnt, 3, true); //R_btnを表示する R_btn._visible = true; //なおかつカウンタが 0 になれば if (cnt == 0) { //L_btnを非表示にする L_btn._visible = false; } //「my_txt」に文字列を表示(★オマケ) my_txt.text = str_arr[cnt]; } }; //------------------------------ とりあえずは関係のない「(★オマケ)」部分の動作は無視してください。 動く先の座標を 動いている最中かもしれない(不安定な)「my_mc」を基準にして決定するのではなく， しっかりと安定した数「-g_w*cnt」で決定するようにしています。 こうすれば見たい画像までイライラせずにスムーズに my_mc を移動させることができます。 ※以上のスクリプト 　 ActionScript 2.0 / Flash Player 6 以上で動作 ※後にこのページを見る方がいらした場合の状況説明図↓
携帯電話のキーで直接選択できるようにするためのショートカットである keyPress に両方とも <Enter> が指定されているので、２つのボタンが同時に反応してしまっているのではないでしょうか。 例えば、上のボタンに keyPress "1" 、下のボタンに keyPress "2" というように、別のキーを割り当ててみてはいかがでしょう。 Enter は、選んだ対象を決定するために使われるキーです。 ゲームのスタート画面などのようにボタンが１つしかない画面では Enter キーでもいいのですが、複数のボタンがある時は、ボタンを決定するつもりで押したのに意図しないボタンが反応してしまった、というようなことが起こりやすいので、Enter キーは割り当てない方が無難だと思います。
>>FLASHを使用して作っているのでしょうか。 Flash ではありませんね。 右クリックしても「Flash Player ○ について」とか出てきませんし 右クリックで表示されている画像を保存することもできますし。 JQuery か JQuery のようなものを使った JavaSctipt 製の横スライドです。 この辺とかが参考になるかと思います、 「JQueryを使ったスライド表現を集めた「10 Best jQuery Sliders」 DesignDevelop」 http://design-develop.net/web-design/10-best-jqu … その他 でも Google などで 「JQuery 方法」のような検索をするとかなりのページが見つかると思います。
> 1フレームめにアクションスクリプトを記述するのが > 当たり前と思っているのですがこれは間違いになりますか。 そこに間違いとか正解とかはないでしょう。 １フレーム目のにスクリプトを書ける状況であった上で １フレーム目のみにスクリプトを書きたい場合はそうすれば良いだけです。 １フレーム目のみにスクリプトを集約することができない場合はそうする必要はありません。 また １フレーム目のみにスクリプトを集約することができたとしても，そうしたくない場合もそうする必要はありません。 「こうすべき」とかはありません。 「できることを臨機応変に最大限に生かす」という方向で考えるのが大切だと思います。 ちなみにご質問のものの場合は， １フレーム目のみにスクリプトを集約することができます。 (過去のバージョンでしたらできない場合もありますが ActionScript 2.0(Flash Plaeyr 6 以上) でしたら十分できます。) また "私は" １フレーム目のみにスクリプトを集約させたいと思います。 ですから "私だったら" 次のようにします。 まず 「→」ボタンと「←」ボタンと「my_mc」をフレーム1だけに配置します。 そして 「→」ボタンと「←」ボタンにインスタンス名を付けます。 ここでは 「→」ボタン には「R_btn」というインスタンス名を付け 「←」ボタン には「L_btn」というインスタンス名を付けるものとしておきます。 ※【図↓】参照のこと そしてタイムラインのフレーム1には次のように書きます。 //---------------------------------------- //画像１枚の横幅を設定 var g_w:Number = 120; //画像の枚数を設定 var g_n:Number = 7; //「L_btn(←ボタン)」を非表示にしておく L_btn._visible = false; //カウンタ用変数 var cnt:Number = 0; //「R_btn(→ボタン)」クリック時の動作を定義 R_btn.onRelease = function():Void { //もしカウンタが 画像の枚数-1 未満であれば if (cnt < g_n-1) { //画像の横幅分 左へ移動 my_mc._x -= g_w; //「L_btn(←ボタン)」を表示する L_btn._visible = true; //なおかつカウンタが 画像の枚数-2になれば if (cnt == g_n-2) { //「R_btn(→ボタン)」を非表示にする R_btn._visible = false; } //カウンタに1を加算 cnt++; } }; //「L_btn(←ボタン)」クリック時の動作を定義 L_btn.onRelease = function():Void { //もしカウンタが 0 より大きい場合は if (cnt > 0) { //画像の横幅分 右へ移動 my_mc._x += g_w; //「R_btn(←ボタン)」を表示する R_btn._visible = true; //なおかつカウンタが 1 になれば if (cnt == 1) { //「L_btn(→ボタン)」を非表示にする L_btn._visible = false; } //カウンタから1を減算 cnt--; } }; //---------------------------------------- 　
普通、大きなコンテンツの場合（３）が多いと思いますが。^^; スペックの低いPCでの閲覧も考慮に入れるのであれば。
JavaScript も ActionScript も，両方とも間違っていますね。 私の推測も入れて書き直します。 ---HTML(index.html)内に記述したJavaScript--------- <script type="text/javascript"> function winopen(P,W,H) { window.open(P, "my_name", "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=1,resizable=0,width=" + W + ",height=" + H + "\""); } </script> ---ここまで------ ---Flash(SWFファイル)のボタン記述したActionScript----- on (release) { getURL("javascript:winopen('top.html',1024,768);"); } ---ここまで------
↓次のようにすれば良いと思います。 //------------------------------------- import mx.transitions.Tween; import mx.transitions.easing.*; bt1.onRelease = function() { // var myTween = new Tween(my_mc, "_x", Regular.easeOut, my_mc._x, my_mc._x-200, 3, true); // //bt1のボタン機能を無効にする bt1.enabled = false; // //myTweenのモーション終了時に実行するメソッドを定義 myTween.onMotionFinished = function() { //bt1のボタン機能を有効にする bt1.enabled = true; }; }; //-------------------------------------
自分で確かめていないので恐縮ですが、次のクジラ飛行机さんのWebページが参考になるのではないでしょうか。 http://hima.chu.jp/flash/tips/flash_with_arg.htm つまり、対象のSWFの第1フレームに、_root_引数 を評価するif文を設定して、その内容が正しくなければ、次に進めないか、そのSWFを閉じる命令を用意します。そして、呼び出し元のswfでは引数付きで呼び出すように記述しておきます。 そうすれば、引数の文字列を知らなければ開けないSWFファイルが作れるでしょう。
iPhoneは無くなりませんよ スマホサイトはフラッシュ無しが標準になるんじゃやないかな
AS2 でも AS3 でも基本的に同じ問題は起こりますよ。 とにかく問題は i です。 for文を抜けた後に(JPEGのロード完了時には) i は 4 になっています。 この辺をとう対処するかです。 対処案を３つほど書きます。 //===対処案１================== for (var i:int=1; i<4; i++) { this["myLoader"+i] = new Loader(); this["myLoader"+i].load(new URLRequest("img/img00"+i+".jpg")); this["myLoader"+i].contentLoaderInfo.addEventListener(Event.COMPLETE, xSetContent); this["myLoader"+i].x = -69+(i*97); this["myLoader"+i].y = 115; addChild(this["myLoader"+i]); } function xSetContent(eventObject:Event):void { var myContent:DisplayObject = eventObject.target.content; myContent.width = 93; myContent.height = 68; } //============================= ↑i の値がまだ 1～3 のときに その値を使って座標指定してしまえば あっさりと問題が解決するという方法です。 AS2(AS1)でも同じ方法(考え方)は使えます。 　 　 //===対処案２================== for (var i:int=1; i<4; i++) { this["myLoader"+i] = new Loader(); this["myLoader"+i].load(new URLRequest("img/img00"+i+".jpg")); //ロード完了時に関数xSetContentの戻り値を実行 this["myLoader"+i].contentLoaderInfo.addEventListener(Event.COMPLETE, xSetContent(i)); addChild(this["myLoader"+i]); } //戻り値として関数を返す 関数xSetContentを定義 function xSetContent(n:int):Function { //戻り値として返す関数 return function():void{ var myContent:DisplayObject = MovieClip(root)["myLoader" + n].content; myContent.width = 93; myContent.height = 68; myContent.x = -69+(n*97); myContent.y = 115; } }; //============================= ↑クロージャという関数を使っています。 これも AS2(AS1)でも同じ方法(考え方)は使えます。 また ActionScript に関わらず多くの言語でこのクロージャは使われます。 　 　 //===対処案３================== //Dictionaryインスタンス「my_dic」を作成 var my_dic:Dictionary = new Dictionary(); for (var i:int=1; i<4; i++) { this["myLoader"+i] = new Loader(); this["myLoader"+i].load(new URLRequest("img/img00"+i+".jpg")); this["myLoader"+i].contentLoaderInfo.addEventListener(Event.COMPLETE, xSetContent); //「my_dic」にLoaderをキーとして i の値を登録 my_dic[this["myLoader"+i]] = i; addChild(this["myLoader"+i]); } function xSetContent(eventObject:Event):void { var myContent:Bitmap = eventObject.target.content; myContent.width = 93; myContent.height = 68; //「my_dic」からLoaderをキーとして i の値を取得 myContent.x = -69+(my_dic[myContent.parent]*97); myContent.y = 115; } //============================= ↑Dictionaryクラスのインスタンスには インスタンスをキーとしてインスタンスを登録することができます。 (インスタンスどうしを関連付けることができます。) これは AS3 のみで使える方法で AS2(AS1) では使えません。 この場合は Loader インスタンスをキーとして i の値を関連付けています。 他にも例えば 「ボタンインスタンスをキーとしてムービークリップを関連付ける」 「テキストフィールドをキーとしてスプライトを関連付ける」 などのことができます。 フレームにコピペ＆ムービープレビューするだけで検証できる簡易例↓。 //============================= //テキストフィールド「my_txt」を作成 var my_txt:TextField = new TextField(); my_txt.border = true; my_txt.autoSize = TextFieldAutoSize.LEFT; my_txt.x = my_txt.y = 20; my_txt.text = "ココをクリックしてください"; addChild(my_txt); //スプライト「my_sp」を作成 var my_sp:Sprite = new Sprite(); my_sp.x = my_sp.y = 120; my_sp.graphics.beginFill(0xFFCC00); my_sp.graphics.drawRect(-50, -25, 100, 50); my_sp.graphics.endFill(); addChild(my_sp); //Dictionaryインスタンスを作成 var my_dic:Dictionary = new Dictionary(); //「my_txt」をキーとして「my_sp」を関連付ける my_dic[my_txt] = my_sp; //「my_txt」クリック時に関数rotateMCを実行 my_txt.addEventListener(MouseEvent.CLICK,rotateMC); //関数rotateMCの定義 function rotateMC(evt:MouseEvent):void { //「my_txt」をキーとして関連付けたインスタンスを回転 my_dic[evt.currentTarget].rotation += 10; } //=============================
flash テンプレート wedding　などで検査すれば出てきそうですが 以下のソフトのようなテンプレート素材です。 http://www.justsystems.com/jp/products/photowedd … 少々値段はかかりますが、外注するよりは安くオリジナルのものが作れそうです。
お使いの Flash のバージョンも書かれていませんし パブリッシュ対象の Flash Player のバージョンも書かれていませんし ActionScript のバージョンも書かれていませんし 前後(周辺)の状況も全く書かれていませんね。 これでは現象の再現ができないので 「こうすれば良い」とか「ここが間違っている」などが言えません。 私の方でも現象を再現しようと色々してみましたが 私がやってみた中ではダイナミックテキストが印刷されないという現象は起きませんでした。 フレームに書いたスクリプト例↓ ---ActionScript 2.0 ＆ Flash Player 7 ------ //ムービークリップ「my_mc」内に //ダイナミックテキストフィールド「my_txt」を作成 createEmptyMovieClip("my_mc",0); my_mc._x = 100; my_mc._y = 100; my_mc.createTextField("my_txt",0,0,0,0,0); my_mc.my_txt.type = "dynamic"; my_mc.my_txt.autoSize = "left"; my_mc.my_txt.text = "あいうえお"; //「my_mc」を印刷 var my_pj:PrintJob = new PrintJob(); my_pj.start(); my_pj.addPage(my_mc); my_pj.send(); -------------------------------------------- 　　↓結果↓ 「あいうえお」は印刷される ---ActionScript 3.0 ＆ Flash Player 10------ //ムービークリップ「my_mc」内に //ダイナミックテキストフィールド「my_txt」を作成 var my_mc:MovieClip = new MovieClip(); my_mc.x = 100; my_mc.y = 100; var my_txt:TextField = new TextField(); my_txt.type = TextFieldType.DYNAMIC; my_txt.autoSize = TextFieldAutoSize.LEFT; my_txt.x = 0; my_txt.y = 0; my_txt.text = "あいうえお"; my_mc.addChild(my_txt); addChild(my_mc); //「my_mc」を印刷 var my_pj:PrintJob = new PrintJob(); my_pj.start(); my_pj.addPage(my_mc); my_pj.send(); -------------------------------------------- 　　↓結果↓ 「あいうえお」は印刷される 当然， 他のバージョン(型指定を削除して ActionScript 1.0 の Flash Player 8 に設定するなど)でも検証してみましたが 結果は同じで 私がやってみた中では，どの場合でもダイナミックテキストの内容は印刷されました。 (ただし PrintJob が使えるのは Flash Player 7 以降なので，それより以下の条件はないものとして無視しました。) また上記のものは， 質問者さんの方でもコピペだけで再現がしやすいように全てActionScriptで作成していますが， この外にも手動でムービークリップやテキストフィールドを作成してみたりもしました。 さらに テキストフィールドにボーダーの枠を入れてみたり，背景の色を設定してみたり，色々してみました。 しかしやはり結果は同じで 私がやってみた中では，どの場合でもダイナミックテキストの内容は印刷されました。 そもそも， ご自身でシンプルな状況を作って，同じ現象が起こるこを確認されてから質問されたのでしょうか？ (状況をシンプルにして問題を単純化すると， 「解決策」まではわからないにしても 「原因」だけはわかることが多いです。 また問題解決をしようとするときにまずすべきことです。) とにかく， 状況などは無数にあって，質問者さんの状況など特定できないので， 『何かの条件が合わされば「ダイナミックテキストの部分が印刷されない」という現象は起きることもあるでしょうね。』 くらいのことしか言えません。 また， Flash や Flash Player や ActionScript 内の問題ではなく OSやプリンタやそのドライバやフォントなどが関係することかもしれません。 何にしても，状況がわからない以上は何とも言えません。 　 　
条件の詳細が分かりませんが、参照URLの記事がお役に立つかと思います。 ↓２線の交点の求め方教えて下さい。 http://questionbox.jp.msn.com/qa24651.html ↓２点を通る２直線の交点の求め方 http://youfc2.blog10.fc2.com/blog-entry-11.html 参考URL：http://questionbox.jp.msn.com/qa24651.html
こちらをお試しいただけましたか。 http://kb2.adobe.com/jp/cps/235/235929.html
私も同様の事象で悩んでおりました。 私の場合は、Flash MX で過去に作ったflaファイルを cs5 にて開こうとしましたが、 同様に「予期しないファイル形式です」とのメッセージが表示され、開くことができませんでした。 Flash MX　はPCにはもうインストールされておらず、半ば諦め気味でしたが、 先程、●●.fla と一緒に作成してあった　●●.swf　ファイルを CS5 にて開くことができたため 先に●●.swf　ファイルを CS5 にて開き、その状態で　●●.fla ファイルを開くと、 ●●.fla ファイルを開くことができました。 その後、cs5 形式で別名保存を行い、問題は解消できました。 ただ、新バージョンで保存した場合、 「うまく表示されないフォントがでてくる可能性もある」　 のようなメッセージが表示されます。 これで解決するかわかりませんが、 私の本日の経験談です。 ご参考までに。
＃１です。 ・お礼より引用 > var myTween:Tween = new Tween(ball, "_y", eas, 15, 220, 2, true); > のeasがBounce.easeOutと指定された場合に > 「.」はどの箇所で「.」が必要だと決まって > いるのでしょうか？ この文章からは， いったい何がわからないのかが読み取れませんが。。。 「.」が必要だと決めたのは Adobe(AS2 だから Macromedia 時代) です。 というか， イージングに Backクラス，Bounceクラス，Elasticクラス，Regularクラス，Strongクラス，Noneクラス という６つのクラスを作って， それらクラスのメソッドとして， easeInメソッド，easeOutメソッド，easeInOutメソッド という３つのメソッドを入れよう。 と決めたのが Adobe(Macromedia時代) です。 その「クラス」と「メソッド」の狭間に「.」が必要なのです。 と書いてみましたが， やはり何がわからないのかがわかりませんね。。。 このイージングに限らず， 普通のスクリプトの構文は 　オブジェクト.メソッド または 　オブジェクト.プロパティ になっているでしょう？ 例えば _root.gotoAndStop(4); これ場合は「_root」がオブジェクトです。 「gotoAndStop」がそのオブジェクトに対するgotoAndStopメソッドです。 その後の「()」がそのメソッドを実行命令です。 その「()」の中の「4」がそのメソッドを実行させるときの引数です。 ball._y この場合は「ball」がオブジェクトです。 「_y」がそのオブジェクトのプロパティ(y座標プロパティ)です。 これらの例のように オブジェクトにはあるクラスのインスタンスが入る場合が多いです。 (_root は MovieClipクラスのインスタンスの一種。) しかしオブジェクトがクラス自体になることもあるのです。 イージングのクラス群は Tweenとセットでないと動作しないので確認しにくいです。 イージングのクラス群によく似たクラスに Math クラス(数学用クラス)がありますから それで出力検証実験をしてみますか。 よろしければ ActionScript 2.0 設定の新規ドキュメントを作成し 次のスクリプトを フレーム1 に書き， 「制御」→「ムービープレビュー」し，出力パネルを確認してみてください。 //Mathクラスを出力 trace(Math); →出力結果：[object Object] になると思います。 Mathクラスはオブジェクトなんです。 では次の場合はどうなるでしょうか。 //Math.randomを出力 trace(Math.random); →出力結果：[type Function] Math.random という Function(メソッド) が存在するということになります。 では次の場合はどうなるでしょうか。 //Mathクラスのrandomメソッドを実行した結果を出力 trace(Math.random()); →出力結果：0.??????????????? になると思います。 「?」はそのときどきによって変わる数字です。 Mathクラス(オブジェクト)には random という「0以上1未満の乱数を返すメソッド」があるわけです。 Math.random() は， Mathクラスのrandomメソッドを実行せよ。 という意味ですから Math と random の間には「.」が必要になります。 「.」の位置を１つ左にずらした Mat.hrandom() など無事に動作しません。 「.」を削除した Mathrandom() でも同じくです。 「そんなメソッド無いよ！」という意味で「undefined」が返ってきます。 それでは次の場合はどうなるでしょうか。 //Mathクラスのrandomメソッドを変数に代入 var my_method:Function = Math.random; //そのメソッドを実行した結果を出力 trace(my_method()); →出力結果：0.??????????????? Math.random (Mathクラスのrandomメソッド)を， 変数に格納することができるわけです。 これが ＃１ で使った方法に近いものです。 さらに ＃１ で使った方法に近づけてみます。 //Mathクラスを変数に代入 var my_class:Object = Math; //「random」という文字列を変数に代入 var my_method:String = "random"; //そのメソッドを実行した結果を出力 trace(my_class[my_method]()); →出力結果：0.??????????????? クラスとメソッドとをバラバラに設定(コンボボックスなどから取得)して それらを合体させる方法です。 何がわからないのかが読み取れませんが 以上のような感じでよろしいでしょうか？
「Adobe ActionScript 3.0 UIScrollBar コンポーネントの使用」 http://help.adobe.com/ja_JP/ActionScript/3.0_Usi … > ActionScript を使用した UIScrollBar コンポーネントインスタンスの作成 > ～～～略～～～ > 　1.新しい Flash (ActionScript 3.0) ドキュメントを作成します。 > 　2.ScrollBar コンポーネントを [ライブラリ] パネルに > 　　ドラッグします。 > 　3.[アクション] パネルを開いて、メインタイムライン内で…略…
そういう基本的でオーソドックスなものは 普通，全てスクリプトでするものではありません。 「たくさんの四角インスタンスがトゥイーンで拡大するアニメーション」をムービークリップ内のタイムラインに作って そのムービークリップで写真にマスクを掛ければ良いだけのことです。 場合によっては stop(); １つくらいでできます。 初心者がすべき重要かつ簡単な内容です。 回答を待ったりスクリプトを考えている間に， 手作業だと数十回はいろいろなバリエーション作成できていたと思います。 スクリプトでもできなくはありませんが カスタマイズとかが難しくなるだけですし またこういうものは「手作業」で作れてはじめてスクリプトが組めたり使い回しが可能になるのです。 と言いつつ一応作ってはみましたが... やはりマクロ(手作業でする操作を自動化しただけのプログラム)的なスクリプトが大半を占めてしまいました。 手作業をサボる分，頭をフル回転させばければならないスクリプトです。 ステージ上に 「pic0」「pic1」…「pic5」というインスタンス名を付けた 800×400pxの写真入りムービークリップを作成し それらムービークリップがあるタイムラインのフレームにコピペするスクリプト例です。 ※ 図↓参考のこと //=========================================== //---↓マスク用MCの作成(ほぼマクロ)↓--- import fl.transitions.*; import fl.transitions.easing.*; var mc:MovieClip; function makeMask():void { // mc = new MovieClip(); // for (mc.i=0; mc.i<=3; mc.i++) { for (mc.j = 0; mc.j<=7; mc.j++) { mc["rec" + mc.i + mc.j] = new Shape(); mc["rec" + mc.i + mc.j].graphics.beginFill(0xFF6666, 1); mc["rec" + mc.i + mc.j].graphics.drawRect(0, 0, 100, 100); mc["rec" + mc.i + mc.j].graphics.endFill(); mc["rec" + mc.i + mc.j].x = mc.j * 100; mc["rec" + mc.i + mc.j].y = mc.i * 100; mc["rec" + mc.i + mc.j].width = 0; mc.addChild(mc["rec" +mc.i + mc.j]); } } // mc.dic = new Dictionary(); // for (mc.i = 0; mc.i<=3; mc.i++) { mc["tm" + mc.i] = new Timer(100,8); mc.dic[mc["tm" + mc.i]] = mc.i; mc["j" + mc.i] = 0; mc.timerHandler1 = function(e:TimerEvent):void { mc["twn" + mc.i] = new Tween(mc["rec" + mc.dic[e.target] + mc["j" + mc.dic[e.target]]],"width",Regular.easeOut,0,100,0.5,true); mc["j" + mc.dic[e.target]]++; }; mc["tm" + mc.i].addEventListener(TimerEvent.TIMER, mc.timerHandler1,false,0,false); } // mc.cnt = 0; // mc.tm = new Timer(200,4); // mc.timerHandler0 = function(e:TimerEvent):void { mc["tm" + mc.cnt].start(); mc.cnt++; }; // mc.tm.addEventListener(TimerEvent.TIMER, mc.timerHandler0,false,0,true); // mc.tm.start(); // this.addChild(mc); } //---↑マスク用MCの作成(ほぼマクロ)↑--- //カウント用変数 var cnt:int = 0; //「pic0」を最高の深度に移動 this.setChildIndex(pic0,this.numChildren-1); //関数nextPicの定義 function nextPic(e:TimerEvent):void { this["pic" + cnt].mask = null; if (mc != null) { this.removeChild(mc); mc = null; } cnt = (cnt>=5) ? 0 : cnt+1; //マスクを作成 makeMask(); //次の「pic○」を最高の深度に移動 this.setChildIndex(this["pic" + cnt],this.numChildren-1); //次の「pic○」にマスクを適用 this["pic" + cnt].mask = mc; } //10秒間隔で実行するTimerインスタンスを作成 var tm:Timer = new Timer(10000,0); //関数nextPicを指定ミリ秒間隔で実行 tm.addEventListener(TimerEvent.TIMER,nextPic ,false,0,false); //タイマースタート tm.start(); //=========================================== 繰り返しますが 上のスクリプトをどうのこうの考えるより マスクにするムービークリップをチャッチャと手作業で作ってしまった方が早いですよ。 どうのこうのと細かいこと考えていても発想が乏しくなるだけです(＝デメリットの方が多い)。 手作業だと形もパターンも色々自由に無数に簡単にできるはずです。 そのムービークリップを使い回したりすれば良いだけです。 作ったムービークリップをリンケージでクラス化して var mask_mc:クラス名 = new クラス名(); addChild(mask_mc); みたいにして呼び出しても良いわけですし。 そんなことせずに 普通に写真のマスクレイヤーに配置しても良いです。 　
＃１です。 度々失礼します。 スクリプトの説明は ＃１ で終わっていますが， 元のスクリプトが 何だかほとんど同じ事を何度も書く無駄の多いスクリプトであると思ったため 私なりに単純化して書き直してみました。 ５つのMCでも書き方を工夫すれば これだけになります↓。 ------------------------------------------- /*ライブラリ読込*/ import caurina.transitions.Tweener; /*各MCロールオーバー時の座標*/ var x_arr:Array = new Array(); x_arr[0] = [0, 260, 280, 300, 320]; x_arr[1] = [0, 10, 280, 300, 320]; x_arr[2] = [0, 10, 30, 300, 320]; x_arr[3] = [0, 10, 30, 50, 320]; x_arr[4] = [0, 10, 30, 50, 70]; /*トゥイーンをさせる関数*/ function tw(n:Number):Void { for (var i = 0; i<x_arr.length; i++) { Tweener.addTween(this["panel0"+(i+1)+"_mc"], {_x:x_arr[n][i], _y:0, time:1, transition:"easelnOutCubic"}); } } /*パネルごとの動作*/ for (var i = 0; i<x_arr.length; i++) { this["panel0"+(i+1)+"_mc"].num = i; this["panel0"+(i+1)+"_mc"].onRollOver = function():Void { tw(this.num); }; } ------------------------------------------- 参考まで。
以前にそのような内容のことに回答したことがあります。 「Adobe Flashシリーズの購入について」 http://oshiete.goo.ne.jp/qa/6702680.html Flash Builder で具体的にどんなものができるのかは デモやサンプルのページを見るとわかるとだいたいのことがわかると思います。 「デモもソースもダウンロード可能な役に立つFlash-Flex サンプル集 「from Quietly Scheming」 - Flex／ActionScript　開発」 http://www.syboos.jp/flex/doc/flex-actionscript- … 要するにブラウザなどで動作するアプリケーションのユーザーインターフェイス部分を作るソフトです。
> Flash→php→Flashという流れで値を > 表示させる方法はわかるのですが、 意味がわかりません。 どう考えてもそれの方が難しいでしょう？ Flash→php→Flash だと， 「送信する手段」も「受信する手段」も両方とも用意しなければならないのですよ？ Flash→php だけだと Flashで用意するのは「送信する手段」 だけで良いじゃないですか。 > (getURLでphpファイルを表示) その延長だと 例えば(あくまでも一例として)， getURL でURLクエリを付けて PHP を表示させれば良いじゃないですか。 簡単でしょう？ Google を PHP に見立てますか？ Google検索「Flash」↓ http://www.google.co.jp/search?&ie=UTF-8&q=Flash 例えば上のように Google に &ie=UTF-8&q=Flash というクエリを引っ付けてアクセスすると Flash と表示された検索窓と検索結果が表示されると思います。 つまり Flash でするなら getURL(http://www.google.co.jp/search?&ie=UTF-8&q=Flash); をすれば良いというだけのことです。 値をGETで渡すのと同じです。 何が難しいのかがわかりません。 もっとも getURL は MovieClip クラスのメソッドで， MovieClip 内に変数を仕込んでおいて MovieClip.getURL("○○.php" , "_self", 'POST'); などとすると，POSTでも送信可能です。 「FlashのAS2のgetURLで別サイトを開いてPOST送信する方法｜本を買わずに解決するWeb制作の小技」 http://ameblo.jp/linking/entry-10278331607.html また MovieClip クラスのメソッドを使うのは変だと思えば LoadVars.send() を使っても良いですし。 「loadVars.send()メソッドを使用して変数を受信」 http://1art.jp/flash/le/lesson46/lesson46.htm 何にしろ， Flash→php だけだと Flashで用意するのは「送信する手段」 だけで良いのでかなり簡単なはずです。
う～ん。。。 > 等倍で拡大・縮小 とは？？？ コンピュータに伝わらないのはまだしも， 少なくとも(超最低ライン)人間には伝わるような「見方」や「考え方」で表現できるようにした方が良いです。 喩えるなら「五分刈りで三つ編みにしたい」とか「暗闇で部屋を照らしたい」とか... 欲求がなんだかそういう変な宗教か頓知の世界をさまよよっているようしか思えないので。 それを超拡大解釈するとしたら， 「縦横比が同じままで拡大・縮小させたい」ということなのでしょうか？ また， > mc1の右下の隅にmc2があります。 > mc2をドラッグして、移動すると、mc1が この部分もすごく好い加減です。 そんなに好い加減では絶対にコンピュータには命令できません。 もっと「客観的」に＆「具体的」に， 少なくとも第三者である人間にさえは通じるような精度で考えないと。。。 「mc2をドラッグする」と言っても， その「ドラッグ」自体ができているのかどうかも第三者にはわからないのです。 また「どういった向きにドラッグするのか」もわからないわけです。 仮に「左右にドラッグする」としましょうか。 その場合「左にドラッグすれば大きくなるのか小さくなるのか」がわかりません。 また「どこからどこまで大きくしたり小さくしたりするのか」もわかりません。 プログラムコードを書くには，この辺が全て要るのです！ 全てを回答者が全て考えるのですか？ そんなんじゃ，いわゆる「丸投げ質問」ですし， その「丸投げ」に回答したとしても，それは「全く回答者が動かしたい動作」になってしまうのですよ。 根本をしっかりさせてください。 でないと仮にココでそれなりの回答をしたとしても， その先には一歩たりとも進めないことは目に見えています。
全体的に変 というか 一貫性がない というか... 無茶苦茶状態になっていますね。 どこからどこまでを修正・変更・説明すべきか。。。(困) /////////////////////////////////////// まず題名は「子swfから親swfのstageを参照したい」ですよね？ これに答えるなら一言で済みます。 「子swfのstage も 親swfのstage も同じだから stage と書けば良い。」 それだけです。 /////////////////////////////////////// そして... 次に今度は何をしようとしてされているのでしょうか...？ > 以下のサイトを参考に試行錯誤中です。 いきなり方向が変わってますよ。 なおかつそのサイトのそのページは間違ってますし， ダブルパンチで痛い方向に進んでますね。。。 そのサイトのスクリプトは間違っています。 ※実際に検証してみていたなら 　 そのサイトを鵜呑みにすることは 　 なかったと思いますが。。。 次のように変更すれば一応動作はします。 (不可解な部分はまだ残りますが。) ・親のメイン・アクションフレーム ------------------------------------ var loader_ko:Loader = new Loader(); var url:String = "ko.swf"; var load_mc:MovieClip; addChild(loader_ko); loader_ko.contentLoaderInfo.addEventListener(Event.COMPLETE, funcComp);//ロード完了イベントリスナ loader_ko.load(new URLRequest(url));//ロード実行 function funcComp(e:Event):void { load_mc = MovieClip(loader_ko.content); load_mc.x = 90; load_mc.y = 100; } function funcOya(moji:String) { oya_tf.text = moji; } ------------------------------------ ・子のメイン・アクションフレーム ----------------------------------- MovieClip(root.parent.parent).funcOya("親も動け"); ----------------------------------- 要するに MovieClip(root.parent) だと Loader までしかたどり着きません。 親SWF の root はさらにその親です。 しかし... 上記ページは間違っていてもいなくても参考にしない方が良いです。 元から関係のないことが書いてあるのですから。 /////////////////////////////////////// さて， というわけで話を最初に戻して 「子swfのstage も 親swfのstage も同じだから stage と書けば良い。」 の話です。 最後に書かれていらっしゃるスクリプトは "動きの良し悪しは別" として 次のように変更すれば，書かれている内容通りの動作はします。 a.swf------------------------------------- stage.scaleMode = StageScaleMode.NO_SCALE; stage.align = StageAlign.TOP_LEFT; var bLoader:Loader = new Loader(); var bUrl:String = "b.swf"; var bRequest:URLRequest = new URLRequest(bUrl); bLoader.load(bRequest); addChild(bLoader); b.swf------------------------------------- //移動させる背景画像 var bgMC:MovieClip=new BgMC(); addChild(bgMC); bgMC.x = 0; //ウィンドウがリサイズするたびに位置を合わせる stage.addEventListener(Event.RESIZE, resizefunc); function resizefunc(event:Event):void { bgMC.y =stage.stageHeight; } 遠回りをしましたが，以上です。 「AS3におけるroot参照 www.imajuk.swf」 http://www.imajuk.com/blog/archives/2008/01/as3r …
参考URLの一番下にあるサンプルで動作を確認してください。 stage.focus で、フォーカスの移動は可能ですが、「swfが読込まれたとき」を判定するイベントが必要です。 サンプルではkeyCodeを取得するイベントリスナーがstageではなくSpriteに設定されています。 SpriteをクリックされるとフォーカスがSpriteに指定され、keyCodeを取得できる流れだと思います。 >stageよりもムービークリップを先にクリックされた場合、stageをクリックしていないのでキーボードを押しても無反応ですよね？ そのMovieClipにイベントリスナーを持たせるか、MovieClipをクリックされた時にkeyCodeを取得するイベントリスナーを設定した対象へ[stage.focus]を設定すれば、イベントの取得が可能ではないでしょうか？ 細かいファイルの状況等は分かりませんので、おおまかにイメージだけ。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
Papervision3D 参考URL[注）PDF]によると ・商用・非商用ともに無償利用が可能 だそうです。 参考URL：http://www.xknowledge.co.jp/fordevelopers/paperv …
クリックする度にフラグとなる変数の値を入れ替えて そのフラグの値によってTweenを変えれば良いと思います。 //------------------------------------------- //クラスのインポート import mx.transitions.Tween; import mx.transitions.easing.*; //「grobal_btn」の初期の大きさと座標を変数に保存 var g_btn_xs:Number = grobal_btn._xscale; var g_btn_x:Number = grobal_btn._x; var g_btn_ys:Number = grobal_btn._yscale; var g_btn_y:Number = grobal_btn._y; //フラグとなる変数を用意 var g_flg:Boolean = false; grobal_btn.onRelease = function() { //フラグがfalseであれば if (!g_flg) { mc_tween = new Tween(grobal_btn, "_xscale", Elastic.easeOut, grobal_btn._xscale, 150, 1, true); mc_tween = new Tween(grobal_btn, "_x", Elastic.easeOut, grobal_btn._x, 300, 4, true);//スタートx座標、移動した後の座標 mc_tween = new Tween(grobal_btn, "_yscale", Elastic.easeOut, grobal_btn._yscale, 150, 1, true); mc_tween = new Tween(grobal_btn, "_y", Elastic.easeOut, grobal_btn._y, 100, 4, true);//スタートy座標、移動した後の座標 //フラグをtrueにする g_flg = true; } else { mc_tween = new Tween(grobal_btn, "_xscale", Elastic.easeOut, grobal_btn._xscale, g_btn_xs, 1, true); mc_tween = new Tween(grobal_btn, "_x", Elastic.easeOut, grobal_btn._x, g_btn_x, 4, true);//スタートx座標、移動した後の座標 mc_tween = new Tween(grobal_btn, "_yscale", Elastic.easeOut, grobal_btn._yscale, g_btn_ys, 1, true); mc_tween = new Tween(grobal_btn, "_y", Elastic.easeOut, grobal_btn._y, g_btn_y, 4, true);//スタートy座標、移動した後の座標 //フラグをfalseに戻す g_flg = false; } }; //------------------------------------------- 　
http://detail.chiebukuro.yahoo.co.jp/qa/question …
フレーム1 に count を 1 にする条件を付ける必要があります。 もし count に int(整数値) という型指定を入れる場合は次のようになります。 -------------------------------- var count:int; if (count==0) { count=1; } -------------------------------- 型指定など入れない場合は次のようになります。 -------------------------------- if (count==undefined) { var count=1; } --------------------------------
「一番深度が深い」というのは 「一番下の」とか「Z軸方向で一番向こう側の」という意味ですよね？ インスタンスの一プロパティに過ぎないインスタンス名など知って何になるのか知りませんが 例えば， スクリプトを記述するタイムライン階層で一番深度が深い(下の)インスタンスのインスタンス名であれば， this.getChildAt(0).name で取得できます。 「制御」→「ムービープレビュー」で確認するのであれば trace(this.getChildAt(0).name); で確認できます。 もし全部のインスタンス名を確認したいのでしたら，次のようにすれば良いでしょう。 //この階層の子の個数分ループ for (var i:int =0; i< this.numChildren; i++) { //下のインスタンスのインスタンス名から順に出力 trace(this.getChildAt(i).name); } 特に難しいこともありません。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝ しかし， 最初に少し書きましたが，インスタンス名など知っても普通はあまり得しませんよ。 (私は知るメリットが思い浮かばない。) なぜ得しないかというと， 例えば一番深度が深い(下の)インスタンスを右に100px移動させたいとすると そのときは次のようにすれば良いだけです。 //この階層の一番下のインスタンスを100px右に移動 this.getChildAt(0).x += 100; ↑インスタンス名など登場しません。 あえてインスタンス名を登場させようとするとすごく大変(遠回り)になります。 //この階層の一番下のインスタンスのインスタンス名を取得 var name_str:String = this.getChildAt(0).name; //その名前のインスタンスを取得して //そのインスタンスを100px右に移動 this.getChildByName(name_str).x += 100; ActionScript 3.0 では インスタンス名自体の出番はほとんどなくなりました。 （インスタンス個体を一意に定める必要があるときなど，かなり特殊な場合に限って使うこともありますが。） 「F-site [AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html 　
当方の環境がFlashCS5なので、あくまで推測ですが。 お使いのスタンドアロンのFlash Playerがデバッグ版でない ということはないでしょうか？ 参照URLからFlash Playerがデバッグ版の入手が可能です。 ご参考まで。 参考URL：http://www.adobe.com/jp/support/flashplayer/down …
シンボルに変換する際にムービークリップmcの基準点を中心にしてください。 デフォルトでは左上が基準点になっているので注意。 //ドラッグするムービークリップ インスタンス名mc onClipEvent(Load){ mw = this._width;//mcの基準となるwidth mh = this._height;//mcの基準となるheight xs = this._x;//mcの基準となるx座標 ys = this._y;//mcの基準となるy座標 } on (press) { var top = ys + (mh - this._height) / 2; var left = xs - (mw - this._width) / 2; var right = xs + (mw - this._width) / 2; var bottom = ys - (mh - this._height) / 2; this.startDrag(false, left, top, right, bottom); } on (release, releaseOutside) { this.stopDrag(); } //拡大ボタン on (press) { var tgt = _root.mc;//ターゲットの設定 var inc = 10;//拡大量 if (tgt._yscale<300) { tgt._xscale = tgt._yscale += inc; } else { tgt._xscale = tgt._yscale = 300; } } //縮小ボタン on (press) { var tgt = _root.mc;//ターゲットの設定 var dec = 10;//縮小量 if (tgt._yscale >100 && tgt._yscale - 100 > dec) { tgt._xscale = tgt._yscale -= dec; }else{ tgt._xscale = tgt._yscale = 100; } if(tgt._x != tgt.xs){ tgt._x=tgt.xs; tgt._y=tgt.ys; } } 期待したとおりの動きになっているか分りませんが。
全容が見えないので憶測で解答します。 恐らく2フレーム構成で、フレーム1に上記スクリプトが書かれていて、フレーム2で何らかのアクションを行っているのでしょう。 >もう一度同じボタンを押すと、フレーム2が開始されずにフレーム1が開始されます。 ボタンを押しフレーム2へ移動、処理を行った後、再度ボタンを押してもフレーム2の処理が行われないのは、フレームアクションは１度しか実行されなからです。 gotoAndPlayで自身が居るフレームと同じフレームに移動しても、再度処理を行うことはありません。 しかもフレーム2が最終フレームなため、フレーム1へ戻っているのでしょう。 >フレーム1になり、フレーム1中に再度、このボタンを押すとフレーム2が開始されます。 違うフレームに行き、再度フレーム2へ移動すれば、その都度フレームアクションが実行されます。 スマートではありませんが、フレーム3を追加し、ボタンを押すたびフレーム3へ移動し、再度目的のフレームに移動するようにすれば良いと思います。
こんな感じでできると思います。 for(var i:int = 0; i <= 9; i++){ this["mc" + i].gotoAndPlay("main"); } Google検索「配列アクセス演算子」 http://www.google.co.jp/search?sourceid=navclien …
> ActionScript3.0のswfを読み込むことはできないのでしょうか 普通に読み込むことはできます。 以上。 －－－ －－－ －－－－ 回答はすでに終わっていますが何が聞きたいのか， また どんな状況(条件)であるのかがわからないので 「普通に読み込むことはできます。」 しか言えません。 当然ですが， 読み込むことはできても ActionScript 3.0 のスクリプトは動作しませんよ。 スクリプトなど何も書いていないもので タイムラインを使ったアニメーションのようなSWFであればロードも表示もされます。 その他 例えば ActionScript 3.0 であれば Flash Player 9 以上用の SWF をパブリッシュする必要があります。 ですから ActionScript のバージョンに関わらす， Flash Playr 9 以上でしか表示できないようなものを作成すれば 当然ですが Flash Player 8 以下では表示されません。 そんな当たり前のこと(無数にある例えばの例)を ツラツラと書き連ねても文字数を食うだけで一つも利益になりませんよね。 言えることは ActionScript 3.0 とかそういう問題ではなくて 表示されない理由は無数にあります。 ただ私が実験してみた中では 「ActionScript 3.0 パブリッシュ設定が原因で ActionScript 2.0 SWFにロードできない」 という事例は見つかりませんでした。
少なくとも開発効率が悪いでしょうね。 サーバサイドの処理は別途作る必要がある。 だったら最初からPerl/PHP/Rubyで作った方が楽。 使う側としてもFlashって一方通行(ブラウザの戻るが使えない)だから ユーザビリティに関してはもうこれでも勝手くらい駄目です。 それとセキュリティー的な問題だけど http://www.google.co.jp/search?source=ig&hl=ja&r … まぁいろいろあるみたいだね。 ショッピングカートシステムでFlashを使うにしても商品の画像を見せる場所とか ワンポイントだけでの利用でしょうね。
Flash とか，作成時点での問題ではありません。 ファイルが壊れています。 test.html test.swf test.flv ArcticOverAll.swf これらは全て書かれていらっしゃる場所にあります。 個別にDLしてもさっぱり再生できません。 すでにファイルは壊れています。 壊れていないのは 「test.html」 だけです。 FTPソフトの設定(バイナリデータをテキストとして送ってしまっているなど)か， またはサーバがファイルを壊したかです。 どちらともあり得ますが 確率的にはFTPソフトの仕様が悪いか設定が悪いかだと思います。 何にしても Flash とは無関係のようです。
元データはFlash に読み込むことのできる適正なサンプルレートになっていますか？ サンプルレートが11の倍数（11kHz、22kHz、44kHz）でないと内部変換され質問者様の様な症状が発生します。 参考URLを貼っておきますので、参照の上その他の要件も確認してみてください。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/UsingFlas …
そのサイトの作品内容の説明にも書いているじゃないですか。 > 本ソフトはAdobe AIRがインストールされている環境であれば > OSの種類に関係無く遊ぶことができます。 Flash(など) で AIR を作成すれば良いんです。 「Flash制作のAIRアプリの背景透明化とドラッグ移動｜iPhone-AndroidアプリをFlashで作る！」 http://ameblo.jp/makotok1/entry-10389931862.html 背景透過などの前に Flash CS3 以上をお持ちかどうかということが問題で その他，まずはこの辺のこと↓から理解する必要があると思います。 「Adobe AIR プログラミング講座【Flashを使ってAdobe AIRを作成する】」 http://hakuhin.jp/air/air.html
えらく長いスクリプトを書かれていらっしゃいますし 動作検証などはしてみていませんが 結局のところ 「最初の配列「photoArr」の 要素[0]～[6] に 用意した 20枚 の画像のうちの 7枚 をランダムに入れれば良い。」 というだけのことでしょう？ そうでしたら 最初の部分を次のようにすれば良いと思います。 //=========================================== // 元の全画像URLを保存する配列 var sourceArr:Array; // 表示する写真のURLを保存する配列 var photoArr:Array; //～数行略～ //-------------------------------- // 初期化の処理 //-------------------------------- // 元の全画像URLの配列を設定する sourceArr = new Array(); sourceArr[0]="b00.jpg"; sourceArr[1]="b01.jpg"; sourceArr[2]="b02.jpg"; sourceArr[3]="b03.jpg"; sourceArr[4]="b04.jpg"; sourceArr[5]="b05.jpg"; sourceArr[6]="b06.jpg"; sourceArr[7]="b07.jpg"; sourceArr[8]="b08.jpg"; sourceArr[9]="b09.jpg"; sourceArr[10]="b10.jpg"; sourceArr[11]="b11.jpg"; sourceArr[12]="b12.jpg"; sourceArr[13]="b13.jpg"; sourceArr[14]="b14.jpg"; sourceArr[15]="b15.jpg"; sourceArr[16]="b16.jpg"; sourceArr[17]="b17.jpg"; sourceArr[18]="b18.jpg"; sourceArr[19]="b19.jpg"; // 表示する7枚の画像URLの配列を作成する photoArr = new Array(); for (var i:int=0; i<7; i++) { //配列 sourceArr からランダムな要素を１つ抜き取って //配列 photoArr の 要素[i] に代入 photoArr[i]=sourceArr.splice(Math.floor(Math.random()*sourceArr.length),1); } //「ムービープレビュー」時検証用(本来は不要) trace(photoArr); //～以下略～ //=========================================== 現在作成されているものは一時置いておいて， 新規ドキュメントを作成して 上のスクリプトをフレーム1に書き(コピペし)， 「制御」→「ムービープレビュー」すると，即動作確認できると思います。
if(myLSO.data.p01a != null) のようにして null で値の有無を判定していることもでもありますし 個別の値を削除する場合は普通に null を代入すれば良いだけなのではないでしょうか？ また ボタン「A」による一斉削除に関しては myLSO.clear (); でできますよ。 実際に作ってみましたがそれで別に不具合は起きませんでした。 (フレーム4 の myLSO.data.p04a～myLSO.data.p04c の３つはどうしているのかは知りませんけど。) ＝＝＝例＝＝＝＝＝＝＝＝＝＝＝＝ ---フレーム1------------- stop (); // myLSO = SharedObject.getLocal ("Flashcookie", "/"); // if (myLSO.data.p01a != null) { p01a.text = myLSO.data.p01a; } p01a.onChanged = function () { myLSO.data.p01a = p01a.text; }; // if (myLSO.data.p01b != null) { p01b.text = myLSO.data.p01b; } p01b.onChanged = function () { myLSO.data.p01b = p01b.text; }; // if (myLSO.data.p01c != null) { p01c.text = myLSO.data.p01c; } p01c.onChanged = function () { myLSO.data.p01c = p01c.text; }; //--- A.onRelease = function () { myLSO.clear (); }; // B.onRelease = function () { myLSO.data.p01a = null; myLSO.data.p01b = null; myLSO.data.p01c = null; }; //--- next_btn.onRelease = function () { nextFrame (); }; back_btn.onRelease = function () { prevFrame (); }; ----------------------- ---フレーム2------------- if (myLSO.data.p02a != null) { p02a.text = myLSO.data.p02a; } p02a.onChanged = function () { myLSO.data.p02a = p02a.text; }; // if (myLSO.data.p02b != null) { p02b.text = myLSO.data.p02b; } p02b.onChanged = function () { myLSO.data.p02b = p02b.text; }; // if (myLSO.data.p02c != null) { p02c.text = myLSO.data.p02c; } p02c.onChanged = function () { myLSO.data.p02c = p02c.text; }; //--- B.onRelease = function () { myLSO.data.p02a = null; myLSO.data.p02b = null; myLSO.data.p02c = null; }; ----------------------- ---フレーム3------------- if (myLSO.data.p03a != null) { p03a.text = myLSO.data.p03a; } p03a.onChanged = function () { myLSO.data.p03a = p03a.text; }; // if (myLSO.data.p03b != null) { p03b.text = myLSO.data.p03b; } p03b.onChanged = function () { myLSO.data.p03b = p03b.text; }; // if (myLSO.data.p03c != null) { p03c.text = myLSO.data.p03c; } p03c.onChanged = function () { myLSO.data.p03c = p03c.text; }; //--- B.onRelease = function () { myLSO.data.p03a = null; myLSO.data.p03b = null; myLSO.data.p03c = null; }; ----------------------- ---フレーム4------------- myLSO.data.p04a = 0; myLSO.data.p04b = 0; myLSO.data.p04c = 0; // for (i = 1; i <= 3; i++) { if (myLSO.data["p0" + i + "a"] != null) { myLSO.data.p04a += Number (myLSO.data["p0" + i + "a"]); } if (myLSO.data["p0" + i + "b"] != null) { myLSO.data.p04b += Number (myLSO.data["p0" + i + "b"]); } if (myLSO.data["p0" + i + "c"] != null) { myLSO.data.p04c += Number (myLSO.data["p0" + i + "c"]); } } // p04a.text = myLSO.data.p04a; p04b.text = myLSO.data.p04b; p04c.text = myLSO.data.p04c; //--- B.onRelease = function () { myLSO.data.p04a = null; myLSO.data.p04b = null; myLSO.data.p04c = null; }; ----------------------- ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ※注意 話がややこしくならないように， ボタン「A」 や ボタン「B」 のクリック時には SharedObjectに保存されるデータしか null にしていません。 したがって， それらボタンをクリックした瞬間には， テキストフィールド内の文字まで一緒に "" にはなりません。 もしそこまでするのでしたら，それは別に p01a.text = ""; p01b.text = ""; p01c.text = ""; のように指示する必要があります。 それとちなみに， delete ステートメントは 指定したオブジェクトへの参照(関連付け)を破棄する(切る)スクリプトです。 delete で参照を破棄するするのではなくて， データ自体を "" や null のように操作する必要があると思います。 //---delete検証例------------ //オブジェクト「obj」を作成 var obj:Object = new Object(); obj.data = "あいう"; // //変数「A」と「B」にそれぞれ「obj」への参照を代入 var A:Object = obj; var B:Object = obj; // trace(obj.data); //→出力：あいう trace(A.data); //→出力：あいう trace(B.data); //→出力：あいう trace("------"); // delete A; trace(obj.data); //→出力：あいう trace(A.data); //→出力：undefined trace(B.data); //→出力：あいう trace("------"); /* 　↑delete A では 　変数「A」の参照が破棄されるだけで 　「obj」自体やその中のデータが削除されるわけではない。 */ // B.data = null; trace(obj.data); //→出力：null trace(A.data); //→出力：undefined trace(B.data); //→出力：null /* 　↑B.data = null で 　変数「B」の参照オブジェクトの data も null になる。 　つまり，本家本元の「obj」内の data も null になる。 */ //------------------------- 作ってみたもののスクリーンショット↓
＃１です。 一部訂正します。 > その組み合わせでは共同開発は不可能です。 と書きましたが， データ(FLAファイル)を CS3→CS5 の一方向に流すようにすれば共同開発できますね。 CS3の人がまず骨組みになるFLAや素材部品になるFLAを作って CS5の人がその骨組みに肉付けをしたり素材部品を組み立てたりする流れ限定にすればできます。 CS5で手を加えたFLAはCSで開くことはできないので 最終的にどのようなFLAファイルができたのかをCS3の人が確認することはできません。 それと > CS5 の iPone 系は，… 　　↓訂正↓ CS5 の iPhone 系は，… です。 失礼しました。
新規作成から、AS2のFlaファイルを作成。 メインタイムラインに適当なサイズの矩形を描画、ボタンシンボル[シンボル1]に変換。 その横に小さい三角を描画、MovieClipシンボル[シンボル2]に変換。インスタンス名[_cursor]に設定。 ボタンシンボルのアクションフレームに以下を記述。 ---------------------------------------------- on (rollOver) { Mouse.hide(); _cursor._x = _xmouse; _cursor._y = _ymouse; _cursor.startDrag(); } on (rollOut){ Mouse.show(); _cursor.stopDrag(); } ---------------------------------------------- パブリッシュしてFirefoxで表示すると、ボタンシンボルの上にマウスがある間だけカーソルが消えて、三角のmc[_cursor]がマウスに付いて動きます。 ご指摘の黒い矢印が表示されることはありませんでした。 テスト環境は FlashCS5 Firefox5 です。 ご提示いただいている情報以外の部分に原因があるように思われます。
大前提の前置きですが ActionScript 2.0 と 3.0 は別物で基本的に互換性などがないのです。 しかしですね， ActionScript 2.0 は ActionScript 1.0 の拡張であって完全に互換性があるのです。 つまり ActionScript 1.0 はそのままで ActionScript 2.0 とも言えるのです。 (ActionScript 1.0 で書いても パブリッシュ設定は 2.0 で何の問題もないはずです。) ですから 書かれていらっしゃるスクリプトも ActionScript 1.0 の範囲内 ですから，すなわち ActionScript 2.0 の範囲内なんです。 (「15歳は 18歳未満でもあり，20歳未満でもある。」これと同じです。) したがって 書かれていらっしゃるスクリプトを ActionScript 2.0 範囲内で書き直しても 全く同じということになります。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ただですね， 書かれていらっしゃるスクリプトは Flash 5 時代のスクリプトです。 そこにはほとんどメリットがありません。 Flash 5 流では自由度が少なかったり， 携帯(Flash Lite 1.x)では Flash 4 以下のものしか動かなかったりで Flash 5 形式で止まっていることが一番意味がないです。 具体的には onClipEvent (load) { mode = true; } ↑この onClipEvent ハンドラが Flash 5 特有の書き方です。 どうしましょうか？ 上で書きましたが，別にこれはこれで ActionScript 2.0 範囲内なんですよ。 ですから変えるにしても 変え方は作者の意志によって全く変わるわけです。 (「『15歳を大人っぽく』と言っても，『少女時代』風にすることもあれば，『松任谷由実』風にするのもアリなわけで...。」これと同じです。) そうですね。。。 onClipEvent (load) { mode = true; } などを削除して これを書いた "ムービークリップ内" の "フレーム1" に 同じ内容の ActionScript 2.0 コードを書くことにしますか↓。 //--------------------------------------- //もし mode が未定義であれば if (mode == undefined) { //変数 mode：ブール値 を true にする var mode:Boolean = true; } //このムービークリップをクリックしたときの //イベントハンドラメソッドを定義：戻り値なし this.onRelease = function():Void { //変数modeのtrueとfalseを入れ替える mode = !mode; //もし変数modeの値がtrueであれば if (mode) { //このムービークリップの再生を開始 this.play(); //もし変数modeの値がfalseであれば } else { //このムービークリップの再生を停止 this.stop(); } }; //--------------------------------------- 本格的 ActionScript 2.0 という感じではないですが 少なくとも ActionScript 1.0 の範囲内ではありません。 (パブリッシュ設定を ActionScript 1.0 にするとエラーが出るはずです。) (完全な20歳とは言い切れないとしても少なくとも18歳以上です。)
とりあえずすることは 「すでに作成済みの時計のことは忘れること」でしょうね。 作成済みの時計のことは忘れて 「5枚の画像を1分ごとにループさせる」のみを単独で考えるべきです。 (もし余裕があって，作成済みの時計のエンジンとどうしても結合したいという気になれば，そのときに結合すれば良いと思います。) (「二兎を追う者は一兎を得ず」 です。) というわけで 以下，時計は忘却！ ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ５枚の画像は背景なのですから ステージ直下の一番下の方のレイヤーにムービークリップを作成して そのムービークリップ内の フレーム1～5 にそれぞれ１枚ずつ５枚の画像を配置しているわけですよね？ そして，例えば携帯を開いたときは →ムービークリップ内の フレーム1 を表示 その次の分→ムービークリップ内 フレーム2 を表示 その次の分→ムービークリップ内 フレーム3 を表示 その次の分→ムービークリップ内 フレーム4 を表示 その次の分→ムービークリップ内 フレーム5 を表示 その次の分→ムービークリップ内 フレーム1 を表示 その次の分→ムービークリップ内 フレーム2 を表示 　～続く～ というような感じにするわけですよね？ その場合 その背景の「５枚の画像入りムービークリップ」に 例えば「bg_mc」というインスタンス名を付けます。 それとは別に， ステージ直下に空のムービークリップを作成します。 その空のムービークリップ内を３フレームにして 各フレームを空白キーフレームに変換します。 そして その空のムービークリップ内のフレーム1には次のように書きます。 //---------------------------- //親階層の「bg_mc」に命令 tellTarget("../bg_mc"){ //再生停止 stop(); } //変数minに分を保存 min = fscommand2("GetTimeMinutes"); //---------------------------- さらに その空のムービークリップ内のフレーム2には次のように書きます。 //---------------------------- //もし今の分と過去に保存したminの値が違えば if (min<>fscommand2("GetTimeMinutes")) { // //親階層の「bg_mc」の再生フレームが最終フレーム未満であれば if (../bg_mc:_currentframe<../bg_mc:_totalframes) { //親階層の「bg_mc」に命令 tellTarget ("../bg_mc") { //次のフレームで停止 nextFrame(); } // //親階層の「bg_mc」の再生フレームが最終フレームに達していれば } else { //親階層の「bg_mc」に命令 tellTarget ("../bg_mc") { //フレーム1に戻って停止 gotoAndStop(1); } } } //変数minに分を保存 min = fscommand2("GetTimeMinutes"); //---------------------------- さらに その空のムービークリップ内のフレーム3には次のように書きます。 //---------------------------- //このムービークリップ内をフレーム2に戻して再生 gotoAndPlay(2); //---------------------------- 以上のような感じでできると思います。 なお フレーム1 の最初ですが， //親階層の「bg_mc」に命令 tellTarget("../bg_mc"){ //再生停止 stop(); } こう↑ではなくて こんな感じ↓にしても良いと思います。 //親階層の「bg_mc」に命令 tellTarget("../bg_mc"){ //ランダムなフレームで再生停止 gotoAndStop(random(_totalframes)+1); } 全般的には スラッシュシンタックスによる特殊なターゲットパスの表記のしかたと くせのある tellTarget() 関数で他ムービークリップに命令することに慣れるのがポイントですかね。 それらに慣れれば 階層などムービーの構造も変更可能になりますから 色々自由にできるようになると思います。
No.1の回答者：webtera さんの「普通に考えてできると思いますか？」これいいですよ、ほんと。普通に考えていてはできない、そういう質問です。 as2.0で作ったものを、 CS5で保存して、 CS5で開いてCS4に落として、 CS4で開いてCS3に落として、 CS3で開いて8に落として、 8で開いて2004に落とせば開ける気がしますよ。 ただ完全に内容を再現できるかどうかといえば、わかりません。 内容によるんじゃないでしょうか。 いくらくらいかかるんでしょうかね。 CS3とか8ってまだ手に入りますかね。
Flash Lite 1.x (Flash 4) には配列がないので eval関数で配列もどきを作って対処することがあります。 書かれていらっしゃるスクリプトを その配列もどきを使ってする方法例↓ //--------------------------------- for (i=0; i<=4; i++) { for (j=1; j<=5; j++) { eval("fakeArr" add (5*i+j)) = j; } } A = 20; B = eval("fakeArr" add A); //--------------------------------- 最初の for文 で fakeArr1 = 1 fakeArr2 = 2 fakeArr3 = 3 fakeArr4 = 4 fakeArr5 = 5 fakeArr6 = 1 fakeArr7 = 2 fakeArr8 = 3 fakeArr9 = 4 fakeArr10 = 5 ～略～ fakeArr19 = 4 fakeArr20 = 5 になります。 A = 20 のとき B = eval("fakeArr" add A); は B = eval("fakeArr" add 20); になりますから B = fakeArr20; で B = 5 になります。
> フレームに配置したインスタンスを配列に格納する方法 フレームに配置とは 作成したムービークリップを ８個 手動でステージ上に配置して 「r_machi01_1」～「r_machi01_8」というインスタンス名を付けた。 ということでしょうか？ その状態で その８個が存在するタイムラインのフレームに スクリプトを書く場合でしたら var mapBtStr:String = "r_machi01_"+ i; var mapBt:MovieClip = mapBtStr; mapBtMcArr.push(mapBt); 　　↓３行を１行に変更↓ mapBtMcArr.push(this["r_machi01_"+ i]); と変更すれば良いのではないでしょうか。 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&ie=UTF-8&q= …
リスナー関数の引数はイベントで そのイベントのターゲット(カレントターゲット)が そのイベントを受けたものですよ。 testFunc を次のように変更すれば 何か見えてくるものがあるのではないでしょうか？ function testFunc(evt:MouseEvent):void { trace(evt.currentTarget.name); evt.currentTarget.text = "私，クリックされました！"; }
そんな難しくないんですが、初心者ではけっこうハードル高いです。やめたほうがいいでしょう。 でもチャレンジは大切なので、以下にヒントをあげてみました。 非常に簡素に書いてくれているところはこんなところでしょうか。 http://flashrave.org/as/fullsize/ 「全画面表示　flash」で検索すればある程度は見つかると思います。 検索する力も就職活動には必要です。 参考URL：http://flashrave.org/as/fullsize/
swfをキャッシュから読ませないように swfを呼び出すJavaScriptに 時間とか適当なGETつけて呼び出させる (***.swf?***=***　みたいなカンジ) とかでしょうかね
既存ソースに機能追加をされるという事で、多少なりともAction Scriptを理解されていることを前提に回答します。 作業としては (1) ボタンインスタンスを作成、配置する (2) 拡大表示されている画像Noが参照できる状態にする (3) (1)で作成、配置したボタンに対するアクション記述する (1) お好みのボタンを作成し、写真読込用「picMC」内にボタンを作成、配置する。 (2) ライブラリ内MC「thumb」のボタン「btn」アクション on (release)に _root.selectNum = txtNum.text; を追加。 (3) 次へボタンであればon (release)時に_root.selectNumをインクリメントし、_root.loadPic(_root.selectNum);を呼び出す。 戻るボタンであればデクリメントすれば良いでしょう。 インクリメント時、「_root.selectNum」が「_root.thumbTotal」を超えたら1へ戻してやり、 デクリメント時0になったら「_root.thumbTotal」にしてやれば、最初の画像と最後の画像が繋がります。 上記方法で、簡単ではありますが言われているような動作はできます。（確認済み） 頑張ってみてください。
> 普通の画像をそのまま使っても > 容量が変わらないのはなぜでしょうか？ 「普通の画像」の定義が，少なくとも私とはズレています。 Flash におけるネイティブな普通の画像とは 何と言ってもFlash自体で描いたベクタ画像です。 (JPEGなどビットマップ画像はよそ者の特殊画像です。歴史的に見てもこれらが使えるようになったのは遅いです。) 例えば「線ツールやバケツツールを使って描いた車の絵」が普通の画像です。 私の言う普通の画像は，描いただけではライブラリに入りません。 この車を10台コピペでステージ上に並べるよりも グラフィックシンボルなどのシンボルに変換して そのインスタンスを10個ステージに並べる方が容量が軽くなりますよということです。 JPEGはよそ者ですからFlash内に存在する時点ですでにライブラリに入っています。 ですからJPEGをグラフィックシンボルに変換しても それだけでは容量は減りません。 また「車の絵」をシンボル化しておけば ＃１ の方も書かれているように １台の車の色を赤から緑に変えると全て車の色も赤から緑に変わるので 編集が楽になると言えます(これは他シンボルでも同じですが)。 またそもそも JPEGにしても私の言う普通の画像にしても モーショントゥイーンはかけらません。 グラフィックまたはムービークリップまたはボタンシンボルに変換する必要があります。 ＃２の方も書かれていますが Flash のアニメーションというのは基本的にシンボルの入れ子で作って行きます。 簡単な例で言うと 「羽ばたくだけの鳥」アニメーションを入れたシンボルを作成して そのシンボルのインスタンスをステージ上で左から右にモーショントゥイーンをさせれば 「羽ばたきながら飛ぶ鳥」ができます。 もしシンボルを入れ子にせず「胴体だけ」「羽根だけ」を作成したなら 「羽ばたきながら飛ぶ鳥」を作成するのにものすごく大変なことになってしまいます。 この最初の「羽ばたくだけの鳥」をムービークリップで作成したとします。 ムービークリップは，その親タイムラインとは独立して動くので 仮に親タイムラインを stop() させると 「鳥が左から右に移動する」という動きは止まりますが 「鳥がはばたく」という動きは止まりません。 一方グラフィックインスタンス内のタイムラインは その親タイムラインと同期して動くので 仮に親タイムラインを stop() させると 「鳥が左から右に移動する」という動きが止まると同時に 「鳥がはばたく」という動きも止まります。 「時間よ止まれ！」的なアニメーションを作るのには グラフィックシンボルの入れ子が便利です。 上の場合はまだムービークリップ内も親と同じタイミングで stop() させれば良いわけですが さらに逆生成をさせる場合などはムービークリップのスクリプト管理では困難になってきます。 他のQ&A掲示板の回答用サンプルとして見かけたページです。 「逆再生鉢植え(ツーポイント アドバイス)」 http://suzupara.iinaa.net/mixi/potted_plant/ これまた，他のシンボルでも同じことが言えますが， 私はココ(教えて！goo や OKWave)などの回答添付用や 何かのときに簡易的にパッと使えるように モノトーンでボタン用画像などをたくさん用意しています。 グラフィックシンボルでそれらを作っておけば そのグラフィックインスタンスの「プロパティパネル」より「カラー」を変えるだけで 色んな色の画像ができます【添付図】↓ これをボタンの中に入れて使えば 簡単に色々な色ボタンが作成できますよね。 (現に下の画像を作成するのに３分くらいかかっただけです。) 非常に便利です。
Flash 内のことに jQuery つまり JavaScript が出てくる意味がわかりません。 そんなことは普通はできませんし，あえてすることでもありません。 (新幹線の中で車を走らせるようなものです。) ドコモ辺りがすることを，他社などが良く真似て，一時的に同じようなものが多くなるんですよ。 それだけのことです。 どうやって作るかなどは Flash 作成ソフトやそのバージョンやActionScriptのバージョンによって変わりますし この文字だけのQ&Aサイトでは説明できませんよ。 説明できませんが，論理は比較的簡単なことです。 他掲示板での説明サンプルで見かけたことがありますが たとえばこんなのの変形です。 「モスもどき」 http://suzupara.iinaa.net/mixi/mos/ (Flash CS4 以上用 / ActionScript 3.0 サンプルですね。)
ボタン.addEventListener(MouseEvent.CLICK,onClick) function onClick(e){ //ここにボタンを押した時の処理を書く } AS1のその特殊なイベント処理の書き方も AS2まであったイベントハンドラもなくなって AS3は全部イベントリスナになりました
とりあえず書かれていらっしゃるサイトのFlashは 横幅 100％ で HTML に貼り付けています。 書かれていらっしゃるサイトのFlashは次のように指定しています↓。 var so = new SWFObject('/asset/swf/top.swf', 'preloader', '100%', '385', '9', '#FFFFFF'); もちろんSWFObjectなどは使っても良いですし使わなくても良いです。 そんなことはどうでも良いことで とにかく width = 100% で貼り付けています。 そして Flash のムービー内の「拡大縮小なし」にしています。 ActionScript 2.0 の場合は メインのタイムラインの(_rootの)フレーム1の最初の行辺りにでも次のように書けば良いです。 Stage.scaleMode = "noScale"; ActionScript 3.0 の場合は メインのタイムラインの(MovieClip(root)の)フレーム1の最初の行辺りにでも次のように書けば良いです。 stage.scaleMode = StageScaleMode.NO_SCALE; それらに関係する色々な詳細について↓ ・ActionScript 2.0 の場合 「Flashゲーム講座＆ASサンプル集【Flash の画面表示について】」 http://hakuhin.jp/as/stage.html ・ActionScript 3.0 の場合 「FlashゲームPG講座 For AS3.0【Stage クラスについて】」 http://hakuhin.jp/as3/stage.html#STAGE_04 > 当方のFlashのスキルは、actionscript2.0を使ってサイト構築ができる程度です この文からでは， 結局 ActionScript 2.0 でしたいのか 3.0 でしたいのかわかりませんよ。 短い回答なので両方回答しましたが，たいていは回答できません。
Flashの任意のタイムライン(例：メインのタイムライン)に ムービークリップ 「mc」 と ComboBox 「my_cb」 とが すでに配置されているものとします。 それら 「mc」 と 「my_cb」 が存在するフレーム(フレーム1ならフレーム1)に書くスクリプト例です。 //----------------------------------- //ComboBox「my_cb」の初期表示を設定 my_cb.prompt = "あいさつの魔法。"; //ComboBox「my_cb」の表示ラベルとデータを設定 my_cb.addItem( { label: "こんにちワン", data:4 } ); my_cb.addItem( { label: "ありがとウサギ", data:3 } ); my_cb.addItem( { label: "こんばんワニ", data:2 } ); my_cb.addItem( { label: "さよなライオン", data:1 } ); //「my_cb」チェンジ時に 関数 changeFunc を実行 my_cb.addEventListener(Event.CHANGE, changeFunc); //関数 changeFunc の定義 function changeFunc(e:Event):void { //もし選択されたアイテムのdataが2であれば if(my_cb.selectedItem.data == 2){ //mc内の再生をフレーム2で停止 mc.gotoAndStop(2); } } //----------------------------------- もっとも上のスクリプトの場合， 関数 changeFunc 内には 必ずしも if文 が必要なわけではありませんよね。 仮にあらかじめ 「ComboBox の data には mc を停止させるフレーム数を入れる」 というルールを決めておいたとすれば次のようにもできます。 //関数 changeFunc の定義 function changeFunc(e:Event):void { //mc内の再生を選択アイテムのdataフレームで停止 mc.gotoAndStop(my_cb.selectedItem.data); } あと ComboBox などを始めとする UIコンポーネント は Flash に付属する オマケ 的な存在ですから 本にもあまり使い方は書かれていませんし ネットでもそういうものを一々解説してません。 (UIコンポーネント は Adobe の人が ActionScript を駆使して作ったムービークリップの一種です。) ですからUIコンポーネント系は，基本的に ヘルプを見て，簡単な実験を繰り返して，その仕様を理解するのが誰でもがする普通の使い方です。 わからないことがあれば一にも二にも「ヘルプ」です。 http://livedocs.adobe.com/flash/9.0_jp/ActionScr … http://help.adobe.com/ja_JP/FlashPlatform/refere …
ムービークリップが停止しているか再生しているかというプロパティは存在しないようです。 しかし、そのようなものは無くても普通は困らないわけで、 グローバルな場所(例：MovieClip(root) や MovieClip(stage) )などに 適当な変数でも作って(例：mc_play_flag)、 再生や停止させる度にその変数の値を true や false にすれば良いだけです。 ※ムービークリップの再生状態は 　必ずActionScriptで変化させるはずです。 　ActionScriptで変化させるのでしたら 　それを把握できないのはおかしいです。 　(勝手に 再生状態 が変化するのであれば 　把握できなくても当然だと思いますが。) ＝*＝ ＝*＝ ＝*＝ 以上のような当たり前の普通な方法ではなくて、 「真に再生/停止状態を取得する方法を知りたい」 というご質問でしたら次のようにすればできます。 //----------------------------------------- //mcの再生状態を取得する関数getMCStateの定義 function getMCState(e:Event = null):void { //この関数が実行された時点でのmcの再生フレームを取得 var mc_flame:int = mc.currentFrame; //毎フレーム時間 以下のfunctionを実行 addEventListener(Event.ENTER_FRAME, function():void{ //もし上で取得したmcの再生フレームと //現在のmcの再生フレームが同じフレームであれば if(mc_flame == mc.currentFrame){ //関数aaaを実行 aaa(); //もし上で取得したmcの再生フレームと //現在のmcの再生フレームが違うフレームであれば }else{ //関数bbbを実行 bbb(); } //毎フレーム時間 このfunctionを実行するのをやめる removeEventListener(Event.ENTER_FRAME, arguments.callee); } ); } //関数aaaの定義 (例) function aaa():void{ trace("mcは停止してます"); } //関数bbbの定義 (例) function bbb():void{ trace("mcは再生してます"); } //----------------------------------------- ＝*＝ ＝*＝ ＝*＝ ...と、書いてはみましたが こんなことを毎回(同様にある あらゆるたくさんの場合について毎回)考えるより 最初に書いたように 適当な変数を用意してその値を見る方が良いですよ。 ActionScript 1.0 なのでそれ自体は参考になりませんが 「同様にある あらゆるたくさんの場合」の一例として 考え方自体は参考になると思います↓。 「if文 ＆ else if 文」 http://suzupara.iinaa.net/kiso051.html 　
要するにクリックしたら別ページに飛ぶようにしたいだけですか？ ボタン.addEventListener(MouseEvent.CLICK,onClick) function onClick(e){ navigateToURL(new URLRequest("行き先のURL") }
Timerクラスを使うなら import flash.utils.Timer; import flash.events.TimerEvent; var tmr:Timer=new Timer(40,3000/40) tmr.addEventListener(TimerEvent.TIMER,onTime) function onTime(e){ ugoki1() } setTimeOutを使うなら addEventListener(Event.ENTER_FRAME,frameTick) setTimeout(3000,function(){removeEventListener(Event.ENTER_FRAME,frameTick)}) function frameTick(){ ugoki1() } ただ気になるのはugoki1がmcを再生してるって 具体的になにしてんのかってこと gotoAndPlay()で動的に行き先フレームを 決めてるとかならわかるんですが もしugoki1がmc.play()してるだけで mcを三秒後に停止したいってだけなら setTimeoutでmcを3秒後に停止すればいいだけで ugoki1を何度も実行する必要はないかと
フレーム１～３を１秒ずつ再生すればいいんですよね？ 仮にそのムービーをmcとして for(var i=1;i<=3;i++){ setTimeout(function(n){return function(){mc.gotoAndStop(n)}}(i),1000*i) }
http://wonderfl.net/c/3lDU の作者です。（｀・ω・´）キリッ この作品に限らず、wonderfl で用いられてるような1ファイル内に複数クラスを定義するやり方は、CS4を用いた場合、エラーを吐いてしまうことがあります。 #どのような場合にエラーを吐く吐かないの条件説明については、割愛します。 エラーを発生させない方法としては、Mainクラス内にクラスを定義するのではなく、外部クラス化して、別ファイルにすることです。 http://www.project-nya.jp/modules/weblog/details … にも、そのように示しています。
どうしたら良いかと問われましても ActionScript のバージョンを明記されないと 場合によっては１文字たりとも回答できませんよ。 勝手に ActionScript 3.0 を使うという条件で 方法の一例を回答します。 　 まず横長の外部画像は「gazou.jpg」というファイル名で Flash の SWF ファイルやそれを貼り付ける HTMLファイル と同じフォルダ内に置くものとします。 　任意のフォルダ 　　　├○○.fla (○○.swf １を作る) 　　　├○○.swf 　　　├○○.html (○○.swf を貼り付ける) 　　　└gazou.jpg (外部画像) また，ステージ上のフレーム1には， 「＜」のボタン，「□」のボタン，「＞」のボタンの３つが用意されていて 「＜」 ボタンには「L_btn」(Lは左の意味)， 「□」のボタンには「S_btn」(Sは Stop の意味)， 「＞」のボタンには「R_btn」(Rは右の意味) というインスタンス名が それぞれのボタンに付けてあるものとします。 (インスタンス名は各ボタンを１つずつ選択した状態で，プロパティパネルより命名する。) それら３つのボタンとは別に ActionScript を書く用にするレイヤーを挿入し フレーム1 のキーフレームに 次のスクリプトをコピペします。 /////////////////////////////////////////////// //外部画像ファイルへのパスを設定 var url:URLRequest = new URLRequest("gazou.jpg"); //外部画像を動かすスピードを設定 var spd:Number = 7.5; //外部画像を配置するy座標を設定 var y_pos:Number = 20; //外部画像の左端が来る限界位置を設定 var L_lim:Number = 0; //外部画像の右端が来る限界位置を設定 var R_lim:Number = stage.stageWidth; //---↑以上が適当に変更する設定↑--- //Loaderインスタンスを作成＆配置 var ld:Loader = new Loader(); ld.x = L_lim; ld.y = y_pos; addChild(ld); //外部画像の横幅を入れる変数の宣言 var gazou_w:Number; //Loaderを動かすpx数を入れる変数の宣言 var move_px:Number; //外部画像にアクセス可能になった時に関数onLoadINITを実行 ld.contentLoaderInfo.addEventListener(Event.INIT,onLoadINIT); function onLoadINIT(e:Event):void { //外部画像の横幅を記録 gazou_w = e.target.width; //L_btnクリック時に関数 onLClick を実行 L_btn.addEventListener(MouseEvent.CLICK,onLClick); //S_btnクリック時に関数 onSClick を実行 S_btn.addEventListener(MouseEvent.CLICK,onSClick); //R_btnクリック時に関数 onRClick を実行 R_btn.addEventListener(MouseEvent.CLICK,onRClick); } //Loaderに外部画像をロード ld.load(url); //L_btnクリック時に実行する関数 onLClick を定義 function onLClick(e:MouseEvent):void { //Loaderを動かすpx数を spd にする move_px = spd; //１フレーム時間ごとに毎回 関数 moveLoader を実行 addEventListener(Event.ENTER_FRAME,moveLoader); } //S_btnクリック時に実行する関数 onSClick を定義 function onSClick(e:MouseEvent):void { //１フレーム時間ごとに毎回 関数 moveLoader を実行するのをやめる removeEventListener(Event.ENTER_FRAME,moveLoader); } //R_btnクリック時に実行する関数 onRClick を定義 function onRClick(e:MouseEvent):void { //Loaderを動かすpx数を -spd にする move_px = - spd; //１フレーム時間ごとに毎回 関数 moveLoader を実行 addEventListener(Event.ENTER_FRAME,moveLoader); } //関数 moveLoader を定義 function moveLoader(e:Event):void { //Loaderのx座標を move_px 動かす ld.x += move_px; //Loaderの左端x座標が限界を超えたら if (ld.x>L_lim) { //Loaderの左端x座標を左の限界にする ld.x=L_lim; //１フレーム時間ごとに毎回 関数 moveLoader を実行するのをやめる removeEventListener(Event.ENTER_FRAME,moveLoader); //Loaderの右端x座標が限界を下まわっていたら } else if (ld.x < - gazou_w+R_lim) { //Loaderの右端x座標を右の限界にする ld.x=- gazou_w+R_lim; //１フレーム時間ごとに毎回 関数 moveLoader を実行するのをやめる removeEventListener(Event.ENTER_FRAME,moveLoader); } } /////////////////////////////////////////////// パブリッシュ または 「制御」→「ムービープレビュー」で動作確認できると思います。 //外部画像ファイルへのパスを設定 var url:URLRequest = new URLRequest("gazou.jpg"); これ↑で設定する外部画像のパスは ○○.html (○○.swf を貼り付ける) から見たパスです。 ○○.swf から見たパスではないので階層を変える場合は注意してください。 ◎例 　任意のフォルダ 　　　├○○.html (○○.swf を貼り付ける) 　　　└files(フォルダ) 　　　　　├○○.fla (○○.swf １を作る) 　　　　　├○○.swf 　　　　　└gazou.jpg (外部画像) この場合は var url:URLRequest = new URLRequest("files/gazou.jpg"); になります。 　 ＝*＝*＝ ＝*＝*＝ ＝*＝*＝ > 1フレームでストップして、ボタンで2フレームに移動して > トゥイーンで動かしたら良い。 その路線で単純に行くとすれば左右どちらかにしか進めませんよね。 左右どちらにでも動かす場合は フレームを逆再生させる必要が出てきます。 逆再生させるのでしたら次のページが参考になると思います。 (ただし次のページは ActionScript 3.0 ではありません。ActionScript 1.0 です。) 「ロールアウトで逆戻りするアニメーション」 http://fumiononaka.com/TechNotes/Flash/FN0303003 … また，外部画像ですから編集中は見えないので， トゥイーンで動かすにしても結構頭を使うと思います。 　
このページをみると、flash も、ただの TCP ソケットみたいだから、 http://livedocs.adobe.com/flash/9.0_jp/ActionScr … tcpdump http://linuxjm.sourceforge.jp/html/tcpdump/man1/ … とか、 Windows なら、WinPcap かな？ http://www.winpcap.org/ がつかえるはずだよ。 でも、ふつうの TCP ソケットなら、ほかの 通信と区別がつかないから、flash を実行している PC で、どのプログラムでの TCP 通信かをしらべないと、わからないとおもう。
こうします。 function machiClick(e:MouseEvent):void { var i:int=e.target._id; imgPhoArr[i].visible = true; } つまり「e.target」がイベントの発生したオブジェクトになります。
以下のようにやればそれなりのものが出来ます。 １個のオブジェクト(obj0)内に アイコン(objI)と表示したいプルダウンメニュー(objM)を配置します。 （私はFlexでAction Script3.0を行っているのでこのあたりの説明が出来ません） //プルダウンメニューを非表示 objM.visible=false; //マウスオーバー・アウトのイベント obj0.addEventListener(MouseEvent.MOUSE_OVER,myOver); obj0.addEventListener(MouseEvent.MOUSE_OUT,myOut); //イベント関数 private function myOver(e:MouseEvent):void { objM.visible=true; } private function myOut(e:MouseEvent):void { objM.visible=false; }
こんな形でなら動くと思います。 Var ｙ: Array=new Array(2); ｙ[0]= □□; ｙ[1]= ■■; if(x[ｉ]>=5){ y[ｉ].text="A" }else if(x<5){ y[ｉ].text="B" } ---------------- 変数にセットする時String、Numberはその値がコピーされます。 つまり元のものとは独立した存在になります。 □□（テキストフィールド？）はアドレス（？）の値がコピーされます つまり元のもの同じものとして扱えます。 （この説明はたぶん不完全なので雰囲気を感じ取ってください）
#2です 線はaとdをアンカーポイント bとcをコントロールポイントにした ベジェ曲線なので それらのx座標を調整すれば長さは変えれます 幅を1000にしたいなら a=new Point(0,100) b=new Point(200,100) c=new Point(350,100) d=new Point(550,100) ↓ a=new Point(0,100) b=new Point(300,100) c=new Point(700,100) d=new Point(1000,100) というかんじです 本来はここは簡単に変えれるようにしとくべきだけど まあ波打つ線のグラフィクのやり方みせる為だけのサンプルで 使い回す事もないだろうってことで面倒なので数値固定にしてました レンダリングの限界ということでいうなら 長さ2万ピクセル越えの線とか描いたり 画面の１０倍近い大きさのMCに フィルタ効果かけたりしない限り大丈夫です
質問の映像は、映像編集ソフト（おそらくはAfterEffects）で作成されたもので、時間構わず、あくまで「映像」としてレンダリングされたものです。 プレゼンテーションソフトである、KeynoteやPowerPoiontに比べればマシですが、Flashは基本的に、リアルタイム・アニメーションを行うためのソフトであり、映像で書出さない限り、このような動きを再生することはできません。そして、映像制作ならば、もっと強力なAfterEffectsがあります。 プレゼンのために、コストをかけてわざわざ映像を作成するか否かは、その重要度次第なので、いちがいには言えませんが、この映像品質がFlashで不可能なことに気づかないうちは、Flashプレゼンなどに浮気しないほうがいいと思います。 苦労してアニメーション作っても「この動きじゃあ」、ということですかね。
ASで0,0以外を中心に回転させたいときは MatrixTransformer使います var mtx:Matrix=ムービークリップ.transform.matrix fl.motion.MatrixTransformer.rotateAroundExternalPoint(mtx, x, y, 角度) ムービークリップ.transform.matrix=mtx みたいなカンジです
当方も初心者なのであまり詳しくはないのですが、「エスケープシーケンス as3」で検索したら以下のようなページが出てきました(ページ下の方に\マークに関する記述があります)。 http://oshige.com/flash/as3note/2007/05/22.html "\u00A5" + 1000; もしくは String.fromCharCode(0x00A5) + 1000; でやってみたところ当方の環境ではいずれも出来ました。 as3以外でも出来るかは分かりません。 参考URL：http://oshige.com/flash/as3note/2007/05/22.html
＃１です。 ＃１の投稿後、不具合が起こる可能性を思い立って実験してみたのですが 「mc」にロールオーバー時に「comment1」はマウスと重なって表示される状態になることはあるのでしょうか？ 　↓ステージを見たときの図 　□□□□□□□□□□□□□□□□ 　□□■■■■■■■■□□□□□□ 　□□■△■■■■■■□□□□□□ 　□□■■■■■■■■□□□□□□ 　□□■■■■■■■■□□□□□□ 　□□□□□□□□□□□□□□□□ 　□□□□□□□□□□□□□□□□ 　□□□□□□□□□□□□□□□□ 　□□＝「mc」 　■■＝「comment1」 　 △ ＝マウス このような表示状態になる場合， 「comment1」がマウスに反応してしまって 出た「comment1」が消えてしまうとか点滅表示すると思います。 もしそうであれば ＃１で書いたスクリプトの２行目辺りにでも MovieClip(root).comment1.mouseEnabled = false; または comment1.mouseEnabled = false; を追加してください。 ActionScript 3.0 では ボタン動作を定義していないムービークリップもマウスに反応するので， それを阻止しなければならない場合がたまにあります。
tellTarget(○○){} というのはくせ者で その {} 内の変数などは全て ○○ 階層のものを指すのです。 ですから tellTarget("/qt"){gotoAndPlay("q" add m1);} などとすると この m1 は /qt:m1 (_root 内の qt 内の変数 m1) になるんです。 ですから tellTarget("/qt"){gotoAndPlay("q" add /:m1);} のような感じにする必要があります。
イベントリスナの関数はremoveEventListenerしても実は生きていて その関数が参照してるものもそれに応じて実は生き続けてる だからremoveEventListenerしたときに リスナー関数がガーベージコレクションに入るように addEventListenerするときに第5引数useWeakReferenceをtrueにしておく addEventListener(イベントタイプ,関数,false,0,true) これでどうでしょうかね
＃１です。 > 1,3,4,6フレームに同じインスタンス名でインスタンスが存在した場合、 > そのインスタンスは2,5フレーム(あるいはその直前)で消滅し、 > 1,3,6フレーム目で生成されるのか、 その通り(その前者の通り)です。 > レイヤーに依存しないように深度を変えるというのは > どうすればいいのでしょうか？ 以下に書くことは１つの方法例です。 新規ドキュメントを作成します。 フレーム1 とか 2 とかだと観察がしにくいので メインタイムラインのフレーム数を全部で 20フレーム にします。 その フレーム10 辺りでも選択してキーフレームに変換し そのキーフレームのステージ上に適当なムービークリップを作成し 例えば「my_mc」というインスタンス名を付けます。 ※参考【図】↓ この状態のまま「制御」→「ムービープレビュー」をすると 当然のことですが「my_mc」は出たり消えたりを繰り返します。 「my_mc」はレイヤーに乗っている(依存している)からです。 次にActionScriptを書く用に新規レイヤーを追加し 「my_mc」を配置したフレーム(フレーム10)をキーフレームに変換し そのキーフレームに次のようなスクリプトを書きます。 --------------------------------------------- //ムービークリップ「new_mc」を作成 var new_mc:MovieClip = new MovieClip(); //この階層(root)に「new_mc」を配置 this.addChild(new_mc); //この階層の「my_mc」と「new_mc」の表示順を入れ替える this.swapChildren(my_mc,new_mc); --------------------------------------------- そして「制御」→「ムービープレビュー」をすると 今度は「my_mc」は出たままになると思います。 新しく作成した「new_mc」はレイヤーに依存していません。 その「new_mc」と「my_mc」との表示順を入れ替えるので 「my_mc」はレイヤーからはずされてしまうということになります。 こうなると，フレーム1 に戻ったときにも「my_mc」は存在し続けるということになります。
Flash CS4 Proの書き出しについて、Adobeでは「Flash では、Adobe Illustrator 88、3、5、および 6 の形式の書き出しをサポートしています。」とユーザーガイドに記載されていますし、書き出しの際にIllustratorのバージョンを選択する際に、多分6でされていると思います。 ご存知だと思いますが、Illustrator 11がCSに当たりますので、CS4はバージョン１４になります。 上手く表示できたらラッキー！ぐらいに思われたらどうでしょうか。 私はＣＳ３で検証しましたが、当然質問者様と同じ現象になりました。 ＡＩ形式でないといけない理由が質問者様にはあるのでしょうか？　ＥＰＳ形式ではだめなのですか？ＥＰＳならそのような現象もなくIllustratorで使えますよ。
ActionScript 2.0 → 3.0 変換といよりも ActionScript 1.0(一番初期) → 3.0 変換ですね。。。 ムービークリップ「mc」が存在する任意のタイムラインの， 任意の "フレーム(キーフレーム)" に書くスクリプト例です↓。 //============================ var pointX:Number=10; var pointY:Number=20; stage.addEventListener(MouseEvent.MOUSE_MOVE,mouseMoveFunc); function mouseMoveFunc(e:MouseEvent):void { MovieClip(root).mc.x=stage.mouseX+pointX; MovieClip(root).mc.y=stage.mouseY+pointY; } //============================
> object1(グラフィック)を配置 ここがよくわかりません。 「object1」とは何でしょうか？ インスタンス名ですか？ 変数名ですか？ また「グラフィック」とは何でしょうか？ 普通に解釈するなら「グラフィックシンボルに変換したステージ上のグラフィックインスタンス」となりますが その意味のグラフィックならインスタンス名は付けられないと思います。 また普通，ActionScriptで直接グラフィックインスタンスの操作をすることははできません。 上記の「グラフィック」という意味のものではなく ActionScriptで作成した何某かのグラフィックでしたら そのグラフィックを生成したスクリプトなどを書いてもらわないとグラフィックの指す物が何かわかりません。 もし上記の「グラフィック」という意味のものでしたら まずグラフィックインスタンスを用意するのはやめるべきです。 グラフィックインスタンスではなく，インスタンス名を付けることができて ActionScriptで直接操作できるムービークリップ(またはボタン)を用意すべきです。 シーン１(root)にインスタンス名mcopというムービークリップを手動で配置し そのmcopの中にインスタンス名mcというムービークリップを手動で配置し そのmcの中にインスタンス名object1というムービークリップを手動で配置したとします。 ※「手動で」というのは「ActionScriptではなく」という意味です。 　root 　　└mcop(ムービークリップ) 　　　　└mc(ムービークリップ) 　　　　　└object1(ムービークリップ) そして ムービークリップmc 内のフレームにスクリプトを書いて ムービークリップobject1 を非表示にするとします。 その場合は次のようなスクリプトになります。 MovieClip(root).mcop.mc.object1.visible = false; 上記のは root を基準とした絶対パスでの書き方です。 相対パスで書くと次のようにもっと単純になります。 object1.visible = false; または this.object1.visible = false; 「1.5 rootとstage (ActionScript3.0入門ノート)」 http://oshige.com/flash/as3note/2007/04/14_roots …
＃１です。 すみません一部訂正というか，１行書き忘れです。 関数 finishSpeedUp 内の最後に //「stage」上でマウスアップ時に 関数 ｆｉｎｉｓｈSpeedUp を実行するのをやめる stage.removeEventListener(MouseEvent.MOUSE_UP,finishSpeedUp); を入れるのを忘れていました。 スクリプトの書き始めでは(構想段階では) 上の１行を入れるつもりだったのですが 実際にコードを書いているうちに入れることをすっかり忘れ去っていました。 訂正はそこだけですが 再びスクリプトの全文を書いておきます。 //------------------------------------------------ //「speed_up_btn」押下時に 関数 speedUp を実行 speed_up_btn.addEventListener(MouseEvent.MOUSE_DOWN,speedUp); //関数 speedUp の定義 function speedUp(evt:MouseEvent):void { //１フレーム進む時間毎に 関数 playHighSpeed を実行 mc.addEventListener(Event.ENTER_FRAME,playHighSpeed); //「stage」上でマウスアップ時に 関数 ｆｉｎｉｓｈSpeedUp を実行 stage.addEventListener(MouseEvent.MOUSE_UP,finishSpeedUp); } //関数 playHighSpeed の定義 function playHighSpeed(evt:Event):void { //「mc」の再生フレームが最終フレームでなければ if (evt.target.currentFrame!=evt.target.totalFrames) { //「mc」の再生フレームを2フレーム先に進めて停止 evt.target.gotoAndStop(evt.target.currentFrame + 2); } else { //それ以外は「mc」の再生フレームをフレーム2に戻して停止 evt.target.gotoAndStop(2); } } //関数 finishSpeedUp の定義 function finishSpeedUp(evt:MouseEvent):void { //１フレーム進む時間毎に 関数 playHighSpeed を実行するのをやめる mc.removeEventListener(Event.ENTER_FRAME,playHighSpeed); //「mc」を普通に再生させる mc.play(); //「stage」上でマウスアップ時に 関数 ｆｉｎｉｓｈSpeedUp を実行するのをやめる stage.removeEventListener(MouseEvent.MOUSE_UP,finishSpeedUp); } //------------------------------------------------ 　
> アクションスクリプトにどのように書き込めばよいのでしょうか。 > ｃｓ５にはコードスニペットというのができて > これを使えば簡単かと思ったのですができません。 具体的な「何をどうするのか」という方針(ストーリー)がなければコードも何もないと思います。 (人間が考えた方針(ストーリー)をソフト上で実行させるのがコードです。) > 小のボタンを、ステージ上でクリックしたら大の写真が出てくるようにしたい この「大の写真を出す方法」など， 細かなバリエーションも合わせると無数にあります。 例えば 「大の写真をステージ外のとんでもない場所(x=10000000とか)に配置しておいて，ボタンクリックでステージ表示内に移動させる。」 という方針もありますし 「大の写真を透明にしておいて，ボタンクリックで不透明にする。」 という方針もありますし 「大の写真を非表示(visible=false)にしておいて，ボタンクリックで表示(visible=true)する。」 という方針もありますし 「ボタンクリックで大の写真のシンボルをライブラリからステージ上に出す。」 という方針もありますし 「ボタンクリックで大の写真のJPEGファイルを外部からロードして表示する。」 という方針もありますし 　…　etc.　etc. … ただ， 大の写真をライブラリから呼び出したり， 大の写真のJPEGファイルを外部からロードする場合， 大の写真を出したは良いけど，深度(表示順序の上下関係)はどうするの？ とか 大の写真を出したは良いけど，引っ込めるのはどうするの？ などという問題も発生する可能性も出てきます。 ですから "私は勝手に" ， 「大の写真を非表示(visible=false)にしておいて，ボタンクリックで表示(visible=true)する。」 という方針で行くのが良いのではないかと思います(あくまでも私が思うだけ)。 以下では， その「私の勝手な方針(ストーリー)」を実現する方法を書きます。 ActionScript 3.0 設定 のドキュメントを作成してあるものとします。 そのドキュメントのステージ上の，小の写真ボタンを選択した状態で「プロパティ」パネルを表示させ， そのボタンにインスタンス名を付けます。 ここでは「small_btn」というインスタンス名を付けることにします。 またステージ上の大の写真を選択してムービークリップに変換し， このムービークリップにもインスタンス名を付けます。 ここでは「big_mc」というインスタンス名を付けることにします。 その「small_btn」や「big_mc」があるレイヤーとは別に ActionScript を書くためのレイヤーを作成し そのレイヤーの「small_btn」や「big_mc」が存在するフレーム上のキーフレームに 次のようなスクリプトを書きます。 //----------------------------------------------- //「big_mc」を非表示にする big_mc.visible=false; //「small_btn」をクリックしたとき 関数appearBigMC を実行 small_btn.addEventListener(MouseEvent.CLICK,appearBigMC); //関数appearBigMC の定義 function appearBigMC(evt:MouseEvent):void { //「big_mc」を表示する big_mc.visible=true; } //----------------------------------------------- これで，ムービープレビュー や パブリッシュ してもらうと結果が見えると思います。 人間側に何の方針もなく，PCに向かって「方針も考えろ」というのは酷ですよね。 また逆に， 人間側には方針があるのに，PCが勝手に考えた方針で進んで行くのも困りものですよね。 どっちにしても コードスニペットですべての事が運ばれていくのはおかしい(無理または困る)と思います。
papervision3DをFLEX４-SDKで使用していますが特にパージョンを意識したことはありません。 参考のサイトは（私のブックマークに登録されているところです） PV3D の立体が試せる Primitive Generator 　http://clockmaker.jp/labs/090419_primitive_gener … 　http://troi.kbc-ehime.ac.jp/kj/?p=516 Papervision3Dいろいろ その1 　http://sakef.jp/blog/2010/10/pv3d_samples_01/ Papervision3D で円形とかリングとか表示してみる 　http://www.nilab.info/zurazure2/000678.html Papervision3DTM 2.1 日本語 リファレンスガイド 　http://papervision3d-jp.googlecode.com/svn/trunk … あとpapervision3Dだけでないですがここも参考になると思います 　http://wonderfl.net/ 　　私の作品も入れてあります（http://wonderfl.net/user/hi.kurosawa）
if文 の条件の書き方とかいう問題ではなくて もっと根本的なことで if文 が実行されるタイミングの問題ではないでしょうか？ 書かれていらっしゃる内容だと ルートの3フレーム が表示されたとたんに if文 が実行されます。 そうではないのでは？ if文 が実行されるのは 少なくとも指定秒に達した後でなければなりませんよね？ 例えば テキスト入力変数lmt に 5 と入れた場合は， 少なくとも 5 秒たってから if文 が実行される必要があるでしょう？ そしたらそのようになるようにしなければ...。 ムービークリップ「c_mc」の中はどうなっているのかわかりませんが， 例えば「c_mc」内の 10フレーム に /:cnt++; などと書いてルートの変数cntの値を1ずつ加算していたとします。 そうでしたら その後に if文 を入れるべきでしょう。 例↓ --------------------------------- /:cnt++; if (Number(/:lmt) == /:cnt) { tellTarget ("/") { gotoAndPlay("tokutei"); } } --------------------------------- ※Number(/:lmt) の部分は /:lmt だけでも良いと思いますが 　テキストフィールドの入力値は 　基本的に文字列として扱われてしまうことが多いので 　念のため Number() で数値化しています。 ムービーの構造全体が把握できていないため これで良いかどうかはわかりませんが 路線としてはこのような感じにすべきだと思います。
もうすでに自力で解決されていらっしゃるとは思いますが念のため。。。 このご質問の後にされている質問 「ムービークリップを１コマ飛しで再生」 (OKWave系の代表3サイト) http://oshiete.goo.ne.jp/qa/6787543.html or http://oshiete.goo.ne.jp/qa/6787543.html or http://oshiete1.nifty.com/qa6787543.html などなどなど... ここ↑で書かれていらっしゃる内容(仕様)に従うこととしてよろしいでしょうか？ その場合，次のような感じになると思います。 ステージ上に用意するインスタンスは次の５つであるとします。 「mc」：再生/逆再生などをさせるムービークリップ 「back2_btn」：mc内を高速逆再生させるボタン 「back1_btn」：mc内を逆再生させるボタン 「stop_btn」：mc内の再生を止めるボタン 「next1_btn」：mc内を普通に再生させるボタン 「next2_btn」：mc内を高速再生させるボタン これらが存在するフレームに書くスクリプト例です。 //================================== //早送り時のスピードを設定 (★可変) var high_spd:int = 3; //特殊再生時のスピードの変数の宣言 var spd:int; //---↓back2_btn↓------ //「back2_btn」押下時に 関数onBack2Press を実行 back2_btn.addEventListener(MouseEvent.MOUSE_DOWN,onBack2Press); //関数onBack2Press の定義 function onBack2Press(e:MouseEvent):void { //特殊再生時のスピードを -high_spd にする spd = - high_spd; //共通で使用する関数 commonFunc を実行 commonFunc(); } //---↓back1_btn↓------ //「back1_btn」押下時に 関数onBack1Press を実行 back1_btn.addEventListener(MouseEvent.MOUSE_DOWN,onBack1Press); //関数onBack1Press の定義 function onBack1Press(e:MouseEvent):void { //特殊再生時のスピードを -1 にする spd = -1; //共通で使用する関数 commonFunc を実行 commonFunc(); } //---↓stop_btn↓------ //「stop_btn」押下時に 関数onStopPress を実行 stop_btn.addEventListener(MouseEvent.MOUSE_DOWN,onStopPress); //関数onStopPress の定義 function onStopPress(e:MouseEvent):void { mc.stop(); } //---↓next1_btn↓------ //「next1_btn」押下時に 関数onNext1Press を実行 next1_btn.addEventListener(MouseEvent.MOUSE_DOWN,onNext1Press); //関数onNext1Press の定義 function onNext1Press(e:MouseEvent):void { mc.play(); } //---↓next2_btn↓------ //「next2_btn」押下時に 関数onNext2Press を実行 next2_btn.addEventListener(MouseEvent.MOUSE_DOWN,onNext2Press); //関数onNext2Press の定義 function onNext2Press(e:MouseEvent):void { //特殊再生時のスピードを high_spd にする spd = high_spd; //共通で使用する関数 commonFunc を実行 commonFunc(); } //---↓特殊再生用の関数群↓------ //共通で使用する関数 commonFunc の定義 function commonFunc():void { //毎フレーム 関数specialPlay を実行 mc.addEventListener(Event.ENTER_FRAME,specialPlay); //stageからマウスアップ時に 関数onStageUp を実行 stage.addEventListener(MouseEvent.MOUSE_UP,onStageUp); } //関数specialPlay の定義 function specialPlay(e:Event):void { //spdが正の数で mc内のフレームが最終フレームに達したとき if (spd >= 0 && mc.currentFrame == mc.totalFrames) { //mc内フレームをフレーム1に戻す mc.gotoAndStop(1); //spdが負の数で mc内のフレームがフレーム1に達したとき } else if (spd < 0 && mc.currentFrame == 1) { //mc内フレームを最終フレームに進める mc.gotoAndStop(mc.totalFrames); } //mc内のフレームを spdフレーム 進めて停止 mc.gotoAndStop(mc.currentFrame + spd); } //関数onStageUp の定義 function onStageUp(e:MouseEvent):void { //毎フレーム 関数specialPlay を実行するのをやめる mc.removeEventListener(Event.ENTER_FRAME,specialPlay); //stageからマウスアップ時に 関数onStageUp を実行するのをやめる stage.removeEventListener(MouseEvent.MOUSE_UP,onStageUp); //「mc」内タイムラインの再生を開始 (★要る？) mc.play(); } //================================== 特殊再生である 「高速逆再生」と「逆再生」と「高速再生」は結局どれも同じことをさせています。 メインは関数 specialPlay(エッチなプレーや変態プレーではありません) です。 同じことをさせるのですが， それぞれのボタンによって 関数specialPlay を実行させるときの変数spd(スピード)の値を変えています。 この spd の値だけが違う部分です。 こうしておけば，ほとんど同じ関数を何度も定義する必要がなくなりますよね。
普通に this["sub_base"+i]=new SubTitleBase(); mainBoard_mc.addChild(this["sub_base"+i]); this["sub_base"+i].gotoAndStop(1); ではうまく行かないのでしょうか？ this["sub_base"+i] とは このタイムラインに置いた sub_base0 や sub_base1 など… という変数ですよ。 その sub_base0 や sub_base1 など… という変数に new な SubTitleBase インスタンスの参照を入れるということです。 「F-site [AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html ↑じっくり読んで良く理解しないとわからないと思いますが。。。 というか ActionScript 3.0 になって Flash を始めた方には 何の抵抗も錯覚もないと思いますが それ以前に(ActionScript 2.0 以前に) Flash をしていると その経験や知識が逆に足をひっぱることになって混乱するのかもしれません。
ご提示のスクリプトですと、「停止」ボタン操作で停止した場合は、StopClick 関数内で「変数 soundCh の値を null にする」処理が行われます。 ですから、その後で再度「再生」ボタンをクリックすると、PlayClick 関数内の if 文の条件である「 soundCh の値が null の時」が成立して、サウンドが再生されます。 しかし、曲の最後に達して再生が終了した場合は、soundCh には再生に使用されたチャンネルを操作するための情報が入っています。 この状態で「再生」ボタンをクリックしても、soundCh の値が null ではないために PlayClick 関数内の if 文の条件が成立せず、再生されないのですが、「停止」ボタンをクリックすると soundCh が null に書き換えられて再生できるようになる、というわけです。 最後まで再生された後も再生できるようにするには、曲の最後に達した時にも soundCh の値を null に戻す処理が必要です。 曲の最後に達したかどうかは、SOUND_COMPLETE というイベントを使って検出できます。 soundCh の値を操作して再生中かどうかを判断することも可能ではあるのですが、稼働しているオブジェクトの参照を持っている soundCh の値を null に書き換えてしまうのは、少々乱暴だと思います。 代わりに、再生中かどうかの情報を持つ変数を作り、こちらで判断してはいかがでしょう。 次のように考えます。 再生しているかどうかの情報を管理する変数を１つ、用意します。ここでは仮に、play_flg という名前だとします。 この変数の値を、再生している時 true 、それ以外の時は false と決めます。今回は扱いたい情報が２種類しかないので、Boolean というデータ型にします。 「再生」ボタンがクリックされた時は、この変数の値を見て、false の時だけ再生します。 再生した場合は、再生中の印として true を入れます。すると、再生中に連続してクリックされても再生の条件が不成立になり、重複再生を防ぐことができます。 「停止」ボタンをクリックした時と曲の最後に達した時は、false に書き換えます。 スクリプトの一例です。 ライブラリにリンケージでクラス名”BGM”を設定したサウンドシンボル、ステージにインスタンス名”play_btn”と”stop_btn”と付けたインスタンスがあるものとします。 （↓　各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） //＊＊＊ 　import flash.media.*; 　//再生状況を保持するフラグ 　//再生時true、それ以外はfalse 　var play_flg:Boolean = false; 　//チャンネルとSoundオブジェクトの作成 　var soundCh:SoundChannel; 　var snd:BGM = new BGM(); 　//「再生」ボタンによる再生処理 　function PlayClick( evt:MouseEvent ):void 　{ 　　//停止している場合のみ、再生する 　　if( play_flg == false ) 　　{ 　　　//サウンドを再生 　　　soundCh = snd.play( 0 , 1 ); 　　　//再生が終了した時のイベント処理を登録 　　　soundCh.addEventListener( Event.SOUND_COMPLETE , PlayEnd ); 　　　//再生中であることを記録する 　　　play_flg = true; 　　} 　} 　//「停止」ボタンによる停止処理 　function StopClick( evt:MouseEvent ):void 　{ 　　//再生中であれば停止する 　　if( play_flg == true ) 　　{ 　　　//サウンドを停止 　　　soundCh.stop(); 　　　//再生終了時のイベント処理を削除しておく 　　　soundCh.removeEventListener( Event.SOUND_COMPLETE , PlayEnd ); 　　　//停止したことを記録する 　　　play_flg = false; 　　} 　} 　//再生が終了した時の処理 　function PlayEnd( evt:Event ):void 　{ 　　//フラグをリセット 　　play_flg = false; 　} 　//各ボタンのイベント処理を登録 　play_btn.addEventListener( MouseEvent.CLICK , PlayClick ); 　stop_btn.addEventListener( MouseEvent.CLICK , StopClick ); //＊＊＊
そもそも書かれていらっしゃるサイトのスライドショーは Suzuka とも Flash とも関係なくて JavaScript の jQuery を使用したものですがそこのところはよろしいのでしょうか？？？ 【jQuery を使用参考サイト例】 「画像をフェードインさせるスライドショーを作ってみた」 http://likearpeggio.blog63.fc2.com/blog-entry-19 … 以下では jQuery を使わず Suzuka を使って似たような Flash を作成する方法を回答します。 ＝＝＝ ＝＝＝ ＝＝＝ まずファイル構造が次のようになっているとします。 　任意のフォルダ 　　　├○○.html (○○.swf を貼り付ける) 　　　├○○.swf (作成する Flash ファイル) 　　　└image (フォルダ) 　　　　　├pic1.jpg 　　　　　├pic2.jpg 　　　　　├pic3.jpg 　　　　　├pic4.jpg 　　　　　└pic5.jpg 外部JPEG(pic1.jpg～pic5.jpg) は同じ縦横サイズであるとします。 Suzuka を起動させ、 [ファイル]→[プロジェクトのプロパティ]で「プロジェクトのプロパティ」パネルを表示させて 「基本設定」で「幅」と「高さ」をJPEGと同じ大きさにします。 また 同じパネルの「SWFバージョン」で「SWF8」を選択します。 そして[ファイル]→[名前を付けて保存]で上記の「任意のフォルダ」に任意の名前でプロジェクトファイル(.csf)を保存します。 Suzukaの編集画面のタイムライン(レイヤー名称の部分)を選択し [右クリック]→[アクションレイヤーを挿入]より、ActionScript を記述用のレイヤーを挿入します。 そのアクションレイヤーのフレーム1を選択して Suzukaの編集画面の右下の方にある [スクリプトを編集] ボタンをクリックし 出てくるスクリプトエディタパネルに次のようなスクリプトを書きます(コピペ可)。 //================================= //JPEGの枚数の設定 var max_n = 5; //JPEGフェードインのスピードを設定 var spd = 4; //JPEGフェードイン後の完全表示時間(秒)を設定 var sec = 2.5; //---以上が適当に変える設定--- //空のMC(ムービークリップ)mc0と1を 深度0と1に作成 this.createEmptyMovieClip("mc0", 0); this.createEmptyMovieClip("mc1", 1); //MovieClipLoaderを作成 var mcl = new MovieClipLoader(); //ロード監視用にするObjectを作成 var obj = new Object(); //JPEGロード完了時に実行するメソッドを定義 obj.onLoadInit = function(target_mc) { // //JPEGをロードしたMCを透明にする target_mc._alpha = 0; //JPEGをロードしたMCの深度を1(上側)にする target_mc.swapDepths(1); // //JPEGをロードしたMCに毎フレーム実行するメソッドを定義 target_mc.onEnterFrame = function() { //MCをspdずつ不透明にして行く this._alpha += spd; //MCが完全不透明になったら if (this._alpha>=100) { //指定秒後に関数loadJPEGを実行 setTimeout(loadJPEG, sec*1000); //この毎フレーム実行するメソッドを削除 delete this.onEnterFrame; } }; }; //objをmclのリスナー(監視人)として登録 mcl.addListener(obj); //カウント用変数の初期化 var j_num = 0; var m_num = 0; //関数loadJPEGの定義 function loadJPEG() { //各カウント用変数のカウントアップ j_num = (j_num<max_n) ? j_num+1 : 1; m_num = (m_num == 0) ? 1 : 0; //外部JPEGをロード mcl.loadClip("image/pic"+j_num+".jpg", "mc"+m_num); } //関数loadJPEGを初回実行 loadJPEG(); //================================= あとは [ウィンドウ]→[プレビュー]してみるとか または [ファイル]→[SWFファイル生成]でSWFを上記の「任意のフォルダ」に書き出してもらうと出来上がりです。 なお、 [ツール]→[オプション]で出てくる「オプション」パネルの「全般」タブにある「パブリッシュ設定」の項目の欄で 　□ HTMLファイルも保存する にチェックを入れておいて [SWFファイル生成] をすると、 上記の「任意のフォルダ」にはSWFファイルとともに、それが貼り付いたHTMLが書き出されます。 全体的には SWF6 以上で使用可なスクリプトばかりですが MovieClipLoader が SWF7 以上、setTimeout が SWF8 以上でのみ使用可であるため 結局 SWF8 のFlashファイルを書き出す必要があります。 （SWF8 ＝ Flash Player 8 以上用の SWF） また SWF8 にした場合、 外部画像ファイルは普通の JPEG 以外にも、プログレッシブJPEG や 静止GIF や PNG のロードが可能になります。 写真(JPEG)の枚数を変える方法はわかると思いますが、 例えば、写真(JPEG)を100枚にしたい場合は imageフォルダ内に pic1.jpg～pic.100jpg を用意した上で 上記スクリプトの最初の var max_n = 5; の部分を var max_n = 100; に変えると写真の枚数を変更できます。 ※※※注意※※※ //外部JPEGをロード mcl.loadClip("image/pic"+j_num+".jpg", "mc"+m_num); この部分で "image/pic"+j_num+".jpg" のように指定しているJPEGへのファイルパスは SWFからではなくHTMLからのパスです。 ファイル構造変更の際には注意してください。 ---変更例--- 　任意のフォルダ 　　　├○○.html (○○.swf を貼り付ける) 　　　└image (フォルダ) 　　　　　├○○.swf (作成する Flash ファイル) 　　　　　├pic1.jpg 　　　　　├pic2.jpg 　　　　　├pic3.jpg 　　　　　├pic4.jpg 　　　　　└pic5.jpg 上のように変更した場合も JPEGへのファイルパスの部分は "image/pic"+j_num+".jpg" このままで変更なしです。 (HTMLから見たJPEGの位置は変更していないため)
以下の構文で出来そうです。（一応確認しました） //----------------------------------------------------- var Patt1:RegExp = /<\/font>.*<font [^>]*>/g; var Patt2:RegExp = /^.*<font [^>]*>/; var Patt3:RegExp = /<\/font>.*$/; var str1:String = "文字列"; str1=str1.replace(Patt1, ","); str1=str1.replace(Patt2, ""); str1=str1.replace(Patt3, ""); //------------------------------------------------------- 注意：文字列の中に<font　・・・>・・・</font>が無い時はstr1の値は変化しません。 　　　<font　・・・>・・・</font>が対が正しときも正常には動きません 正規表現の説明 　Patt1はすべての/<\/font>.*<font [^>]*>/を”,”に置換 　　　つまり</font>・・・<font　・・・>を”,”に置換 　　　　　<\/font>　－＞　</font> 　　　　　.*　－＞　任意の文字を任意個 　　　　　<font [^>]*>　－＞　<font　・・・> 　　　　　　　　 [^>]*は”>”以外の文字を任意個（これで最初の”>”範囲になります） 　Patt2は /^.*<font [^>]*>/を削除（Patt1があるのでgは不要） 　　　つまり・・・<font　・・・>を削除 　　　　　^.*は文字列の最初から任意文字任意個 　Patt3は /<\/font>.*$/を削除（Patt1があるのでgは不要） 　　　つまり</font>・・・を削除 　　　　　.*$は任意文字任意個で最後まで "[^>]*"のところで迷ってしまいました。 最初に<font .*>でTESTしてうまく動きませんでした。
「三兎追うものは一兎をも得ず」というわけで， とりあえず， 「動くこと」は「動くこと」，「リンク」は「リンク」，別々に考えましょう。 そして， 「３枚のJPEG」ではなく「１枚のJPEG」で考えましょう。 「新規ドキュメント」作成状態からです。 というわけで， 「新規ドキュメント」のステージ上に静止させた(つまり何もしない)，JPEGを１枚だけ用意します。 そして， ステージ上のそのJPEGを選択した状態で， 「修正」→「シンボルに変換」より，「ボタン」または「ムービークリップ」に変換します。 変換するシンボルは「ボタン」でも「ムービークリップ」でもどちらでも良い(都合によって変える)のですが， この話の都合上，ここでは「ボタン」に変換したことにしておきます。 以下は，ActionScript のバージョンや， パブリッシュするSWFの Flash Player のバージョンによって変わります。 ◎ 場合1 ActionScript 1.0 (Flash Lite 1.x など対応版) この「場合1」は， 「ファイル」→「パブリッシュ設定」で「Flash」タブを選択し， スクリプトを ActionScript 1.0 に設定してした場合です。 上で作成したJPEG入りボタンを選択した状態で「アクション」パネルを表示させます。 そしてその「アクション」パネルに次のようなスクリプトを書きます。 //---------------------------------- //このボタンをクリックしたとき on (release) { //「AAA.html」を同窓で開く getURL("AAA.html", "_self"); } //---------------------------------- 「AAA.html」の部分はリンクさせたいページに変えてください。 http:// から始まるリンクでもかまいません。 「_self」の部分を「_blank」にすると，リンク先が別窓で開くようになります。 ちなみに， 一応これは ActionScript 1.0 を想定していますが， Flash Liate 1.x などを考えない場合は ActionScript 2.0 に設定していても大丈夫です。 ◎ 場合2 ActionScript 2.0 (場合1 で書いたスクリプトは消してください。) この「場合2」は， 「ファイル」→「パブリッシュ設定」で「Flash」タブを選択し， スクリプトを ActionScript 2.0 に設定してした場合です。 上で作成したJPEG入りボタンを選択した状態で「プロパティ」パネルを表示させます。 ※「アクション」パネル ではなく，「プロパティ」パネル です。 その「プロパティ」パネル の， [ ＜インスタンス名＞ ]　のようになっている入力可能部分でボタンにインスタンス名を付けます。 ここでは「my_btn」(全て半角) というインスタンス名を付けることにしておきます。 その「my_btn」と命名したボタンのあるレイヤーとは別にActionScriptを書くために新規レイヤーを挿入します。 その新規レイヤーのキーフレームを選択した状態で「アクション」パネルを表示させます。 そしてその「アクション」パネルに次のようなスクリプトを書きます。 //---------------------------------- //「my_btn」クリック時に動作するイベントハンドラメソッドを定義 my_btn.onRelease = function():Void{ //「AAA.html」を同窓で開く getURL("AAA.html", "_self"); } //---------------------------------- 「AAA.html」の部分はリンクさせたいページに変えてください。 http:// から始まるリンクでもかまいません。 「_self」の部分を「_blank」にすると，リンク先が別窓で開くようになります。 ◎ 場合3 ActionScript 3.0 (場合1 や 場合2 で書いたスクリプトは消してください。) この「場合3」は， 「ファイル」→「パブリッシュ設定」で「Flash」タブを選択し， スクリプトを ActionScript 3.0 に設定してした場合です。 場合2 と同様， 上で作成したJPEG入りボタンを選択した状態で「プロパティ」パネルを表示させ， [ ＜インスタンス名＞ ]　のようになっている入力可能部分でボタンにインスタンス名を付けます。 ここでは「my_btn」(全て半角) というインスタンス名を付けることにしておきます。 そしてこれまた 場合2 と同様， その「my_btn」と命名したボタンのあるレイヤーとは別にActionScriptを書くために新規レイヤーを挿入します。 (場合2 ですでに作成してあれば新規に作成する必要はありません。そのままのレイヤーを使用してください。) その新規レイヤーのキーフレームを選択した状態で「アクション」パネルに次のようなスクリプトを書きます。 //---------------------------------- //「my_btn」クリック時に 関数btnClickを実行 my_btn.addEventListener(MouseEvent.CLICK,btnClick); //関数btnClickの定義 function btnClick(e:MouseEvent):void { //リンク先URLのリクエストを作成 var my_req:URLRequest=new URLRequest("AAA.html"); //リクエスト先を同窓で開く navigateToURL(my_req); } //---------------------------------- 「AAA.html」の部分はリンクさせたいページに変えてください。 http:// から始まるリンクでもかまいません。 「_self」の部分を「_blank」にすると，リンク先が別窓で開くようになります。 場合1～3 のうちいずれかの方法で作成したボタンを３つ作り， その３つのボタンをスライド移動させれば良いと思います。 ただし， 場合2 または 場合3 のようにしてインスタンス名を付けたボタンを まとめて１つのムービークリップに変換して， そのムービークリップをスライド的に動かす場合は， そのムービークリップにもインスタンス名を付けて(例えば「my_mc」)， スクリプトの my_btn.onRelease や my_btn.addEventListener(MouseEvent.CLICK,btnClick); の部分を my_mc.my_btn.onRelease や my_mc.my_btn.addEventListener(MouseEvent.CLICK,btnClick); のように変更する必要があります。 今回は場合1～3のような複数の場合を書きましたが 普通はそんな回答はできないので， パブリッシュする「ActionScript のバージョン」 や 「SWF の Flash Player のバージョン」 を決めて明記した上で質問するようにしてください。 でないと，無回答であったり，トンチンカンな回答が付くだけの場合が多いです。(または，私みたいな者から「状況がわからん！」 と説教を受けるかですね。)
添付されている画像もよく見えませんし 仮に見えたとしてもどこにどんなスクリプトを書かれたのかは見えるはずありませんし。 しかし少なくともご質問に書かれていらっしゃるスクリプトは完璧に変ですね。 on(release){ gotoAndPlay(それぞれ指定するラベル) { ←閉じてない
＞ローカルでは正常でも、アップするとおかしくなることってあるのでしょうか ローカルでエラーになっても、サーバーにアップすると、正常稼働する事例 http://oshiete.goo.ne.jp/qa/5561564.html ローカル環境上では相対パスで静的ファイルが取得できるのに対し、サーバ上では相対パスでの***による静的ファイルの取得は不可 参考URL：http://www.dango-itimi.com/blog/archives/flash/
確かに分かりずらいご質問ですね...。 なぜかと言うと 「A.b.addEventListener...を b.addEventListener...に変更」 「オブジェクトの重なり順を変更する」 「Aの中にあるbをAのBOXから出す」 この３つは，基本的には全く別のことだからです。 ３つとも全てに回答すれば そのうちのどれかが求めていらっしゃることに当たるかもしれません。 以下ではすべて， はじめに次のようなタイムライン階層になっているものとします。 　スクリプトを書く階層(＝this) 　　　└A(ムービークリップ) 　　　　　　└b(ムービークリップ) ※ A 内の c は登場しないようなので略します。 ＝＝＝ ＝＝＝ ＝＝＝ (1)A.b.addEventListener...を b.addEventListener...に変更 ActionScript 3.0 では， ムービークリップにインスタンス名を付けると言っても 結局のところインスタンスは「変数」で管理するようになっています↓。 ・[AS3] MovieClipインスタンスとインスタンス名 http://f-site.org/articles/2008/04/19014939.html したがって > A.b.addEventListener.....とアクセスするのを、 > b.addEventListener....で、アクセス出来るように変更 これは簡単なことで 次の１行のスクリプトを書けば良いだけです。 ------------------------------- //変数「b」に 「A」内の「b」の参照を代入 var b:MovieClip = A.b; ------------------------------- これで本当にできているのか， 「制御」→「ムービープレビュー」で検証する用のスクリプトも書いておきます。 ------------------------------- //変数「b」に 「A」内の「b」の参照を代入 var b:MovieClip = A.b; //「b」クリック時に 関数bClick を実行 b.addEventListener(MouseEvent.CLICK,bClick); //関数bClick の定義 function bClick(e:Event):void { //「b」のインスタンス名でも出力させてみる trace(e.currentTarget.name); } ------------------------------- (2) オブジェクトの重なり順を変更する 重なり順とはZ軸の表示順序で， ActionScript 1.0/2.0 時代の名残かもしれませんが深度とも言われます。 ・ActionScript 3.0「深度」 http://www.yosukesugahara.com/diary/actionscript … ・AS3.0リンケージ深度やレイヤー階層 http://d.hatena.ne.jp/jedisystemer/20100113/1263 … 上記ページなどに書いてあるように， 重なり順は setChildIndex や swapChildren などで変えます。 「A」内の「b」を，「A」の箱から出したように見せるには 次のようにして「A」内での「b」の重なり順を一番上にしても良いでしょう。 ------------------------------- //「A」内の最高深度を取得 var h_depth:int = A.numChildren - 1; //「A」内の「b」を「A」内の最高深度にする A.setChildIndex(A.b, h_depth); ------------------------------- 下の添付図↓は， 上記スクリプトを実際に確かめてみた様子です。 添付図のようなものを作成した場合， 「A」内の「b」が，「A」内に描いた箱の外(上)に表示されるようになります。 (3) Aの中にあるbをAのBOXから出す つまりインスタンス自体のタイムライン階層を 次のように↓変更するということですね。 　スクリプトを書く階層(＝this) 　　　├b(ムービークリップ) 　　　└A(ムービークリップ) これは ActionScript 2.0 まではできなかったことなのですが ActionScript 3.0 では概念が変わったため簡単にできます。 たった１行です↓。 ------------------------------- //この階層に「A」内の「b」を配置 this.addChild(A.b); ------------------------------- (1)～(3) の３通りの回答をしてみました。 ここまで書いて思うのですが， 仮に (3) の「Aの中にあるbをAのから出す」が求めていらっしゃることだったとします。 しかし (3) をしても (1) の「A.b.addEventListener...を b.addEventListener...に変更」 をしたことにはなりません。 次のように試してみるとわかります。 「bなど存在しないよ！」という内容のエラーが出ると思います。 ------------------------------- //この階層に「A」内の「b」を配置 this.addChild(A.b); //「b」クリック時に 関数bClick を実行 b.addEventListener(MouseEvent.CLICK,bClick); //関数bClick の定義 function bClick(e:Event):void { //「b」のインスタンス名でも出力させてみる trace(e.currentTarget.name); } ------------------------------- なぜエラーが出るのかという理由は (1) で書いたURLページの説明にある通りで 「b」という変数がスクリプトを書いた階層に存在しないからです。 したがって (1) と (3) の両方をする場合は (1) のことも (3) のことも両方ともしなければならないということになります。 (1) と (3) とは全く別のことですから。↓ ------------------------------- //変数「b」に「A」内の「b」の参照を代入 var b:MovieClip = A.b; //この階層に変数「b」が参照するMCを配置 this.addChild(b); //「b」クリック時に 関数bClick を実行 b.addEventListener(MouseEvent.CLICK,bClick); //関数bClick の定義 function bClick(e:Event):void { //「b」のインスタンス名でも出力させてみる trace(e.currentTarget.name); } ------------------------------- 長くなりましたが以上です。
これだけでは解答しづらいですが… flashを一から始めるということであれば adobeflashを買うか無料ならsuzukaやparaflaあたりを使って flash入門のサイトを見たり本を読んだりして 勉強するのがよいのではないでしょうか？ flashは使えるけれど作り方がわからないということであれば どんな仕様にするかで違ってくるので （服をつかんで移動させるのか、 それとも好きな服をカテゴリーから選ぶのかなど） どこがどうできないのか具体的に質問するのがよいと思います 必ずしも自分でフラッシュを覚えたいわけではないのなら 例えばhttp://flabo.isotonix.jp/tool.shtml#flaxeのような 作成ソフトを使うという方法もあります
＃１(＃２)です。 > 今までは「Hensuu」と「hennsuu」とを同一の変数として扱っていたのに、 > 変更後は別々の変数として扱っていることが原因の不具合でした。 そんなこともあり得ますね。 大文字小文字を区別するようになったのは Flash MX 2004 の Flash Player 7 からです。 それと同時に 何にも定義していない変数の初期値が変わりました。 Flash MX の Flash Player 6 までは，いきなり， a = a + 5; とかができたのですよ。 Flash MX (Flash Player 6 用 SWF パブリッシュ) までは， 変数 a は 何も宣言したり初期値を与えていないと， 自動的に 0 または ""(←空白文字列) になっていたのです。 ですからいきなり a = a + 5; と書けば a = 0 + 5; となって a = 5; となっていました。 しかし Flash MX 2004 (Flash Player 7 以降用 SWF パブリッシュ) からは 何も初期値を与えていない変数の値は undefined になりますから， a = a + 5; みたいなことをいきなりすると， a は NaN(非数) になります。 そんなところが下位バージョンが優先されていない大きな部分だと思います。 とは言いましてもですね...， 全体的に「いったい何年前の話？」だと思います。 今頃そんなことを言ってどうなるの？ という感じですか。。。 Flash が現在の Flash たる由縁は， 「積極的に進化をし続けている」ソフトだからです。 どこかの進化しないソフトとはまるっきり違います。 そうしていても，HTML5 や Mac に砲撃されそうになっているのに．．．。 Flash の進化は日進月歩です。 Ｆｌａｓｈ作成者としては日々動向を観察しておかなければすぐに浦島太郎状態になります。 (キツイ言い方をすれば，過去の無駄な知識が足を引っ張ることは十分あり得ます。つまり，無駄な過去などない方がましな場合も出てきます。続けるのでしたら日々精進＆鍛錬＆情報収集です。それができないのでしたら，毎回一からやり直す方が良いかもれません。)
crossdomain.xmlの記述内容については特に問題さそうに思います。 ※hogehogeの部分が間違っていなければ。 http://www.sawaijiri.com/2009/04/01/no66/ を見てみたのですが、どうやらFlashPlayer10から若干設定ルールが変更になっていたようですよ。 要点を上記サイトから抜粋すると、 1.ドメインのルートにメタポリシーファイルを配置する。 以下の内容のcrossdomain.xmlをドメインのルートに配置。 <?xml version="1.0"?> <cross-domain-policy> <site-control permitted-cross-domain-policies="all" /> </cross-domain-policy> ※サイトごとに配置するcrossdomain.xmlも合わせて配置する必要があるようです。 ⇒なので、ドメインのルート、サイトのトップの2個所に内容の異なるcrossdomain.xmlを配置する必要があるようです。 ⇒ドメインのルートを触れる権限をお持ちの場合はサイトのトップに配置するcrossdomain.xmlをドメインルートに 配置するだけでいいそうです。 2.ドメインのルートを触れない場合はphpでメタポリシーファイルの内容を吐き出して対応 以下のスクリプトを対象のページを表示する前に実行する必要があるようです。 <?php header("HTTP/1.1 200 OK"); header("X-Permitted-Cross-Domain-Policies: all"); header("content-type:text/xml;charset=UTF-8"); print '<?xml version="1.0"?>'."\n"; print '<cross-domain-policy>'."\n"; print '<allow-access-from domain="*" />'."\n"; print '</cross-domain-policy>'."\n"; exit; ?> 私の方で実際の動作確認はしていませんので、一度試してみてはいかがでしょうか？
＃１で回答した者です。 ＃１の回答では > if( loop_cnt == undefined || loop_cnt>mcimg._totalframes) > {loop_cnt = 1;} これがご質問の本題に関係があるものとして そこからムービーの構造やしくみを私が勝手に想像した上での回答です。 仮にご質問中の > if( loop_cnt == undefined || loop_cnt>mcimg._totalframes) > {loop_cnt = 1;} これはなかったものとします。 そして > （flashを途中から再生させる→ループで頭に戻る > →その後はそのまま全てのタイムラインをループ） だけにシンプルに答えるとします。 その場合はスクリプトを次のようにすれば良いと思います。 再生させるタイムラインのフレーム1に書くスクリプトです。 (_rootを再生させるなら_rootのタイムラインのフレーム1に書くスクリプトです。) (ムービークリップ内を再生させるならムービークリップ内のタイムラインのフレーム1に書くスクリプトです。) ----------------------------------- //再生開始フレームを設定(4は例えばの例) var start_frm = 4; //もし変数 play_flag が未定義であれば if (play_flag == undefined) { //変数 play_flag を true と定義 var play_flag = true; //このタイムラインをこのフレームで停止 this.stop(); //---ロード待ち処理------ //毎フレーム実行するメソッドを定義 this.onEnterFrame = function() { //このタイムラインが指定フレームまでロードされたら if (this._framesloaded>=start_frm) { //指定フレームより再生開始 this.gotoAndPlay(start_frm); //毎フレーム実行するメソッドを削除 delete this.onEnterFrame; } }; } ----------------------------------- ＃１ と同じく，一応 Flash MX 以上(MX，MX2004，8，CS3，CS4，CS5，CS5.5 のいずれか)をお持ちで ActionScript 1.0 (または 2.0) を使う設定で Flash Player 6 以上用の SWF をパブリッシュするものと想定しています。
> 順に１～２０とラベルされており ラベルとは...??? フレームに1～20というラベル名を付けたのですか？ まずそれがダメでしょう。 "ラベル名" なら "ラベル名" らしく，ちゃんと文字列にしないと。 例えば フレームに「label1」～「label20」というラベル名を付けたとします。 その場合， ボタンに書くスクリプトは次のようになります。 ---------------------------- on (keyPress "*") { gotoAndPlay("label" add nb); } ---------------------------- gotoAndPlay() または gotoAndStop() の引数が１つの場合 その引数は 「フレームラベル名」 または 「フレーム番号」 として Flash Player に受けとられます。 gotoAndPlay("文字列") の場合「フレームラベル名」として受けとられ gotoAndPlay(整数値) の場合「フレーム番号」として受けとられます。 また， Flash Lite 1.x では 数値加算演算子 と 文字列加算演算子 が区別されています。 「+」が数値加算演算子で，「add」が文字列加算演算子です。 (例： 1+1→2 ， 1 add 1→11) なお Flash Player 5 以降は 数値加算演算子 と 文字列加算演算子 の区別はなくなり， どちらであっても 「+」 を使います。 (例： 1+1→2 ，Number(String(1)+String(1))→11) あと， eval は インスタンス や 変数 を文字列で呼ぶときに使うものです。 今回の場合は全く関係しないでしょう。 ---一般的なevalの使用例------------ for (i=1; i<=10; i++) { eval("Hensuu" add i) = i; } trace(Hensuu5); -------------------------------- ---あえて今回のものに使用すると------- on (keyPress "*") { gotoAndPlay("label" add eval("nb")); } -------------------------------- ↑回りくどくてややこしくなっただけです。 　 evalを使う必要は全くありません。 なお Flash Player 5 以降， eval の使用は非推奨(半使用禁止)になりました。 代わりに 「配列アクセス演算子」 を使います。 動作検証時の作成物画面例↓
そんな感じでいいと思います。 事前にコンパイルしておいたものをflashplayerが実行しているだけです。
配列で管理すれば良いと思いますよ。 ただ、リスト選択時に選択が全解除されるのでチカチカします。 （別途イベントを無効にする処理を入れる必要があります。） あとはアイテムレンダラーを使用してそっちで個別対応するのでも良いでしょうね。 private var pHistoryList:Array = []; private function onItemClickHandler(event:ListEvent):void { var flg:Boolean = true; for (var i:int=0; i<pHistoryList.length; i++) { if ( pHistoryList[i] == event.rowIndex ) { pHistoryList.splice(i, 1); flg = false; break; } } if (flg == true) pHistoryList.push(event.rowIndex); cDataGrid.selectedIndices = pHistoryList.concat(); }
たぶん、Main.asで1フレーム目にないオブジェクトを扱っているためです。 1フレーム目で見せたくないものはalpha=0やvisible=falseで見えないようにしておいて、 配置自体は1フレーム目からにしてみてください。 タイムラインとスクリプトを合わせて使用する際はいろいろ癖があるので気をつけた方がいいですよ。
ご質問の文章中の > （バーの先端ｙと２枚目の画像の中心＿ｘをそろえる） この意味が(全く)わからかったため すみませんがこの部分はなかったこととします。 ＝＝＝＝＝＝＝＝＝＝＝＝ まず前提状況として 書かれていらっしゃるサイトのページ(lesson38.htm)より 「load3.zip」をダウンロード＆保存をさせてもらい そのZIPファイルを解凍し， Flash で 「load3.fla」 を開いているものとします。 「バーの先端にあわせて画像」を ムービークリップ で作成します。 (ステージ上に単なる画像を置いているだけでしたら，その画像をムービークリップに変換します。) そして，その ムービークリップ を選択した状態で プロパティパネルより，その ムービークリップ に インスタンス名 を付けます。 ここでは，その ムービークリップ に「gazou_mc」という インスタンス名 を付けることにしておきます。 その「gazou_mc」を配置する階層によってスクリプトは変わるわけですが， ここでは「gazou_mc」を，「ローディング」のムービークリップ と同じ階層に置いたものとします。 つまり， 「gazou_mc」 と 「ローディング」のムービークリップ は 両方とも _root の階層に配置された兄弟ムービークリップだとします。 ※ 【図】↓参照のこと この場合， 「ローディング」のムービークリップ 自体に書かれてあるスクリプトの onClipEvent (enterFrame) {} ハンドラ 内の最終行に 次の１行↓を加えればOKだと思います。 this._parent.gazou_mc._x = this._x+this.bar._x+this.bar._width; 同じ事を言いかえると onClipEvent (enterFrame) {} ハンドラ のその前後を書き足すと 次のようにすれば良いでしょうという意味です。 ------------------------ onClipEvent (enterFrame) { //フレームが再生するたびに // 　… //～略～ // 　… this.percent = nowLoadedSize; //今現在の読み込まれている%をpercentに入れて表示 this._parent.gazou_mc._x = this._x+this.bar._x+this.bar._width; //↑親階層(_root)にある「gazou_mc」のx座標を //このMCのx座標＋barのx座標＋barの横幅 の位置にする } } ------------------------ 上にも書いた通り 「gazou_mc」を配置する階層によってスクリプトは変わるわけですが， もし仮に 「gazou_mc」を 「ローディング」のムービークリップ 内に置いたものとします。 この場合は， 「ローディング」のムービークリップ 自体に書かれてあるスクリプトの onClipEvent (enterFrame) {} ハンドラ 内の最終行は 次↓のようになります。 this.gazou_mc._x = this.bar._x+this.bar._width; //↑この階層にある「gazou_mc」のx座標を //barのx座標＋barの横幅 の位置にする ＝＝＝＝＝＝＝＝ 違うご質問での他の方の回答にも 違うご質問での私の回答にも無反応なので今回も無反応だとは思いますが 一応回答してみました。
＃２です。 今私が ＃２ で書いたURLを今見ると > GACは2011年５月を持ちましてサービスを終了しました。 > 長くご愛顧ありがとうございました。 となってしまいますね。 回答したときはそうなってなかったのに...(困)。 Google の キャッシュ でしたら かろうじて残っています。 http://webcache.googleusercontent.com/search?q=c … あと 百度 のキャッシュにも かろうじて残っています。 http://cache.baidu.jp/jp?word=http%3B%3A%2Cgac%3 …
こんにちは ソフトは何をお使いでしょうか？ ソフトによって違うかと思いますが、元となるMovieClipのプロパティで基準点を設定できませんか？
ボタン自体にクリックなどのマウスイベントを付けることはできますが ボタンの内部の何かに，クリックなどのマウスイベントを付けることはできません。 ですから 仮に ボタン「オーバー」時に 「アップ」フレームに戻ることなく リンク付テキスト が無事に表示されたとしても，そのリンクは効きません。 (「アップ」フレーム にも リンク付テキスト を置けばわかるはずです。) したがって リンク付テキスト を使う(テキストのリンク機能を使う)という方法自体をやめた方が良いと思います。 ActionScript のバージョン や Flash のバージョンを書かれていらっしゃらないため回答しにくいですが ActionScript 3.0 の場合 基本的な操作方法は次のようにします。 まず 普通通りに「アップ」～「ヒット」フレームまでちゃんと作成したリンクテキストを用いないボタンをステージ上に配置します。 そのボタンを選択した状態で「プロパティ」パネルを表示させて その「プロパティ」パネルよりインスタンス名を付けます。 ここでは仮の例として 「A_btn」というインスタンス名を付けるとします(【図】(CS4での画面例)↓) その「A_btn」が存在するタイムラインに スクリプト記入用にするレイヤーでも追加して その「A_btn」が存在するフレーム(例えば フレーム1 なら フレーム1)のキーフレームを選択した状態で 「アクション」パネルに次のようなスクリプトを書きます。 //-------------------------------- //「A_btn」クリック時に 関数AClickを実行 A_btn.addEventListener(MouseEvent.CLICK,AClick); //関数AClickの定義(引数：イベント)：戻り値無し function AClick(e:MouseEvent):void { //例えば「aaa.html」というリクエストを作成 var myReq:URLRequest = new URLRequest("aaa.html"); //そのリクエストページを同窓で開く navigateToURL(myReq,"_self"); } //-------------------------------- ActionScript 2.0 の場合， フレームに書くスクリプトは次のようになります。 //-------------------------------- //「A_btn」クリック時に実行するメソッドを定義 A_btn.onRelease = function():Void { //「aaa.html」というページを同窓で開く getURL("aaa.html", "_self"); }; //-------------------------------- もし ActionScript 1.0 や 2.0 で スクリプトをフレームに書くのではなくボタン自体に書くのでしたら次のようになります。 //-------------------------------- //このボタンクリック時に実行 on (release) { //「aaa.html」というページを同窓で開く getURL("aaa.html", "_self"); } //--------------------------------
> でもAS2.0で作るとボタンを押した後、トゥイーンが動いてくれません そんな事態になったことがない上に そうなる状況がさっぱりわからなため， この１行はなかったものとします。 > AS3.0だとボタンにアクションを設定しようとすると > 3.0だと対応していないと出てきます。 「on (release) ActionScript 3.0」 http://www.google.co.jp/search?hl=ja&source=hp&q … などど検索すれば，すぐに答えが見つかりませんでしょうか？ ＝＝＝＝＝＝＝＝＝＝＝＝＝ ActionScript 3.0 の場合， 基本的な操作方法は次のようになります。 アクションを設定するボタンインスタンスをステージ上に配置します。 そのボタンを選択した状態で「プロパティ」パネルを表示させて その「プロパティ」パネルよりインスタンス名を付けます。 ここでは仮の例として 「A_btn」というインスタンス名を付けるとします(【図】↓) その「A_btn」が存在するタイムラインに スクリプト記入用にするレイヤーでも追加して その「A_btn」が存在するフレーム(例えば フレーム1 なら フレーム1)のキーフレームを選択した状態で 「アクション」パネルに次のようなスクリプトを書きます。 //----------------------------------- //「A_btn」クリック時に 関数AClickを実行 A_btn.addEventListener(MouseEvent.CLICK,AClick); //関数AClickの定義(引数：イベント)：戻り値無し function AClick(e:MouseEvent):void{ //例えば出力窓に e.target.name を出力させてみる trace(e.target.name); } //----------------------------------- そして 「制御」→「ムービープレビュー」でSWFを仮パブリッシュ＆表示させて ボタンが機能しているか検証してみます。 もちろん実際には trace(e.target.name) ではなくて 他の動作 ( gotoAndPlay(○) など) をさせると思います。
1以外の条件でスルーしてしまうからてしょう。 elseつけるなり、最後にreturnをおくなりしてください。
<html> <head> <title>背景</title> <style type="text/css"> #html-layer{position:absolute;top:10px;left:0px;width:100%;height:100%;} </style> </head> <bodybackground="png/ghg.png" text="#f5f5f5" link="#ffffff" alink="#fff5ee" vlink="#f8f8ff" leftmargin=0 topmargin=0 marginwidth=0 marginheight=0> <div id="html-layer"> <font color="#000">1●●● 2△△△ 3■■■</font> <br><br><br><br><br><br><br><br><br><br> <table border="3" align="right" height="90" width="75"> <tr> <td align="center" valign="middle"> <a href="aaaaaa.html"> <font color="#000"> <b>戻る</b> </font> </a> </td> </tr> </table> </div> <object type="application/x-shockwave-flash" data="swf/b.swf " style="width:100%;height:100%;top:0;left:0;" > <param name="allowScriptAccess" value="always"> <param name="movie" value="swf/b.swf"> <param name="wmode" value="transparent"> <param name="bgcolor" value="#ffffff"> </object> </body> </html> 下記参照 http://www.geocities.jp/n_a_o11/hpflash4.html
たしか Sound か SoundChannel のどちらかが使いまわし出来なかったと思うので、 新しくインスタンスを作り直す必要がある覚えがあります。 その為、ちゃんとクリアの後処理を入れておかないとメモリリークの原因になります。 （単一ならそうでもないと思いますが） あと、現状のソースだとmp3ファイルの読み込みが完了しないと再生されないと思うので、 サイズが大きくて再生までに時間がかかるのを回避するためにストリーミング再生出来るようにしたらどうでしょう？ 具体的なやり方ですが、Adobeのヘルプに「Podcast Player」のサンプルがあります。 http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … サンプルファイルは以下からDLできます。(色んなサンプルの詰め合わせで ZIP, 42 MB) http://livedocs.adobe.com/flash/9.0/main/samples … 基本的には、SoundPlayer.as と SoundFacade.as の動きをみればだいたい分かると思います。 今後拡張したいと言う時に参考になる良いサンプルだと思いますよ。
Fｌash自体Adobeの商用なので、それに近いソフトは色々ありますが、完全同じにはできないと思います。 なお、FREEなど又はお試し期間などあるソフトもあるので、色々試してみて、自分に合ったものを探すのがいいと思います。 なおマクロ部分はすべて違うものと考えたほうがいいと思います。 完全に同じものは作れませんので、言語形態は変わると思います。
＃１です。 ご質問で書かれているインスタンスとは結局何なのかがわかりませんが， そのインスタンスがスプライトであるものとして， 実際に FlashDevelop を使って そのスプライトインスタンスを作成する部分も含めたコードに＃１のコードを書き替えてみました。 ASファイルのファイル名は「Main.as」であるものとした場合です。 --------------------------------- package { //各クラスのインポート import flash.display.Sprite; import flash.events.Event; import flash.utils.getTimer; // public class Main extends Sprite { //変数の宣言 private var sp:Sprite; private var tm:Number; // //コンストラクタ public function Main():void { //スプライトインスタンス「ｓｐ」の作成＆配置 sp = new Sprite(); sp.x = stage.stageWidth / 2; sp.y = stage.stageHeight / 2; addChild(sp); // //「ｓｐ」内に青い長方形を描画 sp.graphics.beginFill(0x0000FF); // 座標(0px,0px)を起点(左上)に10×100pxの矩形を描く sp.graphics.drawRect(0,0,10,100); // //「ｓｐ」に毎フレーム実行するリスナーを登録 sp.addEventListener(Event.ENTER_FRAME, rotateInstance); } // //インスタンスを回転させる関数rotateInstanceを定義 private function rotateInstance(e:Event):void { //ミリ秒数を取得 tm = getTimer(); //ミリ秒数を秒数にした小数部分を取得 tm = tm / 1000 - Math.floor(tm / 1000); //ターゲットインスタンスをその小数の角度回転させる e.target.rotation = tm * 360; } } } --------------------------------- ※ 作成＆動作検証 FlashDevelop 3.3.4 　 ActionScript 3.0 　 Flash Player 10 設定 ＃１から特に大きな変更点はありません。 インスタンスの作成部分を含めたので スクリプトコードをコピペするだけで即動作検証できるようになったというだけです。
＞フラッシュとして作成しないといけないと思っています（間違っているでしょうか。。） そーです、合っています。 Adobe　FLASH買ってください Elementsじゃできませんから 買ったら質問してくださいね。
１．CやDのボタンを押したときにグローバルな変数(タイムラインの1フレーム目に定義)に どのボタンを押したか保存しておきます。("C"や"D"など) ２．１を記述した後にgotoAndPlay("A_close");でA_mcの後半を再生します。 ３．A_mcの一番最後のフレームで、1で保存しておいた値を判定してgotoAndPlayの先を分岐します。 こんな感じではどうですか？
インスタンスフィールドとかスタティックフィールドで検索してみてください。 たとえばこんな感じ？ http://www40.atwiki.jp/spellbound/pages/193.html
Flash技術を使った動画配信といっても、何通りかやり方があるようです。 ・flvを含んだswfをサーバーに事前に設置して、それを再生(映画のPVなど） ・事前に準備した動画ファイルを順次ダウンロードしながら再生(YouTubeなど) ・ストリーミングサーバーを経由してリアルタイムに再生(Ustreamなど） ・配信元のカメラの操作自体をクライアントからできるもの（ライブカムなど） どういうものが目的か次第で、方法論も変わってきます。 もし、Ustream的なことを自前でしたいなら、サーバー上に、 ApacheなどのWebサーバーでなく、ストリーミング用のサーバーを設置しておき、 カメラやマイクを設置してある配信元は、Flash Media Live Encoder または それようのswfをつかって 上記のストリーミングサーバーにリアルタイムに送り続け、 クライアント側では、ストリーミング再生用のswfでストリーミングサーバーに対してアクセスして 視聴するということになるります。 この場合、普通のWeb用のレンタルサーバーでは無理なので、ストリーミングサーバー（いろいろ種類がありますが）の外部サービスを　使うか、 自前でサーバーごと用意する必要があります。 なお、ストリーミングサーバーとしては、以前は、 Flash Media Serverなど有償のものしかなかったですが、最近では、Red5などオープンソースのものもあるようです。 ただ、視聴者数が多くなると、複数のサーバーに分散させる必要があり、 そうなると、技術的な要求度が高くなり、それ以外にも、 複数サーバーの維持費(設置代やメンテナンスやセキュリティ対策)どんどんコストアップしていきますので、 心配なようであれば、外部サービスやSaaS(ASP)的なものを使ったほうがよいかもしれません。 （私なら、よほどのことがない限り、ありがたくYouTubeやUstreamを使わせて頂きますが）
こんにちは 参考になるか分かりませんが、ＡＳ３について色々書かれていますので、一応ＵＲＬを貼ります。 参考URL：http://gihyo.jp/dev/serial/01/as3
前回の質問で回答させていただいたものです。 添付の画像で質問内容の意図がわかりましたが、イラレでのラインの設定は、WEBドキュメントだと、１ｐｘ以下は設定できないと思いますよ。 もしかして、プリントドキュメントで、線ツールの設定を言われているのであれば、線の単位を確認いただくとわかりますが、１ｐｔ、0.5ｐｔではありませんか。 そもそも、1pxという単位のものを、何に１００％で表示するのかを考えると、すぐ解決します。 モニタの解像度で、例えば１４４０×９００であれば、横に１４４０個、縦に９００個でその１個が１ｐｘです。 最小表示の単位が0.5ではないので同じように表示され、拡大すると、それに比例して線も拡大されているので、違いを確認できるというわけです。
表示が出来ないということですが、選択ツールでそのラインを選択し、そのラインの太さはどのようになっていいるのかを確認して下さい。太さが設定した値であれば、正しく表示されているはずです。 もしかして、プレビュー等の表示した際の太さを言われているのであれば、拡大表示をして確認して下さい。
コンストラクタ名またはクラス名のTypoではないでしょうか？ クラス名がTimeViewなのに対し コンストラクタ名がTimeとなっています。 コンストラクタ名を間違た場合警告などは発生せず、 それはただのメソッドとして扱われてしまいます。
navigateToURL()はブラウザに「そのURLに行け」と命令するだけのものです。 そのswfの場所がhttp://hogehoge.com/fuga.swfと仮定した場合、 「http://hogehoge.com/data/top1.docへ行け」、とブラウザに命令している だけにすぎません。ブラウザとtop1.docとの通信は完全にFlashの外で行われて いるため、Flashサイドだけではファイル名を変更することはできません。 もしどうしても変更したい場合、top1.docとの間にCGIなど Flashとは別にサーバサイドのプログラムをかませて、 HTTPレスポンスヘッダを捏造してあげる必要があります。
ActionScript 2.0(1.0) の場合は ムービークリップのみならずボタンにも勝手なプロパティを与えることができます。 その性質(仕様)を使って 次のようにしても良いと思います。 ----------------------------------------------- for (i=1; i<53; i++) { this["pad"+i].num = i; this["pad"+i].onRelease = function() { trace("pad"+this.num); }; } ----------------------------------------------- ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ なお(大きなお世話だとは思いますがすみません。) ＃１の方のスクリプトを フレームに書く ActionScript 2.0 に翻訳すると次のようになります。 ----------------------------------------------- for (i=1; i<53; i++) { this["pad"+i].onRelease = createPrintTrace(i); } function createPrintTrace(x:Number):Function { return function ():Void { trace("pad"+x); }; } ----------------------------------------------- さらに ActionScript 1.0 に翻訳すると次のようになります。 ----------------------------------------------- for (i=1; i<53; i++) { this["pad"+i].onRelease = createPrintTrace(i); } function createPrintTrace(x) { return function () { trace("pad"+x); }; } -----------------------------------------------
この辺りは参考になりませんか？ http://flashrave.org/anima/fade_in/index.html http://www.flash-jp.com/modules/newbb/viewtopic. … http://hfm-kenchan.com/Lesson/log_qa/D0503074.htm
その式ですと、乱数の範囲が、配列変数のインデックス（管理番号）の最大値よりも 1 だけ広くなってしまいます。 RandomInt 関数内の乱数を求める式を 　Math.floor( Math.random() * ( maxN - j ) ); に、変更してみてください。 　 たった 1 の違いが、何が問題なのかと言いますと。 ご提示の式ですと、0 ～ 配列変数の要素の総数、の範囲で乱数を求めることになります。 例えば int_a が 10 個の要素を持っている時、0 ～ 10 までの乱数を求めてランダムに要素を１つ取るとすると、最大の 10 が出た時には int_a[ 10 ] を取ることになります。 しかし、配列変数のインデックスは 0 から始まるので int_a は 0 から 9 番までしかなく、10 番を指定したのでは値の取得に失敗してしまいます。 関数内で、乱数で選んだインデックス（変数 int_r ）と int_a の要素の総数を表す a_length の値を監視してみると分かるのですが、値の取得に失敗して「 ,, 」と歯抜けになるのは乱数（＝ int_r ）と a_length が同じになった場合で、運よく１度も同じにならなかった時はこの問題は起こりません。 － － － － － Math.random で任意の範囲の乱数を発生させる式が、Adobe 社のホームページで紹介されています。 　・Math.random() でランダムな整数を取得する方法 　　http://kb2.adobe.com/jp/cps/228/228622.html ご参考になさった作例では、この式を利用して配列変数 int_a のインデックスの範囲内で乱数を決めて任意の要素を１つ抜き取り、それを別の配列変数 int_b の先頭から順に詰めていく、といった方法をとっていると思われます。 int_a の要素は最初は変数 maxN と同じ数、ご提示のスクリプトですと 10 個あるのですが、配列変数のインデックスは 0 から始まるので、最後の要素は int_a[ 9 ] です。 ですから、抜き取る要素を決める乱数は 0 ～ 9 の範囲で求めます。最大値の 9 とは、maxN - 1 のことです。 すると、先の式に当てはめますと、 　Math.floor( Math.random() * ( ( maxN - 1 ) - 0 + 1 ) ) + 0 これを整理しますと、 　Math.floor( Math.random() * maxN ); になります。 int_a から splice メソッドで要素を抜き取ると配列変数の要素が少なくなっていきますから、要素が減った分だけ乱数の範囲も狭めていかなければなりません。 抜き取ってなくなった数は、値を抜き取った時にカウントを取っている変数 j を見ると分かります。 合わせますと、int_a の 0 ～最大インデックスの間で乱数を求める式は 　Math.floor( Math.random() * ( maxN - j ) ); 　 となります。 ＊ ＊ ＊ 今回の件での変数 maxN とは、初期状態の int_a の要素の総数と同じ意味です。 配列変数の要素の総数は length プロパティに記録されており、要素を削除・追加した時には length プロパティは自動的に修正されます。 この点を利用して、 （↓　各行頭に全角のスペースが入っています。コピーする際はご注意ください） //＊＊＊ 　//抜き取った値をint_bに詰める時のインデックス 　var j:Number = 0; 　//int_aの要素が尽きるまでループ 　while( int_a.length ) 　{ 　　//抜き取る要素をランダムに選ぶ 　　var int_r:Number = Math.floor( Math.random() * int_a.length ); 　　//int_aの要素を抜き取り、int_bの先頭から詰めていく 　　int_b[ j ] = int_a.splice( int_r , 1 ); 　　//値を詰めるインデックスを更新 　　j++; 　} //＊＊＊ と、書くこともできます。 なお、繰り返しますが、配列変数のインデックスは”0 から”始まり、最後は”要素の総数 - 1 ”です。 配列変数 int_b の値を for ループで全部取り出す時は、 　for( i = 0 ; i < int_b.length ; i++ ) というように書きます。 先頭は１番ではありませんので、ご注意ください。
私は 「Swift 3D」 ではないかと思いました・ Google検索「Swift 3D」 http://www.google.co.jp/search?hl=ja&q=Swift+3D& … しかし， どうやらそうではないみたいなことが書いてありました。 「FlasherDotOrg Article Giant Steps - an animated short film's trip around the world (Michal Levy)」 http://www.flasherdot.org/Articles/GiantSteps.htm > What software programme was used to create it? >　I used Maya. But the real breakthrough of this film on the net was >　only after I rendered it into vectors, >　and made it into a Flash film. http://translate.google.co.jp/translate?hl=ja&sl … > どのようなソフトウェアプログラムがそれを作成するために使用された？ >　私はMayaを使用。しかし、ネット上でこの映画の本当のブレークスルーは、 >　唯一の私はベクトルにそれをレンダリング後だったとFlash映画にそれを作った。
書かれていらっしゃる imgLoader は Loaderインスタンス を参照する変数です。 そこが理解できていないのではないかと思います。 まず 書かれていらっしゃるスクリプトをちゃんと動作するように書き換えた上で 一部に注釈行を加えます。 ------------------------------ var mc:MovieClip = new MovieClip(); //Loaderインスタンスを作成し //そのインスタンスを参照する変数imgLoaderを //このタイムラインに用意 var imgLoader:Loader = new Loader(); var path:URLRequest = new URLRequest("materials/key_550.swf"); var childSwf:MovieClip; //変数imgLoaderが参照するインスタンスに //指定ファイルをロード imgLoader.load(path); imgLoader.contentLoaderInfo.addEventListener(Event.COMPLETE,compLoader); function compLoader(evt:Event):void { //mc内に imgLoaderが参照するインスタンスを配置 mc.addChild(imgLoader); addChild(mc); //★変更：変数childSwfにimgLoader内コンテンツの参照を代入 childSwf = imgLoader.content as MovieClip; //★追加：関数startGOGOを実行 startGOGO(); } //関数startGOGOの定義 function startGOGO():void { childSwf.keyContMove(); } ------------------------------ とりあえずはココまで↑を理解してみてください。 > //ここをimgLoader.content as MovieClipとすると > いけるのですが、mcの子のloaderと指定したいのです。 なぜそのようなこと(変なこと)をする必要があるのかさっぱりわかりませんが もしそうするのであれば上記スクリプトをさらに次のように変更する必要があります。 ------------------------------ var mc:MovieClip = new MovieClip(); //★変更：Loaderインスタンスを作成し //そのインスタンスを参照する変数imgLoaderを //mc内に用意 mc.imgLoader = new Loader(); var path:URLRequest = new URLRequest("materials/key_550.swf"); var childSwf:MovieClip; //★変更：mc内の変数imgLoaderが参照するインスタンスに //指定ファイルをロード mc.imgLoader.load(path); mc.imgLoader.contentLoaderInfo.addEventListener(Event.COMPLETE,compLoader); function compLoader(evt:Event):void { //★変更：mc内に mc内の変数imgLoaderが //参照するインスタンスを配置 mc.addChild(mc.imgLoader); addChild(mc); //★変更：変数childSwfにmc内の //imgLoader内コンテンツの参照を代入 childSwf = mc.imgLoader.content as MovieClip; //関数startGOGOを実行 startGOGO(); } //関数startGOGOの定義 function startGOGO():void { childSwf.keyContMove(); } ------------------------------ 繰り返しますが 　○○ = new □□(); で作成される ○○ は インスタンスを参照する変数です。 　
for文 で一気にループさせるからおかしくなるのではないでしょうか？ まずは「いつ」，「何をするのか」をちゃんと考えなければならないと思います。 次のような感じで ご質問で書かれていらっしゃる日本語文のような感じに動きませんでしょうか。 ------------------------------------------ //カウンタとなる変数 cntA を定義 var cntA:int = 0; //A_positiveを動かす 関数「moveA」 を定義 function moveA(e):void { //A_positive の x座標を line_○ の x座標 に移動 A_positive.x = this["line_" + cntA].x; //もし cnt_A が 2 未満 であれば cnt_A に 1 を加算 //それ以外(2以上)であれば 0 に戻す cntA = (cntA < 2) ? cntA+1 : 0; } //関数「moveA」を即実行 moveA(null); //Timerインスタンス tmerA を作成(1秒間隔 , 無限回) var tmerA:Timer = new Timer(1000,0); //指定秒間隔で 関数「moveA」 を実行 tmerA.addEventListener(TimerEvent.TIMER, moveA); //タイマースタート tmerA.start(); //---↓勝手な付け加え↓--- //A_positive をクリックしたときも 関数「moveA」 を実行 A_positive.addEventListener(MouseEvent.CLICK,moveA); ------------------------------------------ Google検索「配列アクセス演算子」 http://www.google.co.jp/webhp?hl=ja#hl=ja&q=%E9% … Google検索「ActionScript 三項演算子」 http://www.google.co.jp/webhp?hl=ja#hl=ja&q=Acti … ※上記スクリプトでは 　 カウンタのアップに三項演算子を使っていますが 　 これは使わず普通に if文 でも良いです。
次のような感じで良いのではないかと思います。 var mc:Fukidashi = new Fukidashi(); //初期値がtrueのフラグでも用意しておく var flag:Boolean = true; A_btn.addEventListener(MouseEvent.CLICK,xClick); function xClick(evt:MouseEvent):void { //もしflagがtrueであれば if (flag) { mc.alpha = 0; addChild(mc); mc.x = 0; mc.y = 0; mc.addEventListener(Event.ENTER_FRAME,imgAlpha); function imgAlpha(event:Event):void { mc.alpha += 0.05; if (mc.alpha>1) { mc.removeEventListener(Event.ENTER_FRAME,imgAlpha); } } //フラグをfalseにする flag=false; //もしフラグがfalseであれば } else { removeChild(mc); //フラグをtrueにする flag=true; } }
いろいろ情報不足なところがありますが、ActionScriptのバージョンは？
SWFだけで設定できるのでしたら，サーバにとっては何のセキュリティーにもならないと思いますよ。 検索例：「クロスドメイン ポリシー SWF XML」 http://www.google.co.jp/search?hl=ja&q=%E3%82%AF …
実際に動作検証はしていませんが こんな感じでできませんでしょうか。 for (var i:int=1; i<=100; i++) { Tweener.addTween(list["a" + i], {alpha:1, time:1}); } http://www.google.co.jp/search?hl=ja&q=%E9%85%8D …
ブラウザは？ （1）複数のバージョンの Flash がインストールされていないか有無確認 （2）DLM 拡張機能を削除 （3）Flash を削除 その他参考URL http://support.mozilla.com/ja/kb/Flash%20%E3%81% … ＞上下に長いページの下のほう タスクトレイ上で右クリック「タスクバーを固定する」のチェックを外してマウスで、下へ、タスクバーを消し画面右下斜め矢印をマウスで、上下に長いページ画面を短くし、スクロールしなくてもよくする（右クリック「タスクバーを固定する」のチェックをつける）
親元のページが 真っ白画面で[object] 状態になるのは、 window.open の実行で戻り値 「Wondowオブジェクト」 が返ってくるからだと思います。 戻り値表示を回避するには link_mc をクリックしたときの動作を以下のようにすれば良いと思います。 組み合わせによって数通りの書き方ができますが 一応、３～４例書いてみます。 ※「AAA.html」 は、仮リンク先URL です。 ※getURL の ( ) 内が改行しているように 　 見えるかもしれませんが改行ナシの１行です。 --------------------------- // link_mc をクリックしたときの動作を定義 link_mc.onRelease = function() { // リンク先 を 別窓で開く getURL("javascript:if(window.confirm('外部ページを開きます')){window.open('AAA.html');void(0)}"); }; --------------------------- 　　↑または↓ --------------------------- // link_mc をクリックしたときの動作を定義 link_mc.onRelease = function() { // リンク先 を 別窓で開く getURL("javascript:if(window.confirm('外部ページを開きます')){void(window.open('AAA.html'))}"); }; --------------------------- 　　↑または↓ --------------------------- // link_mc をクリックしたときの動作を定義 link_mc.onRelease = function() { // リンク先 を 別窓で開く getURL("javascript:window.confirm('外部ページを開きます') ? void(window.open('AAA.html')) : void(0)"); }; --------------------------- あと、 「ものは試し」と思ってやってみましたら これでもできました↓。 --------------------------- // link_mc をクリックしたときの動作を定義 link_mc.onRelease = function() { // リンク先 を 別窓で開く getURL("javascript:if(window.confirm('外部ページを開きます')){window.open('AAA.html')};this.href"); }; --------------------------- 以上では 一応 ActionScript の修正案を書いていますが 内容的には ActionScript は全く関係なくて、 全て JavaScript の仕様に対する対処法ですよ。 (HTML から a href を実行するときの対処法でも同様の事項が出てきます。) 　 　 ＝/＝/＝/＝/＝/＝/＝/＝/＝/＝/＝ その他 Suzuka で [SWF8] を生成する設定にしている場合は ExternalInterface クラスが使えますから これを使ってみても良いかもしれません。 ※同じく 「AAA.html」 は、仮リンク先URL です。 ※同じく ExternalInterface.call の ( ) 内が 　 改行しているように見えるかもしれませんが 　 改行ナシの１行です。 --------------------------- // link_mc をクリックしたときの動作を定義 link_mc.onRelease = function() { // リンク先 を 別窓で開く flash.external.ExternalInterface.call("function(){if(window.confirm('外部ページを開きます')){window.open('AAA.html')}}"); }; --------------------------- 　
＃１です。 > 今回のケースはA_mcの起点がトップレフトにあり… 起点？ 起点ではなくてそこが "基準点" なのではないですか？ 「インスタンスの基準点」 http://homepage3.nifty.com/ginga-b/MX/inst_refpo … そうでしたら， 次のようにすれば良いでしょう。 A_mc.x = stage.stageWidth*0.5 - A_mc.width*0.5;
No1の者です。 すいません＞＜ 記述に間違いがありました。 ▼HTML例） <div id="eveimg0"> <object type="application/x-shockwave-flash" data="動画.swf" style="width:570px;height:317px"> <param name="movie" value="動画.swf" valuetype="ref" type="application/x-shockwave-flash"> <param name="bgcolor" value="#ffffff"> <param name="loop" value="false"> <param name="quality" value="high"> </object> </div> <div id="eveimg1"><img src="画像.jpg" /></div> ...(省略 文字数制限で書ききれない)... <div id="eveimg8"><img src="画像.jpg" /></div> <ul id="imgmenu"> <li><img src="切替ボタン1" onclick="changeImg(1);" /></li> ...(省略 文字数制限で書ききれない)... <li><img src="切替ボタン8" onclick="changeImg(8);" /></li> <!-- ←ここ「1」じゃなくて「8」です --> </ul> えっと、ボタンを押すと全部消えちゃうって事ですが、 ----- <div id="eveimg0">ブロック</div> <div id="eveimg1">ブロック</div> <div id="eveimg2">ブロック</div> <div id="eveimg3">ブロック</div> <div id="eveimg4">ブロック</div> <div id="eveimg5">ブロック</div> <div id="eveimg6">ブロック</div> <div id="eveimg7">ブロック</div> <div id="eveimg8">ブロック</div> ----- <ul id="imgmenu"> <li>切替ボタン1</li> <li>切替ボタン2</li> <li>切替ボタン3</li> <li>切替ボタン4</li> <li>切替ボタン5</li> <li>切替ボタン6</li> <li>切替ボタン7</li> <li>切替ボタン8</li> </ul> 細かい指定はともかく、上記のようになってますか？^-^; <div id="eveimg0"> <div id="eveimg1">ブロック</div> </div> のように、divの中にdivが入ってたりしてませんか？ 次のものが原因かわかりませんが、 Flashのparamの以下を追加してみて下さい。 <param name="wmode" value="transparent">
別の "TOP" シーン にジャンプした後も， addEventListener(Event.ENTER_FRAME, updateDate2); が有効になり続けるため 各針への参照が切れてしまうのが原因ではないかと思います。 フレーム1 のスクリプトを 次のように変更すると(1行付け加えると) 無事にパブリッシュできるような気がします。 top2nd_btn.addEventListener(MouseEvent.CLICK, fl_top22); function fl_top22(event:MouseEvent):void { //１フレーム進む時間ごとに毎回 //updateDate2 を実行させるのを取り消す↓ removeEventListener(Event.ENTER_FRAME, updateDate2); gotoAndPlay(1,"TOP"); }
あるMCをクリックした時に， そのMCの参照を，ある変数に保存します。 そして次のMCをクリックした時に， 前(上↑)で登録しておいたMC内を ラベル"A" に進めて クリックしたMC自体を ラベル"C" に進めれば良いのではないでしょうか。 (そしてそのMCの参照をある，変数に保存する。) 具体的にはこんな感じで↓。 //クリックしたMCを登録する変数を宣言しておく var clickMC:MovieClip; A_mc.addEventListener(MouseEvent.CLICK,Click); A_mc.addEventListener(MouseEvent.ROLL_OVER,Over); A_mc.addEventListener(MouseEvent.ROLL_OUT,Out); B_mc.addEventListener(MouseEvent.CLICK,Click); B_mc.addEventListener(MouseEvent.ROLL_OVER,Over); B_mc.addEventListener(MouseEvent.ROLL_OUT,Out); function Over(event:MouseEvent):void { event.target.gotoAndPlay("B"); } function Out(event:MouseEvent):void { //ロールアウトしたMCが登録したMCでなければ if (clickMC != event.target) { //ロールアウトしたMCをラベル"A"に進めて再生 event.target.gotoAndPlay("A"); } } function Click(event:MouseEvent):void { //クリックしたMCが未登録でなければ if (clickMC != null) { //登録しておいたMCをラベル"A"に進めて再生 clickMC.gotoAndPlay("A"); } //クリックしたMCをラベル"C"に進めて再生 event.target.gotoAndPlay("C"); //クリックしたMCを登録 clickMC = MovieClip(event.target); } A_mc.buttonMode = true; B_mc.buttonMode = true;
答え自体は簡単に書けるのですが， 少し模索する方向がずれていらっしゃるように思うので その点を書きます。 とりあえずは 次のページを良く読んで理解してみてください。 「[AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html 　 ============================= 今回のご質問に ただ単に回答するだけでしたら 次のスクリプト↓で終わりです。 ------------------ bot1.addEventListener(MouseEvent.CLICK, onClick); function onClick(e:MouseEvent):void { trace(e.target.name); } ------------------ または上記の trace(e.target.name); の部分を trace(e.currentTarget.name); のようにしても良いです。 　 ============================= しかし... 　「そのインスタンス名を取得して何かメリットがありますか？」 というのが 最初に書いた「[AS3] MovieClipインスタンスとインスタンス名」のページに書かれてあることです。 インスタンス名を取得する必要など普通はないと思います。 たとえば 　「bot1 をクリックしたときに bot1 を右に 20px 移動させる」 とします。 その場合は次のようにすれば良いだけです。 ------------------ bot1.addEventListener(MouseEvent.CLICK, onClick); function onClick(e:MouseEvent):void { e.target.x += 20; } ------------------ インスタンス名など出てきません。 でも確かにインスタンス名のような名前が必要な場合も出てきますよね。 しかし，その場合も次のようにすれば良いだけです。 ------------------ bot1.addEventListener(MouseEvent.CLICK, onClick); function onClick(e:MouseEvent):void { var my_mc:MovieClip = MovieClip(e.target); my_mc.x +=20; } ------------------ これは 　インスタンスを名指しで呼びたいときには 　インスタンス名や最初の変数名など関係なく 　勝手にインスタンスを参照する変数を作って 　その名で呼べば良いでしょう ということです。 最初に書いたページに書かれてある 「変数によりインスタンスを参照するというのが、ActionScript 3.0の基本だといえます。」 の具体的な一例にもなっています。 　 　 話が前後しますが bot1.addEventListener(MouseEvent.CLICK, onClick); ここで使っていらっしゃる 「bot1」 も， この時点ではすでに 「インスタンス名」 ではありません。 この 「bot1」 は インスタンス名 と同名で自動命名されたそのインスタンスを参照する 「変数名」 なのです【図】↓。 その他 URL 「Adobe ActionScript 3.0* 変数と定数」 http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … 　
＃１ ＆ ＃２ です。 > 実際には、 > > function abcdOver(e:MouseEvent):void > { > var c:ColorTransform = new ColorTransform(); > c.color = (0xCCCCCC); > e.target.transform.colorTransform = c; > } > > にしたかったのですが、これは駄目でした。 駄目とはどういう状態なのでしょうか？ (駄目じゃないとはどういう状態なのでしょうか？) 他のものを除くと スクリプトは次のようにするということですよね？ -------------------------------- var btn_arr:Array = [aboutA_mc,aboutB_mc,aboutC_mc,aboutD_mc]; for (var i:int = 0; i<btn_arr.length; i++) { btn_arr[i].buttonMode = true; btn_arr[i].addEventListener(MouseEvent.ROLL_OVER,abcdOver); } function abcdOver(e:MouseEvent):void { var c:ColorTransform = new ColorTransform(); c.color = (0xCCCCCC); e.target.transform.colorTransform = c; } -------------------------------- もっとも c.color = (0xCCCCCC); ではなく c.color = 0xCCCCCC; だとは思いますが この場合は ( ) があっても意味は変わりませんからこのままでも良いです。 うまく行っていると思いますが【添付図】↓ 　 　 と言いますか，【添付図】の場合は ただ単に var c:ColorTransform = new ColorTransform(); c.color = (0xCCCCCC); aboutB_mc.transform.colorTransform = c; と書いたときと変わらないということです。 (for文 や 配列 などを使おうが使わまいが同じ結果になる。)＝(問題ない。)
ユーザーがサイト(コンテンツ)を見たときの日付を取得して、 それに対応したフレームに自動的に飛ぶようにするということでしょうか？ new Date()でユーザーのローカル時間を取得できるので変数に入れます。 ver hizuke = new Date(); ムービークリップのインスタンス名をtest_mcとするなら すべての日付で移動させる条件をそれぞれ入れていけば if(hizuke == 1){ //１日に対応するフレームが2なら test_mc.gotoAndStop(2) }else if(hizuke == 2){ //２日に対応するフレームが5なら test_mc.gotoAndStop(5) }else if(hizuke == 19){ test_mc.gotoAndStop(9) }else if 以下同じ ・ ・ ・ }else if(hizuke ==31){ gotoAndStop(50) } とすればいいように思います。 日付と対応するフレームに規則性があるならもっと単純に (例えば日付＋５が対応するフレーム数なら) ver idou = new Date()+5; test_mc.gotoAndStop(idou); と出来ると思います。 見当違いな回答だったならすみません。
ActionScriptですか？ 使っても良いですが使わなくても良いでしょう。 と言うか ActionScriptを使わない方法ができてから 気が向いたら使ってみても良いかもしれません(？)。 要するにどう見ても "単なるボタン" です。 ロールオーバー(マウスオーバー)で オーバーフレームに遷移するだけの超単純なボタンで， アップ・オーバー・ダウン・ヒット フレームのうち アップとオーバーフレームに塗りや字を置けば良いだけです。 　 　 ～作り方～ ステージ上に矩形ツールで濃いグレーの透明な塗りの四角を描きます。 (例：色が #333333 で アルファ が 0％ の塗り) その四角を選択して「修正」→「シンボルに変換」をします。 このとき「シンボルに変換」ダイアログで，タイプを「ボタン」にして「OK」します。 シンボルに変換されたステージ上のボタンインスタンスをダブルクリックして，ボタン内のタイムラインの編集に入ります。 ボタン内のタイムライン には 「アップ」「オーバー」「ダウン」「ヒット」というフレームがあって 「アップ」フレームだけに塗りがある状態だと思いますから 「オーバー」フレームを選択して右クリックなどから「キーフレームに変換」を選択します。 すると「オーバー」フレームにも同じ塗りができるので その「オーバー」フレームの塗りだけを半透明にします。 (例：色が #333333 で アルファ が 50％ の塗り) 参考【図】↓(CS4 での操作画面例) ステージ上の何もないところをダブルクリックするなどして メインのタイムラインの編集に戻り 「制御」→「ムービープレビュー」で確かめればボタンの動きがわかると思います。 それだけのことです。 ボタンの下レイヤーでスライドショー的なアニメーションを作れば良いだけですね。 　 参考URL 「ボタンを理解しよう！」 http://1art.jp/flash/le/lesson8/lesson8.htm 　 ちなみに 色が #000000 でなく，#333333 という妙に落ちつかない色を書いたのは，CS3 や CS4 辺りに変なバグがあるためです。 http://level0.kayac.com/2009/11/black_transparen … --- --- --- 別にActionScriptを使っても良いとは思います↓。 「ActionScript 3.0に対応したMovieClipのボタンをつくる」 http://fumiononaka.com/TechNotes/Flash/FN0706001 … しかし， 今回のものの場合は手間をかけても同じ物ができるだけですから ActionScript を使っても面倒が増えるだけだと思います。 　 --- --- --- なお ボタンクリック時(書かれているFlashの場合はボタンプレス時)に 別ページに行きますが，それにはスクリプトが要りますよ。 ActionScript 1.0 や 2.0 なら getURL， ActionScript 3.0 なら navigateToURL とそれにまつわる諸々。 でも 「それはそれ」 です。 今回の質問内容とは何の関係もしません。 　
それは基本的にブラウザに細かい命令をするわけですから ActionScript(SWF内部的なこと) ではありません。 そういう仕事を直接するのは JavaScript です。 Flash でできることは， そういうブラウザ制御の JavaScript を呼び出すくらいです。 このようなこと↓を Flash のボタンなどから実行させます。 ■同じサブウィンドウで表示するページを切り替えよう http://www.d3.dion.ne.jp/~tiyoko01/java/subwin/s … ↑上のJavaScriptをそのまま使わせてもらうことにします。 ◎ファイル構造例 　任意のフォルダ 　　　├AAA.html(AAA.SWFを貼り付ける) 　　　├AAA.swf 　　　├TEST1.html 　　　├TEST3.html 　　　└TEST3.html 　 　 ◎AAA.html の HTMLソース 例 --------------------------- <html> <head> <title>AAA</title> <script type="text/javascript"> <!-- function subWins(pages) { w=window.open(pages,"mado","width=300,height=300,left=350"); w.focus(); } //--> </script> </head> <body> <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cab … width="550" height="400" id="AAA" align="middle"> <param name="allowScriptAccess" value="always" /> <param name="movie" value="AAA.swf" /> <param name="quality" value="high" /> <embed src="AAA.swf" quality="high" width="550" height="400" name="AAA" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash" /> </body> </html> --------------------------- 　 　 ◎AAA.swf AAA.swf のステージ上には 「btn1」，「btn2」，「btn3」 というインスタンス名を付けたボタンがあるとします。 それらのボタンがあるフレームに書くスクリプト例↓ --------------------------- btn1.addEventListener(MouseEvent.CLICK,btn1Click); function btn1Click(e:MouseEvent):void { ExternalInterface.call("subWins", "TEST1.html"); } btn2.addEventListener(MouseEvent.CLICK,btn2Click); function btn2Click(e:MouseEvent):void { ExternalInterface.call("subWins", "TEST2.html"); } btn3.addEventListener(MouseEvent.CLICK,btn3Click); function btn3Click(e:MouseEvent):void { ExternalInterface.call("subWins", "TEST3.html"); } --------------------------- 　
> もし、お時間があれば、コードの解説もお願いしたいのですが。。。 字数の制限もありますし ＃１ の 第二案 の方がご質問の元に近いので そちらの方をメインに書きます。 　 ◎第二案(コメント入り) ------------------------ //各ボタンMCへの参照を配列「btn_arr」に登録 var btn_arr:Array=[btnA_mc,btnB_mc,btnC_mc]; //文字列 A と B と C を配列「lbl_arr」に登録 var lbl_arr:Array=["A","B","C"]; //変数 i を 「0」 ～「配列btn_arrの要素数未満」 まで //1ずつ加算しながらループ for (var i:int = 0; i<btn_arr.length; i++) { //各ボタンMC内の変数nに現在の変数iの値を固定する btn_arr[i].n = i; //各ボタンMCのボタンモードを有効にする btn_arr[i].buttonMode=true; //各ボタンMCクリック時に関数abcClickを実行 btn_arr[i].addEventListener(MouseEvent.CLICK,abcClick); } //関数abcClickの定義 function abcClick(e:MouseEvent):void { //このタイムラインを 配列lbl_arrの //自分自身（クリックしたMC）内に固定した //n要素のラベルに行かせて再生 this.gotoAndPlay(lbl_arr[e.currentTarget.n]); // //変数 i を 「0」 ～「配列btn_arrの要素数未満」 まで //1ずつ加算しながらループ for (var i:int = 0; i<btn_arr.length; i++) { //各ボタンMCクリック時に関数abcClickを実行 btn_arr[i].addEventListener(MouseEvent.CLICK,abcClick); } //ただし自分自身（クリックしたMC）自体をクリックした時に //関数abcClickを実行するのを削除 e.currentTarget.removeEventListener(MouseEvent.CLICK,abcClick); } ------------------------ 最初に出てくる 配列「btn_arr」 の各要素には ３つあるボタンMCの参照を代入しています。 最初の１行をバラバラに書くと次のように書き替えられます。 var btn_arr:Array = new Arry(); btn_arr[0] = btnA_mc; btn_arr[1] = btnB_mc; btn_arr[2] = btnC_mc; これで，要素数(Array.length)が 3 の配列ができます。 ですから下に出てくる for文 は for (var i:int = 0; i<3; i++) のようにループされることになります。 つまり i=0 状態で １回目ループ i=1 状態で ２回目ループ i=2 状態で ３回目ループ i=3 状態になると 3 未満という条件が成立しないのでループせずに for文 を抜けます。 その for文 内で 各ボタンMC 内の変数 に i の値を代入したり クリック時のイベントリスナーを登録しています。 そんな感じです。 第一案 の方も第二案 とほとんど同じですが， 「クロージャ」というもの(関数)を使っているところが大きく違います。 Google などで 「クロージャ」 を軸に(例「クロージャ+ActionScript」などと) 検索してみてください。
質問されている内容は、シンプルに書かれてますが、 実際、行うにはかなり骨の折れる作業かと思います。 まず、辞書データが必要ですよね。 フリーであれば、 EPWINGとかPDICというものがありますから辞書データを持ってくる必要が あります。詳細は以下のサイトなどに載ってます。 http://kazuo.fc2web.com/dic/ddwin2.htm 次に、音声データが必要ですよね。 音声データは、Text To Speechのように、音声合成する場合と WAVデータを用意する場合が考えられると思います。 Text To Speechの場合は、以下のサイトが参考になるでしょう。 http://www.sp.nitech.ac.jp/demo/open_jtalk/index … WAVデータも探せばフリーのものもあるかもしれませんが、 難しいのではないかと、個人的には思います。 辞書、音声共に無償で手に入ったとしても、Webサイトで利用可能かは ライセンスによりますから、ライセンス規約を読んで確認しないといけないですよね。 辞書のデータは数万後～数十万語ありますから、自前で作るのは すごく骨が折れる作業かと思いますし、 有料で頼む場合はそれこそ、かなりの額がかかる事かと思います。 これらのデーターベースをとりあえず無償で使ってよいとなった場合、 自前のデーターベースに一旦、データーを格納してから 逐次対応したデータを引き出す作業にいなると思います。 まずは、データーベースの構築になると思いますから、 MySQLやPostgreSQLなどのデーターベースを用いるのが一般的かと思います。 これらの使い方を覚えた後、phpまたはperlなどの勉強をして、 データベースにアクセスする方法を確認し、Webサイトに実装する形になると思います。 これらのサイト構築には、サーバー構築の知識も多少居ると思います。 無料でやるならApacheとか。 それとも、4,5個の少ない単語でいいのですか？ であれば、jsぐらいで作れるとは思うのですが。
IEのエンジン以外のブラウザでは、別のFlash Playerを入れる必要がありますが、既にインストール済みですか？ Firefoxで次にアクセスして、「今すぐダウンロード」から、Install_Flash_player.exeをデスクトップに保存して、Firefoxを終了し、exeファイルをダブルクリックしてインストール手順になります。 http://get.adobe.com/jp/flashplayer/ インストールマネージャーが開いて、「インストールすることを許可」するチェック箇所にチェックを入れて、インストールしないと失敗します。
「意味(現状＆したいこと＆バージョン)がわからん！」 過ぎますよ。。。 そもそも「シンボル」などと書かれていらっしゃること自体が「ワケワカラン！」 ですが， これは単に 「インスタンス」 の書き間違いか，"認識＆理解" 不足だと解釈します。 フレーム１ではシンボル１(インスタンス1)が上に表示され フレーム２ではシンボル２(インスタンス2)を上に表示させる。 そうするには， 単に書かれていらっしゃる通りに，そのままそうすれば良いだけでしょう？ 図↓(Flash CS4 での画面例) バージョンもわかりませんし， 具体的に何を意味した文章なのかがわからない。 (誰にもその立場はわからない自分の立場でしか物を言えない自己中？) それは言い過ぎだとしても 何にしても質問に手を抜くのにもほどがありますね(さじ投げ状態)。 ※もちろんそのような質問で 　 まともな回答など期待されていないとは思いますが 　 釣られてみました。 ※少なくとも 　 ご質問よりはこの回答の方が真剣で時間もかけていると思いますよ。
フレームレートの設定はいくつになっていますか？ これが1とかになっているといくら軽くてもカクカクします。 PCに積んでるメモリが少ない場合も同様です。 タスクマネージャとにらめっこして、FlashPlayer(またはIExplorerなど)の CPU使用率が異様に上がる場合、Flashムービー自体が重いのでしょう。 再生したままウィンドウを最小化すると計算だけして描画はされないため、 描画が重いか、計算が重いか判別できます。
ライブラリ内に「test_mc」というクラス名を付けた 200×100pxのムービークリップを用意して観察してみましたが 伸びたり縮んだり現象は起きないように見えましたよ(Windows環境)。 ちなみに，関数 testEF 内を次のようにして ムービープレビュー状態でしばらく放置してみました。 function testEF(evt:Event):void { mc.y += testNum; if (mc.y<=0||mc.y>=400) { testNum*=-1; trace(getTimer()/1000 + "秒経過，height…" + mc.height); trace(getTimer()/1000 + "秒経過，scaleY…" + mc.scaleY); } } 結果↓ 14.962秒経過，height…100 14.962秒経過，scaleY…1 34.962秒経過，height…100 34.962秒経過，scaleY…1 54.962秒経過，height…100 54.962秒経過，scaleY…1 　～ 略 ～ 602.928秒経過，height…100 602.928秒経過，scaleY…1 624.301秒経過，height…100 624.301秒経過，scaleY…1 645.403秒経過，height…100 645.403秒経過，scaleY…1 　～ 略 ～ 1013.313秒経過，height…100 1013.313秒経過，scaleY…1 1033.313秒経過，height…100 1033.313秒経過，scaleY…1 1053.313秒経過，height…100 1053.313秒経過，scaleY…1 数値で見てみてもやはり伸びたり縮んだり現象は起きていないようです。 　 　 作るときに何か妙なことをしていなければ なんとなく Mac の スタンドアローン版(デバッグ版) Flash Player のバグではないかと思います。 ブラウザ用 Flash Player で見たときも同じように伸びたり縮んだり現象が起きますか？ もし起きなければ， オーサリング環境だけで起きることなので気にすることはないのではないかと思います。。。(多分) かつて Flash Player 4 (Flash Lite 1.x) でも似たようなバグがありました。 MC の rotation を随時変えて MC を回転させ続けると MC が拡大したり縮小したりするという現象です。 (例：Flash Lite 1.1 用のアナログ時計を作ると，針が伸び続けたり縮み続けたりする。) このときは MC の scaleX と scaleY を定期的に 1 にするというような方法でみなさん対処されていたようです。 (実際には ActionScript 1.0 なので，MC の _xscale と _yscale を 定期的に 100 にしていたのですが。) もし ブラウザ用 Flash Player で見たときにも伸びたり縮んだり現象が起きるのでしたら 上のように対処してみても良いかもしれません。 つまり mc の scaleY を Event.ENTER_FRAME で 1 にし続けるというようなことをしてみても良いかもしれません。
#1 > trace( ''+e.target.currentCount ）; > という部分にエラーがでますが、なぜでしょうか？ > 何度もすみません。よろしくお願い致します。 タイマーのイベントをトレースしているだけなので、 動かないのであれば、コメントアウトするなり削除するなりしてください。 また、参考URLのマニュアルをみながら、 提示したコードをたたき台にし、目的にあったコードに書き換えて下さい。
> そもそもこのswfにはタイムラインという概念が存在しないので 私は After Effects を持っていないので何とも言えませんが 普通，動画作成＆編集ソフトで作成した動画は タイムラインという概念 "しか" 持たないと思いますよ。 つまり， 普通の動画は スクリプト や 座標 や様々なプロパティ という概念が存在せず， タイムラインだけがあると思います。 (もしくは タイムライン を格納したオブジェクト(MC)があるかです。) あと，私の勝手な推測ですが， After Effects で生成される SWF は ActionScript 2.0 (AVM1エンジン規格)設定で作成された SWF ではないかと思います。 その辺は After Effects のバージョンや設定に依存すると思うので SWF ファイルを見てみないと何とも言えません。 何とも言えないので ActionScript 3.0 設定(AVM2エンジン規格) の場合と合わせて ActionScript 2.0 の場合のスクリプト例も書いておきます。 ◎もし After Effects で生成された SWF が 　 ActionScript 3.0 設定の SWF であった場合 ----------------------------- var loader:Loader = new Loader(); var newSWFRequest:URLRequest = new URLRequest("swfs/" + "test" + ".swf"); loader.load(newSWFRequest); addChild(loader); //loaderにSWFの最初のフレームがロードされたとき関数 onInit を実行 loader.contentLoaderInfo.addEventListener(Event.INIT,onInit); //関数 onInit の定義 function onInit(e:Event):void { //loader内のコンテンツの再生を停止 MovieClip(loader.content).stop(); } ----------------------------- ◎もし After Effects で生成された SWF が 　 ActionScript 2.0 設定の SWF であった場合 この場合 そのSWFをロードする 親SWF もActionScript 2.0 設定で作成する必要があります。 その場合のスクリプト例↓ ----------------------------- //ムービークリップ「loader」を最高深度に作成 var loader:MovieClip = createEmptyMovieClip("ld",getNextHighestDepth()); //MovieClipLoader「mcl」を作成 var mcl:MovieClipLoader = new MovieClipLoader(); //リスナー用オブジェクト「obj」を作成 var obj:Object = new Object(); //「mcl」のリスナーとして「obj」を登録 mcl.addListener(obj); //SWFをロード mcl.loadClip("swfs/" + "test" + ".swf",loader); //loaderにSWFの最初のフレームがロードされたときに実行 obj.onLoadInit = function():Void{ //loader内の再生を停止 loader.stop(); } ----------------------------- 最低ラインこの辺までやってみて その結果からこの先の対策を検討し その後， この件とは別に「逆再生」などの方法を思考・模索し もしわからなければその方法を問うべきでしょう。 （段階を跳び越えすぎですよ。）
ActionScript 1.0＆2.0 の場合 MC(ムービークリップ)に外部SWFをロードすると その外部SWFはそのMC自体と同じ存在になります。 ですからロードするしないは関係なく， 「ターゲットパス」さえ理解していれば MCプ内にボタンを置いたと思って考えるだけで 普通の場合と変わらずできると思います。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath … > ムービークリップ（loadいう名にしています） そういう紛らわしいネーミングは混乱や誤作動の原因になるだけです。 「index.swf」内にある「content.swf」をロードするMCには 「load_mc」というインスタンス名を付けてあるものと変えます。 また 「content.swf」内のボタンには 「cnt_btn」というインスタンス名を付けてあるものとします。 ◎階層構造 　index.swfの_root 　　└load_mc(MC) 　content.swfの_root 　　└cnt_btn(ボタン) ◎スクリプト例 ○場合1-1 　 cnt_btn自体に書くスクリプト例(絶対パス) on (release) { _root.gotoAndStop("move"); } ○場合1-2 　 cnt_btn自体に書くスクリプト例(相対パス) on (release) { this._parent.gotoAndStop("move"); } ○場合2-1 　 cnt_btnを置いたフレームに書くスクリプト例(絶対パス) cnt_btn.onRelease = function():Void { _root.gotoAndStop("move"); }; ○場合2-2 　 cnt_btnを置いたフレームに書くスクリプト例(相対パス) cnt_btn.onRelease = function():Void { this._parent._parent.gotoAndStop("move"); }; ※cnt_btnを置いたフレームとはつまり， 　 content.swf 内のメインタイムラインのフレームのことです。 ※場合1-2 と 場合1-2 は 　 ActionScript 1.0 の範囲内のスクリプトです。 　 (パブリッシュ設定 は ActionScript 1.0 にしていても 　 2.0 にしていても どちらでもかまいません。) 　 一方 　 場合2-1 と 場合2-2 は Voidキーワード を含むため 　 ActionScript 2.0 の範囲内のスクリプトです。 　 (パブリッシュ設定 を ActionScript 2.0 にしてないと 　　エラーが出ます。)
単に ボタンをクリックする度に， Loader インスタンスを作成し続けるから変になるのだと思います。 外部 SWF は Loader にロードされるのですよ。 ムービークリップ ではなく ムービークリップ内 の Loader にロードされるのです。 そのイメージをしっかり持ってください。 変更例↓ ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ //↓Loaderは１つで良い var ld:Loader = new Loader(); MovieClip(parent).main_mc.mc1.addChild(ld); btn1.addEventListener(MouseEvent.CLICK,link1); function link1(event:MouseEvent):void { var req:URLRequest=new URLRequest("movie.swf"); ld.load(req); } //---同階層にbtn2があってmovie2.swfをロードする例--- btn2.addEventListener(MouseEvent.CLICK,link2); function link2(event:MouseEvent):void { var req:URLRequest=new URLRequest("movie2.swf"); ld.load(req); } ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
＃２です。 ついうっかり書き間違いです。失礼しました。 > 例えば _root ある変数 「hensuu」 に 　　↓修正変更↓ 例えば root にある変数 「hensuu」 に です。 _root ではなく root です。 ActionScript 3.0 流に言うなら 『例えば MovieClip(root).hensuu に』　です。
タイムラインに動画を埋め込んだ場合、flaファイルのfpsで動画が再生されます。 動画のfpsとflaファイルのfpsは同じ値になっていますか？ なお動画を外部から読み込む場合はfla側のfpsには依存されません。
はじめまして。 自分も同じ用な経験があります。私の場合は再生されるＰＣによってギザギザになったりならなかったりします。今でも原因はよく分かっていません。 色々試してみた結果(独学)ですのでもっと正しい方法があるのかもしれませんが参考程度に。 又、自分はFlash8 Professional を使用していますので多少やり方が違うかも知れません。 まず、Illustratorで作成した画像をＰＮＧ形式で書き出します。 Flashで読み込み後、ライブラリの中の画像で右クリック(Windowsの場合ですが…)しプロパティを開きます。 圧縮形式を　ロスレス(PNG/GIF)　にします。 スムージングというチェックボックがあると思うのですがそれにチェックを入れます。 以上です。 私の場合は確かこれで解消できたと思います。 色々試してこれでうまくいったというだけですので正しいかどうかもわかりませんが…。 ケータイ用との事ですがファイルサイズに制限がありましたよね確か。 GIF画像を読み込むとサイズが大きくなってしまう恐れもあるので同じ方法が通用しないかもしれませんが。 非常に曖昧な回答の仕方で申し訳ないですが参考になれば幸いです。
検証のため 関数 makeTriangle をちょっと変更して ムービープレビューしてみました【図↓】。 Windows ですが 線の太さは特に変わらないように見えますが。。。？ ちなみに 上の図は stage.quality = StageQuality.HIGH; 下の図は stage.quality = StageQuality.LOW; を書いています。 さらにちなみに 関数 makeTriangle の 検証のための変更↓ //関数 makeTriangle の定義 function makeTriangle(e:Event):void { //(前のフレーム時間で)描画したものを消す //(↓修正した上でコメントアウト) //spriteAP.graphics.clear(); spriteAP.graphics.lineStyle(1,0x000000); //(↓重複しているためコメントアウト) //spriteAP.graphics.lineStyle(1,0x000000,1,false,"normal","round"); spriteAP.graphics.moveTo(A_mc.x,A_mc.y); spriteAP.graphics.lineTo(P_mc.x,P_mc.y); } 　
FlashVars は Flash Player 6 以上でできるようになった機能ですから Suzuka の場合は SWF4以外(SWF6以上) の SWF を生成する設定にしていれば普通にできると思いますよ。 FlashVars で SWF 内に送りこまれる変数名とその値は SWF の フレーム1 開始前に _root(_level0) に送り込まれますからそれを取ってくれば良いだけです。 ロード待ちをする必要もないので ActionScript 的には LoadVars (外部テキスト読み込み) より はるかに簡単です。 ◎ ファイル構造例 　任意のフォルダ 　　　├AAA.html 　　　└AAA.swf (例：横400px 縦300px) 　 　 ◎ AAA.swf のスクリプト例 メインタイムラインにアクションレイヤーを挿入して そのレイヤーのフレーム1に次のように書き【図↓】、 SWFの生成をします。 ------------------------------ //「txt0」と「txt1」というインスタンス名の //テキストフィールドを適当に作成 this.createTextField("txt0",0,10,10,100,20); txt0.border = true; this.createTextField("txt1",1,10,40,100,20); txt1.border = true; //「txt0」 に _root の変数 myVar0 の値を表示 txt0.text = _root.myVar0; //「txt1」 に _root の変数 myVar1 の値を表示 txt1.text = _root.myVar1; ------------------------------ 　 　 ◎ AAA.html のコード全文例 ------------------------------ <html xml:lang="ja" lang="ja"> <head> <title>AAA</title> </head> <body> <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/c … width="400" height="300" id="AAA"> <param name="movie" value="AAA.swf" /> <param name="FlashVars" value="myVar0=test0&myVar1=test1" /> <embed src="AAA.swf" FlashVars="myVar0=test0&myVar1=test1" width="400" height="300" name="AAA" type="application/x-shockwave-flash" /> </object> </body> </html> ------------------------------ これで AAA.html をブラウザで開けば検証できると思います。 　 　 テキストフィールド「txt0」と「txt1」は 値を人間が目で見るためだけに作ったもので、基本的には本題の FlashVars とは全く関係しません。 結局 _root.myVar0 と _root.myVar1 の値を取ってきて何かに使えば良いというだけです。 あと、_root は "あえて明示" しているだけです。 上記の場合は _root に書くスクリプト例ですから 別に _root など無くても良いです↓。 ---変更例--------------------- //「txt0」 に変数 myVar0 の値を表示 txt0.text = myVar0; //「txt1」 に変数 myVar1 の値を表示 txt1.text = myVar1; ------------------------------ 　
for や while でループの終了条件が成立せずループから抜け出せなくなった場合、システムのフリーズなど最悪の事態を避けるために、Flash Player は警告を出してスクリプトの実行を中断するかどうかを尋ねてきます。 その警告もこれと同様の措置です。一箇所で処理が延々と繰り返されるだけで先に進めなくなった時、システムを守るために強制的にスクリプトが中断されます。 例えば、関数内で自分自身を呼び出す”再帰呼び出し”において、再帰を終了する条件に不備があるとその警告が出ます。 //＊＊＊ //呼び出した回数 times = 0; //自分自身を呼び出す関数 function Self_Call() { //呼び出した回数を数える times++; trace( times ); //自分自身を再度呼び出す Self_Call(); } Self_Call(); //＊＊＊ 関数を呼び出すと、一旦もとの流れから外れて関数で定義された処理を行い、関数が終了すると、もとの流れに戻ってきて続きのスクリプトが実行されます。 ActionScript では関数内で自分と同じ名前の関数を呼び出すこともできますが、その際は、ある条件になったら呼び出しをやめるように設計しなければなりません。 しかし、上記のスクリプトでは呼び出しの終了条件を定めていないため、一度関数が呼び出されると延々と自分自身を呼び出し続け、もとの流れを遠く離れてどんどん支流に逸れていく一方です。 結局、いつまでも最初の Self_Call(); を終了することができないために、もとの流れには二度と戻れません。これはつまり、スクリプトの実行がこの一箇所で滞ってしまってここから先に進めないということなので、再帰呼び出しを 256 回繰り返した時点でスクリプトの実行そのものが強制的に打ち切られます。 ご質問の件は、何が原因で先に進めなくなっているのか分かりませんが、「特定の条件が成立するまで同様の作業を繰り返す」というような再帰的な特性を持つ処理に何か問題があるのではないでしょうか。 再帰呼び出しでは、終了条件を入れたつもりでも実は誤りがあって条件が成立せず、終了できなくなっていることがよくあります。 SharedObject に書き込むデータを収集する・ SharedObject から取り出したデータを解析して利用する処理あたりに、再帰的な特性があるように思います。 データが複雑すぎる入れ子構造になっていないかどうか、解析する時に終了条件がきちんと成立するかどうかなどを、確認してみてはいかがでしょう。
asにお気に入りに登録させるというAPIは用意されていません。 作るのであればflash側からjsをたたく形になると思います。
バージョンを書かれていらっしらないので回答するのに困るのですが， Flash MX 以上(Flash MX，MX 2004，8，CS3，CS4，CS5)をお持ちで Flash Player 6 以上用 SWF をパブリッシュ する(Flash Lite 1.1 は除く) ということで， ActionScript 1.0 (2.0 でも可) を使用するという条件で回答します。 また _root に配置した ムービークリップ「mc1」 内は １フレームまでしかない という条件で回答します。 > ２フレーム目から表示したい これを言い換えると 1フレーム目は表示させてはならない ということになりますよね。 その辺も考え合わせて スクリプトを例えば次のようにします。 ----------------------------------- //_root にある MC「mc1」に SWF をロード _root.mc1.loadMovie("＊＊.swf"); //その「mc1」の不透明度を 0(透明) にしておく _root.mc1._alpha = 0; //1フレーム進む時間ごとに毎回実行 _root.onEnterFrame = function() { //もし 「mc1」 のロードされたフレームが 2 フレーム 以上になれば if (_root.mc1._framesloaded>=2) { //「mc1」の不透明度を 100(全く不透明) にする _root.mc1._alpha = 100; //「mc1」を フレーム2 から再生 _root.mc1.gotoAndPlay(2); //この1フレーム進む時間ごとに毎回実行するメソッドを削除 delete _root.onEnterFrame; } }; ----------------------------------- フレーム2 に進ませる，つまり フレーム○ に進ませる ということは 少なくとも その フレーム○ が PC のメモリ上にロードされている必要があります。 ですから 少なくとも フレーム○ がロードされるまでは gotoAndPlay(○) の実行を待つ必要があります。 それで上のようなスクリプトになります。
exe の利点は ＃１ の方の書かれていらっしゃる通りだと思います。 ですから逆に exe の欠点を書きます。 第一の欠点は「Windowsでしか動かない」ということです。 第二の欠点(というか最大の欠点？)は，「何某か別のソフト内で動かせない」ということです。 Windows であっても IE の中では動かせません。 また PowerPoint 内や，その他 C# でプログラミングされたアプリケーションなどの中では普通は動作させることができません。 第三の欠点は Player込みの容量なので「ファイル容量が大きい」ということです。 ちなみに... Adobe や Macromedia の Flash 作成ツールを使っていらっしゃる場合 SWF を普通にダブルクリックなどで見ることができてしまいますが， これは Adobe や Macromedia の Flash 作成ツールを使っていらっしゃるからですよ。 Adobe や Macromedia の Flash 作成ツールをインストールされていない方は スタンドアローン版 Flash Player が 入っていないので SWF の単独起動はできません。 その点 ダブルクリック などで Flash のみを直接開ける exe は魅力的かもしれません(Windowsに限って)。 そんなこんなはありますが， exe を作って配布して良いことなどは，今はほとんどありませんよ。 （昔はありましたが...） 昔の機能を消すに消せなかった遺物のようなものだと思った方が良いです。 （今は AIR が主流ですし...）
点Aや点Bや点Cは それぞれ「A_mc」「B_mc」「C_mc」というインスタンス名を付けたムービークリップであったとします。 その場合の "フレームに" 書くスクリプト例です↓。 ============================== import flash.display.Shape; //---Shapeは先に作成＆配置--- var shape:Shape=new Shape(); //(↓状況が不明ですが一応元のままで) shape.x=200; shape.y=100; addChild(shape); //毎フレーム時間 関数 makeTriangle を実行 addEventListener(Event.ENTER_FRAME,makeTriangle); //関数 makeTriangle の定義 function makeTriangle(e:Event):void { //(前のフレーム時間で)描画したものを消す shape.graphics.clear(); //頂点の座標 var vertices:Vector.<Number> = Vector.<Number>([A_mc.x,A_mc.y,B_mc.x,B_mc.y,C_mc.x,C_mc.y]); //三角形の赤い塗りを描画 shape.graphics.beginFill(0xFF0000); shape.graphics.drawTriangles(vertices); shape.graphics.endFill(); } ============================== Event.ENTER_FRAME の箇所で 「毎フレーム時間」 と書いていますが これは 「１フレーム進む時間ごとに毎回」 という意味です。 　 　 　 なお， スクリプトを書いたタイムラインを "ループ再生させる" 場合 上記のスクリプトが何度も実行されると Shape が重複出没して変になります。 また 何度も同じスクリプトを実行させるのは無駄ですから 仮にフレーム1に上のスクリプトを書いた場合， 最終フレームなどには ============================== //１フレーム分タイミングを後にずらして //gotoAndPlay(2) を実行 addEventListener(Event.ENTER_FRAME, function():void { gotoAndPlay(2); removeEventListener(Event.ENTER_FRAME, arguments.callee); } ); ============================== のようなことを書いて， フレーム1が何度も表示されないようにする必要があります【図↓】。 (スクリプトを フレーム1 に書くのではなく ドキュメントクラスを使った場合は この辺の気配りや細工は要りませんが。) 　 　 　 逆に， タイムラインを最終フレームなどで止めて "ループ再生させない" 場合 三角形の描画が継続したままだと無駄(CPUなどの無駄遣いになるだけ)ですから 再生を停止させるフレームに次のように書いて ENTER_FRAME イベントでの関数実行を停止させるようにした方が良いです。 =========================== stop(); //毎フレーム時間 makeTriangle が実行されるのを取消 removeEventListener(Event.ENTER_FRAME,makeTriangle); =========================== 　
三角形の頂点全てにシェイプヒントを付けてみてはいかがでしょう。 動かす頂点にだけシェイプヒントを付けると、一時的に三角形ではなくなるなど中間の形状が正しくないアニメになりますが、全ての頂点にヒントを付けて１つの頂点を動かすと、その角だけが動くシェイプトゥイーンが作成されます。 ヒントを付けているにも関わらず他の頂点も動いてしまう場合は、動かさない頂点の位置が最初と最後のキーフレームでズレていないかどうかを確認してみてください。 また、いろいろと触っているうちにヒントがズレたり増えたりして、おかしなことになる場合があります。 ズレた時は、ヒントを一旦全て削除して付け直してみてください。
全体的な感想ですが スクリプトやインスタンス１つ１つについて もう少しヘルプを見直された方が良いように思います。 まず ご質問の最初の方の説明には次のように書いてあります。 > ans → ダイナミックテキスト　変数：ans しかし その後の説明やスクリプトにはこの ans が一切出てきません。 ここで「？？？」状態になります。 またヘルプにも書いてありますが Flash Player 6 以上用の SWF をパブリッシュするときには テキストフィールド に 変数名 を付けることは「非推奨」事項になっています。 (ヘルプで「非推奨」と検索。) ですから 答えを出力するダイナミックテキストの変数名は削除しましょう。 混乱の元になるだけです。 そして 答えを出力するダイナミックテキストには 「ans01」というインスタンス名のみを付けます。 したがってこの時点で関数 hikizan 内の ans01=aaa_num-bbb_num; は， ans01.text = aaa_num - bbb_num; のように変更する必要があります。 次に， これもヘルプに書いてあることですが， TextField クラスの onChanged ハンドラは， ユーザーの操作によってTextField の値が変更された場合にのみ発動します。 スクリプトで変更されたときには発動しません。 もしこのときに発動するとイベントが無限連鎖する場合もあり得てしまいます。 またスクリプトで変更するタイミングは把握済みで ボタン「btn01」をクリックしたときに「ans01」を変更するのですから そのときに保存すれば良いだけです。 わざわざ 『ボタン「btn01」をクリックしたときに変化する「ans01」の変化をonChangedで感知して保存する』 みたいなすごい遠回りなことは考えなくて良いです。 あと... SharedObject.getLoval("flashcookie"); ではなくて SharedObject.getLocal("flashcookie"); ですよね。 というわけでフレームのスクリプト書き直し例↓ =========================== myLocalSO = SharedObject.getLocal("flashcookie"); //---aaa--- if (myLocalSO.data.aaa != null) { aaa.text = myLocalSO.data.aaa; } aaa.onChanged = function() { myLocalSO.data.aaa = aaa.text; }; //---bbb--- if (myLocalSO.data.bbb != null) { bbb.text = myLocalSO.data.bbb; } bbb.onChanged = function() { myLocalSO.data.bbb = bbb.text; }; //---ans01--- if (myLocalSO.data.ans01 != null) { ans01.text = myLocalSO.data.ans01; } //---関数hikizanの定義--- function hikizan() { aaa_num = Number(aaa.text); bbb_num = Number(bbb.text); //↓変更 ans01.text = aaa_num - bbb_num; //↓ココで保存 myLocalSO.data.ans01 = ans01.text; } =========================== 結局 SharedObject "以外" の部分に問題があるように思います。 　
ロード待ち処理を入れていないからでしょうね。 修正変更例↓ --------------- package { //↓☆追加(本題とは無関係) import flash.display.Sprite; import flash.display.MovieClip; //↓☆追加 import flash.events.*; import flash.text.TextField; import flash.text.Font; import flash.text.TextFieldAutoSize; import flash.text.TextFormat; import flash.net.URLLoader; import flash.net.URLRequest; import flash.net.URLVariables; public class timeLoad extends Sprite { private var tf:TextField; public function timeLoad():void { var myRequest:URLRequest = new URLRequest("time.php"); var myLoader:URLLoader = new URLLoader(); //↓☆追加 myLoader.addEventListener(Event.COMPLETE, completeHandler); myLoader.load(myRequest); tf = new TextField(); tf.defaultTextFormat = new TextFormat("Helvetica",10,0x000000); tf.x = 0; tf.y = 0; //↓★削除(表示命令早すぎ。無理。) //tf.text = myLoader.data; addChild(tf); } //↓☆追加 private function completeHandler(evt:Event):void { tf.text = evt.target.data; } } } --------------- ロードされていないデータは表示できません。 もしできたならばPCは予知能力を持つ超能力者(機)です。 これ↓は単に「ロードしなさい」と命令しているだけです。 myLoader.load(myRequest); SWF(Flash)はクライアントのメモリ上にあります。 「ロードしなさい」命令でサーバのPHPに挨拶しに行って そのPHPから返事をもらい サーバから様々な回線を通じてそのデータが流れてきて やっとクライアントPCのSWFにデータが届きます。 ですから 「ロードしなさい」→即「返事を表示」 など無理です。 ※PHPを使わなくても同じです。 　 単なるサーバ上にあるテキストデータでも 　 ロードには時間がかかりますから 　 即「データを表示」など無理です。 ※クライアントPC上のデータでも同じです。 　 PC上の一般的なテキストデータでも 　 ハードディスク上記録データの取得＆メモリへのロード 　 には時間がかかりますから 　 即「データを表示」など普通は無理です。 そもそもクライアント環境だけ(=サーバやPHPなし)での検証が足りてないのでしょう。 (問題の切り分けが肝腎です。) ===別件=== > tfの内容が2011.1.1などになるのが目的です。 PHP作成データは「2011/01/01」のような文字列だと思います。 これを「2011.1.1」という形にするのでしたら tf.text = event.target.data; 　↓変更例↓ tf.text = event.target.data.split("/").join(".").split(".0").join("."); などのようにする必要があると思います。 　
getURL() は ActionScript 2.0 以下で動作するスクリプトです。 そのスクリプトをそのまま使いたいのでしたら 「ファイル」→「パブリッシュ設定」で出てくる「パブリッシュ設定」パネルから， 「Flash」 タブ を選択し， 「スクリプト」 の部分を 「ActionScript 1.0」 または 「ActionScript 2.0」 に変更すべきです。 例えば ムービークリップ に z軸 座標を使っているとか 他に ActionScript 3.0 しか通用しないスクリプトをすでに使っていらっしゃる場合は 変更が不可能になるため ActionScript 3.0 設定でなければならないかもしれません。 その場合は 次のように書き替えます。 ------------------------------------- //このタイムラインをこのフレームで再生停止 stop(); //リクエストする URL を設定 var my_url:URLRequest=new URLRequest("http://www.google.co.jp/"); //リクエストに設定したURL を同窓で開く navigateToURL(my_url,"_self"); ------------------------------------- とにかく ActionScript 2.0 以下と 3.0 とは 共存できません。
＃１です。 ＃１の回答後色々考え直してみたのですが ひょっとして「あらかじめ３行のASを登録しておくようなAS」とは 関数(function文) のことでしょうか？ 例えば Suzuka のキャンバス上のフレーム1に３つのスプライトを用意して そのスプライト(スプライトを配置したレイヤー)に 「mc_1」「mc_2」「mc_3」 というインスタンス名を付けたとします。 その状態でアクションスクリプトレイヤーを挿入して【図↓】 そのアクションスクリプトレイヤーのフレーム1に次のスクリプトを書いたとします。 ------------------------------------------- //関数 moveMC の定義(引数:スプライトインスタンス) function moveMC(MC){ //引数で送られて来たスプライトのx座標を10加算 MC._x += 20; } //変数 i を 1～3 で 1 ずつ加算しながらループ for(var i = 1; i<=3; i++){ //mc_(1～3) クリック時の動作定義 this["mc_" + i].onRelease = function(){ //関数 moveMC を実行(引数:自分自身のスプライト) moveMC(this); }; } ------------------------------------------- そうすると どのスプライトをクリックしても右に10pxずつ動きます。 クリックされたスプライトが 関数 moveMC 内のスクリプト MC._x += 20; これを例えば MC._x += 50; のように書き換えれば 全てのスプライトクリック時の動作が 右に50pxずつ動くようになります。 そういう意味でなら 「あらかじめ３行のASを登録しておくようなAS」として function文 を使います。 Suzuka のための参考サイトではありませんが↓ 「ActionScriptのオブジェクト化(function)　FLASHRAVE - FLASH 講座 -」 http://flashrave.org/as/function/index.html
＃１の回答者です。 > 実際途中をどんな形でつなげばいいか見本の動きがほしいのです。 意味がわからんです。 ご質問で提示された画像の下には５つの変形途中経過画像がありますよね？ それで良いのでは？ ５つの変形途中経過画像 を適当にトレースして シェイプトゥイーン させてみたのが下の動画ですが。。。 （シェイプヒントは使っていません。） つまりご質問そのものが 回答そのものになっている気が...？？？
とりあえず、表示モードを最低レベルのアウトライン表示にしてみてはいかがでしょう。 「表示」メニューの中に「プレビューモード」という項目があり、”アウトライン表示”から”フル”までのレベルが選べます。 （↑　CS5 では表現・名称が変わっているかもしれません。要するに、編集中の表示モードの設定です。詳しくはヘルプをご参考になさってください） ”フル”に近いほど書き出す swf ファイルに近い状態で表示されるため、当然ながら CPU のパワーを消費します。 最も低いレベルの”アウトライン表示”は表示がかなり簡略化されるものの、CPU の負担は軽くなります。 これは編集中にだけ有効な表示方式ですから、アウトライン表示で作業しても、実際には画像や描画したオブジェクトはきちんと書き出されます。 他には、編集しないレイヤーを表示しない・常駐ソフトや余計なアプリケーションを停止するなどして CPU の余力を捻出する、あたりでしょうか。 クイックタイム形式の複数のファイルをつなげる方法については詳しくありませんが、「 QuickTime 結合」で検索してみたらいろいろと出てきました。 フリーの結合ツールもあるそうなので、短く作って後でつなぎ合わせることも可能かもしれません。
　 グラフィックインスタンスのループ指定は そのインスタンス内のタイムラインを複数フレームにしてアニメーションを作ったときに インスタンス内タイムラインをループ再生させるかどうかという設定ですからご質問とは関係がありません。 「FLASH学習・技法　シンボル」 http://www17.ocn.ne.jp/~wolves/SCHOOL/lecG/lecG2 … =/=/=/=/=/=/=/=/=/=/=/=/=/= ご質問本題のループですが 昨日私が偶然他の方に回答した＃２の回答に似ています。 Q「Flashでの質問です。」 http://oshiete.goo.ne.jp/qa/6531277.html これをこのご質問に則した形で書き直します。 仮に写真(写真入りボタン)が「A」「B」「C」「D」「E」という５枚あって ステージ上に配置してあるものとします。 またその写真を引っ付けて横に並べたときにステージの横幅を超えるものとします。 この場合， その５枚の写真をコピペで２倍の10枚に増やし ABCDEABCDE のように引っ付けて横に並べます。 その10枚全てを選択して 「修正」→「シンボルに変換」で １つのムービークリップ(以下 MC と略) に変換します。 そのときに "基準点" を左上にして変換します。 MCを配置する場所は適当で良いです。 【図】↓参照のこと。 その作成したMCを選択して 「プロパティ」パネルを表示させ <インスタンス名>欄でそのMCにインスタンス名を付けます。 ここでは「photo_mc」というインスタンス名を付けたとしておきます。 その「photo_mc」があるレイヤーとは別に 新規レイヤーを追加し そのレイヤーの空白キーフレームに次のようなスクリプトを書きます(コピペ可)。 ------------------------ //動く速さを設定(適当に変える) var speed:Number = 10; //photo_mcに毎フレーム時間でmoveMCを実行する //イベントリスナーを登録 photo_mc.addEventListener(Event.ENTER_FRAME,moveMC); //関数 moveMC の定義 function moveMC(e:Event):void{ //photo_mcのx座標をspeedだけ右に移動 e.target.x += speed; // //もしphoto_mcのx座標が 0 より大きくなれば if (e.target.x > 0) { //photo_mcの横幅の半分だけ左に移動 e.target.x -= e.target.width / 2; } } ------------------------ 他にもループさせる手法(原理/考え方)はありますが いずれにしてもループしているように見せかける何らかの手品です。 この 写真をあらかじめ ２倍(または ３倍，４倍…) に複製しておいて それら全体を動かすという方法が スクリプトも複雑にならず簡単だと思います。 もし 最初の５枚の写真を引っ付けて横に並べたときにステージの横幅を超えない場合は ３倍 や ４倍… にしてステージに並べてMCに変換し その MC の x座標が 0 より大きくなれば MCの横幅の 1/3 や 1/4 … だけ左に移動させるようにスクリプトを変更します。 　
おそらく正規表現を使えばできると思います。 新規ドキュメントを作成し フレームに記述(コピペ)するスクリプト例です↓。 -------------------------- //文章を設定 var str1:String = 'He <font color ="#00FFFF">gose</font> to library.'; //置換するパターン var pattern:RegExp = /<font color ="#00FFFF">.*?<\/font>/g; //置換後の文章を取得(複数ある場合は最短一致) var str2:String = str1.replace(pattern, '<font color ="#00FFFF">_______<\/font>'); //置換後の文章を出力窓に出力 trace(str2); -------------------------- または -------------------------- //文章を設定 var str1:String = 'He <font color ="#00FFFF">gose</font> to library.'; //置換するパターン(複数ある場合は最短一致) var pattern:RegExp = /<font color ="#00FFFF">.*?<\/font>/g; //置換後の文章を取得 var str2:String = str1.replace(pattern, "_______"); //置換後の文章を出力窓に出力 trace(str2); -------------------------- 「制御」→「ムービープレビュー」で出力窓を確認してみてください。 もし， タグに 「font color ="#00FFFF"」 が入っている入っていないに関わらず他の場合でも， 例えば文章が 「He <font size="4">goes</font> to library.」 の場合でも 「He <u>gose</u> to library.」 の場合でも 同様のことをする場合は次のようになります(？？？) (色々な場合でうまく行くかどうかはわかりません...) -------------------------- //文章を設定 var str1:String = 'I <font size="4">love</font> you. You <u>like</u> me.'; //置換するパターン var pattern:RegExp = />[^<]*<\//g; //置換後の文章を取得 var str2:String = str1.replace(pattern, '>_______</'); //置換後の文章を出力窓に出力 trace(str2); -------------------------- または -------------------------- //文章を設定 var str1:String = 'I <font size="4">love</font> you. You <u>like</u> me.'; //置換するパターン var pattern:RegExp = /<[^>]*>.*?<[^>]*>/g; //置換後の文章を取得 var str2:String = str1.replace(pattern, '_______'); //置換後の文章を出力窓に出力 trace(str2); -------------------------- この辺↓前後のページが参考になると思います。 「Adobe ActionScript 3.0 繰り返し制御文字」 http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … 私は上記ページからリンクされている PDF ファイルをダウンロードして ７章と10章を熟読した上でなんとか考えて上記スクリプトを書きました。 結構アセアセにややこしいです(特に下のスクリプト２つ)。
HugFlashのプログラム（たぶんお化けっぽいアイコン）をダブルクリックして、出た画面でSoundとVideoをチェックします。 その右側の歯車のボタンでconfigの画面が現れ、videoのタブでoutputを映像+音声出力にすることにより音つきの動画として抽出できるかと思います。 出力形式もvideoのタブでmp4形式あるいはavi形式が選べます。
＃１です。 ですから... 「contentLoader」に対してリンクを付けるんです。 言い換えると 「contentLoader」に対して，クリック時に別ページを開く関数を実行するイベントリスナーを追加するんです。 ※もしくは「contentLoader」にではなく 　 親の「contentMC」にリンクを付けても良いと思います。 　 その場合 buttonMode が true にできます。 回答字数制限で全文は書けないため 「～略～」の部分を省略しています。 ★付きの箇所が追加部分です。 ～～～～～～～～～ package { ～略～ import flash.net.navigateToURL; public class Main extends Sprite { private var contentMC:MovieClip; private var contentLoader:Loader; //コンストラクタ public function Main() { //外部ファイルを配置するムービークリップの生成 contentMC = new MovieClip ; ～略～ //Loaderオブジェクトを生成 contentLoader = new Loader ; contentMC.addChild(contentLoader); //ボタン処理 my1_btn.addEventListener(MouseEvent.CLICK,my1Handler); my2_btn.addEventListener(MouseEvent.CLICK,my2Handler); my3_btn.addEventListener(MouseEvent.CLICK,my3Handler); } //各ボタンをクリックしたときに外部ファイルを読み込む private function my1Handler(evt:MouseEvent):void { var url = "img/flashimg01.jpg"; loadContent(url); //★Loaderクリック時の動作 contentLoader.addEventListener(MouseEvent.CLICK,LD1Handler); } private function my2Handler(evt:MouseEvent):void { var url = "img/flashimg02.jpg"; loadContent(url); //★　〃 contentLoader.addEventListener(MouseEvent.CLICK,LD2Handler); } private function my3Handler(evt:MouseEvent):void { var url = "img/flashimg03.jpg"; loadContent(url); //★　〃 contentLoader.addEventListener(MouseEvent.CLICK,LD3Handler); } //★Loaderクリック時に別ページを開く関数 private function LD1Handler(evt:MouseEvent):void { var link:URLRequest = new URLRequest("http://www.yahoo.co.jp/"); navigateToURL(link,"_blank"); } private function LD2Handler(evt:MouseEvent):void { var link:URLRequest = new URLRequest("http://www.google.co.jp/"); navigateToURL(link,"_blank"); } private function LD3Handler(evt:MouseEvent):void { var link:URLRequest = new URLRequest("http://www.baidu.jp/"); navigateToURL(link,"_blank"); } //外部ファイル読込 private function loadContent(url) { var req:URLRequest = new URLRequest(url); contentLoader.load(req); } } } 　
＃１です。 「緑黄赤青」 と 「緑黄赤青」 を２つ(または３つ以上)横につなげます。 　↓ 「緑黄赤青緑黄赤青」 それを見えている範囲でスライドさせれば良いでしょう。 □□□□↓可視↓□□ 緑黄赤青緑黄赤青 □□□□↓可視↓□□ □緑黄赤青緑黄赤青 □□□□↓可視↓□□ □□緑黄赤青緑黄赤青 □□□□↓可視↓□□ □□□緑黄赤青緑黄赤青 □□□□↓可視↓□□ □□□□緑黄赤青緑黄赤青 □□□□↓可視↓□□ 緑黄赤青緑黄赤青 これは ActionScript で 画像を(ムービークリップ を) 無限スクロール させるときにも使う基本原理です。 （当然 ActionScript や ムービークリップ なしでできます。）
> スクリプトに関するエラーは出ていません。 そうですか？ 私は出ましたよ。 navigateTOURL(url); このようなメソッドはありません。 navigateToURL(url); です。大文字小文字を間違えています。 ・その他 > プレビューして見たとき、クリックしても何の反応もありません。 プレビュー と書かれただけではどのプレビューかわかりませんが， 「ファイル」→「パブリッシュプレビュー」でHTMLを選んだ場合のプレビューでは その SWF(閲覧用Flashファイル) が存在するドライブやフォルダなどを グローバルセキュリティパネルで許可しておかなければ外部サイトにはアクセスできません。 ここ↓で設定です。 「グローバルセキュリティ設定パネル」 http://www.macromedia.com/support/documentation/ … また，私の環境では， 「制御」→「ムービープレビュー」で表示されるプレビュー画面から， つまり スタンドアローン版 Flash Player での閲覧状態から， navigateToURL などで ブラウザ(IE) を起動させて目的のサイトを表示させることは可能ですが， 他の環境であれば， そのようなこと(危険をはらむこと)はセキュリティの関係でできない可能性も十分考えられます。 あと，「image」という名は， ちゃんとクリックするものに インスタンス名や変数名として付けていますか？
２０年ばかり前に、Basio言語で作ったことがありますが、考えかたのみ紹介すると、 (1)配列Aを１６個を用意する（２５個、３６個、４９個のレベルも選べるようにしました。） (2)それぞれの配列に、配列変数と同じ数字を割り当てる。１６番目には０を割り当てる。 (3)ランダムに１～４の数字Xを出し、空白のパネル（０が割り当てられている配列）がどちらに進むか決める。 (4)(3)で決めた方向が、適切でないとき（枠外にはみ出る）、(3)をやり直す。 (5)進む方向の配列変数にある数字と、空白のマスの数字（つまりは０）を置き換える。 (6)(3)～(5)を何回か繰り返す。繰り返す回数（置き換える回数）も選べるようにしました。 (7)Play中は、カーソルキーにより進む方向を決め、(3)～(5)を繰り返す。 というものです。つまりは、マスはそのままにし、そこに入る数字だけを入れ替えるというものです。 大体の方針はつかんでらっしゃるみたいですね。(4)は、X＝１のとき上のマスと交換としたなら、空白のマスが１～４だったら上はないのでやり直し、というif文書けばいい。(5)は上と交換なら、配列変数－４と交換。 ランダムに選ぶには、宣言が必要ですよ。そうしなければ、いつも同じ数字が出てくることになり、同じ結果になる。 表示は別のObjectで、A(1)～A(16)まで表示すればいい。 とまあ、こんなものです。できあがったら、私のやったみたいに、レベルを変えられるようにしたら、面白いですよ。
まず on (press) は， 「ボタンをクリックしたとき」 ではなくて 「ボタンをプレスした(押した)とき」 です。 ボタンをクリックしたときに何かをさせたいのでしたら， on (release) です。 次に getURL() は，Flash 内のことに携わるスクリプトではなくて 「ブラウザでページを開く」 など Flash 外 のことをするときに使うものです。 （getURL の引数は ブラウザへのリクエストになります。） Flash 内の，つまり SWFムービー内のタイムラインを操作するのでしたら， stop() や play() や gotoAndStop() や gotoAndPlay() を使います。 ご質問の場合は おそらくメインのライムライン（_rootのタイムライン）の再生フレームを1フレームに戻して再生させたいのだろうと推測されますから， ボタンがボタンインスタンスである場合(ムービークリップ製のボタンでない場合)， on (release) { gotoAndPlay(1); } または on (release) { _root.gotoAndPlay(1); } または on (release) { this.gotoAndPlay(1); } のようにする必要があります。 なおご存じだとは思いますが， on (press) や on (release) などが ボタン や ムービークリップ 自体に書けるのは ActionScript 1.0 または 2.0 設定のときだけです。 Flash CS3 のデフォルトのパブリッシュ設定などでは ActionScript 3.0 を使うようになっていますから この設定を あえて(意識して) ActionScript 2.0 以下に変更するか あえて(意識して) ActionScript 2.0 以下のドキュメントを作成する必要があります。
他に原因があるかもしれませんが 少なくとも _root.loadpoint というような ドットシンタックス によるターゲットパス表記は使えないでしょう。 loadMovie("page1.swf","/loadpoint"); です。 次のページは SWF4 ではなく Flash Lite 1.x 用解説ページですが スラッシュシンタックスによるパス表記の説明があります。 「第2回 Flash Lite 1.1の基本的なスクリプト制御 Think IT」 http://thinkit.co.jp/article/144/2 もっとも SWF4 用 スクリプト言語と Flash Lite 1.x 用 スクリプト言語は違っていますから 何でも Flash Lite 1.x に合わせれば良いというわけではありません。 Suzuka の 兄貴分である Parafla! のヘルプを参考にするとか 次のようなページを参考にする必要があります。 「◆メモ帳◆　▲ SWF4のスクリプト書式」 http://nuko.info/memo/#pf02 （↑ココにもスラッシュシンタックスを使うように書かれてます。） ～・～・～その他動作しない原因となり得ること～・～・～ PCと違って携帯の場合は HTMLに貼り付けた状態のSWF(インライン再生)では ボタンなどが使えませんから SWFを直接見るインタラクティブ再生にしないとなりません。 また当然ですが 読み込む「page1.swf」も SWF4 で書き出しておく必要があります。
「ウィンドウ」メニューの中の「他のパネル」にカーソルを合わせ、「シーン」の項目を選択してください。 「シーン」パネルが開き、現在、存在しているシーンの一覧が表示されます。 パネル内のシーンの名前をドラッグすると、紙のアイコンが表示されます。この状態で他のシーンの名前の上下に移動すると、再生する順序を変更することができます。 シーン２をシーン１の前に再生したい場合は、シーン１の名前の上にドラッグします。 ドラッグしている間は移動できる先が線で表示されますから、参考にしてください。 シーンを作ると通し番号の名前が付きますが、この番号と再生順序は全く関係がありません。シーンの再生順序は、この一覧に並んでいる順番通りになります。 「シーン」パネルでは、再生順序の変更のほかに、シーンの複製・新規作成・削除・名前の変更もできます。 通し番号は仮のものなので、分かりやすい名前に変更しておくといいでしょう。 シーン名をダブルクリックすると、名前を入力できるようになります。
配置する10個のMC(ムービークリップ)は 例えば違う絵柄や違うアニメーションが入っているような別物であるものとします。 つまり10個のMCはシンボルとしても別物であるとします。 （各MCの "基準点" の位置はご自身でしっかり把握しておいてください。） MCを用意した後のさらに下準備として 作成した10個のMCシンボルに別々のクラス名を付けます。 クラス名を付けることや その先のことも含めて次のページのようなことをして行きます。 「[AS3] クラスを文字列で参照したい」 http://f-site.org/articles/2008/01/17051234.html 上記ページではMCシンボルに「Pen」というクラス名を付けていますが ここでは「MC0」「MC1」「MC2」…「MC9」という 10個のクラス名を付けるとしておきます【添付図↓】。 そしてフレームに次のようなスクリプトを書きます。 --------------------------- //「MC0」を配置するx座標を設定 var start_x:Number = 80; //「MC0」を配置するy座標を設定 var start_y:Number = 40; //ランダム配置するMCの個数を設定 var haiti_n:int = 8; //横に並べる個数を設定 var yoko_n:int = 4; //MCを配置する横間隔を設定 var kankaku_x:Number = 100; //MCを配置する縦間隔を設定 var kankaku_y:Number = 60; //クラス名を入れる配列 var name_arr:Array = new Array(); //「MC0」～「MC9」を配列の要素に代入 for (var i:int = 0; i<=9; i++) { name_arr[i] = "MC" + i; } for (i = 0; i<haiti_n; i++) { //配列の要素分の乱数を取得 var rand_n:int = Math.floor(Math.random() * name_arr.length); //その要素を抜きとり取得 var name_str:String = name_arr.splice(rand_n,1); //文字列のクラス化 var myClass:Class = Class(getDefinitionByName(name_str)); //そのクラスを呼び出して配置 this["mc" + i] = new myClass(); this["mc" + i].x = i % yoko_n * kankaku_x + start_x; this["mc" + i].y = Math.floor(i / yoko_n) * kankaku_y + start_y; addChild(this["mc" + i]); } //(※後の使用方法例) this.mc2.rotation = 30; --------------------------- これでパブリッシュします。 上のスクリプトでは このMCの重複出没を防ぐために Arrayクラスの splice() メソッドを使っています。 このメソッドを使わずに 配列の中身をあらかじめランダムシャッフルしておいた上で 要素0から順に8つの要素を取り出しても良いと思います。 ※人間的にはこちらの方が難しいですが 　 PC的には多分こちらの方が処理が速いと思います。 「配列を偏りなくランダムに並替える」 http://fumiononaka.com/TechNotes/Flash/FN0212003 … それと「%」は剰余演算子です。 その他 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?q=%94z%97%F1%83A% …
MC(ムービークリップ)のリネーム(インスタンス名付け直し)は そのMCの name プロパティを再度定義し直せば良いだけですが そもそもリネームする必要はあるのでしょうか？ ActionScript 2.0 までは確かに「インスタンス名」は重要なものですが ActionScript 3.0 では 「インスタンス名」 は重要ではありませんし 動的に生成したインスタンスにはそもそもインスタンス名など自動では付きません。 ではどうやってインスタンスの管理をするのかというと インスタンスを「参照する変数」で管理します。 「[AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html わざわざインスタンスの管理に配列を使われるのでしたら (つまり インスタンス名 とは離れたものを用意するのでしたら) ActionScript 3.0 風な考え方を取り入れて その配列にMCへの参照を代入し， ひたすらその MCへの参照 を管理すれば良いのではないでしょうか。 あと配列の要素を間引くのには splice() メソッドを使うのが簡単で便利です。 ↓全文例↓ （コピペ可） ----------------------------------- //変数clip_addrに_root階層の参照を代入 var clip_addr:MovieClip = _root; //2段にMC"Photo１～10"を順々に並べていく var objA:Array = new Array(2*5); var sx:Number = 40; var sy:Number = 40; for (var i = 0; i<=9; i++) { //識別子 Photo1～10 のMCを呼び出し //その参照を 配列 objA[0～9] に代入 objA[i] = _root.attachMovie("Photo"+(i+1), "Photo"+(i+1), i+101); } //ムービークリップを配置する関数 arrangeMC を定義 function arrangeMC():Void { //配列 objA の要素数分ループ for (var i = 0; i<=objA.length-1; i++) { // x座標を （i を 5 で割った余り)×100＋sx にする objA[i]._x = i%5*100+sx; // y座標を (i÷5) の小数を切り捨て×100＋sy にする objA[i]._y = Math.floor(i/5)*100+sy; } } //関数 arrangeMC を即実行 arrangeMC(); //各MCプレス時の動作を定義 for (i=0; i<=9; i++) { objA[i].onPress = function():Void { //配列 objA の要素数分ループ for (var i = 0; i<=objA.length-1; i++) { // もし配列の要素にこのプレスしたMCの参照が入っていれば if (objA[i] == this) { //その要素を1つ抜き取る objA.splice(i, 1); } } //このプレスしたMCを削除 this.removeMovieClip(); // //関数 arrangeMC を実行 arrangeMC(); }; } ----------------------------------- 別にこの後(MCのプレス時)， //配列 objA の要素数分ループ for (var i = 0; i<=objA.length-1; i++) { //リネーム objA[i].name = "Photo" + i; } というようなことをさせても良いとは思いますが あまり意味があることのようには思えません。
外部XML とか 外部SWF とかは関係なくて navigateToURL を 複数回 連続で 実行しているところが問題なのではないでしょうか。 メインのSWF 「main.swf」 と 外部SWF 「gaibu.swf」 が同じフォルダにあるとします。 「gaibu.swf」 内には 「btn」 というインスタンス名のボタンが用意してあって， そのボタンが存在するフレームに ----------------------- btn.addEventListener(MouseEvent.CLICK,clickHandler); function clickHandler(e):void { var url:URLRequest = new URLRequest("http://goo.ne.jp/"); navigateToURL( url, "_blank"); } ----------------------- と書かれていらっしゃるわけですよね。 また単独で 「gaibu.swf」 を開いた場合は ボタンをクリックすると 「goo」サイト が別窓で開かれるのですよね。 そこまでは問題ありませんよね？ そこまで問題がなければ その 「gaibu.swf」 をロードする 「main.swf」 のフレームには 次のようなスクリプトを書きます。 ---------------------------------- //ローダーの作成と外部SWFのロードと配置 var my_req:URLRequest=new URLRequest("gaibu.swf"); var my_ld:Loader = new Loader(); my_ld.load(my_req); this.addChild(my_ld); //ローダーをクリック時に clickHandler を実行 my_ld.addEventListener(MouseEvent.CLICK,clickHandler); //clickHandler の定義 function clickHandler(e:MouseEvent):void { //タイマーインスタンスを作成(1000ミリ秒後に1回実行) var myTimer:Timer = new Timer(1000, 1); // timerHandler を指定ミリ秒後に実行 myTimer.addEventListener(TimerEvent.TIMER, timerHandler); //タイマースタート myTimer.start(); } //timerHandler の定義 function timerHandler(e:TimerEvent):void { //OKWaveをリクエストとするURLRequestを作成 var url:URLRequest=new URLRequest("http://okwave.jp/"); //そのURLを別窓で開く navigateToURL( url, "_blank"); } ---------------------------------- これでパブリッシュして 表示された「main.swf」 内の「gaibu.swf」内のボタンをクリックすると 「goo」と「OKWave」が開くと思います（多分）。 navigateToURL の連続実行は失敗します。 そもそも複数ページが同時表示されるようにリンクを張ること自体がナンセンスですよ。 いわゆる「ブラクラ」行為です。 AS2 の getURL の頃は 複数窓を同時に開くことはできたと言っても そういう質の悪いこと（質の悪い行動に結びつくこと）は ブラウザのセキュリティによってはばまれていた可能性が大きかったと思います（確かMacとかでは通用しなかったような？）。 上の例では一応１秒の実行間隔をとっていますが これでも一般的には良い行為だとは決して言えません。
その ランダムモーション とやらがどれを指すのかわかりませんが 「１．位置無作為にインスタンスを発生させる。」 を ActionScript 3.0 流に書き直すなら次のようになります。 まず 300×200px に設定したステージ上に★を描き その★を基準点「中央」にしたムービークリップに変換します。 するとライブラリにそのムービークリップが登録されるので そのライブラリのムービークリップを選択して 「プロパティ」より 　□ActionScript用に書き出し にチェックを入れ 「クラス」に例えば「Star」という名前を付けます。 ※【添付図】参照↓ また ステージ上には 「start」ボタンと「reset」ボタンを用意して それぞれには 「start_btn」，「reset_btn」という "インスタンス名" を付けておきます。 また ステージ上の★ムービークリップは削除しておきます。 そしてタイムラインのフレーム1に次のようなスクリプトを書きます。 -------------------------------- //変数 i の宣：整数 var i:int; //makeStarの定義 function makeStar(e:Event):void { if (i <= 50) { this["star" + i] = new Star(); this["star" + i].x = Math.random() * 300; this["star" + i].y = Math.random() * 200; this["star" + i].alpha = 0.1; this["star" + i].addEventListener(Event.ENTER_FRAME,rotateStar); this.addChild(this["star" + i]); i++; } else { this.removeEventListener(Event.ENTER_FRAME,makeStar); } } //rotateStar の定義 function rotateStar(e:Event):void { e.target.rotation += 30; if (e.target.alpha<1) { e.target.alpha+=0.05; } else { e.target.alpha=1; } } //start_btnクリック時に startMakeStar を実行 start_btn.addEventListener(MouseEvent.CLICK,startMakeStar); //startMakeStar の定義 function startMakeStar(e:MouseEvent):void { i=0; this.addEventListener(Event.ENTER_FRAME,makeStar); reset_btn.addEventListener(MouseEvent.CLICK,resetMakeStar); start_btn.removeEventListener(MouseEvent.CLICK,startMakeStar); } //resetMakeStar の定義 function resetMakeStar(e:MouseEvent):void { for (var j:int=0; j<=50; j++) { if (this["star"+j]!=null) { this.removeChild(this["star"+j]); this["star"+j] = null; } } this.removeEventListener(Event.ENTER_FRAME,makeStar); start_btn.addEventListener(MouseEvent.CLICK,startMakeStar); reset_btn.removeEventListener(MouseEvent.CLICK,resetMakeStar); } -------------------------------- 回答文字数制限の都合上 コメント行 ( // で始まる行) が十分書けませんでした（悪しからず）。
バージョン関係を何も書かれていませんが。。。 ビデオの再生時に スムージングをかけている(smoothing プロパティ を true にしている)のではないでしょうか。 「Video - ActionScript 3.0 コンポーネントリファレンスガイド」 http://livedocs.adobe.com/flash/9.0_jp/ActionScr … 「flvファイルを読み込み表示する[ActionScrip2.0] 」 http://wiki.minaco.net/index.php?Flash%2FFlv%2FF …
ファイルの権限かフォルダの権限が原因では？ ファイル（またはフォルダ）を右クリックして、[プロパティ]-[セキュリティ]で権限を設定できるはず。 「Everyone」に「フルコントロール権限」を与えれば誰でも見れます。 ※言い換えると、セキュリティは最低なので気をつけてください。
> 元の画像もライブラリ内に残ったままになり それで何か不具合がありますでしょうか？ 普通は不具合は起きないと思うので残ったままで良いと思います。 ＝＝＝＝＝＝＝＝ この場を借りて，すみません！ 以下は前回のご質問「景品パネルの作り方」の続きの回答です。 ＝＝＝＝＝＝＝＝ ＃１のお礼で要求されている内容は 「本番用のActionScript3.0のスクリプト」でしたね。 スクリプトだけ書いても伝わるかどうかはわかりませんが 私が勝手に作ってみたも物の例【添付図↓】の場合は(この場合に限っては) 次のようなスクリプトで動作しました。 ------------------------------ //9つの景品クラス名の配列を作成 //最後の Z を "特定の景品" のクラス名とする var arr:Array = new Array("A","B","C","D","E","F","G","H","Z"); //クリック数カウント用変数を用意 var cnt:uint = 0; for (var i:uint = 0; i <= 8; i++) { //9個のMCのボタンモードを有効にする this["panel" + i].buttonMode = true; //9個のMCクリック時に関数 mcClick を実行 this["panel" + i].addEventListener(MouseEvent.CLICK,mcClick); } //関数 mcClick を定義 function mcClick(e:MouseEvent):void { // //カウントを1加算 cnt++; // //乱数を入れる変数の宣言 var rnd:uint; // //もしカウント数が6以下であれば if (cnt <= 6) { //0～配列の最終要素-1までの乱数を取得 rnd = Math.floor(Math.random() * (arr.length - 1)); //カウント数が6以上であれば(最後の方であれば) } else { //0～配列の最終要素までの乱数を取得 rnd = Math.floor(Math.random() * arr.length); } // //その乱数要素を配列から削除して取得 var name_str:String = arr.splice(rnd,1); // //その要素名のクラスのインスタンスを呼び出す var myClass:Class = Class(getDefinitionByName(name_str)); var myInstance:MovieClip = new myClass(); // //そのインスタンスの座標をクリックしたパネルと同じにする myInstance.x = e.currentTarget.x; myInstance.y = e.currentTarget.y; // //そのインスタンスを配置 addChild(myInstance); // //クリック動作を削除 e.currentTarget.removeEventListener(MouseEvent.CLICK,mcClick); // //クリックしたパネルを非表示 e.currentTarget.visible = false; } ------------------------------ スクリプト以前の話としては まずステージ上に "基準点" を中央にした 「panel0」～「panel8」 というインスタンス名を付けたクリック用のMC(ムービークリップ)を用意しています。 これはクリック用のパネルです。 それら９個のMC が存在するフレームに，上のスクリプトを書いています。 それとは別に "内部に" 「パネルが裏返るアニメーション」 を入れた "基準点" を中央にした９個の MC を作成して それらシンボルには「A」「B」「C」「D」「E」「F」「G」「H」「Z」というクラス名を付けています。 そういう状況でのみ無事に動作するスクリプト例です。 状況や作る内容が変われば当然スクリプトも変わります。
他のQ＆Aサイトで 似たようなサンプルを公開しているスレッドを見かけたことがあります。 「なぜなにGAC [22402] ActionScript2.0 mc再生について」 http://gac.kir.jp/19/22402 　　　↓より↓ 　001 の回答者 aquabox さんのこのご質問では お持ちの Flash のバージョンやActionScript のバージョン などを全く書かれていませんが 上記ページのサンプルは Flash 8 以上(Flash 8、Flash CS3、Flash CS4、Flash CS5)をお持ちで ActionScript 1.0 (または 2.0) 使用時に使えるサンプルのようです。 ※なお ご存じかとは思いますが 　ココ(教えて!goo など OKWave提携サイト)では 　自己サイトなどの公開や 　アップローダの使用などは禁じられているため 　「なぜなにGAC」さんのように 　サンプルを公開したりやりとりするような回答はできません。
おみくじみたいに１回のみ１枚をランダム表示をさせるだけでしたら スクリプトを改造するというほどのことでもないと思います。 単に var myTimer:Timer = new Timer(3000); この行↑を含む それ以下の行を全て消せば良いだけだと思います。 つまりわざわざ 「タイマーを使って 3000 ミリ秒間隔で randomShowMC() を実行する」 ということをしなければ良いだけでしょう。 この件に関しましては以上です。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > 又は、 > ムービーインスタンス「mc0」から「mc4」の画像をランダムで > 表示させ、最初に表示された、 > その画像で停止させるスクリプト 　　↓それは少々頭を使いますね↓ -------------------------------- //[0,1,2,3,4] という要素の配列 n_arr を作成 var n_arr:Array = new Array(0,1,2,3,4); //最初のMCを入れる変数の宣言 var first_mc:MovieClip; //関数 randomShowMC の定義 function randomShowMC(e:TimerEvent):void { //一旦 全MCを非表示にする for (var i:int=0; i<5; i++) { this["mc" + i].visible = false; } //もし配列の要素数が0でなければ if (n_arr.length != 0) { //配列の要素分の乱数を求める var rnd:int = Math.floor(Math.random() * n_arr.length); //配列から乱数要素を抜きとりその要素を取得 var n:int = n_arr.splice(rnd,1); //first_mc が未登録であれば if (first_mc == null) { //ランダムなMCを first_mc に登録 first_mc = this["mc" + n]; } //ランダムなMCを表示 this["mc" +n].visible = true; //もし配列の要素数が0であれば } else { //最初のMCを表示 first_mc.visible = true; //タイマーイベントを削除 myTimer.removeEventListener(TimerEvent.TIMER ,randomShowMC); } } //関数 randomShowMC を実行:初回実行 randomShowMC(null); //タイマーインスタンスを作成 var myTimer:Timer = new Timer(3000); //タイマーイベントをセット myTimer.addEventListener(TimerEvent.TIMER ,randomShowMC); //タイマースタート myTimer.start(); -------------------------------- 　
こんな↓感じでできると思いますが。 ------------------------------------ //各変数にそれそれの値を代入(仮) linkURL = "http://www.yahoo.co.jp/"; p_width = "475"; p_height = "240"; button.onRelease = function() { getURL("javascript:void(window.open('" + linkURL + "','swin','width=" + p_width +",height=" + p_height+ ",scrollbars=yes'))"); }; ------------------------------------ もっと単純化すれば これだけのことですが↓。 ----------------------------- Hensuu = "BBB"; trace("AAA"+Hensuu+"CCC"); ----------------------------- 　→「制御」→「ムービープレビュー」で確認 　　 →「AAABBBCCC」 が出力窓に出力される。
IEは採用ブラウザの少ないobjectタグでコンテンツを 埋め込むことを推奨としていて、元々ブラウザシェアのライバル だったNetScape向けのタグであるembedタグを意図的に 排除しようとしていた向きもあり、embedタグに対しての対応が 特に最近のIEでは十分ではありません。 ですから、ブラウザ判定を行って処理を分岐させ、各ブラウザ用の 対策を行わないとそのままでどうにかすることは無理です。 いずれにしてもFlashコンテンツを絶対に印刷させないことは 無理なので、どこまでで妥協するかということになりますね。
javascriptでの flash再生停止 http://www.openspc2.org/reibun/FlashMX2004/Actio … というようなページならば あったのですが、(たぶんサンプルで点在してる) 作り方が丁寧に書かれてるサイトはわかりません。 ボタンをシーン1のタイムライン1において、2 にASで gotoAndPlay(1); ボタンを押したら それ以降のムービー(シーン2　もしくは タイムライン3以降)に飛ぶように 設定すればできると思います。
＃１です CS5 をお使いでしたら パネルがめくれるアニメーションを作る際に ムービークリップを「3D 回転」させると よりリアルな表現ができると思います【添付図↓】 しかしこの機能を使うには ActionScript 3.0 のパブリッシュ設定にする必要があります。 そうなると ＃１ のスクリプトは使えません。 またお礼に ActionSctipt 3.0 をご希望と書いていらっしゃるので 3.0 に書き換えました。 ActionScript 3.0 設定の 新規ドキュメント を作成し フレーム1にコピペ→「制御」→「ムービープレビュー」する例です。 --------------- //適当に9個のMCを作成(本当は手動で作成) for (var i:uint = 0; i <= 8; i++) { this["panel" + i] = new MovieClip(); this["panel" + i].x = i % 3 * 60 + 40; this["panel" + i].y = Math.floor(i / 3) * 40 + 20; this["panel" + i].buttonMode = true; this["panel" + i].mouseChildren = false; this["panel" + i].txt = new TextField(); this["panel" + i].txt.autoSize = TextFieldAutoSize.CENTER; this["panel" + i].txt.border = true; this["panel" + i].txt.text = "panel" + i; this["panel" + i].addChild(this["panel" + i].txt); this.addChild(this["panel" + i]); } //9つの要素の配列を作成 //最後の Z を "特定の景品" 対象文字とする var arr:Array = new Array("A","B","C","D","E","F","G","H","Z"); //クリック数カウント用変数を用意 var cnt:uint = 0; for (i = 0; i <= 8; i++) { //9個のMCクリック時に関数 mcClick を実行 this["panel" + i].addEventListener(MouseEvent.CLICK,mcClick); } //関数 mcClick を定義 function mcClick(e:MouseEvent):void { //カウントを1加算 cnt++; //乱数を入れる変数の宣言 var rnd:uint; //もしカウント数が6以下であれば if (cnt <= 6) { //0～配列の最終要素-1までの乱数を取得 rnd = Math.floor(Math.random() * (arr.length - 1)); //カウント数が6以上であれば(最後の方であれば) } else { //0～配列の最終要素までの乱数を取得 rnd = Math.floor(Math.random() * arr.length); } //その乱数要素を配列から削除して取得表示 e.currentTarget.txt.text = "景品" + arr.splice(rnd,1); //クリック動作を削除(重複クリック防止) e.currentTarget.removeEventListener(MouseEvent.CLICK,mcClick); e.currentTarget.buttonMode = false; } --------------- なお ActionScript 3.0 ではシンボルに識別子を付けられません。 もしライブラリからシンボルを呼び出す場合は クラス名を付けて new ○○ で呼び出します。 その場合はこの辺をご参考に↓。 「F-site [AS3] クラスを文字列で参照したい」 http://f-site.org/articles/2008/01/17051234.html あと＃１も２も字数制限ほぼいっぱいで これ以上詳細な説明はココでは難しいです。 　
考え方自体は私がかつてココで他の方に回答した このような感じ↓で行くとします。 「QNo.4071675 ローディングバーをゆっくりみせる方法」 http://oshiete.goo.ne.jp/qa/4071675.html 今回ご質問の場合に 上の考え方を当てはめると スクリプトは次のようになります↓。 ------------------------------- var loaded:int; var loadtotal:int; //↓本物のロード％ var percent_A:int; //↓偽物のロード％ var percent_B:int = 0; var loader:Loader = new Loader(); var rec:URLRequest = new URLRequest("komorebiTown.swf"); loader.addEventListener(Event.ENTER_FRAME,enterFrameHandler); loader.load(rec); addChild(loader); function enterFrameHandler(ev:Event):void { loaded = ev.target.contentLoaderInfo.bytesLoaded; loadtotal = ev.target.contentLoaderInfo.bytesTotal; //↓本物のロード％を算出 percent_A = Math.floor(loaded / loadtotal * 100); //↓偽物のロード％を算出(例：2ずつ加算) percent_B += 2; //↓本物と偽物のうち小さい方をテキストフィールドに表示 txt.text=String(Math.min(percent_A,percent_B)); //↓本物と偽物のうち小さい方が100に達すれば if (Math.min(percent_A,percent_B)>=100) { //↓関数onLoadedを実行 onLoaded(); } } //↓関数onLoadedの定義 function onLoaded():void { loader.removeEventListener(Event.ENTER_FRAME,enterFrameHandler); } ------------------------------- なお「ダウンロードのシミュレート」機能を すでに使っていらっしゃれば以下に書くことは無視してください。 こういったものをローカルで動作検証する場合は 「ダウンロードのシミュレート」機能を使うと大変簡単に検証できます。 「ダウンロードのシミュレート」は 「制御」→「ムービープレビュー」 で一旦ムービープレビュー画面を出し その画面から 「表示」→「ダウンロードの設定」で適当な回線速度を選び 「表示」→「ダウンロードのシミュレート」で色んな速度での表示のされかたを検証します。 上で書いたようなスクリプトに変更しなくて 元のままでも ネット上に実際にアップすれば（または「ダウンロードのシミュレート」の設定次第では）， カウントアップする速さは，ある程度遅くなると思いますよ。 ただし元のままと言っても function proHandler 内で addEventListener(Event.ENTER_FRAME,loop); をし続ける部分は間違いだとは言い切れませんが変だとは思います。 （そんなにしょっちゅう何度も同じ addEventListener をしなくても良いでしょう。）
＃１です。 「画面いっぱいに拡大できない」と書かれていらっしゃったので モニタいっぱいくらいなのかと思ってましたら，なんと15000pxでしたか。 それはすごい数字ですね。 なるほど，おっしゃる通り限界があって，なかなか簡単には拡大できませんね。 > スクリーン外のグレーのエリアからも飛び出してしまい、 > 拡大する四つ角の矢印が見えなくなってしまい、 > 出来ませんでした。 そのグレーエリア内の大きさの限度ですが これはステージの（白い部分の）大きさによって変わるんですよ。 550×450px のものを作るとしても 作成中だけは 2880×2880px にすれば ある程度ワークスペースも大きくできますよ。 「修正」→「ドキュメント」でサイズを 2880px×2880px にしておいて ムービークリップを選択し 「修正」→「変形」→「伸縮」で出てくるハンドルをドラッグすれば 私の場合は ムービークリップ をなんとか 26000×18500px くらいまでは拡大できました。 その辺りが限界でしょうかね。
前回 No.6436822 と同じ並べ替えの仕様で、名前の通し番号だけムービークリップの並び順に変更する、とのことでよろしいでしょうか？ _name プロパティを直接書き換えてしまうと、様々な誤動作の原因になります。 ですから、これは触らずに、配列変数を用意してリネーム後の名前を記録してはいかがでしょう。 No.6436822 でご紹介したスクリプトの初期設定の部分に （↓　各行頭に全角のスペースが入っています。コピーする際はご注意ください） 　//リネーム後の管理番号を記録する配列変数 　//フィールド名 　//　clip：ＭＣの参照（Photo0～番号順） 　//　rename_no：リネーム後の番号 　//記録位置はインスタンス名の番号の順 　var list:Array = new Array(); ↑　このスクリプトを追加し、並べ替えを行う Clip_Align 関数を次のように変更してみてください。 字数の都合上、位置を決める処理を省略させていただきました。 //＊＊＊ 　//整列とリネームを行う関数 　function Clip_Align():Void 　{ 　　var px:Number , num:Number; 　　var i:Number , j:Number; 　　var ref:MovieClip; 　　//表示フレームを順に調べ、表示しているＭＣがあれば横に並べる 　　for( i = 5 , num = 0 ; i >= 1 ; i-- ) 　　{ 　　　//全てのＭＣをチェック 　　　for( j = 0 , px = 0 ; j <= 23 ; j++ ) 　　　{ 　　　　//操作するＭＣの参照を作成 　　　　ref = clip_addr[ "Photo" + j ]; 　　　　//該当するＭＣがあった場合、横に並べていく 　　　　if( ref._currentframe == i ) 　　　　{ 　　　　　/*ここに、位置を決める処理を書く*/ 　　　　　//リストにリネーム後の管理番号を参照と一緒に記録 　　　　　list[ j ] = { clip : ref , rename_no : num }; 　　　　　//次のためにpxとnumを更新 　　　　　px++; 　　　　　num++; 　　　　} 　　　} 　　} 　　//デバッグ 　　trace( "－－－－－" ); 　　for( i = 0 ; i < type_max ; i++ ) 　　{ 　　　trace( "元：" + list[ i ].clip._name + "　リネーム後：" + "Photo" + list[ i ].rename_no ); 　　} 　} //＊＊＊ プレビューで確認すると、元の名前とリネーム後の名前が出力されます。 配列変数にはリネーム後の番号だけが入っています。名前はこの番号に "Photo" を追加して作成してください。 trace 文で分かりにくい場合は、ムービークリップに名前を出力するテキストフィールドを作り、そちらにそれぞれの名前を出力すると確認すると分かりやすくなります。 ActionScript の配列変数では、同じ要素の中に仕切り（フィールドといいます）を作って複数の情報を管理することができます。 今回は clip と rename_no という２つの仕切りを作り、clip にムービークリップの参照を、rename_no にリネーム後の番号を記録しています。 リネーム後の番号を持っているムービークリップを判別できるので、何かありましたら利用してみてください。 ムービークリップの並び順に通し番号を振り直すカラクリは、num という変数で取るカウントです。 この変数をまず、外側 i のループの最初で 0 に初期化しておきます。 内側 j のループで、並べるムービークリップが見つかるたびにこの値を記録し、次のために更新します。 上の段に並べるものから探しますから、つまり、先に見つかったものから順に番号が割り当てられます。 j は元のインスタンス名の番号を表します。 従って、配列変数の j 番目に記録すると、元のインスタンス名の並び順で参照とリネーム後の番号を一緒に管理することができます。 なお、 　list.sortOn( "rename_no" , Array.NUMERIC ); で、リネーム後の順番に注目して並べ替えることもできます。 何かに使えそうでしたら利用してみてください。
横から失礼します。 ＃１の回答者の方が書かれていらっしゃる方法の通りで良いと思います。 ＃１の方の書かれている図（矢印表記の図）は 「タイムラインのレイヤーのようす」 なのです。 ご質問の状況についてですが， まず 「Ａ」のアルファを 100→0 と変化させると その下レイヤーに配置してある「Ｂ」がだんだん現れるのですよね？ そして 「Ｂ」のアルファを 100→0 と変化させると その下レイヤーに配置してある「Ｃ」がだんだん現れるのでしょう？ だとすれば 後は 「Ｃ」の下レイヤーに「Ａ」を配置して 「Ｃ」のアルファを 100→0 と変化させれば 「Ａ」が徐々に現れるものができるはずです【添付図↓】。 PC用 Flash の場合は メインのタイムラインは自動でループ再生しますから ほっておけば勝手に最初のフレームに戻って 「A」→「Ｂ」→「C」(→「A」) が繰り返されるはずです。 ActionScript など不要です。 ※注 PCではなく携帯での閲覧では 自動でループ再生しないので 携帯用SWFを作成する時には 最終フレームにをキーフレームを作成して そのキーフレームに -------------------- //フレーム1に戻って再生 gotoAndPlay(1); -------------------- のようなことを書く必要があります。 　 > Actionscriptは使っていないのですが、 > やはり使わないと不可能なのでしょうか？ 捉え方がちょっとズレているかも(？)です。 Actionscript は「使えば動く」 というものではありません。 (適当な願い事をとなえれば動きだす魔法の呪文ではありません。) 「具体的に何をどう動かすのか」 を考えることが最も肝腎なことです。 プログラムのコーディングとは 「コンピュータが狙い通りに動くように命令文を書くこと」です。 今回の場合 ActionScript を書くとしても いったい何をどう動かすのでしょうか？ 「動かない」と決め付けていると動かせませんから 頭を柔らかくして 「いかにして動かしてやるか」 を考えることが大切です。 「鳴かぬなら鳴かせてみせよう ホトトギス！」 です。 　 > Ａｃｔｉｏｎｓｃｒｉｐｔなどのプログラム言語は、 > みなさんどうやって勉強されたのでしょうか？ 上でも少し書きましたが言語自体はどうでも良いものです。 ホトトギスを鳴かせる具体的な策略を考えるのが第一です。 具体的な策略がなければコードは１行(１文字)たりとも書けません。 具体的な策略が煉り上がればそれが成功するように ActionScript の場合はヘルプや本やネットでスクリプトやその使い方を調べたり 場合によっては過去の記憶などをたどったり試行錯誤をして 狙い通り動くようにキッチリとコーディングして行きます。 上達はこの行為の積み重ねです。 （また，この積み重ねで身につくものを世間ではスキルと言います。） 例えば本を読んで言語だけを大量に暗記しも何にもなりません。 　
>>・メインとなるクラスからしかstageにはアクセスできないのでしょうか？ stageはDisplayObjectを継承しているクラスからしか参照ができません。 また、そのDisplayObjectを継承しているクラスも、stageにaddChildされた後でなければstageを参照することはできません。 そのため通常はEvent.ADDED_TO_STAGEをリスナ登録後にstageを参照します。 >>・また、このクラス内でaddChilde()するときもエラー（1180: 未定義である可能性が高いメソッド addChild の呼び出しです。）をはいてしまうのですが、これはこのクラスのインスタンスを生成するときに、addChildするための場所（？）を引数として持ってこないといけないのでしょうか？ addChildはDisplayObjectContainerクラスを継承しているクラスでしか使用することができません。 記述されているクラスはDisplayObjectContainerクラスを継承されていないようですのでエラーがでるのでしょう。 通常はSpriteやMovieClipを継承することが多いです。
＃１です。 > ボタンタイプのシンボルにして、 > オーバーのフレームにだけ音源ファイルをおいてあります。 そういう状況でしたら次のようにするのが１つの方法だと思います。 （その状況だと案は以下の１つくらいしか思い浮かばない。） ステージ上には５つのボタンがあったとします。 　[■sound] 　[■top]　[■mail]　[■blog]　[■link] ボタンにはそれぞれ 「sound_btn」「top_btn」「mail_btn」「blog_btn」「link_btn」 というインスタンス名を付けていたとします。 ※ インスタンス名は， 　　各ボタンを１つずつ選択した状態で 　　ステージ右の「プロパティ」パネルの 　　上の方にある 　　　[＜インスタンス名＞ ] 　　となっている入力ボックスで設定できます。 そのようになっている状態で それらボタンが存在するフレーム(キーフレーム)に次のスクリプトを書きます。 --------------------------------- //音 オン・オフ のフラグを用意（初期値：オン） var sound_flg:Boolean = true; //「sound_btn」クリック時の動作を定義 sound_btn.onRelease = function():Void { //もしフラグの値が true であれば if (sound_flg) { //フラグの値を false にする sound_flg = false; //(目印にこのボタンを半透明にする) this._alpha = 50; //もしフラグの値が false であれば } else { //フラグの値を true にする sound_flg = true; //(目印にこのボタンを不透明にする) this._alpha = 100; } }; //関数 deleteSound の定義 function deleteSound():Void { //もしフラグの値が false であれば if (!sound_flg) { //全ての音オブジェクトを削除 stopAllSounds(); } } //「top_btn」～「link_btn」ロールオーバー時に //関数 deleteSound を実行 top_btn.onRollOver = deleteSound; mail_btn.onRollOver = deleteSound; blog_btn.onRollOver = deleteSound; link_btn.onRollOver = deleteSound; --------------------------------- 要するに「音制御ボタン」を１回クリックしたときに 用意したフラグ用変数の値を false にするわけです。 そして４つの「メニューボタン」にロールオーバーしたときに そのフラグ用変数の値が false である場合に限って出てくる音を全て消すというしくみです。 音(Soundオブジェクト) にインスタンス名などを付けて その音をボタンのロールオーバー時に呼び出すような仕組みにしてあると その音を呼び出さなければ良いというだけのことになります。 そうではなく ボタン内タイムラインに配置した無名の音が勝手に鳴るしくみを作っているわけですから 勝手に鳴り出す全ての音をその都度消してしまうしか方法はないということになります。 ちなみに私が作成してみたものの参考図↓
おそらく素材のプレイヤーはflaを編集できないかと思いますのでご自分で作成された方がいいかと思います。 DBに保存する場合はflash → php → mysql という感じでしょうか。 ランキングを表示する際はphpでDBの情報を取得後、テキストかxml等でflashに返してあげればいいんではないでしょうか。
＞私が書いたものは ＞条件の、 ＞★ _mcの移動幅を5～10もしくは-10～-5の範囲になるようにします。 ＞の、 ＞ ＞「_mcの移動幅を5～10」というのをスタート時には設定しているけれど、 ＞「-10～-5の範囲になるように」は設定していないという解釈で大丈夫でしょうか？ 半分不正確、ですかね？ 「『_mcの移動幅を5～10』というのをスタート時には設定していて、 『5～10もしくは-10～-5の範囲になるように』は設定していない」 というほうが正確だと思います。 この問題の場合、正方向と負方向のどちらか一方に向かうのが正しいということはなく、正方向に向かうのと負方向に向かうのとが半々の確率になるようにするのが正しい仕様です。 問題の本文だけだとちょっと分かりづらいですが、ヒントに書いてある式を使うことを考えるとそうなります。 まあ、これはあくまでこの問題に限っての事で、あなたのコードのほうが正しい仕様というのもあります（出発点がステージの隅で、外に出ないように飛び出す方向を正方向-正方向に限定したい）。
こんにちは。 画像を入れ替えるフラッシュなら、 このソフトで簡単につくることができました。 製品版のほかに無料版があります。 無料版で、希望のものが作れる気がします。 商品フラッシュ！！ http://shf.ysdesign.bz/ 参考URL：http://shf.ysdesign.bz/
ファイル構造がどうなっていて どういうスクリプトを書いたなどが書かれていないため 何とも言えませんが 　「Flash での 指定ファイルパス が 　 Flash(SWFファイル) からの 相対パス になっていて 　 Flash(SWFファイル) が貼り付けてある HTML からの 　 相対パス になっていていないから。」 というのが原因ではないでしょうか？ getURL (←ActionScript 2.0 以下) や navigateToURL (←ActionScript 3.0) で指定するファイルパスは 単純に言えば 「ブラウザへのリクエスト」 です。 URLRequest （←つまり リクエスト） インスタンスを作成する ActionScript 3.0 の方が 明示的 ですからその点はわかりやすいです。 ActionScript 2.0 では リクエストインスタンス を作成しないのでわかりにくいかもしれませんが どちらにしても ブラウザ に対して ページを開く リクエスト を送信します。 ブラウザ は 通常 SWF は直接表示していなくて HTML などを表示していると思います。 SWF は HTML に貼り付いているだけのことで ブラウザ自体は SWF ではなく HTML を表示しています。 （＝ブラウザ自体は HTML の場所を訪問している状態です。） ですから SWF からのは HTML を基準としたパスを書くべきだということになります。 ・例 　任意のフォルダ 　　├ index.html (index.swf が貼り付いている) 　　├ content.html 　　└ flash(フォルダ) 　　　　　└index.swf 「index.html」から「content.html」を相対パスで表示させたい場合 「index.swf」からリクエストするページは 「../content.html」 ではなく 「./content.html」 または 「content.html」 になります。 ---以上，勝手な推測と，勝手に作った例です------------------
replaceMaterialByName関数はCubeオブジェクトに使うものですね。 marker.material = new BitmapFileMaterial(url); でいけるんじゃないでしょうか。 変更前のBitmapDateを再利用しない場合はdisposeしてあげるといいですね。 ではでは:)
ご質問内でご紹介のサイトですが両方サンプルコードがDLできますよね？ それではだめなのでしょうか。
＃１、２です。 SetUp 関数内の 　ref = clip_addr.attachMovie(name_str, name_str, i); の後に 　trace( ref ); と入れて、「ムービープレビュー」で確認してみてください。 _level0.a ～ _level0.e のターゲットパスが出力されれば、ムービークリップ a ～ e は存在しています。 存在しているにもかかわらず表示されない場合は、ステージから外れた位置に配置されてしまったのだと思います。 変数 org_x と org_y 、特に org_y の値を小さくして試してみてください。 整列した時は、番号が大きいものほど上に並びます。 最初は全て１なので、一番下である５段目（スクリプトでは０から数えているので４段目）に全部並ぶことになります。 つまり、それぞれの初期座標は 　Ｘ： org_x で指定された位置から、20 px 空けて横並び 　Ｙ：（ムービークリップの高さ＋ 20 ）×４＋ org_y で、org_y を 0 にしてもＹ＝ 400 の座標になります。 ＃１のスクリプトは、org_x と org_y の場所に、一番上に並ぶ５番のムービークリップの左上が来る配置になっています。 この点を考慮して、位置やステージの大きさ・ボタンの配置等を決めてみてください。 trace 文でターゲットパスが表示されない場合は、何らかの原因でムービークリップの挿入が失敗しています。 よくあるミスはリンケージ名の誤りです。 文字コード 97 の代わりに 98 や 99 などを入れて、b 以降のムービークリップが表示されるかどうか、確認してみてください。 リンケージ名は”半角”の”小文字”で付けます。 － － － － － 例えば、 　for( i = 0 ; i < type_max ; i++ ) 　{ 　　for( j = 1 ; j <= pic_max ; j++ ) 　　{ 　　　name_str = String.fromCharCode( 97 + i ) + j; 　　　trace( name_str ); 　　} 　} ↑　このようなループにすると、a1 ～ e5 までの文字列を取得できます。 文字列ができれば、attachMovie で挿入したり、[　] 演算子で参照に変換してムービークリップを参照することができます。 しかし、ムービークリップが全部独立していると、”次の番号の”ムービークリップに切り替える部分が面倒です。 アルファベットや番号がつながっていて名前に関連性はあっても、あくまでも独立したムービークリップ同士になるのですから、それぞれのアルファベットで今表示している番号がいくつであるかを取得する仕組みを作らないと難しいと思います。 また、今表示するもの以外は表示されない（もしくは重ねるなどして見えなくする）ようにする工夫も必要です。 一番手っ取り早いのは、a のムービークリップの１フレームに１つずつ、a1 ～ a5 のムービークリップを入れてしまうことです。 これなら、スクリプトも変更せずに済みます。
「うまくいかなくて困っています」の「うまくいかない」が 具体的に 『何かどう動かない』 のかわかりませんが， 勝手に推測するならば「素早くマウスを通過させたときカクッ動く」のが「うまく行かない」という現象ではないかと思います。 （カクッと動いても良い場合も多々あるので，何をうまく行かないとするかは知りません（個人の主観の問題です）。） 「番外編 - 質問NGワード集 - テクニカルノート」 より 【うまくいきません】 http://www.fumiononaka.com/TechNotes/NGWords.htm … 以下は 「素早くマウスを通過させたときカクッ動く」 のが 「うまくいかない」 こｌとであるとした場合の回答です。 「スクリプト」 の前に 「考え方（動かす仕組み）」 の問題ですよね。 例えば， 次の方法（あくまでも仕組み）が考えられます。 「FN0303003 - ロールアウトで逆戻りするアニメーション - Flash テクニカルノート」 http://fumiononaka.com/TechNotes/Flash/FN0303003 … 上に「あくまでも仕組み」と書いたのは 上記ページのスクリプトは ActionScript 1.0 の上 一番初期の Flash 5 形式 だからです。 スクリプト自体は使い物になりませんが，考え方は同じものが使えるはずです。 上記ページを少し変えたもの（少しずつ進化させたもの）を ネット上の別サイトからの紹介で見かけたことがあります。 「逆再生鉢植え(ツーポイント アドバイス)」 ttp://suzupara.iinaa.net/mixi/potted_plant/ 「逆再生鉢植え(ActionScript 3.0 バージョン)」 ttp://suzupara.iinaa.net/mixi/potted_plant_as3/ 上記の方法ではなくて 次のような方法（あくまでも仕組み）が考えられます。 「にゃあプロジェクト - ウェブログ - ロールアウトで逆再生 (1)」 http://www.project-nya.jp/modules/weblog/details … 　↓考え方の違いはこの部分↓ > そこで、menu 第1フレームのスクリプトを > > this.onRollOut = function():Void { > var frame:Number = this._totalframes - this._currentframe + 2; > this.gotoAndPlay(frame); > }; > > に修正。
ActionScript 以前に Flash のベース的なことなので どこから説明すべきか困りますが 思いつくところから順に書きます。 ・テキスト（テキストフィールド）を傾ける話 動的にテキストを変える場合， 普通はダイナミックテキストフィールドを使用して， フォントには 「_ゴシック」とか「_等幅」などのような "デバイスフォント" を使用します。 このデバイスフォントとは Flash(SWFファイル)内にフォントを埋め込まず， 「あ」なら「あ」という文字情報だけをテキストフィールドに指定し， 「あ」という形（フォントのアウトライン情報）はデバイス(PCや携帯)にあるものを表示させるものです。 今見ているこのページの文字もそうですよ。 ページに「あ」という形が埋め込まれているのではなくて 「あ」を表示しろという命令だけがHTMLに書いてあって 実際の「あ」はPC内のフォントが表示されています。 このような表示方法の文字は回転できないのです。 回転させたい場合はどうするのかと言うと 普通は デバイス のフォントを参照表示させるのではなく Flash(SWFファイル)内に「あ」なら「あ」という形を埋め込んで それを表示させる方法を使います。 ・日本語フォントを埋め込む話 フォントをFlash内に埋め込むと その文字の回転などができるようになります。 英語圏の Flash では フォント が埋め込まれてある Flash を見かけることが良くあります。 ところが 日本語 の場合はものすごく沢山の文字があります。 例えば「MS明朝」１つを全て埋め込んでも それだけで数MBのファイル容量になってしまい実用的なものではなくなります。 ですから 日本語フォントはダイナミックテキストフィールドには埋め込まないのが普通です。 ・(2)フォントの指定： に関連する話 ですから（以上のことから）， フォントを部分的に変更するにしてもしないにしても 日本語部分は固定ですから「静止テキスト」にすべきだということになります。 静止テキストは通常埋め込みフォントになります。 そして 『「○○」に入る数字の部分』 のみを ダイナミックテキスト にして 「日・時・分・秒」各４つの 「○○」 のテキストフィールドに それぞれの数字を表示させるようにした上で， 「日・時・分・秒」各４つの 「○○」 のテキストフィールドに 0～9 までの数字フォントを埋め込む。 ということをする必要が出てきます。 ・簡単な例 ステージ上に5°傾けたダイナミックテキストフィールドを用意し そのテキストフィールドに例えば 「my_txt」 というインスタンス名を付け フォントファミリーをデバイスフォント以外の普通のフォントに設定し 「文字の埋め込み...」ボタンより 数字[0..9](11文字) を指定します【図↓】 フレームに次のスクリプトを書きます。 my_txt.text = "123.4"; パブリッシュすれば 123.4 が表示されると思います。
> 例：var→variableのこと変数という意味 > など。 > 意味と例文が載った分かりやすい本はないでしょうか？ その辺はヘルプに書いてますよ。 「ステートメント、キーワード、ディレクティブ」 http://help.adobe.com/ja_JP/AS3LCR/Flash_10.0/st … →「var」 http://help.adobe.com/ja_JP/AS3LCR/Flash_10.0/st … 意味も使用例も載ってますよね？ そういうことを書き出したらキリがないんです。 （それだけで膨大な情報量になって結局何の解説もできない本になる。） だからそういう本はないと思います。 （そもそもヘルプにあるのでそんな本を作成する必要もないですし。） それにそんなことわかっても実際には使えないので そういうことは飛ばした本ばかりがあるのです。 > そんなの丸暗記だとおっしゃられるかもしれませんが、 > どうも理屈っぽくて、それから先に進めません。 ...それが良いことか悪いことかは知りませんが そもそもそのように考えるところが 少なくとも私とはかなりズレてると思います。。。 丸暗記も何もですね... そもそも覚える必要はほとんどないんです。 単純に言えば 「『暗記』は人間のする作業ではない。」 です。 もちろん var とか function とかくらいは丸暗記で覚えていますが， それ以外は調べれば出てくるでしょう？ 人間のする作業は， 「見ること」「考えること」「調べること」です。 見たものを「良い」とか「悪い」とか判断することはPCや本には無理です。 「何をしたいか」，「どのようにすべきか」を考えることもPCや本には無理です。 「何を調べれば良いか」「どう調べれば良いか」を判断することもPCや本には無理です。 つまり人間は人間でしかできないことを担当すべきです。 辞書的な記憶力なんてPCや本には絶対勝てないわけですし， そもそもPCや本に勝つ必要もないのです。 引き出しの取っ手部分くらいを記憶しておけば良いのです。 例えば 　「接尾辞 というものがあって 変数の値にそれを入れると 　あとは コードヒント が出てくるので便利だ」 とか，そういう引き出しの取っ手部分(この場合は「接尾辞」というもの)を記憶をしていれば良いのです。 「FN0303002 - コードヒントの活用 - Flash テクニカルノート」 http://fumiononaka.com/TechNotes/Flash/FN0303002 … ちなみに CS4 のヘルプは， デフォルトではネット上のページを参照してしまいます。 これでは非常に使いにくいです。 私は次のページの方法でローカルのヘルプをオフラインで利用しています。 「F-site Flash CS4のヘルプ」 http://f-site.org/articles/2009/01/16130620.html ※実はこの↑ページ 　 私が CS4 のヘルプについて 　 「ローカル で使えないから困る」 と 野中先生 に言ったとき 　 「なるほどそうだ」ということになって 　 野中先生が作ってくれたページです。 上記ページの 「この記事へのコメント」にある 5.オッキー さんのコメントが非常に参考になります。 > 5.オッキー（2009年02月03日 11:38） > オフラインでヘルプを確認する方法 > [ウィンドウ]-[エクステンション]-[サービス接続] > -右上のフライアウトメニュー(▼)-[オフライン設定] > -[オフラインのままにします]をチェック > だそうです（via Adobe N村さん）。 簡単なことでも調べることは大切です。 わかりきっているようなことでもどんどん調べてみてください。
ロードしたJPEGに名前(インスタンス名)を付けるのでしたら そのJPEGをロードするムービークリップに名前を付ければ良いだけです。 つまり簡単なことです。 問題はそうではなくて JPEGをロードするムービークリップに onRelease=function(){} のような イベントハンドラメソッド が設定できないということではないでしょうか？ ムービークリップにJPEGなどをロードすると そのムービークリップはJPEGに乗っ取られてしまいますが そのとき すでに設定してある イベントハンドラメソッド も消えてしまうのです。 解決方法は大きく分けて２つあります。 １つ目は イベントハンドラメソッドを設定するムービークリップ（＝親MC）内に JPEGをロードするムービークリップ（＝子MC）を作成して その 子MC に JPEG をロードする方法です。 ２つ目は JPEGをロードするムービークリップにJPEGをロードし， 完全にロードされた状態になってから(ロード待ちをしてから) そのムービークリップに イベントハンドラメソッド を設定する方法です。 上記１つ目の方法は 入れ子状態のムービークリップを作れば良いだけですから簡単です。 ２つ目の方法は 実際にスクリプトを書かなければわかりにくいと思うのでこの方法について書きます。 ◎ ファイル構造 　任意のフォルダ 　　　├任意のフォルダ 　　　│　　├○○.html 　　　│　　└○○.swf（○○.fla） 　　　└images(フォルダ) 　　　　　　 └image1.jpg ◎ ○○.fla _root のステージ上には 「targetlargeMC」というインスタンス名を付けたムービークリップを すでに用意してあるものとします。 その他 本題とは関係ない雑多な物（handMC など）は存在しないものとします。 (問題解決には問題の切り分けが大切です。問題をシンプルに！) (本来，雑多なものは質問者が削除しておくべきです。) (そういう肝腎な作業をしていないことが問題解決できない最大の原因ですよ。) ◎ ○○.fla の _root のフレームに書くスクリプト ------------------------------ //ロードを監視するオブジェクトを作成 var obj:Object = new Object(); //MovieClipLoaderインスタンスを作成 var mcl:MovieClipLoader = new MovieClipLoader(); //JPEGロード完了時の動作を定義 obj.onLoadInit = function(target:MovieClip):Void { target.onPress = function():Void { this.startDrag(); }; target.onRelease = target.onReleaseOutside = function ():Void { this.stopDrag(); }; }; //mclのリスナーとしてobjを登録 mcl.addListener(obj); //targetlargeMCをターゲットにJPEGをロード mcl.loadClip("../images/image1.jpg", targetlargeMC); ------------------------------ ActionScript 2.0 要 Flash Player 7 以上
flytotomorrow96、NO.2です。 Adobe Flash Playerはコントロールパネルからだと完全にアンインストールできないそうですよ。 ファイルへの直接リンクです。これをダウンロードして実行し、再起動すればいいです。 http://fpdownload.macromedia.com/get/flashplayer … 再起動したら、タスクトレイなどのすべてのプログラムを終了させてからhttp://get.adobe.com/jp/flashplayer/otherversions/に行きます。 3秒ぐらい待ってから（手順1の枠が長くなったら）手順1でWindows 7/Vista/XP/2008/2003/2000をクリック、次に（手順2の枠が長くなったら）手順2でFlash Player 10.1 for Windows Internet Explorerを選択して、今すぐダウンロードを押してください。 情報バー（上のところ）が出ますので、忘れずにクリックしましょう。 後は、許可とか実行とか押して進めてください。 僕のところのIEはIE9 Betaなので、IE8/7の場合をうまく説明できません。 わからないところは補足を使ってください。
ややこしければ無理をせずに 変数の中にURLを入れて そのURLを window.open すれば良いのではないかと思います。 ---例----------------------- Btn.onRelease = function() { my_url = "test.php?name=" + escape(mozi) + "&tokuten=" + suuti; getURL("javascript:void(window.open('" + my_url + "','subWin','width=320,height=240'))"); }; ---------------------------- ちなみに 変数を利用しない場合は 次のようになると思います。 ---------------------------- Btn.onRelease = function() { getURL("javascript:void(window.open('test.php?name=" + escape(mozi) + "&tokuten=" + suuti + "','subWin','width=320,height=240'))"); }; ---------------------------- ※ 私の環境で 　　ローカルファイルを IE で閲覧した場合では動作しませんが 　　他のブラウザや ネットにアップした場合は 　　上記スクリプトで動作します。
その動作は、IE 6/7/8における「EORAS SCREEN」というクソな仕様の結果で、UIの理念とは何の関係もありません。 何でも、Microsoftが、Webページ内にプラグインを埋込む仕様について、EORASという企業の特許を侵害したとかで、自主的に「１クリックしないとインタラクティブ動作できない」ふうにブラウザを設計したようです。 Microsoft以外のブラウザにはこの特許問題がなく、そもそも本当に特許侵害問題があったのかなど、詳しいことは全く謎ですが、<object>タグを使ってIE用プラグイン（いわゆるActiveXというやつ）を直打ちした場合には、必ずこの問題が発生します。 また、Flashに限らず、ShockwaveやAcrobatなどのプラグインでも発生します。 回避方法は単純で、外部JavaScriptから、document.write等を用いて<object>タグ以降を生成すればよく、普通はFlash埋込み用の各種JavaScriptライブラリが存在しますので、それを使います。 有名なライブラリでは、swfObjectというものがあり、これを使えば問題は発生しません。 Dreamweaverでも最近のバージョンではこれを使ってFlashをページに埋め込むようになっています。
＃１です。 ＃１の補足に書かれていらっしゃる内容のスクリプトからすると （そのままの現状が維持できていれば）， スクリプトを次のように変更すれば 元のご質問で書かれていらっしゃるような内容のことができると思います。 ------------------------------------- //カウント用の変数 cnt を作成し初期値を 0 とする var cnt:int = 0; //変数 libImage の宣言 var libImage:MyImage; //「text01」をクリック時に関数fl_ClickToLoadImageFromLibrary_7を実行 text01.addEventListener (MouseEvent.CLICK, fl_ClickToLoadImageFromLibrary_7); //関数fl_ClickToLoadImageFromLibrary_7の定義; function fl_ClickToLoadImageFromLibrary_7 (event:MouseEvent):void { //もし 変数 cnt の値が 0 であれば if (cnt == 0) { // MyImageクラスのインスタンス libImage を作成 libImage = new MyImage(); //そのlibImageの座標を(50，30)に設定 libImage.x = 50; libImage.y = 30; //メインタイムラインにlibImageを配置 addChild (libImage); //変数 cnt の値を 1 にする cnt = 1; } else if (cnt == 1) { //もし 変数 cnt の値が 1 であれば libImage を非表示にする libImage.visible = false; //変数 cnt の値を 2 にする cnt = 2; } else if (cnt == 2) { //もし 変数 cnt の値が 2 であれば libImage を表示する libImage.visible = true; //変数 cnt の値を 1 にする cnt = 1; } } ------------------------------------- ＃１の補足以降に何かあがくなどして インスタンス名やクラス名を変えていたら 上記スクリプトでは無事に動作しないと思います。
＃１です。 あの...今思ったんですが， 聞きたいのはひょっとして 「Flash で コンパイラ」 ではなくて 「Flash デコンパイラ」 ではないでしょうか？ 「Flash デコンパイラ」だとしたら ＃１ で回答したソフトと逆の意味のソフトになります。 文字通り 「SWF の 逆コンパイラ」 という意味になると思います。 Google 検索「Flash Decompiler」 http://www.google.co.jp/search?hl=ja&q=Flash+Dec … Google 検索「SWF Decompiler」 http://www.google.co.jp/search?hl=ja&q=SWF+Decom … 例えば ＃１でたまたま回答したソフトのうち FREEMOTION は 今現在 「frimo 3」 という名前に変更されていますが このソフトなどは SWF コンパイラ であると同時に SWF デコンパイラ でもあります。 「frimo 3 - 高性能Flash作成ソフト」 http://www.ah-soft.com/fm/ その 「frimo 3」 の兄弟ソフトに 「Motion Decompiler 3」 というのもありますが こちらは SWF の デコンパイル に特化したソフトです。 「Motion Decompiler 3 - 高性能Flash解析ソフト」 http://www.ah-soft.com/mdw/ これらが 「Flash デコンパイラ」 です。
「日本の借金時計」のスクリプトやデータ取得システムがどうなっているのかは知りませんが， ご質問に書かれていらっしゃるような内容のことでしたら 比較的簡単にできるように思います。 ActionScript 3.0 で 新規ドキュメント を作成し フレーム1 にコピペして そのまま ムービープレビュー または パブリッシュ する例です↓。 ---------------------------------- //目標数値(金額)を設定(仮：1000億) var goal_yen:Number = 100000000000; //---テキストフィールド「yen_txt」を用意--- //(手動で用意しても良いです) var yen_txt:TextField = new TextField(); //適当に設定 yen_txt.border = true; yen_txt.background = true; yen_txt.autoSize = "right"; //適当に座標を指定 yen_txt.x = stage.stageWidth - 20; yen_txt.y = 10; addChild(yen_txt); //今の時刻オブジェクト var now_date:Date = new Date(); //今年の年 var now_year:uint = now_date.getFullYear(); //今年の最初の時刻オブジェクト var start_date:Date = new Date(); start_date.setFullYear(now_year,0,1); start_date.setHours(0,0,0,0); //今年の最初の1971年からの経過ミリ秒 var start_time:Number = start_date.getTime(); //来年の最初(今年の最後)の時刻オブジェクト var goal_date:Date = new Date(); goal_date.setFullYear(now_year+1,0,1); goal_date.setHours(0,0,0,0); //来年の最初の1971年からの経過ミリ秒 var goal_time:Number = goal_date.getTime(); //１ミリ秒辺りのアップ量 var yen_per_ms:Number = goal_yen/(goal_time-start_time); //毎フレーム時間ごとに関数countUpを実行 this.addEventListener(Event.ENTER_FRAME,countUp); //関数countUpの定義 function countUp(evt:Event):void { //今の時刻オブジェクト var now_date:Date = new Date(); //今の1971年からの経過ミリ秒 var now_time:Number = now_date.getTime(); //今の今年の始めからの経過ミリ秒 var past_time = now_time - start_time; //テキストフィールドにアップ量を表示 yen_txt.text = String(Math.round(past_time * yen_per_ms)); } ---------------------------------- 　
すみません ＃１ です。 > 開催日時を > new Date(2011,4,1,0,0,0);//2011年4月1日 午前0時0分0秒 > と書き換えてみたのですが、 > 表示値の日付が「マイナス17日」となってしまいました。 本当ですね。検証不足で失礼しました。 変数の型指定 の unint や int がまずかったです。 限界値を振り切れてました。。。 そういう大きな数の型指定は ActionScript 2.0 同様 Number が良いです。 その他，妙な雑念も少し追い払って次のような感じで良いのではないかと思います。 ------------------------------------ //---テキストフィールド「cd_txt」を用意--- //(手動で用意しても良いですよ。) var cd_txt:TextField = new TextField(); //適当に設定 cd_txt.border = true; cd_txt.background = true; cd_txt.autoSize = "left"; //適当に座標を指定 cd_txt.x = 20; cd_txt.y = 10; addChild(cd_txt); //---開催の日時を設定--- //例：2011年4月1日 午前0時0分0秒 var open_date:Date = new Date(2011,3,1,0,0,0); //開催日時の1970年1月1日からの経過ミリ秒数を取得 var open_time:Number = open_date.getTime(); //今の日時オブジェクトの宣言 var now_date:Date; //1フレーム進む時間毎に関数countDownを実行するイベントリスナーを登録 this.addEventListener(Event.ENTER_FRAME,countDown); //関数countDownの定義 function countDown(evt:Event):void { //今の日時を取得 now_date = new Date(); //今の1970年1月1日からの経過ミリ秒数を取得 var now_time:Number = now_date.getTime(); //開催日と今の差分ミリ秒数を算出 var diff_time:Number = open_time - now_time; //カウントダウンする日数を取得 var cd_days:Number = Math.floor(diff_time/(24*60*60*1000)); //余りのミリ秒を取得 var remain_ms:Number = diff_time-cd_days*24*60*60*1000; //カウントダウンする時数を取得 var cd_hours:int = Math.floor(remain_ms/(60*60*1000)); //余りのミリ秒を取得 remain_ms -= cd_hours*60*60*1000; //カウントダウンする分数を取得 var cd_minutes:int = Math.floor(remain_ms/(60*1000)); //余りのミリ秒を取得 remain_ms -= cd_minutes*60*1000; //カウントダウンする秒数を取得 var cd_seconds:int = Math.floor(remain_ms/1000); cd_txt.text = "開催まであと" + cd_days + "日" + cd_hours + "時間" + cd_minutes + "分" + cd_seconds + "秒です。"; } -------------------------------- なお ActionScript に関わらず 月の数（１月 ２月…）は，日本人の感性とは１箇月ずれます。 日本人の 1月 は プログラミング言語では 0の月 です。 日本人の 2月 は プログラミング言語では 1の月 です。 日本人の 12月 は プログラミング言語では 11の月 です。 ですから ＃１ の場合は //例：2010年12月30日 午前7：30分 0秒 var open_date:Date = new Date(2010,11,30,7,30,0); のままで良いですし上の例も //例：2011年4月1日 午前0時0分0秒 var open_date:Date = new Date(2011,3,1,0,0,0); で良いのです。
こういうことでしょうか↓？ 教えて！goo より 「wonderflのコードをCS4で再現」 http://oshiete.goo.ne.jp/qa/5141080.html
おそらくこの点↓が問題でしょう。 > 次に スプライトAでボタンを作って、以下のように記述しました。 Suzuka や Parafla! の スプライト というものは Adobe (Macromedia) Flash で言うところの ムービークリップ(MovieClip) なんです。 で、 そのムービークリップというのはムービーの中のムービーであって「階層」を持つんです。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath … 「Suzuka 基礎・基本 ★ ターゲットパス(&階層)」 http://suzupara.iinaa.net/kiso_target.html ボタン と スプライト とは、階層を持つ持たないが大きな違いです。 （ボタン＝階層を持たない ・ スプライト＝階層を持つ） > タイムライン上にアクションレイヤーで > n = 10 ; > として 変数n に１０を代入しました。 おそらくこの タイムライン上 とは メインのタイムライン， ActionScript的に言えば _root のタイムラインだと考えられます。 一方 > on(Press){ > n = n - 1; > } と書かれたのは スプライトA ですから つまり スプライトA の中の変数 n から -1 をしようとしているということになります。 階層図で表すと次のようになります。 　_root ← n=10 　　　└スプライトA ←nから1を引く したがって、 _root の変数 n の値を -1 したい場合は、 スプライトAに書くスクリプトを on(press){ _root.n = _root.n - 1; } または on(press){ _root.n -= 1; } または on(press){ _root.n--; } もしくは on(press){ _parent.n = _parent.n - 1; } または on(press){ _parent.n -= 1; } または on(press){ _parent.n--; } もしくは on(press){ this._parent.n = this._parent.n - 1; } または on(press){ this._parent.n -= 1; } または on(press){ this._parent.n--; } のように書く必要があります。 ＝＝＝＝＝＝＝＝＝＝＝＝ なお on(release) や on(press) など onハンドラ の () 内の最初の文字は小文字です。 Flash Player 7 以上(SWF7 以上)用の SWF では 大文字小文字が厳格に区別されますから 大文字小文字を間違えると正常に動作しない現象が発生するおそれがあります。
以下の条件を全て満たさない場合、この回答は役に立たたないので回れ右。 *FlashDevelopを使用している。 *問題が発生しているのはOutputパネル *コロンの左側の数字によっては出力内容に色が付く。 結論からいうと、ActionScriptもFlashも質問者も悪くなく、FlashDevelopが余計なことをしているのが原因。 「二文字目がセミコロンである場合、最初の数値の値によってstatusを変える。 その上で、その2文字を本来のメッセージから取り除く」とかいう処理。なんで余計なことすんねん。 http://code.google.com/p/flashdevelop/source/bro … 回避策は、該当箇所(307-316)までをコメントアウトするなり削除した上で、ソースコードをビルドしなおしてOutputPanel.dllと入れ替える。 ============================================= *さんじゅっぷんくっきんぐ！面倒臭がりの俺のレシピ、書き方が非常にイイカゲンだ！ 0. FlashDevelopを終了する。 1.MonoDevelop, SharpDevelop, Visual C# Express等の開発環境と、必要があればコンパイラ等を用意 #俺はMonoDevelop + Monoを使うようにしているが、他の人には使いにくいかと(ぉ 2.ここ以下のファイルを階層構造保ったまんますべてダウンロード。まぁ俺がSubversionに慣れてないだけですが。 http://flashdevelop.googlecode.com/svn/trunk/FD3 … 3.開発環境上で、ソリューションを新規作成し…ウィザードの都合上、C#プロジェクトを新規追加するハメになるだろう。 名前は何でもいいや。実質どうせ使わないし。 4.ソリューションエクスプローラ上のソリューションを選択して多分コンテキストメニューとかから出来るんで、ダウンロードしたcsprojファイルを指定してプロジェクトを追加しておこう。 5. 何か参照のSystem.Deployment使ってないっぽいから削除 6. 今回面倒くさくてダウンロードしてないので、参照できなくなっているPluginCoreプロジェクトを削除する代わり、 すでにインストールしているFlashDevelopの方からPluginCore.dllを追加 7. ビルドしたバイナリの出力先が、このソフトの開発者の環境に合わせた位置にあって結構アレなので適当に修正。 8. ビルド 9.もとのOutputPanel.dllのバックアップとった上で、できあがったOutputPanel.dllを既にあるOutputPanel.dllと入れ替える。 10. FlashDevelopを起動し、現象が再現していたソースコードをビルド・実行してみて、現象が再現しないことを確認する。 ================================ 一度自分でビルドしてみてね。一応デバッグビルド済みの奴置いとくけど。 https://cid-b89cb784f5346675.office.live.com/bro … #MITライセンスって著作権者名書くらしいけど、プロジェクト(FlashDevelop.org)なのか作者(Mika Palumさん)なのかわからん。 #一応「リンクするだけでOK?」っぽい雰囲気がコメントにあるのでそのまんま放置http://www.opensource.org/licenses/mit-license.php #問題があったら差し替えるかも
どちらの方法も結構簡単ですよ。 ↓flash勉強用サイト http://flashmovie.client.jp/02-tech.html ↓おすすめ書籍 Webデザイン＆スタイルシート逆引き実践ガイドブック　境　祐司 2008年初版で少し古いのですが、Webデザインの勉強の仕方や、デザインの基本なんかも載せられていて面白かったです。 まるまるこのサイトをコピーして作ってみたりしたらいいと思います。
すいません。 常に許可にチェックを入れてください！
ノ　http://wonderfl.net/c/iSxc 見て学んでくらはい 課題には自分のレベルに合うものを選びましょー♪
その書かれていらっしゃるページが良く理解できますね。 私は理解できませんでしたが。。。 というかですね， 思ったまま(考えついたまま)を脈略無くメモしただけのページなのではないでしょうか？ 説明のしかたが悪いのではなく， 元から説明などする気などなくて， 単なる私的構想メモ日記を書いたページのように見えますが。 > 「1180:未定義である可能性が高いメソッド > flagStateの呼び出しです。」 > のエラーが出てしまいます。 ムービークリップクラスを継承するflagStatクラスを用意していないからではないでしょうか？ つまり 内部が３フレーム（３つのキーフレーム）からできていて 各フレームのステージ上には 「　(空白)」 や 「■」 や 「×」 の絵を配置し 各キーフレームには 「off」 や 「on」 や 「erase」 というようなフレームラベルを付けたムービークリップを用意しておいて ライブラリ からそのムービークリップを選択して リンケージ より flagStat というクラス名を付けるんです。 その作業が抜けているのではないでしょうか？ という意味です。 リンケージでクラス名を付ける部分や それを呼び出す部分などが参考になるかと↓。 「第３回 表示リスト」 http://saitos-web.com/interactive2/lec_3.html
> メインタイムラインの最初のフレームにスクリプトを書くのですよね？ それが「正解」か「不正解」かと問われるとおおむね「不正解」です。 スクリプトはタイムラインのキーフレームか，クラスファイルに書きます。 ボタンがメインタイムラインのフレーム1で登場するボタンでしたら メインタイムラインのフレーム1に書いても良いでしょう。 しかし ボタンがメインタイムラインのフレーム2以降に登場するのでしたら その登場フレームのキーフレームなど，ボタンが存在するフレームに書きます。 同じボタンでも登場シーンなどによって命令を変える必要が出てくる場合も多々ありますから こういう仕様であるのは当然です。 あと ムービークリップ内にもフレームがあります。 そのムービークリップ内フレームのキーフレームにスクリプトを書く場合も多々出てきます。 ＝＝＝ ＝＝＝ > こちらであっていますでしょうか・・？ ステージの任意の(全ての)場所をクリックしたときに Googleを表示させたいのでしたら，それで良いと思います。 ステージの任意の(全ての)場所ではなくて ボタンをクリックしたときにGoogleを表示させたいのでしたら間違っています。 ＝＝＝ ＝＝＝ > 次のフレームに飛ばそうとおもうのですが、 確認ですが その フレーム とは Flash 内のタイムラインのフレームのことですよね？ HTMLのフレームとかインラインフレームの意味ではありませんよね？ (navigateToURL を使われているので ふとそんな疑問が...) ボタンクリックによって Flash 内のタイムラインを次のフレームに進める場合 まずステージ上のボタンを選択して プロパティパネル より 例えば「my_btn」 というインスタンス名を付けます【図】↓。 そしてその ボタン「my_btn」 が存在するフレームのキーフレームに次のように書きます。 ------------------------ //このフレームで再生を停止 this.stop(); // ボタン my_btn にイベントを設定 my_btn.addEventListener( MouseEvent.CLICK , onClick ); // ボタンをクリックをすると動作するイベント function onClick( event:MouseEvent ) { //次のフレームで停止(※) this.nextFrame(); } ------------------------ 「次のフレームに飛ばす」の状態によって //次のフレームで停止(※) this.nextFrame(); の部分は変える必要があるかもしれません。 例えば， //フレーム2 から再生 this.gotoAndPlay(2); のようにする必要があるかもしれませんし， //フレーム2 で停止 this.gotoAndStop(2); のようにする必要があるかもしれませんし， //次のフレームから再生 this.gotoAndPlay(this.currentFrame+1); のようにする必要があるかもしれません。 stop()，play()，gotoAndStop(○○)，gotoAndPlay(○○) この４つは早く覚えた方が良いでしょう。 　
> player.setSize(width:Number, height:Number):Void > > というasを記述したのですが、 その :Void は返ってくる値の説明です。 「setSizeメソッドを使った場合返ってくる値はありませんよ。」という意味です。 ActionScript 3.0 の場合， Void の型指定は最初が小文字の :void ですから型指定のスクリプトでもありません。 「単なる "説明"」です。スクリプト中に記入してはいけません。 私は実際に試してみていませんが 次のページに実装例が書かれていますよ。 setSizeメソッド を使う部分も含まれています。 「YouTube ActionScript 3.0 Player API » interact!ve」 http://arthur87.sakura.ne.jp/item/60 　
画像を使いたいと書かれましても その画像がどこにあるどんな画像かがわからないため 具体的な方法やスクリプトは回答できませんね。 例えば ・その beginFill～ で描いた四角や三角なども画像と言えば画像です(ベクタ画像)。 ・ステージ上に描いた絵も画像です(シェイプ，ベクタ画像)。 ・スクリプトでビットマップ画像を描くことも可能です。 ・ライブラリの中に読み込んだJPEGなどの写真も画像です(ビットマップ画像)。 ・外部JPEGファイル(ビットマップ画像ファイル)をロードする場合もあるでしょう。 ・外部SWFでも静止画であれば一般的にそれは画像になります。 何処にある何を表示させるのかによって その方法も考え方自体も変える必要があることがわかると思います。 もし， ライブラリにあらかじめ読み込んであるビットマップ画像を ステージ上に呼び出すのでしたら この辺が参考になると思います↓。 「F-site [AS3] ビットマップをダイナミックに配置する」 http://f-site.org/articles/2006/08/10205003.html もし， 外部ビットマップファイル(JPEG/静止GIF/PNG)を 作成中のSWFにロードするのでしたら この辺が参考になると思います↓。 「ADD CHILD = AS3 - Loaderクラスで外部ファイルから画像を複数読み込む[3-5]」 http://www.addchild.net/as3-beginner/ls3/337.html その他，もし，もし，… と書いていたらきりがありませんのでこの辺で終わります。 ＝＝＝＝＝＝＝＝＝＝ あと ご質問で書かれているスクリプトの > var ball:MovieClip=new MovieClip(); の部分や， 私が上で書いた２つ目のページの > //Loaderオブジェクト生成 > var myLoader:Loader = new Loader(); の部分のように， for文の中で，同じ参照変数名を持つインスタンスを複数作ると， 後々の管理ができなくなるので， 「配列アクセス演算子」などを使って，違う参照変数名を付けた方が良いように思います。 （単に「並べて終わり」でしたらそのままでも良いと思います。）
こんにちは。 私も通常質問させていただく立場ですが、「オンマウスでサムネイルが出てくる動き」は AS２でならお答えできるかと思いました。 まず、仮にナビゲーションボタン１(oneBtn)に対してマウスをRolloverすると 縦に各イメージが表示されるとして、その各イメージを一つのムービークリップ（oneMC)内に入れ、 oneMCのタイムライン上に、（早さにもよりますが）例えば5フレーム、10フレーム、15フレーム等 同じ間隔をあけてイメージを挿入、そして最後のフレームにstop();を付けたらいいのではないでしょうか？ あとは、メインのタイムライン上の（MC内ではなく）フレーム上に下記のスクリプトを 入れたらいいかと思います。 oneBtn.onRollOver = function () { oneMC.gotoAndPlay(1); } 各イメージもボタンにして↑と同様にonRollOverでイメージ横にテキスト詳細（MC）が表示される 風にしたらいいのではないでしょうか？
＃１です。 > なぜfunctionのあとだとi=11になるのでしょうか？ Flash の ActionScript に限らず for 文で i を変えれば普通はそうなります。 それがルール（言語仕様）です。 ActionScript 限定で話をすると 例えば次の文をフレームに書いたとします。 --------------------- for (i=1; i<=10; i++) { trace(i); } trace(i); --------------------- 上の文はパブリッシュ時に 次のように変換されて処理されます。 --------------------- i = 1; while(i<=10){ trace(i); i++; } trace(i); --------------------- ※ HugFlash の HugDimension モードでの 自作SWF 解析結果 for文 を使って書いても， 結局内部マシン語的には while文 と同値のものとして扱われるということです。 またその while文 には上のように変換されるので i は 11 となって for文 から抜けます(while文 から抜けます)。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > onRelease時に > > _global.hensuu=i > //iはクリックしたmcの番号 > > などとしたい場合はどうすれば可能なのでしょうか？ それは ＃１ の回答自体がヒントになっていると思いますが， 各 MC 内に i を固定してしまえば良いでしょう。 ---＃１のスクリプトを変更---------------- for (i=1; i<=10; i++) { _root["mc"+i].num = i; _root["mc"+i].onRelease = function() { this.kai_mc.nextFrame(); trace(this.num); }; } ------------------------------------- 「制御」→「ムービープレビュー」で 各 MC クリックをすれば動作検証できると思います。 その他，私の最近の回答より 「スクリプトをまとめて書くには」 http://okwave.jp/qa/q6341073.html
＃１です。 前回のとき（つまりカスタムカーサーを入れる前）は， 「twolargeMC」をドラッグできていて ＃１で回答したものを入れた後（つまり＃１のカスタムカーサーを入れた後）， 「twolargeMC」をドラッグできなくなったということですか？ それは謎ですね。 カーソル（カーサー）のスクリプトとドラッグのスクリプトは あえて全く無関係にしていますから干渉し合うことはないと思いますが。 また， 実際に作成してみましたがそんなことにはなりませんでしたよ。 原因は他の部分にあるのでしょうね。 つまり 今回も前回も書かれていない箇所が原因でしょう。 以下は単に思いつくまま書くだけですが。 例えば カーサームービークリップ「handMC」自体に on(release){…} や on(press){…} や on(rollOve){…} などというような ボタン由来の onイベントハンドラ を書いているとか。 もしくは ムービークリップ「handMC」が存在するフレームに handMC.onRelease=function(){…} や handMC.onPress=function(){…} や onRollOve=function(){…} などというような ボタン由来の onイベントハンドラメソッド を書いているとか。 また例えば ムービークリップで作っていたカーサー「handMC」を ボタンで作り替えたとか。 また例えば ドラッグする twolargeMC の上のレイヤーに 透明のボタンでも用意してしまったとか。 　
　 まず alpha の値ですが この alpha はすごくアナログ的なものなのです。 例えばフラグ的に使うことはできません。 例：「alphaが0だったら1にする 1だったら0にする」 　　というようなことをするときに alpha の値は使えません。 雰囲気で言えば 「alpha=1」 は 「水１リットル」 みたいなものです。 実体として「正確に 水１リットル を汲み取れる人や装置」はこの世に存在しません。 日常生活での 水１リットル は必ず誤差を含みます。 正確な 水１リットル は数学的な概念として存在するだけです(理科的には存在しません)。 というわけで， alpha の値がキッチリと 0 になることなどまずないので if (img_mc.alpha == 0){ img_mc.removeEventListener(Event.ENTER_FRAME,imgAlpha2); } この 　 if(img_mc.alpha == 0) がダメです。 その上に書かれていらっしゃる 　 if (img_mc.alpha > 1) と同じように 　 if(img_mc.alpha <= 0) または 　 if (img_mc.alpha < 0) のようにする必要があります。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ あと img_mc の alpha が 0→1 や 1→0 と "変化している最中" に _btn から マウスオーバー したり マウスアウト された場合の処理が抜けていますね。 それと function の定義場所がおかしかったりもします。 その辺りのことも入れると スクリプトは次のようになります。 ----------------------- var img_mc:MovieClip; img_mc.alpha = 0; _btn.addEventListener(MouseEvent.MOUSE_OVER,xClick0); function xClick0(evt) { img_mc.removeEventListener(Event.ENTER_FRAME,imgAlpha2); img_mc.addEventListener(Event.ENTER_FRAME,imgAlpha); } function imgAlpha(event:Event) { img_mc.alpha += 0.05;//スピード if (img_mc.alpha>1) { img_mc.removeEventListener(Event.ENTER_FRAME,imgAlpha); } } _btn.addEventListener(MouseEvent.MOUSE_OUT,xClick); function xClick(evt) { img_mc.removeEventListener(Event.ENTER_FRAME,imgAlpha); img_mc.addEventListener(Event.ENTER_FRAME,imgAlpha2); } function imgAlpha2(event:Event) { img_mc.alpha-=0.05;//スピード if (img_mc.alpha==0) { img_mc.removeEventListener(Event.ENTER_FRAME,imgAlpha2); } } ----------------------- 　 　
>>1さん来ないみたいなので代わりに補足レス >未定義stage Haneクラスのインスタンスが stageにaddChildされてないと Haneインスタンスのstageはnullです もう少しいうとこのHaneクラス自体は MovieClipの拡張クラスである必要性が あんまりないように思います hane_mcにリスニングさせればいいかと思います public function moveHane(mou:Point):void{ distance = Point.distance(ballPt,mou); addEventListener(Event.ENTER_FRAME, kaitenHandler); } public function kaitenHandler(ev:Event):void{ if(distance<200){ hane_mc.rotation+=2000/Math.max(50,distance); } ↓ public function moveHane():void{ hane_mc.addEventListener(Event.ENTER_FRAME, kaitenHandler); } public function stopHane():void{ hane_mc.removeEventListener(Event.ENTER_FRAME, kaitenHandler); } private function get dst():Number{ return new Point(hane_mc.mouseX,hane_mc.mouseY).length } public function kaitenHandler(ev:Event):void{ if(dst<200){ hane_mc.rotation+=2000/Math.max(50,dst); } 片づけ用にstopHane()を用意 distanceをｄｓｔとしてgetter実装 これでdistanceとballPtプロパティは不要になってます
参考画像を作ったので、そちらを参考にして下さい。
> ムービープレビューの不可解な動きは… ですよね。 それでしたら最新の Flash Player による仕様変更などは全く関係しないはずです。 ムービープレビュー時の動作は その オーサリングツール (ご質問の場合は Flash MX) と， それに付随する スタンドアローン版(デバッグ版)の Flash Player と， OS のバージョン（Windows Me から XP にアップグレードしたなど） だけに依存します。 つまり，極々個人的な問題に集約されます。 OS を バージョンアップ しているなどのことをしていないのであれば Flash MX の アンインストール ＆ 再インストール をするのが第一手段だと思います。 もし OS が変わったから不具合が起きるなどの場合は その責任は誰も負えません(Macromedia も Adobe も)。 「互換モード」を XP 未満 にするとか？ （XP なら十分動作すると思うので関係ないと思いますが） そのくらいができることでしょうか。 Google検索「互換モード Flash MX」 http://www.google.co.jp/search?hl=ja&q=%E4%BA%92 …
1) リファラーで認証する 2) クッキーやフォームから認証キーを渡して認証する 3) JavaScriptとワンタイムパスワードを使って認証する すぐに思い浮かぶのはこのくらいですかね。 1番は簡単で、多くの場合に十分だと思います。 ただしリファラーを切っていたり、サーバー移転時などで問題が生じると思います。
私の環境(Windows Vista / IE 8)ではURLエンコードすれば成功しましたよ。 例えば 検索窓である テキスト入力 の テキストフィールド に 「_txt」 というインスタンス名を付けていたとします。 その場合は次のようになります。 var _str:String = encodeURI(_txt.text); var url:URLRequest = new URLRequest("http://www.youtube.com/results?search_query=" + _str + "&aq=f"); navigateToURL(url);
基本的には SWF と FLV は同じドメインにないと FLV はロードできないと思います。 逆に言えば SWF と FLV が同じドメインにあれば，基本的に普通はロードできるということになります。 また SWF と FLV が違うドメインにあったとしても，FLV ドメイン側に クロスドメインポリシーファイル(XML) があればロードできるようになると思います。 その辺が再生できるできないの原因の要素になっている可能性は高いと思いますが。 Google検索 「クロスドメインポリシー FLV SWF」 http://www.google.co.jp/search?hl=ja&q=%E3%82%AF …
ご質問のポイントが何なのかが見えませんが。 > 一度ブラウザでそのテキストを読み込むと、テキスト自体を編集しても、 > 編集前のテキストがいつまでも読み込まれ続けてしまいます。 あの... それは 「テキスト」 をキャッシュから参照する問題であって 「SWF(つまり Flash)」 をキャッシュから参照する問題とは関係がないのではないでしょうか？ 問題を切り分けましょう。 SWF(Flash) から ロードする テキストファイル のキャッシュ参照を防止するのでしたら， ロードするテキストファイルのファイル名の後に 随時変わる URLクエリ でも引っ付けてロードするのが一般的な方法かと思います。 ActionScript のバージョンも何も書かれていらっしゃらないので具体的な回答はできませんが， 例えば 「○○○.txt」 というファイルをロードするのでしたら 「○○○.txt?△△△=□□」 というファイルをロードするようにします。 そして □□ の部分を毎回変えるようにします。 例えば ランダムの数を出して 「○○○.txt?△△△=82645931468」 のようなものを読み込むとか， 今現在の時刻を出して 「○○○.txt?△△△=2010_12_03_21_48_10」 のようなものを読み込むとか。 http://www.google.co.jp/search?hl=ja&source=hp&q …
＃１です。 javaswfというjavaのライブラリというものがどういうものであるのかわかりませんが swfファイルの作り方などによって動作しないという場合は無数にあるでしょう。 そもそも Flash とはタイムラインアニメーションで動かしているとは限りません。 というか... 最近はそういうものは少ないかもしれませんし， またタイムラインアニメーションであってもムービークリップ内の階層に作る場合がかなりあります。 「タイムラインアニメーションで動かしていない場合」というのは ActionScript で動かしている場合です。 SWFのメインのタイムラインはほんの1～数フレームだけで， ActionScriptで延々と動く物はたくさんあります。 そのようなものは当然 「stop() ←タイムラインの再生を止める」 では止まらないでしょう。 > swf(1フレームごとの点の座標を読み込んで、それを元に点の移動を表したアニメーション) これもそうじゃないですか？ 実際にはフレームは1フレームしかなくて enterFrame や Event.ENTER_FRAME 系で座標データ通りにインスタンスを動かしているのかもしれません。 もしそうである場合はそういうスクリプトを消さない限り止まりません。 「タイムラインアニメーションであってもムービークリップ内の階層に作る場合」というのも 文字通りそのままのことですが， SWF のメインのタイムラインは 1フレーム くらいしかなくてその そのメインのタイムライン内に置いたムービークリップの中でアニメーションが動いている場合です。 この場合 SWF のメインのタイムラインは 1フレーム くらいしかないのですから これまた当然 「MovieClip(mc.l.content).stop(); ←子SWFのメインタイムラインの再生を止める」 では止まらないでしょう。 内部のムービークリップの中の再生を停止させなければなりません。 また ActionScript 3.0 と 2.0 以下は共存できませんから ActionScript 2.0 以下で作られた SWF を ロード した場合も 思惑通りに動かないのが当然と思った方が良いです。 最初のご質問から 「子SWF も自作のもの」 で 「子SWF はメインのタイムラインを使ったアニメーション」 で 「子SWF も 親SWF も作成環境は同じだろうから ActionScript のバージョンも同じ」 だろう。 と推測したので それを大前提として ＃１ の回答を書いたのです。 どれかの条件かが変わると，当然 ＃１ の回答のものでは停止再生のコントロールはできません。 　
その 「アルファベット暗号装置」 というものがどういうものなのかがわからないため 勝手な想像や決め付けでしか書けませんが。。。 絵(画面/図)でも添付してくださるとイメージしやすかったのですが。。。。。。 > クリックするとA→B→C・・・となっていって > 正しいアルファベットにする ・何をクリックするのでしょう？ 　　└ボタンかスプライト？ ・何が A→B→C・・・ となるのでしょう？ 　　└テキストフィールドの文字？ ・フラグが立つとは？ 　ビジュアル的に籏の絵が立つということ？ 　それともBoolean値がTrueになること？ 　　└これはBoolean値ということにしよう。 以下は上のような 勝手な決め付け で回答(作成例)を書きます。 ◎作成例 任意の階層(_rootなど)に次のようなものを用意していたとします。 　任意の階層(_rootなど) 　　　├テキストフィールド：変数名「txt0」 　　　├テキストフィールド：変数名「txt1」 　　　├テキストフィールド：変数名「txt2」 　　　├スプライト：インスタンス名「btn0」 　　　│　　└ボタン画像 　　　├スプライト：インスタンス名「btn1」 　　　│　　└ボタン画像 　　　└スプライト：インスタンス名「btn2」 　　　　　　└ボタン画像 その任意の階層(_rootなど)のイベントスクリプト ------------------------------------ //アルファベット格納用配列 var ABC_arr = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]; //暗号の解を用意(例 NHK) var ans0 = "N"; var ans1 = "H"; var ans2 = "K"; //フラグとなる変数を用意 var flag = false; //この階層を変数化 var me = this; for(var i=0; i<=2; i++){ //各テキストフィールドに最初の文字を表示 me["txt" + i] = ABC_arr[0]; // //各カウンタの初期化 me["cnt" + i] = 0; // //各ボタンスプライトに各iの値を保存 me["btn" + i].n = i; // //各ボタンスプライトクリック時の動作 me["btn" + i].onRelease = function(){ //対応カウンタに1を加算 if(me["cnt" + this.n] < ABC_arr.length-1){ me["cnt" + this.n]++; }else{ me["cnt" + this.n] = 0; } //対応テキストに対応アルファベットを表示 me["txt" + this.n] = ABC_arr[me["cnt" + this.n]]; //もし各テキストが暗号の解と一致していれば if(txt0 == ans0 && txt1 == ans1 && txt2 == ans2){ //フラグを立てる flag = true; //(見えるようにトレースウィンドウに表示) trace(flag); } }; } ------------------------------------ ※ 質問の 「アルファベット暗号装置」 とは 　　かけ離れたものかもしれません。
元の Appleショップ サイトのJSで動くものが 私の環境では(だけ？)ドラッグできないので したいことが今ひとつ理解しにくいです。。。 (何だか出来の悪いJS...。無理をゴリ押ししてみっともないことになってるApple。) 良くはわかりませんが， 「ドラッグを 『した』か 『していない』か というフラグとなる変数」を作って それの変数の値を使って判断すれば良いのではないでしょうか。 --- Frame25 のアクション--------------- //ドラッグ 『した』『していない』のフラグをfalseにしておく var drag_flg:Boolean = false; //twolargeMCを押したときに実行するメソッドを定義 twolargeMC.onPress = function() { //twolargeMCをドラッグ開始 startDrag(this); // //マウスが動いたときに実行するメソッドを定義 this.onMouseMove = function() { //ドラッグ 『した』『していない』のフラグをtrueにする drag_flg = true; //即 このマウスが動いたときに実行するメソッドを削除 delete this.onMouseMove; }; }; //twolargeMCを放したときと //外で放したときに実行するメソッドを定義 twolargeMC.onRelease = twolargeMC.onReleaseOutside = function () { //もしドラッグ 『した』『していない』のフラグがfalseの場合 if (!drag_flg) { gotoAndStop(20); } else { //ドラッグ終了 stopDrag(); //ドラッグ 『した』『していない』のフラグをfalseに戻す drag_flg = false; } }; --------------------------------- 　
じっくり見てませんし検証していませんから 他にも変なところがあるかもしれませんが とりあえず目に付いたのは↓ test_txt.text = item.text(); この部分は次のようにすべきではないでしょうか。 test_txt.htmlText = item.text(); 　
あれ、できるのかな？とおもい　調べてみました。 .loadMovieを使っての 質問・解答のなかにヒントらしきものを見つけたので 記入しておきます。既に見られていたり、いや、できるよということでしたら私の無知です。 すみません。 http://okwave.jp/qa/q5339620.html
ちょっと乱暴なやり方ですが // クリック時の処理 peat[i].sp.addEventListener( MouseEvent.CLICK , function(event:MouseEvent):void{ test(event, arguments.callee, peat[i]); } ); } ↓ peat[i].sp.addEventListener( MouseEvent.CLICK, function(ind){return function(event:MouseEvent){test(event, arguments.callee, peat[ind])}}(i) ); 簡単に言うと関数を作る関数をその場で実行してる感じです
知っている限りでは例えば「http://okwave.jp/」にアクセスした時に最初にアクセスするファイルを「http://okwave.jp/index.html」ではなく「http://okwave.jp/top.html」にするにはサーバーの「htaccess」を指定変更すれば出来ると思います。 http://www.shtml.jp/htaccess/directoryindex.html こちらのページを参考にする事で変更は出来ます。 ただ、ここの部分を変更すると今後もずっと同じ仕様になってしまいますので、本当はあまりおすすめ出来ないかもなんですよね～。質問主が「今の状況を理解している人がいない」という状況を、仮に質問主様が運用管理から外れた場合助長する事になるんじゃないかと（普通は滅多にhtaccessなんて触らないし） もしこちらで設定変更されるなら、ちゃんと仕様書等作って運用管理する体制整えた方がいいですよ？まぁこれやるやらないに限らず本当は整えるべきなんですが。 ブラウザの戻るボタンでムービー再生されないようにするにはクッキーの読み込みで「一度表示されたページは表示されない」という方法があったような気がしますが、ちょっと調べきれなかったのでhtacessを使った上でまだ必要だと感じられたら、ご自分で調べてみて下さい（以前にそういうシステム作った気がしますが、かなり面倒だった記憶があります。）
> 自分が思い浮かぶのは、 > サイズ意外のところに背景色をおいて隠す。。くらいです。　 それでも良いのではないでしょうか。 ActionScript 3.0 設定 でしたら root(シーン1 など のメインタイムライン)全体にマスクをかけても良いとは思います。 //--- root の フレーム1 に書く------------------ //適当なスプライトでも用意して var mask_sp:Sprite = new Sprite(); //そのスプライトにステージと同じサイズの四角を用意し mask_sp.graphics.beginFill(0xffffff); mask_sp.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight); mask_sp.graphics.endFill(); //そのスプライトを配置 addChild(mask_sp); //root に スプライトのマスクをかける root.mask = mask_sp; //---------------------------------------- ActionScript 2.0 以下では 同じことはできないと思います(多分)。
例えば、ステージ外に画像を残して作成していませんか？
ActionScript は仕事を順番に並べて書いた命令書で、上から順に命令が実行されていきます。 式次第（プログラム）に沿って式典が進むことと、似ています。 例えば、100 人の卒業生に卒業証書を渡すとします。 100 人分の仕事を逐一書いたのではスクリプトが長くなり、何より面倒です。 そこで、” function ”という機能が考案されました。 「○○に証書を渡す」と書いた命令の集まりを本来の仕事の流れとは別に用意しておき、いつでも何度でもそこに寄り道できる仕組みです。 また、○○の部分を変えることもできるので、条件を変えながら繰り返しこの寄り道を訪れるだけで済みます。 寄り道での用事が済んだら、本筋に戻らなければなりません。 本筋に戻る際に、何か１つだけ情報を持って帰ることができます。 この時に持ち帰る情報を「戻り値」、情報を持ち帰るように指定されている寄り道は「値を返す」などともいいます。 ＊ ＊ ＊ ActionSctipt で扱う情報には文字列や数値といった種別があり、この種別をデータ型といいます。 ActionScript 2.0 からはいろいろなところでデータ型を明示できるようになりましたが、明示は必須ではありません。 ご質問文にある「省略可能」は、「情報の種別は明示しなくても構わない。明示するならば～」という意味です。 「メソッドのデータ型は省略可能」はメソッドの型がどれ、というのではなく型を明示する文法そのもののことで、メソッドを定義する時、型を明示するなら”戻り値の型”を void に、との意味だと思います。 データ型は、寄り道から戻る時に持ち帰る情報（＝戻り値）にも適用されます。 ご提示のスクリプトで :void と書かれているところが、戻り値の種別を表すデータ型です。 例えば数値を持ち帰りたいのなら、void の代わりに Number や int などの数値を表す型の名前を書きます。 持ち帰りたい情報が特になければ、無理に持ち帰る必要はありません。 この場合は「何もないもの＝ void 型の値を持ち帰る」と考えて、戻り値のデータ型に void を指定します。 － － － － － ところで、” function ”のキーワードで定義するものを、何と呼びますか？ 一般には「関数」ですが、「メソッド」と呼ばれることもあります。 同じキーワードで定義する関数とメソッド、違いは何でしょうか。 実は、両者の違いは諸説紛々で、はっきりした答えは出ていません。 どちらも「再利用できる命令の集まり」であって、機能は全く同じです。 有力な説は １．”クラス”というものの中に組み込まれているものがメソッド、それ以外は関数 ２．値を返さないものがメソッド、返すものが関数 どちらの説にももっともな論拠があります。 ご参考になさっている本の著者は、２を支持しているのかもしれません。 ” function で定義するもの”は、正式に全部書くと次のような書き方になります。 　　function 名前 ( 引数:引数のデータ型 ) :戻り値のデータ型 { 　　　仕事の内容 　　　return 持ち帰る情報; 　　} 引数の話はひとまず置いて、最後の” return ”というキーワードに注目してください。 return は寄り道から本筋に戻る際、情報を持ち帰る（＝「戻り値がある」もしくは「値を返す」）場合に使い、何も持ち帰らない時は省略します。 ご提示のスクリプトの moveX には、return のキーワードがありません。 この寄り道は本筋に戻る時、持ち帰る情報がない寄り道であることが分かります。 何も持ち帰らない場合、「戻り値のデータ型」は何もないことを表す void にすると決められています。 逆に return で何かを持ち帰る時は、void 以外のデータ型を指定する決まりになっています。 先述の関数とメソッドの違いで、２の説には「値を返さない（＝ return がない）ものがメソッド」とありました。 この説に則って考えますと、「メソッドは return がなく値を返さないもののことだから、戻り値のデータ型を明示するなら必ず void 」になります。 関数とメソッドの違いは明確になっていませんから、２の説を支持すると「”メソッド”（ return のない function ）の戻り値のデータ型は必ず void にする」は間違いではありません。 しかし、function といえば「 function 名前 ( ):void 」と必ず書くものだと、おまじないのように覚えるのは誤りです。 return がある場合は、void ではなく違う型の名前にしなければならないからです。
書かれていらっしゃるスクリプトでは ActionScript 2.0 であっても普通は通用しませんよ。 Flash Player 6 以下の ActionScript 1.0 レベルでしたら Flash的には通用するのかもしれませんが(単に実行してくれるだけで本当は通用しない) ActionScript 2.0 が登場した Flash Player 7 以降用SWF では大文字小文字が区別されます。 on (Rollover) →変更→ on (rollOver) GotoAndPlay(1) →変更→ gotoAndPlay(1) このように変更しなければ ActionScript 2.0 では（1.0 でも）通用しません。 さて ActionScript 3.0 ですが、 ActionScript 3.0 ではスクリプトを変えるとかそういうレベルの話ではなく， そもそも ボタンインスタンス(またはムービークリップインスタンス) を選択した状態で そのインスタンス自体にスクリプトを書くことはできません。 つまり > これを、AS3では、どのように書き換えれば良いでしょうか？ と書かれていらっしゃるような 「書き換えレベル」 の修正ではできないのです。 ActionScript 1.0 の後半(Flash MX(Flash Player6))から使えるようになったイベントハンドラメソッドと同様， まずボタンなどにはインスタンス名を付けて そのボタンインスタンスに対してクリックやマウスオーバー時の動作を定義しなければなりません。 この辺を参考にしてみてください↓。 「FF071110 - イベントを制する者、ActionScript 3.0を制す - F-siteセミナー」 http://fumiononaka.com/Sample/F-site/FF071110.html ※ActionScript 1.0 の後半から使える 　 イベントハンドラメソッドについては 　 下記のページをご参考に。 「ムービークリップのイベントハンドラ」 http://homepage3.nifty.com/ginga-b/MX/mc_eventha …
なるべく元のサンプルと同じことを なるべく元と同じような方法で なるべく簡単にするなら次のような感じになると思います。 以下の説明ではマツボックリを代表にします。 まず元のサンプル（act46.fla）で パブリッシュ設定 の スクリプト 設定を ActionScript 3.0 にして， root(メインのタイムライン) の フレーム1 に書かれているスクリプト count = 1; これを次のように変更します。 var count:uint = 1; 次に 「ライブラリ」で マツボックリのムービークリップシンボル「matu」 を選択して 右クリックなどから「プロパティ」で「シンボルプロパティ」パネルを表示させ， リンケージ の欄で 　□ ActionScript 用に書き出し にチェックを入れ， 　クラス(C)：[　　　　　　　] の欄でクラス名を付けます。 ここでは例えば 「Matu」 というクラス名を付けることにします（【下図】↓）。 そして ライブラリ内のシンボルの「matu」でも良いですし ステージ上のインスタンス「matu」でも良いので， そのムービークリップ内のタイムラインの編集に入ります。 ムービークリップ内のタイムラインは１レイヤーだけなので スクリプトを書くレイヤーでも追加して2レイヤーにし その新レイヤーの フレーム1 に次のようなスクリプトを書きます。 ----------------------------- // ドラッグ開始 this.addEventListener(MouseEvent.MOUSE_DOWN,mouseDown); function mouseDown(event:MouseEvent):void { root["matu" + root.count] = new Matu(); root["matu" + root.count].x = this.x; root["matu" + root.count].y = this.y; root.addChild(root["matu" + root.count]); this.startDrag(); } //ドラッグ終了 this.addEventListener(MouseEvent.MOUSE_UP,mouseUp); function mouseUp(event:MouseEvent):void { this.stopDrag(); root.count++; } ----------------------------- 以上でマツボックリに関しての作業は終わりです。 考え方や使い方によってはスクリプトの書く場所やその内容なども変わると思いまが そういった無数の場合は書けませんし ある程度の場合は書けたとしても問題がややこしくなるので 「なるべく元と同じ」 を尊重したものを回答しました。
確かにFLASHを作成するにはAdobeFLASH等の製品が必要ですが、 フリーウェアでも作成可能です。 http://allabout.co.jp/gm/gc/66769/ ただ、「完全互換」とか、本家Adobe製品で行える全ての事を、 こういったフリーウェアで実現できるとは思わない方が良いでしょうね。
> 0⇒1⇒2と現在フォーカスが当たっているものだけ > 別の色にするというもの ↑この部分の意味が全くわかりません。 （フォーカスが当たっているものって普通は１つでは？？？） とりあえず上で書いた部分は無かったことにします。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 上のことは無いものとして さらにもっともっと問題をシンプルにしませんか？ 書かれたスクリプトを次のようにするとどうなりますでしょう？ -------------------------- for (var i = 0; i < 3; i++) { var icon = new Icon(); icon.x = i * 20; icon.num.text = i; addChild(icon); } icon.x = 200; -------------------------- 別の３つの Icon クラスのインスタンスに 同じ名前（同じ参照変数名）を付けたら ３つ全てを管理できなくなるでしょう？ 「文字の色」とか「Timer」とか そういう問題以前のことだと思います。 上のスクリプトを次のように変えれば問題(解決策)が見えてきませんか？ ------------------------------- for (var i = 0; i < 3; i++) { this["icon" + i] = new Icon(); this["icon" + i].x = i * 20; this["icon" + i].num.text = i; addChild(this["icon" + i] ); } this.icon0.x = 0; this.icon1.x = 100; this.icon2.x = 200; ------------------------------- または，次のように変えてみましょう。 ------------------------------- for (var i = 0; i < 3; i++) { this["icon" + i] = new Icon(); this["icon" + i].x = i * 20; this["icon" + i].num.text = i; addChild(this["icon" + i] ); } for (i = 0; i < 3; i++) { this["icon" + i].x = i * 100; } ------------------------------- Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&q=%E9%85%8D …
お使いの Flash のバージョンも， パブリッシュする SWF のバージョンも ActionScript のバージョンも書かれていませんから ズバッ とした回答はできませんよ。 また， > 添付している画像を確認していただけると一番早いかと思います。 と書かれましても... 図が(図の中の写真？が)よくわからないのですが... とにかく右上からですよね。 グラデーションマスクの方法でしたら 再生プレーヤーが Flash Player 8 以上でしたらできると思います。 （Flash Player 8 以上用の SWF をパブリッシュする必要があります。） （お使いの Flash が Flash MX 2004 以下の場合は この話では対象外です。） その場合， 画像(写真？)をムービークリップに変換してインスタンス名を付け その画像入りムービークリップに アルファのグラデーションマスクの塗り入りのムービークリップのマスクをかければ良いと思います。 ・場合１ Flash 8 以上で(Flash 8，CS3，CS4，CS5 で)， パブリッシュ設定を Flash Player 8 以上にして ActionScript のバージョンを ActionScript 2.0 (または 1.0) にします。 その場合のスクリプトなどの例 「にゃあプロジェクト - ウェブログ - グラデーション・マスク」 http://www.project-nya.jp/modules/weblog/details … 「アルファマスク処理 (Flash AS2.0) « Webデザイナーの覚書」 http://zoo.eek.jp/notebook/?p=37 など ・場合２ Flash ＣＳ３ 以上で(Flash CS3，CS4，CS5 で)， パブリッシュ設定を Flash Player 9 以上にして ActionScript のバージョンを ActionScript 3.0 にします。 その場合のスクリプトなどの例 「flashのグラデーションマスク Room#1102」 http://blog.room-no1102.net/?p=43 「Adobe ActionScript 3.0 表示オブジェクトのマスク」 http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … ※ 「パブリッシュ設定を Flash Player 9 以上にして 　　ActionScript のバージョンを ActionScript 2.0 にする」 　　という場合を書いていないのは 　　バグ（おそらくバグだと思う）があるためです。 「グラデーションでのマスクについて」（OKWave） http://okwave.jp/qa/q5100656.html ＝＝＝＝＝＝＝＝＝＝＝＝ とにかく何にしてもバージョンですよ。 バージョンがなければまともに回答できません。 ちなみに... 背景が何かの色一色（白一色とか）でしたら グラデーションマスクもスクリプトも何もありません。 アルファ入りグラデーションの塗り入りインスタンスを 写真の上で右上から左下にモーショントゥイーンで動かせば良いだけです。 （これなら Flash Lite 1.0 (一番初期の携帯Flash) 用 SWF でも作成可能です。） 「モーショントゥイーンを作成しよう！」 http://1art.jp/flash/le/lesson2/lesson2.htm 「flashゲーム作成記 塗りカラーをアルファでグラデーションして光を表現する」 http://flash.polig.daa.jp/?eid=737333
CSV→XML変換は独自にスクリプトを書く必要はあると思いますが、可能です。 SWF内でデータができあがっているのなら、表示ももちろん可能です。
＃１＆２です。 > 「〇〇年〇〇月〇〇日〇〇時〇〇分〇〇秒」を > ターゲットに、現在の時間からカウントダウン そういうことですね。 それでしたら次のような感じになるのではないでしょうか。 以下は ＃１ の補足で書かれたものをベースに変更しています。 HTML --------------------------- <html> <head> <title>test</title> <script type="text/javascript"> function sayTime() { //2010年12月1日0時をターゲットとする var targetDate = new Date(2010,11,1,0,0,0); var targetTime = targetDate.getTime(); return targetTime; } </script> </head> <body> <!--Flashを貼り付けるタグなど--> </object> </body> </html> --------------------------- swfファイルActionScript --------------------------- //externalクラスのインポート import flash.external.*; //1フレームで停止 stop(); //JavaScriptからターゲットのミリ秒数を取得 var jsTime:Number = Number(ExternalInterface.call("sayTime")); this.onEnterFrame = function() { // //現在のローカル日付オブジェクトを作成 var today:Date = new Date(); // //1971年1月1日から現在のミリ秒数を取得 var myTime:Number = today.getTime(); // //JavaScriptで得たミリ秒数から現在のミリ秒数を引いた残り var timeLeft:Number = jsTime - myTime; //その 残り を 秒 にしておく var secLeft = Math.ceil(timeLeft / 1000); // //残り時間のそれぞれ 日・時・分・秒 を割り出す var days:Number = Math.floor(secLeft / (24 * 60 * 60)); secLeft -= days * 24 * 60 * 60; var hrs:Number = Math.floor(secLeft / (60 * 60)); secLeft -= hrs * 60 * 60; var min:Number = Math.floor(secLeft / 60); secLeft -= min * 60; var sec:Number = secLeft; // //日を文字列に変換 var counter_days:String = String(days); //時を2桁文字列に変換 var counter_hrs:String = ("0" + hrs).substr(-2, 2); //分を2桁文字列に変換 var counter_mins:String = ("0" + min).substr(-2, 2); //秒を2桁文字列に変換 var counter_secs:String = ("0" + sec).substr(-2, 2); // //各テキストフィールドに 日・時・分・秒 を表示 _root.time_days.text = counter_days; _root.time_hrs.text = counter_hrs; _root.time_mins.text = counter_mins; _root.time_secs.text = counter_secs; // //カウントダウン終了時2フレームへ if (timeLeft <= 0) { delete this.onEnterFrame; gotoAndStop(2); } }; --------------------------- ※次の図は 日・時・分・秒 を求めるイメージ図です。 ※＃２の下に substr() についての図も追加しました。 　
HTMLのほうのFLASH領域は100%に広がっていますか？ もしくわ、FLASHに // 100%表示 stage.scaleMode = StageScaleMode.NO_SCALE; // 左上指定 stage.align = StageAlign.TOP_LEFT; をいれてみてはどうでしょうか？
こんな感じでしょうか var loader_obj : Loader = new Loader(); var url : URLRequest = new URLRequest("./loader_obj.swf"); loader_obj.load(url); loader_obj.contentLoaderInfo.addEventListener(Event.COMPLETE ,compHandler); addChild(loader_obj); function compHandler(evt:Event):void{ //ロード完了後にcontentのサイズを変えてあげる //とりあえず、幅を基準に広げてます。 var wp:Number = stage.stageWidth / loader_obj.contentLoaderInfo.width; loader_obj.scaleX = wp; loader_obj.scaleY = wp; }
mc.x0 は ムービークリップ「mc」 の中の 変数 x0 です。 mc.x は ムービークリップ「mc」 の x座標です。 したがって次の２行 　　mc.x0 = mc.x; 　　mc.x = 100; に注釈を加えると次のようになります。 　　//ムービークリップ「mc」 の中の変数 x0 に 　　//ムービークリップ「mc」 の現在の座標を保存 　　mc.x0 = mc.x; 　　//そしてムービークリップ「mc」 の x座標 を 100 にする 　　mc.x = 100; 作成しているものが見えないので何とも言えませんが ムービークリップ「mc」 の最初の配置位置が大切なんじゃないでしょうか？ ムービークリップの最初の配置位置は変数に記録しておいて そのムービークリップのx座標を100にするなど色々動かしてまた元の位置に戻すときに ムービークリップ「mc」内に保存した個々の元の座標にする。 だいたいそんな内容ですよ。 例えば たくさんのムービークリップを ☆ 型に配置する場合， 手でムービークリップの位置を決めるのは簡単なことです。 ActionScriptで配置しようと思えば， 各座標などを計算したりあらかじめデータを調べておいて そうなるように配置しなければなりません。 それは大変で手間です。 それで最初の座標は作者の置いた場所（つまりどこでも良い）ということにしているのではないかと思います。 靴をぬいで上がる飲み屋さんの下駄箱とか 銭湯のロッカーのようなものです。 Aさんのロッカーは139で Bさんのロッカーは26で Cさんのロッカーは231で… などのような管理台帳や一覧表を用意して銭湯のロッカーを管理することもできますが それだと，銭湯屋さんも客もみんなが手間です。 それで普通客にはロッカーの番号札の付いたキーを持って歩かせますよね。 帰るときは自分の番号札を見れば 「調べる」とか「考える」とか「思い出す」という作業をせずに簡単に自分のロッカーのところに戻れるじゃないですか。 そんなようなシステムです。
作成方法とか ttp://flashrave.org/anima/infinity_scroll/index.html スクロールメニュー　とか、そんな語句で検索してみてください。
「動きがカクカクする」 という現象自体が どういうカクカク状態なのかがわからないため返答が難しいです。 「Suzuka で SWF8 を選択したら滑らかになる」 という現象は 私の経験上からだけで言えば 「JPEG などのビットマップ画像を 拡大/縮小/回転 などをさせるときに画像がギザギザになったりカクカクと動いたりしなくなる」 くらいです。 つまり JPEG や PNG や GIF などのビットマップ画像限定の話になります。 同様の現象はここにも書いてありますが↓。 「クリックポイント拡大 サンプル＆作成方法解説」 http://suzupara.iinaa.net/magnification.html 　～引用～ > Suzuka の場合，ビットマップを拡大縮小させたとき > SWF8 で書き出せば > なぜか自動的にスムージングがかかって > ある程度カクカク・メラメラが押さえられるようです。 こういう ビットマップ カクカク現象 でしょうか？ この カクカク現象 限定でしたら Flash の 「ライブラリ」 で読み込んだビットマップ画像を選択して 右クリック→プロパティ などから「ビットマップのプロパティ」パネルを表示させ 　□ スムージング にチェックを入れると ある程度カクカク・メラメラが押さえられます。 　↓【添付図】 参考↓ 　 　 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ また、 ご質問でも書かれていらっしゃいますが 「動きがカクカクする」 という現象はフレームレートが低いことによっても起こります。 でも 30fps だと普通の場合は大丈夫ではないかと思います。 しかし、 画像にフィルタやアルファなどをかけすぎると（特にぼかし系入りのフィルタ） 画像描画（描画計算処理）のために PC の CPU(GPU) がアップアップ状態になって処理が遅くなり 設定のフレームレートに達することができずにカクカクする場合も多々多々多々多々あります。 または かなり凝った ActionScript で 3D などを表現しようとした場合も PC の CPU がアップアップ状態になってカクカクすることがあります。 この場合のカクカクはどうしようもありません。 フィルタやアルファなどをかけないようにするとか 凝った ActionScript で CPU を疲れさせるのをやめにするとかしか対処法はありません。 または 動く部分の描画スペースを減らすというのも１つの方法です。 (例：800×600px のSWFを 200×150px で HTML に貼り付ける。 など)
> 各ボタンon (release)で > 各ムービークリップの再生をしたい と書かれていらっしゃいますが， まず on(release) が使えるのは ActionScript 1.0 または 2.0 です。 その点は問題ないでしょうか？ つまり Flash 8 以下 (Flash 8，MX 2004，MX，5) をお使いの場合は特に気にすることはありません。 しかし Flash CS3 以上(Flash CS3，CS4，CS5) をお使いの場合は 「ファイル」→「パブリッシュ設定」で Flash タブを選択し， ActionScript のバージョン を ActionScript 2.0 か 1.0 にしておく必要があるということです。 Flash CS3 以上で使える ActionScript 3.0 では on(release) が使えないどころか ボタンやムービークリップ自体にActionScriptを何も書くことはできないので 「うまくかない」 どころか 「記入不可能」 ということになります。 以上が on(release) を使う最低条件です。 　 　 　 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 以下はそういう条件での作成方法です。 上でも少し書きましたが on(release) は ボタン自体またはムービークリップ自体に書くスクリプトです。 ボタンA をクリックしたとき その ボタンA が存在するタイムラインのフレームをフレーム2 に進めて停止させたい という場合は， アクションパネル を表示させて， ボタンA を選択した状態でアクションパネル に次のように書きます。 on (release) { gotoAndStop(2); } または on (release) { this.gotoAndStop(2); } ※参考【図】↓ 上の２つのスクリプトは ボタンA が ボタンインスタンス で作られたものである場合です。 もし ボタンA を ムービークリップ で作られた場合は ムービークリップはそれ自体に階層を持つため ムービークリップ自体には 次のように書く必要があります。 on (release) { _parent.gotoAndStop(2); } または on (release) { _root.gotoAndStop(2); } もし （あくまでも 仮に の話です）， ボタンA が自作したボタンではなく コンポーネント の Buttonコンポーネント を使用されている場合は Buttonコンポーネント自体に 次のように書く必要があります。 on (click) { _parent.gotoAndStop(2); } または on (click) { _root.gotoAndStop(2); } 　 他のボタンも同様に ボタンB でしたら gotoAndStop(2) の部分を gotoAndStop(3) のように変えて書きます。 ボタンC でしたら gotoAndStop(2) の部分を gotoAndStop(4) のように変えて書きます。 　 　 　 ※以上は on(release) を軸として書いたものです。 　 on(release) ではなく 　 ActionScript 3.0 を軸にする場合 や 　 onReleaseイベントハンドラメソッドを軸にする場合， 　 内容は根底から全面的に変わります。
他にもありますが例えば次のようなソフトを使えば 完全ではありませんがある程度見ることができますよ↓。 「frimo 3 - 高性能Flash作成ソフト」 http://www.ah-soft.com/fm/ （↑Adobe Flash 不要） 「Motion Decompiler 3 - 高性能Flash解析ソフト」 http://www.ah-soft.com/mdw/index.html （↑ 要 Adobe Flash） でも... たいてい他人が作成したものを見てもわからないと思います。 （特に説明用のサンプルではないわけですし。） 他の作成者が作成したものを見てその内容がわかる人は その作成者よりもかなりレベルが高い人だと思います。。。
Flash は 基本的にその時点で存在するものにしか命令できません。 メインタイムラインの「mc1」と「mc2」は同時に存在しないため お互いに命令しあうことは基本的にできません。 あえてするなら次のような感じです↓ //---「mc1」フレーム "sub2" のスクリプト--- //「mc1」の再生を停止 stop(); //「btn2」にクリック時に実行するイベントリスナーを登録 btn2.addEventListener(MouseEvent.CLICK,Click2); //関数 Click2 の定義 function Click2(evt:MouseEvent):void { //親階層に毎フレーム時間実行するイベントリスナーを登録 MovieClip(parent).addEventListener(Event.ENTER_FRAME,gotoPart2); //親階層をフレーム "main2" に進めて停止 MovieClip(parent).gotoAndStop("main2"); } //関数 gotoPart2 の定義 function gotoPart2(evt:Event):void { //親階層の「mc2」をフレーム "part2" に進めて停止 evt.target.mc2.gotoAndStop("part2"); //親階層の毎フレーム時間実行するイベントリスナーを削除 evt.target.removeEventListener(Event.ENTER_FRAME,gotoPart2); } //-------------------------------- ただし Flash Player 10 以上用SWFをパブリッシュする必要があります。 （Flash Player 9 にはこれらができないバグ(仕様？)がある） （同様のことは Flash Player 8 以下でもできるのでおそらく 9 だけのバグ） 「mc1」とその「parent」＝「root」は同時に存在しているので 「mc1」から「root」にイベントリスナーを登録することはできます。 また 「root」は「mc2」と同時に存在しているので 「root」から「mc2」にgotoAndStop命令をすることはできます。 ～～～日常生活での類似例～～～ 私は 今日 家にいるが 明日 はいない。 弟は 明日 家にいるが 今日 はいない。 これでは明日 弟に対して 「犬の散歩をしろ」 と命令することができないので 今日も明日も家にいる母に 明日 弟に対して 「犬の散歩をしろ」 と命令してもらうことにした。 ～～～～～～～～～～～～～～～ 上の方法は Flash Player 10 ではできると言っても 不確実で危ない橋を渡るようなものですから 普通はあまりしないと思います。 　 　 　 スクリプトがバラバラになるのでわかりにくいかもしれませんが 以下のようにする方がもう少し確実だと思います。 「root」の フレーム "main1" 辺りに次のような変数を用意し， var flag:Boolean = false; 「mc1」の フレーム "sub2" の Click2 を次のように変更し， //関数 Click2 の定義 function Click2(evt:MouseEvent):void { //親階層の flag の値を true にする MovieClip(parent).flag = true; //親階層をフレーム "main2" に進めて停止 MovieClip(parent).gotoAndStop("main2"); } 「root」フレーム "main2" に次のように書く。 //flagの値がtrueだったら if (flag) { mc2.gotoAndStop("part2"); }
状況もバージョンも書かれていませんので具体的回答はできませんが。 考え方だけでよろしいですか？ 「だんだん増えるダミーの数値量」を用意して 「本当のローディング数値量」と比べ 小さい方(大きくなるのが遅い方)の数値量をローディング数値量とすれば良いのではないでしょうか。 【例】 「ローディングバーをゆっくりみせる方法」 http://okwave.jp/qa/q4071675.html ↑で書いたスクリプトの使用及び動作環境 　 ・スクリプトのバージョン：ActionScript 1.0 　 ・オーサリングツールのバージョン：Flash 5 以上 　　　(Flash 5，MX，MX 2004，8，CS3，CS4，CS5) 　 ・プレイヤーのバージョン： Flash Player 5 以上 また ローディングが終わった後も 例えばローディングバーがだんだん消えていくという演出を入れても良いかもしれませんね。
ご質問内容そのままの回答を書くと 書かれているページの フレーム2 のスクリプトの次の部分を ----------- // JPEG ロード完了時 myObj.onLoadInit = function(target_mc) { // load_mc にリンクを設定 target_mc.onRelease = function() { getURL(myXML.childNodes[0].childNodes[cnt].attributes.linkURL, "_blank"); }; // 再生開始 _root.play(); }; ----------- 次のように変えれば良いと思います。 ----------- //JPEGロード完了時 myObj.onLoadInit = function(target_mc) { //ロールオーバー時の動作 target_mc.onRollOver = function() { //再生フレームが11以上26以下であれば if (_currentframe >= 11 && _currentframe <= 26) { //再生停止 stop(); } }; //ロールアウト＆外で放した時の動作 target_mc.onRollOut = target_mc.onReleaseOutside = function () { //再生フレームが11以上26以下であれば if (_currentframe >= 11 && _currentframe <= 26) { //再生開始 play(); } }; //load_mcにリンクを設定 target_mc.onRelease = function() { getURL(myXML.childNodes[0].childNodes[cnt].attributes.linkURL, "_blank"); }; //再生開始 _root.play(); }; ----------- しかし 実際にやってみるとこれは変なんです。 フレーム11未満でオンマウスすると そのままフェードインして勝手にフェードアウトしてしまいます。 （そうなるように書いているので当たり前ですが。。。） 上のような感じではなくて したいことは次のような感じではないでしょうか？ ----------- //JPEGロード完了時 myObj.onLoadInit = function(target_mc) { //ロールオーバー時の動作 target_mc.onRollOver = function() { //再生フレームが11未満の時 if (_currentframe < 11) { //毎フレーム時間実行するメソッドを定義 target_mc.onEnterFrame = function() { //再生フレームが11の時 if (_currentframe == 11) { //再生停止 stop(); //毎フレーム時間実行するメソッドを削除 delete target_mc.onEnterFrame; } }; //それ以外で再生フレームが 26以下の時 }else if (_currentframe <= 26) { //再生を停止 stop(); } }; //ロールアウト＆外で放した時の動作 target_mc.onRollOut = target_mc.onReleaseOutside = function () { //毎フレーム時間実行するメソッドを削除 delete target_mc.onEnterFrame; //再生開始 play(); }; // load_mc にリンクを設定 target_mc.onRelease = function() { getURL(myXML.childNodes[0].childNodes[cnt].attributes.linkURL, "_blank"); }; // 再生開始 _root.play(); }; ----------- 　
> 画像をボードのちょうど中央に ボードとは何でしょうか？ よくわかりませんが， 「ウィンドウ」→「整列」にチェックを入れて「整列パネルを表示させ， その 画像 と ボード？ とやらを一緒に選択するなどして， [整列]と[分布]を中央にするとかすれば 何かそれらしいことはできませんでしょうか？ > サイズも”ちょうど1.5倍”にしたいと思うのですが、 これは知りません。 ActionScript でインスタンスの大きさを倍数で設定することならできますが， オーサリングの操作上は無いような気がします。 (Suzuka は逆に倍数しかありませんよね？ 確か...。)
メソッドの（戻り値の）データ型は省略可能 ってことですね moveX():void の:voidが型指定 たとえばこのメソッドだったら my_mcが存在するかどうかわからなくて ちゃんとmy_mcは存在して 200右に移動する処理は 実行されたのか？を知りたかったりすると思います そういうときに function move();Boolean{ try{ my_mc.x = my_mc.x + 200; return true;}catch(e){ return false } } というような感じでBoodean（真偽値）を 戻り値の型として指定して retunさせるようにしたりしますが 実は:Booleanは指定しなくてもいいってことです でも型指定しといたほうがメモリに優しいというお話
> 子のイベント指定して削除 と書かれましても 子はどこにどうやってロードしたのでしょうか？ それがわからないと子のイベントの削除などできませんが。。。 mymc.removeEventListener(Event.ENTER_FRAME, myenterframe); と書かれていらっしゃるところから 「mymc」 という変数名の Loader に 子SWF をロードしたということでしょうか？ （Loader にしては変な名前ですが...） なんだかよくわかりませんが 仮に 「mymc」 という名の Loader に 子SWF をロードしたということにします。 また 仮に 子SWF のファイル名を 「ko.swf」 ということにします。 その場合の親のフレームに書くスクリプト(例)↓ ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ //「mymc」という Loaderインスタンス を作成 var mymc:Loader = new Loader(); //「req」という「ko.swf」のURLリクエストを作成 var req:URLRequest = new URLRequest("ko.swf"); //「mymc」に「ko.swf」をロード mymc.load(req); //「mymc」をこのタイムラインに配置 this.addChild(mymc); //---↑仮に以上のようにした場合↑--- //---↓質問箇所の回答は以下↓--- btn.addEventListener(MouseEvent.CLICK, myclick); function myclick(event:MouseEvent):void { //「mymc」にロードされたSWFコンテンツを //ムービークリップとした参照変数「ko_mc」を作成 var ko_mc:MovieClip = mymc.content as MovieClip; //「ko_mc」内のリスナーを削除 ko_mc.removeEventListener(Event.ENTER_FRAME, ko_mc.myenterframe); } ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 「↑仮に以上のようにした場合↑」 より上が変われば 当然 「↓質問箇所の回答は以下↓ 」 より下も変わります。 （本当の状況がわからないので 「仮に」の状況でしか回答できません。） var ko_mc:MovieClip = mymc.content as MovieClip; ko_mc.removeEventListener(Event.ENTER_FRAME, ko_mc.myenterframe); myclick内の↑この２行は 要するに Loader に 子SWF をロードした場合 Loader.content が 子SWF のメインタイムラインになります。 しかし Loader.content を単純にそのまま指定すれば Loader.content は DisplayObject として扱われるため その「myenterframeプロパティ など取得できないよ！」ということになります。 そこで Loader.content を MovieClip として扱うものとして そのMovieClip 内の myenterframe関数 にアクセスしています。 そういう意味を含んだ２行です。 なお，この行↓は var ko_mc:MovieClip = mymc.content as MovieClip; 次↓のようにしても良いです。 var ko_mc:MovieClip = MovieClip(mymc.content);
＃２です > ------------------------------------------ > //サーバとクライアントの1970/1/1からの経過ミリ秒の差 > dif_time = Number(evt.target.data) - now_date.getTime(); > ↓ > dif_time = Number(evt.target.data)*1000 - now_date.getTime(); > ------------------------------------------ > 私はこれで大丈夫だと思うのですが、念のため報告させていただきました。 それは， サーバ（PHP）からFlashに 『秒』 を送ったからでしょう？ それならばそのスクリプトで良いです。 ＃１で，私が書いたPHPコード↓ <?php $now = time() * 1000; echo $now; ?> これだとだと ミリ秒 が送信されるので それに合わせてFlashのスクリプトの方には 「*1000」 を入れなかったのです。 勝手に違う場所のコードを変えると混乱するでしょう？ だからあえて ＃１ のPHPはそのままでという条件でのことを書いたのです。 > フラッシュで1秒というのはどうやって認識してるのでしょうか？ ？？？ Flash Player が PC の時刻を１フレーム進む時間毎に取得しているだけですよ。 何が疑問なのかかわかりませんけが。。。 それが不思議でしたら，PCで時間が取得できていること自体の方がもっと不思議です。 PCで時刻を取得するアルゴリズムや仕組みなどそんな難しいことはさておき， Flash Player はとにかく PC が何らかの形で得ている時刻を単に見に行っているだけです。 何の不思議もありません。 > 例えばフレームレートが12だったら12フレームいったら1秒ということですよね。 そうです。 でもそれは何も関係ないでしょう？ １秒に12回PCの時刻を見に行っても 10分に１回PCの時刻を見に行っても 間隔などはどうでも良くて関係ありません。 ８時に見に行けば 「８時だよ！」 と ８時11分30秒に見に行けば 「８時11分30秒だよ！」 と PCが返してくれるだけです。 人間でもそうです。 10時に時計を見れば10時です。 頻繁に時計を見ても，１時間に１回時計を見ても 10時は10時です。
slide.swf内には 「_root」 が使われているようです。 slide.swf 単独の場合の _root は slide.swf のメインタイムラインになりますが slide.swf が main.swf にロードされたとき，この _root は main.swf のメインタイムラインに移動してしまいます。 この辺が動作しない原因ではいかと思います。 Flash Player 7 以上の SWF を作成する場合は _lockroot が使えます。 slide.swf内のフレーム1の最初辺りにでも this._lockroot = true; と書くと _root が slide.swf内 で固定されるのでちゃんと動作するようになるかもしれません。 （時間の都合上 未検証です。） 「Flash CS4 Professional ActionScript 2.0 _lockroot (MovieClip._lockroot プロパティ)」 http://help.adobe.com/ja_JP/AS2LCR/Flash_10.0/he …
＃１です。 ＃１の「おまけ」のSuzukaでの方法です。 『Suzuka での方法』 ◎外部ファイルを使う件 > 添付画像のようなテキストを外部からインポートしたり イラストレーターなど そういう文字画像が作れるソフトで画像を作ってアルファ入りのPNGなどに保存し そのPNG画像を Suzuka のシンボルリストに追加して そのシンボルをレイヤーに追加して使えば良いだけだと思います。 ごく普通のSuzukaの使い方です。 　 　 ◎Suzuka で作成して使う件 > suzukaで作成して使う方法はありませんでしょうか？ まず 「ファイル」→「プロジェクトのプロパティ」で 「SWFバージョン」 を 「SWF8」 にしておきます。 　　　　　　　　　　　~~~~~~~~~~~~ そして シンボルリストに 「あい」 というテキストを追加して その 「あい」 をレイヤーに追加してキャンバスに配置します。 その右側の テキスト:[あい] のプロパティパネルで 「カラー」タブを選択し「フィルタ」をクリックします。 すると「フィルタ」パネルが出てきますから そこで 　□ ドロップシャドウ にチェックを入れ ハイライト を 黒色(#000000) にし 「ぼかし」に適当な数値を入れ 　□ オブジェクトを表示 　□ ノックアウト効果 にチェックを入れると それらしいものができると思います【下図↓】。 (ドロップシャドウ ではなく グロー でも良いかも) 　 　 どの方法にしても 「特殊文字を使う」 という感覚ではなく 「文字などに特殊効果を付ける」 という感覚だと思います。
AIRはたしかにFlexもJavaScriptも扱えますが、現状ではAIR APIはブラウザ上では動かないんじゃないでしょうか。 Flex or JavaScript → AIRはほぼ100%いけると思いますが、AIR → ブラウザはAIR APIを使用しない範疇で書かれているもののみ動作するということになると思います。 ですが、わざわざAIRを使って開発するのにAIR APIを使わないのではメリットはほぼ無いようなものなので、AIR → ブラウザにできるようなものは少ないはずです。
まず細かい所から <?xml varsion="1.0" encoding="UTF-8"?> 　↓変更↓ <?xml version="1.0" encoding="UTF-8"?> ですね(varsion → version)。 そのXMLがSWFなどと同じフォルダに 「list.xml」というファイル名で存在するとします。 その場合のフレームに書くスクリプト例↓ ＝＝＝＝＝＝＝＝＝＝＝＝＝＝ //---XML部--- //Flash内のXMLインスタンスを宣言 var my_xml:XML; //XMLファイルロード用インスタンスを作成 var xml_ld:URLLoader = new URLLoader(); //XMLファイルのリクエストインスタンスを作成 var xml_rq:URLRequest = new URLRequest("list.xml"); //XMLファイルロード完了時に xmlOnLoad を実行 xml_ld.addEventListener(Event.COMPLETE, xmlOnLoad); //関数 xmlOnLoad の定義 function xmlOnLoad(evt:Event):void { //XMLインスタンスを作成 my_xml = new XML(xml_ld.data); //swfLoad を実行 swfLoad(); } //XMLファイルをロード xml_ld.load(xml_rq); //---SWF部--- //カウント用変数 cnt を用意 var cnt:uint = 0; //外部SWFファイルロード用インスタンスを作成 var swf_ld:Loader = new Loader(); //外部SWFファイルロード用インスタンスを配置 swf_ld.x = 20; swf_ld.y = 10; this.addChild(swf_ld); //外部SWFファイルロード時swfOnLoadを実行 swf_ld.contentLoaderInfo.addEventListener(Event.COMPLETE, swfOnLoad); //関数 swfOnLoad の定義 function swfOnLoad(evt:Event):void { //毎フレームwatchSWFを実行 swf_ld.addEventListener(Event.ENTER_FRAME,watchSWF); } //関数 watchSWF の定義 function watchSWF(evt:Event):void { var all_frm:uint = MovieClip(swf_ld.content).totalFrames; var now_frm:uint = MovieClip(swf_ld.content).currentFrame; //再生フレームが全フレーム数になれば if (now_frm == all_frm) { //毎フレームwatchSWFを実行するリスナーを削除 swf_ld.removeEventListener(Event.ENTER_FRAME,watchSWF); //cntが XMLのノード数-1 未満であれば if (cnt < my_xml.children().length() - 1) { //cntに1を加算 cnt++; } else { //それ以外はcntを0に戻す cnt = 0; } //swfLoad を実行 swfLoad(); } } //関数 swfLoad の定義 function swfLoad():void { //XMLからcnt番のfilenameの値を取り出す var swf_str:String = my_xml.children()[cnt].filename; //SWFファイルのリクエストインスタンスを作成 var swf_rq:URLRequest = new URLRequest(swf_str); //SWFファイルをロード swf_ld.load(swf_rq); } ＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 　
> //曜日を取得 > WD = fscommand2("GetDateWeekday"); ということは 携帯用 Flash の SWF4 を生成するということですよね。 Flash Lite 1.1 つまり Flash Player 4 レベルの SWF。 そのバージョンにテキストの色を変えるスクリプトなどありません。 そちらの方向で考えるのはやめた方が良いです。 でも決して「出来ない」というわけではありません。 あらかじめ最初から 　黒字の「MON」 　黒字の「TUE」 　黒字の「WED」 　黒字の「THU」 　黒字の「FRI」 　青字の「SAT」 　赤字の「ＳＵＮ」 を書いたテキストを用意しておいて 曜日によってその「すでに書いてあるテキスト」を表示させれば良いと思います。 例えば 「youbi」 というインスタンス名のスプライトを用意しておいて その スプライト 内の 　フレーム1には黒字の「MON」を 　フレーム2には黒字の「TUE」を 　フレーム3には黒字の「WED」を 　フレーム4には黒字の「THU」を 　フレーム5には黒字の「FRI」を 　フレーム6には青字の「SAT」を 　フレーム7には赤字の「ＳＵＮ」を 配置すれば if 分も不要になり tellTarget("/youbi"){ gotoAndStop(fscommand2("GetDateWeekday")); }; のような感じでそれぞれの色の文字列が表示されると思います。 上に書いたのはほんの一例です。 文字の色を変えられなくても 同じような効果を見せる方法はたくさんあります。 例えば次のページは SWF4 ではないので スクリプトの参考にはなりませんが↓ 「万年カレンダー サンプル＆作成方法解説」 http://suzupara.iinaa.net/calendar.html 上のページのスクリプト自体は参考になりませんが 黒い塗りを各数字の文字の形でくり抜いて くり抜いた文字の背景色を変えることによって 表示される文字の色を変えるという考え方は使えるかもしれませんよね。 「▲ SWF4のスクリプト書式」 http://nuko.info/memo/#pf02
「A」 が addChild されている状態とは 「A」 がどこかの階層の表示リストに存在するということです。 そたがってこの辺↓が使えると思います。 「ActionScript 3.0のイベント処理について デベロッパーセンター」 http://www.adobe.com/jp/devnet/actionscript/arti … > 表示オブジェクトがこのような表示リストに含まれていない場合、 > そのstageプロパティはNullです。 ◎新規ドキュメントのフレーム1などに書くスクリプト例↓ ---------------------- var A:Sprite = new Sprite(); A.graphics.beginFill(0xFF0000); A.graphics.drawRect(0, 0, 50, 50); trace(A.stage); this.addChild(A); trace(A.stage); this.removeChild(A); trace(A.stage); ---------------------- 「制御」→「ムービープレビュー」 での出力結果↓ 　 null 　 [object Stage] 　 null ◎if文を使った判定例↓ ---------------------- var A:Sprite = new Sprite(); A.graphics.beginFill(0xFF0000); A.graphics.drawRect(0, 0, 50, 50); this.addChild(A); //↓ 「//」 を付けたり取ったりして検証 //this.removeChild(A); if(A.stage == null){ trace("Aはありません"); } if(A.stage != null){ trace("Aはあります"); } ---------------------- 　 　 ～～～ 別法 ～～～～～～～～～～～～ getChildByName() を使っても調べられます。 「FlashゲームPG講座 For AS3.0」 より「インスタンスが表示リストに存在するか調べる」 http://hakuhin.jp/as3/container.html#CONTAINER_04 ◎新規ドキュメントのフレーム1などに書くスクリプト例↓ ---------------------- var A:Sprite = new Sprite(); A.graphics.beginFill(0xFF0000); A.graphics.drawRect(0, 0, 50, 50); A.name = "A"; trace(this.getChildByName("A")); this.addChild(A); trace(this.getChildByName("A")); this.removeChild(A); trace(this.getChildByName("A")); ---------------------- 「制御」→「ムービープレビュー」 での出力結果↓ 　 null 　 [object Sprite] 　 null ◎if文を使った判定例↓ ---------------------- var A:Sprite = new Sprite(); A.graphics.beginFill(0xFF0000); A.graphics.drawRect(0, 0, 50, 50); A.name = "A"; this.addChild(A); //↓ 「//」 を付けたり取ったりして検証 //this.removeChild(A); if(this.getChildByName("A") == null){ trace("Aはありません"); } if(this.getChildByName("A") != null){ trace("Aはあります"); } ----------------------
「CS5での使用方法」ではなく 「(CS5の)ActionScript 3.0 設定での使用方法」 ですよね？ （CS5 でも ActionScript 2.0 にすれば，書かれていらっしゃるページと同じ方法でできると思います。） （ActionScript 3.0 設定の場合 識別子 は付けられません。） とにかく，ステージ上に絵を描くか写真を配置し， その絵や写真をムービークリップシンボルに変換しますよね。 そのときに 基準点 を 左上 にしてムービークリップに変換します。 　　　　　　~~~~~~~~~~~~~~~~~~~ この操作で「ライブラリ」にそのムービークリップシンボルが入りますからそれを確認します。 次にその「ライブラリ」の中のそのムービークリップシンボルを選択して 右クリックなどから「プロパティ」を表示させます。 出てきた「シンボルプロパティ」パネルで 　□ ActionScript 用に書き出し 　と 　□１フレームに書き出し にチェックを入れます。 そうしますと， 　クラス：［　　　　　　］ の部分が記入可能になりますから その[　　]の欄で適当に決めたクラス名を付けます。 たとえば 「GazouMC」 というクラス名を付けます。 　　　　　~~~~~~~~~~~~~ そして「シンボルプロパティ」パネルをOKで閉じます。 最初に作成したステージ上のムービークリップはもう必要ないので削除します。 （画像入りムービークリップはライブラリに残っているのでステージから削除しても大丈夫です。） 次に「コンポーネント」パネルから 「ScrollPane」コンポーネントを選択し ドラッグ＆ドロップ でステージ上に「ScrollPane」を引きずり出します。 その引きずり出したステージ上の「ScrollPane」を選択し 今度は「コンポーネントインスペクタ」で「パラメータ」タブを選択し 「source」となっている欄の値に 上で命名したクラス名「GazouMC」を記入します。 これでパブリッシュ または ムービープレビュー などをすれば ステージ上の 「ScrollPane」 内に 「GazouMC」 が表示されます。
>FLASHはjava言語で構成されていると思うのですが、 Javaに似ているところもありますが、Javaではありません。 ActionScriptという専用の言語です。 >HTMLのようにメモ帳などを使って専用のソフトがない状態でも作成できないのでしょうか？ 最低限、SWFへのコンパイラは必要でしょう。
＃２です。 > 例えば、yellow_mcをクリックしたらnextFrame();をして、 > 2フレーム目でaに格納されているインスタンスを表示する > ということをする場合、 > aは別フレームでも呼び出し可能なのでしょうか・・・？ 普通に可能ですが。 しかし「インスタンスを表示する」という部分がわかりません。 どうやって非表示にしてあるのでしょうか？ 非表示にする方法などたくさんあります。 その方法を説明されていない以上， どうやって表示させるのかは作者しかわかりません。 単純に考えれば非表示にしている逆の方法をとれば表示できると思います。 インスタンス の _visible を false にして非表示にしているのであれば _visible を true にすれば表示されると思います。 インスタンス の _alpha を 0 にして非表示にしているのであれば _alpha を 100 にすれば表示されると思います。 インスタンス の _x や _y を -2000 のようにして非表示にしているのであれば _x や _y を ステージ内の座標 にすれば表示されると思います。 インスタンス を何かの下レイヤーにおいて隠しているのであれば その何かを消すとか， インスタンス をその何かより上の深度に移動させるなどすれば表示されると思います。 もし仮に インスタンス の _visible を false にして非表示にしているのであれば 次のフレームに a._visible = true; のようなことを書けば良いのではないでしょうか。 ちなみに ＃２ の回答は字数制限ギリギリで書いています。 つまり ＃２ 以上に付け足したスクリプトは書けませんので そこの部分をご理解をねがいます。
書き直した方のスクリプトってよく見ると Tweenをstart()してないんじゃないですか？
ナノサウンドが好きです 参考URL：http://www.nano-graph.com/sound/index.html
フラッシュのビットマップ補完は荒いからなぁ とか一瞬おもったんですが fps（フレーム／秒）８か９ってのは低すぎやしませんか？ そりゃカクカクもしますよって数値ですよ スムーズに見せたいならとりあえず２４fpsくらいじゃないでしょうか
参考URLの下の方にありませんか？なければ下記URL(古いバージョン） http://kb2.adobe.com/jp/cps/228/228683.html （ダウンロード時） 現在導入されているものをアンインストール、再起動 Windowsファイアーウォールを無効、セキュリティソフトのパーソナルファイアーウォールの遮断があれば例外許可（または一時的に無効） セキュリティ対策ソフトを一時的「無効」 ブラウザのセキュリティ設定でブロックを設定変更 例：「ツール」「インターネットオプション」「セキュリティ」「レベルのカスタマイズ」「セキュリティの設定」ActivXコントロールとスクリプトを有効 例：「レベルのカスタマイズ」「セキュリティの設定」「ダウンロード」「ファイルのダウンロード」を有効 （インストール時） アドミ権限でログインし実行（XP) 右クリック「管理者として実行」(Vista） 参考URL：http://www.adobe.ph/jp/support/flash/downloads.h …
> このサイトで紹介しているのはアクションスクリプト3.0でしょうか？ そうです ActionScript 3.0 です。 Flash Player のバージョンは Flash Player 9 以上で使用できる範囲のスクリプトです。 ですからまず， 作成中の FLA ファイルを Flash CS4 で開いた状態で 「ファイル」→「パブリッシュ設定」で「パブリッシュ設定」のパネルを表示させて 「Flash」タブ を選択し， 　　Player： [Flash Player 9]　(←10でも良い) 　スクリプト：[ActionScript 3.0] のようになっているかどうかを確認してみてください。 > 説明通りに作業を進め > 最後のアクションスクリプトの記述をコピペして > プレビューしてみましたが、 > コンパイルエラーがでてしまいうまくいきません。 エラーメッセージの内容を書いていらっしゃらないので特定はできませんが 私も実際に作成作業をしてみたところ 次のようなエラーメッセージが出ました。 　シーン 1，レイヤー 'レイヤー名'，フレーム1、行22 　1120：未定義のプロパティ base へのアクセスです。 もし同じような エラーメッセージ が出たのでしたら， そのエラーの原因はエラーメッセージの通りで， 「『base』なんて存在しないよ！」 ということです。 書かれていらしゃるサイトのページでは 背景用のグラデーションムービークリップにインスタンス名を付ける説明部分が抜けています。 下の図↓のように 背景用のグラデーションムービークリップを選択して 「プロパティ」インスペクタでインスタンス名を「base」にしてみてください。 同じエラーだとおそらくこれで解決できると思います。 > アクションスクリプトを勉強しようとも思っているのですが、 　　～略～ > とりあえず無料で勉強できそうなサイトがありましたら Flash の使い方やタイムラインアニメではなく ActionScript 限定（中心）だと 次のようなサイトでしょうかね？ 「Flashゲームプログラミング講座 For ActionScript3.0」 http://hakuhin.jp/as3.html （部品とその説明がたくさんあります） 「Flash CS3入門　基本からActionScriptまで：ITpro」 http://itpro.nikkeibp.co.jp/article/COLUMN/20071 … （ITpro会員(無料)に登録しなければ閲覧できないページ多数あり） 「Macromedia Flash - テクニカルノート一覧」 http://www.fumiononaka.com/TechNotes/Flash/index … （ページの下の方が ActionScript 3.0）
今頃ですが TweenMaxってトゥイーンライブラリには TimeLineMaxっていうタイムライン操作用のクラスがあります （有料ですが） それを使わないとしてもトゥイーンライブラリはこの場合には有用です なんか適当なオブジェクトをつくってそいつのなかの数値を TweenMaxでトゥイーンさせ、onUpdateに対象のムービーを トゥイーンさせた数値にgotoAndStopさせるとかすれば TimeLineMaxつかわないでもムービーのタイムラインをトゥイーンできます var obj:Object={t:10} TweenMax.to(obj、時間、{t:20,onUpdate:function(){ムービー.gotoAndStop(obj.t)}}) TweenMaxのいいところはトゥイーン対象が被ったら ちゃんとコンフリクトを処理してくれるところ だからトゥイーン途中で次のトゥイーンをかぶせても挙動不審にならないです (Flashにもともと入ってるTweenクラスはかぶせると挙動不審になります）
TouchEvent って... そもそも Flash Player 10.1 以上対応 すなわち Flash CS5 以上でないと使えないと思いますよ。 CS4じゃ無理でしょう。 また仮に CS5 を使っても 実際の検証は普通のPCでは無理だとは思いますが。 さらにその上ですね，，， 例のいわく付きの iPhone アプリ 関連をターゲットとして開発されたようなものだと思うので 今後の発展もあるやなしや。。。？？？
極々 基礎的なコース(？) で考えると、 「何でも良いので勝手に 変数 でも作って ボタンクリック時にその 変数 に適当な 値 を代入すると同時にアニメーションを開始させ アニメーション終了後に 変数 の値によって navigateToURL する。」 という路線で行けば良いだけではないでしょうか。 次のページは ActionScript 1.0 用のサイトのようですが ActionScript 3.0 でも考え方は同じでできます↓。 「Suzuka 基礎・基本 if文 ＆ else if 文」 http://suzupara.iinaa.net/kiso051.html ボタンで決めた変数の値によって 最終フレームで navigateToURL する ＵＲＬ を変えれば良いだけでしょう？
オートリロードの場合、その都度通信費が掛かりますよね。 パケット定額に入っていない人が、そのページを寝る前に閲覧 終了させずに放置して6時間経過しました・・・・さてどうなるでしょうと考えると そういうトラブルを招く機能は持たせられないはずです パケット通信は利用者の許可を得て始めて通信して発生させるのが常例になってますので
オシャレな画面遷移を（簡単に）実現したいのであれば、「Progression」を使われるのが最も簡単で手っ取り早いと思います。 タイムラインがトゥイーンだらけになったり、スクリプトが山のようになる心配はありません。 考え方だけを真似るのもアリなので、勉強されたらいいと思います。少なくとも自分の場合はムダではなかったです。 Progression4：Framework for Flash（フリー） http://progression.jp/ この中に、「コンポーネントスタイル」というものがありますが、その要点は ・画面遷移ボタン以外の画面（シーン）をまるごとMovieClipにする ・画面（シーン）自身の登場と退出を、すべてMovieClip中のアニメーションとして作る。 ・あらかじめ用意した「アニメーション・トランジション定義コンポーネント」を、MovieClip中に配置してアニメーションを自動制御する。 というもので、慣れればアニメーションつき画面遷移をすばやく作成できます。 「アニメーション・トランジション定義コンポーネント」は、Progressionにもついていますし、もっと派手なものは「FlashEff」など有料の海外製品も入手できます。 外していたらすいません。
「設定？」 と訊かれましても 何のソフトでの設定かわからないので誰も答えようがありませんが， wmode="window"　は， 基本的には設定とかそういうものではなくて SWFファイル（Flashの閲覧用ファイル）をHTMLに貼り付けるときのパラメータです。 HTML作成ツールによって「設定？」は変わりますし 場合によっていわゆる「設定」ではできないソフトもありますし， タグによって，また，JavaScript を使用した場合と使用しない場合など， 様々な場合があります。 何にしても SWFファイル（Flashの閲覧用ファイル）をHTMLに貼り付けるときのパラメータです。 テキストエディタなど(またはHTMLエディタのソース編集)でその該当部分を追加するとか書き替えれば良いと思います。 Google検索「object embed wmode="window"」 http://www.google.co.jp/search?hl=ja&q=object+em …
もちろん大きな意味があります。 else if(～) は 「それ以外で、もし～なら」ですよね。 _root.get_tabaco は true か false で判定すれば、そのどちらかしかないわけですから、 2の場合はもちろんtrue なので、else if(A==2){ に行く前に else if(A==true) で該当してしまいます。 ■ダメな場合 if( A == false){ 　　//falseの場合ここで処理されて終わり。 }else if(A==true){ 　　//trueの場合ここで処理されて終わり。2もここで該当。 　　//※結局、どんな値でもtrueかfalseに該当するので、これ以降に進むことはない。 }else if(A==2){ 　　//それ以外で 2 の場合、だが 2はtrueですでに上で該当済み } ■うまくいった場合 if( A == false){ 　　//falseの場合ここで処理されて終わり。trueの場合は下へ続く }else if(A==2){ 　　//trueでも 2 の場合のみココで処理される }else if(A==true){ 　　//それ以外で…つまり 2 以外で trueの場合はココヘ来る。 }
今頃ですが うまいこと動かない原因は ヒットしたMCが毎フレームreadyに戻ってから またhitに行くという処理してるから ボタンを全てreadyに戻す処理をする時に hitしてるMCは処理から外すってほうがいいですね _root[buttonName].gotoAndStop("ready");//ボタンをすべて ready に ↓ if(i!=onMapButton_num)_root[buttonName].gotoAndStop("ready");//ボタンをすべて ready に 曖昧で的確じゃない返答ですいませんでした もう自己解決してるでしょうが
var spotName = "spotName" + onMapButton_num + "_mc"; これ↑では 変数「spotName」の値として 文字列「spotName0_mc」などが入るだけです。 "インスタンスへの参照" が入るのではなく "単なる文字列" が入るということです。 したがって例えば spotName1_mc.gotoAndStop("white"); と書いていらっしゃる部分を _root[spotName1_mc].gotoAndStop("white"); または this._parent[spotName1_mc].gotoAndStop("white"); などのようにすると動くかもしれません。 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q …
MovieClip の継承している Sprite の継承している DisplayObjectContainer を参照してみてください。 表示オブジェクトのコンテナとして機能する基本クラスですので、子表示オブジェクトを取得するメソッドが用意されています。子表示オブジェクトは、それらのメソッドを通して取得します。 以下のメソッドなどを使用すると、子表示オブジェクトを取得出来ます。 // 指定のインデックス位置にある子表示オブジェクトインスタンスを返す getChildAt(index:int):DisplayObject // 指定された名前に一致する子表示オブジェクトを返す getChildByName(name:String):DisplayObject まず A から B を取得し、その後に B から C を取得する形になります。 // B が A の 0 番の位置にある子表示オブジェクトと仮定した場合 var B:DisplayObject = A.getChildAt(0); // C が B の 0 番の位置にある子表示オブジェクトと仮定した場合 var C:DisplayObject = B.getChildAt(0); 参考URL：http://help.adobe.com/ja_JP/AS3LCR/Flex_4.0/flas …
そこはマイナーチェンジの番号 ちょっとセキュリティー改善したとか どっかの動作の不具合修正しました ってレベルのアップデートのバージョンを 示す番号だと思いますよ
期限が過ぎてしまいましたが…… トップレベルの Date クラス、flash.utils.Timer クラスを使用出来ると思います。 Date オブジェクトの getHours()・getMinutes() メソッドで、それぞれ時・分を取得し、現在の時間からアニメーションを開始する時間までの差を、Timer オブジェクトで登録し、イベントを発生させてみてはいかがでしょうか。 Date オブジェクトのメソッド // 時（0 ～ 23 の整数）部分をローカル時間で返す getHours():Number // 分（0 ～ 59 の整数）部分をローカル時間で返す getMinutes():Number Timer オブジェクト // Timer オブジェクト生成 var timer:Timer = new Timer(時間の差（ミリ秒）, 1); // イベントリスナを登録 timer.addEventListener(TimerEvent.TIMER, イベントハンドラ); // スタート timer.start(); Timer オブジェクトは誤差が出てしまう可能性がありますので、アニメーションを開始する時間より少し前に設定し、その時間になったところから、1 分置き・または何秒置きに監視した方が良いと思います。 また、現在の時間がアニメーションを開始させる時間と重なっていたら、Timer オブジェクトを生成することなく、アニメーションを途中から開始させてはいかがでしょうか。 参照URL： http://help.adobe.com/ja_JP/AS3LCR/Flex_4.0/Date … http://help.adobe.com/ja_JP/AS3LCR/Flex_4.0/flas …
ActionScript 2.0 以下と 3.0 以上とでは 根本的な考え方や捉え方が変わりますよ。 ムービーの構造も違います。 ですから 単純な ActionScript の変換 などでは対処できませんが， 書かれていらっしゃるスクリプトを なるべく忠実に単純に ActionScript 3.0 に変換(？) すると次のような感じになります。 ---------------------------------------------- //FlashVars 内の変数「result」の値を受け取り 変数「res」に代入 var res:String = loaderInfo.parameters.result; //Loaderインスタンス「my_ld」を作成 var my_ld:Loader = new Loader(); //リクエストするファイルのURLを入れる変数を宣言 var my_file:URLRequest; // もし res の値(文字列)が "0" であれば if (res == "0") { //リクエストするファイルのURLを「main.swf」にする my_file = new URLRequest("main.swf"); // もし 変数 res の値(文字列)が "1" であれば } else if (res == "1") { //リクエストするファイルのURLを「1.swf」にする my_file = new URLRequest("1.swf"); } //Loaderインスタンス「my_ld」にファイルをロード my_ld.load(my_file); //Loaderインスタンス「my_ld」をこの階層に配置 this.addChild(my_ld); ---------------------------------------------- なるべく同じになるように変換っぽくはしてますが実際は変換ではありません。 自分の意識で「Loader」なども作成する必要がありますし， FlashVars 内の変数は 特別な入れ物（loaderInfo.parametersオブジェクト）内に入りますから， これも FlashVars であることを意識して そのオブジェクトを明示する必要があります。
flash.net.URLVariables クラスが使用できるかと思います。 var urlVariables:URLVariables = new URLVariables(); urlVariables.id = 123; urlVariables.name = 'sato'; var urlRequest:URLRequest = new URLRequest('http://~.swf'); urlRequest.data = urlVariables; 参考URL：http://help.adobe.com/ja_JP/AS3LCR/Flex_4.0/flas …
OSXなら同じくQuartzComposer 使えばいいんじゃないでしょうか ＨＤ＞Ｄｅｖｅｌｏｐのとこに入ってたかと思います フローチャートで視覚的で直感的なプログラミングができたり やってみると結構おもしろいですよ
吹き出し（hukidasi）は ボタン(btn1)の子として addChild するのではなく スクリプトで書いていらっしゃるように 吹き出し（hukidasi）は stage(または root) に addChild するので良いと思います。 ご質問で hukidasi.visible=false; と書かれていらっしゃるスクリプトのすぐ下辺りにでも hukidasi.mouseEnabled = false; という１行を追加すれば良いと思います。
単純に 「その WINDOWS PC の IE(6) の Flash Player のバージョンが低いから。」 という理由なのではないでしょうか？ 一般的に AS3 なら 少なくとも IE の Flash Player のバージョンが 9 以上である必要があります。 ご質問の SWF を 書き出したバージョンが 仮に Flash Player 10 でしたら 少なくとも IE の Flash Player のバージョンが 10 以上である必要があります。 「その WINDOWS PC の IE(6) 」 で http://get.adobe.com/jp/flashplayer/ を訪ねて Adobe Flash Player の最新版(現在は 10.1) をインストールすれば良いだけのことかもしれません。
添付画像をご覧下さい。赤い丸はオン・オフボタンです。ページ A ではなく、ページ B のようにされたいということで宜しいでしょうか。違いましたら補足下さい。 ページ A も B も、ほとんど同じ作りになっています。ページ A のフラッシュは、オン・オフボタンの他にもコンテンツがありますが、ページ B のフラッシュは、オン・オフボタン以外のコンテンツを排除して、ボタンのみにしています。 ページ B のように、オン・オフボタンのみの小さなフラッシュを作り、ソースの param のサイズも変更し、パンくず部分などに設置されてはいかがでしょうか。
元の画像があるってなるとビルドアニメーションの スクリプトってわけにもいかないのでマスクでしょうね 普通にオーサリングでマスクをする場合 レイヤーやシンボルは一つしか 有効にならないという制限がありますが スクリプトで 植物画像MC.mask=マスクMC とかやった場合はそういう制限がなくて楽です この場合はマスクのビルドアニメーションを スクリプトで作るということもできますし しかしあまりに形状が複雑だと 一生懸命画像にマスクをあわせるより 消し込みリバースした方が楽な場合もあります その辺は裁量ですね
ソースを拝見したところ、_cube は、コンストラクタ内のローカル変数として定義されています。ですので、コンストラクタのブロックを抜けた loop メソッドからは参照出来ません。 _cube を Box クラスのインスタンス変数として定義すれば、参照することが可能になります。 デモ（インデントには日本語の空白が入っています） public class Test1 { 　public function Test1() { 　　// コンストラクタ内のローカル変数として定義 　　var sprite:Sprite = new Sprite(); 　　// エラーは起こらない 　　sprite.x = 100; 　} 　private function move() { 　　// エラー 　　sprite.x = 200; 　} } public class Test2 { 　// インスタンス変数として定義 　private var sprite:Sprite = new Sprite(); 　public function Test2() { 　　// エラーは起こらない 　　sprite.x = 100; 　} 　private function move() { 　　// エラーは起こらない 　　sprite.x = 200; 　} }
みんな一回はやる 『スキンのswfを上げ忘れてた』 ってやつでしょうかね FLVPlaybackコンポーネントって フラッシュのアプリケーションフォルダに入ってる swfを読み込んでるんですよね だからそれも一緒に上げてやらないとダメです FlashのフォルダのConfiguration/FLVPlayback skinsにいます
> htmlファイルではスキンは表示されているのですが、 唐突に出てきたこの「スキン」とは何者なのかがわかりませんが。。。 （スキン とは普通は 外部に用意した SWF のことを言いますが。。。） 上記の引用部分は， SWF と HTML を同時にパブリッシュしたとき， SWFを直接開いた場合には 「テキストフィールド」とその中の「文字」と「スクロールバーの全て部分」がちゃんと表示されるのに 同じ条件でHTMLをブラウザで開いた場合には 「テキストフィールド」とその中の「文字」と「スクロールバーの白いベース部分」しか表示されない。 という意味でしょうか？ もしそうであれば ご使用のブラウザの FlashPlayer のバージョンが パブリッシュした SWF の Flash Player のバージョンよりも低いということが考えられます。 ブラウザの Flash Player はスタンドアローン版(デバッグ版)の Flash Player とは全く別物(全く違うプログラムで動作するもの)です。 その ブラウザ で Flash Player の DL 場所へ行って 最新の Flash Player を DL ＆ インストール してみてください。
コンピュータのプログラムやプログラムで使う値は、”メモリ”という場所に格納されます。 ActionScript でも同様に、スクリプト自体や数値・文字列といった値、ムービークリップなどの作品を構成する要素も全て、メモリのどこかに格納されています。 ActionScript で扱う値やムービークリップなどの部品の多くは、複数の情報でできています。 例えばムービークリップは、絵のデータや画面での位置・大きさ、gotoAndPlay などの機能といった、多くの情報で構成されています。 これらは１件ごとに整理し、いわばメモリの中に作られた１つの町に住む住民たちのような形で格納されます。 町が作られたメモリ上の場所で書くとスクリプトが分かりにくくなるので、実際の場所は明かされません。 代わりに、町の場所を知る者を置き、この者を介して用のある住民を訪ねて行ける仕組みになっています。 具体的な例で言いますと。 ステージにムービークリップを配置し、インスタンス名を” mc ”と付けたとします。 すると、このムービークリップを構成する様々な住民（＝情報）が集まった町が、メモリのどこかに作られます。 できた町の場所は、インスタンス名である mc が知っています。 ムービークリップの表示位置を知りたい時や、フレームを切り替える gotoAndPlay などの職人に仕事を頼む時は、mc に案内を頼んで用のある住民を訪ねて行くわけです。 １件のデータに関する情報を持つ住民の集まる町のことを”オブジェクト”、この町の場所のことを”参照”といいます。 では、ムービークリップがステージにない時はどうでしょう。 この場合は、メモリのどこにも、このムービークリップの町は作られません。 スクリプトで mc という名前の案内役を作ったとしても、そもそも町が存在しないために、mc にはどの場所も記録されていません。 この状態が null です。 mc が場所を知らないのに、「あの町に住む○○に仕事を頼みたいから、案内してほしい」と言っても、話になりません。 これが、「 null オブジェクト参照のプロパティまたはメソッドにアクセスできない」というエラーです。 null とは、本来はメモリのどこかの場所を知っているはずのものがどの場所も知らない状態のことを指す、特殊な値です。 ここではムービークリップを例にしましたが、ムービークリップ以外のデータを扱う時も変数に null が入る場合があります。 null は値ですから、実は、明示的に変数に入れることもできます。 － － － － － void は関数に関係のある言葉です。 関数の詳細は、入門書や解説サイト等をご参考になさってください。 なお、関数から持ち帰ってくる値（戻り値）と void の意味は、以前、説明したことがありますので、よろしければご参照ください。 　・[return]の役割について 　　http://okwave.jp/qa4447665.html 　・actinscript3でvoidの意味 　　http://okwave.jp/qa4540185.html 　　（↑ void については＃３で説明しております） ActionScript で扱うデータは全て、１件ごとの情報が集まる町（オブジェクト）の形でメモリに格納されています。 （中には、内部で便宜をはかってそのように見えないものもありますが、今回は触れません） 変数に値を入れると、メモリの中に町が作られてその場所（参照）が変数に入り、変数が持つ場所をもとに必要な情報を取り出します。 町には様々な種類があり、同種の町は似た構造をしています。 この種類のことを”データの型”といいます。 変数には、１度決めた町と同種の町の場所を入れなければならない決まりになっています。 例えば、ムービークリップの町の案内役と決めた mc に文字列の町の場所を覚えさせようとすると、エラーになってしまいます。 案内役の型を決め、案内を頼んでくる者が求める型と一致させることは、トラブルをなくすためにも大切なことです。 void はデータの型の１つです。 ただ、ムービークリップや数値とは違い、「何もないことを表す」という不思議な型です。 null はどの町の場所も指していないことを表す”値”で、入れようと思えば変数にも入れられるのに対し、void はメモリの中にできる町の種類の１つなので、変数に入れることはできません。 void は関数を定義する時に、関数から持ち帰ってくる値がないことを表すためだけに使われます。
NetService,asというと、Flash Remotingですね？ 自分も気になって調べていたのですが、FlashのAction Script3では、AMFプロトコルは内蔵になって、イベントモデルまでサポートされているようですよ。 AMFについては、Flexのほうが仕様がはるかに上のようですが。。まあ、Flashからの一般的な使用には全然問題ないかと。 参考URL：http://feb19.jp/blog/archives/000080.php
下記のサイトをご参照下さい（Flash CS4 を使用したことが無いため間違っているかも知れません）。 『ActionScript 3.0 のソースパスの設定』という項目が、該当するのではないかと思います。 http://help.adobe.com/ja_JP/Flash/10.0_UsingFlas … 参考URL：http://help.adobe.com/ja_JP/Flash/10.0_UsingFlas …
「簡単」というのがどういう程度かよくわからないのですが。。 参考URLのチュートリアルをご覧ください。 FLVには「ポスターフレーム」の機能はありません。 このチュートリアルでは、停止状態のFLV Playbackコンポーネントの直上に、ポスターフレーム（としての）pngをぴったり配置し、スタートボタンクリックで、pngを消し、FLVを再生する方法をとっています。 それ以上簡単に、ということであれば、ビデオ編集ソフトで先頭フレームの画像を差し替えるしかないのでは。 参考URL：http://monkeyflash.com/tutorials/poster-frame-fo …
そもそも 関数 mouseUp 内のスクリプトは なぜそんなにまわりくどいの（遠回りなの）でしょうか？ 　色を数値にして 　　その数値を文字列にして 　　　その文字列を数値にして 　　　　その数値を色にする そんな遠回りをせずに普通に 　色を数値にして 　　　その数値を文字列にする 　　　また その数値を色にする で良いのではないでしょうか？ ↓つまり↓ function mouseUp(evt:MouseEvent) { var pixelValue:uint = bmpData.getPixel(evt.stageX,evt.stageY); colBox2.text = pixelValue.toString(16);//取得したカラーを代入 colorTrans.color = pixelValue; trans.colorTransform = colorTrans; } あえてご質問のようにまわりくどくする場合は 次のように↓するとか， function mouseUp(evt:MouseEvent) { var pixelValue:uint = bmpData.getPixel(evt.stageX,evt.stageY); colBox2.text = pixelValue.toString(16);//取得したカラーを代入 colorTrans.color = uint("0x" + colBox2.text); trans.colorTransform = colorTrans; } または， 次のように↓するとか， function mouseUp(evt:MouseEvent) { var pixelValue:uint = bmpData.getPixel(evt.stageX,evt.stageY); colBox2.text = pixelValue.toString(16);//取得したカラーを代入 var color_num:uint = new uint("0x" + colBox2.text) colorTrans.color = color_num; trans.colorTransform = colorTrans; } ですかね。
＃１です。 スクリプトを１行訂正します。 ＃１で書いたスクリプトでは 　　「メニュー1の画像」 　　→「メニュー２の画像」 　　　→「メニュー３の画像」（停止） になります。 　　「メニュー1の画像」 　　→「メニュー２の画像」 　　　→「メニュー３の画像」 　　　　→「メニュー１画像」（停止） のように元に戻って停止させるのでしたら 書かれていらっしゃるページの次の部分↓ --------------------------------- // 自動で動かす関数 function autoRollOver():Void { cnt = (cnt<datArr.length-1) ? cnt+1 : 0; movArr = datArr[cnt]; tw(); } --------------------------------- これを次のように変えます↓ --------------------------------- //フラグとなる変数を用意 var flg = true; // 自動で動かす関数 function autoRollOver():Void { //もしflgがtrueであるなら if (flg) { cnt = (cnt<datArr.length-1) ? cnt+1 : 0; //もしcntが0になればflgをfalseにする flg = (cnt == 0) ? false : true; movArr = datArr[cnt]; tw(); } } --------------------------------- ですから ＃１の状態からでしたら次の部分↓を //もしcntがdatArrの要素数-1になればflgをfalseにする flg = (cnt == datArr.length-1) ? false : true; 次↓のように変えるということです。 //もしcntが0になればflgをfalseにする flg = (cnt == 0) ? false : true; その他は＃１のままで。
その PHP ファイルにアクセスしたとき 何某かの単なるテキストが返る(表示される)のでしたら LoadVars クラスのメソッドで LoadVarsインスタンスにその PHP をロードすれば良いと思います。 その PHP ファイルにアクセスしたとき XML データが返る(表示される)のでしたら XML クラスのメソッドで XMLインスタンスにその PHP をロードすれば良いと思います。 ロードした後， ロードしたファイルから各データを抽出したりパースしたりする方法はわかりません(誰にもわかりません)。 データの形がどのようなものであるかによって方法は変わりますし， また逆から言えば Flash で取り出しやすいような形にすべきです。 とりあえずは単なるテキストをロードしてみてはいかがでしょうか。 そうすれば PHP で作るべきデータの形がわかってくると思います。 Google検索「LoadVars」 http://www.google.co.jp/search?hl=ja&q=LoadVars データがXMLの場合はこの辺で検索です↓。 Google検索「XML.load Flash」 http://www.google.co.jp/search?q=XML.load+Flash& … ※注意 別ドメインのPHPが出力するデータを Flash でロードすることはできませんよ。 クロスドメインのポリシーファイルの設置などが必要です。
HTML や CSS や JavaScript は関係ありませんよ。 というか 日頃HTMLページに Flash の SWF ファイルを貼り付けるときに HTML や CSS や JavaScript を使うのでしたら フル画面のFlash でも使うだけのことで， フル画面のFlash だからそれらが必要になるということはありません。 HTML 側としては Flash の SWF ファイルを 100％ 表示させれば良い（width も height も "100%" にすれば良い）だけです。 そのとき SWF の周りの余白が気になるようでしたら CSS で マージンを 0 にすれば良いです。 単にそれだけのことですから， フル画面のFlash であるからと言って特殊な知識や技術が必要なわけではありません。 ですから作成するにあたってとりあえずは HTML や CSS や JavaScript を忘れた方が良いと思います(雑念になるなら全く意識しない方が良い)。 問題は それらではなく Flash と ActionScript です。 と言っても そういうレイアウトにすること自体はそんなに難しいことはありません。 「Flashが表示されたとき」と「ステージがリサイズされたとき」のタイミングの両方で， 表示させるムービークリップなどのインスタンスの座標を指示するというだけのことです。 ActionScript 3.0 の場合は とりあえず次のページの次の項目↓について理解するようにします。 FlashゲームPG講座 For AS3.0【Stage クラスについて】 Flash の整列する位置を設定する http://hakuhin.jp/as3/stage.html#STAGE_03 それがわかれば 中央の 黒い■ や 下の赤い帯 を ムービークリップ で作成して それらのムービークリップの座標を 「Flashが表示されたとき」と「ステージがリサイズされたとき」のタイミングの両方で指示してやれば良いということになります。 具体例は次のようなページに書いてくれています↓。 「フルFlashサイトの作り方の基本まとめ(ActionScript3.0)」 http://www.aoharu-b.com/cgi/sk/2010/02/flashacti … 「[AS3]フルブラウザ、リキッドレイアウト」 http://alwaysfinetuning.com/ao-blog/2009/01/as3- … あと ムービークリップを作成するときに 「基準点」について「意識して」作成してください。 ムービークリップの座標とはムービークリップの「基準点」の座標です。 「ムービークリップの基準点」 http://homepage3.nifty.com/ginga-b/flash5/mc_ref … 一般的には ActionScript云々よりも 空間認識（x-y平面座標 のしっかりしたイメージ）をもつことの方が 難しい人にとっては難しいと思います。 空間や座標のイメージを頭の中に簡単に作れる人であれば 何にも難しいことはありません。
要は ActionScript 2.0 以下であった MovieClip.onReleaseOutsideイベントハンドラメソッドが ActionScript 3.0 から削除されてしまったからやりにくい（考えにくい）わけですね。 ドラッグするムービークリップには「my_mc」というインスタンス名(または変数名)が付けてあったとします。 その場合，次のようにするのが１つの方法です。 ------------------------------------------------ //「my_mc」に対してMOUSE_DOWNのイベントリスナーを登録 my_mc.addEventListener(MouseEvent.MOUSE_DOWN,dragStart); function dragStart(evt:MouseEvent):void{ evt.currentTarget.startDrag(); } //「stage」に対してMOUSE_UPのイベントリスナーを登録 stage.addEventListener(MouseEvent.MOUSE_UP,dragStop); function dragStop(evt:MouseEvent){ my_mc.stopDrag(); } ------------------------------------------------ 要するに 押すターゲットはムービークリップにして 放すターゲットはステージにするということです。 または， 「EventDispatcher.addEventListener()メソッド」 http://www.fumiononaka.com/TechNotes/Flash/FN060 … ↑上記ページのクラスファイル「MyButton.as」を使わせてもらって 上記ページにあるように「my_mc」のシンボルの設定を「MyButton」クラスにして フレームに書くスクリプトを次のようにしても良いと思います。 ------------------------------------- my_mc.onPress = function() { my_mc.startDrag(); }; my_mc.onRelease = function() { my_mc.stopDrag(); }; my_mc.onReleaseOutside = function() { my_mc.stopDrag(); }; ------------------------------------- 　
バージョンを書かれていないので何とも言えませんよ。。。 Flash CS4 (Flash Player 10) 以上なのか Flash CS3 (Flash Player 9) 以下なのか この辺で変わります。 また ActionScript のバージョンも書かれていない。 Flash CS4 以上をお持ちであれば y軸３D回転の部分は簡単なことです。 ActionScript なんか使わなくても ステージ上で写真をグリグリ３D回転させることができますから， ムービークリップの中で写真が回転するだけのアニメーション(モーショントゥイーン)を作成しておいて ステージ上の任意の場所プがクリックされるなどしたとき 左で大きくなるムービークリップ内を play() で再生させるようにすれば 「回転のみ」は非常に簡単にできます。 また ActionScript を使うとしても CS4 以上 なら 3D回転させることは簡単です。 「インスタンスのy軸における回転角の値の範囲」 http://www.fumiononaka.com/TechNotes/Flash/FN100 … 残る問題は 「順繰りに各ムービークリップを目的の座標と深度に移動させる」部分のみになります。 ここは結構頭を使うと思います。 CS3 以下であれば ３D回転の敷居はかなり高くなります。 Papervision3D などを使った方が楽かもしれません。 確か ActionScript 2.0 版もあったと思います。 その３D回転部分で四苦八苦した上に 「順繰りに各ムービークリップを目的の座標と深度に移動させる」部分も考えなければなりません。 この辺は ActionScript 2.0 と 3.0 では書き方や考え方を変えなければなりません。 バージョンによっていちいち説明したり回答を変えて書くのは不可能です。
#ANo.1です。 ちなみに私はクリエイターなのでAdobe(旧Macromedia)の事情は分かりませんが、いまだに広告媒体などでFlash5やMXじゃないと入稿できませんなんてところがあるもんですから、仕方なくFlash5～CS5まですべて所有しています。別の会社で制作されたデータをいじることもよくありますし。 販売戦略の有無は別として、1つしかダウンバージョンできないことがAdobeの売り上げに貢献しているのは事実ですね。
AS2.0ですが、以前、「憲ちゃん」サイトに投稿した際のサンプルがありましたので、下に、FLAをアップしておきます。ダウンロードして、弄ってみて下さい。 参考URL：http://homepage2.nifty.com/joys/answers/musiclan …
＃１です。 ActionScript は大文字で始まる型の名前を慣例にしているだけで、大文字/小文字で始めなければならない文法上の規定はありません。 型の名前は ActionScript 3.0 になっても規定が特に追加されておらず、それはつまり、文法の範囲内で自由に付けて構わないということです。 明確な規定がないのなら、新たに導入する型の名前を大文字始まりにする義務もありません。 自由に名前を付けていいのに、慣例に反して名前の統一感を欠いてでも、なぜ小文字だけの型の名前が導入されたのか。 型の名前の由来まではいちいち説明する必要がなく、その理由はおそらく Adobe のサイトにも Flash の仕様書にも書かれていないでしょう。 公表されていない以上、真相を知っているのは開発者だけですから、理由は推測するしかないと思います。 ActionScript はＣ言語系の文法や発想をいろいろと取り入れてきました。 ですから、今回、整数型を導入するにあたり、Ｃ言語系と同じ int の名前を採用したのではないかと推測できます。 また、符号なしの uint は大文字始まりにすると UInt になり、ActionScript には” UI ”で始まるクラスが多く紛らわしくなるから、といった理由もあるのかもしれません。 ちなみに、関数の戻り値がないことを表す void は、ActionScript 2.0 では大文字始まりで Void と書きますが、3.0 では小文字の void に変更されました。 このあたりからも、Ｃ言語系の表記に合わせようとしていることが窺われます。 型の他にも、ActionScript の名前には統一されていないところが多々あります。 例えば、メソッドの名前は小文字始まりを推奨しているのに、グローバル関数の中には大文字で始まる名前の関数もあります。 これは、互換性や使い勝手を考慮しながら、添削を繰り返して進歩してきた結果だと思います。 今回の件も、名前の統一感はさておき、Ｃ言語系の言語にある int 型を名前ごと取り入れた、それだけのことではないでしょうか。 どうしてそんなことをしたのかは現時点では見えてきませんが、今後、Ｃ言語系と同様にプリミティブ型は小文字で、といった規格を作っていくつもりなのかもしれません。
＃１＆２ です 返事が大変遅れてしまいすみません。 > 「town1」はムービークリップに変換し、 > モーショントゥイーンで動かしています。 ということは root(メインのタイムライン)のフレームを使って 「town1」というインスタンス名のムービークリップを移動させている。 ということになるのではないかと思います。 もしそうであれば 「rootのタイムラインを止める必要がある」 ということになります。 したがってその場合は ご質問で書かれていらっしゃる次の文↓を function rolloverHandler(event):void{ town1.stop(); } 次のような感じ↓に変える必要があります。 function rolloverHandler(event):void{ MovieClip(root).stop(); } しかし。。。 もしそうであると， ムービー自体は Spriteクラス を継承したものではなくて MovieClip を継承したクラスになると思います。 そうである場合は ご質問で書かれていらっしゃる次の文↓を public class komoTown extends Sprite{ 次のように↓に変える必要があると思います。 public class komoTown extends MovieClip{ これに限らず， ドキュメントクラスのクラスファイルは だいたいどの場合も extends MovieClip にしておくのが無難だと思います。 Flash 自体は＝Flashのメインタイムラインは ムービークリップの一種ですから。
この場合の、onEnterFrameはいわゆる時計(タイマー)のようなものです。 同時に2つ以上の行動が起こせないのは、その時計が1つしかないからです。 たとえば、今回のロールオーバー・アウトのアクションは、「一定時間毎に大きさを3%づつ変化させ、ある大きさになったらストップする」というものですが、この一定時間を計測しているのがonEnterFrameです。ひとつのボタンからロールアウトして、時間を計測中にも関わらず、新たなロールオーバーによって計測をリセットしてしまうというのが、今回の現象です。 つまり時計の数を増やすことで、この問題は解決できます。 例の記述では、記述したタイムラインの時計を使っているので、それを各ムービークリップの時計を使用するようにすれば、よいかと思います。 具体的な方法は、BlurFiltanさんの例が参考になりますね。
Flash 作成ソフト も そのバージョンも SWF の Flash Player のバージョンも ActionScript のバージョンも一切書かれていないため 具体的な回答は一切書けません。 また具体的状況も書かれていないので何とも言えません。 しかし，かなり古いバージョンを除いた場合 たいていどのバージョンであっても 「基準点」が重要ポイントになります。 （状況がわからないのでなんとも言えませんがおそらくポイントになるのではないかと思います） この共通で基礎的な部分である 「基準点」の理解はされていらっしゃるでしょうか？ 「ムービークリップの基準点」 http://homepage3.nifty.com/ginga-b/flash5/mc_ref … 「インスタンスの基準点」 http://homepage3.nifty.com/ginga-b/MX/inst_refpo … ムービークリップの座標はAS(ActionScript)で指示するわけですが 少なくとも基準点がわかっていないとスクリプトは組めません。 「AS上でのムービークリップの座標」とは「AS上でのムービークリップの基準点の座標」です。 その「ムービークリップの基準点の座標」を 最初表示させたとき Stage または stage の中心に配置し ステージをリサイズさせたときにも Stage または stage の中心に配置するようにスクリプトを組みます。 そのとき ムービークリップの中心に基準点があれば そのムービークリップは Stage または stage の中心に来るはずです。 もし「基準点をムービークリップの中心に置けない」という何か特別な事情がある場合は その基準点からムービークリップの中心までの座標の差分を算出し 差分をプラスマイナスする必要があります。 （以上，具体的状況がわからないので 勝手な推測まじりの漠然とした回答です。）
はじめまして。 私もまだまだ勉強中なのですが、この↑のサイトのようにしたいというのであれば、 フラッシュではないですが、サイト自体Jqueryのanythingsliderを使用しているので そちらを利用したらいかがでしょうか？ http://css-tricks.com/anythingslider-jquery-plug … ただ私も、javascriptをフラッシュにcallしたいのですが、そこがまだ 理解できていないので、他の方のアドバイスを頂ければと思ってます。 Jqueryは簡単に取り入れられるし、いいかと思いますよ。
「先に mc0 が作成される」 という先入観が問題ではないかと思います。 先に num=1 に対応する画像が ロード(COMPLETE) されたらどうなるでしょう？ 先に num=1 に対応する画像がロードされると 先に mc1 が作成されますよね。 この時点で mc0 はありません。 この状態で getChildByName("mc0").x = 165;//■■■■1枚目の配置を変える が実行されると mc0 は存在しないため 　TypeError: Error #1009: 　null のオブジェクト参照のプロパティ 　またはメソッドにアクセスすることはできません。 というエラーが出て以降のスクリプトも実行されなくなります。 ※ご質問のスクリプトのままでも 　 状況によっては無事動作することもありましたよ。 『必ず「num=0 に対応する画像」のロード後に 「num=1 に対応する画像」のロードされるようにする』場合 まず「num=0 に対応する画像」をロードして その COMPLETE 後に 「num=1 に対応する画像」をロードする必要があると思います。 動作の意味が不明な部分もあるので どうすべきかはわかりませんが 例えば次のようにするとか。 ------------ //関数 loadJPEG の定義 function loadJPEG(n:int):void{ //Loaderインスタンスを作成 var loader_obj:Loader = new Loader(); //■■■■イベントリスナーでnumを渡す loader_obj.contentLoaderInfo.addEventListener(Event.COMPLETE,loadComp(n)); //URLRequestインスタンスを作成 var req:URLRequest = new URLRequest("img" + n + ".jpg"); //外部画像をロード loader_obj.load(req); } //関数 loadJPEG の実行 loadJPEG(0); //■■■■イベントリスナー関数 function loadComp(num:int):Function{ return function(event:Event):void{ var loader:Loader = event.target.loader; this["mc" + num] = new MovieClip(); addChild(this["mc" + num]); this["mc" + num].addChild(loader); //■■■■1枚目の時 if ( num == 0 ){ this["mc" + 0].x = 295; this["mc" + 0].y = 30; //関数 loadJPEG の実行 loadJPEG(1); } //■■■■2枚目の時 if ( num == 1 ){ this["mc" + 0].x = 165;//■■■■1枚目の配置を変える this["mc" + 1].x = 425; this["mc" + 1].y = 30; } //■終わり } } ------------ ※↑FlashのFLAなどと同じフォルダに 　「img0.jpg」と「img1.jpg」を置いた場合です。 ※このように逐一座標を動かすのではなく 　全ての画像をロードし終わった後に 　それらの座標を決めても良いと思います。 　(そうすればもっと簡素になるかも) ※その他 「MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html 「ドット演算子と配列アクセス演算子」 http://www.fumiononaka.com/TechNotes/Flash/FN050 …
> 「a = b = d = e = "";」が理由と思われますが、 ということでしたら， a = b = d = e = ""; この部分↑を次のように↓変更すれば良いと思います。 //もし変数 stat_flag の値が未定義であれば if (stat_flag == undefined) { //変数 a，b，c，d の値を空白文字にして a = b = d = e = ""; //変数 stat_flag の値を true にする start_flag = true; } Flash Player 7 以上用 SWF をパブリッシュする場合 値を代入していない変数の値は「undefined」 になります。 ※Flash Player 6 以下でも基本的には 「undefined」 ですが 　あえて計算などをしようとすると 　自動的に 0 または ""(空白文字列) として扱われます。 --- ちなみに ------------------ テキストフィールド の変数名は Flash Player 4 用の SWF や Flash Lite 1.x 用の SWF をパブリッシュするときのみに使う機能（すごく古い機能）で， それより後のバージョン用 SWF をパブリッシュする場合は 非推奨 になっています。 （簡単に言えば，通常はテキストフィールド に変数名を付けてはいけません。） Flash Player 6 以上用の SWF をパブリッシュするときは テキストフィールド には変数名を付けず，インスタンス名を付けて テキストフィールド インスタンス.text でその値にアクセスするようにします。 ・例1 //変数a_num に テキストフィールド a の値を代入 var a_num = Number(a.text); ・例2 //テキストフィールド a に変数a_num の値を表示 a.text = a_num; ※ Flash 8 のヘルプで 「変数名 ダイナミックテキスト」などと検索すると 上記に関する事項がたくさん出てきます。 ※ ActionScript 3.0 などでは var my_txt:TextField = new TextField(); のように テキストフィールドに変数を当てて使うことが良くありますが これは全く意味が違います。 ActionScript 3.0 などでの変数は テキストフィールドインスタンスを参照する変数であって テキストフィールド内に示された値の入れ物ではありません。 ActionScript 1.0(通常) でも 2.0 でも 3.0 でも 「テキストフィールド」は「インスタンス」として扱うべきものです。 その「テキストフィールドインスタンス」の「text」プロパティが テキストフィールドに表示されている文字列プロパティです。
＃１です。 > 先にXMLの読み込みが必要だったんですね…； ボタンにリンク（getURL）を付ける前でしたらいつでもかまいません。 しかし外部データによって作るムービークリップの数まで決める場合は ムービークリップを作成する前にXMLロードを "完了" させておく必要があります。 それと字数の都合上 「ムービークリップには外部JPEGをロードした後でなければ クリック動作( onRelease=function(){} )を定義できない」 という重要ポイントを 少ししか書けませんでした。 ムービークリップ に クリック動作を定義した後に そのムービークリップに外部JPEGをロードすると(ロードが完了すると) せっかく定義した クリック動作 が消えてしまいます。 ですから そのムービークリップに 外部JPEGをロード "完了" した後に クリック動作 ( onRelease=function(){} ) を定義する必要があります。 この「外部JPEGをロード "完了"」イベントは loadMovie では拾えませんから MovieClipLoader を使って拾う必要が出てきます。 そのようなことを考え合わせると 　XMLロード開始 　↓ 　XMLロード完了 　↓ 　ムービークリップ作成 　↓ 　外部JPEGロード開始 　↓ 　外部JPEGロード完了 　↓ 　ムービークリップにリンクを付ける という流れがスムーズにできるということになります。 「先にXMLの読み込みが必要がある」 というよりも いつもそうとは限らないので 「いつ何をすべきかを考える必要がある」 というべきでしょうか。 > p1.jpgが表示されている間は、 > id1のリンク先へ飛ぶように、 > 応用したいのですが、どのようにすれば 意味（イメージ）が良くわかりませんが。 p1.jpg をロードしたムービークリップが表示されている間は そのムービークリップの _visible または enabled を true にしておいて そのムービークリップが表示されていない間は ムービークリップの _visible または enabled を false にしておけば _visible や enabled が false になっている間だけ onRelease=function(){} が動作しないと思います。 または p1.jpg をロードしたムービークリップの表示開始時に onRelease=function(){} を定義して そのムービークリップが非表示になるとき onRelease=function(){} を delete しても良いかもしれません。 「F-site | イベントハンドラメソッドはdeleteで消せ!」 http://f-site.org/articles/2004/05/22140833.html とにかく リンクを付けたいムービークリップに対して 　ムービークリップ.onRelease = function(){ 　　　ロードしたXMLから対応したURLを取り出す 　　　ロードしたXMLから対応したTargetを取り出す 　　　getURL(URL,Target); 　}; をするわけです。 あとは上と同じで 場合によって 「いつ何をすべきかを考える必要がある」 ということでしょう。
１ FlashPlayerのバージョンが違う AS3はFlashPlayer9以上から TLFはFlashPlayer10から ２ swfで読み込んでる外部ファイルがちゃんと全部 サーバーに上げられてない 読み込みのパスがローカルパスになってる 特にFLVPlaybackコンポーネントの スキンの上げ忘れはよくある話
> 何がいけないのでしょうか？ って... ですね。。。 書かれていらっしゃるスクリプトは ActionScript 3.0 ですよ。 ParaFla! での アクション に関する使用言語バージョンは ActionScript 1.0 です。 （ActionScript 2.0 とは互換があるが 3.0 との互換はない。） 書かれていらっしゃる ActionScript 3.0 を ActionScript 1.0 に変換すると次のようになります↓。 ---------------------------- var text_field = this.createTextField("text_field",this.getNextHighestDepth(),50,100,200,20); text_field.border = true; text_field.text = "表示テスト"; ---------------------------- だだし ParaFla! の場合，上記スクリプトを実行可能のするには， Flashファイル (SWFファイル) を SWF8 で書き出す必要があります。 デフォルトでは SWF6 設定になっていると思うので 「ファイル」→「プロジェクトのプロパティ」で 「SWFバージョン」 の欄を 「SWF8」 に設定してから SWF を書き出して閲覧してみる必要があります。 ※ とにかくFlashはバージョンが大切です。 　　ParaFla! の場合は 　　ActionScript の バージョン や 　　SWF のバージョン が関係します。 　　Adobe Flash では 　　さらに その Adobe Flash のバージョンも重要になります。
同時に2つのプログラムからのアクセスは出来ないのではないかと思います。 何をしたいのか具体的に書いていないので詳しくは書けませんが、もし、単純に映像を見たいというのであれば、どちらかのプログラムで絵を保存しておいて、他のプログラムはそちらを見るというのはいかがですか。 もう少し実用的にするには撮影用のDLLを作っておいて、それを両方のプログラムから呼び出して映像を渡してもらえば可能かと思います。
SVG(Scalable Vector Graphics)はその名の通りベクターデータのことなので、Flashからエクスポートできるのはベクターデータのみじゃないでしょうか？ なので、swfファイルの中にベクターデータがなければエクスポートできないとか。
W3C側でFlashを排斥しようということはありません。てかそういうことができる組織じゃないです。 おそらくAppleがFlashを排斥したのが誤って伝わったのではないでしょうか？ ちなみにこれも、技術的というよりも会社同士の喧嘩に近いものですので、 現時点では特に心配する必要性はないかと存じます。
ステージ(Stage / stage)にマスクをかけることはできません。 ヘルプ（ActionScript 3.0 言語およびコンポーネントリファレンス）で mask を検索すると出て来る Stage のページにも 次のように書いてあります。 > 以下に示す継承プロパティは > Stage オブジェクトに適用できません。 > これらを設定しようとすると、 > IllegalOperationError がスローされます。 > これらのプロパティは読み取ることはできますが、 > 設定することはできないため、 > 常にデフォルト値となります。 > > ・ accessibilityProperties > ・ alpha > ・ blendMode > ・ cacheAsBitmap > ・ contextMenu > ・ filters > ・ focusRect > ・ loaderInfo > ・ mask しかし ステージ(Stage/stage)ではなく， root であればマスクをかけることはできます。 したがって 「いわゆるステージ全体」 にはマスクをかける ということはできると思います。 root とは， この場合の Flash を起動して新規ドキュメントを作成したときに すぐに見えるタイムライン（メインタイムライン）のことです。 その root のタイムラインのフレームに書くスクリプト例↓ ---------------------------------- //マスクとなる矩形塗りを用意 var myMask:Shape = new Shape(); myMask.graphics.beginFill(0xFF0000); myMask.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight); myMask.graphics.endFill(); //マスクとなる矩形塗りをstageに配置 //(矩形の座標をstageの左上で固定するため) stage.addChild(myMask); //root(stage の子0) に myMask のマスクをセット stage.getChildAt(0).mask = myMask; //↓上記の代わりにこれでも良い //root.mask = myMask; //↓また これでも良い //this.mask = myMask; ---------------------------------- 　 　 上記スクリプトの内容は stage の直下に Shape(シェイプ) を配置し root に Shape のマスクをかけるということです。 つまり スクリプトによってムービーの構造を次のように変えたということです。 ・スクリプト実行前の構造↓ 　stage 　　└root ( stage.getChildAt(0) ) ・スクリプト実行後の構造↓ 　stage 　　├myMask (矩形のシェイプ) 　　└root ( stage.getChildAt(0) ) 　　　　　↓そして↓ 　　　root に myMask のマスクをかける 　
多分AS3じゃないとキツイです 僕のやったやり方と同じなら 使うクラスはBimapにBitmapDataとDisplacementMapFilter マップ作りにConvolutionFilterとColorMatrixFilterとかです DisplacementMapFilterっていうのは PhotoShopの置き換えフィルタ ConvolutionFilterっていうのは カスタムフィルタみたいなものです これらのフィルタを知らなければまずはそこから 逆にこれらのフィルタがわかればおおよそ どうやればいいか見当がつくと思います でもこれは結構やりたがるひとがいると思うので もしかしたらどこかでソース配布してるかもしれません 参考URL：http://vision.ameba.jp/watch.do?movie=2466564
removeChildの方はうまく出来ているのに、惜しい！ function doComplete(e:Event):void { addChild(Btn_1); } これでいいですよ。
自己解決できました。お恥ずかしい質問をしていたことに気づきました。
var x:int; ↑単に宣言しただけでxの数値は未定なんですね。 loaderList[i].x = x; ↑未定な座標に何かを配置できる？ x = x+100;　//画像のサイズによって変更 ↑未定な数値に 100 を加算するってどういうこと？ var mc1:MovieClip = new MovieClip(); ↑mc1 というムービークリップを作ったのですね。 ↑しかし？？？ 　この mc1 はどこに配置したの？ 細かいことを書けばもっとありますが ざっと見ただけで上記のように思います。
on (release) { 　　　Keisan (); 　　　h = a_num; 　　　i = b_num; 　　　j = g; } a_numや、b_numはvar宣言がなされているので、keisan関数内でのみ有効な変数です。 ですので、keisan関数外から参照することはできません。 こういう場合は on (release) { 　　　Keisan (); 　　　h = getNumber(a); 　　　i = getNumber(b); 　　　j = g; } という感じでgetNumberを使ってみては如何でしょう。 それと2のご質問ですが、 a = b = d = e = ""; とあるので、そのフレームに移動してきたときは強制的に空が入ります。 一度_rootなり_globalなりに変数の値を格納しておき、その値を参照するようにすればいいのですが、 今回の投稿内容からは逸脱する内容なので、 「フレーム間移動時に変数を保存しておく方法」として新規で立てることをオススメします。
ん？ExternalInterfaceで返し値の読み込み自体は成功しているってことですか？ 「読み込めない」って書いてありましたが、 なんか、ご質問の内容が次々変わっていっているようですが？？？ どこまで出来てどこから出来ないかを明確にするべきでしたね。 とりあえずloadMovieが使えるなら 取得した画像パスをそのままloadMoive()で読み込めばいいのでは？
別に問題ないと思いますが １分のムービーとなると タイムラインがとても長くなってしまうので 作業のしやすさとか考えると スクリプトを使う方がいいのかなと思います AS3ならこういう単純なものはTweenクラスにやらせれば ２～３行のコードで済むかと思います
今は手元にFlashがないため、諸々検証できなくて申し訳ないのですが、 とりあえず私がたまにやるお茶目なミスを。 それはターゲットとするMCを、初期状態では表示したくないため、 アルファ値を0%としてしまうことです。 ただこの状態で読み込んでも、当然アルファ０％が生きたままなので、 表示はできたが見えない状態になります。 ちなみに _parent._parent.target_mc ↑この書き方ですと、ターゲットMCはボタンが置かれた場所から見て、 親の親にあるという解釈になり、 ボタンそのものから見たパスではないので、そこも確認してください。
loadMovieってことはAS1.0かAS2.0ですね。 とりあえずloadMovieじゃなくてMovieClipLoaderを使ってください。 読み込み完了時にスムージングを掛ける儀式を行うのですが、loadMovieですと読み込み完了が取れないので。 具体的なスクリプトは下記。 import flash.display.BitmapData; var lis:Object = new Object(); lis.onLoadInit = function(mc:MovieClip){ var bmpData:BitmapData = new BitmapData(mc._width, mc._height); bmpData.draw(mc); createEmptyMovieClip("smoosingMC", 1); smoosingMC.attachBitmap(bmpData, 1, "auto", true); mc._visible = 0; }; var MCL:MovieClipLoader = new MovieClipLoader(); MCL.addListener(lis); MCL.loadClip("hoge.jpg",読み込む先のMC); onLoadInit関数の中が儀式です。 どんな儀式かと言うと、 1.ビットマップオブジェクトを用意する(new BitmapData) 2.それに読み込んだ画像を書き込む（draw） 3.ビットマップ用の空のMovieClipを用意する（smoosingMC） 4.その中にビットマップオブジェクトを入れる(attachBitmap) 5.もとのMovieClipを隠す で、attachBitmapに渡している4番目の引数がスムージングです（trueとします） これで如何でしょう？
＃１です。 ご質問で言わんとされていることがわかってきたように思います。 でも，その前にですね...。 > RENDER_MOVIECLIP = _root.movieclip_mc; > にしてみたのですが、ダメでした。 そうですか？ ステージ上に 「movieclip_mc」 というインスタンス名を付けたムービークリップを配置すれば普通にできましたよ。 しかし... そのことは本題じゃないでしょう？ 「RENDER_MOVIECLIP = _root」 で指示するものは 「どこに配置するのか」 です。 「何を(どのビットマップを)」ではありません。「どこに(どの階層に)」です。 ご質問の本題は 「どこに配置するのかという部分」ではなく 「ビットマップデータにリンケージで識別子を付ける部分」なのでしょう？ 「BitmapData」オブジェクトは， 必ずしもライブラリに配置したビットマップシンボルに識別子を付けなくても操作できます。 しかし ステージ上に配置したビットマップ自体にはインスタンス名が付けられません。 インスタンス名が付けられなければ名指しして命令ができません。 その名指しする方法の１つが， リンケージで識別子を付けるという手段なだけです。 「サインカーブで波打つビットマップ」のサンプルを使わせてもらって リンケージで識別子を付けない方法例を書きます。 「サインカーブで波打つビットマップ」のライブラリにある「dat00.png」を選択して 「リンケージ」の識別子「source」という名を削除します。 ついでに「ActionScriptに書き出し」のチェックもはずします。 このリンケージ設定を削除した「dat00.png」をステージ上にドラッグ＆ドロップで配置します。 しかしこのビットマップにはインスタンス名が付けられません。 ですから このビットマップをムービークリップに変換します。 ※このとき基準点を左上に設定してムービークリップに変換します。 このステージ上のムービークリップに， 「source_mc」 というインスタンス名を付けることにしておきます。 そして「サインカーブで波打つビットマップ」のスクリプトの１行目 // ビットマップのリンケージ名 SOURCE_NAME = "source"; 　↑これを 　↓次のように書き換えます //ビットマップの入ったMC SOURCE_NAME = source_mc; また // ビットマップデータ確保 bmpData = flash.display.BitmapData.loadBitmap (SOURCE_NAME); 　↑これを 　↓次のように書き換えます //ビットマップデータ確保 bmpData = new flash.display.BitmapData(SCREEN_WIDTH,SCREEN_HEIGHT); bmpData.draw(SOURCE_NAME); SOURCE_NAME._visible = false; 以上。 ビットマップには必ずリンケージで識別子を付けなければならないということはありません。 ですから工夫をすれば外部JPEGをロードして その外部データを「サインカーブで波打つ」ようにするようなことも可能です。
まず、 var img_n:URLVariables = new URLVariables(e.target.data); ではないでしょうか。 m=50なのに40が返ってきているのが気になりますが。。 ただ、ご質問は ＞trace(img_n.m);//結果：未定義のプロパティ img_n へのアクセスです。 これですね？ であれば当然の結果です。 この時点でロード読み込み完了していないので。 ロード完了はあくまでCOMPLETEイベントのコールバック関数が実行されるときであって、 スクリプトの下段に書いたからといって必ずしも最後に実行されるわけではありません。
というよりもFlash８以降Flashlightが含まれるのでは？ ただ、最新のFlashlight4のパブリッシュはCS5Proだと 思いますが。 情報はAdobeのサイトにあったと思いますよ。
Flash読み込み時に渡したいのであれば、javaScriptを使わなくてもいいです。 Flash配置のソース内で、 hoge.swf?sURL=サウンドのURL もしくはFlashVars属性 <param name="flashvars" value="sURL=サウンドのURL" /> を利用し、Flash側では_root.sURL（AS2.0）またはloaderInfo.parameters["sURL"];（AS3.0）で 参照すればいいでしょう。 そうではなくて、動的に渡したいのであれば ExternalInterfaceを使います。 AS2.0かAS3.0か分かりませんので、要点だけ記載します。 [AS] ExternalInterface.addCallback("fromJS",null,getSoundURL); function getSoundURL(sound_url){ trace(sound_url); } [JS] document.getElementById(SWFオブジェクトID).fromJS(サウンドURL) こんな感じです。
ParaFla! は ParaFla! です。 まず そこをしっかりとしっかりと認識してください。 まず ParaFla! は ActionScript 1.0 までしか使えません。 「それが悪い」 という意味ではありません。 「ActionScript 1.0 までしか使えない」 という現実をしっかりと理解する必要があるということです。 > アクションスクリプト自体を学ぶには > どうすればいいのかわからなくて困っています。 今どき ActionScript 1.0 などの本など普通の本屋さんでは売っていません。 古本屋さんやネットオークションで見つけて購入できればサイワイです。 Macromedia（現在はAdobe） Flash で言うなら Flash MX の本までがかろうじて参考になることがあるかもしれないという程度です。 （そもそも ParaFla! 用の本など存在しない。） ActionScript 3.0 の本とか ActionScript 2.0 でも オブジェクト指向 関係の本などまるで役に立ちませんよ。 繰り返しますが ParaFla! は ParaFla! です。 それが良い とか 悪い ではなく そこをしっかりとしっかりと認識してください。 例：何かをロードしたい場合 「ParaFra! loadMovie」などと検索していく http://www.google.co.jp/search?hl=ja&q=ParaFra%2 … そういう方法がベターです。
> ソースは以下の通り。 > on (release) { > 　　gotoAndPlay(133) > } って，それはどこに書いたのでしょうか？ ボタン(ボタンシンボルに変換したボタンインスタンス)ですか？ ムービークリップ(ムービークリップシンボルに変換したムービークリップインスタンス)ですか？ この「肝腎な部分」を明記されていないということは， これを「肝腎だと思っていない」からだと思います。 ボタンにそのスクリプトを書いた場合， そのボタンが存在するタイムライン（_rootなど）のフレームを 133 フレーム目に進めて再生させることになります。 ボタンが存在するタイムライン（_rootなど）は 少なくとも 133 フレーム目以上存在するのでしょうか？ ムービークリップにそのスクリプトを書いた場合， そのムービークリップ内のタイムラインのフレームを 133 フレーム目に進めて再生させることになります。 そのムービークリップ内のタイムラインは 少なくとも 133 フレーム目以上存在するのでしょうか？ その他 > 実際はボタン押下しても、何もおきません。 厳密にはボタンを押下しても何もおきませんよ。 on (release) は 「押下したとき」 ではなく 「押下してその押下したものの上で放したとき」 です。 つまり，いわゆる 「クリックしたとき」 です。 例えば 「押下したとき」 ＝ on(press) などでそのボタンなどが存在しないフレームにジャンプさせた場合， on (release) の命令を聞く者は存在しなくなるので， その場合も gotoAndPlay(133)　は実行されなくなります。 単なる書き間違いだと良いですが 本当に on (release) を 「押下したとき」 だと理解していたら 怪奇現象が多発する可能性がでてきます。 さらにその他 これは Macromedia Flash MX 2004 の場合はさほど影響はありませんが gotoAndPlay(133)　ではなく　gotoAndPlay(133);　が正解です。 文末にセミコロンが要ります。 Flash MX 2004 の場合はさほど影響はありませんが 他のソフトだとこの辺も厳密に書かなければ動作しないこともあります。
わざわざふたつのSWFの読み込みをコントロールしなくても、 opening.swfのアニメーションをひとつのムービークリップにしてルートに配置し、 main.swf読み込みと同時にvisibleで消しちゃえば良いんでないでしょうか。 一般的な手法というのはその時々によって異なりますので、 コレというのはありません。
ボタン16個に同じスクリプトを書くのは非効率的ですが、 それは別問題なので無視します。 で、キーボードに対するスクリプトとボタンに対するスクリプトが 同じファイルまたは階層に記述されていると仮定すると、 ↓こんな感じでしょうか。 stage.addEventListener(KeyboardEvent.KEY_DOWN,dok); function dok(e:KeyboardEvent):void{ if (e.keyCode == 49){ if(mySoundChannel){ mySoundChannel.stop(); mySoundChannel = null; } mySoundChannel = mySound.play(); } ってか、ボタン用スクリプトを見ればだいたい分かると思いますが。。。 コピペで「出来た」とするのではなく、内容を理解するように意識してみると良いと思いますよ。
＞スライド効果（次の画像を表示する際、現在表示中の画像が画面外へ向かいつつ同時に次の画像がやってくる感じで） 最後の↑コレを忘れてました。 これはマスクでいいんじゃないですか？ AS1.0を使っていたのであれば、通常のマスクの使い方（レイヤー右クリック→マスク）は知っているものと思われます。 AS3.0でも同じ方法は使えますが、スクリプトでやるなら、 ImgMC.mask = MaskMC; となります。 ただし、このスクリプトはひとつのマスクに対してひとつのオブジェクトしか適用できないので、 今回のように複数のオブジェクトがある場合は、 ひとつのムービークリップを用意し、その中に各画像を読み込んだ上で、 そのムービークリップにマスクを掛ける手法でいいと思います。 //予め、ムービークリップ（AllImg）と（MaskMC）を用意 for(var i=1;i<=予定枚数;i++){ this["IMG" + i] = new Loader(); this["IMG" + i].load(new URLRequest("hoge" + i + ".jpg")); this["IMG" + i].x += 規定の幅(画像の横幅+α); AllImg.addChild(this["IMG" + i]); } AllImg.mask = MaskMC; な感じです。 で、ボタン操作でAllImg.x　を操作してあげればいいです。
IDがちょっと違いますが、No1と同一人物です。 swf読み込みですか、、それは重要な情報ですよ。。。 その他にも、 そのswf内のビデオデータは埋め込みですか？それとも外部参照ですか？ 外部参照であればFLVPlayBackコンポーネントを利用ですか？ そもそもビデオSWFは編集不可だったりしませんか？ 以下、FLVPlayBackで、編集可能と仮定した場合です。 /*5フレーム目のスクリプト*/ var mov = new Loader(); mov.load(new URLRequest("video.swf")); mov.contentLoaderInfo.addEventListener(Event.INIT,setIndex); function setIndex(e:Event){ addChild(mov); //video.swf内にvidというFLVPlayBackコンポーネントが配置されていることを前提 mov.content.vid.activeVideoPlayerIndex = 1; mov.content.vid.visibleVideoPlayerIndex = 1; mov.content.vid.source = "hoge.flv"; mov.content.vid.play(); } //ビデオの消去関数。フレーム移動ボタンから実行させれば良い。 function removeVideoPlayer(){ removeChild(mov); mov.content.vid.closeVideoPlayer(1); mov = null; } stop(); タイムライン埋め込みの場合はちょっと面倒そうですね。 正直、可能であればFLVPlayBack使った方がいいです。 Flashファイルのフレームレートの影響もないし、操作もラクチンなので。 私ももう何年も埋め込みの手法は採用してませんので。 まぁ、これを機にちょっと勉強してみます。
マウスイベントはbtnからですね。失礼。 var i:int=0; var r = mc.rotation; function onEnter(event:Event):void{ 　r += (i-r)*0.1; 　mc.rotation = r; } addEventListener(Event.ENTER_FRAME, onEnter); btn.addEventListener(MouseEvent.MOUSE_DOWN, MouseLDownFunc); 　function MouseLDownFunc(event:MouseEvent):void{ 　i+=90; };
Y知恵袋の方に回答してあります。 http://detail.chiebukuro.yahoo.co.jp/qa/question … それよりも、 「マルチポスト」についてのマナーを学習しておいてください。
具体的に何が質問なのかがよくわかりませんが。。。 　「任意のメールアドレスを閲覧者に入力させる場合 　var theURL:URLRequest=new URLRequest("アドレス"); 　この "アドレス" 部分には何を書けば良いのか？」 というご質問でしょうか？ つまり言いかえると 　「メールアドレスは閲覧者に入力してもらうので 　メールアドレスの欄は空欄にしておいて 　"メーラーを起動させるだけ" をするのには 　どうすれば良いか？」 というご質問でしょうか？ そうでしたら次のようにすれば良いと思います↓。 ------------------------------------ mc.addEventListener(MouseEvent.CLICK, gotoURL); function gotoURL(event:MouseEvent):void { var theURL:URLRequest = new URLRequest("mailto:"); navigateToURL(theURL,"_self"); } ------------------------------------ ※注意事項※ これはブラウザに対する命令（リクエスト）です。 SWFはブラウザで見て検証する必要があります。 つまり通常閲覧する状態のように SWFはHTMLに貼り付けてそのHTMLをブラウザで開く必要があります。 またブラウザにメーラーが関連付けられていなければ 何のメーラーも起動しません。 その他，閲覧者の設定やセキュリティソフトなどによってメーラーが起動しない場合もあります。 (実は全体的に Flash の責任範囲ではないのです。) (つまり動作しなくても Flash のバグではないということです。)
うっ、Gif/Pngの置き換え、しかもJAVAで！ ご存知のとおり、ロスレス系画像は、例のDefineBitsLossless変換を行って、差し替えてやる必要がありますね。。 Turbine7だと、すべてライブラリがやってくれるんですが、swfmillって原始的なxml「置き換え」が必要ですもんね。 自分javaあまりよく知らなくて、すいません。 C#で処理書くときには、言語仕様が似ているjavaのクラス探すんで、こんなものを見つけました。 // いい感じじゃないかと思うんですが。。 http://grepcode.com/file/repo1.maven.org/maven2/ … 外していたらすいません
スキン適用ってことはFLVPlaybackコンポーネントを利用したものですね。 ステージに追加されたオブジェクトのコンポーネントインスペクタ（プロパティウィンドウ）で、 autoPlayをfalseにすれば初期状態は停止です。 で、再生ボタンを作ってplay()すれば再生されます。 例：オブジェクト名がmovの場合。 btn.addEventListener(MouseEvent.CLICK,movPlay); function movPlay(e:MouseEvent):void{ mov.play(); } カスタムスキンは個別に指定できますが、 標準スキンをカスタムした方が早いです。 Win、CS3ですが、下記の場所にスキンデータが入っていますので、複製→編集してみてはいかがでしょう。 C:\Program Files\Adobe\Adobe Flash CS3\ja\Configuration\FLVPlayback Skins\FLA
ロード完了や配置完了のタイミングで、 vid.x = (stage.stageWidth - vid.width)/2; vid.y = (stage.stageHeight - vid.height)/2; でどでしょか？
> ムービークリップのタイムラインの読み込み（移動？）の > はやさは決まっているのでしょうか？ 意味がよくわかりませんが「フレームレート」のことでしょうか？ 「フレームレート」 とは 例えば 映画館で上映される映画 であれば 24コマ/秒 とか， テレビ であれば 30コマ/秒 みたいなものです。 Flash の場合の単位は 「fps」＝「f/s」＝「フレーム/秒」 で表されるもののことです。 もしご質問がこの 「フレームレート」 でしたら， なおかつ Flash ムービー(SWF) の 「フレームレート」でしたら， Flash CS3 や CS4 や CS5 など Flash 作成ソフトで FLA ファイルを開いた状態で 「修正」→「ドキュメント」で表示される「ドキュメントのプロパティ」で設定できます。 Flash CS3 でしたら，確か 12fps が デフォルトで， CS4 や CS5 でしたら 20fps 辺りがデフォルトだと思います。 その フレームレート fps の値を変えれば Flash ムービー(SWF) の 「フレームレート」 を変えることができます。 これが極当たり前の普通の方法です。 －－－－－－－－－－－－－－－ しかし，上記のように設定する方法では， ムービー(SWF) 全体が その フレームレート になるだけで 途中で フレームレート を変える設定はできません。 普通は途中でフレームレートを変えることなどしませんが， （映画でも普通は途中でフレームレートを変えないのと同じ） もしご質問がムービー(SWF)の途中でフレームレートを変えなければならないような普通でないことが生じた場合は， ActionScript 3.0 に限って(つまり Flash Player 9 以上 が必須)， 動的にフレームレートを変更することはできます↓。 「FlashゲームPG講座 For AS3.0【Stage クラスについて】#STAGE_02」 Flash のフレームレートを設定する http://hakuhin.jp/as3/stage.html#STAGE_02 このようなことになること自体が普通はあり得ませんが， そのあり得ない状況がもしあった場合は この方法が使えるというものです。 ※くれぐれも念を押しますが 　 普通はこういう方法は使いませんよ。 　 すごく特殊な場合に限って使うこともあり得なくもないという方法です。 　 (普通はアニメの動きを遅くしたければ 　 フレームを伸ばす方法やスクリプト実行間隔を大きくする 　 などの方法で処理する)
＃１の補足に関してです。 普通は無視するところですが。。。 > AS3でflaファイルを作っていて、 誰も ActionScript のバージョンなど訊いていません。 　---比喩------- 　Q：「火事が起こっているというあなたの国はどこですか？」 　A：「私は英語を喋ります。」 　　　　　↑全然受け答えになっていない 　　　　　 (英語を話す国など多すぎ) 　-------------- ActionScript で矩形を書くのであれば ActionScript のバージョンも必要です。 しかし ActionScript で矩形を書くのではないではないでしょう？ このご質問では ActionScript など関係ない（と思いますよ）。 > もう１つ作ろうかというときに同じ作業をしたときに固定されていました。 ですから 「矩形ツール」 が変になったのか 最初からとんでもないことをしようとしいて変になったのかかがわからないのです。 ＃１で書いたことを 再び書きます。 > 「矩形ツール」 "のみ" で起こる現象でしたら， 　　～中略～ > 「インクボトルツール」で線の太さを指示し直せば良いですね。 これをしてみてどうだったのですか？ そこら辺も無記入ですよ。 　---比喩------- 　Q：「とりあえず火は消火器で消してみてはいかがしょうか？」 　A：「火事が起こってます。」 　　　　　↑全然受け答えになっていない 　-------------- どんなソフトでも初心者の頃は怪奇現象が起きます。 それは 「とんでもないことを気付かずにしている自分」 がいることに気付いていない場合が多いです。 　---比喩------- 　さっきは水をかけても火が消えなかったのに 　今水をかければ火は消えた。 　何故？？？ 　　↓↓↓ 　さっきは水ではなくアルコールをかけていた。 　などなど 　--------------
書式を”右揃え”に設定したダイナミックテキストのテキストフィールドを作り、これに出力してはいかがでしょう。 作り方の一例です。 「テキスト」ツールでテキストフィールドを作り、タイプを”ダイナミックテキスト”に設定します。 このテキストフィールドにインスタンス名を付けます。ここでは仮に”disp”と付けたとします。 テキストフィールドを配置したタイムラインのフレームに、次のようなスクリプトを記述します。 下記のスクリプトは Flash Player 6 以降、ActionScript のバージョンは 1.0 または 2.0 です。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） //＊ ＊ ＊ 　//テキストフィールドを右揃えに設定 　format = new TextFormat(); 　format.align = "right"; 　//テキストフィールドの書式を設定 　disp.setNewTextFormat( format ); 　//変数を初期化 　n = 0; 　//nをカウントアップして表示 　this.onEnterFrame = function() 　{ 　　//nをカウントアップ 　　n++; 　　//テキストフィールドに出力 　　disp.text = n; 　}; //＊ ＊ ＊ 「ムービープレビュー」で確認してみてください。 n の値が右揃えで出力され、桁数が変わった時は左側にずれていきます。 今回はスクリプトで右揃えに設定しましたが、「プロパティ」パネルにあるボタン（太文字やイタリックにするボタンの右隣にあるボタン）でも設定することができます。
書き忘れてました。 btn内タイムライン1フレーム目に stop() をお忘れなく。チカチカしちゃいます。
#1です。 さっきFlash入ったマシンで確認しました。 spliceしちゃ駄目ですね。ASのArrayは参照型なので、そいつを追加した後、いったん空にして使いまわすんで、延々と同じhitohudeが配列に追加されたものができて。。 #2さんの hitohude = new Array(); で新しい配列参照を確保するのが正解です。
『ここまでかたくなにFlash切り捨てとかいう 愚行を続けるAppleはどうでもいい もうAdobeとしてはAndroid方向でいくから』 っていうようなことを言っちゃったので iPhoneのFlash対応は永遠にないだろう ってなことをニュースで言われてました ただ合法的ではない方法でiPhoneで Flashを動かすということはできるようです
＃１です。 > できるだけタイムラインを使いたくないので。。。 Flash Lite 1.x では基本的にタイムライン移動を全く使わないのは無理です。 使うフレーム数を減らすことならできますが。 一定時間間隔で何かをする場合， Flash Player 9 (ActionScript 3.0) 以降だと Timerクラス のスクリプトが使えます。 Flash Player 8 以降だと setTimeout が利用できるかもしれません。 Flash Player 6 以降だと setInterval や onEnterFrameイベントハンドラメソッド が使えます。 Flash Player 5 以降だとば onClipEvent(enterFrame) ベントハンドラ が使えます。 しかし Flash Player 4 や Flash Lite 1.x にはこれらのスクリプトがありません。 ないので onClipEvent(enterFrame) などを自作する必要があります。 　　　↓つまり↓ Flash Player 4 や Flash Lite 1.x で頻繁に登場する MC(＝ムービークリップ) のグルグルループ再生を使いましょう。 メインのタイムライン_root (Flash Lite 1.x では 「/」) のフレーム1 に 「my_txt」という変数名を付けたダイナミックテキストフィールド（仮：複数行設定）と 空の(もしくは小さな)MCを用意します。 　_root 　　├ダイナミックテキスト 変数名「my_txt」 　　└MC ※下の図↓も合わせて参考に この空の(もしくは小さな)MC内のフレームを3フレームにし 3フレームともキーフレームにします。 MC(＝ムービークリップ) 内の フレーム1に書くスクリプト例↓ ------------------------ //表示する文字の設定(「\n」は改行) str = "あいうえお\nかきくけこ"; //カウント用変数 cnt を用意 cnt = 0; ------------------------ MC内の フレーム2に書くスクリプト例↓ ------------------------ //カウント用変数 cnt に1を加算 cnt++; //_rootの変数 my_txt に str のカウント分の文字を代入 /:my_txt = mbsubstring(str, 1, cnt); //もし cnt の値が str の文字数に達すれば if (cnt == mblength(str)) { //このムービークリップ内の再生を停止 stop(); } ------------------------ MC内の フレーム3に書くスクリプト例↓ ------------------------ //このムービークリップ内をフレーム2に戻して再生 gotoAndPlay(2); ------------------------ ※「/」 は 「_root」 です。 　 「/:」 は 「_rootの変数」 です。 もし文字をもっとゆっくり出したい場合は MC内のフレームを例えば５フレームにして 上記の「フレーム3に書くスクリプト例」をフレーム5 に書くなどの工夫をするようにします。 上記のものは単純なしくみの例です。 MCにインスタンス名を付けて _root などの外部から str を指定したり MC の再生を tellTarget でコントロールをしても良いかもしれません。 この辺も工夫次第です。 　
いくつか怪しいポイントがあります。 Flashではなく、html側の設定のような感じです。 ・Flashとhtmlでエンコーディングが相違。html側をutf-8に変更。 ・フレームhtmlとフレーム内htmlのエンコーディングも相違。全部utf-8に統一。 ・Flashの配置に、"AC_FL_RunActiveContent"が使われているが、Firefoxの動作での動作にバグがあるため、SwfObjectを使うべき。 （Dreamweaver CS4以降のFlash配置はそうなっています） 上記修正して動作確認してください。
まずはまねをして見ましょう。 HP製作は幸いにも、ファイルを公開してくださっている 方々がたくさんいらっしゃいます。 http://wa.otesei.com/item/208 フラッシュをお持ちでなかったら 前回答者さんが仰ってくださったように 体験版をダウンロードして、最終的に購入されるのが 一番効率的には良いと思われます。 しかし最初はファイルを開いて見ても 何がどうなっているかわからないと思いますので 質問をするにも、基本的な知識がないと厳しくなるかもしれません。 どうしてもお金が無く購入できない場合 現在は以下のようなものもあります。 http://wonderfl.net/ http://flashdevelop.jp/%E3%83%A1%E3%82%A4%E3%83% … が、ハードルはさらに高くなります。 超理系の方でしたらもしかするとこちらのほうが 楽と言う方もいるかもしれませんがまれだと思います。 ちなみにhttp://www.buccellati.com/の 最初に本が立体的に現れる部分は ３Dソフトを使用していると思われます。 先は長いですがお互い頑張りましょう。
クラス名.as でファイルを保存。 FLASHで作っても良いし、テキストエディタでも何で作っても良い。 保存場所は、設定をいじって無ければ、flaファイルと同階層。 後は、元ソースの使用方法通りで。 ただ、コレがわからないと言う事は、FLASHがあまり分かってないと思うので、 ローディングが出来ても、先に進めないと思う・・・ ちなみに、このクラスはローディングの判定はしてないよ。 アイコンがクルクル回るだけw
なにが知りたいの？？？？
>>フォルダ名"flash"にswfとAC_RunActiveContent.jsを入れていますが、 だとすると、jsの場所の指定が間違っている可能性があります。 <script src="AC_RunActiveContent.js" type="text/javascript"></script> ↓ <script src="./flash/AC_RunActiveContent.js" type="text/javascript"></script>
接触するまでは別々に 接触してからは一つのシェイプとしてトゥイーンすると それっぽくなります、作業手順とか工夫しないと ちょっと動きがぎこちないですがそこは技術 グループとかシンボルはシェイプトゥイーン できないのは言われてる通り
ちょっと探してみましたが、この辺りはどうですか。 Adobe Flash 用 Adobe ActionScript http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … ActionScript 言語とシンタックス：関数 http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … Adobe Flash 用 Adobe ActionScript（pdf版） http://help.adobe.com/ja_JP/ActionScript/3.0_Pro … ActionScript言語リファレンス http://www.adobe.com/jp/devnet/actionscript/refe … 上記のページは「ActionScriptテクノロジセンター」の「ACTIONSCRIPT 3.0のプログラミング」からたどりました。 ActionScriptテクノロジセンター http://www.adobe.com/jp/devnet/actionscript/ 参考URL：http://help.adobe.com/ja_JP/ActionScript/3.0_Pro …
10フレーム目のmc名を「flashmo_page_10」の変更 としか言えないですよ＾＾； 1フレーム目からmcをコピペしてきてるなら、そのmcの名前を 「flashmo_page_10」にするしか。。。
trace("子クラス, ", str, inNum); を super(inNum); に書き換えたら、出ることはでますね。 「親クラス, 親クラスのプロパティ 200」とでますが^^; 参考になりますか？
こちらの環境ではうまく動いています。 移動させた以外の事はしていませんか？
アプリケーションフォルダの ja_JP/configuration/Templatesに テンプレートファイルはいるようです ここにあるflaファイルと 日本語表示名を定義しているname.xmlから 対応するテンプレートの表示名定義を 削除してやればいけるんじゃないかと思います
＃１ です。 > 数時間たつとまた最初から見れるようにしたいと思っており、 > 試行錯誤しているところです。 試行錯誤することが一番良いと思います。 以下は 「ちなみに(大きなお世話)」 の参考まで。 ＃１で書いたスクリプトをベースにする場合 私だと次のように変更すると思います。↓ <フレーム1に書く例> ------------------------- //このタイムラインの再生を停止 this.stop(); //時間内に訪問したユーザーに見せる途中フレームを設定 var show_frm:uint = 31; //最初から見れるようになる経過時間を設定(ミリ秒) // ↓１分の場合例 var passed_ms:uint = 1 * 60 * 1000; // （↓３日の場合例） //var passed_ms:uint = 3*24*60*60*1000; //今現在の時刻オブジェクトを作成 var now_date:Date = new Date(); //1971年1月1日からの経過時間(ミリ秒)を取得 var now_time:uint = now_date.getTime(); //(試しに現在の絶対時刻を出力) trace("1971年から今現在まで→" + now_time + "ミリ秒"); //SharedObject「visitTime」を参照する変数「my_so」を作成 var my_so:SharedObject = SharedObject.getLocal("visitTime"); //(試しにmy_so.data.numを出力) trace("1971年から前回閲覧まで→" + my_so.data.num + "ミリ秒"); //「visitTime」の「num」からの経過時間がpassed_ms未満であれば if (now_time - my_so.data.num < passed_ms) { //関数「waitLoaded」を毎フレーム時間実行するリスナーを登録 this.addEventListener(Event.ENTER_FRAME,waitLoaded); //それ以外は } else { //このタイムラインの再生を開始 this.play(); } //「visitTime」の変数「num」にnow_timeの値を代入 my_so.data.num = now_time; //関数「waitLoaded」を定義 (↓簡易例) function waitLoaded(e:Event):void { //このタイムラインのロードが設定したフレームに達すれば if (this.framesLoaded >= show_frm) { //設定した途中フレームから再生開始 this.gotoAndPlay(show_frm); //関数「waitLoaded」を毎フレーム時間実行するリスナーを削除 this.removeEventListener(Event.ENTER_FRAME,waitLoaded); } } ------------------------- 上記スクリプト中の //「visitTime」の「num」からの経過時間がpassed_ms未満であれば if (now_time - my_so.data.num < passed_ms) { の部分については 【下の図↓】をご参考に。 ちなみに＃１の回答を見た時点で気付かれたかもしれませんが SharedObject は ActionScript 2.0 も 3.0 も大差ありません。 ほぼ同じように使えば良いのです。 ここで使ったDateクラスも ActionScript 2.0 と 3.0 とで大差はなくほぼ同じです。 それ以外のロード待ちの部分などで ActionScript 2.0 と 3.0 にかなり違いが出てきます。 時間経過を棒グラフでイメージした図↓
> .htmlファイルはなんの為にあるのでしょうか？？ これと言って「○○の為」 という 存在理由 はありません。 　.swf ファイルを htmlに貼り付ける場合 　例えばこのようにすれば良いですよ。 という一例を示しているだけです。 日常生活に喩えれば 　　スーパーマーケットに行ったときに 　　ピーマン売り場の前にチンジャオロースのレシピがある とか 　　サッポロ一番塩ラーメンの袋に 　　「盛りつけ例の写真」が貼ってある とか その程度のものです。 その レシピ 通りに ピーマン で チンジャオロース を作っても良いですし それを作らずに ピーマン の天ぷらを作っても良いです。 その 「盛りつけ例の写真」 通りに サッポロ一番塩ラーメンを盛りつけても良いですし， そのようなことをせずに 鍋のシメとして麺をぶち込んでも良いです。
＃２ です。 ＃１では テキストフィールド を ダイナミックテキスト にしたり テキスト入力 に戻したりとごちゃごちゃしてますが， これは onEnterFrame を使って 1フレーム時間 (1/12 秒 など) 実行を遅らせると こういう ごちゃごちゃ はしなくて済むようです。 ヘルプに onEnterFrame を使う方法が書いてありました。 > マウスによるカーソル移動も無効にすることができますか？ それも合わせて考えた（考え直した）スクリプトを以下に書きます↓。 ============================================ //対象テキストフィールドを設定 var target:TextField = my_txt; //onEnterFrame を設定するためのムービークリップを作成 this.createEmptyMovieClip("OEF_mc", this.getNextHighestDepth()); //カーソルを最後に固定する関数を定義 function setCursorEnd():Void { //対象テキストフィールドにフォーカスがあるときのみ実行 if (Selection.getFocus() == String(target)) { //実行を１フレーム時間後にずらす OEF_mc.onEnterFrame = function() { //対象テキストフィールドの文字数を取得 var endIndex = target.text.length; //フォーカスのあるテキストフィールドの最後を選択 Selection.setSelection(endIndex, endIndex); //この OEF_mc.onEnterFrame を削除 delete OEF_mc.onEnterFrame; }; } } //--- //キー監視用にするオブジェクトを作成 var keyObj:Object = new Object(); //キーが押されたとき と 放されたとき に実行する関数を定義 keyObj.onKeyDown = keyObj.onKeyUp=function ():Void { //キーが「←」または「↑」のときのみに実行 if (Key.getCode() == Key.LEFT || Key.getCode() == Key.UP) { //定義した関数setCursorEndを実行 setCursorEnd(); } }; //Keyクラスの監視役にkeyObjを登録 Key.addListener(keyObj); //--- //マウス監視用にするオブジェクトを作成 var mouseObj:Object = new Object(); //マウスが押されたときに実行 mouseObj.onMouseDown = mouseObj.onMouseUp=function () { //定義した関数setCursorEndを実行 setCursorEnd(); }; //Mouseクラスの監視役にmouseObjを登録 Mouse.addListener(mouseObj); ============================================ onEnterFrame を _root や 他の ムービークリップ に設定できれば this.createEmptyMovieClip("OEF_mc", this.getNextHighestDepth()); は特に要りません。 OEF_mc.onEnterFrame = … 　↓↓ _root.onEnterFrame = … のように変更すれば済みます。 　
> 同じボタンで一回目は停止、二回目に実行という書き方 「フラグとなる変数(または数値カウント用の変数)」 を用意して <Enter> を押す度にその変数の値を変えると同時に その変数の値によって動作を切り替えれば良いと思います。 日常生活に喩えると 　居酒屋にのれんを準備 　店先にのれんが出てる 　　　→営業中(店に入ろう) 　店先にのれんが出ていない 　　　→準備中(家に帰ろう) みたいな感じです。 ===具体例============ メインの階層のフレーム1に 10枚の画像を入れた内部が10フレームの「pic_mc」というインスタンス名を付けたスプライトと ボタンを用意したとします（【下の図↓】 参照のこと）。 そのメイン階層のフレーム1に書くスクリプト例↓ ----------------- //この階層の再生を停止 stop(); //変数 flg の値を false にしておく flg = false; ----------------- そのメイン階層のフレーム1に置いたボタン書くスクリプト例↓ ----------------- on(keyPress "<Enter>") { //もし変数 flg の値が false であれば if(!flg){ //「pic_mc」の再生を停止 pic_mc.stop(); //変数 flgの値を true にする flg = true; //それ以外 (変数 flg が true) であれば }else{ //この階層をフレーム3から再生 gotoAndPlay(3); //変数 flgの値を false にする flg = false; } } ----------------- 基礎的な説明として... true や false をブール値(Boolean) と言います。 真or偽 のように表裏しかない値です。 if(○○){△△} は if文 ですが この if(○○){△△} は ○○ の部分が true[真] であれば △△ を実行せよ という文です。 「!」 は論理否定(NOT)演算子 です。 したがって上記スクリプトにある if(!flg){△△}　の場合は 「flg の値が true でなければ △△ を実行せよ」 という意味になります。 　 　 　 　 > その画像に絡めた機能を呼び起こしたい それは状況によるので具体案は書けません。 上の場合だと 「変数 flg の値が true であって pic_mc 内のフレームが 1 のとき…」 みたいな感じでできるかも(できないかも)しれません。 　…略… //それ以外 (変数 flg が true) であって }else{ //もしpic_mc内のフレームが1であれば if(pic_mc._currentframe == 1){ //この階層をフレーム3から再生 gotoAndPlay(3); //もしpic_mc内のフレームが2であれば }else if(pic_mc._currentframe == 2){ //この階層をフレーム13から再生 gotoAndPlay(13); //もしpic_mc内のフレームが3であれば }else if(pic_mc._currentframe == 3){ //この階層をフレーム22から再生 gotoAndPlay(22); 　…略… 上記の最初のスクリプトを動作検証するために試作したPFLの イベントリスト と スクリプトエディタ の様子↓
容量については、動画の長さにもよると思います。 ただ、参考サイトの構造は FLASH：全画面対応 動画：800*600(？)の動画をFLASHで引き伸ばして、全画面で表示＋画面全体にツブツブを配置して、引き伸ばしの粗を誤魔化し って感じだと思います。 1920pxの動画なんてDLさせたら誰もこなくなりますよ。
HDD自体の容量は変化しないと思います。 フォーマット形式が変われば、OSで認識する容量は変化すると思います。
ActionScript 記述の問題ではなくしくみの問題だと思います。 スクリプトはそのままで良いと言えばそのままで良いですよ。 ただ hito.gotoAndPlay("walk"); ではなく hito.gotoAndStop("walk"); の方が良いとは思います(と言ってもこれも一案です)。 Flash の話ではなく PCやOSとキーボードの仕様の話ですが 例えば「→」キーを押したとします。 「→」キーを チョン と１回押した場合 『「→」が押された』 という信号が起動中のアプリケーションなどに伝えられます。 ところが 「→」キーを押し続けると 『「→」が押された』　『〃』　『〃』　『〃』 … と パルス波 でアプリケーションなどに伝えられます。 （そういう仕様のPCが多いです。それも不規則です。) そうなると hito.gotoAndPlay("walk"); の場合 『「→」が押されました』 がパルスでやって来る度に 「walk」 フレーム に戻って再生開始されてしまいます。 つまり 「walk」フレームで止まる か 頻繁に戻ってギクシャク します。 そうなるならいっそのこと hito.gotoAndStop("walk"); で 「walk」 フレームでキッチリ止めておいて その 「walk」 フレーム に 「人が腕や脚などを動かすアニメ」 入りのムービークリップを置いた方が良いということです。 例えば 【下の図↓】 のように hito 内のタイムラインを作ったとします。 その場合のスクリプト例↓ ------------------ //hito内タイムラインの再生を停止 hito.stop(); //キーダウンしたとき stage.addEventListener(KeyboardEvent.KEY_DOWN, handleKeyDown); //キーダウンしたときに実行する関数を定義 function handleKeyDown(e:KeyboardEvent):void { if (e.keyCode == Keyboard.RIGHT) { //hito内タイムラインをR_walkフレームで停止 hito.gotoAndStop("R_walk"); //hito内の変数 move_x を 3 にする hito.move_x = 3; //毎フレーム実行 hito.addEventListener(Event.ENTER_FRAME, hitoMove); } else if (e.keyCode == Keyboard.LEFT) { hito.gotoAndStop("L_walk"); hito.move_x = -3; hito.addEventListener(Event.ENTER_FRAME, hitoMove); } } //hitoを移動させる関数を定義 function hitoMove(e:Event):void { //hito内の変数 move_x ずつ移動 e.target.x += e.target.move_x; } //キーアップしたとき stage.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp); //キーアップしたときに実行する関数を定義 function handleKeyUp(e:KeyboardEvent):void { hito.gotoAndStop("No_walk"); hito.removeEventListener(Event.ENTER_FRAME, hitoMove); } ------------------ ※スクリプトは若干変更してますが 　 それはどうでも良いことです。 　 本題はスクリプトではなく 　 「どのようなしくみを作ってどう動かすか」 　 の部分です。 説明のためのイメージ図↓
こんばんは。 ＞その際、PHP側でsqlの取得結果をループさせて、 ＞間にスペースで区切る、と認識してますが ＞正しいですか？ 区切り文字は何でもいいですが、JSON形式の方が楽だと思います。 それ以外なら、AS側でゴリゴリやらないといけないので・・・。 ちなみに「as3corelib」を使います。 区切り形式は、そちらを見てもらえればすぐにわかると思います。 key:valueや、key:[{name1:value1,name2:value2}]などは使う側に依存するので、使いやすい方でやってみてください。
こんにちは。 ＞Flashをデータ毎「保存」 というのは、よくわかりません・・・。 普通はテキストファイルに書き出したり、SharedObject（クライアント側のクッキーなど）で保持すると思いますが。
> FLASHの表現方法(Actionscript)についての質問 Actionscript と書かれていますが 「作成が手間」 とか 「動的な使い回がしにくい」 などの理由を除けば 動き自体は ActionScript ではなくて カスタムイージング を使った モーショントゥイーン で作成できますよね。 というか... あくまでも動き方のみを見た場合 モーショントゥイーン そのものっぽく見えます。 ※もし以上で書いている内容がわからない場合は 　 「カスタムイージング モーショントゥイーン」などと 　 Google で検索してみてください。 　 ヒットするページ例↓ http://openflash.org/jp/designcenter/dialogbox/a … ですから 何らかの理由があって ActionScript で動かす場合も Tween クラス系のアクションを利用すれば良いと思います。 ===以下は具体的な作成方法です=== ステージ上に適当な大きさの ● でも描きます。 その ● をムービークリップに変換しますが そのときに "基準点" を "中央" にして変換します。 その ムービークリップ● に 例えば 「circle_mc」 というインスタンス名を付けます。 (シンボル名 ではなく インスタンス名) その「circle_mc」が登場するフレームに記入(コピペ)↓ ------------ //Tweenクラスとeasingクラスのインポート import mx.transitions.Tween; import mx.transitions.easing.*; //最初だけcircle_mcを小さくしておく circle_mc._xscale = 20; circle_mc._yscale = 20; //関数 setTween を定義(引数:対象MC,拡大秒数) function setTween(target:MovieClip, sec:Number) { //対象MCに対する横方向拡大のTweenを作成 var t_xscale1 = new Tween(target, "_xscale", Regular.easeIn, target._xscale, 125, sec, true); //対象MCに対する縦方向拡大のTweenを作成 var t_yscale1 = new Tween(target, "_yscale", Regular.easeIn, target._yscale, 125, sec, true); // //拡大Tween終了時のイベントハンドラメソッドを定義 t_xscale1.onMotionFinished = function() { //対象MCに対する横方向縮小のTweenを作成 var t_xscale2 = new Tween(target, "_xscale", Elastic.easeOut, target._xscale, 100, 1.5, true); //対象MCに対する縦方向縮小のTweenを作成 var t_yscale2 = new Tween(target, "_yscale", Elastic.easeOut, target._yscale, 100, 1.5, true); }; } //関数setTweenを実行(引数:対象MC,拡大秒数) setTween(circle_mc, 0.4); //setTweenを4000ミリ秒間隔で実行 引数:対象MC,拡大秒数 var id:Number = setInterval(setTween, 4000, circle_mc, 0.15); ------------ ※Flash MX 2004 以降(Flash 8 も含む)で使用可 　 Flash Player 6 以上パブリッシュで閲覧可 　 ActionScript 2.0 考え方は次のようなイメージになっています↓
ActionScript 2.0 以下ではないのですから 「ムービークリップ(または root) にロードする」 という考え方自体を変えないとだめです。 「ムービークリップ(または root) にロードする」 のではなくて 「Loaderにロードして そのLoaderをムービークリップ(または root) に addChild する」 のです。
#1です うお、これはすごい！　２つめの書式、 bot1.onPress = function(){ getURL("../estate/e_list.html","" ,"get");} とやったら、本当に内部のプロパティやら関数やらが勝手にURLに付加されますね～ なんという仕様（笑 考えてみたらAS2のMovieClipって、変数も関数も全部プロパティなんだから、そう考えると自然？な動作なのかもしれません。 送信されても対向側で評価しなければいいわけですけど。。すごく気持ち悪い。 こちらが勉強になりました。thanks
ベストな回答にはならないかも知れませんがお応えします。 このサイトで使われている効果はマスクでは無いと思います。 上からモーショントゥイーン・シェイプトゥイーンや ASで作ったアニメーションを重ねているだけだと思います。 また、動きについての解答ですが John12345さんはこのサイトのアニメーションの動きが 何を表しているか意識されましたか？ フラッシュでモーションを作る際は、 実物を見るのがとても参考になるんです。 また何を盛り込むのかはデザインの一部なので これさえ知ってればOKはない気がします。 ちなみにぱらぱらアニメーションの作り方ならF-siteがおすすめです。 なんだか頭でっかちに動きを頑張って再現する以上のテクニックが乗ってます。 でも察するところ、やはり本物の動きをどう簡略化するかがポイントのようですね。 http://f-site.org/ 奥が深くて気が遠くなりますね。 頑張ってください！
＃２ です。 > その１）合計10フレームあります。 何が 10フレーム あるのかわかりませんが。 わからないのでアドレス帳.mc とかいう ムービークリップ 内が 10フレーム あるということにします。 ◎ムービーの構造 　_root 　　├address_mc(内部が 10フレーム のMC) 　　│　├name_txt1(ダイナミックテキスト) 　　│　├name_txt2(　〃　) 　　│　├name_txt3(　〃　) 　　│　├name_txt4(　〃　) 　　│　└name_txt5(　〃　) 　　├back_btn(address_mcを前フレームに戻すボタン) 　　├next_btn(address_mcを次フレームに進めるボタン) 　　├window_txt(ダイナミックテキスト) 　　└ok_btn(window_txt に名前を入力するボタン) ◎ address_mc内 　フレーム1 　　name_txt1←たろう 　　name_txt2←みつこ 　　name_txt3←はなこ 　　name_txt4←よしお 　　name_txt5←ただし 　フレーム2 　　name_txt1←じろう 　　name_txt2←ふみえ 　　name_txt3←ようこ 　　name_txt4←しずか 　　name_txt5←のびた _root の フレーム1 に書くスクリプト例↓。 --------------------------------- //選択した名前を入れる変数を用意 var select_name = ""; //表示用の「window_txt」も空白にしておく window_txt.text = ""; //「address_mc」内の再生を停止 address_mc.stop(); //関数 setNameText の定義 function setNameText() { //「address_mc」内の「name_txt1～5」に関してのループ for (i = 1; i <= 5; i++) { //「name_txt1～5」を選択可にする address_mc["name_txt" + i].selectable = true; //「name_txt1～5」を選択したときに実行 address_mc["name_txt" + i].onSetFocus = function() { //選択した名前を入れる変数に各名前を代入 select_name = this.text; }; } } //関数 setNameText を実行 setNameText(); //ボタン「ok_btn」をクリックしたときに実行 ok_btn.onRelease = function() { //もし select_name が空白でなければ if (select_name != "") { //選択した名前を「window_txt」に加算表示 window_txt.text += select_name + "\n"; } }; //ボタン「back_btn」をクリックしたときに実行 back_btn.onRelease = function() { //「address_mc」内を前のフレームへ戻して停止 address_mc.prevFrame(); //関数 setNameText を実行 setNameText(); }; //ボタン「next_btn」をクリックしたときに実行 next_btn.onRelease = function() { //「address_mc」内を次のフレームへ戻して停止 address_mc.nextFrame(); //関数 setNameText を実行 setNameText(); }; --------------------------------- 　
http://okwave.jp/qa/q6061330.html だから、無断転載はダメです。 元のソースに書いてありますよ。 わかります？ 改変しようと考えても、ソースを貼付けた時点で「無断転載」です。 一応、OKWaveへ通報させて頂きました。 ・無断転載の件 ・「うざい」の発言　こちらは誹謗中傷にあたります。
リンク先に↓が書いてありますよ。 -------------------------------------------------- ■使用許諾契約事項 【禁止事項】 当fla ファイル・アクションスクリプトの二次配布・無断転載は禁止しております。 当fla ファイル・アクションスクリプトの改変後の商用・非商用利用は自由に行って下さい。但し、改変後のファイルの二次配布・無断転載は禁止しております。 -------------------------------------------------- 「無断転載」に当たりませんか？ ご自身でas3.0に頑張って書き換えて、わからない所をピンポイントで 質問するようにしましょう。
＃１せす。 > 焦点を洗いなおすと、ロスレスの外部画像を読み込む時に > getBytesTotalを使うということです。 > この条件で回避策はないんでしょうか。 難しく考えず，単純に， 画像ロード完了時に ターゲットMC（ロード用のダミーMC）のバイト数を取得すれば良いだけかと思いますが。 具体的には 　// ターゲットMC（ロード用のダミーMC）は要らないので削除 　Target.removeMovieClip(); これをする前（これより前の行に記入）です。 これをしてしまうと削除されてしまうのでダメです。
初心者で１番簡単な方法はアルファが１００％のときにタイムラインを長くすればいいんじゃないですか？
こんにちは 結論から言うと、引数が参照渡しではないのでpast1,now1,now2に変更後の値が反映されません。 ActionScriptではプリミティブデータ型は値渡しになるので、 渡した後の変更が元の変数に反映されません。 関数内で操作したデータは戻り値によって返したほうがいいのではないでしょうか？ ActionScriptには連想配列があるので、それを利用すれば複数のデータをまとめて返すことも簡単ですね。 引数を参照渡しで渡して、内部で変更をかけるよりも。 関数の戻り値を受け取り、それを操作したほうがわかりやすいかと思います。 プリミティブデータ型がなんだとか、値渡し？参照渡し？などといった部分の説明は省きます。 ご自身で調べてみてください。 がんばってください
プログラミングは雰囲気やイメージだけではダメで 「具体的に何をするか」によって考え方が変わることがあります。 結局 「数字を判別する」のではなく 文字列中の「数字の個数をカウントする」のですよね？ また > [今年は２０１０年７月… に含まれている数字モドキは 『数字』ではなく「一」や「壱」と同じ『全角文字』です。 具体的にはそういう数字ではない文字も数字として扱う必要があるということですよね？ とにかく雰囲気やイメージだけではなく「具体的」が大切です。 それによって手段は変わります。 次のスクリプトを フレーム1 にコピペして 「制御」→「ムービープレビュー」で動作検証できると思います。 --------------- //数字をカウントする文字列を設定 var my_str:String = "今年は２０１０年７月２１日です"; //「数字とはどれか」を配列に登録 var num_arr:Array = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "０", "１", "２", "３", "４", "５", "６", "７", "８", "９"]; //数字をカウントする変数cntの初期化 var cnt:Number = 0; //～ちょと検証(本当は不要)～ trace("my_strの文字数…" + my_str.length); trace("num_arrの要素数…" + num_arr.length); //my_str １文字１文字に関してのループ for (var i:Number = 0; i < my_str.length; i++) { //num_arr の各要素に関してのループ for (var j:Number = 0; j < num_arr.length; j++) { //もしmy_strのi番文字がnum_arrのj番要素と一致していれば if (my_str.substr(i, 1) == num_arr[j]) { //～ちょと検証(本当は不要)～ trace(my_str.substr(i, 1)); //数字をカウントする変数cntに1を加算 cnt++; } } } //★カウントした数字の数を表示 trace("★数字の数…" + cnt); --------------- わかると思いますが 「一 二 …」 や 「壱 弐 …」 や 「(1) (2)(機種依存文字)…」 も 『数字』 とするのでしたら それらの文字も 配列num_arr に追加する必要があります。 === 補足 ============= 純粋に 0,1,2,… のような数字だけをカウントするのでしたら 配列は要りません↓ --------------- //数字をカウントする文字列を設定 var my_str:String = "今年は2010年7月21日です"; //数字をカウントする変数cntの初期化 var cnt:Number = 0; //my_str １文字１文字に関してのループ for (var i:Number = 0; i < my_str.length; i++) { //もしmy_strのi番文字が数字であれば if (!isNaN(my_str.substr(i, 1))) { //～ちょと検証(本当は不要)～ trace(Number(my_str.substr(i, 1))); //数字をカウントする変数cntに1を加算 cnt++; } } //★カウントした数字の数を表示 trace("★数字の数…" + cnt); --------------- ActionScript 2.0 要：Flash MX 2004 以上 　
"unload"という意味がいまいち不明なのですが、外部からswfを読込したMovieClip変数をdeleteしたり、null突っ込んで消し去ることが目的ならば、Flashのようなマネージド環境では不要かと。そのMovieClipが不要になれば自動でメモリから排除されますよ。 あと、「必ず特定の処理を行ってフレームから出る」というのもわかりません。 そもそも、そのフレームに入った時点で、フレームのアクションは実行され、stop();でフレーム遷移が停止しているだけだと。。 「フレームに入った瞬時に、外部のボタンとかのイベントを受けてそのフレームから飛出すとき、フレームの残りを確実に実行させたい」というのであれば、ボタンイベント側にスクリプトを書く必要があります。 ただそういう場合って、前フレームに大きいswfを外部読込しつつ、ボタン押下の飛び先で間髪をいれずまた外部読込する、というようなケースだと思いますが、読込swfが配置されていないフレームを中間にカマして、いったんメモリから排除してしまうほうが良い実装なのかなあと思ったりもします。
> ロード時にはメインのタイムラインが > すべて再生されてしまいます。 > これについての対処法はあるのでしょうか？ 「対処法は」と訊かれましても そんなことにはならないので よくわかりませんが。 スタンドアローンの Flash Player (SWF再生ソフト)と， ブラウザの Flash Player (Flash Player プラグイン)とは全く別物ですが， 「大工の掘っ立て」というか，「紺屋の白袴」というか， とにかく その ブラウザの Flash Player (プラグイン)が古い（例：Flash Player 8以下）ということはないでしょうか？ ActionScript 2.0 以下と ActionScript 3.0 で共通の stop(); を使うと言っても ActionScript 2.0 以下と ActionScript 3.0 以上とでは Flash Player の内部処理が違います。 （＝機械語としては別の言葉に変換されてコンパイルされる。） 例えば ActionScript 3.0 設定でパブリッシュされた stop(); は Flash Player 8 や 7 では動作しませんよ。 ブラウザ は何を使われているのか知りませんが ブラウザによってインストールすべき Flash Player も違う場合があります。 Mac 用 と Windows 用 では当然違います。 Windows用でも IE用 と 非IE用 は違います。 ご使用のブラウザで Flash Player のバージョンチェック や Flash Player のダウンロードをしてみてください。 「Adobe - サポート - Adobe Flash Player のバージョンテスト」 http://www.adobe.com/jp/support/flashplayer/ts/d … 「Adobe - Adobe Flash Player」 http://get.adobe.com/jp/flashplayer/ ※↑ご使用のブラウザでアクセスする必要があります。
ご免抜けてた。追加 #swfue { position:relative; z-index: 10; } 確認してみて http://www.geocities.jp/n_a_o11/a.html
change イベントは基本的に選択するたびに発生するので、１回限りということはないはずですが。 「選択１回分」とはもしや「１項目しか選択できない」という意味で、つまり、２項目以上を同時に選択できるようにして、選択された項目のラベルを全てテキストフィールドに表示したい、とのことでしょうか？ この場合は、選択された項目を取得するために見るプロパティが変わります。 スクリプトの一例です。 ステージに List のコンポーネント（インスタンス名： listboxA ）と、”複数行表示可能な”ダイナミックテキストのテキストフィールド（インスタンス名： statusMessage ）があるとします。 このスクリプトは、メインのタイムラインのフレームに記述してください。 なお、字数の都合上、型の明示は省略させていただきました。 （↓各行頭に全角のスペースが入っています。コピーする際はご注意ください） //＊ ＊ ＊ 　//仮の表示データ 　Shopping_array = new Array(); 　Shopping_array = 　[ 　　{ label : "ばなな" , data : "1" } , 　　{ label : "りんご" , data : "2" } , 　　{ label : "さくらんぼ" , data : "3" } , 　　{ label : "みかん" , data : "4" } , 　　{ label : "もも" , data : "5" } 　]; 　//管理用の番号を追加（※不要なら削除してください） 　for( i = 0 ; i < Shopping_array.length ; i++ ) 　{ 　　Shopping_array[ i ].index_num = i; 　} 　//データをListに表示 　listboxA.dataProvider = Shopping_array; 　//複数選択を可能にする 　listboxA.multipleSelection = true; 　//選択時の処理 　myListBoxListener = new Object (); 　myListBoxListener.change = function ( eventObj ) 　{ 　　var i; 　　var item_list , temp; 　　//選択されている項目のリストを取得 　　item_list = eventObj.target.selectedItems; 　　//管理番号の順（＝List内の順番）に並び替え 　　temp = item_list.sortOn( "index_num" , Array.NUMERIC | Array.RETURNINDEXEDARRAY ); 　　//選択されている項目名を全てテキストフィールドに表示 　　statusMessage.text = ""; 　　for( i = 0 ; i < item_list.length ; i++ ) 　　{ 　　　statusMessage.text += item_list[ temp[ i ] ].label + "\n"; 　　} 　}; 　listboxA.addEventListener ( "change" , myListBoxListener ); //＊ ＊ ＊ 複数の項目を選択するには、Ctrl キーを押しながら選択します。Ctrl キーを押しながら選択済みの項目を選択すると、選択が解除されます。 Shift キーを押しながら選択すると、選択されている項目から指定の項目までがまとめて選択されます。 複数選択が可能な場合は、選択された項目は selectedItems というプロパティを見て取得します。 これの正体は配列変数で、選択された順番通りに選択された項目が入ります。例えば上記の例で、List 内では”もも”は”ばなな”より下に表示されますが、”もも”を先に選ぶと、selectedItems には”もも”の方が先に登録されます。 上記の例では表示するデータに管理用の番号（ index_num ）を追加し、テキストフィールドに表示する前にこの番号の若い順に並べ替えることで、選択順番に関係なく、List に表示されている順に従って表示するようにしています。 選択された順番通りに表示したい場合は、番号の追加と並び替えの処理を削除し、テキストフィールドに表示する部分を 　statusMessage.text += item_list[ i ].label + "\n"; に変更してください。
updateAfterEvent() は 関数で言うなら そもそも ActionScript 2.0 以下の関数ですし また 「イベントが起こったときに表示を即更新させよ！」 という関数ですから 意味が全く違う(逆だ)と思います。 例えば Flash のフレームレートを 12fps に設定していたとします。 この場合 12分の1秒 に 1回 表示の更新が行われるのです。 例えば 「マウスが動いたときにムービークリップを同じ位置に移動」 させるとします。 12分の1秒 に 1回 表示の更新が行われると マウスの動きに合わせてスムーズにシャキッとムービークリップが動くのではなく 12分の1秒 に 1回 ムービークリップ がカクカクとなんとなくもったりと遅く動くのです。 そういうときに updateAfterEvent() 関数（ActionScript 3.0 では event.updateAfterEvent() メソッド）を使うのです。 つまり フレームレート ごと以外に表示を強制更新させるときに使います。 一般的には 表示を強制更新 する方が反応が早くなります。 > 点を１つずつ表示できるでしょうか？ つまり反応を遅くさせるべきなのですから 単純に言えば逆です。 点を１つずつ表示させるのでしたら Timerクラス を使うと良いと思います。 http://www.google.co.jp/search?hl=ja&source=hp&q …
FlashをHTMLに貼り付けるやり方はいくつかありますが、貴方がやられたのは、「SWFobject」というJavaScriptライブラリを使った貼り付けです。 Dreamweaver CS4あどでFlashをhtmlに貼り付けると、この方式になります。 で、問題は、このJavaScriptがうまく働いていないことです。 おそらくSWFObject.jsとかが読み込まれていません。 ディレクトリ中にJavaScriptライブラリが含まれているか確認してください。
＃１、２です。 ＃１のスクリプトに誤りがありました。 function Game_Judge 内の 　> for( j = i ; ( j < row ) && ( judge == 1 ) ; j++ ) は、正しくは 　for( j = 0 ; ( j < row ) && ( judge == 1 ) ; j++ ) （ ↑　j の初期値は、i ではなく 0 ） でした。 失礼いたしました。 この場をお借りしまして、訂正させていただきます。 それから、＃２で正誤判定の話が分かりにくくなってしまったのですが。 要するに、配列変数で持っている絵のデータと、対応するマスの状態（＝フレームの番号）を照合し、正解であれば変数 judge に 1 が、誤りであれば 0 が入ります。そういう、おまじないの式だと思ってくださっても構いません。 ビット演算につきましては、興味がありましたら解説サイトなどで調べてみてください。いろいろなことに使える、便利な演算です。
>全くできないので教えてください。 なにを？
＃１です。 間違えました。 「gotoAndStop」です。
作成できますよ。 この場合でしたらXMLと同じ構造でFLASHも作ればわかりやすいと思います。 shops(shopsMC) ├shop1(shopMC) │├photo(photoMC) │├txt1(txt1MC) │├txt2(txt2MC) │├txt3(txt3MC) ├shop2(shopMC) │├photo(photoMCMC) │├txt1(txt1MC) etc... ・shopsMC XMLを貰いそのshop要素分shopMCをつくる。 shopMCを一つ設置したら、次のshopMCをその下に設置 ・shopMC もらったXMLでphotoMC、txt1MC、txt2MC、txt3MCを作成 ・photoMC、txt1MC、txt2MC、txt3M ロードしたり、描いたり 最後(全部描き終わったら)にスクロールバーを設置 ザクっというとこんな感じですかね。
> a_mcが再生された1秒後にb_mcを作動させ > b_mcが再生された0.5秒後にc_mcを再生 「再生」とは何のことかわかりませんが...。 スクリプトを見る限り「再生」というものは絡んでなくて ムービークリップ自体の座標移動と回転と不透明度変化に見えます。 ムービークリップの再生は関係ないのですよね？ 次のような感じでできると思います。 ----------------------------- //各MCの初期設定 a_mc.y = 450; b_mc.y = 450; c_mc.y = 450; a_mc.alpha = 0; //関数a_up の定義 function a_up(event:Event):void { a_mc.y -= 2; a_mc.x-=1; a_mc.alpha+=0.03; if (a_mc.y==200) { a_mc.removeEventListener(Event.ENTER_FRAME, a_up); } } //関数b_up の定義 function b_up(event:Event):void { b_mc.y-=2; b_mc.rotation+=6; if (b_mc.y==200) { b_mc.removeEventListener(Event.ENTER_FRAME, b_up); } } //関数c_up の定義 function c_up(event:Event):void { c_mc.y-=2; c_mc.x+=1; if (c_mc.y==200) { c_mc.removeEventListener(Event.ENTER_FRAME, c_up); } } //a_mcにイベントリスナーを登録(毎フレーム,関数a_upを実行) a_mc.addEventListener(Event.ENTER_FRAME, a_up); //関数cStart の定義 function cStart(evt:TimerEvent):void { //c_mcにイベントリスナーを登録(毎フレーム,関数c_upを実行) c_mc.addEventListener(Event.ENTER_FRAME, c_up); } //Timerクラスのインスタンス「cTimer」を作成 //(500ミリ秒遅延，繰り返し1回) var cTimer:Timer=new Timer(500,1); //指定時間遅延して 関数cStart を実行 cTimer.addEventListener(TimerEvent.TIMER, cStart); //関数bStart の定義 function bStart(evt:TimerEvent):void { //b_mcにイベントリスナーを登録(毎フレーム,関数b_upを実行) b_mc.addEventListener(Event.ENTER_FRAME, b_up); //cTimerスタート cTimer.start(); } //Timerクラスのインスタンス「bTimer」を作成 //(1000ミリ秒遅延，繰り返し1回) var bTimer:Timer=new Timer(1000,1); //指定時間遅延して 関数bStart を実行 bTimer.addEventListener(TimerEvent.TIMER, bStart); //bTimerスタート bTimer.start(); ----------------------------- 　
ＡＳ2.0はまだまだ現役ですね。 ＵＩの組み込みＦｌａｓｈなどは2.0を使っています。 3.0の場合は、かなりＪａｖａよりのオブジェクト指向なので、 Ｊａｖａを参考にしたほうがいいかもしれません。 ＥＣＭＡ4.0の仕様の2.0は、ＪａｖａＳｃｒｉｐｔですが、 こんなことが出来るかなということが出来ますね。笑 なのであまり難しく考えなくても良いと思います。 ただオブジェクト指向の概念的には、クラスにメソッドを内包すべきなので クラス構造をもつ（継承された）オブジェクトに書くことはあながち間違いではないのです。 画面に書いたものをシンボル化した段階でクラス構造を持ちますので、主にフレームに書けますけれど。本来は、クラスファイルを切り出して管理したほうが便利です。拡張子ＡＳのファイルです。ただし、クラス構造である必要があるでしょう。ＣＳ４であればそういうプログラミングは可能です。インスタンスがあれば何でもできたりします。 ナレッジサーブに近くＦｌａｓｈＯＯＰの講座が出来ます。
this を trace アクションで表示してみると分かるのですが、return function の中にある this はスクリプトを書いたタイムライン（例えばメインのタイムラインに書いた場合はメインのタイムライン）を指していません。 このため、新たに作られる関数の中では、this を使うと目的のインスタンスを指すことが難しくなります。 ActionScript 3.0 では、イベントが起きた時に addEventListener で登録しておいた関数が自動的に呼び出されます。 この時、発生したイベントに関する様々な情報を１つにまとめたものが、呼び出される関数に渡される約束になっています。 渡される情報の１つに、イベントが発生した対象（今回の件ではムービークリップ）の参照があります。例えば bot1 でイベントが発生した時は、bot1 を表す情報が含まれています。 渡される情報は、addEventListener で登録する関数の中で使うこともできます。 bot1 にカーソルを合わせた時に自分自身のタイムラインのフレームを移動したいのであれば、この情報を利用すると便利です。 ステージにムービークリップ bot1 ～ bot3 があるとします。 それぞれにカーソルを合わせた時、自分自身のフレームラベル "Over" に移動するスクリプトの一例です。 このスクリプトは、メインのタイムラインのフレームに記述してください。 （↓　各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） //－ － － － － 　function handleRollOver( e:MouseEvent ) 　{ 　　//イベントが発生した対象自身のフレームに移動 　　e.target.gotoAndPlay( "Over" ); 　} 　//イベント処理をまとめて定義 　for( var i:int = 1 ; i <=3 ; i++ ) 　{ 　　this[ "bot" + i ].addEventListener( MouseEvent.MOUSE_OVER , handleRollOver ); 　} //－ － － － － イベントに関する情報はたくさんあるので、１つのオブジェクトにまとめて渡されてきます。 受け取る情報全体を表す部分が、handleRollOver 関数の仮引数である e です。 関数の中で個々の情報を取り出すには、e の中の、知りたい情報を管理している個別の変数の名前を指定します。 イベントが発生した対象の情報は” target ”という名前の変数に入っており、対象がどんな名前でも対応できるようになっています。 関数の中では同じ e.target という記述でも、bot1 でイベントが起きた時は bot1 を、bot2 の場合は bot2 のことを指しますから、ムービークリップがいくつあってもイベント処理関数は１つだけで済みます。
私も同じような場面で困っています。 どうやらAS2.0までの"シーン"フレーム　指定が出来ていた関数「gotoAndStop/Play」と違い AS3.0のＭｏｖｉｅＣｌｉｐメソッドの「gotiAndStop/Play」はシーンまでの設定が出来ないとの事。 解答されていました方の方法で試しましたが、ページの遷移が出来ない模様。 「aa_mc」をラベルで指定するとさらにエラーとなります。 直接指定するのではなく、一度親階層のところにクッションとなるフレームを作成し、 そこへジャンプさせ、そこへ移った時に別の下の階層のｍｃへ移動を指定してやるのが 良いのかなと思っています。 他にピンポイントでフレームを指定してやることが出来る方ご意見を投稿お願いします。
さっきFlash CS4（AS2）で動かしてみましたけど、ちゃんと動きますよ？ 要点は、フレームであなく、ボタンインスタンスに書くことです。 （そういう種類のスクリプトなので） ステージ上におかれたボタンインスタンスを選び、右クリック->アクション、です。 ボタンインスタンスのあるフレームではありません。 フレームに小さい「a」が表示されていたら、フレームに書いてます。 フレームに書くならば、 hobe_btn.onRollOver = function() { _root.gotoAndStop("ON") } としないといけませんぜ。
GoogleCodeのFlash Tweenerライブラリは、「列挙したmcをその時点の位置から目的座標にトゥイーンさせる」ものなので、 ・panel02からマウスが出た瞬間、panel02とpanel03を、それぞれx=300.320にトゥイーン （追加されたスクリプトより） ・panel03にマウスが入った瞬間、panel02とpanel03を、それぞれx=10.20にトゥイーン （もともとのスクリプトより） が連続で実行されます。 つまり、いったん右へ行ったものがまた左へ行っています。 追加されたスクリプトは不要ということです。 この例では、Flash領域全面をpanel01～03が占めているので、「すべてのパネルからマウスが離れる」イベントは検知できません。 やるならば、stageオブジェクトのEvent.MOUSE_LEAVEを使わねばいけませんね。 ただしActionScript3です（おっと
具体的な状況(何をしたら何をどうしたいのか)がよくわかりませんが _root(メインのタイムライン)に 「mc1」「mc2」「mc3」というインスタンス名を付けたムービークリップがあったとし， その 「mc1」「mc2」「mc3」 内のタイムラインの動きを キー「1」「2」「3」によって再生させる場合の _root の フレーム に書くスクリプト例↓。 --------------------------- //mc1 の再生を停止 mc1.stop(); //mc1 を非表示にする mc1._visible = false; //フラグとなる変数 flag1 を false にしておく var flag1 = false; //mc2 の再生を停止 mc2.stop(); //mc2 を非表示にする mc2._visible = false; //フラグとなる変数 flag2 を false にしておく var flag2 = false; //mc3 の再生を停止 mc3.stop(); //mc3 を非表示にする mc3._visible = false; //フラグとなる変数 flag3 を false にしておく var flag3 = false; //キーを監視するためのオブジェクトを作成 var keyLsn = new Object(); //何かキーを押したときに実行する関数を定義 keyLsn.onKeyDown = function() { //ムービープレビュー時のキーコード検証用 trace(Key.getCode()); //もしキーコードが 97 で flag1 が false のとき if (Key.getCode() == 97 && !flag1) { //mc1 の再生を開始 mc1.play(); //mc1 を表示する mc1._visible = true; //フラグとなる変数 flag1 を true にする flag1 = true; //もしキーコードが 98 で flag2 が false のとき } else if (Key.getCode() == 98 && !flag2) { //mc2 の再生を開始 mc2.play(); //mc2 を表示する mc2._visible = true; //フラグとなる変数 flag2 を true にする flag2 = true; //もしキーコードが 99 で flag3 が false のとき } else if (Key.getCode() == 99 && !flag3) { //mc3 の再生を開始 mc3.play(); //mc3 を表示する mc3._visible = true; //フラグとなる変数 flag3 を true にする flag3 = true; } }; //KeyクラスのリスナーとしてkeyLsnを登録 Key.addListener(keyLsn); --------------------------- ※ActionScript 1.0 　 Flash MX 以上 で使用可のスクリプト Flash でキーを押したかどうかを取得するには Flash(SWF)にフォーカスが当たっている必要があります。 パブリッシュ で作成したり 「制御」→「ムービープレビュー」で動作させる場合は Flash が表示されている部分を一度クリックしてからキーを押してください。 　
FlashのSharedObjectという機能で、下記にドメインごとにデータファイルが記録されています。 [Windows] C:\Documents and Settings\[ユーザー名]\Application Data\Macromedia\Flash Player\#SharedObjects [Mac] /Users/[ユーザー名]/Library/Preferences/Macromedia/Flash Player
No1の方のおっしゃる通りですね。 頑張ってください。VC6が分かるkgyqk433さんなら楽勝なはずです。 フラッシュの場合、多次元配列はArrayの各番号にまたArrayをnewするだけです。 連想配列の場合はハッシュを使います。 JavascriptのJSONのようなものです。 objectを作りそのプロパティにArrayの時と同じようにobjectをnewするだけです。 参考URLはあえてJavascriptの解説ページです。 http://ja.wikibooks.org/wiki/JavaScript_%E5%A4%9 …
＃１で回答した者です。 おかしいですね。画像が添付されませんでした。 よって 再添付 します。
Flashについて、どのくらい理解をされておられるか…でしょう。 私の経験ですと、フリーソフト２本、市販の安価な作成ソフト１本を、何の知識も無い状態で使おうとしたところ、まったく理解できませんでした。 AdobeのFlash Professional 3を使って基礎からスクリプトの簡単なところまでを学習した後で、それらの「過去に投げ出したソフト」を使ってみると、理解できるし、そこそこ使えるし…という状態でした。 ただし、当然の如く、AdobeのFlashには機能的に絶対に適わないのですけれどね。 参考URL先のようなものでしたら、工夫と勉強次第では ・parafra　（パラフラ） というフリーソフトで再現できそうです（最初のキラキラした所は面倒でしょうけれども…）。 このフリーソフトは、有志の方が超初心者向けに解説サイトを多数制作されておられるので、そういうものを読んで勉強することで理解が進むのでは、とは思います。 Flashが「タイムラインに沿って画像を変化させて動いている」という事が理解できれば、後はそう難しくはないかもしれません。 paraflaのページ http://www.geocities.jp/coa9999/ parafla学習帳 http://parafla776.jog.buttobi.net/ パラフラ小学校 http://occultflash.web.fc2.com/2ch/ AdobeのFlashのようにタイムラインがビジュアルで見られる訳じゃないので、その点は頭の中でイメージをある程度できるようにならないと思うように動かせないかもしれませんが、フリーソフトの中では恐らくはかなり使えるソフトであろうと思います。 ソースネクストから、WebEffectという安価なFlash作成ソフトも出ていますが、それは非常に不親切な作りですから、個人的にはお勧めはしません。 ただし、Flashの基礎が理解できていれば、パラフラよりは使いやすいと感じるかもしれません（タイムラインがビジュアルで見られるので）。
> ボタンにアクションスクリプトをつけたいのですが それが最優先事項であるとするなら パブリッシュ設定 で Flash タブを選択して ActionScript のバージョンを ActionScript 1.0 または ActionScript 2.0 にする必要があります。 一方， ActionScript 3.0 にすることが最優先であるなら ボタンにインスタンス名を付けて そのインスタンス名付きボタンに対してアクションを設定すべきです。 FLASH-JP.COM - フォーラム より 「on(release)がなくなる!?」 http://www.flash-jp.com/modules/newbb/viewtopic. … 「FF071110 - イベントを制する者、ActionScript 3.0を制す - F-siteセミナー」 http://www.fumiononaka.com/Sample/F-site/FF07111 …
navigateToURL でできると思いますよ。 http://www.google.co.jp/search?hl=ja&source=hp&q … http://www.google.co.jp/search?hl=ja&safe=off&q= …
＃１です。 >> せっかく回答いただきましたけど、質問の趣旨にちょっとそれております。 それでしたら質問のカテゴリが違うのかもしれませんね。 Flash の プログラミング なんですから 単純に 「getURL」 または 「navigateToURL」 を使うのが最も簡単な話です。 ひょっとして理解ができていないということですか？ PHP なら PHP，JavaScript なら JavaScript ，HTML なら HTML カテゴリではないでしょうかね。 何をしたくて何かがわからないので私も判断できませんが。
Flash はあまり詳しくないのですが、よくある手法としては、歩くアニメーションを作成しておいて、そのインスタンスを移動させるのが良いのでは？
完全に消すなら、ANo.2さんの removeChild(mc); の後に mc = null とすると良いでしょう。 こうすれば、GCの対象になり、メモリからも削除する事が出来ます。
removeChild(mc); ではだめでしょうか？
＃１です _rootのステージ上にインスタンス名 cursor_mc というMC(ムービークリップ)と sq_mc というMCを配置し sq_mc の中にインスタンス名 corner_btn0，corner_btn1，corner_btn2，corner_btn3，sq_btn というボタンを用意した場合 _root の フレーム に書くスクリプト例↓ -------------- //cursor_mcを非表示 cursor_mc._visible = false; //corner_btnを押したかどうかのフラグを用意 press_flg = false; //sq_mc内のsq_btnを押したとき sq_mc.sq_btn.onPress = function() { //sq_mcをドラッグを開始 sq_mc.startDrag(); }; //sq_mc内のsq_btnを放したとき sq_mc.sq_btn.onRelease = sq_mc.sq_btn.onReleaseOutside = function () { //sq_mcのドラッグを終了 sq_mc.stopDrag(); }; //ボタンに関してのループ for (i = 0; i <= 3; i++) { //sq_mc内のcorner_btn○にロールオーバーしたとき sq_mc["corner_btn" + i].onRollOver = function() { //マウスが動いたときの動作を定義 sq_mc.onMouseMove = function() { //本物マウスを非表示 Mouse.hide(); //cursor_mcを表示 cursor_mc._visible = true; //cursor_mcをマウスの座標に移動 cursor_mc._x = _xmouse; cursor_mc._y = _ymouse; //corner_btnを押したかどうかのフラグがtrueであれば if (press_flg) { //sq_mcの基準点からのマウス座標を取得 rx1 = _xmouse - sq_mc._x; ry1 = _ymouse - sq_mc._y; //sq_mcの回転を計算 sq_mc._rotation = (Math.PI / 2 + Math.atan2(ry1, rx1)) * 180 / Math.PI - tr0; } //表示を即更新 updateAfterEvent(); }; }; // //sq_mc内のcorner_btn○を押したとき sq_mc["corner_btn" + i].onPress = function() { //corner_btnを押したかどうかのフラグをtrueにする press_flg = true; //sq_mcの基準点からのマウス座標を取得 rx0 = _xmouse - sq_mc._x; ry0 = _ymouse - sq_mc._y; //sq_mcの基準点とマウスとの距離を算出 td0 = Math.sqrt(rx0 * rx0 + ry0 * ry0); // マウスによる回転の差分を算出 tr0 = (Math.PI / 2 + Math.atan2(ry0, rx0)) * 180 / Math.PI - sq_mc._rotation; }; // //sq_mc内のcorner_btn○を放したとき sq_mc["corner_btn" + i].onRelease = function() { //corner_btnを押したかどうかのフラグをfalseにする press_flg = false; }; // //sq_mc内のcorner_btn○からアウトしたとき sq_mc["corner_btn" + i].onRollOut = sq_mc["corner_btn" + i].onReleaseOutside = function () { //本物マウスを非表 Mouse.show(); //cursor_mcを非表示 cursor_mc._visible = false; //corner_btnを押したかどうかのフラグをfalseにする press_flg = false; //マウスが動いたときの動作を削除 delete sq_mc.onMouseMove; }; } ----------- 字数制限いっぱい
＃１の方と同じく 外部の画像作成ソフトを使って作成した Bitmap 画像を使うのであれば > 「－」（横線）と「｜」（縦線）を画像 これを背景の透明な GIF または PNG で取り込めば良いと思います。 というか，そんなことをするより Flash で(Flash Basic 8 で)， 「－」（横線）と「｜」（縦線）を描いて重ねれば良いだけだと思います。 何でしたら スクリプト でもできますが。 新規ドキュメントを作成し、 フレーム1 に次のスクリプトを書き(コピペし)、 「制御」→「ムービープレビュー」 ----------------------------------- // 深度0 に 空のMC yoko_mc をに作成 this.createEmptyMovieClip("yoko_mc",0); //yoko_mc を ステージ中央に配置 this.yoko_mc._x = Stage.width/2; this.yoko_mc._y = Stage.height/2; // yoko_mc 内の線種を指定 this.yoko_mc.lineStyle(2, 0x999999, 100); // yoko_mc 内に 横線を引く this.yoko_mc.moveTo(-100,0); this.yoko_mc.lineTo(100, 0); // その上の 深度1 に 空のMC tate_mc を作成 this.createEmptyMovieClip("tate_mc",1); //tate_mc を ステージ中央に配置 this.tate_mc._x = Stage.width/2; this.tate_mc._y = Stage.height/2; // yoko_mc 内の線種を指定 this.tate_mc.lineStyle(2, 0x999999, 100); // yoko_mc 内に 縦線を引く this.tate_mc.moveTo(0,-100); this.tate_mc.lineTo(0, 100); ----------------------------------- こんなスクリプトを考えるより 線を描いた方が数十倍早いです。
良くわからないのですが ご質問は Flash (Adobe または Macromedia の Flash) と何か関係がある事項なのでしょうか？ ここは [技術者向] コンピューター > プログラミング > Flash カテゴリです。 （例えば Flash0 とかは全く関係がありません。） （カメラに付いている Flash(ストロボ) も全く関係がありません。） （Flash メモリ も全く関係がありません。） （主に ActionScript という プログラミング言語 を中心とするカテゴリです。） 「カテゴリ違いである」という通報をしようにも 本当に カテゴリ違いであるのかどうかも判断できませんので この回答(？)を書かせていただきました。
【処理例】 「aaa」,「bbb」,「ccc」,「ddd」,「eee」５つのチェックボックスがあり 「aaa」のチェック状態と他４つのチェック状態の同期を行います。 //「aaa」チェックボックスのクリックイベンリスナー登録 aaa.addEventListener(MouseEvent.CLICK, clickHandler); function clickHandler(event:MouseEvent):void { bbb.selected = event.target.selected; ccc.selected = event.target.selected; ddd.selected = event.target.selected; eee.selected = event.target.selected; }
四角が描けるのであれば、線をつけるのはすぐだと思いますが。。。 描くMCにlineStyleを定義します。 ---------------------------------------------------- var mc:MovieClip = this.createEmptyMovieClip("mc", 1); mc._x = 10; mc._y = 10; mc.lineStyle(1, 0xFF0000); mc.beginFill(0xFFFFFF, 100); mc.moveTo(0, 0); mc.lineTo(0, 120); mc.lineTo(120, 120); mc.lineTo(120, 0); mc.endFill(); ---------------------------------------------------- ロールオーバーした際に色を変えたければ、 lineStyleを再定義して、同様の描画処理をすればOKです。
「マウスに追従する」のではなく 「マウスの場所から出てきて消える」と考えれば簡単ではないでしょうか。 (実際にマウスに追従はしていませんし。) 大きな骨組みは MC(ムービークリップ)の中で星が瞬きながらだんだん透明になりながら下へ移動するというものを作成し それをマウスが動く度にActionScriptステージ上へコピペし 適当に回転させてやれば良いと思います。 とにかく星を描きます。 それをグラフィックシンボルに変換して グラフィックシンボルの中の２～３フレームで瞬くようにします (45°回転させるだけで瞬くように見える)。 その星が内部で瞬くグラフィックを "MCの中で" 透明にしながら モーショントゥイーンやクラシックトゥイーンで下へ動かします。 最後のフレームをキーフレームにして そのキーフレームに this.removeMovieClip(); と書いて このMC自体を消すようにしておきます。 ※参考：下図↓の左半分 この星親MCをマウスの座標に色々な角度に回転させて attachMovie すると 散らばるように星が出ます。 attachMovie する前には シンボルのプロパティで「識別子」をつけておく必要があります。 ここでは 「star_mc」 という識別子をつけておくことにします。 ※参考：下図↓の右半分 この 「star_mc」 を attachMovie する場合の メインタイムラインのフレームに書くスクリプト↓。 -------------------------- //カウント用変数 cnt の初期化 cnt = 0; //マウスが動いた時に動作する関数を定義 this.onMouseMove = function() { //MC「識別子star_mc」を star_mc○ という名で attachMovie this.attachMovie("star_mc", "star_mc"+cnt, cnt); //star_mc○ をマウスの座標に配置 this["star_mc"+cnt]._x = this._xmouse; this["star_mc"+cnt]._y = this._ymouse; // star_mc○ を -90～90° でランダムに回転 this["star_mc"+cnt]._rotation = Math.random()*180-90; // カウント用変数の値に 1 を加算 if (cnt<=10000) { cnt++; } else { cnt = 0; } }; -------------------------- this["star_mc"+cnt]._rotation = Math.random()*180-90; の Math.random()*180-90 の部分を Math.random()*90-45; のように変えれば範囲が狭くなります。 Math.random()*360-180; のように変えれば範囲が全方向になります。
失敗しました… 2のやり方はプリミティブな型の変数ではダメですね ASでは数とか文字列なんかのプリミティブな型は 配列にいれても参照にならないので こういうやり方で巡回しても ダメなんでした、すいません var A,B,C,D,E:Number var varArr=["A","B","C","D","E"] for(var i in varArr){ this[varArr[i]]=parseFloat([a,b,c,d,e][i].text) } ってことで３も同じようなカンジですね
#Ano1追記です。 Flash Communication Sever でサーバサイド ActionScript という手もありましたね。 ただ使用できるかどうか…。環境によりますが。
どのやり方でやろうとして失敗してる ってものもない状態なので選択肢から １　各テキストフィールドを生成する反復処理の際に 　　リスナー関数を動的に生成しながらそれぞれリスナー登録 var b:int = 0; for (b; b<10; ++b) { ……. stage.addEventListener(MouseEvent.CLICK, makeContFunc(introA,introB)); } function makeContFunc(introA:TextField,introB:TextField):Function{ return function(ev:MouseEvent){ introA.htmlText = ""; introB.text = ""; } } 似てるけどそれぞれ違うリスナーを作る時とかにやる事です このケースは多分これが最適ではないです ２　各テキストフィールドを配列に格納しておき 　　リスナー関数でその配列を反復処理して全部テキストを削除 var introAArr:Array=new Array() var introBArr:Array=new Array() var b:int = 0; for (b; b<10; ++b) { var introA:TextField = new TextField(); var introB:TextField = new TextField(); introAArr.push(introA) introBArr.push(introB) introA.name = "introA" + b; introB.name = "introB" + b; ….. } stage.addEventListener(MouseEvent.CLICK, cont); function cont(ev:MouseEvent):void { for each(var introA in introAArr){ txtFld.htmlText = ""; } for each(var introB in introBArr){ txtFld.text = ""; } } 同じことをする場合が多いものは配列に入れておくと 反復処理が書きやすくて便利です 多分これがこのケースでは最適 ３　せっかく連番で名前つけてるんだから 　　名前で各テキストフィールドを呼び出して削除 var b:int = 0; for (b; b<10; ++b) { ….. } stage.addEventListener(MouseEvent.CLICK, cont); function cont(ev:MouseEvent):void { for(var i=0;i<10;i++){ getChildByName("introA"+i).htmlText = ""; getChildByName("introB"+i).text = ""; } } これもこのケースでは最適な選択肢な気もしますが インスタンスをムービークリップの子として取得する場合は なんか処理が１つ遅れるカンジになるし 表示されてない状態だとnullになってエラーになるし 僕はあんまりこのやり方したくありません
オブジェクトとして、1フレーム目に小さい円を置いて、最終フレームに拡大した円を置き、最終フレームの円の１００％透明にしてモーションを作っているだけだと思います。あとはそのオブジェクトを時間をずらして配置するだけかと。
このぐらいならTweenクラスを使うのが楽かもしれないですね ヘルプでfl.motion.Tweenのクラスを探してみてください ここであれこれ聞くよりヘルプ見た方が早いと思うので
ぱっと思いついたものを挙げてみました。 メリット: ・ユーザのディスプレイ解像度を気にしなくて済む ・携帯サイトであれば動的なサイトにできる デメリット: ・Flashが表示できない環境では何の表示もできない(最近流行のiPhoneやiPadでは見られない) ・サイトが重くなりがち etc... デメリットの方が多いので基本的にはやらない方がいいと思います。携帯サイトでならばやらない事もないですが、PC向けでしたらせめて下地だけはHTMLにしないと、ユーザの環境によっては全く見られないなど、SEO以前の問題が発生すると思います。 作り方次第ではありますが、メンテナンス性などもHTMLの方が高いかと思います。
setRGB は インスタンス自体（全体）を まっ赤にする とか 真っ黒で塗りつぶす というものです。 ですからまず除外です。 テキストフィールド のテキスト(文字)の色を指定する場合は TextFormatクラス を使うか タグ付きHTML を使うかになると思いますが， TextFormat はややこしいですしあまり使い勝手がよろしくないので タグ付きHTML で色を指示するのが良いのではないかと思います。 まず シンボルリストのテキストフィールドはダイナミックテキストとして用意します。 そのとき フォントは「埋め込みテキスト」を使用しない場合(普通は使用しない)， フォント名は前にアンダースコアの付いたデバイスフォントにします。 例：「_ゴシック」「_等幅」「_明朝」など また「HTML」にチェックを入れておきます。 ※下の図↓ そのテキストをレイヤーに配置し レイヤー名の部分をダブルクリックして 「レイヤーのプロパティ」パネルよりインスタンス名を付けます。 ここでは 「my_txt」というインスタンス名を付けたとしておきます。 例えばフレーム1には次のように書きます↓。 //「my_txt」の htmlText プロパティに文字列を代入 my_txt.htmlText = "<font color='#ff0000'>赤です</font>"; また例えば フレーム20をキーフレームにして、そこには次のように書きます↓。 my_txt.htmlText = "<font color='#0000ff'>青です</font>"; また例えば フレーム40をキーフレームにして、そこには次のように書きます↓。 my_txt.htmlText = "<font color='#00ff00'>緑</font><font color='#ffff00'>黄</font>"; テキストフィールドの設定さえしておけば スクリプトは、それぞれたった１行でできます。 最後の 緑 黄 ように文字ごと色を変えることもできます。 Suzuka 基礎・基本 htmlText(テキストをHTMLとしてレンダリング) http://suzupara.iinaa.net/kiso231.html
Flash 8 で書かれていらっしゃる通りのことをしてみて Flash Player 8 用 SWF をパブリッシュしてましたが それでも 数値は文字列として扱われました。 ( 5 + 7 → 57　という感じ) その本は持っていないのでよくわかりませんが そもそもテキストフィールドに「変数名」を付けるという部分がおかしいです。 パブリッシュ設定を Flash Lite 1.0 や 1.1 にするような指示は書かれてありませんか？ パブリッシュ設定を Flash Player 4 や Flash Lite 1.0 や 1.1 にすると テキストフィールドに入力された文字は数値として扱われます。 ( 5 + 7 → 12　という感じ) ※ Flash Player 4 などでは「+」は数値加算演算子なので 　　テキストフィールド記入文字列は自動的に数値扱いになるため。 その他 テキストフィールド の仕様もバージョンによって変わっています。 上にも書きましたが テキストフィールドに「変数名」を付けるのは Flash Lite 1.0 または 1.1(携帯用Flashの初期バージョン) にパブリッシュするときぐらいで それ以外は 今は使いません。 Adobe側からも「使ってはならない」と指示されています。 Flash CS3 ドキュメンテーション 「テキストフィールドのインスタンス名と変数名について」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … > テキストフィールドのメソッドの呼び出し、 > そのプロパティの取得または設定を行うには、 > プロパティインスペクタの [インスタンス名] テキストボックスで、 > そのテキストフィールドにインスタンス名を割り当てる必要があります。 > > プロパティインスペクタの [変数] テキストボックスで、 > 変数名をダイナミックテキストフィールドや > テキスト入力フィールドに割り当てることができます。 > これによって、変数に値を割り当てることができます。これは、 > 旧バージョンの Flash Player (Flash Player 4 など) 用の > アプリケーションを作成するときに使用する可能性のある > 非推奨の機能です。 　~~~~~~~~~~~~~ テキストフィールドに「変数名」を付けると色々不具合を生じます。 【解決策】 テキストフィールドの「変数名」は削除して 代わりに「インスタンス名」を付けます。 名前の「aa」，「bb」，「cc」は そのままで良いです。 ボタンに書いたスクリプトを次のように変更します。 on (release) { cc.text = Number(aa.text) + Number(bb.text); } これで Flash Player 8 用 SWF をパブリッシュすれば 無事に数値加算されると思います。 （その他のバージョンでは知りません） ＃１ の方も書かれていらっしゃいますが とにかく「バージョンに合った本」を買いましょう。 でないと妙なところで詰まって動けなくなることが多発しますよ。
お話のどこに Flash が関係するのかわかりません。 横幅 1000px の JPEG(JPG / ジェイペグ) でも用意して その JPEG を センターリング で 配置するように SWF も 配置すれば良いだけでしょう？ そう考えると JPEG と SWF の違いって何です？？？ Flash とか そうではない とかに関わらず センターリング すれば良いだけでは？ 例えば(あくまでも一例)， 横1000px × 縦200px の 「AAAA.jpg」 があった場合 <p align="center"><img src="AAAA.jpg" width="1000" height="200"></p> と貼り付ければその JPEG は 左右中央 に表示されるじゃないですか。 また仮に例えば (あくまでも一例)， テーブルでも作った場合そのテーブルごとセンタリングしても良いですし。 <div align="center"> <center> <table border="0" width="1000" cellspacing="0" cellpadding="0"> <tr> <td><img src="AAAA.jpg" width="1000" height="200"></td> </tr> </table> </center> </div> 上記２例の場合 (あくまでもたった二例に過ぎない場合)， <img src="AAAA.jpg" width="1000" height="200"> の部分を SWF を貼り付けるタグに変えれば良いだけかと思います。
極普通 に 極単純 に 考えるなら 1000px × 800px で SWF を貼り付けている HTML のタグを 800px × 640px に変えれば良いだけだと思いますが。
できないことは知ってたけど、説明が思いつかなかった自分に反省。 調べてみました。 http://help.adobe.com/ja_JP/AS3LCR/Flash_10.0/ 注意：Bitmap クラスは InteractiveObject クラスのサブクラスではないため、マウスイベントを送出できません。しかし、ビットマップオブジェクトを格納した表示オブジェクトコンテナの addEventListener() メソッドを使用できます。 ・・・そりゃそうだ。うん。。私はこんな簡単なことを忘れ（略 と、いうわけで、bmpをaddChildする先を変更。 新たにSprite,MovieClipとかを作成し、それを親にして親をaddChild(bmp)。 addEventListenerも親のほうから。
つい最近，同じようなご質問に回答しました。 質問「for & duplicateMovieClip & function」： OKWave http://okwave.jp/qa/q5938068.html （つい最近というか，定期的にしょっちゅう同じような質問に回答しています。。。）
何を監視するのでしょうか？ 監視するものによってその方法も変わりますし 意味合いも変わるかもしれません。 たとえば 「マウスを監視する」には 「マウスの座標がどこにあるのかを監視する」 とか 「マウスがインスタンスに乗っているかどうかを監視する」 とか 「マウスボタンが押されたかどうかを監視する」などなどがあります。 その場合 なぜマウスを監視する必要があるのかと言えば 「マウスの座標によってインスタンスの位置を変えるため」 とか 「インスタンスへのマウスオーバーによってインスタンスを光らせるため」 とか 「マウスクリックによって違うページにジャンプさせるため」 というような 『何かのイベントを起こす』 という理由があるからです。 逆に言えば 何もイベントを起こす必要がなければ何も監視しなくて良いということになります。 上では「マウスの監視」のみの例を挙げましたが 「ファイルのロード状態を監視する」 とか 「ロードしたファイルの進行状況を監視する」 とか 「接続が成功したかどうかを監視する」 など，色々監視するものはあります。 しかし何にしても 「監視」にはその監視する行為の理由となる「イベント」があるはずです。 何かをきっかけにイベントを起こす必要がある場合に その何かを監視する必要が出てきます。 何かをきっかけにイベントを起こす必要がないのであれば 何も監視する必要はありません。 「FF071110 - イベントを制する者、ActionScript 3.0を制す - F-siteセミナー」 http://www.fumiononaka.com/Sample/F-site/FF07111 …
参考になるエントリーを載せました。 どうやらウェブ上でフラッシュ単体は無理みたいですね。 でもMACアドレスを取得したりしてくれるプログラムが間にあるなら出来そうですね。 ちなみにAIRだとflash.net.NetworkInterfaceクラスに hardwareAddressというものがあるらしく取得出来るようです http://www.adobe.com/jp/devnet/air/articles/airp … ASのバージョンはActionScript 3.0です。 参考URL：http://okwave.jp/qa/q1448583.html
Flash CS5 をまだ持っていない者ですが，よろしいでしょうか？ (というか Flash CS5 は Flash 史上 最低のバージョンアップなのでアップグレードする気も全く無し。) (↑新規で購入する場合は問題ないですよ。CS4 とほとんど変わってないのでアップグレードする気かしないというだけのことです。) タイムラインエフェクト は CS4 で無くなりましたよ。 あった期間は Flash MX 2004 ， Flash 8 ， Flash CS3 の３バージョンのみということになります。 遊びとしては面白いかもしれませんが 現実的には使い物にならない機能だったので 誰も使わなかったでしょう。 使い物にならないと言うか 「型にはまったもの」 だから恥ずかしくてそんなもの世間に出せなかったということです。 「Flash 使うなら もっと オリジナリティ あるものを作れよ！」「手抜きするな！」 と言われそうな感じです。 タイムラインエフェクトの爆発は 手間がかかるだけ， 内容は至って初歩的なこと(Flash 超初心者 がするようなこと)です。 (1)何か絵や字を書きます。 (2)それをグラフィックシンボルに変換します。 (3)グラフィックシンボル内の編集に入ります。 (4)絵や字をバラバラに切って別々のムービークリップに変換します。 (5)それらのムービークリップを各レイヤーに分けて配置します。 (6)それらのムービークリップが飛び散るようにモーショントゥイーンを作成します。 (7)ムービークリップ内から元のタイムラインの編集に戻ります。 タイムラインエフェクトの爆発は 上の操作の (2)～(7) の作業を自動でやってくれるというだけの機能です。 少しは数値で爆発のしかたをコントロールはできますが 基本的に 何のポリシーもない 「定型物」 です。 手間はかかっても，自分で作った方がましです(もっともっと良い物ができる)。 Flash 8 で 「あ」 という文字を書き その 「あ」 にタイムラインエフェクトの爆発を設定し 自動的にできた グラフィックシンボル 内のタイムラインを見てみたのが下の図です↓。
> フワフワ浮かびながらランダムに移動する 「フワフワ」はFlashの問題ではありませんよね。 また そもそも雲は 「ほぼ一定の速度でほぼ同じ方向に動き続けるもの」です。 ランダムで同じ範囲内をフワフワ動くという物理法則に反したイメージをお持ちでしたら その法則に従った動きをご自身で作ってみてください。 === 以下はFlash の話 ====== > for文を使用し > 指定した数値内を移動させるという形になるのか PC用のFlash では ActionScript で物を移動させる場合 ENTER_FRAME系 [onClipEvent(enterFrame) など] や setInterval などで一定時間ごとに随時座標を指定して物を動かします。 その場合は for文 なども入ると思います。 しかし Flash lite 1.1では ENTER_FRAME系 のスクリプトは存在しないため 例えば フレーム1 と 2 をループ再生させて そのループ再生で 「一定時間ごとに随時座標を指定」 する必要があります。 ここでもし メインのタイムラインで フレーム1 と 2 のループ再生をさせた場合 他のアニメーションなどが作成できなくなります。 したがって フレーム1 と 2 のループ再生は ムービークリップ内のタイムラインを使ってするべきということになります。 そして どうせムービークリップ内のタイムラインを使うのでしたら 雲をムービークリップにして雲内タイムラインを使うのが近道ということになります。 その雲をコピペで増やせば良いだけです。 ですから普通 for文は使わないでしょう。 ***以下は作成方法例*** ステージ上に「雲の絵」を描きます。 その絵を選択してムービークリップに変換しますが このとき基準点を中央にしておくとします。 その雲ムービークリップ内のタイムラインの編集に入ります。 雲ムービークリップ内の雲の絵のレイヤーを 2フレーム に伸ばし その雲レイヤーとは別にActionScript用レイヤーを作って フレーム1 と 2 を空白キーフレームにします。 そのフレーム1のスクリプト例 ------------------ if (_x <= 10+_width/2) { my_x = random(11)/5; } else if (_x >= 230-_width/2) { my_x = -random(11)/5; } else { my_x = (random(21)-10)/5; } _x += my_x; if (_y <= 50+_height/2) { my_y = random(11)/5; } else if (_y >= 270-_height/2) { my_y = -random(11)/5; } else { my_y = (random(21)-10)/5; } _y += my_y; ------------------ フレーム2のスクリプト ------------- gotoAndPlay(1); ------------- ※注釈 　my_x，my_y：変数 　_x：x座標　_y：y座標 　_width：横幅　_height：高さ 　random()：random関数 　(Mathクラスのrandomメソッドではない) これで雲ムービークリップ内がループ再生されるため １フレーム進む時間毎に毎回，フレーム1 のスクリプトが実行されます。 自作版 ENTER_FRAME です。 Flash Lite 1.x は簡単な関数しか無く 制約が厳しい分 普通の Flash よりはるかに手間と頭と気を使いますよ。 　
FLASHにCSS設定は出来ません。　Webページを制作する際のHTMLのFLASHの入れ子のCSSのBOXを フォトショップのレイヤーのようにかぶせてあげるのです。 プルダウンメニューを前面　写真を背面にして重ね合わせてあげれば　プルダウンメニュー展開時の画像を写真にかぶせることが出来ます。
Photoshop Elements （Wikipediaによると・・）イラスト等を作成する場合Web上での発表や紙に印刷するための用途に使用する場合は問題ないが、カラーデータ入稿に必須であるCMYKカラーに対応していない・・・とあります。 尚、下記はWEB検索で「フォトショップ　エレメンツ」のキーワードで検索されたページの一部です ＣＭＹＫカラーとは http://ameblo.jp/shimomayu/entry-10004373873.html ★フォトショップ・エレメンツ http://photogatherslesson.web.fc2.com/public_htm … 画像加工の便利帳 http://ameblo.jp/shimomayu/entry-10005091691.html
書かれていらっしゃるご質問内容は 本当に 「CS4 でのモーショントゥイーン」＝「新モーショントゥイーン」 の話でしょうか？ それならモーショントゥイーンで出てくる「モーションパス」という線を全て選択して ドラッグ移動させれば良いだけだと思いますが。。。 「CS4 でのモーショントゥイーン」ではなく 「CS3 までのモーショントゥイーン」＝「CS4 でのクラシックトゥイーン」 でしたら 確かに 普通の操作をすれば > ムービークリップ全体を選択できず、 > 最初や最後だけしか移動できず、 > ななめに動いてしまいます。 ということになります。 良くわかりませんので この辺りは「何でも良い」ということにしましょうか。 「何でも良い」でとにかくムービー全体を下に移動させたい場合は タイムラインの下にある 「複数フレームを編集」 ボタンを押した状態にして 「オニオンスキン」 ボタンも押した状態にして ステージ上に現れた動きの全てを選択し 下にドラッグ移動させます（↓図）。 もし「オニオンスキン」が全体にかからなくて全体が見えない とか 何かそのようなことになりましたら 「複数フレームを編集」 ボタン 周辺のボタンをクリックして 全体が見渡せるように調節してください。 この辺は 「習うより慣れろ」 です。 各ボタンがどういう意味を持つのかの説明を見るより ごちゃごちゃとさわることが大切です。 ごちゃごちゃさわっていると慣れます。
各ムービークリップ内の変数として Hi を保存し 各ムービークリップクリック時に 個々内の変数 を参照で呼びださせれば良いと思います。 ※イメージは下図↓ 具体的には次の部分↓を // ************ _root.I_MC01.duplicateMovieClip (H_name01, (201+Hi), {_x:H_gFX ,_y:H_gFY }); H_num = Hi; _root[H_name01].onRelease = function(){ _root.H_TextFieldInfo.text = H_num; }; // ************ 次のように↓換えればできます。 // ************ _root.I_MC01.duplicateMovieClip(H_name01, (201 + Hi), {_x:H_gFX, _y:H_gFY}); //↓各 MC 内の 変数H_num に個別の Hi を代入 _root[H_name01].H_num = Hi; _root[H_name01].onRelease = function() { //↓各 MC 内の変数 H_num をテキストフィールドに表示 _root.H_TextFieldInfo.text = this.H_num; }; // ************ ＝＝＝ 別法1 ＝＝＝＝＝＝ 関数の中に Hi を固定してしまっても良いと思います。 具体的には次の部分(最後の部分)↓を // ************ _root.I_MC01.duplicateMovieClip (H_name01, (201+Hi), {_x:H_gFX ,_y:H_gFY }); H_num = Hi; _root[H_name01].onRelease = function(){ _root.H_TextFieldInfo.text = H_num; }; // ************ } 次のように↓書き換えればできます。 // ************ _root.I_MC01.duplicateMovieClip(H_name01, (201 + Hi), {_x:H_gFX, _y:H_gFY}); //↓各MCクリック時の関数として 関数closureFunc の戻り値を代入 _root[H_name01].onRelease = closureFunc(Hi); // ************ } //関数 closureFunc の定義 function closureFunc(H_num) { //関数を返す return function () { //渡された H_num の値をテキストフィールドに表示 _root.H_TextFieldInfo.text = H_num; }; } ＝＝＝ 別法2 ＝＝＝＝＝＝ 「個別の番号をテキスト欄に表示させる」"だけ" でしたら MCの名前の最後をテキスト欄に表示させても良いですね。 具体的には次の部分↓を // ************ _root.I_MC01.duplicateMovieClip (H_name01, (201+Hi), {_x:H_gFX ,_y:H_gFY }); H_num = Hi; _root[H_name01].onRelease = function(){ _root.H_TextFieldInfo.text = H_num; }; // ************ 次のように↓書き換えればできます。 // ************ _root.I_MC01.duplicateMovieClip(H_name01, (201 + Hi), {_x:H_gFX, _y:H_gFY}); _root[H_name01].onRelease = function() { _root.H_TextFieldInfo.text = this._name.split("I_MC")[1]; }; // ************ this._name で 「I_MC○」 という自分の名前を取得し その名前を文字列 「I_MC」 で区切って配列にし その配列の 2つめの要素 [1] を取って来るという内容です。 ※配列の要素番号は 0 から始まるので 1 は２つ目 　
> flashのリンクバナーの最後から２つのバナーだけにポインタを合わせた時、 > 矢印と指の形に切り替わり続けます。 状況がさっぱりわからないので何とも言えませんが それは 「ActionScript的」 な問題ではなく ボタンが ボタンインスタンス なら ヒット のフレームが塗りつぶされていないとか ボタンが ムービークリップ なら 背景を透明な塗りで塗っていないとか ヒット エリアを指定していないとか そういう 「物理的」 な問題ではないのでしょうか？ 「ボタンを理解しよう！」 http://1art.jp/flash/le/lesson8/lesson8.htm 「ムービークリップのボタン化」 http://homepage3.nifty.com/ginga-b/MX/btnmc.html
非常に大まかに。 まずは http://mobilef.jugem.jp/?cid=6 こちらのサイトをご覧ください。 Flash作成時は、私はadobeのFlash Builderをお勧めします。 FlashはActionScriptで構成されていますので、ActionScriptを覚えることは必須と考えて下さい。 また、DBなどを絡める場合、ActionScriptではDB操作は出来ませんので、PHPやJAVAを使う必要があります。 「画像を表示し、一定時間ごとに切り替える」程度であればDB操作などは無関係ですが、「サムネイルがクリックされた際に、そのクリックされた商品の詳細を表示する」などになってくると、DBとの絡みが出てくるので、サーバサイドの言語を使用せねばなりません。
onClipEvent(enterFrame) { n_date = new Date(); now_time = ""; week = ["日", "月", "火", "水", "木", "金", "土"]; now_time = n_date.getFullYear() + "/"; now_time += (n_date.getMonth() + 1)+ "/"; now_time += n_date.getDate() + " ("; now_time += week[n_date.getDay()] + ") "; now_time += n_date.getHours() + ":"; now_time += n_date.getMinutes() + ":"; now_time += n_date.getSeconds(); }
何これ？ おやや？？？　と思ったら これは普通の Flash Lite 構文 ではなくて ParaFla! または Suzuka の SWF4 構文ですね。 そうならそうと書かれないと普通はわかりませんよ。 Flash Lite 自体がそもそも特殊文を使用しなければなりませんが SWF4 はもっと特殊です。 次のように書かれていらっしゃる 分 と 秒 の部分↓ --------------------------- now_time_m = FSCommand2("GetTimeMinutes") & ":"; now_time = now_time & now_time_m; //分 now_time_s = FSCommand2("GetTimeSeconds"); now_time = now_time & now_time_s; //秒 --------------------------- これを 次↓のように書き替えれば良いと思います。 --------------------------- now_time_m = FSCommand2("GetTimeMinutes"); if(now_time_m <= 9){ now_time_m = "0" & FSCommand2("GetTimeMinutes") & ":"; }else{ now_time_m = FSCommand2("GetTimeMinutes") & ":"; } now_time = now_time & now_time_m; //分 now_time_s = FSCommand2("GetTimeSeconds"); if(now_time_s <= 9){ now_time_s = "0" & FSCommand2("GetTimeSeconds"); } now_time = now_time & now_time_s; //秒 --------------------------- ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 本題とは関係がありませんが 最初の 「//曜日用の擬似配」列 の部分。 これは eval を左辺で使う場合の SWF4 用記述方式の文だとは思いますが， そこにわざわざ eval (evalの左辺版) を使う必要はありませんよ。 普通に変数を用意すれば良いだけです↓。 --------------------- week0 = "Sun"; week1 = "Mon"; week2 = "Tue"; week3 = "Wed"; week4 = "Thu"; week5 = "Fri"; week6 = "Sat"; //曜日用の擬似配列 --------------------- この変数群を１つの配列のようにエミュレートするのが eval で， eval を右辺で使う場合の SWF4 用記述文が now_time = now_time & valueOf("week" & wd) & ") "; //曜日 の valueOf() です。 ここで valueOf() を使って単なる変数を配列かのごとく扱っているため 最初の eval左辺版 は要らないのです(使っても良いけど使う意味がない)。
＃１ です 今回のこととは直接関係がない(動作するしないとは関係がない)ことですが， 先日書いたスクリプトは間違ってはいませんが "変" です。 すみません。 その訂正からさせていただきます。 クロージャ である方は for文 ループの中に入れる必要はないんです。 入れてもエラーや不具合が生じることはありませんが無駄です。 したがって， ＃１の補足で書かれていらっしゃるスクリプト↓ ---------------------------- for(var i:int = 1; i <= 7; i++){ this["btn" + i].addEventListener(MouseEvent.CLICK,conMV(i)); function conMV(num:int):Function { return function():void{ var conMV:Tween = new Tween(MovieClip(root).contents, "x", None.easeInOut, contents_x, "con_x" + num, 1, true); } } } ---------------------------- これの クロージャ 部分を for文 から外に出した形をまず書きます↓。 ---------------------------- for(var i:int = 1; i <= 7; i++){ this["btn" + i].addEventListener(MouseEvent.CLICK,conMV(i)); } function conMV(num:int):Function { return function():void{ var conMV:Tween = new Tween(MovieClip(root).contents, "x", None.easeInOut, contents_x, "con_x" + num, 1, true); }; } ---------------------------- さて本題です。 この new Tween() 内の 第5引数 「"con_x" + num」 は文字列です。 単なる 文字列 であって 座標にも何にもなっていません。 new Tween() の次の行かまたは new Tween() の行を消して trace("con_x" + num); と書いて 制御→ムービープレビュー すると 「con_x2」 とか 「con_x4」 などが出力 されるはずです。 決して 「- 1000」 や 「- 2000」 などのような数は出力されないはずです。 色々考えてみたのですが， とりあえず クロージャの中に 目標座標 も入れてしまうのが良いと思います。 それと ご質問内容などなどを色々重ね合わせてみた結果 結論として，次のようにしたいのではないだろうかと思いました↓。 --------------------------------- for(var i:int = 1; i <= 6; i++){ this["btn" + i].addEventListener(MouseEvent.CLICK,conMV(i , this["con_x"+ i])); } function conMV(num:int,con_x:int):Function { return function():void{ var conMV:Tween = new Tween(MovieClip(root).contents, "x", None.easeInOut, MovieClip(root).contents.x, con_x, 1, true); }; } --------------------------------- うまく行かなかった原因はパスの問題ではないと思います。
書かれていらっしゃることは Adobe Flash では Flash 8 以降 の フィルタ 機能でできるようになったことで Flash Player 8 以上用の SWF をパブリッシュするときのみ有効です。 つまり ParaFla! をお使いの場合は まず 「ファイル」→「プロジェクトのプロパティ」 で [SWFバージョン]を[SWF8]にする必要があります。 (デフォルトでは多分[SWF6]→変更→[SWF8]) 内部操作ですが まず カラー写真 を[ファイルリスト]に追加して[イベント]に追加しますよね。 イベントに追加した カラー写真 のインスタンスを選択し， 「右クリック」→「プロパティ」で「イベントのプロパティ」パネルを出し そのパネルの [詳] と表示されているボタンをクリックします。 すると「イベントの詳細」パネルが出てくると思いますから， 　□カラーマトリクス にチェックを入れます。 そうすると 1 0 0 0 … のような表の下に [プリセット] というボタンがあると思いますからそれをクリックします。 そして 　２ モノクロ を選択します。 するとスプライトがモノクロになります。 このような感じで カラーの状態のスプライトからモノクロの状態のスプライトになるように トゥイーンをかければ出来上がりです。 つまり カラー写真のイベントのプロパティでフレームカウントと移動先を指定し 描画位置の方の [詳] ボタンをクリックし カラーマトリクス で ノーマル を指定します。 そして 移動先の方の [詳] ボタンをクリックし カラーマトリクス で モノクロ を指定します。 すると カラー写真→モノクロ写真 にだんだん変わるものができます(↓図)。 スクリプトでするなら まず カラーマトリクス の 1 0 0 0 … のような数を理解しなければなりません。 そして カラーマトリクスフィルタクラス の構文と さらに それを徐々に変化させるスクリプト…。 気が遠くなるので上で書いた手動方法の方が良いです。 その他 SWF8(Flash Player 8)では ブラー や ドロップシャドウ や 画像の加算・乗算 など… ビジュアル表現能力が飛躍的に向上しました。 この辺を使い慣れないと損ですよ。 ---☆ちなみに☆---- 「カラー」→「モノクロ」のようなものでしたら カラーマトリクスフィルタがない SWF7 以下の場合でもさほど困らずにできるんです。 Photoshop や GIMP や JTrim などのフォトレタッチソフトでモノクロ写真を用意しておいて カラーとモノクロの２枚の写真をファイルリストに追加しそれぞれをスプライトに入れ カラー写真入りスプライトの上に モノクロ写真入りスプライトを重ねるようにイベントに配置し， モノクロ写真を 透明→不透明 にトゥイーンさせれば良いだけです。 ファイル容量が増えるのは難点ですが， デメリットと言えばそれくらいなもので 描画演算速度も多分この方法の方が早いと思います。 特に スクリプト でする場合はこちらの方法の方がずっと楽です。
＃２です > 決まった位置にこれ！というムービークリップは作れないと思います。 ？？？ スプライトが配置できてムービークリップが配置できない理由がよく(全く)わかりませんが。 ムービークリップの リンケージ で クラス名 として ○○ と付け new ○○()　で ○○ クラスのムービークリップを呼び出して addchild で配置すれば良いだけだと思うのですが。 それではできないのでしたらスプライトでもできないと思います。 ちなみに スプライト ＋ Tween の方法で出来るのでしたらそれで良いと思います。 全く異論はありません。
MovieClip(parent).gotoAndPlay("m"+i); の部分を trace(i); に変えてみてください↓。 ---------------------------------- for (var i:int = 1; i <= 6; i++) { this["btn" + i].addEventListener(MouseEvent.CLICK,Down); function Down(mo:Event):void { trace(i); } } ---------------------------------- これで「制御」→「ムービープレビュー」で表示されたSWF内の６つのボタンをクリックすると 原因がわかるかもしれません。 ６つのボタンをクリックすると どのボタンをクリックしても 7 と出力されませんか？ for文を抜けた後 i は 7 になるので i <= 6 という条件が満たされず for文 には再突入ぜずに for文 の実行は終了します。 各ボタンがクリックされるのは for文を抜けた ずーーっと，ずーーーーーーーーーーっと 後です。 つまり 各ボタンがクリックされる頃には i は すでに 7 になっていますから どのボタンをクリックしても i は 7 と表示されるのです。 つまり どのボタンをクリックしても MovieClip(parent).gotoAndPlay("m"+7); が実行される。 すなわち MovieClip(parent).gotoAndPlay("m7"); が実行されるのです。 こういう場合の回避策の１つとして 「クロージャ」というものが使われます。 スクリプトを次のように書き直して 「制御」→「ムービープレビュー」で表示されたSWF内の６つのボタンをクリックしてみてください。 ---------------------------------- for (var i:int = 1; i <= 6; i++) { this["btn" + i].addEventListener(MouseEvent.CLICK,Down(i)); function Down(num:int):Function { return function():void{ trace(num); }; } } ---------------------------------- 1 や 2 や … や 6 が出力されると思います。 「クロージャ - Wikipedia」 http://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AD% …
>知人にこれからはactionscriptなど必要ではなくなると >言われたのですが 無視してください。 あなたが覚えた知識は、あなただけのもので、無駄になることはありませんよ また、プログラム言語は、ソリューションが変化しても考え方は同じなので 例えばASが理解できて、JavaScriptがまったくわからないんですｗなんて人は いないんですよ。 ですので、勉強することはとてもいいことです。 で、私の返答ですが、 ASは勉強をしたほうがいいカテゴリです。 AdobeAIRのインターフェースがASなのですが、これで動的なアプリケーションバナーや 一般の機種汎用アプリケーションが作成できます。 ブラウザなしで、アプリケーションとして動くのに、MACでもWINでも動くアプリを作れます つまり、用途がこれを求めたなら、迷わずAIR+ASの組み合わせがいいなどと判断が出来て 特定の言語にいい悪いは、ありません
Flash Lite 1.x がそもそも厄介ですが その他色々と厄介事を含むご質問ですね。。。 >on(keyPress"5"){ > mc._x += 10; >} >こんな感じで、減速しながらスムーズに移動をさせたいです。 > >_x += (目標の縮尺比率 - _x) / 縮尺のスピード; >を使っていろいろチャレンジしているのですが 前半は「座標移動」について 後半は「拡大縮小」について書かれているように見えます。 何をどう回答すべき？ よくわからないので「x座標の移動」のみについての シンプルな作成例を書きます。 Flash Lite 1.x では onClipEvent (enterFrame){} や MovieClip.onEnterFrame = function(){}; が使えません。 これらと同じ働きをするような仕組みを自作しなければならないわけですが これには ムービークリップのグルグル ループ再生を使います。 新規ドキュメント を作成し ステージ上に「ボタン」と「ムービークリップ」を１つずつ作ります。 ムービークリップはステージ中央辺りが良いです。 またムービークリップには「mc」というインスタンス名を付けるとします。 　メインタイムライン 　　├ムービークリップ:インスタンス名「mc」 　　└ボタン そのレイヤーとは別に新しいレイヤーを作成し ActionScript を書く専用レイヤーということに決めます。 その ActionScript用 レイヤー の フレーム1 には 次のようなスクリプトを書きます。 ----------------------- //変数 spd にスピード(変化率)を設定 spd = 1/5; //変数 stage_w に ステージ の横幅を設定 stage_w = 240; //目標座標に mc の初期 x座標 を代入 goal_x = mc:_x; ------------------------- ボタンには次のようなスクリプトを書きます。 ----------------------- on (keyPress "5") { //変数 goal_x に 10 を加算 goal_x += 10; //goal_x の値が stage_w より大きくなれば if (goal_x > stage_w) { //goal_x の値を stage_w に固定 goal_x = stage_w; } } on (keyPress "4") { goal_x -= 10; //goal_x の値が 0 未満になれば if (goal_x < 0) { //goal_x の値を 0 に固定 goal_x = 0; } } ----------------------- ↑ボタンによって ムービークリップの座標を変えるのではなく目標座標を変えているのです。 次に ムービークリップ「mc」内タイムラインの編集に入ります。 「mc」内を２フレームにします。 「mc」内に ActionScript を書くレイヤーを挿入し フレーム1 も 2 も空白キーフレームにします。 その フレーム1 には次のように書きます。 ------------------------------ //x座標を目標座標にspdの割合で近づける _x += (/:goal_x - _x) * /:spd; ------------------------------ 「/:」 の 「/」は割り算ではなく「_root」を意味します。 「:」はその階層の 「変数( or プロパティ)」 です。 フレーム2 には次のように書きます。 ----------------- //フレーム1へ戻って再生 gotoAndPlay(1); ----------------- これでムービークリップ内のループ再生によって ムービークリップが目標座標に近付くものができます。 　
bitwise right shift operator http://www.google.co.jp/search?hl=ja&lr=lang_ja& …
Flash MXの頃は直接movをswfに埋め込めたと思いましたが、 CS4ではflvしか埋め込み出来ないみたいですね。 とりあえず、Flash?CS4では下記のような手順でムービーをswfに取り込みます。 1. movをflvに変換。(Media Encoder等を使用) 2. [ファイル]→[読み込み]→[ビデオの読み込み]を選択 3. ファイルを選択して、「SWFにFLVを埋め込み、タイムラインで再生」を選択 ・・・で、swf内にビデオが埋め込まれるはずです。 ただ、swfに直接ビデオを埋め込むと、音がある場合は音ズレが発生する場合があります。
＃１＆＃２ です。 ＃２の補足で書かれていらっしゃる内容全般に関しては 「配列アクセス演算子」 と Google などで検索してみてください。 「配列アクセス演算子」 は ActionScript 1.0 ～3.0 まで共通です。 http://www.google.co.jp/search?hl=ja&source=hp&q … > この場合のthis.とはどういう意味でしょうか？ ActionScript 3.0 の場合で フレームにスクリプトを書く場合は ごく単純で 「this」＝「そのスクリプトを書いたタイムライン」 です。 メインのタイムラインでしたら 「root [ MovieClip(root) ]」 です。
その他が全くないのでしたら 次のようにすればできるかもしれません。 ---フレーム1----------------------- btnSkip.addEventListener(MouseEvent.CLICK,skipOnRelease); function skipOnRelease(evt:MouseEvent) :void{ evt.currentTarget.visible = false; gotoAndStop("end"); btnRepeat.visible = true; } --------------------------------- ---フレーム400--------------------- stop(); btnRepeat.visible = true; btnSkip.visible = false; btnRepeat.addEventListener(MouseEvent.CLICK,repeatOnRelease); function repeatOnRelease(evt:MouseEvent):void { gotoAndPlay("start"); evt.currentTarget.visible = false; btnSkip.visible = true; } --------------------------------- これくらいのことは当然わかりきってから ActionScript 3.0 に変更した方が良いですよ。
書かれていらっしゃる意味がほとんど全てわかりませんが。。。 > 上から下へパブリッシュされている パブリッシュの順など全く関係ありません。 ActionScript の 99.9％ 以上は Flash Player に対する言語です。 Flash 作成ソフト ではなく Flash Player が理解して実行する言語ですよ。 (だからこそ 動的 にコンテンツが動作する。) 例えば 10フレーム の ムービー(SWF) があった場合， フレーム1 からパブリッシュされても フレーム10 からパブリッシュされても そんなことは全くどうでも良い話。 フレーム1 に addChild() が書いてあれば SWF の フレーム1 表示時にその addChild() が実行されます。 フレーム10 に addChild() が書いてあれば SWF の フレーム10 表示時にその addChild() が実行されます。 それだけです。 パブリッシュ順(SWFのコンパイル順)など全く関係なし。 > 単純にaddChild()した後に、 > draw()することができるということでしょうか？ もっと普通に考えてみられてはいかがでしょうか？ 普通(一般的な状態)は 「addChild() したものに何かをする」 のです。 ActionScript 3.0 に限って 「何かをしたものを addChild() する」 ということもできるだけです。 Flash の前身は SmartSketch という「お絵描きソフト」です。 addChild() というスクリプトこそ存在しませんが， 「ステージ上絵を描く」＝「すでにaddChild()済みのものを作る」 ソフトです。 その後何度か名前が変わったりバージョンアップされ Flash という 「お絵描き＋アニメーション作成ソフト」ができました。 これも addChild() というスクリプトこそ存在しません。 しかし 「ステージ上に描いた絵をインスタンス化してモーショントゥイーンをかける」ということはできました。 つまり ステージ上のインスタンス＝すでに addChild() 済みのもの モーショントゥイーンをかける＝何かをする です。 Flash 5 になって やっと attachMovie() というスクリプトが登場しました。 これは ムービークリップシンボル を ムービークリップインスタンス としてステージ上に呼びだすスクリプトです。 attachMovie() はステージに直行です。 シンボル をステージに直行で呼びだして， その後 _xプロパティ や _yプロパティ などを与えるのです。 つまり attachMovie() したもの＝ addChild() したもの _xプロパティ などを与える＝何かする です。 ActionScript 3.0 になって， 何かをしたものを addChild() しても良いようになったのです。 しかし ActionScript 3.0 であっても何であっても 絵や写真などをステージ上(シンボル内のステージ上も含む)に配置して そのもの達に何かの指示をするというのは基本です。 と言うか 単純に普通な話， addChild() （配置）したものに対して何かをするからこそ 「だんだん色が変わる」とか「だんだん大きさが変わる」というアニメーションができるのです。 そうでないとアニメーション(動き)が作れないでしょう？
var myTest:Test = new Test(); のようなことをするときに 引数に tf を指定して↓ var myTest:Test = new Test(tf); その引数を Testクラスの コンストラクタで受け取って その受け取ったものに対して ○○.text = disp; のようにすれば良いと思います。 そもそもカスタムクラスとは ステージ上のインスタンスに対して 直接何かの指示をするものではありません。 そんなことをしたら， 「そのムービーでしか使えないクラス」＝「そのムービー以外ではまったく使い物にならないクラス」 になってしまいます。 「それじゃあ クラスにする意味ないじゃん！」 みたいな。。。 したがって ステージ上にある tf に対して 直接 tf.text = disp; のようにするようなことはできない仕様になっています。
大きさの指示は Flash ではなく HTML（& CSS） ですよ。 それは 100％ に関わらずどの場合もそうでしょう？ SWF(=Flash) 自体を表示させる大きさなんて SWF(=Flash) では決めません(決めることはできません)。 Flashのドキュメントでステージの高さを作りたい高さに設定します。 Flashドキュメントのステージの横幅はいくらでも良いです。 極端な話，10px でも 2000px でも何でも良いです。 それで， ActionScript 2.0(または1.0) の場合， メインタイムラインのフレーム1にでも次のような１行を書きます(他になにかが書いてあれば書き加えます)。 Stage.scaleMode = "noScale"; ActionScript 3.0 の場合， メインタイムラインのフレーム1にでも次のような１行を書きます(他になにかが書いてあれば書き加えます)。 scaleMode = StageScaleMode.NO_SCALE; そうすると， ムービーの中身の大きさが変わらなくなります。 SWF(=Flash) 自体を表示させる大きさは，HTML によっていくらでも変えられますが， SWF(=Flash) の中身の大きさが変わらなくなるということです。 そうやって作った SWF(=Flash) を HTML に貼り付けますが そのときに 横幅を 100% にして，高さを指定サイズにします。 【HTML例】 <embed name="head" pluginspage="http://www.macromedia.com/go/getflashplayer" src="AAAA.swf" width="100%" height="250" type="application/x-shockwave-flash" quality="high"> みたいな感じ。 embed ではなく object の場合も同様 width="100%" height="250" のようにします。 (横に隙間ができるのが気になる場合は CSS でマージンを0 にするとか) それで完了です。 ただ，横幅を 100％ 表示にすると，横が予測できませんから， 背景などの画像はどんなブラウザのサイズで表示されても良いように すごく横に大きなものが必要になります。
その画像の上でマウスを右クリックすると、一番下に[Adobe Flash Player 10 について]と 出ますので、Flashで作成されている事が判ります。 また、右クリックして[Powerd By Progression]をクリックすると、作成したツールも 判るかと思います。
今現在(2010年5月16日 12時02分 現在)， なぜか非表示になっている ＃２ です。 ＃１ の方への補足（お礼）を拝見しました。 > このスクリプトをどうすれば、 > swfを読み込めるのかという事を知りたいので、 >　　 ～略～ > AS1.0のままでもかまいませんので、、。 と書かれていらっしゃいますが， ご質問で書かれていらっしゃるスクリプトの中に JPEG をロードする部分などありませんよ。 this.loadVariables( Pass + "top_flash_url.txt"); これで， Pass = "img_top_flash/"; と top_flash_url.txt を連結したファイル つまり「img_top_flash/top_flash_url.txt」 つまり「img_top_flash フォルダ内の top_flash_url.txt」 を，そのムービークリップ内にロードして， その 「top_flash_url.txt」 に書いてあるもの（JPEGファイル名）をロードするんじゃないでしょうか？ それで，外部テキストで 「ファイル名(拡張子抜き)」 まで指定しておいて， _root.mc[mcName].fileName = Pass+picArray[num]+".jpg"; の部分で拡張子「.jpg」を付け加えていると思います したがって上の +".jpg"; の部分を +".swf"; にすれば良いと思います。 ムービー全体が見えないので何とも言えません。 とにかく書かれていらっしゃるスクリプトには JPEG をロードするスクリプトはありません。 推測することだけしかできません。 多分， JPEGをロードするスクリプトの本体は ライブラリにあるムービークリップシンボルの中に書き込まれてあるような気がします。
getDefinitionByName("re_png") as Class ↓ this["re_png"]as Class re_pngはあくまで変数（クラスへの参照が入っている）。 クラス名として定義（class re_png{}）されていない限り、getDefinitionByNameでは拾えません。 ということで、文字列で変数名を指定し、変数にアクセスするのは、 配列アクセス演算子[]の出番です。
グラフもスクリプトで描きたいのなら Pointオブジェクトの配列を 順番になぞって線を描画する Spriteの拡張クラスを 先につくっておくのがオススメ Pointオブジェクトを基本にしておくと Pointクラスの座標に関するメソッドいろいろ使えるし fl.motion.BezierSegmentを絡ませやすくなって 曲線を描画したりするのにも便利です ここでは使ってないですが 一応処理としてはこんなカンジに なるんではないかなというヤツです var func:Function var t:int=0 var points:Array=new Array() var graph:Sprite=addChild(new Sprite())as Sprite func=function(X):Number{ return Math.abs(X%400-200)*Math.abs(X%400-200)/200+50 } addEventListener(Event.ENTER_FRAME,onFrame) function onFrame(e){ t+=10 while(points.length>45)points.shift() points.push(new Point(t,func(t))) drawLine(points) } function drawLine(points:Array){ var i:int graph.graphics.clear() graph.graphics.lineStyle(1,0x55FFFF,1) for(i=0;i<9;i++){ graph.graphics.moveTo(-t%50+i*50+100,0) graph.graphics.lineTo(-t%50+i*50+100,400) } graph.graphics.lineStyle(1,0x55FFFF,1) for(i=0;i<8;i++){ graph.graphics.moveTo(50,i*50+50) graph.graphics.lineTo(500,i*50+50) } graph.graphics.lineStyle(2,0xFF5555,1) graph.graphics.moveTo(points[0].x-t+500,points[0].y) for(i=1;i<points.length;i++){ graph.graphics.lineTo(points[i].x-t+500,points[i].y) } }
言い方が悪いようですが 初心者過ぎてか質問という土俵にも立てていらっしゃらないようです。 > loadMovieNum("1.swf", 0); いったい何時代の Flash を作成しようとされているのでしょうか？ すっっっっっごい古くさいですよ。 作成環境や，パブリッシュしたい SWF が かなり古いもの(または Flash Lite 1.x) でしたら， そうする理由もわからないでもないですが， それならそうと書かれないと，「どの土俵？」なんだかさっぱりわかりません。 > gotoAndPlay("start"); あの...，ですね， loadMovieNum("1.swf", 0); をした時点で， そのタイムラインは「1.swf」に奪われてしまうんです。 つまり，その後の gotoAndPlay("start"); なんて吹っ飛んでしまうのです。 その他の状況もさっぱり何をかかれているのかわかりません。 せめて 「Flash 作成 ソフト と そのバージョン」 （例： Flash 5，Flash MX ，Flash MX 2004， Flash 8 ，など） と パブリッシュしたい SWF の Flash Player のバージョン(または Flash Lite のバージョン) は書けないものでしょうか？
ボタンのオブジェクトが全部1つのレイヤーに集結してません？
JavaScriptを通したときと、通さない時で設定しているパラメータが違うのだと思いますが？ 特に、 quality="high" あたりがあやしいかと。 シャギー（ぎざぎざ）がかかる、と考えるよりアンチエイリアスが掛かっていないと考える方が適切な現象ではないかな？ SWFオブジェクトを貼りつけているタグの違い、そこを中心に確認してみてください。 ※JavaScriptで動的に生成していても、最終的にはタグを生成しているハズですよ。
最後のリンクが重複していたようで間違っていました http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … フィルタリングするやり方もありますね。
<param name="digitalcampus" value="images/bn.swf"/> を <param name="movie" value="images/bn.swf"/> にしてみてください。
質問者様の携帯電話の型が分からないので確実とは言えませんが開くたびに画像を変える事は可能です。 私の使っている auのK002では、メニュー→画面表示→ディスプレイ→待受画面→壁紙設定→フォルダ指定と　なっています。 指定したフォルダに複数の画像を入れておけば、携帯を開くたびに画像が変わります。
とりあえず if 文 を無くすと次の3行にできると思います。 ----------------------------- mc1.gotoAndStop(aaa1 + 1); mc2.gotoAndStop(aaa2 + 1); mc3.gotoAndStop(aaa3 + 1); ----------------------------- それで，この3行を， 「for文」 と 「配列アクセス演算子」を使って回すと次のようにできます。 ----------------------------- for (i=1; i<=3; i++) { this["mc"+i].gotoAndStop(this["aaa"+i]+1); } ----------------------------- こんな感じでいかがでしょうか？
＃１です。 > 「直表示」ではない「表示」とはどのような方法を指すのでしょうか？ 普通通りobjectタグやembedタグでHTMLに貼り付けるということです。 とにかくブラウザとしては ActiveXコントロール を１つに定めないとならないわけで， その自動判別プログラムがないブラウザなどは表示できません。 SWF を ブラウザ に直接表示(フレーム内に直接表示も含む)できるのは， そのブラウザが自動的に簡易 objectタグ を生成して自動補完するからのようです。 普通ではない場合 とは， 携帯電話用のFlashを作成して そのFlashを携帯電話でインタラクティブ再生させるときです。 その場合に限って SWF を携帯電話に直表示させます。
xmlLoad関数が上書きされてしまうので、 xmlLoad関数をfor each文の外に書くようしましょう。 ------------------------------------------ for each (var k:String in xmlUrl) { xmlData = new URLLoader(); xmlData.addEventListener(Event.COMPLETE, xmlLoad); xmlData.load(new URLRequest(k)); } function xmlLoad(event:Event):void{ var rss:XML = new XML(event.target.data); . . . } ------------------------------------------
状況によるのでこの方法ではできない場合もありますが， レイヤーを４つ作って 　マスク 　人物 　赤背景 　グレー背景 の順に絵などを配置して， マスクを 「人物」レイヤー と 「赤背景」レイヤー の 両方にかければ良いのではないでしょうか？ 　 　マスク ←マスクレイヤー 　　　人物 ←マスクがかかるレイヤー 　　　赤背景 ←マスクがかかるレイヤー 　グレー背景 　
> その場に画像を残しておく方法がわかりません。 何がわからないのだか よくわかりませんが 虹にマスクをかけて モーショントゥイーン などでそのマスクを動かせば 聞こうとされている内容のことができるかもしれません。 「FLASHのお勉強_モーショントゥイーンmotiontween_マスク」 http://www.geocities.jp/flashiroha/motion/motion … 「アニメーションの基本（シェイプトゥイーン、マスクレイヤー）」 http://pryo3.is.kochi-u.ac.jp/~miyoshi/opencours … 「flash マスク」 http://www.tokiwa.ac.jp/~shio/el/flash/mask.htm 「フェードインする文字　FLASHRAVE - FLASH 講座 -」 http://flashrave.org/anima/fade_in/index.html
これはフォトショップやFlashの問題ではなく、HTMLの問題ですね。 タブを反転させるというのは、単に２つの画像を切り換えているだけで、そう見せかけています。ようするに、2色の絵を作って置き換えています。 これをFlashで個々にパーツとして作るのではなく、連動する部分を全てFlashで作成します。その場合、テーブルも必要ありません。 Dreamweaverはそれを表示するだけなので、Flashで書き出しをすれば、HTML用の表示タグもできあがります。 タブを反転するだけなら、JavaScriptでも可能です。その場合はFlashは必要ありません。
> つまり、配列の宣言と値の代入は > 分けて書くしかないのでしょうか？ 普通に次のようにすれば良いと思います。 -------------------------------- var box:Array = new Array(); for (var j=0; j<1; j++) { box[j] = new Array(); for (var i=0; i<10; i++) { box[j][i] = i + j; } } trace(box[0][1]); -------------------------------- 　
当初の設定は、index.htmlとAAA.swfは同じフォルダにあると言うことで、ファイル位置の相対指定で見つけてくれますが、後の設定ではindex.htmlファイルとの位置関係で、相対位置が求められますから、質問の設定から察するに、./A/AAA.swf といった ./ を入れたindex.htmlの機転フォルダを明記した記述が必要なのでしょう。 もし、親フォルダに移動したのでなければ、./ や ../ を活用してフォルダの相対指定をしていきます。 もしくは、 C:\my document\html\a\AAA.swf のような絶対位置指定をすれば反応するはずです。
#2です。 >「半年勉強してもある程度作れるようにならなければ、 >それ以降勉強してもお金と時間を浪費することになって >しまうだろう。」という意味でしょうか？ おっしゃる通りです。プログラミングやウェブ制作というものは 誰でもできるものではありませんので、当然向き不向きが存在します。 受験勉強と同じことで、それほど簡単なことではないです。 ひとつ作るだけで終わり、ということでしたら今回勉強すれば良いですが、 先に申しましたように、作り続けていくには、技術を勉強し続けなければなりません。 私もこの業界で、勉強を始めたものの挫折した人は多く見ていますので、 自分が作れる人間であるかどうかという判断は極力早い段階で見極めるべきだと思います。 なぜこういったことを申し上げるかというと、 出来る人というのはあまりゴールまでどれくらいかかるか、 ということを意識しないんですね。 正確に言うと、ある程度学習した段階で、どれくらいの努力が 成果に結びつくか、というのは自ずと判断できるようになります。 仰られるように、ActionScriptの上級者を目指すのではなく、 まずはご自分が実現したいことをするためにはどうするか、 に焦点を絞って学習されれば良いと思います。 私もプロですが、はっきり言ってAS3をすべてマスターしているわけではありませんし、 必要なことは必要になった時に勉強するようにしています。
あまりAS3のOOPについて書かれているものは少ないですが、 こちらの書籍はそれなりにわかりやすいと思います。 (レビューにあるように、誤字脱字が多いですが。) ActionScript 3.0 : デザインパターン http://www.amazon.co.jp/gp/product/4798118362/ Java言語で学ぶデザインパターン入門 (Javaですが、as3に応用が利きます) http://www.amazon.co.jp/dp/4797327030/ あとは書ける人のソースを見ることが一番早いので、 できる人がいる職場に就職するか、友達になるか、 が一番近道だと思います。 最初からあまりOOPにこだわりすぎる必要もありませんが、 仕事をしていく上では必要になると思いますので、 がんばってください。
画像は読み込めて、文字は駄目、なんですよね。 ＞URLRequest("menu/menu_txt"+btn_name_txt.charAt(3)+".txt"); の前に trace("menu/menu_txt"+btn_name_txt.charAt(3)+".txt"); を書き足して、パブリッシュプレビュー時に出力ウィンドウで btn_name_txt.charAt(3)の部分がnull、と出力されていたら、 setURLRequest=eval("menu/menu_txt"+btn_name_txt.charAt(3)+".txt"); URLRequest(setURLRequest); にしてみるとなんとかなるかもしれません。 ASが1.0なら、これで結構通るのですが。
^abc は行の始めのabcの意味だけど [^abc] はaでもbでもcでもないって意味 ^@.* が妥当かと 参考URL：http://ja.wikipedia.org/wiki/正規表現
Flashについているチュートリアルを実行すれば、そういう練習もできたと思います。 徐々に見えるようにしたり、消したりというのは、アルファ値を使って透過処理を行います。透明な0%から50%で半透明になり、100%で後ろが透けない状態です。 基本過ぎるので、ダウンロードまでして説明する必要はないと思います。そもそも説明が見つからないのなら、説明無しでダウンロードを用意しているとは思えませんし。
http://www.pageflip.hu/demo.html 上のサイトのサンプルを使ってみては如何でしょうか？
有料のものならFlash CS4がありますが、かなり高いですよね。 CS3なら無料で手に入れることもできますが、もちろん違法です。 無料のものでしたら、知人がparaflaというソフトを使っています。 http://www.geocities.jp/coa9999/download.html 上のURLからVersion1.37がダウンロードできます。 http://www.geocities.jp/para_core/kouza/index.html 使い方は↑を見るといいですよ。
#1です。 offにしていた表示がonになってしまう件についてですが、 参照サイトを見せていただいた限りでは、書かれているシーンと 実際の展開についての関係性を理解しかねますので、 実際にフレームに名称を設定して、 サウンドの切り替え時にそこに移動するようにしてみてはいかがでしょうか。 以下、作業 1 シーン1のステージ上のボタンオブジェクトをクリックして、「タイムライン」の右側に「フレーム1　btn」と表示されているのを確認して、1フレーム目(offの画像があるフレーム)をクリックします。プロパティインスペクタが「フレーム」表示になっていることを確認して、<フレームラベル>の欄に「off」と入力する。 2 2フレーム目(onの画像があるフレーム)をクリックします。プロパティインスペクタが「フレーム」表示になっていることを確認して、<フレームラベル>の欄に「on」と入力する。 3 「タイムライン」の右側の「フレーム1」をクリックして、ステージを表示す る。 4 フレーム1およびフレーム2内のスクリプト内on(release)を on(release){ //サウンド再生中の場合は止める if(play_flg){ snd.stop(); play_flg=false; _root.btn.gotoAndStop("off"); } //サウンド停止中の場合は再生する else{ snd.start(); play_flg = true; _root.btn.gotoAndStop("on"); } } シーンの切り替え音が大きくなる現象については、 表示直後では確認できませんでしたが、 20分程経ってから再びクリックしてみたところ、確認されました。 しかしながら、シーンの切り替え音をどのように指定されているのか、 書かれている内容からは解りかねますので、私には答えられません。 オブジェクト配置とスクリプト内容を、関係性を損なわずに記述されることによって、 きっと詳しい方が知恵を貸して下さることでしょう。 今回も、動作についての保証はできません。 御役にたちましたらばよいのですが。
難しそうでもやらなきゃダメ ActionScriptはAjaxと同じでイベントが基本 というかActionScriptの行き着く先って ほとんどAjaxみたいなもんですからね 難しそうだからってイベント関連を避けてたら 再生ボタンも停止ボタンも作れないし プリローダも作れないし動的なアニメーションもできないし なんにもできませんよ 『動画の再生が終わったら次のフレームに』なんて これ以上ないくらい簡単でひねりのない 絶好のイベントリスナー基本習得のテストケースです あと#１にも書いてますが 何秒後に処理を実行する というのはsetTimeoutを使います しかし、getTimerやsetTimeoutは 再生が遅れてようが データ読み込み終わってなかろうが カウントが開始した時点から かまわず同じように時間を カウントし続けるので 同じようにsetTimeoutとか getTimerとかで制御されてる ものとタイミング合わせる以外では 使わない方がいいです このケースでは大丈夫だろうとか 油断してるとまさかのISDNとか それでなくても公共のWi-Fiとか いくらでも再生が遅れてしまう 要因というのはあります
周囲に出来る人がいないので常に独学でやってきました。 以前はリファレンス本や実例集を手元に置いて、やりたいことと照らし合わせていましたが、今はネットで検索ですね。 スマートなコードを書けるほどは熟達していないので、とりあえず自分の知識でできる方法で解決しています。 無理に理解できないコードを利用してまでスマートにしようとは思いませんね。あとで判らなくて困るのは自分ですから。 行き詰まったときは、とにかくあちこちに停止個所を作って、途中の変数を調べまくりますね。 あとは、テストを繰り返しながらやってます。かなり泥臭いと思います。
rootってDisplayObjectのプロパティです testがDisplayObjectの拡張クラスで rootにaddChildされてたら rootプロパティがありますが DisplayObjectの拡張クラスでなければ そもそもrootプロパティが存在せず rootにaddChildされていなければ rootプロパティはnullです DisplayObjectの拡張クラスにして rootにaddChildするのも手ですが 多分１フレーム遅れて処理されてるような そんなカンジになってしまうかもしれません おとなしくtestクラスに targetプロパティなど作って 動かしたいインスタンスへの 参照をわたしてやりましょう
＃１です。 補足で書かれていらっしゃることがよくわかりませんが。 > ２回目以降の画象をloadClipしても表示されないようなんですけど。 そういう現象は起こりませんよ。 外部PNG画像が「gazou1.png」「gazou2.png」「gazou3.png」という３枚であったとします。 また， 各画像をロードするためのボタン「btn1」「btn2」「btn3」と MC「loader」から外部画像をアンロードするためのボタン「btn0」をステージ上に作成したとします。 その場合のスクリプト例↓ ------------------------------------------- //空のMC「loader」を「load_mc」の中の深度0に作成 //(「loader」はMCを参照する変数名　「_mc」はインスタンス名) var loader:MovieClip = load_mc.createEmptyMovieClip("_mc", 0); //MovieClipLoaderクラスのインスタンス「mcl」を作成 var mcl:MovieClipLoader = new MovieClipLoader(); //ロード監視用のインスタンス「loadListener」を作成 var loadListener:Object = new Object(); //画像ロード完了後の動作を定義 loadListener.onLoadInit = function(target:MovieClip):Void { //画像をロードしたMCを //自分の大きさの半分 -方向 の座標に移動 target._x = -target._width / 2; target._y = -target._height / 2; }; //「mcl」のロード監視役として「loadListener」を登録 mcl.addListener(loadListener); //---↓ココから後を変更↓--- //ボタン「btn0」クリック時の動作を定義 btn0.onRelease = function():Void { //MC「loader」にロードされたものをアンロード loader.unloadMovie(); }; //変数 i を 1,2,3 と変えながらループ for (var i:Number = 1; i <= 3; i++) { //「btn1」～「btn3」に固有の変数 n を設定 this["btn" + i].n = i; // //「btn1」～「btn3」クリック時の動作を定義 this["btn" + i].onRelease = function():Void { //MC「loader」をターゲットとしてPNGをロード mcl.loadClip("gazou" + this.n + ".png",loader); }; } ------------------------------------------- 空のMCをスクリプトで作成しても，手動で作成しても，ムービークリップであることには変わりありません。 手動で作成したムービークリップと同じように， MC「loader」 も一度作成すると，何度でもロードに使うことはできます。 また， ロードする度に MovieClipLoader のイベントリスナーの再定義や登録などもする必要はありません。 　
＃１ です。 > このURLにリンクを張るにはどうしたらよいのでしょうか？ 知りませんよ，そんなことは。。。 例えば 何かのボタンにリンクを貼りたい場合はボタンを用意してインスタンス名(または変数名)を付けておいて， 「そのボタンクリック時に何某かのページを表示させる」 というプログラムを組まなければなりませんし， またたとえば 複数のテキストフィールドを用意して各々テキストフィールド選択時にどこかのページにジャンプさせたいのでしたらそのようにプログラムを組まなければなりませんし…。 その辺のこと(プログラミング以前の問題)について何にも書かれていないのですから， 何をどうすれば良いなど書けるわけないでしょう？ ＃１に書いた通りでとりあえず表示出来ているのでしたら， コードを次のように変えてみられてはいかがでしょうか？ これも１つの方法です。 ------------------------------------------------------ var xmlURL:URLRequest = new URLRequest("link.xml"); var xmlLoader:URLLoader = new URLLoader(); xmlLoader.load(xmlURL); var myXML:XML = new XML(); xmlLoader.addEventListener(Event.COMPLETE, xmlLoadStart); function xmlLoadStart(e:Event):void { myXML = XML(xmlLoader.data); var str:String = ""; for (var i:int=0; i<=2; i++) { str += "<u><font color='#0000FF'><a href='" + myXML.url[i] + "'>" + myXML.list[i]. @ name + "</a></font></u><br>"; } link_txt.htmlText=str; } ------------------------------------------------------ 　　
はじめに、trace("e.currentTarget.x");ですが trace(e.currentTarget.x)の間違いということで進めます． >親mc、子mcChild←のような階層のムービークリップの場合 mcChildがインスタンス名の場合は以下で 親からの相対位置xが取れます． mc.addEventListener(MouseEvent.CLICK, test); function test(e:Event):void { trace( e.currentTarget.getChildByName("mcChild").x ); }
PhotoClassはBitmapを拡張しているので、PhotoClass自体のbitmapDataプロパティを Photoにすれば良いです． つまり、現在は以下のようにされていますが、 ■PhotoClass（Bitmapの拡張クラス） 　　→Bitmapを生成 　　→BitmapDataを生成 　　　… ----------- ■メインタイムライン 　　→PhotoClassを生成 　　　… 以下のようにします． ■PhotoClass（Bitmapの拡張クラス） 　　→BitmapDataを生成 　　　… ----------- ■メインタイムライン 　　→PhotoClassを生成 　　　… 具体的には以下の通りです． ■PhotoClass ---------------------------------------------------------------------- package { import flash.display.MovieClip; import flash.events.Event; import flash.display.Bitmap; import flash.display.BitmapData; import flash.utils.getDefinitionByName; import flash.display.PixelSnapping; public class PhotoClass extends Bitmap { private var myClass:Class;//クラス名 private var bmd:BitmapData; //private var bm:Bitmap;←必要なし //コンストラクタ public function PhotoClass(_name:String) { myClass = Class(getDefinitionByName(_name)); bmd = new myClass(0, 0); this.bitmapData = bmd; pixelSnapping = PixelSnapping.ALWAYS; smoothing = true; init(); } public function init():Bitmap { return this; } } }
ActionScript のバージョンや開発環境がわかりませんが、 AS1、2なら getURL( "任意のURL" )、 AS3なら navigateToURL( new URLRequest( "任意のURL" ))で 移動します． >urlも外部から変更できるようにしたい 一例として． 画像の親となるMovieClipに適当なプロパティを持たせて 任意のURLを設定し、 MovieClipをクリックしたら→そのMovieClipのプロパティのURLへ移動 というスクリプトを書けば良いです．
私の知る限り、ActionScript のみでは不可です． Javascriptと連携させて力技でできるのかもしれませんが、 ブラウザ側のスクロールバーを非表示にして flash側に実装したスクロールバーのみで完結させる（またはその逆）のが 現実的ではないかと思います．
再び失礼します、No.1です． 私自身Flash Player 9以上対象の案件が多いので 不勉強ながら使った事が無かったのですが Flash Player 10以上対象ならFileReferenceの新しい機能が使えますね． http://blogs.adobe.com/akamijo/archives/2008/07/ … FileReference クラス自体は以前からありますが (Playerがローカルファイルのデータを直接操作することができなかったため サーバにファイルをアップロードする位のクラス) Flash Player 10からユーザ操作により ローカルのファイルを直接（←重要）開いたり 保存したりできるようになっています． 説明しておいて何ですが、SharedObjectはデータ保存としては 弱いと個人的に思うので、上記クラスの新APIを使う事により 前回の説明とは異なる設計ができそうです． ただ、CS3をお使いとの事なので Flash Player 10 に対応するコンパイラとエディタ （フリーでFlex SDK +FlashDevelop等）を 使うか、Flash CS4が必要になります． No.2のかたが仰る通り AIRアプリケーションにするのも良いと思います． （その場合ユーザ側にAIRランタイムをインストールさせる必要があります．） 参考URL：http://blogs.adobe.com/akamijo/archives/2008/07/ …
>AS2.0からAS3.0にうまく変換できません 根本的なことを理解しないまま置き換えて変換しようとするより、 まずは元のスクリプトがどういう処理／設計になっているかを ひとつずつ理解して、それを元に1から組み立ててみることをおすすめします． >添削 ほぼすべて変更する必要があります． このため添削は省き、変換した場合の一例をあげておきます． stage.scaleMode = StageScaleMode.NO_SCALE; stage.align = StageAlign.TOP_LEFT; var alphaFlag:Boolean = true; var bgPic:Sprite = new Sprite(); var myMcl:Loader = new Loader(); myMcl.contentLoaderInfo.addEventListener( Event.COMPLETE, onComplete ); //自前で画像を用意し、とりあえずswfと同じフォルダに入れ、 //その画像へのパスを○○.jpgに入れます myMcl.load( new URLRequest( "○○.jpg" )); function onComplete( e:Event ):void { addChild( myMcl ); addChild( bgPic ); bgPattern( bgPic, myMcl.width, myMcl.height ); resizeHandler(); stage.addEventListener( Event.RESIZE, resizeHandler ); bgPic.addEventListener(Event.ENTER_FRAME, EnterFrameHandler); } function EnterFrameHandler( e:Event ):void{ if ( alphaFlag ) { e.currentTarget.alpha -= 0.05; if (e.currentTarget.alpha <= 0) { alphaFlag = !alphaFlag; } } else { e.currentTarget.alpha += 0.05; if (e.currentTarget.alpha >= 1) { alphaFlag = !alphaFlag; } } } function bgPattern( sp:Sprite, w:Number, h:Number ):void { var bmd:BitmapData = new BitmapData( 4, 4, true, 0x00000000 ); var dot:BitmapData = new BitmapData( 2, 2, false, 0x000000 ) bmd.copyPixels( dot, dot.rect, new Point() ); sp.graphics.beginBitmapFill( bmd, null, true, false ); sp.graphics.drawRect( 0, 0, w, h ); sp.graphics.endFill(); } function resizeHandler( event:Event = null ):void { var sw:Number = stage.stageWidth; var sh:Number = stage.stageHeight; myMcl.x = ( sw - myMcl.width ) / 2; myMcl.y = ( sh - myMcl.height ) / 2; bgPic.x = myMcl.x; bgPic.y = myMcl.y; }
var 任意の変数名(例えば : video) :Video = new Video(表示させたい横幅 , 表示させたい縦幅); addChild(video); video.x = 動画を表示させたい位置 : x方向 / int or Number; video.y = 動画を表示させたい位置 : y方向 / int or Number; var 任意の変数名(例えば : nc) :NetConnection = new NetConnection(); nc.connect(null); var 任意の変数名(例えば : ns) :NetStream = new NetStream(nc); video.attachNetStream(ns); ns.play("目的の動画URL" / Strig); ns.pause(); ↑ここまでが動画を読み込み→再生→ポーズまでのギミック 任意のインスタンス(例えば : btn01 / MovieClip).addEventListener(MouseEvent.CLICK , リスナー関数(例えば : bt01Click) ); funtion bt01Click(e :MouseEvent) :void { ns.play("目的動画URL" / String); ns.pause(); } ↑ここまでが動画切り替えボタンのギミック　これと同じものを4個作る 任意のインスタンス(例えば : playButton / MovieClip).addEventListener(MouseEvent.CLICK , リスナー関数(例えば : videoStatu) ); function videoStatus(e :MouseEvent) :void { ns.play(); } ↑ここまでが再生ボタンのギミック 但し、動画は再生されますが手順のとおり作っても Error #2044: ハンドルされていない AsyncErrorEvent : text=Error #2095: flash.net.NetStream はコールバック onMetaData を呼び出すことができませんでした。 error=ReferenceError: Error #1069: flash.net.NetStream にプロパティ onMetaData が見つからず、デフォルト値もありません。 at Mycontent_fla::MainTimeline/frame1() とエラーが出力されます。 onMetaDataに関する情報はご自分で調べて下さい。 以上です。
やり方は幾通りかありますが、 私がよくやる方法は ActionScriptから>JavaScriptの関数を呼び 関数内で自ウィンドウに別htmlを表示します。 コーディング例 <ActionScript> import flash.external.*; //JavaScript関数：goPageを呼ぶ ExternalInterface.call("goPage()"); <JavaScript> <html> <head> <script type="text/javascript"> <-- function goPage(){ //abc.htmlにリダイレクトする window.location.href= "http://xxx/xxx/abc.html"; } //--> </script> <title></title> </head> <body> (省略) </body> </html>
タイムラインイベントが発生する度に実行する。 onEnterFrame = function() { //フラグで逆再生中か判定する。(フラグはプログラマーが定義＆設定) if (_root.gyakuflg == true) { //当フレームが先頭フレームで無ければ、一つ前のフレームを再生する if (_root.main._currentframe > 1) { _root.main.prevFrame(); } } };
こんばんは。知っている限りで回答しますね。 まず、前提としてCS5がリリースされても、iPhoneでFlash（swf）は動作しません。 CS5が制作できるのはiPhoneのアプリです。 これは、iPhoneでのFlash再生をAppleが認めないので、Adobeが考えた抜け道でしかありません。 １）について。 FlashCS5はまだリリースされていませんが、以下のC#で書けるソフトがあるようです。 http://www.atmarkit.co.jp/news/200901/29/mono.html ただ、前提の通り、FlashCS5で書き出せるのはiPhoneのアプリです。 その仕組みは、ちょうどJAVAみないな感じです。 CS5で作られたアプリには、Flashで作られたコードをリアルタイムでiPhoneが実行できるコードへ変換する小さなコンパイラが組み込まれているそうです。 ２）について。 なので、FlashCS5で作られたアプリでもFlashプレイヤーは必要ありませんが、ただのアプリとしてしか動きません。従来通り、ブラウザではFlash（swf）は再生されることはありません。 さらに、AppleはOS4.0の規約で、このコード変換の仕組みを許可しない方向へ持って行くようでブーイングの嵐が巻き起こっています。 http://www.itmedia.co.jp/news/articles/1004/12/n … これはFlashに限らず、前述のC#のものも当然含まれます。 つまり、CS5からFlashアプリが書き出せる機能も、iPhoneOS4.0から事実上使えなくなるということです。 （まぁ、だからブーイングの嵐なのですが） このままだと開発者がiPhone離れを起こして、Androidへ民族大移動が始まりますね。（すでに起きている？）
こんにちは navigateToURL(cntPage, "_self"); で、どうですか？
調べ方は「リキッドレイアウト」または「リキッドデザイン」です。 http://www.google.co.jp/search?hl=ja&source=hp&q … http://www.google.co.jp/search?hl=ja&safe=off&q= … ActionScript のバージョンによって記述も変わりますから、 先にバージョンを決めるか調べるかしたほうが良いですよ。
パラパラマンガに ActionScript がなぜいるのか また どう使うのかさっぱりわかりません。 普通はひたすら １コマ(1フレーム) ずつの絵を描き続けるだけです。 http://f-site.org/articles/2005/12/05231617.html http://f-site.org/articles/2006/05/12160729.html http://f-site.org/articles/2005/10/12042756.html
いったい何がしたくてどこへ行こうとされてるんだろう？？？ ＃１です。 > 「ムービークリップ内の各フレームに画像を置いて > その表示フレームを変える」をしたかったのです。 そうしても見かけの動作は結局同じですよ。 10秒間隔(例) で表示が切り替わることには変わりありませんから問題解決にならないと思います。 > 実はタイムライン上にて別のアニメーションを設定しようと > 考えておりますので それだと 最初のご質問文の > 一定時間停止（例えば10秒間）させた後、 > 再びランダムで表示…10秒間停止後 これと矛盾します。 結局，10秒とかいう秒数は関係なくて， タイムラインのフレームに動作は依存させる必要があるのでしょう？ しかし 何度ご質問を読みなおさせてもらってもしたいことがわかりません。 > 画像がタイムラインの順番に関係なくランダムで表示されて、 やっぱり意味不明です。 意味不明なので， 見かけの動作は結局同じですが > 「ムービークリップ内の各フレームに画像を置いて > その表示フレームを変える」 スクリプトを書きます。 たとえば pic_mc というインスタンス名を付けたムービークリップをステージ上に配置して， pic_mc 内の フレーム1 ～5 の各フレームに１枚ずつ５枚の画像を配置します。 root など pic_mc が存在するタイムラインのフレーム1のスクリプト↓。 ---------------------------------------- //初回のみ実行させるためのif文 //もし変数 flg が true でなければ if (!flg) { //変数 flg を true にする var flg:Boolean = true; //関数 ｒａｎｄoｍShowMC を定義 function ｒａｎｄoｍShowMC ():void { //変数 rnd に 1～5 のランダムな整数を代入 var rnd:int = Math.floor(Math.random() * 5) + 1; //「pic_mc」をランダムなフレームで停止 pic_mc.gotoAndStop (rnd); } //関数 ｒａｎｄoｍShowMC を 即実行 ｒａｎｄoｍShowMC (); //10000ミリ秒間隔でイベントを発生するTimerインスタンスを作成 var myTimer:Timer = new Timer(10000); //関数 ｒａｎｄoｍShowMC をイベント発生毎に実行するように設定 myTimer.addEventListener(TimerEvent.TIMER ,function(){ｒａｎｄoｍShowMC()}); //タイマースタート myTimer.start (); //初回のみ実行させるためのif文終了 } ---------------------------------------- 　
onClipEvent (enterFrame) {○○} の意味はわかっていらっしゃいますでしょうか？ 「○○ を １フレーム進む時間ごとに毎回実行せよ。」 ということです。 その ○○ の部分に，次のようなことが書かれています。 if (this._y<=-10) { gotoAndPlay(2); } 上の意味は， 「もし このムービークリップの y座標 が -10 以下であれば，このムービークリップ内のフレームを フレーム2 に進めて再生せよ。」 ということです。 上で書いたスクリプトを続けて書くと， 『「もし このムービークリップの y座標 が -10 以下であれば，このムービークリップ内のフレームを フレーム2 に進めて再生せよ。」を １フレーム進む時間ごとに毎回実行せよ。』 となります。 つまり， 「ムービークリップの y座標 が -10以下 であれば フレーム2 に行き続けろ。」 　　↓言い換え↓ 「ムービークリップの y座標 が -10以下 であれば フレーム2 をずっと表示させよ。」 となるのです。 大きな間違いが少なくとも１つありますね。 また， フレーム2 に進めて再生させるのはそれを書いたムービークリップ内のタイムラインの話ですから， 階層もおそらく違っているのではないかと推測されます。 ムービークリップに書いたスクリプトを 次のような感じにすれば良いのではないかと思います。 ------------------------------ //このムービークリップが表示されたときに実行 onClipEvent (load) { //変数 spd の値を 5 にする spd = 5; //フラグとなる変数 flg の値を false にする flg = false; } //１フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { //このムービークリップの y座標 を spd ずつ減算 this._y = this._y-spd; //このムービークリップの y座標 が -10 以下で なおかつ flg が false であれば if (this._y<=-10 && !flg) { //変数 spd の値を 0 にする spd = 0; //変数 flg の値を true にする flg = true; //親階層をフレーム2から再生 _parent.gotoAndPlay(2); } } ------------------------------ 　
bytesTotalってprogressイベント毎に取得されるですけど これ、ヘルプにも書いてるんですが ファイルが軽いと一度もprogressイベントが 発生しないってことがあるんですよ で、どうやらブラウザのplayerによって 仕様が違うのか同じ重さでも playerによってprogressが発生したり しなかったりする場合があるみたいです だからprogressイベントのリスナーや bytesTotalとかの情報を使う場合は 一回もprogressイベントが 発生せずにロードが完了しちゃった 場合を想定したコードを書くように したほうがいい様です
＃１です > また、「ステートメントはonClipEventハンドラ内でなくてはいけません」 > というエラーメッセージも出るようになりましたが、Flash Liteに > onClipEventはないようなのでさらに分からなくなってしまいました。 なんで onClipEvent なんかが登場するのです？ Flash Lite1.1 にはそんなものはありません。 「元のままで動く」のでしょう？ ということはそこに onClipEvent なんて使われていないのでしょう？ 突如 onClipEvent など論外なものを登場させても意味がわかりません。 そんなものを登場させたら元から動いていないはずです。 Flash Lite1.1 だと フレーム1 と フレーム2 などをループ再生させて時刻を表示させます（よね！？）。 その フレーム1 と フレーム2 のループを， メインのタイムライン(_root (Flash Lite1.1 の場合 "/")) でループさせるのではなく， ムービークリップ内に全てを持って行ってループ再生させれば良いだけでしょう。 そういうことを書いたのですが。。。 （onClipEvent (おそらく onClipEvent(enterFrame) ) など関係ありません。
私もたまになる症状です。 そういう場合は、例えば写真が切り替わって表示されたとき、 分割されたままのムービークリップで表示しておくのではなく、 別途分割前の写真を用意しておき、そちらに表示を切り替えるというのはどうでしょうか？ つまり切り替えエフェクト（円の動き）が終わって次の写真が出たら、別途用意しておいた分割前の画像を表示させるという感じです。 根本的な問題解決ではないですが、それで写真の切れ目は無くなります。
AC_RunActiveContent.jsがHTML付きの フラッシュ書き出した時に自動的ついてくれますが アレじゃだめなんですか？ IEの『表示してもいい？』って聞いてくるのもそれで防げるし プレイヤーが無かったらダウンロードのリンクもしてくれるような コードも付けてくれますし、なにか表示方法に こだわりたいとかなかったら普通にアレ使っとけばいいと思うんですが
１．画像ファイルをステージに読み込む。 ２．１をムービークリップに変換する。（右クリックでシンボル変換） ３．２をタイムラインを用いて反転するアニメーションを作る。（右クリックで編集） ※タイムラインの進行スピードはフレームレートで設定調整 // 横反転（ムービークリップのscaleXプロパティーにー１設定） this.scaleX = -1; // 縦反転（ムービークリップのscaleYプロパティーにー１設定） this.scaleY = -1; とりあえず以上です。 不明点、質問があればまたどうぞ。
JavaScriptで書かれていますが実際にはFlashファイルにしてストリーム再生させるサイトですね（最近多い）。 またgifアニメもし要しているのと、画像スワップは単純にJavaScriptですね。 Flashムービーの作成はソフトウエアはピンからキリまであるので以下参照 http://www.google.co.jp/search?sourceid=navclien … 企業によってはセキュリティポリシーでFlashなどのアドインのインストールを禁止にしている場合も有りその場合は再生されません。
> my_so = SharedObject.getLocal("so1") "so1" １つでは共有できません。 solファイル のローカルファイルパスが抜けています。 「FN0204003 - SharedObject.getLocal() - Flash テクニカルノート」 http://www.fumiononaka.com/TechNotes/Flash/FN020 … パスに関しては上記ページに書いてありますが， ごちゃごちゃ考えるのが面倒な場合は， サイトのrootディレクトリに対応するローカルディレクトリに sol ファイルを保存するようにすれば簡単です。 と言っても難しく考えずに， "/" を第２引数に加えれば良いだけですが。 （その場合，なるべくユニークな(他とかぶらないような)名前の方が良いです。） ◎簡易スクリプト例 ---「a.fla(a.swf)」------------------------- my_so = SharedObject.getLocal("so1", "/"); my_so.data.date = "今10時です"; my_so.flush(); ---------------------------------------- ---「b.fla(b.swf)」------------------------- my_so = SharedObject.getLocal("so1", "/"); trace("my_so.data.date="+my_so.data.date); ---------------------------------------- 「a.swf」を開いた後に「b.swf」をムービープレビューすると結果が出力されます。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 上でも少し書きましたが， ローカルPCの solファイル 格納専用場所のサイトやローカルフォルダのSWFに応じたフォルダに solファイル ができます。 私の場合(Windowsの場合)は次のような場所です。 C:\Documents and Settings\ユーザ名\Application Data\Macromedia\Flash Player\#SharedObjects\○○\××\～～ パスを書かない場合はその場所の「a.swf」対応フォルダの中に solファイル ができます。 そこはファイルごとの格納場所ですから共有できません。 パスを書くと「a.swf」対応フォルダより上のフォルダに solファイル を保存することができます。 そこが「a.swf」と「b.swf」の両者の親元であれば，共有できるということになります。 Webサイト上の SWF を閲覧する場合は，ドメイン名ごとにフォルダができます。 (例：Adobe サイト だと「adobe.com」フォルダ ができる) そのドメイン名フォルダよりも上の階層に solファイル を保存することはできません。 my_so = SharedObject.getLocal("so1", "/"); と書いた場合は，ドメイン名フォルダの直下に 「so1.sol」 ファイルができます。 そのドメイン名フォルダの直下を利用するとごちゃごちゃ考えずに簡単にできますということを上に書いたわけです。 ただし，別用途の sol を同じフォルダに置いた場合， 名前を同にすると競合問題が発生するので，ユニーク(他とかぶらないような)な名前が良いです。 　
私もFlashは独学なのですが、パッと見た感じ onClipEvent (enterFrame) の中に this.hi= 0; が入っているからではないでしょうか？ これのせいで毎回”hi”が初期化されています。 ムービークリップ内で初期化処理をしたいなら、this.hi= 0;は(enterFrame)ではなく、 (Load)に入れてはどうでしょうか？ 間違っていたらすみません。
一応 var ppt1:String; ↓ public static var ppt1:String; test.ppt1 = "あいうえお"; ↓ ClassA.ppt1="あいうえお"; としてやればお望みの動作はするでしょうけど 書いてる質問から見ると クラスとインスタンスについて あんまり理解してないですね？ とりあえずstaticの意味を調べれば それで大体わかると思います
一回のコードの実行のなかで画像のロードを 待つってことはできないです だからロード完了のイベントを待って 戻り値を返すなんて事はできません スレッド系統のライブラリがあれば できないこともない… …ってこともないです あれも結局イベントをまって次の コード実行に移ってるだけなので やっぱり戻り値を返すのを待つ なんてことはできません なんでfinishで画像を読み込んだ続きの処理を 直接実行させたくないのか？ 答えはそれによるんですが 単純にコードを簡単にしたいとか そういう理由ならあきらめて finishで続きの処理を実行させるようにしましょう おそらくそれが一番単純で簡単です もしそうじゃないなら 例えば、このfunc1を違う引数で実行して 違う画像をロードしてその画像に基づいた 情報を利用する処理が複数ある、というならば その違う画像をロードするfunc1で作った それぞれのLoaderを戻り値にして それぞれにそれぞれのCOMPLETEを待たせるとかしましょう 読み込みの完了を待って戻り値を返す事はできません あるいは、このfunc1の画像が読み込まれた後に それを利用して実行する続きの処理は 全然違う所にあって処理のタイミングが はかれないんだっていうなら カスタムイベントを使いましょう （もしかしてdispatchEventしたかったの？ っていったのはこれです） 場合によってはEventクラスを拡張して プロパティを乗っけてやるのも手です
Flash は大雑把に言えば SWF ファイルのことですね。 Flash オーサリングツールで作る 実行用(閲覧用) ファイルのことです。 ActionScript は SWF をインタラクティブに動作させる言語です。 一般的なものに喩えるなら Excel と VBA のような関係です。 私は JavaScript ならある程度わかりますが Java に関しては全くわからないので何とも言えませんが， ActionScript 1.0 (2.0) は JavaScript とよく似ています。 ActionScript 3.0 は Java に大分似てきたと言われていますが，何がどう似ているのか私にはわかりません。 一般的にはなんとなくそうらしいです。 少なくとも Java をわからなくても ActionScript はできると思います。 Flash(ActionScript)，特に ActionScript 1.0 や 2.0 で最も基本で大切なものは ムービークリップ だと思います。 ムービークリップの使い方と MovieClipクラス のメソッドやプロパティやイベントです。 ムービークリップの存在を理解できなかったり，ムービークリップの有効な利用方法を考えつかなければ， いくら ActionScript という言語ができても何にもなりません。 「これをこう仕込んでこのように動かす！」 という発想がまず先にあって， 「そのモクロミ通りになるように！」 ムービーの構造を作成したり ActionScript を組みます。 ActionScript 3.0 になると ムービークリップ とともに(ムービークリップのことは知り尽くして当然の上で) イベント が大切です。 「イベントを制する者、ActionScript 3.0を制す」 http://www.fumiononaka.com/Sample/F-site/FF07111 …
>ムービークリップを表示させる為のボタン「p1_bt」をクリックしたら >オブジェクトがアニメーションして最大サイズになり、 >その最大サイズ時（10フレーム）に設置してある「close_bt」をクリックすれば、 >最大のサイズから最小のサイズにアニメーションし、 >その後そのオブジェクトが非表示にさせたいのです。 と 書かれていらっしゃる日本語を そのままスクリプトにすると次のようになります。 ・メインのタイムラインのフレームのスクリプト -------------------------------------- p1_bt.buttonMode = true; var newCharacter:MovieClip=new Photo1(); newCharacter.x = 60; newCharacter.y = 191; //newCharacter内タイムラインの再生を //フレーム1で停止 newCharacter.gotoAndStop(1); p1_bt.addEventListener (MouseEvent.CLICK,p1Click); function p1Click (evt:MouseEvent):void { addChild (newCharacter); //newCharacter内タイムラインの再生を //フレーム1から開始 newCharacter.gotoAndPlay(1); } -------------------------------------- ・クラス名「Photo1」MC内 フレーム10のスクリプト -------------------------------------- //このタイムラインをこのフレーム(フレーム10)で停止 this.stop (); //close_btにクリック時のイベントリスナーを登録 close_bt.addEventListener (MouseEvent.CLICK,closeClick); //関数 closeClick の定義 function closeClick (evt:MouseEvent):void { //このタイムラインを再生 this.play (); } -------------------------------------- ・クラス名「Photo1」MC内 　フレーム20(最終フレーム)のスクリプト -------------------------------------- //親階層に対して命令. 子である自分を削除 this.parent.removeChild(this); -------------------------------------- なお， メインのタイムラインのフレームのスクリプトで書いた 　//newCharacter内タイムラインの再生を 　//フレーム1で停止 　newCharacter.gotoAndStop(1); 　//newCharacter内タイムラインの再生を 　//フレーム1から開始 の部分を 　//newCharacter内タイムラインの再生を停止 　newCharacter.stop(); 　//newCharacter内タイムラインの再生を開始 　newCharacter.play(); としても良いですが ムービークリップを表示させる為のボタン「p1_bt」を何度もクリックされた場合， 動きがおかしくなる (私の感性とはずれる) ので gotoAndStop(1) や gotoAndPlay(1) にしています。 また書かれていらっしゃるものに限っては， 「Photo1」MC内のフレーム20(最終フレーム)のスクリプトを 次のようにしても同じ意味になります。 //rootに対して命令. 子である自分を削除 MovieClip(root).removeChild(this); 　
一般的には getURL の mailto ですが。 Google 検索 「getURL mailto」 http://www.google.co.jp/search?hl=ja&source=hp&q … mailto に限らず そもそも getURL(○○) というものは， SWF を貼り付けている HTML を表示している ブラウザ に 「○○を開け」 と命令するものです。 つまり Flash外 のことなんです。 ブラウザのセキュリティが高ければ動作しません。 また ブラウザにメーラーが関連づけられていなければ，何のメーラーも立ち上がりません。 「全てのクライアントで実行できる」というわけではないので， メールアドレスの記載とともに，補助的に使うべきものだと思います。 ※ちなみにメーラーの起動やタイトルの自動記入まではできたとしても 　メールの送信までは無理ですよ。
> objXML.load("sample.xml"); > > 上記の（）の中に直接URLを挿入すると、 > ローカルでは確認できるのですが、 > ファイルをアップすると、まったく読み込めてはいません。 って， それを具体的に書けば， 　何某かの XML データをはき出す PHP(sample.php) があって， 　その PHP をロードするように 　 　objXML.load("http://aaaa/sample.php"); 　と書いたけど 　SWFをアップしたらSWF上に XML が取得できない。 ということでしょうか？ それ， ひょっとして別サイト（別ドメイン）の XML を取ってこようとしていませんか？ あえて悪い言い方をすれば， 「他人のデータを盗んで自分のFlash内に表示しようとしている」 ということになるのですが。。。 良い悪いは場合によって変わりますから何とも言えませんが， そういういわゆる「悪いこと」または「悪用に結びつく可能性がある行為」は， デフォルトではできないようになってますよ。 Flash Player の クロスドメインのセキュリティポリシー というものです。 もしそうであれば(もし違うドメインのXMLをロードしようとしている場合は) Googleなどで「クロスドメインポリシーファイル Flash」などと検索してみてください。 http://www.google.co.jp/search?hl=ja&source=hp&q …
初心者なんでぼくもよくわからないのですが、 こうしたらできました。 var bln:Boolean; bln = func1(); function func1():Boolean { 　// 処理(ここには複数の処理がある) 　twn.insert(TweenMax.to(contents, 0.7, {autoAlpha:1, ease:Quad.easeOut})); 　// 終了後イベント 　twn.addEventListener(TweenEvent.COMPLETE, end); } function end() { 　return false; }
addEventListener ができていないのではなくて， mc = new MovieClip();　ができていないのですよ。 //変数mcに 「test○_mc」 という文字列を入れる var mc = "test"+num+"_mc"; ↑これでは文字列String が入るだけで MovieClip ではありません。 あと > //2つのインスタンスは適当な座標においてあります って？？？ 置いてあるのなら 新しいムービークリップを作成 mc = new MovieClip(); などする必要ないじゃないですか。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 「test0_mc」 と 「test1_mc」 というインスタンス名を付けた 2つのインスタンスは適当な座標においてあるとしますよ。 ------------------------------------- for (var num=0; num < 2; num++) { var mc = "test" + num + "_mc"; this[mc].addEventListener(MouseEvent.CLICK, move); } function move(event:Event):void { event.currentTarget.x = 0; } ------------------------------------- または ------------------------------------- for (var num=0; num < 2; num++) { this["test" + num + "_mc"].addEventListener(MouseEvent.CLICK, move); } function move(event:Event):void { event.currentTarget.x = 0; } ------------------------------------- Google検索「配列アクセス演算子」 http://www.google.co.jp/search
さて、先ほど回答した#1ですが、かなり重要な事を書き忘れてました。 それは、Googleの検索結果はHTMLに貼られたSWFなんか読み込まないから、SWFを貼った貼ってないは直接検索結果(サマリー)が文字化けすることに関係ないハズってこと。 SWFを読み込んでいない事を確認するには、外部テキストを読み込まない、文字など書かれていないSWFに変更してみれば確認できると思います。 たぶん変化しません。 本当にSWFを貼る前は文字化けしていなくて、SWFを貼ったら文字化け、削除すると直るという事であれば、SWFのタグ関連でコメントで半角カナ等の一般に推奨されない文字を使っている等、SWFを貼った事とは別の原因ではないかと考えられます。 あとは、本文が後ろに追いやられる事で、前からNバイト読み込んで文字コード判定、などに影響する可能性はあるかなと。 PHPを使っているので、メタタグでの文字コードの指定だけではなく、Headerでの文字コードの指定がShift-JISなんてことはないですかね？ Headerでは指定してないとか。 基本どんなSWFを貼ってもそれが原因で文字化けするなど考えられないというスタンスなので、貴殿の求める答とは違うかも知れませんが。
クラスを設計する際には、外部のオブジェクトを直接参照しない設計にするのが一般的です。 外部のオブジェクトを直接参照するようなクラスは汎用的ではない=クラスにする意味が薄い、との理由です。 いやいや、外部のオブジェクトを操作するクラスはよくあるじゃないか、と思われるかも知れません。 var hoge = New HogeHoge(); hoge.target = fuga; 上記のように、外部から参照を設定して、クラス内から外部オブジェクトを操作できるようにします。 ※もちろんクラス内では、target(=fuga)を変数に保持して以降targetに対してあらゆる操作を行います。 クラスにするからには、クラス外の事はクラス自身は何も知らなくて良い。 それがクラスの設計手法で、どんな言語でも共通の事と言えます。
_root.total = this.childNodes[0].childNodes.length; で、_root.totalに対して値を放り込んでいるのに、確認に使用する際には if (cnt<total-1) { と、totalを使用しているため別の変数扱い。 初期化されていない変数なので、totalは0扱いってとこですかね(推測)。 どこに書かれているか、等にもよりますが 毎回cnt = -1;と初期化している？ なんとなく、あちこちに似たような別の処理が分散されて書かれていて、バグの元になっていそうな予感です。
イベントターゲットをstartDrag()、stopDrag() するようにすればいいと思います function wordMD( evt:MouseEvent ):void { word_mc.startDrag( ); } function wordMU( evt:MouseEvent ):void { word_mc.stopDrag( ); } ↓ function wordMD( evt:MouseEvent ):void { evt.target.startDrag( ); } function wordMU( evt:MouseEvent ):void { evt.target.stopDrag( ); } 複数インスタンスを生成できないという所は var word_mc:MovieClip = new mc( ); を creClick関数内でやってやればいいだけだと思います ついでにMOUSE_OVERでやってる リスナー登録もcreClickの時にしておけば いいと思いますよ 別にそのリスナー登録は MOUSE_OVERの度にやらなくても 一回やれば済むような事ですから
こんな感じ↓でできると思います。 ------------------------ for (i=1; i<v; i++) { this["title"+i].setMask(this["mask"+i]); } ------------------------ Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&q=%E9%85%8D …
XML は階層を構築して記述できる言語で、XML の階層構造によってスクリプトも変わってきます。 スクリプトから察するに、想定している XML は 　<Menu> 　　<Item jpegURL="image1.jpg" linkURL="ｈttp://○○○.jp">１</Item> 　　<Item jpegURL="image2.jpg" linkURL="ｈttp://△△△.jp">２</Item> 　　<Item jpegURL="image3.jpg" linkURL="ｈttp://□□□.jp">３</Item> 　</Menu> ↑タグの名前はさておき、このような構造ではないでしょうか？ ActionScript 2.0 までの XML は、XML オブジェクトの中に様々な変数が作られ、取得した値は前後のノードの情報を参照するための手掛かりなどと一緒に記録されます。 先述の XML の構造ですと、読み込みを担当した myXML には、<Menu> という子ノードが１つあります。 子ノードの情報は childNodes という名前の配列変数で記録されます。 この場合の this は myXML のことですから、this.childNodes[0] は、myXML が持っている最初の子（配列変数は０番から始まるので、０番目の子）との意味で、最も外側にある <Menu> ノードを表します。 myXML が持つノードは <Menu> ノード１つだけで、childNodes も 0 番までしかありません。 肝心の画像やリンク先などの情報は全て、<Menu> ノードの子になっています。 this.childNodes[0] が <Menu> ノードのことですから、その階層の childNodes[ 番号 ] で、<Menu> ノードが持っているそれぞれの子ノードの情報を見ることができます。 こちらも同様に、各ノードの情報が配列変数で記録されています。０番に１、１番に２、２番に３の情報が入っています。 この配列変数の 0 ～ 2 という管理番号を変数 cnt で管理し、画像や URL の情報を取り出すわけです。 ＊＊＊＊＊ その、変数 cnt ですが。 上記の例ですと、<Menu> の子ノードは３つですから、その情報を持つ配列変数 this.childNodes[0].childNodes も要素が３つ、番号にして 0 ～ 2 まであります。 従って、cnt が取りうる値も 0 ～ 2 となります。 childNodes は配列変数なので、length というプロパティを見ると配列変数の中に要素がいくつあるのかが分かります。今回の例では３つですから、childNodes.length は 3 です。 ご提示のスクリプトでは、この length の値を変数 total に記録しています。 cnt の最大値は 2 、これはつまり total - 1 （＝ length - 1 ）です。 cnt が total - 1 未満の時は次のノードがあるので cnt を +1 して次のノードの情報を見ることができますが、cnt が 2 の時は次のノードがありません。 そこで、if 文を使って 2 の時は 0 に戻すことで、0 ～ 2 の間に収まるようにしているのです。 配列変数は管理番号が 0 から始まり、length には管理番号の最大値 + 1 が記録されるという特徴があります。 この点を利用して、剰余を使って if 文を使わずに計算する方法もあります。 total（＝length ）の値である 3 の剰余は、cnt の値が何であれ、必ず 0 ～ 2 のいずれかになります。 つまり、cnt を +1 した後で total の剰余を求めたものを cnt の新しい値にしておくと、if 文で判断しなくても 0 ～ 2 のカウントアップ（ 2 の次は 0 に戻る）になります。 スクリプトにしますと、 　_root.cnt = ( ++_root.cnt ) % _root.total; このようになります。剰余は % 演算子で求められます。 後ろから求める場合も、同様に剰余を利用することができます。 cnt が 0 の時に -1 すると剰余が負の数になってしまいますから、-1 したあとで total の値を加算して正の数に戻し、改めて total の剰余を求めます。これで、2 ～ 0 のカウントダウン（ 0 の次は 2 ）になります。 スクリプトは 　_root.cnt = ( ( --_root.cnt ) + _root.total ) % _root.total; このようになります。
> _root.gotoAndPlay(hot); に関しては別問題があるかもしれないので無視させていただきます。 (別問題とは 「frame1」というフレームラベルを書いていないとか，書いていても階層が違うとか。) ◎解決策1 ---------------------------------- function btRollOver(hot) { trace(hot); } box1.onRollOver = function():Void { btRollOver("frame1"); }; ---------------------------------- ◎解決策2 ---------------------------------- function btRollOver(hot):Function { return function ():Void { trace(hot); }; } box1.onRollOver = btRollOver("frame1"); ---------------------------------- 「関数A()」 は 「関数Aを実行しろ」 ということです。 box1.onRollOver などに関数を代入するという意味ではなくなります。
質問主です。 質問を投稿したときのIDで教えてgooにログインできなかったため、 回答欄ですが、＃１さんにお礼コメント＋αをつけさせていただきます。 質問投稿時のIDでログインできましたら、改めてお礼をつけさせてください。 ＃１さんが記述くださいましたようにスクリプトを記述しましたら、 希望していたとおりの動きができました。 お早い回答本当にありがとうございます！ http://homepage2.nifty.com/meary/sample.html setIntervalを使うんですね。 細かく説明文を入れてくださって、勉強不足な私でも理解しやすかったです。 画像添付もありがとうございました。とっても助かりました。 ご回答いただけなければ、私ではここまでたどり着くのに10年くらいかかったかもしれません。 そんな中ですが、分からなかった記述部分がありまして、 またひとつお教えいただけませんでしょうか。 menu_mc.onEnterFrame = function():Void { this._x += (xArr[cnt]-this._x)/5; if (this._x > baseX) { this._x -= this._width/2; cnt = xArr.length-3; } else if (this._x < baseX-this._width/2) { this._x += this._width/2; cnt = 2; } }; 上記のif文の部分が、どういった計算をしているのかがわからないのです。 Y軸移動、ボタン7個の練習作で、練習作用に修正したスクリプトを記述しましたが、 上記部分の理解不足で不審な動きをさせてしまっています。 http://homepage2.nifty.com/meary/renshu2.html もしよろしければ、if文内の計算式の説明か、 ボタンが7個になった場合のif文をお教えいただけませんか？ よろしくお願いします！
元から全体的に無茶な感じがしますが.../(-_-)ヽ。 というか， 「getChildByNameに変数を利用する」意味などあるのだろうか？ という気がします。 まず， getChildByName(NAME) に入れるNAMEは "インスタンス名" ですよ。 そもそも「MovieClipインスタンス」とはステージ上に存在するインスタンスです。 (「シンボル と インスタンス」 でいう意味のインスタンスです。) また「MovieClipのインスタンス名」とはステージ上に存在するときのインスタンスの名前です。 だからまず _mc[n] をステージ上に配置した上で， そのインスタンスにインスタンス名を付けなければなりません。 それで書き直すと次のようになります。 ---------------------------- var num:int = 2; var _mc:Array = []; var _mcName:Array = []; for(var i=0; i < num; i++){ _mc.push("test_mc"+i); _mcName.push("test_mc"+i); } for(var n=0; n < num; n++){ _mc[n] = new MovieClip; addChild(_mc[n]); _mc[n].name = _mcName[n]; _mc[n].addEventListener(Event.ENTER_FRAME, setY(n)); } function setY(myNum:int):Function{ return function():void{ MovieClip(getChildByName(_mcName[myNum])).y = 300; } } ---------------------------- しかしどうみても回りくどすぎます。 なんでわざわざインスタンス名を付けてそれを取得せねばならないんですか？ 意味がわかりません。 ActionScript 3.0 では，そもそもインスタンス名など使う必要性は 0 に近いんです。 ※手動でステージ上に配置するインスタンスの場合 　 インスタンス名を付けておくと， 　 オーサリングが自動的にそのインスタンスを参照する 　 同名の変数を用意してくれます。 　 ActionScript 3.0 では一般的に 　 その変数に対して何かを命令します。 　 したがってActionScript上では結局 　 インスタンス名自体に特に意味はないということです。 というわけで， インスタンス名など使わず，これで良いのではないでしょうか↓。 ---------------------------- var num:int = 2; var _mc:Array = []; for (var i=0; i < num; i++) { _mc.push ("test_mc"+i); } for (var n=0; n < num; n++) { _mc[n] = new MovieClip; //addChild (_mc[n]);//←あってもなくても実行上問題ない _mc[n].addEventListener (Event.ENTER_FRAME, setY(n)); } function setY(myNum:int):Function{ return function():void{ _mc[myNum].y = 300; } } ---------------------------- あと， Event.ENTER_FRAM で y を 300 にし続ける意味もさっぱりわかりませんが， これは１つの例(実際はあり得ないけど単なる架空のサンプル例)という意味としてそのままにしています。 「F-site [AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html
TweenクラスはENTER_FRAMEのリスナーで 使うようなもんではないと思いますよ そんなことしなくてもTweenクラスは対象を動かしてくれます function main_start(event:MouseEvent):void { main1.addEventListener(Event.ENTER_FRAME,main_up); } function main_up(event:Event):void { main_uptween = new Tween(main1, "y", Bounce.easeOut, 400, 10, 4, true); } ↓ main_uptween = new Tween(main1, "y", Bounce.easeOut, 400, 10, 4, true); main_uptween.stop() function main_start(event:MouseEvent):void { main_uptween.start() }
自分の決めたタイミングで関数を実行したい時に オリジナルのイベントを定義してリスナーを 作る為にそういうことをします じゃあイベントを送出してリスナーを実行させるとか 回りくどい事せずにそのタイミングで その関数を実行させればいいじゃない？ とか思うかもしれませんが 例えば名前空間が違う所にある関数を実行させたいとか クラスのインスタンスが一定の処理を完了した タイミングで関数を実行したいとかいう場合があります 例えばURLLoaderを使ってテキストをロードするだけじゃなく そのテキストを処理してデータを作るとかするクラスがあったら そのデータの処理が終わってから実行したい処理があったりしますよね？ そういうときに使います
ムービークリップのrotation値は， そのムービークリップが作成された状態からの角度です。 配置された状態からの角度ではありません。 また rotation の値は -180～180 です。 この範囲を超えると自動計算し直されますが -180や180前後の値を絶対的に操作する場合は少々厄介です。 この辺が絡むとムービークリップの作成のしかたや 配置のしかたによってスクリプトは変わりますが あえて変わらないようにすると次のような感じになると思います。 ただし，向かって右側の手を 「arm_r」 と考えています。 左手・右脚・左脚も同様で 作者から見た左右 としています。 また「20度から45度」の意味がわかりませんでしたので 「『配置した状態から』20度～45度の範囲で動く」 場合を想定しています。 ==================================== //--※ムービープレビュー確認用-- trace (robo.arm_r.rotation); trace (robo.arm_l.rotation); trace (robo.leg_r.rotation); trace (robo.leg_l.rotation); //------------------------- //---初期設定-------------- //最小角を設定 var min_r:Number = 20; //最大角を設定 var max_r:Number = 45; //１フレーム時間で回転する角度を設定 var spd_r = 3; //------------------------- //手足の初期配置角度を保存 var arm_r0 = robo.arm_r.rotation; var arm_l0 = robo.arm_l.rotation; var leg_r0 = robo.leg_r.rotation; var leg_l0 = robo.leg_l.rotation; //手足の回転を配置された状態から最小角に回転 robo.arm_r.rotation = arm_r0 + min_r; robo.arm_l.rotation = arm_l0 - min_r; robo.leg_r.rotation = leg_r0 + min_r; robo.leg_l.rotation = leg_l0 - min_r; //回転させる数値を代入する変数を用意(初期値は最小値) var rot:Number = min_r; //プラスマイナスを決める変数を用意(初期値「＋」) var pm:int = 1; //roboに毎フレーム実行するイベントリスナーを追加 robo.addEventListener (Event.ENTER_FRAME,moveArm); //関数moveArmの定義 function moveArm (event:Event):void { rot += pm * spd_r; event.target.arm_r.rotation=arm_r0+rot; event.target.arm_l.rotation=arm_l0-rot; if (rot>max_r) { robo.removeEventListener (Event.ENTER_FRAME,moveArm); robo.addEventListener (Event.ENTER_FRAME,moveAll); } } //関数moveAllの定義 function moveAll (event:Event):void { if (rot>max_r) { pm=-1; } else if (rot<min_r) { pm=1; } rot+=pm*spd_r; event.target.arm_r.rotation=arm_r0+rot; event.target.arm_l.rotation=arm_l0-rot; event.target.leg_r.rotation=leg_r0+(max_r+min_r)-rot; event.target.leg_l.rotation=leg_l0-(max_r+min_r)+rot; } ==================================== 　　
Tweenクラスをつかうのなら stop()しておいて そのタイミングでstart()とか resume()する ぐらいしかないですかね TweenerやTweenMaxとか 入れといた方が何かと便利ですよ
<param name="bgcolor" value="#FF0000" /> <param name="wmode" value="opaque"> 一旦上記のように背景色を変更して(透明化も解除して)みればわかるんじゃないかなという気がします。 ※embedも、AC_FL_RunContentも同様に設定。 ザクッと言うと、SWFのムービーの範囲が引き延ばされてないんじゃないかな、確認して見てくださいねってこと。
>普通の方は<script>を囲まず<object>を囲んでうまくいくのでしょうか？？ 私もjavascriptは分からないのですが、おそらく<noscript>～</noscript>は ブラウザのjavascriptがOFFの時に使用されるのではないかと思います。 ブラウザ(IE)は、Flashが自動的に再生されないので、 <script language="javascript">～</script>の中に自動再生させる プログラムが入っていると聞いたことがありますが、定かではありません。 <script language="javascript">～</script>の全てと <object></object>を消せば、<div>が使えると思います。 私もFlashは素人ですので、予測でしかありません(>_<)
関数名 = function(){} のような書き方を「関数リテラル」または「匿名関数」または「無名関数」と言います。 捉え方としては 　　関数名 = function(){} と捉えるのではなくて， 　　匿名関数を参照する変数=匿名関数 と捉える方が適切です。 ActionScript 2.0 以下では頻繁に登場する ○○.onRelease = function(){…}; や ActionScript 3.0 でもたまに登場する ○○.addEventListener(MouseEvent.CLICK, function(e:Event):void{…}); などを見ると「匿名である」ということが顕著にわかると思います。 私が思うところの一般的には， 使いやすい場所で使いやすい方を使うというようなイメージです。 次のページなどを参考にしてみてください。 「Action Script 関数リテラル」 http://www.tokiwa.ac.jp/~shio/el/action_script/r … 「FN0108016 - 名前のない関数(匿名関数-関数リテラル) - Flash テクニカルノート」 http://fumiononaka.com/TechNotes/Flash/FN0108016 …
参考のＵＲＬにページめくりのサンプルが有ります、無料でＤＬ出来ますので、参考にして下さい、また詳しくは質問して下さい。 参考URL：http://yokai-tp.com/flash/dl.html
＃１です。 ActionScript3.0でも基本的にすることは同じです。 「インスタンス」の「座標」を「スクリプトで動かす」です。 メインタイムラインは AS2 なら _root で， AS3 なら root です。 また AS2 では必須の MovieClip(ムービークリップ) を， AS3 であるなら Sprite(スプライト) や Loader(外部ファイルロード用インスタンス) に置き換えることはできます。 Sprite とは ActionScript でしか作成できない MovieClip の複数フレームなし版(単フレームのみ版)です。 とにかく Sprite であったり Loader であったりするようなものでも， ステージやタイムラインに配置する インスタンス には変わりないわけです。 仮に AS3 の root の y座標 を操作できたとしても(できますが...)， 階層が １つ上がる だけのことで，管理や面倒が多くなるだけですから，そういう発想はまずしないでしょう。 root に配置したインスタンスや， root に配置したインスタンス内のインスタンス の 座標 操作するのが普通です(当たり前です)。 良いですか。 MovieClip(ムービークリップ) や AS3 の Sprite(スプライト) などをスクロールバーのようなもので動かすのです。 つまり， スクロールバーのようなもの(単なる ▲ボタン や ▼ボタン であってもかまいません)でインスタンスの座標を動かすのです。 それができてこそ，次に， 「ついでにマウスホイールで インスタンス の座標を動かしてもいいかなあ。」 と考えるのです。 _root や root などを動かしてしまうと，厄介になるだけでしょう。 単に，MovieClip(ムービークリップ) や AS3 の Sprite(スプライト) などの中に動かしたいものを入れれば良いだけなんです。 たったそれだけのこと。 どーーーーーーーーーう 考えても，それが簡単でスムーズではありませんか？ そのインスタンスの AS2 なら _yプロパティ，AS3 なら yプロパティ を操作すれば良いだけです。
なんで同じ LoadVars インスタンスに何度も同じ外部テキストをロードしているのですか？ さっぱり意味がわかりません。 普通に，次のような感じで良いのではないでしょうか？ ----------------------------- System.useCodepage = true; var my_lv:LoadVars = new LoadVars(); my_lv.onLoad = function(success:Boolean) { if (success) { kotei1.text = my_lv.name1; kotei2.text = my_lv.name2; kotei3.text = my_lv.name3; kotei4.text = my_lv.name4; } else { trace("Error loading/parsing LoadVars."); } }; my_lv.load("name.txt"); ----------------------------- どう考えてもこれが普通だと思いますが。。。
単純にステージ全体を maskするようにしてます もしかしたらもっと かしこいやりかたがあるかもしれませんが
> rootはサポートされないようになりましたと・・・ root はサポートされていますよ。 サポートされなくなったのは root ではなく _root です。 ただ，「menu」というインスタンス名があまりよろしくありません。 ActionScript 2.0 以下での MovieClip.menu プロパティ と勘違いするようで， > Warning: 1058: 移行の問題 : プロパティ menu はサポートされないようになりました。 というエラーが出ます。 エラーメッセージが出るだけで動作には問題がないので無視していても良いとは思うのですが， 気持ちが悪いので「menu」というインスタンス名は使わない方が良いように思います。 root に 「menu_mc」 というインスタンス名のムービークリップがあって， その中に「sample_btn」 というインスタンス名のボタン(シンプルボタン)があったとします。 そして その 「sample_btn」 をクリックしたときに root を "サンプル" というラベル名のフレームに進めて再生するとします。 　root ←"サンプル"というフレームラベルがある 　　└menu_mc 　　　　　└sample_btn その場合のスクリプト例↓ MovieClip(root).menu_mc.sample_btn.addEventListener(MouseEvent.CLICK,sample); function sample(e:MouseEvent):void { MovieClip(root).gotoAndPlay("サンプル"); } 「rootプロパティでメインタイムラインの関数にアクセスできない」 http://fumiononaka.com/TechNotes/Flash/FN0707001 …
> private var isLoading:Boolean = true; これは変数 「isLoading」 に 「true」 というブール値を代入しておく。 という意味ですね。 変数 「isLoading」 はフラグです。 フラグとは一般的には 「Yes/No」 とか 「ON/OFF」 とか 「有/無」 などというような 「全か無か」 の値を代入するものです。 数値にすると 「1/0」 です(厳密には「0以外/0」だったりしますが)。 「isLoading」 という変数名のネーミングの意味合いからして， 「ロードされたか/ロードされていないか」 を示す旗印だと思います。 if(isLoading){ 　　条件分岐 } これは 　もし変数「isLoading」に代入された値が true であれば｛ 　　　ここに書いた動作を実行する 　} という意味です。 したがって普通， if(isLoading){ 　　条件分岐 } は，変数「isLoading」の値が不明なときに， 何かがロードされたか否かは無関係のタイミングで実行されるものだと思います。 たとえば， 何かがロードされたかされていないかは別として， 常に (EVENT.ENTER_FRAME などで) if文 判定が実行されていて， 変数「isLoading」の値が true になった瞬間に何かを実行するときとかです。 通常は「ture」が「Yes」や「ON」や「有」を示す旗色として使われますから， private var isLoading:Boolean = true; というように初期値を与えるのではなく private var isLoading:Boolean = false; というように初期値を与えておきます。 （絶対にそうという意味ではなく，普通はそうするという意味です。） そして， 何かがロードされたときにフラグを反転させます。 (通常は false を true に変更します。別に true を false にしても問題はありません。) そして， そのロードとは無関係に実行される if文 に入ったとき， 「もしロードされていたら→○○をする」 「もしロードされていなかったら→××をする(または○○をしない)」 という動作の分岐をさせます。 かなり漠然としていますが，だいたいそういうことです。
stage.mc.addEventListener(…); これ↑は変です。 mc.addEventListener(…); このように↑するか， もしくは test というインスタンス名を使うのでしたら MovieClip(stage.getChildByName("test")).addEventListener(…); このように↑するかです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ //空のムービークリップを作成 var mc:MovieClip = new MovieClip(); これ↑の意味は， 　　「新しいMC」を作成して， 　　変数 mc に， 　　その「新しいMC」の参照を代入する。 ということです。 以降「mc」と言えばその「新しいMC」のことを指します。 ですから > //空のムービークリップを作成 > var mc:MovieClip = new MovieClip(); > mc.name = "test"; ここまでは普通の使い方(普通の「mc」の呼び方)なんです。 また次の > stage.addChild(mc); これも普通の使い方(普通の「mc」の呼び方)なんです。 そこまでは，普通に「mc」と呼んでいるのに， 突如 > stage.mc.addEventListener(…); と変えるのは変でしょう？ 大阪府大阪市墨田区田町1-5に光田三郎君という人がいたとします。 この人のことを仮名「A君」ということにします。 「A君」は転校して北海道に行きました。 その後「A君」愛知県に行きました。 北海道にいようとも，愛知県にいようとも， 「A君」は，元の「光田三郎君」を指す仮名です。 北海道に行ったときに勝手に「北海道A君」に変更する方が変です。 そんなことをしたら別人になってしまいます。 > stage.addChild(mc); で stage に addChild した mc は mc なんです。 他のインスタンに addChild しても mc なんです。 mc は 「新しいMC」 を参照する変数なんです。 「F-site [AS3] MovieClipインスタンスとインスタンス名」 http://f-site.org/articles/2008/04/19014939.html
> 上記の書き方だと、functionが実行される前に > traceが実行されているということですよね。。。 そうですよ。 xmlLoader.addEventListener(Event.COMPLETE, comp); によってXMLのロード完了時に関数compが実行されます。 当たり前ですが， XMLのロードが完了しないとXMLの内容などわかりません。 XMLのロードが完了して中身を閲覧や操作できるような状態になって 関数compが実行されるということです。 というか， そのために(関数compを即実行させないために) xmlLoader.addEventListener(Event.COMPLETE, comp); を用意しているはずです。 >それとも、function外でimgSrcの値を >とる方法はないということでしょうか。。。 関数comp内で別の関数を実行させて， その別関数の中に trace(imgSrc); を書いておくのも１つの方法です。 また，書かれていらっしゃるスクリプトを書いたフレームで， そのフレームの再生を停止させておいて（ stop() させておいて） 関数compの中で次のフレームに進むなどのスクリプトを書いて 次のフレームに trace(imgSrc); を書いておくのも１つの方法です。 例：フレーム1 で XMLをロードし 　　ロード完了次第 フレーム2 に進めて 　　フレーム2 以降で本体のスクリプトを動作させる。
何を書かれているのかよくわかりません。 ステージのサイズなどどうでもいいです。 1000×1000px でも 10×10px でも。 問題は作成時のステージのサイズではなく動かすインスタンスのサイズ？ ではないでしょうか？ とにもかくにも， ドキュメントのステージサイズの限界があってもなくても ご質問のページとは全く無関係ですよ。 Google検索「Stage noScale align」 http://www.google.co.jp/search?hl=ja&source=hp&q … 何だかわかりませんが，「問題の切り分け」が最重要でしょう。
>しかしmc_panel04が全く動きません。 >ムービークリップ名が >mc_panel01なのに >asスクリプトでは >panel01_mcとなっている点です。 おそらく、『シンボル名』と『インスタンス名』が混乱してるんですかね。 『ムービークリップ名』と言っているのは、『シンボル名』の事だと思います。 ライブラリの中で、名前として表示されているものです。 『インスタンス名』というのは、ステージ(タイムライン)に配置したあと、そのシンボルをマウスで選択して[プロパティ]に表示される名前です。 たとえば、同じシンボルを複数タイムラインに配置することができます。 もし、ActionScriptから『シンボル名』でアクセスできるとしたら、ActionScriptは『えっ？どのシンボルの事言ってるの？』と混乱してしまいます。 それを避けるために、『シンボル名』ではアクセスできず、配置したシンボルに付けた名前=『インスタンス名』でアクセスします。 ※動的にインスタンスを作成する等の、シンボル名でアクセスしなければならない場合もありますが、その必要が出てくるまでとりあえず『シンボル名』でアクセスできないと思って置いてください。 元のプロジェクト等見ていませんが、『シンボル名』=mc_panel01、『インスタンス名』=panel01_mcとなっているんじゃないですかね。 上記の理由だと思うので、新規に作成して配置したムービークリップの『インスタンス名』を、panel04_mcと名前を付ければOKだと思います。
単純に function removeFunc(str:String):void { this.removeChild(this[str+"_mc"]); } で良いと思います。 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q …
event.currentTargetで クリックされた対象を取得できます つまり function test(event:Event):void{ trace(event.currentTarget.x); } みたいなカンジです
はじめまして、通りすがると申します。 大雑把では、ありますがイメージ的に、色が変わる前の画像と色が変わってるときの画像を 二つ作ります。 あとは、JS(java　Script）でマウスイベントの（カーソルがボタンの上に来たらってって イベント）で二つの画像を切り替える仕組みになります。 なお、作成する画像の大きさ、文字の位置は寸分とも同じサイズおよび位置で作成してください。 この機能を作成することにより、色が変わるように見えます。
ソースはプログラマーにとってのお金です。 あなたは「お金をください」と言っているようなものです。 まずはFLASHを勉強して、詰まったところを質問するっていうのが筋じゃないですか？
ASで、ですか？ var w=stage.stageWidth var h=stage.stageHeight with((addChild(new Sprite())as Sprite).graphics){ beginFill(0) drawEllipse(10,10,w-20,h-20) drawRect(w/2,10,w/2-10,h/2-10) endFill() } beginFillするとendFillするまでは 偶数回重なったところは抜きになります これは結構がさつなやり方かもしれないです
最悪バイナリエディタで開くという方法があります。 Unicode対応のテキストエディタで開いても、意味をつかめる程度に読めた気がするけど、それについては自信なし。 http://www.vector.co.jp/soft/win95/util/se032859 … SWF Decompilerってソフトであれば、flaファイルの読み書き可能だけど有料。 無料試用の段階でどこまでできたか(当方試用してすぐ購入したので、無料の使用制限ありの期間は非常に短く制限内容は覚えてません) http://www.sothink.com/product/flashdecompiler/ Flareってフリーソフトで、SWFからActionScriptだけを抽出できるもよう 試用さえしたことないので情報なし。Flareで検索してみると特に悪い話は書かれていないが、情報少なめ。 Flaファイルから読み込めるとは思えないので、同時にSWFも配布しているのであればそちらから読み込めるかなと。 http://www.nowrap.de/flare.html
FocusEvent.FOCUS_OUT イベントでも 同様の処理を行うようにすればどうでしょう？
私は PHP も Ming もわかりませんが， なんとなく思うんですが ActionScript 2.0 と 3.0 が混在していませんか？ sprite は ActionScript 3.0 にしか存在しないもので， onPress は ActionScript 2.0 以下にしか存在ないと思います。 PHP も Ming もわからないので何とも言えません。 その世界では sprite と onPress が共存できるのかもしれません。 さて，ActionScript 3.0 の件は置いておいて， ご質問の件(日本語部分)だと，根本的に startDrag を使うのがおかしいと思います。 Math.atan2 などを使用することによって 円の中心(円の基準点)からマウス方向の角度を出して， その角度になるように円の_rotationプロパティを変えるような必要があると思います。
ケース１： 条件Aで一度も実行されないのに条件Bが実行されている aには何も入っていないのでエラーになる ケース２： 条件Bで複数回実行されている aはすでに一回目の条件Bでの実行で removeChildされているのでエラーになる 対処 bg.removeChild(a) ↓ try{bg.removeChild(a)}catch(e){} ケース３： 条件Aで複数回実行されたのち条件Bでも複数回実行されている 最後にaddChildしたa_mc以外は変数aでの参照が切れているので 変数aの参照ではremoveChildできない 対処 a_mcのインスタンスへの参照は配列にしておくなりしておき 複数のa_mcのインスタンスを全部参照できるようにしておく // 背景MC var bg:MovieClip = new bg_mc(); // コンテンツMC var a_arr:Array; var b:MovieClip; this.addEventListener(Event.ENTER_FRAME, visibleCheck); function visibleCheck(eventObject:Event):void { 　if(条件A) { 　　a_arr.unshift(new a_mc()); 　　bg.addChild(a_arr[0]); 　} else if (条件B) { 　　hoge(); 　　function hoge():void { 　　　b = new b_mc(); 　　　bg.addChild(b); 　　　while(a_arr.length>0)bg.removeChild(a_arr.pop()); 　　} 　} } こんなカンジでしょうか
プリミティブ形状のCilynderは DisplayObject3Dの基本として MaterialsListのプロパティが一応ありますが それが反映されることはありません また貼付け方も参照の様なカンジなので 一枚の画像に複数の画像を配置して擬似的に というのも難しそうです 違う画像を貼付けた 二つの円柱を、大きさを少しずらして配置するのが 多分一番簡単な方法かと思います すこし丁寧にやるなら 円柱を複製してそれぞれgeometry.facesの配列から 筒の部分と蓋の部分を削除してやって それぞれに違う画像のテクスチャを貼付けてやるかです （各facesのtriangle3DがそれぞれにUVのデータを持ってるから 削除してやってもテクスチャのズレは起きないはず） 円柱のgeometry.facesの何番目から何番目が 筒の所になるのかとかは調べた事ないのでわからないです 参考URL：http://takibi.ciao.jp/flash/円柱.swf
どちらもマウスオーバー自体は難しくないものです。 Flashの場合、画像をレイアウトするときに、マウスオーバーの設定をするので、画像が2枚あれば、あとはリンクの設定時にレイヤーを分けて設定します。（素材とは関係なく、Flashの設定で行います） JavaScriptについても、マウスオーバーは素材と直接関係ありません。 http://www.openspc2.org/reibun/javascript/mouse/ … こちらがサンプルです。 リンクの設定に、onMouseoverとonMouseoutを使って、マウスが重なったときと外れたとき（戻すため）で画像を入れ換えます。このとき、画像はどこにあっても構いません。画像に名前（ID）を付けて、スクリプトではその名前を指定して画像を差し替えています。 Flashの方が手間がかかると思いますので、JavaScriptをコピーしてやってみると良いかと思います。 画像だけは先に用意して置いた方が良いですね。
ご質問で書かれていらっしゃるスクリプト↓ > アクションスクリプト： > mask_mc.cacheAsBitmap = true; > group_mc.cacheAsBitmap = true; > group_mc.setMask(mask_mc); これは ActionScript 2.0 (または 1.0) です。 つまり、 「ファイル」→「パブリッシュ設定」 で スクリプト を [ActionScript 2.0] に設定されていらっしゃいますよね。 似たような（そっくりに近い）質問に答えたことがあります。 「グラデーションでのマスクについて」 http://okwave.jp/qa/q5100656.html --- 以下は上記ページと同じ現象の場合の話 ------ パブリッシュ設定で、 スクリプト のバージョンを ActionScript 2.0 (または 1.0) 設定にしておいて， Player のバージョンを Flash Player 9 または 10 にすると、 アルファ グラデーション マスクをかけたインスタンスが動かないのですよ。 アルファ グラデーション マスク は Flash Player 8 以上で動作します。 ですから Flash Player 8 設定にすると無事に動くと思います。 または， 上で書いたページでも書きましたが， ActionScript 3.0 設定 ＆ ActionScript 3.0 コーディングをして， Flash PLayer 9 または 10 でパブリッシュすればできると思います。 おそらく Flash のバグでしょうけれど， 今更 ActionScript 2.0 設定で Flash Player 9 or 10 にした場合の バグ など 修正されることはない バグ だと思います。
なんで 配列アクセス演算子([]) など使っているのでしょうかね？？？ よくわかりませんが配列アクセス演算子を消して次のようにすれば良いと思います。 // "chara" というインスタンス名で 呼び出す _root.attachMovie("chara"+a, "chara", 0); しかし... 配列アクセス演算子を入れたままでも（入れなくても） パブリッシュ設定で ActionScript 1.0 設定にすれば、 ちゃんとライブラリのムービークリップが呼び出せるんです(MXの頃はActionScript 1.0 だった)。 なぜ、ActionScript 1.0 だとうまく行くのか、これまた説明ができませんが、 とにかく配列アクセス演算子は不要です。
> 参考にしながら作っているのですがうまくいきません。 何がどううまく行かないのか具体的にわかりませんが。。。 わからないので，通しで 『マウスオーバーすると自転車内タイムラインの再生が開始され マウスアウトすると自転車内タイムラインが逆再生されるボタン』 の作成手順例を書いてみます。 ステージ上に自転車の絵を描いてムービークリップに変換し， そのムービークリップの中で「車輪が回る」だけのアニメーションを作成します。 (ムービークリップ内で車輪をグラフィックシンボルに変換してそれをモーショントゥイーンで回転させる) その自転車の車輪が内部で回転するだけのムービークリップに 「bicycle」 というインスタンス名を付けます。 その「bicycle」とは別に， メインのタイムラインにボタンを１つ作成してそのボタンに 「startButton」 というインスタンス名を付けます。 　・階層構造 　シーン1などメインのタイムライン 　　　　├bicycle(ムービークリップ) 　　　　│　　├自転車本体 　　　　│　　├前車輪(モーショントゥイーンで回転) 　　　　│　　└後車輪(モーショントゥイーンで回転) 　　　　└startButton(ボタン) そしてメインのタイムラインのフレームに次のようなスクリプトを書きます。 -------------------------------- //ムービークリップbicycle内タイムラインの再生を停止 bicycle.stop(); //bicycle内タイムラインを逆再生させる関数を定義 function everyFrame(event:Event):void { if (bicycle.currentFrame == 1) { bicycle.gotoAndStop(bicycle.totalFrames); } else { bicycle.prevFrame(); } } //関数everyFrameを毎フレーム実行させるようにする関数を定義 function backAnimation(event:MouseEvent):void { bicycle.addEventListener(Event.ENTER_FRAME, everyFrame); } //bicycle内タイムラインの再生を開始する関数を定義 function playAnimation(event:MouseEvent):void { //bicycleに登録した毎フレーム時間実行させるリスナーを削除 bicycle.removeEventListener(Event.ENTER_FRAME, everyFrame); bicycle.play(); } //ボタンマウスオーバー時のリスナーとしてplayAnimationを登録 startButton.addEventListener(MouseEvent.MOUSE_OVER, playAnimation); //ボタンマウスアウト時のリスナーとしてbackAnimationを登録 startButton.addEventListener(MouseEvent.MOUSE_OUT, backAnimation); -------------------------------- 以上のような感じで作成できます。 　
＃１です。 > このように作ったらよいですか？ > ・レイヤー3：子MC　●→→→→● > ( 四角が W0px/H0px→W40px/H40pxになる ) > ・レイヤー2：親MC　●→→→→● > ( 四角が W40px/H40px→W0px/H0pxになる ) > ・レイヤー1：写真 　●→→→→→→→→→→→● 書かれている内容がいまひとつわかりませんが おそらく "全く違います"。 階層構造を作る部分 "だけ" を書くと次のようになります。 ステージ上に四角の塗りを描く 　↓ その塗りをグラフィックシンボルに変換する 　↓ そのグラフィックをムービークリップに変換する(子MC) 　↓ そのムービークリップをさらにムービークリップに変換する(親MC) つまり階層構造は次のようになるということです。 　シーン1などメインのタイムライン 　　└親MC 　　　　└子MC(←複製してたくさん作る) 　　　　　　 └グラフィック 　　　　　　　　　└四角の塗り 書かれていらっしゃるような書き方をするなら次のようになります。 ・レイヤー1：親MC ● 　・レイヤー1：子MC ●●●●●● 　　・レイヤー1：グラフィック ●→→→→● 　　　　・レイヤー1：四角の塗り ● レイヤー名は何でもかまいません。 しかし何も考えず普通に作ればすべて レイヤー1 になるはずです。 複合的な動きのFlashを作るには ムービークリップの入れ子構造を作成していくのが普通です。 たとえば「蝶がはばたきながら飛び回る」というアニメーションを作る場合 蝶の羽根を１枚だけ描いて グラフィックシンボルに変換して それをムービークリップに変換して そのムービークリップの中で羽根がパタパタ動くだけのアニメーションを作成し その内部で羽根がパタパタするだけのムービークリップをコピペで２つにして左右の羽根とし ２枚の羽根の真ん中に胴体を描いて その「羽根」「胴体」「羽根」をムービークリップに変換します。 すると羽根をパタパタするだけの蝶ができます。 その蝶ムービークリップをメインのタイムラインで動かすと， 「羽根をパタパタさせながら飛び回る蝶」ができます。 　シーン1などメインのタイムライン 　　└蝶MC 　　　　├羽根MC 　　　　│　　└羽根グラフィック(パタパタ) 　　　　│　　　　　└羽根の絵 　　　　├胴体の絵 　　　　└羽根MC 　　　　　　　 └羽根グラフィック(パタパタ) 　　　　　　　　　　└羽根の絵 このような作りにしないと大変なことになります。 もし階層構造を作成しないとするなら メインのタイムラインで動き回る胴体を作って パタパタしながら胴体と同じように動く羽根を作るようなことになります。 それは気が遠くなります。 仮にActionScript動かすにしても複雑な計算が必要になります。 「モーショントゥイーンの作成:Part2」 http://www.adobe.com/jp/designcenter/flash/artic … 　
＃１です 補足を拝見しました。 > 関数の定義が重複しています。 > function nextClick(evt:MouseEvent):void { > function prevClick(evt:MouseEvent):void { それは文字通り(エラーメッセージ通り) function nextClick と function prevClick を二重(または三重 以上)定義しているからでしょう。 日本語のエラーメッセージくらい理解してくださいよ。 同じ関数名の関数を同じフレームにコピペして増やしてもダメです。 (仮にエラーが出なくても最後に定義した同名の関数しか有効になりません。) スクリプトを変更するか， 元あった同じ関数名の関数を削除して＃１で書いた２つのスクリプトのうちどちらかコピペで使用するとかしないと...。
作ろうとされているものが今ひとつわかりませんので何とも言えませんが， 「ボタンの中のムービーを操作する」という方向は， なんとなく間違った方向に進まれているような気がします。 ボタンインスタンス (AS2：Buttonクラス のインスタンス ・ AS3：SimpleButtonクラス のインスタンス) は， 何も命令せずにボタンとして使えるところがメリットなのです。 ついでにActionScript的には階層も持たないのでそれを気にしなくて良いところがメリットです。 逆に言えば， ActionScript的には階層を持てない(デメリット)とも言えます。 　メインのタイムライン(AS2以下=_root ・ AS3=root) 　　　　└ボタンインスタンス 　　　　　　　　└ムービークリップインスタンス このような↑階層構造は "Flash上" には作成することができますが， "ActionScript的" には ボタンインスタンス の中や ボタンインスタンス内にあるムービークリップには何も命令できないので 作成しても外から手出しのしようがないということです。 元の(と言っても元がどんなのかわかりませんが) ムービークリップの入れ子の方が むしろずっと良い方向性だと思います。 ＝＝＝＝＝＝＝＝＝ 作ろうとされているものがわかっていないので， 以下は私が勝手に想像する一般的な方法ですが。。。 ムービークリップの中で 「蝶がはばたく」 だけのアニメーションを作成します。 それとは別ムービークリップの中に 「ウィンドウが開く」 だけのアニメーションを作成します。 その 「蝶」ムービークリップ と 「ウィンドウ」ムービークリップ を１つのムービークリップ内に入れて， その 『「蝶」＋「ウィンドウ」』 ムービクリップ をメインのタイムラインで動かします。 『「蝶」＋「ウィンドウ」』 ムービクリップ には例えば 「all_mc」 などというインスタンス名を付けておいて， その 「all_mc」 の中の 「蝶」ムービークリップには 例えば 「chyou_mc」， また 「all_mc」 の中の 「ウィンドウ」ムービークリップには 例えば 「window_mc」 というインスタンス名を付けておけば， //_root にある all_mc 内の window_mc 内の再生を停止(AS2) _root.all_mc.window_mc.stop(); または //root にある all_mc 内の window_mc 内の再生を停止(AS3) MovieClip(root).all_mc.window_mc.stop(); などのような命令ができるので， 自由にアニメーションをコントロールできます。 ※ 蝶が２頭いる場合は， 　 片方を「chyou_mc1」，もう片方を「chyou_mc2」など 　 別のインスタンス名を付けます。 このムービークリップ路線の方が良いですよ(多分)。
こちらのサイトを最初からやれば大分身につくと思います。 http://itpro.nikkeibp.co.jp/article/COLUMN/20071 … 参考URL：http://itpro.nikkeibp.co.jp/article/COLUMN/20071 …
数か文字列以外はそういう形で初期値は設定できないので public function hoge(args:Array = null):void { args=args||[] } というような感じで初期値を設定します
フリーのWebサイト張り付け用の FLV Player (パブリッシュ後 の SWFファイル)がたくさんありますから， それを使わせてもらえば良いのではないでしょうか。 私は個人的にそういうのを使いませんので(使うのだったらFlashのコンポーネントを使うか自作するので)， Webサイト張り付け用の FLV Player の種類など詳しくはよくわかりませんが， 今，ちょろっとそこらを検索してみました。 「Flash Video PlayerでWeb配信」 http://www.katch.ne.jp/~kakonacl/douga/ffmpegx/f … 同サイトより「FLV動画のWin版再生ソフト」 http://www.katch.ne.jp/~kakonacl/douga/flv_flash … 「Any Flv Player - swf プレーヤー - フリーウェア」 http://www.any-flv-player.com/jp/myspace_video/s … 「FLV Player フリーのFLV PlayerでWebサイトから動画配信 L04」 http://l-flvplayer.com/ 何というか...，書いているとキリがないです。。。 > 企業サイトでも使用可能 それは１つ１つ調べたり，場合によっては問い合わせをしないとどうかわかりません。
画像の入れ物になるクラスと FLVの入れ物になるクラスは違いますからね・・・ jpegなどの画像の入れ物になるのは UILoaderあるいはLoaderクラス FLVの入れ物になるのは FLVPlaybackあるいはVideoPlayerクラスです それにそのスクリプトって swfファイル自体のプリローダであって 外部の画像とかのもんじゃないですよね？ LoaderならcontentLoaderInfo VideoPlayerならそのインスタンス自身の bytesLoaded、bytesTotalを取得して 読み込み状況を調べます
マウスイベントのリスナーを持った インスタンスに内包される インスタンスはマウスイベントを 取得できません ので、代わりに onRollOverならフレーム毎に マウス座標とhitTestをさせたり onRereaseなら親のonRereaseのときに マウス座標とhitTestさせたりします
ParaFlaは使った事がないのですが これらを行うのにPapervision3Dなんかどうでしょうか？ あちらこちらで使われています
次のページをまず参考にされるのが良いと思います。 「gotoAndPlay/gotoAndStopでシーンの移動ができない」 http://fumiononaka.com/TechNotes/Flash/FN0205002 …
Flash内、sendAndLoadに渡すPHPプログラムファイル名は、絶対パス(http://から始まるすべてのURL)で記入していますか？ PHPのドメインと、SWFの貼られたHTMLのドメインは一致していますか？ PHP側で$_POSTではなく、$_REQUESTで取得した場合は、データが取得できますか？
クライアントが送った、または受け取ったバイト数ですので この質問への回答としては >それともクライアントが送信したバイト数なのでしょうか？ ですね。 で、 >プログレスバーと実際のアップロード完了のタイミングに >誤差が生じるようになってしまいました。 については、プログレスの100%はあくまで通信だけですので クライアントから見た送受信データの後処理まで含めた完了は Event.COMPLETE で仕掛けたイベントハンドラ内です。 サーバサイドの完了を待つ場合は、 HTTPStatusEvent.HTTP_RESPONSE_STATUS で仕掛けた イベントハンドラ内でチェックします。(HTTPStatusEvent.status=200等)
ボタンにマウスカーソルが重なった時のエフェクト程度でよければ、難しい計算をしなくても、シェイプトゥイーンで手軽に作れますよ。 次のように考えます。 ひし形から長方形に変化するシェイプトゥイーンのムービークリップを作ります。 このムービークリップをボタンに重ねて配置し、最初は非表示にしておきます。 ボタンにマウスカーソルが重なった時にエフェクトのムービークリップを表示し、ムービークリップのフレーム１から再生します。 マウスカーソルが外れた時はエフェクトのムービークリップを非表示にするのですが、いきなり消えてしまうと不自然ですから、ご提示のサイトの作品のようにフェードアウトで徐々に消していくのが簡単にできる演出だと思います。 ---------------------------------------------------- 作り方の一例です。 お使いの Flash のバージョンが分かりませんが、とりあえず MX ～ CS3 まで、Flash Player 6 以降・ ActionScript は 1.0 で考えます。 ここでは１から全てを説明できません。描画ツールの使い方・基本的な用語・トゥイーンの作り方等は解説書や解説サイト等をご参考になさってください。 まず、エフェクトのムービークリップを作ります。 「挿入」メニュー→「新規シンボル」で、”ムービークリップ”を選びます。 ムービークリップシンボルの編集画面になったら、長方形を１つ、描画します。 適当な長さのフレーム数を空けて、タイムラインにキーフレームを１つ作ります。フレームの数は演出の長さや作品のフレームレート等に応じて加減してください。あまりダラダラ長くしない方が演出のキレがよく、粗も目立ちにくくなります。 最初のキーフレームを選択し、「シェイプトゥイーン」を設定します。設定は「プロパティ」パネルの”トゥイーン”のリストの中にあります。 イージングを設定しても面白いかもしれません。イージングは”アウト”（最初は速く、徐々にゆっくりになる変化）がオススメです。 これだけでは最初と最後が全く同じ形で何も変化しませんので、最初のキーフレームの長方形を「歪曲」の変形ツールでひし形に変形します。「歪曲」変形は、ツールボックスで「自由変形」を選択した時のオプションから選ぶか、長方形を選択している状態で「修正」メニュー→「変形」を選ぶとその中にあります。 ボックスの四隅のハンドルを内側に向かってドラッグすると、角が内側に寄っていきます。右上と左下のハンドルをドラッグして、あまり不格好にならない程度にひし形になるように変形してください。厳密にひし形にならなくても、大体で構いません。 変形ができたら、タイムラインの再生ヘッドをドラッグして、大体のアニメの出来具合を確認してみてください。ひし形が長方形に変わるアニメになっていれば成功です。 ご提示のサイトの作品では、エフェクトが薄表示になっています。これは、最初のひし形と最後の長方形の塗りの色にアルファを設定しておくと簡単です。ひし形と長方形でアルファの数値を変えると、徐々に濃くなるアニメも同時に付けることができます。 レイヤーを１つ追加して、最後の長方形が表示されているフレームにキーフレームを作り、stop(); アクションを記述します。 これで、エフェクトのムービークリップは完成です。 ********************************** 次に、ボタンのムービークリップを作ります。 いろいろな作り方がありますが、ボタンとエフェクトのムービークリップを１つのムービークリップにまとめておくと、後でボタンの位置や大きさを変えたくなった時にも一緒に変更できて便利です。 別のムービークリップシンボルを、もう１つ作ります。 何か適当な絵を描き、この演出を施したい部分に先ほど作ったムービークリップを配置してください。 エフェクトのムービークリップにインスタンス名を付けます。ここでは仮に”eff_clip”とします。 ボタンのムービークリップをステージに配置し、こちらにもインスタンス名を付けます。仮に”btn_clip”とします。 以上で準備は完了です。 次はスクリプトを書きます。 ********************************** スクリプトはメインのタイムラインのフレーム１に記述します。 スクリプト専用のレイヤーを作っておくと便利です。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /****************************************************/ 　//最初はエフェクトを非表示にしておく 　btn_clip.eff_clip._visible = false; 　//エフェクトをフェードアウトさせる関数 　function Effect_FadeOut() 　{ 　　//アルファを下げる 　　//※速度は適宜変更してください 　　this._alpha -= 10; 　　//完全に透明になったら、非表示にして終了 　　if( this._alpha <= 0 ) 　　{ 　　　this._visible = false; 　　　this.onEnterFrame = undefined; 　　} 　} 　//マウスカーソルが重なった時の処理 　btn_clip.onRollOver = function() 　{ 　　//エフェクトを表示し、アルファを戻す 　　this.eff_clip._visible = true; 　　this.eff_clip._alpha = 100; 　　//フェードアウトの演出を削除する 　　this.eff_clip.onEnterFrame = undefined; 　　//エフェクトを再生 　　this.eff_clip.gotoAndPlay( 1 ); 　}; 　//マウスカーソルが外れた時の処理 　btn_clip.onRollOut = function() 　{ 　　//エフェクトをフェードアウトさせる 　　this.eff_clip.onEnterFrame = Effect_FadeOut; 　}; /****************************************************/ 「ムービープレビュー」で動作を確認してみてください。 エフェクトのアニメがおかしい場合はエフェクトのムービークリップシンボル（特にシェイプトゥイーンの設定など）を、マウスを操作しても何も起こらない場合はインスタンス名の誤りなどがないかを確認してみてください。 今回はスクリプトについては詳しくは触れませんが、要するに何をしているかといいますと、 　・普段はエフェクトを非表示にしておく。 　・ボタンにカーソルが重なった時、エフェクトを表示して、エフェクトのフレーム１から再生する。 　　エフェクトは最後のフレームで止まるようになっているので、アニメが終わったら、 　　カーソルが重なっている間は長方形がずっと表示される仕組み。 　・カーソルが外れた時は、エフェクトをフェードアウトで徐々に消し、最後は非表示にする。 といった処理を行っています。 ボタンのムービークリップの構成が異なる場合は、ターゲットパスの誤りにご注意ください。 当方は Flash CS4 を持っていないので、詳しくは分からないのですが。 CS4 ではトゥイーンの扱いがこれまでと大きく異なり、従来のいわゆるモーショントゥイーンやシェイプトゥイーンは”クラシックトゥイーン”というカテゴリーに移動してしたそうです。 ３Ｄ回転のトゥイーンもできるようなので、そちらを使うと正確な回転エフェクトが簡単に作れるかもしれませんね。 いずれにしても、こうしたエフェクトのアニメをムービークリップとして用意しておけば、あとはフレームの操作などの基本的なスクリプトだけで制御できます。ボタンの大きさが違う場合も、ムービークリップを伸縮させるだけで簡単に合わせることができます。 その他の様々なエフェクトも、同様にムービークリップのタイムラインを利用して用意すると便利です。機会がありましたら、ユニークなエフェクトを作ってみてください。
＃１です。 写真をムービークリップ内の各フレームに配置し たとえば「photo_mc」というインスタンス名を付け その他のインスタンスも図のように配置し それらがあるフレームに次のように書けば良いのではないかと思います。 ------------------------- //ムービー内の拡大縮小なし stage.scaleMode = StageScaleMode.NO_SCALE; //ステージの左上を基準に整列 stage.align = StageAlign.TOP_LEFT; //写真入り「photo_mc」の再生停止 photo_mc.stop(); //インスタンスを配置する関数 arrangeInstance を定義 function arrangeInstance():void{ // //---背景の「back_mc」に関して--- //ｘｙ座標を0にする back_mc.x=back_mc.y=0; //横幅をステージ幅に合わせる back_mc.width = stage.stageWidth; //高さをステージ高に合わせる back_mc.height = stage.stageHeight; // //---写真入り「photo_mc」に関して--- //縦横比を求める var hpw:Number = photo_mc.height/photo_mc.width; //横幅をステージ幅の半分にする photo_mc.width = stage.stageWidth/2; //高さをその比に合わせる photo_mc.height = photo_mc.width*hpw; //x座標をステージ中央にする photo_mc.x = stage.stageWidth/2; // //---ボタン「prev_btn」に関して--- //x座標をステージ中央より60px左にする prev_btn.x = stage.stageWidth/2-60; //ｙ座標をステージ下より30px上にする prev_btn.y = stage.stageHeight-30; // //---ボタン「next_btn」に関して--- //x座標をステージ中央より60px右にする next_btn.x = stage.stageWidth/2+60; //ｙ座標をステージ下より30px上にする next_btn.y = stage.stageHeight-30; } //関数 arrangeInstance を実行 arrangeInstance(); //リサイズしたときに関数 sizeChange を実行するリスナーを登録 stage.addEventListener(Event.RESIZE, sizeChange); //関数 sizeChange を定義 function sizeChange(evt:Event):void { //関数 arrangeInstance を実行 arrangeInstance(); } //「prev_btn」にクリックでprevClickを実行するリスナーを登録 prev_btn.addEventListener(MouseEvent.CLICK,prevClick); //関数 prevClick の定義 function prevClick(evt:MouseEvent):void{ //写真入り「photo_mc」内を前のフレームに戻して停止 photo_mc.prevFrame(); } //「next_btn」にクリックでnextClickを実行するリスナーを登録 next_btn.addEventListener(MouseEvent.CLICK,nextClick); //関数 nextClick の定義 function nextClick(evt:MouseEvent):void{ // 写真入り「photo_mc」内を次のフレームに戻して停止 photo_mc.nextFrame(); } ------------------------- なおSWFはHTMLに縦横100％で貼り付けること。 (パブリッシュ設定でHTMLタブを選択して サイズ を パーセント にして 幅：100％ 高さ：100％ にするとか) 以上で回答字数制限ほとんどいっぱいです
多分画像もマウスイベントを受け取る interactieObject継承クラスになってるからだと思います 画像のインスタンスのmouseEnabledをfalseにしてみてください
> ABCAと連続する一画像を作成し、 > それをクラッシックトィーンで一画像ずつ移動させて、 > 画像が移り変わるものを作成しました。 冷たい言い方かもしれませんが(というか冷たい言い方ですが) そこ（クラシックトゥイーン）からはほど遠いと思いますし， また逆にその路線を進めても遠回りだと思います。 作り方ではありませんが， ちょうど最近(一昨日くらいに)，同様の "素材" 配布ページを見かけました。 「PG Flash Slide Menu Pixel Graphic」 http://www.pixel-graphic.net/flash-parts/slide-m … > その設定がわかりません（Timer？if？…）。 「設定」というような単純なものではありませんよ。 またココで「こうすれば良いよ」なんて回答もできるものでもありません。 ちゃんと手順を追って論理的にキッチリとActionScript（や数学算数）を修行する必要があります。 上記素材(作る素材ではなくできてしまったものを使う素材)でも使わせてもらうとか， どうなっているのか色々研究(観察・思考)してみても良いかもしれません。
単純に， pageA の最初のフレームのスクリプトを pageB に移動させるだけにしておいて↓， var mykey = new Object(); mykey.onKeyDown = function() { if (Key.getCode() == 13) { //次のページへジャンプ gotoAndPlay("pageB"); } } Key.addListener(mykey); pageB の最初のフレーム(キーフレーム)に pageC に移動させるだけのスクリプトを書いて↓， mykey.onKeyDown = function() { if (Key.getCode() == 13) { //次のページへジャンプ gotoAndPlay("pageC"); } } pageC の最初のフレーム(キーフレーム)に pageD に移動させるだけのスクリプトを書を書けば良いのではないでしょうか↓？ mykey.onKeyDown = function() { if (Key.getCode() == 13) { //次のページへジャンプ gotoAndPlay("pageD"); } } そもそも元からフレームを使っているんですから，それくらい苦にならないはずですし， フレームの 「a」記号(ActionScript書いてます記号)を見れば そこに ActionScript を書いているのくらいすぐにわかりますから， 後のメンテナンスも問題ないのではないでしょうか？ もし強引に pageA の最初のフレームにまとめるのでしたら， 　「もし現在のフレームが ○○ 以上 ○○ 以下の場合」 　　なおかつ「Enter キーを押された場合」 など余計にややこしくなるだけで， あとのメンテナンスも逆に大変になると思いますよ。
状況がよくわかりませんが 単純に次のようにすれば良いのではないでしょうか？ --------------------- this.stop(); this.iid = setInterval (function (m) { m.gotoAndPlay(10); clearInterval (m.iid); }, 3000, this); --------------------- なお ActionScript 3.0 では，ヘルプなどを見ると， setInterval のかわりに Timerオブジェクト を使用するように注意書きがありますので， Timerクラス のメソッドなどを使用した方が良いでしょう。 私が上で書いたスクリプトを Timerクラス を使って書き直した例↓。 --------------------- this.stop(); //3000ミリ秒間隔で1回だけ実行するTimerインスタンスを作成 var myTimer:Timer = new Timer(3000, 1); //myTimerにTIMERイベントで動作させるイベントリスナーを登録 myTimer.addEventListener(TimerEvent.TIMER, function(){ gotoAndPlay(10); }); //myTimerスタート myTimer.start(); --------------------- 　
「複数ボタンで指定のフレームに移動」 http://okwave.jp/qa/q5750382.html の＃２で書いた者ですが。 そこにも書きました(画像を貼りました)通り， インスタンスはフレーム1から出てこなくても何の不具合も生じません。 ただ，このコミュニティでも質問者さんと同様の現象を書かれる方はいらっしゃいます。 私はそういうことに遭遇しないので， 原因や解決策は不明です。 とりあえず報告まで。
＃１です。 > 添付写真1～4の部分どこに記述してもエラーになってしまいます。 １～４の中では ２ または ３ に書く必要があります。 少なくとも「menu」というインスタンス名を付けたインスタンス(ボタン)がその時点で存在しないと，何も命令や設定はできませんから。 > この場合どんな原因が考えられるのでしょうか？ 私は， 「インスタンスを作成(配置)する」→「インスタンス名を付ける」→「場合によってはそのインスタンスにモーショントゥイーンなどを付ける」 という普通にやる手順通りにいつも作成してますので今まで気付きませんでしたが， CS4 の モーショントゥイーン (新モーショントゥイーン) は少々特別なようです。 モーショントゥイーン後のインスタンスにスクリプトで何かを指定したり命令する場合， モーショントゥイーン開始時からそのインスタンスにインスタンス名をつけておかなければならないようです。 ですから， 上に書いた「インスタンスを作成(配置)…モーショントゥイーンなどを付ける」 という手順通り作成していれば何も問題は起こらないのですが， モーショントゥイーンを作成した後にインスタンス名を付けるという普通ではない手順を取った場合， 必ず 「モーショントゥイーン開始時のインスタンスにインスタンス名を付ける」 ということに気を付けなければならないようです。 ※ 小さいですが図参照のこと↓。
> これは何がいけないのでしょうか・・・ 何がいけないというか...，そういうものです。 つまり， そういう仕様ですから，その仕様が不都合だと思う場合は， その不都合を回避する必要があります。 「FN0307007 - MovieClip.loadMovieで外部ファイルを読込む」 http://fumiononaka.com/TechNotes/Flash/FN0307007 … > 3. MovieClip.loadMovieで外部ファイルを読込む際の注意 > 外部ファイルをMovieClip.loadMovieメソッドで読込むと、 > ターゲットインスタンスにスクリプトで設定したプロパティやメソッドなどは > すべてクリアされます。 > これは、プロパティやメソッドをMovieClip.loadMovieメソッドの > 実行前に定義した場合ばかりでなく、 > 実行直後に設定した場合も同じです。 　　　～略～ > インスタンスに設定したMovieClipアクションは、 > 外部ファイルをMovieClipにロードしてもそのまま残ります。 > ですから、イベントハンドラメソッドなどのフレームアクションを中心とした > MXスタイルのスクリプティングでも、 > onClipEvent (data)イベントハンドラアクションは > 引続き使用する価値があります。 上記サイトには回避策などはあまり書いていませんが， 回避策は考えればたくさんあります。 １　mc.onRelease を使うのではなく 　　mc 自体に on(release)　を書く ２　mc.onRelease を設定する mc の中に 　　ロード用ムービークリップを作成しておいて 　　そこに 外部画像をロードする。 　　(親に設定，子にロード。) ３　mc.onRelease を設定する mc の下レイヤーに 　　ロード用ムービークリップを作成して 　　そこに 外部画像をロードする。 　　(上に設定，下にロード。) ４　MovieClipLoader で外部画像をロードし 　　MovieClipLoader.onLoadInitイベントで 　　mc.onRelease を設定する。 上記解決策で言えば ２ か ４ 辺りがお薦めです。 Flash以外の一般的プログラマは ４ しか考えないと思いますしそれを使おうとすると思います。 Flash 作成者からすれば ４ などまどろっこしくて面倒くさいかもしれません。 「FN0501003 - MovieClipLoaderクラスについて」 http://fumiononaka.com/TechNotes/Flash/FN0501003 …
sortOnの第一引数はフィールド名のStringですよ var arr:Array = new Array(); for (var i:int=0; i<3; i++) { arr[i]= new Sprite(); with (arr[i].graphics) { beginFill(0x666666); drawRect(0,0,8,8); endFill(); } arr[i].x = i*10; addChild(arr[i]); } for each(var spr in arr)trace(spr.x) arr.sortOn("x",2||16) for each(spr in arr)trace(spr.x) あと、降順に並べたいなら 第二引数に2もしくはArray.DESCENDINGを追加 やりたい事が順番を逆に したいだけだったら arr.reverse()でもいいかと思います
＃１です。 > どのようなモーショントゥイーンで表現されているか どのようなと言われましても， 「『普通にするような』モーショントゥイーンさせている。」 としか言えませんが...。 極々普通の何の工夫も何の特殊技も使わないシンプルなモーショントゥイーンです。 下の図では見やすくするために座標もズラしてモーショントゥイーンさせていますが， 同じ場所でモーショントゥイーンさせれば， その場所の ボワー っと 「よもやま旅館」 が出てきます。 とにかく， 普通にモーショントゥイーンを作り続けて慣れるしかないのではないでしょうか？ 慣れれば頭も全く使いません。とにかく「普通」です。 　
たとえば、ここの質問にJpegなどの画像を掲載しても、Flashとして掲載されます。 どうやっているのかはわかりませんが、たぶん、これが精一杯の防御法ではないでしょうか。
最小の変更で こんな感じ↓にすれば良いのではないでしょうか？ =========================================== var buttonNames=new Array("button1","button2","button3","button4"); button1.buttonMode=true; button2.buttonMode=true; button3.buttonMode=true; button4.buttonMode=true; button1.addEventListener(MouseEvent.CLICK, buttonClick); button2.addEventListener(MouseEvent.CLICK, buttonClick); button3.addEventListener(MouseEvent.CLICK, buttonClick); button4.addEventListener(MouseEvent.CLICK, buttonClick); function resetButton() { for (var i = 0; i < buttonNames.length; i++) { this[buttonNames[i]].gotoAndStop(1); this[buttonNames[i]].enabled=true; } } function buttonClick(event:MouseEvent):void { resetButton(); event.currentTarget.gotoAndStop(2); event.currentTarget.enabled=false; } ================================================== でもこれだと配列を用意した意味がほとんどなくなります。 次のようにすれば， ある程度は配列の意味が出てくるかもしれません(どっちにしてもあまり出ませんけど...)。 ================================================== var buttonNames=new Array("button1","button2","button3","button4"); for (var i:int = 0; i < buttonNames.length; i++) { this[buttonNames[i]].buttonMode=true; this[buttonNames[i]].addEventListener(MouseEvent.CLICK, buttonClick); } function resetButton() { for (var i:int = 0; i < buttonNames.length; i++) { this[buttonNames[i]].gotoAndStop(1); this[buttonNames[i]].enabled=true; } } function buttonClick(event:MouseEvent):void { resetButton(); event.currentTarget.gotoAndStop(2); event.currentTarget.enabled=false; } ================================================== 　
E.M.Magic Swf 2Aviは 専門SWFがソフトウェアを変えるのです。 swfからmp4とflvまで変換することがあります. 画質がょかたです。 試してみたんですが
> FLASHゲームには、FLEXとFLASHどちらがいい？ という問いだと Flash でしょうね。 0から 「自由」 に作れますから(あくまでも Flash 内での 自由に ですが)。 Flex だと「型にはまった」ものしか作れません。 > いろいろと見てると、FLEXはプログラマ向けといったことが書いてあるのですが、 その「プログラマ」の指す「プログラマ」は， ActionScript 以外の「プログラマ」です。 例えば 「チャートグラフ」 の原型のようなものは Flex に備わっているんです。 その 「チャートグラフ」 のようなものに他言語から数値を代入したり，少しカスタマイズするのに便利なのが Flex です。 ですから， PHP とか Java とかのプログラマが， 0 から 絵を描いたりボタンを作ったりする必要がないのが その 「プログラマ」 にとっての魅力なわけです。 現実問題， Flex のそう言ったインターフェイスは，Flash のプログラマによって作られているわけで， 結局のところ，Flash のプログラマがある程度作った「型」を使うのが楽か， 「型」などなしに「自分で自由に作るもの」が良いかということになります。 ゲームは型には普通収まらないので，Flash を使うのが普通です。 「業務用レトルトのカレー」を想像してもらえばわかりやすいかもしれません。 そこら辺のプロの料理人(喫茶店とかファミレスとか)もレトルトのカレーは使いますし， それでないと商売が成り立ちません。 ＝料理人向け しかし， ナツメグやターメリックを買いそろえて ココナッツミルクやチャツネなども自分で買ったり作ったりすれば， もっともっと自由なカレーは作れますし，カレー以外にも色々なものにも応用できます。 ＝カレー職人向け そういう違いです。
フレームで調整せずに、親にタイマーイベントを仕掛けて 管理してみてはいかがでしょうか？ http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … ex) var movieManageTimer:Timer = new Timer( 5000, 0 ); movieManageTimer.addEventListener( TimerEvent.TIMER, movieManageTimerHandler ); private function movieManageTimerHandler( event:TimerEvent ):void { 　// ムービーを切り替えて再生する }
IE8 ですか。 実験したのはローカルPCのファイルを実行させたのではないでしょうか？ ローカルでは以前に書いたJavaScriptは動作しません。 おそらくネットにアップした物を見ると大丈夫だと思いますが。 (↑当然JavaScriptを有効にした上での話です。) IE8でローカルで試す場合は， IEの「ツール」→「インターネットオプション」より「詳細設定」タブを選択し， 　マイコンピュータでの、CD のアクティブコンテンツの実行を許可する* 　マイコンピュータのファイルでのアクティブコンテンツの実行を許可する* の両方にチェックを入れる必要があります。 (場合によっては下側だけのチェックで良いかも。) そして IE の再起動です(PCの再起動ではありません)。 　
どうやってそうなったのかわからないので よくあるパターンの場合の事書いておきます まだ再生されていないフレームのインスタンスにはアクセスする事はできません １フレーム目に２フレーム目から出現するインスタンスに関するスクリプトを書いても nullのオブジェクトの参照にアクセスできませんとかいわれてエラーになります FLVPlaybackのスキンは外部ファイルです サーバーにアップして使うにはそのスキンのswfファイルを アプリケーションフォルダの中から引っ張りだして 一緒にアップロードしなくてはいけません コンポーネントのクラスをスクリプトで配置するには fl.controlsやfl.videoパッケージをimportするだけではだめです ライブラリにUIのクラスが使うスキンとなるクラス群を入れておき （つまるところコンポーネントウインドから一度どこかに配置して） flaファイルにそのクラスが埋め込まれるようにしておかなくてはいけません
FlashVarsを使用してはいかがでしょうか。 SWFファイルを貼り付けているHTML内で以下のように指定すると ActionScript内で "flvurl"という変数名で "http://flvserv.com/123.flv"という値を 取得できるようになります。 -------------------- 書式: (変数名1)=(値1)&(変数名2)=(値2)&…&(変数名n)=(値n) -------------------- <param name="flashvars" value="flvurl=http://flvserv.com/123.flv" /> <embed src="player.swf" 　…(略)… 　flashvars="flvurl=http://flvserv.com/123.flv"/> -------------------- 取得方法自体はASバージョンや使用ツールがCS/Flexかによっても 方法が異なるので以下参照で。 ■CS(AS2.0) http://help.adobe.com/ja_JP/AS2LCR/Flash_10.0/he … ■CS(AS3.0) http://blogs.adobe.com/pdehaan/2006/07/using_fla … ■Flex(AS3.0) var flvurl:String = Application.application.parameters["flvurl"];
とりあえず、タイムライン上に二つのFLVPlaybackなりを並べた所で 最初のFLVの再生完了を待って次のフレームに行く、なんてことはしてくれません だから最初のFLVPlaybackが再生を終了して"complete"イベントを 発信するまでそのフレームで停止し、"complete"イベントで 次のフレームに移動するような処理を書いてやる必要があります また、読み込み済みパーセンテージを反映するような プリローダーを作るなら読み込み状況を調べる必要があります これはFLVPlaybackインスタンス、もしくはそれが読み込み中に 発信するprogressイベントのbytesLoadedとbytesTotalプロパティで 読み込み済みのバイト数、読み込もうとしてる総バイト数を 取得する事で調べることができます プリローダーのムービーを作るなら ENTER_FRAMEイベント毎に インスタンスから調べる方がいいでしょう progressを使うのはスクリプトの処理を 待たせたい時位かと思います 別に読み込み済みパーセンテージとかを反映する必要はないなら FLVPlaybackのインスタンスはファイルの読み込みが終われば readyイベントを発信してくれるので それを受けてプリローダのムービーを 終了させれば良いだけです あと、もしビデオBのプリローダーとしてビデオAを使おうとかしてるのだとしたら ビデオAをよっぽど軽くするか、埋め込むか、最初のフレームであらかじめロードしておくか しておかないと、プリローダのビデオAが始まるまでに時間がかかるという 本末転倒な結果になってしまいます あと、rootのloaderInfoは外部の画像とか動画のロードは含まず なおかつ、まだ再生されていないフレームに配置されたインスタンスには アクセスすることはできません プリローダとムービーのフレームを分けてやりたいなら ムービーをプリローダのフレームに見えない形で置いておくとか してやらないとイベントの取得も、そもそもロードの開始もできません
＃１です。 > この件についての記述内容が参照出来るサイトが有れば > ご指示いただければ幸いです。 ヘルプなどを見てわかりませんでしたか？ そのまんまですけどね。 ファイル構造が次のような状態であったとします。 　任意のフォルダ 　　　　├○○○.html(AAA.swf を貼り付ける) 　　　　└AAA.swf ＃１で書いたページのJavaScript入りHTMLをそのまま流用させてもらった場合。 ---○○○.html 例 ---------- <HTML> <HEAD> <TITLE></TITLE> <SCRIPT language="JavaScript"> <!-- // ウィンドウを揺らす itv = 100; // ウィンドウを揺らす間隔(ミリ秒単位) cnt = 0; // ウィンドウを揺らすパターン。x座標・y座標 x = new Array( 12,-20, 8,-16, 20, -4, 16, -8, 4,-12,0); y = new Array(-20, 8,-16, 12,-12, 16, -4, 20, -8, 4,0); function quakeWindow() { if(x[cnt] != 0) moveBy(x[cnt],y[cnt]); cnt++; if(cnt < x.length) setTimeout("quakeWindow()",itv); else cnt = 0; } //--> </SCRIPT> </HEAD> <BODY bgcolor="#ffffff"> <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="400" id="AAA" align="middle"> <param name="allowScriptAccess" value="always" /> <param name="movie" value="AAA.swf" /> <embed src="AAA.swf" width="550" height="400" name="AAA" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash" /> </object> </BODY> </HTML> -------------------------- そして AAA.swf(AAA.fla) の フレーム60 をキーフレームにして そのキーフレームに次の１行を記入。 -------------------------- ExternalInterface.call("quakeWindow"); -------------------------- 以上で終わりです。 <INPUT type="button" value="ウィンドウを揺らす" onClick="quakeWindow()"> ↑このように HTML のボタンから JavaScript で定義した関数 quakeWindow を叩くようにしてあった部分を， ExternalInterface.call("quakeWindow"); ↑このように SWF のフレームから JavaScript で定義した関数 quakeWindow を叩くように変えただけです。 navigateToURL よりも Loader.load よりも簡単。 JavaScriptの関数名quakeWindowは自由に変えれば良いですし，関数の内容自体も自分で変えれば良いと思います。 > ExternalInterface.call でJavaScript の関数を叩けば良い ＃１で書いた内容そのまんまでしょう。 　
AS2.0のvariableは使ったこと無いのですが、 AS3.0の[Bindable]の機能に似ていますね。 どうでしょ？ ・Flash CS3のLiveDoc http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … ・Flex SDK3.2 のLiveDoc http://livedocs.adobe.com/flex/3_jp/html/help.ht …
#1です 例えば一瞬でダウンロード終わっちゃうとします info.bytesLoaded / info.bytesTotal;は１です scaleXは1/8になりますが perはもう1になっているので 2フレーム目に移動します scaleXは1/8より伸びることはありません perが1になればもう次はないからです だからscaleXがperに追いつくまで 2フレーム目にいくのは待ってほしいわけですが perとscaleXっていうのはアキレスと亀の状態で 永遠にperにscaleXが追いつくことはありません なので『アキレスが亀に十分近づいたら』 とかぐらいにしときます if(scaleX>0.99) これでもscaleXが1になることはないですが どのみちこのイージングの方法だと アキレスと亀の状態になってしまって 永遠にscaleXは1になることはないです ほぼENTER_FRAME毎に変わる値に イージングしても意味が無い っていうのは例えば このイージングの方法っていうのは ゴムでなにかを引っ張ってる状態だと思ってください ゴムを引っ張るものが引っ張った所で 止まってくれれば引っ張られるものが 引っ張ってるものに近づいていき 引っ張ってるものとの距離を縮めるほど減速していく イージングアウトのカンジの動きになりますが 引っ張っているものが延々動き続けると 引っ張られているものは引っ張っているものに ずっと近づくことはできず減速もしないので イージングアウトのカンジの動きにはなりません だからイージングアウトのカンジの動きを してもらいたければ引っ張っているものに ちょくちょく立ち止まってもらわなきゃいけません その為にはたとえばperを20%区切りで 上昇させるようにしたりします var per:Number=0 while( info.bytesLoaded / info.bytesTotal>per)per+=0.2 でも秒速何十MBという速度のご時世に このファイルの重さだとあんまり意味ないだろうとも思います
当方、Flash8ユーザなので、この件と該当するかはわかりませんが、経験から思い当たる点を書かせていただきます。 ページが表示されないわけじゃないし、ムービーが動かないわけじゃないし、それでもスクリプトは動いてくれないし・・、ローカルでは動くのに・・！？という状態のときに、ここの部分修正で動くようになりました、という体験談です。 お役に立つかは解りませんが。 ◆swfファイルと一緒に書き出されたhtmlファイルの中に <script language="JavaScript" type="text/javascript" src=" [ 任意のファイル名 ] .js"></script> の記述がなく、 swfファイルが<EMBED></EMBED>タグの内部に配置されていた場合には、 [ 任意のファイル名 ] .jsファイルの用意と、htmlページの書き換えで動くようになりました。 （書き出しの内容は対応するFlashPlayerのバージョンによって違いますので、一番新しいバージョンを指定して書き出せば、最近のFlashならば<EMBED></EMBED>では書かれないのではないかと思いますが。） ◆上の記述がある場合でも、 src=" [ 任意のファイル名 ] .js"　のリンクが、サーバ上のアドレスとあっていない場合や、ローカル指定のままになっている場合に、スクリプトが作動してくれませんでした。（html,swf,js各ファイルの配置関係が維持されていても、サーバによっては絶対アドレスでないと作動しない場合もあるらしいです。） そんなこと知ってるし！　て場合は、どうもごめんなさい・・。 謎が解けますように。
すいません 先のJSFLよりそのまんまぴったりなやつがいたの忘れてました 『ビルド』って名前で使ってたJSFLです イラレでブレンドで作ったアートブラシで 文字を書いてFlashに持って行く所までは同じ あとは分解してからこのJSFLを使います d=prompt("間隔","1") dom=fl.getDocumentDOM() tml=dom.getTimeline() lyr=tml.layers[tml.currentLayer] crrFrm=lyr.frames[tml.currentFrame] f=crrFrm.elements.length tml.insertFrames(f*d) for(i=0;i<f;i++){ tml.insertKeyframe(f*d-i*d) crrFrm=lyr.frames[tml.currentFrame] for(j=0;j<i;j++){ ele=crrFrm.elements[crrFrm.elements.length-1] ele.selected=true dom.deleteSelection() } for(j=0;j<crrFrm.elements.length-1;j++){ ele=crrFrm.elements[crrFrm.elements.length-1-j] ele.firstFrame=j*d } }
LoacalConnectionクラスを使用すれば クライアントサイドで複数のswfの通信が可能になります ■画像swf側 new LoacalConnection().connect("適当な名前") function 関数名(...引数){ } ■ボタンswf側 new LoacalConnection().send("適当な名前",関数名,...引数) 使った事ないんですがこんなカンジに使うようです
ご質問のスクリプトですが， 普通の書き方にすると次のようになります。 ------------------------------- split2d = function (str) { tmpAr = str.split("|"); for (j=0; j<tmpAr.length; j++) { tmpAr[j] = tmpAr[j].split(","); } return tmpAr; }; myString = "1,2,3,4|5,6,7,8|9,10,11,12"; tmp = split2d(myString); trace(tmp[0][0]); ------------------------------- 　↓型指定を入れた方がわかり易い？↓ ------------------------------- split2d = function (str:String):Array { var tmpAr:Array = str.split("|"); for (var j:Number=0; j<tmpAr.length; j++) { tmpAr[j] = tmpAr[j].split(","); } return tmpAr; }; var myString:String = "1,2,3,4|5,6,7,8|9,10,11,12"; var tmp:Array = split2d(myString); trace(tmp[0][0]); ------------------------------- 上が ActionScript 1.0 風で 下が ActionScript 2.0 風です。 これを 　あえて普通ではない， 　Stringクラスの拡張メソッドもどき的な書き方をすると， 　ご質問のようなう書き方もできますよ。 ということでしょう。 普通は上で書いたようにするので， ご質問のスクリプト自体には全く有り難みを感じませんが， ご質問の "スクリプト自体が重要" なのではなく， 　このような書き方をすると何かの時に使えるかもしれませんね。 という "スクリプトの可能性" を書いているのだと思います。 > split2dはなんですか？ 作者が勝手に作った(命名した)，メソッド名(匿名関数参照の変数名)です。 以下は，＃２の方が書かれていらっしゃる内容と同じでが。 ・ご質問のスクリプトの訂正 　trace(tmpAr[0][0]); 　　　↓訂正↓ 　trace(tmp[0][0]); ・補足内容の訂正 > //結果をtmpArにreturn > return tmpAr 　↓訂正↓ //できた配列 tmpAr を return(戻り値として返す) return tmpAr 　
どのみちソース見つけた所で 書き換える為に配信されてない限り コード読めないと書き換えられないですし 正直、くるくる回るあれの動き自体は そんなに目新しいもんでもなく いろいろ練習台にちょうどいいって いう程度のもんなんで練習がてらがんばってください 最近似たようなのつくるメソッド クラスに追加したばっかりなんで 参考までに書き換えておいときます 実はindexの処理がダブりがあって 効率悪いのは秘密です import fl.motion.Color var icons:Array=new Array() for(var i=0;i<6;i++){ var newIcon:Sprite=new Sprite() with(newIcon.graphics){ lineStyle(4,0) beginFill(0xFFFF44) drawEllipse(0,0,80,80) endFill() moveTo(30,20) lineTo(30,30) moveTo(50,20) lineTo(50,30) moveTo(20,40) curveTo(20,60,40,60) curveTo(60,60,60,40) } var bmpData:BitmapData=new BitmapData(newIcon.width+10,newIcon.height+10) var mtx:Matrix=new Matrix(1,0,0,-1,5,newIcon.height) var ctf:Color=new Color() ctf.setTint(0xDDDDDD,0.7) bmpData.floodFill(1,1,0) bmpData.draw(newIcon,mtx,ctf) var bmp:Bitmap=new Bitmap(bmpData) bmp.x=-5 bmp.y=newIcon.height+10 bmp.filters=[new BlurFilter()] newIcon.addChild(bmp) icons.push(newIcon) } var menu=rollingMenu(icons,{width:400,height:50}) menu.x=stage.stageWidth/2-400/2 menu.y=stage.stageHeight/2-100 addChild(menu) function rollingMenu(icons:Array,paramObj:Object):Sprite { var rtn=new Sprite(); var w=paramObj.width||200; var h=paramObj.height||20; var rList:Array=new Array(); var zList:Array=new Array(); for (var i in icons) { rList.push(i*Math.PI*2/icons.length); rtn.addChild(icons[i]); } rtn.addEventListener(Event.ENTER_FRAME,frameTick) var r=0; var spd=0; function frameTick(e) { if ((0<rtn.mouseY)&&(rtn.mouseY<h+icons[0].height)&&(rtn.mouseX>0)&&(rtn.mouseX<w)) { spd+=(rtn.mouseX-w/2)/w/50; } spd*=0.9; r+=spd; for (var i in icons) { var tgt=icons[i]; var z=Math.sin(r+rList[i])*w/2; tgt.x=Math.cos(r+rList[i])*(w-icons[0].width)/2+w/2-icons[0].width/2; tgt.y=z*h/w+h/2; tgt.scaleX=tgt.scaleY=z/w/4+1; } for (i=1; i<rtn.numChildren; i++) { if (rtn.getChildAt(i-1).y>rtn.getChildAt(i).y) { rtn.swapChildrenAt(i-1,i); if (i>2) { i-=2; } } } } return rtn; }
１です。 ムービークリップの構造が２さんが言われた形なら ２さんの回答で良いかと思いますが、１つ補足です。 ―――――――――――――――――――――――― モーショントゥイーンの間にキーフレームがあれば， 全てのキーフレームに同様のことを書く必要がありますが。 ―――――――――――――――――――――――― これは、正しくは ―――――――――――――――――――――――― モーショントゥイーンの間にキーフレームがあれば， 全てのキーフレーム　の「蝶つきのウィンドウムービークリップ」　に 同様のことを書く必要がありますが。 ―――――――――――――――――――――――― です。
#1です。 すいません。直したコードの最後間違っていますね。 // 次に並べる画像の開始位置 = 前画像の開始位置 + ( 元の画像幅 * 拡大率 ) + 余白 (誤) rw = 360 * element.@imgwidth / element.@imgheight + 10; (正) rw += 360 * element.@imgwidth / element.@imgheight + 10;
いったん、AVIの無圧縮出力で動画のRAWデータを作成してから、 汎用的なAVI⇒GIF変換ソフトウェアを使用してGIFアニメに変換するのが 適作だと思われます。 しかしGIFはあくまでネットワークにおいて光通信なんてことか一般には 考えられなかった時代の画像配信形式として開発されたものですので、 画質はあまり期待しないほうがいいですよ。
企業での作業や、相手が企業の時などは2.0のほうがいい場合が 多いみたいですよ。自分はグラフィック系ですが、現場のソフト のバージョンを見るとCS4どころかCS3もレアでCS2やCSが現役です。 Flashの会社もそんな感じじゃないでしょうか。3.0が使えないこと もありえるでしょう。 でも学校のFlashの授業はほぼ確実に3.0になっていると思います。 都合上2.0を使わざるを得ない場合以外は3.0のほうがいいという のが自分の意見です。
返信ありがとうございます。 > 変数thelistとは、listコンポネットのインスタンス名です。 …ということで、調べました。 そのコンポーネントだと文字列を1行につき1つしか表示できないと思います。 1行に3つ表示したいのですからDataGridの方が向いていると思います。 http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … (DataGridインスタンスに、3つのDataGridColumnインスタンスを追加で実装可と思われます) 残念ながら、私はFlashCSを持っていないのでAS2.0版のDataGridを 試すことは出来ませんでした。 AS3.0(Flex)なら実装してみましたが…、ご希望であればコードを投稿します。 > ご教授頂いたとおりにやりましたら～ 多分、コピペ等でそのまま動かした為だと思います。 投稿時、コードのインデントに全角スペースを利用したのと、 行末にセミコロンがいくつか抜けていたせいです。すいません。 PHPを書くのは初めてですが、今度はコンパイラを使って動かしてみました。 掲載コードのforループ内のechoを karisuma79さんのコードに 移植すればXML出力できると思います。 -------------------- ダミーXML出力PHP -------------------- <?php header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); header("Cache-Control: no-store, no-cache, must-revalidate"); header("Cache-Control: post-check=0, pre-check=0", false); header("Pragma: no-cache"); // DB構築してないので簡易データを用意 $record = array(); $record[] = array("name" => "まつお", "sumai" => "東京", "birthday" => "20010203"); $record[] = array("name" => "とき", "sumai" => "大阪", "birthday" => "20090625"); $record[] = array("name" => "ひまわり", "sumai" => "東京", "birthday" => "20100206"); echo "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n"; echo "<dogDB>\n"; // DBから取得する(つもり) for ($i = 0; $i < count($record); $i++) { $line = $record[$i]; echo "\t<item>\n"; echo "\t\t<name>" . $line["name"] . "</name>\n"; echo "\t\t<sumai>" . $line["sumai"] . "</sumai>\n"; echo "\t\t<birthday>" . $line["birthday"] . "</birthday>\n"; echo "\t</item>\n"; } echo "</dogDB>\n"; ?>
JavaScriptで何をやっているかもよるかと思いますが、ActionScriptはJavaScriptから派生した物ですし、一般的には理解しやすいと思います。 ただ、方言を理解するのに苦しむかもしれません。
Temporary Internet Filesからコピーすれば良いかと思います。 そのためソフトは必要ありません。
こんな感じで良いのではないでしょうか。 -------------------------------- Mouse.hide(); // ↓付け加え point_mc.mouseEnabled=false; stage.addEventListener(MouseEvent.MOUSE_MOVE, function(e){ point_mc.x=stage.mouseX; point_mc.y=stage.mouseY; }); skip_bt.addEventListener(MouseEvent.CLICK, introClick); function introClick(evt:MouseEvent):void { gotoAndStop("intro"); } -------------------------------- 「ActionScript 3.0で始めるオブジェクト指向スクリプティング：第30回　マウスイベントとインスタンスの兄弟・親子の関係｜gihyo.jp … 技術評論社」 http://gihyo.jp/dev/serial/01/as3/0030
「ブラウザを閉じる」ですから，何にしてもJavaSciptですね。 Google検索「window.close」 http://www.google.co.jp/search?hl=ja&safe=off&q= … FlashCS4 で ActionScript 2.0 でしたら， ExternalInterface.call() ←Flash Player 8 以上用 SWF パブリッシュ または getURL() ←Flash Player 8 未満用 SWF パブリッシュ 辺りで， JavaScript の window.close() を実行させるような感じになるでしょう。 Google検索「getURL window.close」 http://www.google.co.jp/search?hl=ja&safe=off&q= … Google検索「ExternalInterface.call window.close ActionScript 2.0」 http://www.google.co.jp/search?hl=ja&safe=off&q= … なお， getURL() ←Flash Player 8 未満用 と書きましたが，Flash Player 8 以上でも動作します。 一応，分類しただけです。
> PDFファイルではなくSWFファイルを使用する利点 たとえば、操作マニュアルだったら、画面遷移や実際に動いている画面を見せることができます。 また、音など、紙で印刷できないものも利用できます。 それ以外の情報しか入っていないのなら、印刷しやすいPDFの方がいいでしょう。
そのnews_btnってインスタンス １フレームじゃなく 途中のフレームに登場する とかじゃないですか？ ムービークリップの途中のから登場するインスタンスは そのフレームが再生されるまでアクセスできません それもgotoAndStop()した直後でもだめです フレームが再生され内容がステージに追加されて 初めてアクセスが可能になります ので、１フレーム目の見えない所にインスタンスを置いておくとか なんらかの対処が必要になってきます
以下，「解決策」などというものではなく「思うこと」です。 > Nowloadingをいれるとしたら、どこにいれますか？ Nowloading だけをフレーム1に用意して， 全てのフレームを1フレーム(またはNowloadingに要するフレーム分)後にずらします。 NowLoading はなるべく早く表示させなければ意味がありません。 Flash はロードが完了し，表示可能になったらそのフレームを表示させます。 つまり フレーム1 に用意したオブジェクトやActionScriptなどのデータが揃ったところで， フレーム1 を表示し，アクションなどを実行させます。 何も考えなければ 全フレーム通して共通とする「背景画像」や「function」や「クラス」などによって，フレーム1 は重くなりがちです。 フレーム1 が重ければ NowLoading すら表示されません。 ですからあえて意識してフレーム1を軽くする必要があります。 また NowLoading 後，フレーム2 などにフレーム移動をさせれば フレーム2 などのスクリプトをNowLoading後に簡単に実行できます。 > 何度リロードしてもNowloadingが出てしまいます。 そもそもローカルで閲覧する場合， キャッシュ云々に関わらず瞬時にロードが完了するため NowLoading など見えないか，見えても一瞬のはずです。 それが見えると言うことは どんなに早い回線でも NowLoading を見せるという仕込みをあえて入れてあるということです。 そういう仕込みを取るべきでしょう。 --- --- > １つのファイルで作るのがよいか、外部ファイルを読み込む形で１つずつＳＷＦをつくるか ご質問の場合ファイルは軽いためあまり容量は関係ないでしょう。 メンテナンス(変更や差し込み)などが頻繁にある場合，外部ファイルを読み込む形の方が楽です。 フォトアルバムなどが良い例です。外部写真を入れかえるだけで違うアルバムができます。 でも， 外部ファイルを切り替える時に空白時間などができます。 つなぎ目などの見た目の処理を簡単にするなら１つのファイルの方が楽です。 > どのようなスクリプトをつかいますか？ AS2.0 ということですから とりあえず MovieClip クラスの loadMovie メソッドでしょうね。 ロード用のムービークリップをステージ上に作成してインスタンス名を付け， そのインスタンスに対して 　インスタンス名.loadMovie("外部SWFファイル"); のように命令します。 それではうまく行かないと判断する状況になったら MovieClipLoaderクラス の load メソッド と各種イベントハンドラメソッドです。 ※意味無く MovieClipLoaderクラス など使う必要はない Google などで検索すべきキーワード 「loadMovie」 「ムービークリップ 基準点」 「ターゲットパス」 「MovieClipLoader」 　
オーサリングでやるのなら 文字でグラデーションの グラフィックをマスクする というやり方があります ちなみに、この手法を用いると ブレンドモードを設定したMCシンボルを 本来ブレンドモードを設定できない グラフィックスシンボルでマスクすることで 色はMCのものになってしまいますが 擬似的にブレンドモードが 設定されたグラフィックスシンボルを 実現したりすることができます
実際には可能です。が、少々面倒になります。 こちらにて詳しくかかれています。 http://katapad.com/wp/2009/04/20/flash-lite1x_an … 参考URL：http://katapad.com/wp/2009/04/20/flash-lite1x_an …
単純ですが親にやらせればいいでしょう onClipEvent(mouseDown){ //シーン移動処理 } ↓ 親の方に移動 ↓ onClipEvent(mouseDown){ if(this["子のインスタンス名"].hitTest(_root._xmouse, _root._ymouse, true)) { //シーン移動処理 } }
#１です 間違ったこと言ってましたねスイマセン でも一応結果は返してくれるようです （実はヘルプでは返さないって 書いてるんですがしっかり返してくれます） reverse含め並べ変えのメソッドは 元の配列を変更します しないのはsliceとconcatぐらいですね >>何番目の数値が一番大きいかを調べたり そこがまさに#4さんの言われてる Array.RETURNINDEXEDARRAYの出番です trace(arr.sort(2||8||16)[0]) オプションの長ったらしいArray.RETURNINDEXEDARRAYとか Array.NUMERICの正体は実はただの数字です ３つもあるとさすがに面倒いので数字にしました 2は降順で並べる、16は数字として扱う指定 そして8がArray.RETURNINDEXEDARRAY 『元の何番目のものがそこにはいるのかを ならべた配列を返す指定』です
>レイヤー１を絶対的に最前面に表示させている状態で、後ろの写真をスクロールさせ続ける方法はありますでしょうか？ いろいろと理解しがたい部分があるのですが・・・ 写真（レイヤー1）と紹介文（レイヤー2）は初期状態でどちらが前面にありますか? 常に最前面にしたいのは、写真ですか紹介文ですか? またスクリプトに関してはどのオブジェクト（タイムライン）に記述されているのか明確にしてください。
swfファイルのソースを見て何をしたいかによりますが、 swfのスクリプトソースのみを見るというのであれば ■Flare http://www.nowrap.de/flare.html がお勧めです。 >>またSWFファイルはアクティブスクリプトで書かれているのが一般的なのでしょうか。 swfファイルは基本的にActionScript(アクションスクリプト)で記述されています。 http://ja.wikipedia.org/wiki/ActionScript 参考URL：http://www.nowrap.de/flare.html,http://ja.wikipedia.org/wiki/ActionScript
＃１です。 クリック時ではなくてロールオーバー時でしたね。失礼しました。 ロールアウトで消すのでしたら， たとえば次のようにするとかが１つの方法です。 ----------------------------------- body.onRollOver = function() { for (count=1; count<30; count++) { snow.duplicateMovieClip("snow"+count, count); } }; body.onRollOut = body.onDragOut = function() { for (count=1; count<30; count++) { removeMovieClip("snow" + count); } }; ----------------------------------- または ----------------------------------- body.onRollOver = function() { for (count=1; count<30; count++) { snow.duplicateMovieClip("snow"+count, count); } }; body.onRollOut = body.onDragOut = function() { for (count=1; count<30; count++) { _root["snow" + count].removeMovieClip(); } }; ----------------------------------- Google 検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q …
一生懸命考えて回答しようとしてくださっている方に悪い上， 全く違う回答が交錯すると混乱の元になるだけで発展はしないので， もう片方のご質問URLも貼っておきますよ。 「Flashにデータを呼び込む」 http://oshiete1.goo.ne.jp/qa5674886.html 感想としては， 　　山に１本のトンネルを通そうとして 　　山の両側から全く別方向にトンネルを掘っている。 ように思えます。 そんな適当すぎることをしていても， いつまでたってもトンネルはつながらないと思いますね。 計画を立てて狙った通りにコーディングするのが最低ラインです。 その最低ラインをしていてもうまく行かない場合もあります。 最低ラインもしていなければ，すっと無理のままです。
何でも良いので，とにかくそのムービークリップにインスタンス名を付けます。 たとえば「myMouse」とか「my_cursor」とかとか… そしてそのムービークリップが存在するタイムライン(_root)のキーフレームにスクリプトを書きます。 スクリプトの書き方はいくつかあるのですが， 書かれていらっしゃるムービークリップクラスを利用するなら 次のページ（Flash CS3 ヘルプ）にしっかり書いてあります。 Flash CS3 ドキュメンテーション より 「カスタムマウスポインタの作成 」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … しかし，「マウスが動くこと」と「ムービークリップ」は本来無関係です。 マウスを監視するのにムービークリップを使うのがそもそも混乱の元になります。 マウスクラスもあるので，そちらの方が良いかもしれません。 この方法もヘルプにあります。 Flash CS3 ドキュメンテーション より 「onMouseMove (Mouse.onMouseMove イベントリスナー)」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … ↑このページの最後のスクリプトの > this.attachMovie("pointer_id", "pointer_mc", this.getNextHighestDepth()); より下（この行は含まない(Mouse.hide(); 以下)）がそのスクリプトです。
１の症状 マスクはマスクされる領域がないと マスクなしってことにされます ２の症状 ライブラリの中で最初のフレームに書き出し チェック付いてるシンボルが他にも 沢山あったりするとかでしょうか 以下要らないおせっかいです このスクリプトだと 読み込みが完了しても 全部のロゴを表示する前に フレーム２に行っちゃいますが それでいいんですか？ 多分そんなに重いファイルじゃない限り 一瞬でDL終わってイージングもなにもなく 一瞬1/8だけロゴを表示して刹那 次ぎに行っちゃうと思うのですが あと、作ったloadingImage_mcをどこにも addChildしてないんですが 動かそうとしてるloadingImageと スクリプトに書かれてるloadingImageは 本当にちゃんと同じものですか？
FlashCS3 WindowsXP 32bit メモリ4GB　という環境で、 趣味なので使用頻度は多くはないですが、ファイルが壊れたことはありません。 強制終了も記憶に残っている範囲ではありません。 以前 FlashMX を使っていましたが、同様でした。 でもFlashに限りませんが履歴を戻したい場合はあるので、1日1回はバックアップを取っています。
ASのバージョンがいくつなのかは質問内容ではよくわかりませんが、 AS3なら下記の方法で可能です。 function getUserAgent() { var ua=ExternalInterface.call("window.navigator.userAgent.toLowerCase"); if (ua.indexOf("msie")>-1) { return "IE"; } else if (ua.indexOf("firefox")>-1) { return "Firefox"; } else if (ua.indexOf("opera")>-1) { return "opera"; } else if (ua.indexOf("netscape")>-1) { return "netscape"; } else if (ua.indexOf("chrome")>-1) { return "Chrome"; } else { return "Unknown"; } }
htmlのタグに書かれた変数をFlashに渡す方法が分かりました。 「flashvars」というやつです。 【HTMLの記述】 <embed src="swfファイルのパス" width="横幅" height="縦幅" ここから→ flashvars="hensu=HTMLからきました"><br><br> 【Flashの記述】 変数の受け取りの確認として、ダイナミックテキストで変数を 表示してみます。※受け取った変数は_rootの変数として扱われます。 _rootにダイナミックテキストを配置　変数名=txt txt=hensu //HTMLからきました と表示されます ============================================================= やってみた感想なんですが、 htmlに変数を追加して、開かれたswfはそのパラメータを元に動作する という条件は満たすことができるんですが、 字幕のオン／オフを判定して継続する、ということはできないと思い ます。閲覧者ひとりひとりのオン/オフの状態を保持するには、 やはりローカルに変数を保存するしかないと思いました。
単純にすぐさま思いつく方法は　SharedObject ですね。 Google検索「SharedObject」 http://www.google.co.jp/search?hl=ja&source=hp&q … 特にこの辺り↓が参考になるかと。 FN0204003 - SharedObject.getLocal() - Flash : テクニカルノート http://fumiononaka.com/TechNotes/Flash/FN0204003 …
//transitionsのパッケージに画像きりかえとかの //エフェクトのクラスが入ってます import fl.transitions.*; import fl.transitions.easing.Regular; //画像表示用のMCつくります //ついでにマスクもかけときます var movMC=addChild(new MovieClip()) as MovieClip; var maskSpr=new Sprite() with(maskSpr.graphics){ beginFill(0) drawRect(75,50,400,300) endFill() } with(movMC){ x=75 y=50 mask=maskSpr addChild(makeImg()) addEventListener(MouseEvent.CLICK,goNext) } //クリックされたら次の画像に切り替え開始 //終わるタイミングで前のやつは消してしまう //なんとTransitionクラスは完了してもイベント送出なし(!) //setTimeoutなりでタイミング計るしかありません function goNext(e) { var time:int=1 var trans=Wipe TransitionManager.start(movMC.addChild(makeImg()) as MovieClip,{type:trans,duration:time,direction:0,easing:Regular.easeInOut,startPoint:9}); setTimeout(function(){movMC.removeChildAt(0);},time*1000); } //テキトーな画像のMCを作るメソッド function makeImg():MovieClip { var rtn:MovieClip=new MovieClip(); var bmpData:BitmapData=new BitmapData(400,300); bmpData.perlinNoise(400,300,Math.random()*10,Math.random()*30,Math.random()>0.5,Math.random()>0.5); rtn.addChild(new Bitmap(bmpData)); return rtn; } バージョンがわからないので勝手にAS3のやつ ちょっとちがいますが引っ張ってきます
AS2.0 からだけでは判断しかねますが， おそらく Flash Player 7 以降用の SWF をパブリッシュしようとされているのではないかと思います。 その場合，書かれていらっしゃる if文 の後にでも trace(a+b); を付け加えて，「制御」→「ムービープレビュー」してみると原因が見えると思うのですが。 Flash Player 7 以降用の SWF をパブリッシュする場合， 初期値を設定していない変数の値は undefined なんです。 0 ではなく undefined です。 あえて無理矢理，数値的な計算しようとすると NaN(非数！) となります。 次のようにして変数 a と b の初期化をすべきでしょう。 -------------------- //↓要/不要 は場合による stop(); //もし変数 a が未定義であれば if (a == undefined) { // 変数 a に 0 を代入 a = 0; } //もし変数 b が未定義であれば if (b == undefined) { //変数 b に 0 を代入 b = 0; } btnA.onRelease = function() { gotoAndStop("pageA");//ページAへジャンプ a = 1; }; btnB.onRelease = function() { gotoAndStop("pageB");//ページBへジャンプ b = 1; }; btnC.onRelease = function() { gotoAndStop("pageC");//ページCへジャンプ }; btnD.onRelease = function() { gotoAndStop("pageD");//ページDへジャンプ }; //もし a+bが0 または a+bが1 であれば if (0 == a+b || 1 == a+b ) { btnC.enabled = false; btnD.enabled = false; } else if (2 == a+b) { btnC.enabled = true; btnD.enabled = true; } //(↓ムービープレビュー時の検証用) trace(a+b); -------------------- ※ActionScript 1.0 (パブリッシュ設定は 2.0 でも可） ※Flash MX 2004 以上を前提として書きましたが 　Flash MX 以上でも使用可 ※Flash Player 7 以上を前提として書きましたが 　Flash Player 6 以上でも動作可 もし Topページ が フレーム2 以降でしたら 例えば フレーム1 で 　a = 0; などを実行しておけば良いだけで 　//もし変数 a が未定義であれば 　if (a == undefined) { 　　　//変数 a に 0 を代入 　　　a = 0; 　} こんな妙なものは登場させなくて良いのです。 しかし Topページ がもし フレーム1 から始まっていれば， 　a = 0; だと Topページ に戻る度に a が 0 に戻ってしまいます。 それで if(a==undefined){… というものを登場させています。 もしくは上記の妙な if文 は消して 最後の if文 を次のように変更するのも１つの方法です。 //もし a+b が 2 でない限り if (2 != a+b) { btnC.enabled = false; btnD.enabled = false; } とにかく trace() でしっかり値を把握してください。 　
なんだか状況がよくわかりませんが， スクリプトの無茶で無駄な点については下記URLをご参考に↓。 http://okwave.jp/qa/q5658721.html それで，今回は， 「切り替わるバナーの外部画像を全部読み込んでからスタートする方法」 ですね。 バージョンが抜けてますので回答できませんがスクリプトを見る限り Fash MX 以上をご使用で， Flash Player 6 以上用の SWF をパブリッシュしようとされていて， ActionScript 1.0 を使われている。 ところまではわかります。 Fash MX だと， 画像を読み込む各MCに onClipEvent(load){} を用意し， そこでカウントを加算させて画像のロード枚数をカウントすれば良いのではないかと思います。 フレームのスクリプト例↓ ------------------------------- // このタイムライン(_root)の再生を停止 stop(); // LoadVarsインスタンス「LINK」を作成 LINK = new LoadVars(); // テキストロード完了時のイベントハンドラメソッドを定義 LINK.onLoad = function() { // i を 1→4 で 1 ずつ加算してループ for (i=1; i<=4; i++) { // _root の btn0? に LINK 内の vbn0? をロード _root["bn0"+i].loadMovie(this["vbn0"+i]); } }; // 外部テキスト「link.txt」をロード LINK.load("link.txt"); //もし カウント用変数 cnt が未定義であれば if (cnt == undefined) { // カウント用変数 cnt の初期化 cnt = 0; } // 1フレーム進む時間ごとに毎回実行するメソッドを定義 this.onEnterFrame = function() { // もしカウント cnt の値が 8 以上になれば if (cnt>=8) { // このタイムラインの再生を開始 play(); } }; ------------------------------- bn0? の代表例として bn01 に書くスクリプト↓ -------------------------- on (release) { getURL(_root.LINK.vlink01); } // このMCが表示されたり何かがロードされたとき onClipEvent (load) { // _root の変数 cnt を 1 加算 _root.cnt++; } -------------------------- 上側のフレームのスクリプトで 　// もしカウント cnt の値が 8 以上になれば 　if (cnt>=8) { が，なぜ 8 なのかはわかりますよね。 各 bn0? 自身がステージ上に登場したときに _root.cnt++; が実行され， 各 bn0? の画像がロードされたときにも _root.cnt++; が実行されるからです。
多分ですけどASじゃなくて ただのモーショントゥイーンなんじゃないかと思います ASでやるならTweenerとか使うと 楽にできるかとおもいます そろそろ秀逸な後続におされてきてますが まだまだメジャーな外部ライブラリです http://www.tonpoo.com/tweener/index2.html
> 回線速度が遅いとバナーが切り替わる度に画像の表示に > タイムラグが発生してしまいます。 それで？ どうしたいのでしょうか？ > それぞれのインスタンスに読み込ませるといった > 効率のいいスマートなやり方を探しております。 これと上記の回線速度によるタイムラグと何か関係があるのでしょうか？ 効率が良い悪いは別にして， スクリプトに無意味なことが多すぎます。 ///////////// loadVariables ("link.txt",_root); //↑無意味 LINK = new LoadVars(); LINK.load("link.txt"); //↑これで全部がロードされる。なぜ何度もロードするのか。 LINK.onLoad = function() { loadMovie(vbn01, _root.bn01); }; ///////////// 「効率が良い方法」ではなく「普通の方法」をまずはとるべきでしょう。 bn01，bn02，bn03，bn04 が _root の直下にあって 同時に存在する(例えば フレーム1 から全部登場する)ものとします。 その場合のフレームのスクリプト↓ ----------------------- // LoadVarsインスタンス「LINK」を作成 LINK = new LoadVars(); // テキストロード完了時のイベントハンドラメソッドを定義 LINK.onLoad = function() { // i を 1→4 で 1 ずつ加算してループ for (i=1; i<=4; i++) { // _root の btn0? に LINK 内の vbn0? をロード _root["bn0"+i].loadMovie(this["vbn0"+i]); } }; // 外部テキスト「link.txt」をロード LINK.load("link.txt"); ------------------------ bn0? の代表例として bn01 に書くスクリプト↓ -------------- on (release) { getURL(_root.LINK.vlink01); } -------------- ※ ActionScript 1.0　 Flash MX 以上で使用可です ※ [ ] は配列アクセス演算子と言います bn0? を順次時間差で登場させる場合であっても 一々何度も link.txt をロードする必要はありません。 例えば LINK.onLoad = function() {} で フレームの再生を開始するなどして， 何某かの bn0? が登場したときにその bn0? に対して bn0?.loadMovie(LINK.vbn0?); を実行すれば良いだけです。 または アルファを 0 にした bn0? を最初から全て登場させ 全ての bn0? にJPEGをロードさせておいて，順次アルファを 100 にするとか。 何度もロードしたり別種のロードをしなくても， LoadVarsインスタンス LINK 内にロードされたデータは居ます。 妙なロードを繰り返すとエラーの発生を促進するだけですよ。 なお MovieClipLoader は Flash MX 2004 以上で使用可です。 ご質問にバージョンが抜けていますから書かれていらっしゃるスクリプトから判断するしかありません。 上記スクリプトは，Flash MX の AS1 内を厳守しました。 以上，回線速度によるタイムラグとはほとんど何も関係ない回答です。 　
私はFlexBuilderしか持っていないので、少々勝手は違うのですが AS3って事でヒントになるかもしれないので書いてみます。 リサイズイベントをトリガにして処理を実行できないなら Flash側から能動的に動けるようにできないかと考え、 以下の事を考えました。 1. SWFを貼り付けるHTMLにJavaScriptでウインドウサイズを取得する関数を作る 2. Flashから1.で作った関数を呼び出して、ウインドウサイズを取得する 3. ウインドウサイズを変える で、3の処理自体は既に出来上がっているようですので 1.と2.について検証してみました。 結果、私が使ってるブラウザではウインドウ幅を取得することが出来ました。 ・IE6 ・Firefox3.5 ・Chorome4.0 ・Lunascape6.0(Trident/Gecko/Webkit) ※Webkitエンジンでも動作したのでおそらくSafariは大丈夫かと思います。 ※Operaはインストールしていないので未検証です。 -------------------- 実施内容 -------------------- 1. SWFを貼り付けるHTMLのヘッダに追記 -------------------- <head> 　<script language="javascript"> 　<!-- 　　function getWidth() 　　{ 　　　if ( document.body.clientWidth ) { 　　　　return document.body.clientWidth; 　　　} 　　　else { 　　　　return window.innerWidth; 　　　} 　　} 　　function getHeight() 　　{ 　　　if ( document.body.clientHeight ) { 　　　　return document.body.clientHeight; 　　　} 　　　else { 　　　　return window.innerHeight; 　　　} 　　} 　--> 　</script> <head> -------------------- 2. Flash側でウインドウサイズを取得する -------------------- package { 　import flash.display.Sprite; 　import flash.external.ExternalInterface; 　public class WindowSize extends Sprite 　{ 　　public function WindowSize() 　　{ 　　　if ( ExternalInterface.available ) 　　　{ 　　　　// JavaScriptの関数を呼び出して戻り値を貰う 　　　　var w:Number = ExternalInterface.call( "getWidth" ); 　　　　var h:Number = ExternalInterface.call( "getHeight" ); 　　　　 　　　　trace( "ウインドウサイズ : " + w + " * " + h ); 　　　} 　　} 　} }
＃１です。 Flash MX で Flash Player 6 でしたら， キーはムービークリップやボタンのしがらみから解放された Key オブジェクトのイベントハンドラメソッドを使うのが一般的(汎用的)かと思います。 仮に「mc1」内の <Aの動作> が フレーム1～フレーム10 までで， <Bの動作> が フレーム11～フレーム?? まであったとした場合で， 「mc1」 が存在するフレーム(_rootのフレーム)に書くスクリプト例です。 ------------------------------ // キー監視用インスタンス myKey を作成 var myKey = new Object(); // キーが押されたときの動作を定義 myKey.onKeyDown = function(){ // //(↓ムービープレビュー時の確かめ用) trace(Key.getCode()); // // もし押されたキーが「a」であれば if(Key.getCode() == 65){ // 「mc1」内タイムラインをフレーム1から再生 mc1.gotoAndPlay(1); // もし押されたキーが「b」であれば }else if(Key.getCode() == 66){ // 「mc1」内タイムラインをフレーム11から再生 mc1.gotoAndPlay(11); } } // myKey を Key オブジェクトのリスナーとして登録 Key.addListener(myKey); ------------------------------ 「制御」→「ムービープレビュー」で キーのコードを知ることもできます。 細かいこツッコミですが...， > バージョンはFlashMX、AS2、 Flash MX で ActionScript 2.0 を使うことはできませんよ。 「ファイル」→「パブリッシュ設定」で「Flash」タブを選択しても，ActionScript のバージョンが選択できないと思います。 ActionScript 2.0 が使えるようになった Flash MX 2004 以降では， Flash Player のバージョンを選択できるように ActionScript のバージョンも選択できます。 Flash MX ができた頃は，まだ ActionScript 2.0 というものは存在しなかったので， 実は ActionScript 1.0 というバージョンも存在しなかったのです。 ActionScript 2.0 では 「クラス」 という概念が全面に出されました。 またカスタムクラスを作ってそのクラスを import することが可能になりました。 あと 変数 や 関数 に型指定ができるようになりました。 ・ スクリプトの冒頭を ActionScript 2.0 風に書き換え // キー監視用にObjectクラスのインスタンス myKey を作成 var myKey:Object = new Object(); // キーが押されたときのメソッドを定義：戻り値なし myKey.onKeyDown = function():Void { カスタムクラスを使わない限り，ActionScript 1.0 も 2.0 も大差はないのですけどね。 それでもちょっとは違うんです。 　
　参考 URL のサイトの，「Pixel/Bitmap」のカテゴリをご覧ください。ビットマップ・ピクセルフォントのカテゴリです。この中に，質問者様が挙げていらっしゃるフォントと同様のデザインのものも見つけました。 　ひじょうにたくさんあります。細かいデザインの違いなどもご覧になって，これらの中からご自身でお気に召すものをお探しになるのがよいと思います。 　これらのフォントは基本的に無償で利用できます。ですが，念のため利用条件をご確認の上，利用なさってください。 参考URL：http://dafont.com/
ブラウザでの表示の話なら javascriptをつかってhtmlファイルの <body>のところを <body onload="window.resizeTo(幅,高さ)"> と言う感じにすればブラウザの ウインドウのサイズは変えられます もしFlashのステージの大きさが変えられない という話ならそれはソフトによって どこ触るか違うのでわかりません スクリプティングが基本のソフトなら [SWF(width="550", height="400")] みたいなのを書けばいいですが それ以外のオーサリングが基本の ソフトではわからないです
MacでいまだにMXってことは もしかしてかなり古いフォント入ってます？ OCFとかは絶対無理ですよ、あれは半角フォントを 無理矢理日本語用に拡張してるもので まずWEBに使う事なんてあり得ないです OCFはファイルへの埋め込みもできませんし ほとんどのパソコンに入ってません そして新しいOSではもう使えません あとCIDやTrueType、DynaFontであっても ビットマップ系のフォントは多分だめです イラレで拡大縮小してると時々みえなくなるフォント OpenTypeならとりあえず 一通り大丈夫だと思うのですが
初心者ならUILoaderがオーサリング感覚で使えて プリローダとかからませるのも簡単なのでオススメです ウインドウ＞コンポーネント のUserInterfaceにUILoaderがいるので そいつを配置して使います このUILoaderは sourceプロパティに 文字列でURLを入れ込むだけで 勝手にロード開始してくれて とっても簡単です percentLoadedプロパティに 読み込み済みのパーセンテージがあり プリローダ作るのも楽 スクリプティング中心でやるときは flaファイルのアセットの中に入ってないと使えない ちょっと扱いにくい所があるやつでもありますが オーサリング中心の時は便利なやつです 読み込まれるswfファイルには ムービー終了のフレームでルートに dispatchEvent(new Event("MOVIE_END")) と書いておき 親swfのほうでuilをUILoaderインスタンス名として var cnt:int=0 var swfList=["swf1","swf2","swf3"] var urlList=["url1","url2","url3"] uil.source=swfList[cnt] uil.addEventListener(Event.COMPLETE,onComp) uil.addEventListener(MouseEvent.CLICK,onClick) function onComp(e){ uil.content.addEventListener("MOVIE_END",onMovieEnd) } function onMovieEnd(e){ cnt++ uil.source=swfList[cnt] ] fnction onClick(e){ navigateToURL(urlList[cnt],"_self") } と書いておけば動作確認してないですが 言われているような動作になるはずです
一般的でないフォントを使った場合は ファイルにフォントを埋め込み テキストフィールドのembedFontをtrueにします フォントの埋め込みはライブラリウインドの コンテクストメニューのフォントという項目でできます
Flash はバージョンアップされる度に劇的進化を遂げる「生きたソフト」ですから， > 「Flash CS 3」と、「Macromedia Flash Professional 8」の違い と問われましても違いが多すぎてとても回答しきれるものではありません。 Flash 8(2005年) は Flash CS3(2007年) の１つ前のバージョンですから， Google 検索「Flash CS3 新機能」 http://www.google.co.jp/search?hl=ja&source=hp&q … などと検索などしてもらうと 「Flash CS3 新機能」＝「Flash 8 と Flash CS3 との違い」が出てくると思います。 > 同じファイル（拡張子fla）を編集するソフトなのでしょうか？ 同じ fla でも CS3 用の fla は Flash 8 では開けません。 Flash 8 の fla は CS3 で開くことができます。 要は下位のバージョン用flaはだいたい開けますが，上位バージョン用flaは開けません。 (下位バージョン用 fla でもあまりにバージョンが違い過ぎると開けないことがあります。) （名前を付けて保存をするときに１つ前のバージョン用flaまでなら保存可能な場合もあります。） > 「Flash CS 3」対応版の本を買っても問題ないのでしょうか？ 問題大アリでしょう。 最初は「バージョンに合った本を買う」というのが最低条件です。 私の感覚では， Flash は奇数版(Flash 5，MX 2004，CS3)でプログラミング系が劇的進化を遂げ， 偶数版(Flash MX，8，CS4)でオーサリングの仕様やデザイン系(ビジュアル表現)が劇的進化を遂げたように思います。 その点から考えると Flash オーサリングツールの仕様自体はそんなに大きくないとは思いますが それでも細かな点は色々違っています。 それより何より， CS3 では ActionScript 3.0 が使えるようになって(ActionScript 2.0 以下も使えますが)， CS3 用の本は ActionScript 3.0 を使うことを基本として書かれてあると思います。 ActionScript 2.0以下 と 3.0 は全く違うので，Flash 8 では ActionScript系 は全く参考にならないと思います。 (付録CDなどに付いているサンプルflaファイルも当然開けません。) Flash 8 を始める際に本を買われるのでしたら， 中古オークションでも古本屋でも良いので， とにかく 「Flash 8 用の本」 を買うべきです。Flash MX 2004 用もダメ。 Flash 8 の良いところは ソフトの軽さ でしょうかね。。。 結構ロースペックなPCでも動きます。 私が現在使用の Flash CS4 など 8 に比べると超重々です。 そうなるのは最初からわかっていたので CS4 を買う前にPCを買い替えました。 Flash 8 だと，おそらく Flash CS5(仮称) まではアップグレードできると思います。 職場のPC環境を整えるなどして，早めのアップグレード検討をお薦めします。 ※関係ない話 私が経験したバージョンアップのうち一番嬉しかったが Flash MX 2004 → Flash 8 です。 画像の加算や乗算など，またドロップシャドウやブラーフィルター(私の名はこれをもじったもの)などフィルタ系の充実。 だから Flash 8 は大好きなバージョンです。 でも今や古いバージョンですね。。。
すみません 私も初心者です。 同じ初心者の立場から言います。 ＞サンプルをダウンロードしてもいじり方がイマイチ分かりません… イマイチわからない範囲が広すぎるのではありませんか？ CS3の使い方？それともアクションスクリプト？また、どこをどのようにいじりたいかなどを詳細に書かないと、回答する側からも回答するのがなかなか難しいと思います。 私が今参考になっているサイトを教えますので、すこしでも役に立ったらいいなと思います。 参考URL：http://www.openspc2.org/reibun/QuickReferenceAct …
この質問は、回答される方にいまいち状況が伝わらないと思います。 ActionScriptとソフトのバージョンも必要だと思います。 例えば、リンクが貼ってある方をフラッシュＡ 呼び出されるのがフラッシュＢ（ＣやＤ…）とすると、 フラッシュＡからフラッシュＢ（ＣやＤ…）を呼び出して、 フラッシュＡ内に表示するということがしたいのですか？ それとも、HTML上で、2フレームあって、片方にフラッシュＡ もう片方にフラッシュＢを表示したいのですか？
snd.load(new URLRequest("music.mp3")) ↑が終わってから↓を実行すると、直ると思います。 addEventListener(Event.ENTER_FRAME, onEnterFrame); sndCh.addEventListener(Event.SOUND_COMPLETE, onPlaybackComplete);
buttonA も buttonB もキーに関係しない見せかけだけのものですから， 私なら次のようにすると思います。 まず各ボタンムービークリップ buttonA と buttonB 自体に直接書いたスクリプトを全て消します。 そしてフレームに書くスクリプトを次のようにします。 -------------------------------- // 各ボタンMCの表示非表示初期設定 buttonA._visible = true; buttonB._visible = false; // フラグ(またはカウンター)を用意 var keyFlag:Boolean = false; // キー監視用にするオブジェクト「myKey」を作成 var myKey:Object = new Object(); // キーをダウンしたときの動作 myKey.onKeyDown = function():Void { // if (Key.getCode() == 13) { // 各ボタンMC内のタイムライン操作 buttonA.gotoAndStop(2); buttonB.gotoAndStop(2); } }; // キーをアップしたときの動作 myKey.onKeyUp = function():Void { // if (Key.getCode() == 13) { // 各ボタンMC内のタイムライン操作 buttonA.gotoAndStop(1); buttonB.gotoAndStop(1); // 各ボタンMCの表示非表示を切り替える buttonA._visible = !buttonA._visible; buttonB._visible = !buttonB._visible; // // もし keyFlag が false であれば if (!keyFlag) { // _root をフレーム「pageB」に進めて再生 _root.gotoAndPlay("pageB"); // keyFlag を true にする keyFlag = true; // // keyFlag が true であれば }else{ // _root をフレーム「pageC」に進めて再生 _root.gotoAndPlay("pageC"); // keyFlag を false にする？ keyFlag = false; } } }; // 「myKey」をKeyクラスのリスナーとして登録 Key.addListener(myKey); -------------------------------- 単フレームのスクリプトにするために buttonA と buttonB を両方とも出没させた上で_visible を変える という妙技をしているのではないのでしょうか？ それならスクリプトの場所も一ヶ所の方が管理しやすいでしょう。 また最初にも書きましたが， キーダウン/アップはボタンとは関係ないのです。 いかにも関係あるかのように見せる手品を作っているわけですよね？ 手品師が自分の作った手品にはまってどうするんですか(笑)。 >// 何かキーが放された時 >onClipEvent (keyUp) { >　　if (Key.getCode() == 13) { >　　　　//ページCへ移動 >　　} >} これだと buttonA に書いても buttonB 書いてもは関係なく， Enter キーが放されたときにページCへ移動します。 キーとボタンとは関係がないので， 上のスクリプトではキー監視役を buttonA/B ではない myKey にさせています。 これを作らなくても buttonA.onKeyDownp～ や buttonA.onKeyUp～ でもできます。 しかしそうするとやはり buttonA に惑わされそうな自分が出て来るので，あえて myKey を用意しています。
メインのタイムラインのステージ上に 「my_mc0」「my_mc1」「my_mc2」「my_mc3」 というインスタンス名を付けた４つのムービークリップを配置したとします。 その場合のスクリプト例↓ --------------------------------------- // Tweenクラスとeasingクラスをインポート import fl.transitions.Tween; import fl.transitions.easing.*; // 下がった状態の座標の差を設定 var dif_y:Number = 15; // 動作にかかる秒数を設定 var sec:Number = 0.5; for(var i:int=0;i<=3;i++){ // ムービークリップ「my_mc?」の初期y座標を記録 this["my_mc"+i].sy = this["my_mc"+i].y; // 「my_mc?」ロールオーバー時に関数 myDown を実行 this["my_mc"+i].addEventListener(MouseEvent.ROLL_OVER,myDown); // 「my_mc?」ロールアウト時に関数 myUp を実行 this["my_mc"+i].addEventListener(MouseEvent.ROLL_OUT,myUp); } // 関数 myDown の定義 function myDown(e:MouseEvent):void{ // Tweenクラスのインスタンスを作成 var myTween:Tween = new Tween(e.currentTarget, "y", Bounce.easeOut, e.currentTarget.y, e.currentTarget.sy+dif_y, sec, true); } // 関数 myUp の定義 function myUp(e:MouseEvent):void{ // Tweenクラスのインスタンスを作成 var myTween:Tween = new Tween(e.currentTarget, "y", Bounce.easeOut, e.currentTarget.y, e.currentTarget.sy, sec, true); } --------------------------------------- 　 これはロールオーバーしたインスタンス自体を動かしているので， // 下がった状態の座標の差を設定 var dif_y:Number = 15; この値をあまり大きくしないようにするというのが肝腎です。 大きくすると， ムービークリップが動きすぎてロールオーバーしたらすぐロールアウトしてしまうため動きが変になります。 小さいままでも，上からマウスをゆっくり接近させてロールオーバーすると動きが変になります。 (赤上げて 赤下げないで赤上げない??? 状態になる。) 実際には， 親ムービークリップの中に子ムービークリップを作成するなどして， 親ムービークリップにロールオーバーしたときに，その中で子ムービークリップを動かすなどの工夫をした方が良いと思います。 ↑親ムービークリップには 動かないヒットエリアのようなものを 　 透明な塗りなどで作成しておく。 　 (中の絵柄は動いてもヒットエリアは変えないようにする) つまり本当は ActionScript だけで片付けるのではなく構造をちゃんと作った方が良いでしょう。 ＝＝＝ 補足 ＝＝＝ ＝＝＝ ＝＝＝ > flash CS4の初心者です。 　　　＆ > ２０点の画像を同じようにするのが大変です。 CS4 だと「モーションをコピー」・「モーションをペースト」ができますよ。 また クラシックトゥイーンではなくモーショントゥイーンの場合限定では 「モーションプリセットとして保存」し「ウィンドウ」→「モーションプリセット」から あらかじめ保存しておいたモーションを適用させて使い回しもできますが。 　　
こんにちは ＞そのボタン自体のロールオーバー機能が無効に ロールオーバー時の画像の入れ替えですが、スプライト自体のタイムラインで簡単に出来ます。 1、スプライトに通常時の画像を登録します、するとその画像がタイムラインの1フレーム目にキーフレームが入ります。 2、ロールオーバー時の画像をタイムラインに登録、この時、2フレーム目にキーフレームがくるように入れます。 3、一番上にフレームアクションを挿入し、1、2フレームにキーフレームをいれ、簡易アクションで構わないので、1、2の両フレームで、this,停止,を選択します。 4、メインのタイムラインに戻り、スプライトを選択し、スクリプトを編集、そこに直接スクリプトを書きます。 //ballにマウスが乗った時 on(rollOver){ //スプライトのタイムライン、2フレーム目に移動 gotoAndPlay(2); } //ballからマウスが退いた時 on(rollOut){ //スプライトのタイムライン、1フレーム目に移動 gotoAndPlay(1); } こんな感じでロールオーバー時に画像を変える事ができます。わかりにくいかも知れませんが、一応ですが、スプライト編集時の画像を添付します。
＃１です。 昨日は時間不足のため簡易的な回答しか書きませんでしたが...。 > mc1 はウインドウの最上部に表示 > mc2 はウインドウの中央部に表示 > mc3 はウインドウの最下部に表示 これだけでは左右の位置がわかりませんが， 仮に mc1，mc2，mc3 とも，左右はステージの中央に表示させるとします。 「mc1」は上の中央に基準点が来るようなムービークリップにします。 「mc2」は中央の中央に基準点が来るようなムービークリップにします。 「mc3」は下の中央に基準点が来るようなムービークリップにします。 必ずしもこうする必要があるわけではありません。 こうすれば計算が楽になる(±の座標補正が不要になる)というだけです。 上記のようなものを用意した場合， mc1，mc2，mc3 が存在するタイムラインのキーフレームに書くスクリプトは次のようになります。 ------------------------------ // ステージ内容の拡大縮小なし Stage.scaleMode = "noScale"; // ステージの上左を基準にする Stage.align = "TL"; // ステージ監視用のインスタンス「stageObj」を作成 stageObj = new Object(); // ステージのサイズが変わったときの動作定義 stageObj.onResize = function() { // 「mc1」の座標を上の中央にする mc1._x = Stage.width/2.; mc1._y = 0; // 「mc2」の座標を中央の中央にする mc1._x = Stage.width/2.; mc1._y = Stage.height/2.; // 「mc3」の座標を下の中央にする mc1._x = Stage.width/2.; mc1._y = Stage.height; // 表示を即更新 updateAfterEvent(); }; // ステージ監視用インスタンスをステージのリスナーに登録 Stage.addListener(stageObj); // 初期表示段階で stageObj.onResize を実行 stageObj.onResize(); ------------------------------ ・ActionScript 1.0 ・要 Flash MX 以上(Flash 8 も MX 以上に含まれる) ・要 Flash Player 6 以上用 SWF にパブリッシュ こうしてできたSWFを HTMLに 横100％ 縦100％ で貼り付けます。 　　
タイムラインに途中から出現した インスタンスはgotoAndStop直後には タイムラインからはアクセスできません 一度ENTER_FRAMEもしくはインスタンスのADDED_TO_STAGEを 待ってからkebtnのイベントリスナー登録をしてください とはいえオーサリングで置いたインスタンスには タイムラインからアクセスするしかないので 選択肢は前者しかないですが あるいはkebtnをスクリプトで生成しaddChildするか １フレーム目で作っておいて隠しておいて 195フレーム目に来たら現れるようにするか 回避方法はいろいろあります 直前の質問の方も同じ所でつまずいていたようです AS3のひとつの関門なのでしょうね 実はヘルプのMovieClipのところに書いてたりするんですが ADDED_TO_STAGEを待ってくださいとしか書いてなくて アクセスできないから困ってんのに そいつのイベントを待てとはどういうことよ？ みたいなカンジだったりするんですよね（笑）
#1です スイマセン、多分ちょっとズレてましたね いくら同じMC内の同じ名前であっても 違うシンボルのインスタンス 違うキーフレームに置かれているインスタンスは別物です どっかのキーフレームのback_mcがリサイズされたところで ほかのback_mcのサイズはそのままです なのでページ移動でgotoAndStopして 背景のback_mcが別のものになったときにも arrangeMC()を実行せねばならない訳ですが ここでレス１の問題がでてくるワケです back_mcが別のクラス（シンボル）の インスタンスに入れ替わるとき gotoAndStopした直後には一時的に back_mcはなくなってしまうんです だからback_mcの入れ替えを待つか あるいはback_mcを入れ替えしなくても いいようにしようというわけです
面張るのとかUV設定とかすんのは はっきり言ってけっこう面倒なので 新しい形を一からつくるよりは Primitiveの形を使えるなら 使った方がいいですね たとえ全ての頂点の座標を 調整しなくてはならないとしても 構造が同じってだけで全然使えます Arrowクラスなんて追加されたみたいですが これは多分作ってる途中でしょうね サイズとか調整する為のメソッドなり プロパティがそのうち追加されるでしょう 待てないなら verts配列プロパティの 各x,y,zを直接いじくれば 一応変形とかさせる事ができます 以下をソースに追加すると 一個変形した矢印追加します var arw:Arrow=new Arrow(shdMtr) //尾っぽの頂点をのばしてみる for each(var j in [0,1,7,8]){ arw.verts[j].z-=200 } //矢の先っぽの頂点をへこませてみる for each(j in [4,11]){ arw.verts[j].z-=100 } //矢尻の幅を広くしてみる for each(j in [3,5,10,12]){ arw.verts[j].x*=2 } //後はサイズ調整でなんとか arw.scaleX=0.05 arw.scaleY=0.05 arw.scaleZ=0.5 arw.x-=200 vw.scene.addChild(arw) UVがずれちゃうだろうけど ここじゃマッピングはしないから平気 YがYに見えないのはまあフォントの所為でしょう デフォルトのフォントで表示してるので makeTxtMovのところでfmt.fontを設定したりして いい感じにしてあげてください ここらへんはPV3Dのなんとかじゃなく 普通のTextFieldとかTextFormatとかの範囲です あんまりヘンなフォントつかったら フォント埋め込み忘れないでください それ以外はまあ、単にxyzの 座標計算どうするかってだけのことなので、 ３D座標計算楽しんでください
5452さん、 PHPが使えるなら、 １）Bサーバー（http://example.com/）のディレクトリーのテキストファイルを、hoge/example.txtとした場合、Aサーバーに以下のPHP（read.php)を設置し、 <?php $file="http://example.com/hoge/example.txt"; print(file_get_contents($file)); ２）それから、Flashが、同一サーバー内にある、read.phpを読み込む手順で試してみて下さい。 通常は、FlashのSecurity Policyを回避できると思います。
#３です、続きです for(var i=0;i<3;i++){ cubeList.push(new Cube(mtrList,30,30,100)) cubeList[i][["x","y","z"][i]]=200 vw.scene.addChild(cubeList[i]) vecList.push(new DisplayObject3D()) var cone=new Cone(mtr,10,30) var bar=new Cylinder(mtr,3,100) cone.y=100 bar.y=50 vecList[i].addChild(cone) vecList[i].addChild(bar) vecList[i][["rotationX","rotationY","rotationZ"][i]]=90 if(i==2)vecList[i].rotationZ=-90 vw.scene.addChild(vecList[i]) var movMtr=new MovieMaterial(makeTxtMov(["X","Y","Z"][i]),true,false,true) movMtr.oneSide=false txtList.push(new Plane(movMtr,50,50)) txtList[i][["x","y","z"][i]]=300 vw.scene.addChild(txtList[i]) } function makeTxtMov(str:String):MovieClip{ var rtn=new MovieClip() var fld=new TextField() var fmt=new TextFormat fmt.size=100 fmt.color=0x339955 fld.defaultTextFormat=fmt fld.text=str rtn.addChild(fld) return rtn } light.y=light.x=light.z=500 vw.camera.y=400 vw.startRendering() addChild(vw) addEventListener(Event.ENTER_FRAME,frameTick) function frameTick(e){ drc+=rot rot*=0.98 for each(var txt in txtList)txt.rotationY=-drc*180/Math.PI-90 vw.camera.x=light.x=Math.cos(drc)*dst vw.camera.z=light.z=Math.sin(drc)*dst } stage.addEventListener(MouseEvent.MOUSE_DOWN,function(e){prevX=mouseX;stage.addEventListener(Event.ENTER_FRAME,setRot)}) stage.addEventListener(MouseEvent.MOUSE_UP,function(e){stage.removeEventListener(Event.ENTER_FRAME,setRot)}) function setRot(e){ rot=(prevX-mouseX)/300 prevX=mouseX } 最近VectorShape3Dっていう使えそうなクラスが追加されたのに なぜかレンダリングの段階でエラーが出て使えなかった・・・
#１です 自分で書いておいてなんなんですが 先に書いたようなやり方は正直よろしくないと思います Flashにはちゃんと画像きりかえとかに 使うためのクラスが用意されてます 以下１フレーム目にコピペして書き出し ボタンは作るの面倒だったので本体がボタン代わりです //transitionsのパッケージに画像きりかえとかの //エフェクトのクラスが入ってます import fl.transitions.*; import fl.transitions.easing.Regular; //画像表示用のMCつくります //ついでにマスクもかけときます var movMC=addChild(new MovieClip()) as MovieClip; var maskSpr=new Sprite() with(maskSpr.graphics){ beginFill(0) drawRect(75,50,400,300) endFill() } with(movMC){ x=75 y=50 mask=maskSpr addChild(makeImg()) addEventListener(MouseEvent.CLICK,goNext) } //クリックされたら次の画像に切り替え開始 //終わるタイミングで前のやつは消してしまう //なんとTransitionクラスは完了してもイベント送出なし(!) //setTimeoutなりでタイミング計るしかありません、なんてこった function goNext(e) { var time:int=1 var trans=getTransRandom() trace(trans) TransitionManager.start(movMC.addChild(makeImg()) as MovieClip,{type:trans,duration:time,direction:0,easing:Regular.easeInOut}); setTimeout(function(){movMC.removeChildAt(0);},time*1000); } //テキトーな画像のMCを作るメソッド function makeImg():MovieClip { var rtn:MovieClip=new MovieClip(); var bmpData:BitmapData=new BitmapData(400,300); bmpData.perlinNoise(400,300,Math.random()*10,Math.random()*30,Math.random()>0.5,Math.random()>0.5); rtn.addChild(new Bitmap(bmpData)); return rtn; } //画像きりかえエフェクトのクラスをテキトーに選ぶメソッド function getTransRandom():*{ var transList:Array=[Blinds, Fade, Fly, Iris, Photo, PixelDissolve, Rotate, Squeeze, Wipe, Zoom] return transList[Math.floor(Math.random()*10)] } 以上 早押しされたらエフェクトを強制終了させるのは 個人的にあんまりきれいじゃないと思ってるんで こういうやり方のほうがおすすめです １０種類のエフェクト以外使えないのがアレですが せっかく用意してくれてるんだから使っときましょう
専門家じゃないのでなんとも言えませんが、参考までに。 私はFlexは持ってないので使った事ないのですが、おそらくFlashではなくFlexで作ってると思います。 仕様としては、、、 背景画像（広告画像）レイヤと、お絵かき用レイヤとわけて、印刷の時は合成して。 拡大縮小は下で操作した場合は中央そのまま拡大し、押されたときはそれが中央にくるように移動しつつ拡大。 ドラッグの操作も実装して、最大化は、アレは少し変ですね。最近ではFlashのフルスクリーン化できるのでそっちにした方が自然ですね（個人的にはフルスクリーン化は嫌いですが）。 ざっとこんな感じでしょうか。 あとは頑張って実装するのみです。
以下 ＃２ の方と内容が重複するかもしれませんが一応。 > 例として、最初TABキー これ以降の「例」の説明がよくわかりませんが， その「例」より上のご質問内容を見て， 一応 "形だけ" そのようなものは考えて作ってみました。 ムービークリップ(MC)製の A･B･C･D ４つのボタンにはそれぞれ 「A_mc」「B_mc」「C_mc」「D_mc」というインスタンス名を付けるとします。 それら ４つの MC が配置してあるタイムラインのフレームに書くスクリプト例です。 ---------------------------------- // 配列mcArr にボタンMC名を登録しておく var mcArr:Array = new Array("A_mc", "B_mc", "C_mc", "D_mc"); for (var i:Number = 0; i<mcArr.length; i++) { // 各ボタンMCの自動Tab選択を無効にする this[mcArr[i]].tabEnabled = false; // 各ボタンMCに何某かのアクションを設定(仮) this[mcArr[i]].onRelease = function():Void { trace(this._name); }; } // カウント用変数 cnt に初期値を設定 var cnt:Number = 0; // キー監視用オブジェクト keyObj を作成 var keyObj:Object = new Object(); // キーアップ時の動作を定義 keyObj.onKeyUp = function():Void { // アップしたキーが Tab であれば if (Key.getCode() == 9) { // mcArr の cnt 要素のボタンにフォーカスを当てる Selection.setFocus(mcArr[cnt]); // cntが配列要素数-1未満だと cntに1を加算しそれ以外は0に戻す cnt = (cnt<mcArr.length-1) ? cnt+1 : 0; } }; // keyObj を Keyクラスのリスナーに登録 Key.addListener(keyObj); ---------------------------------- ※ Flash MX 2004 以上 ActionScript 2.0 これですが...， 「制御」→「ムービープレビュー」で出てくるプレビューパネルで， 「制御」→「キーボードショートカットを無効」にして動作確認するか， もしくは， パブリッシュしたSWFをダブルクリックして スタンドアローンの Flash Player で見たときは 思惑通りに動くんです。 しかし！ SWFをHTMLに貼り付けてブラウザで見ると HTML やブラウザなどにフォーカスが移り回るんです。 「Tab」キーには意味(既存割り当ての動作)があるので Flash だけの問題で済まなくなると思います。 上に書いた「一応 "形だけ" そのようなものは考えて作ってみた。」という意味はそういうことです。 ブラウザなどに表示させる場合は「Tab」キーでない別のキーでフォーカス移動させる方が良いと思います。
AS3ばっかり使ってるので同じかわからないですが ボタンコンポーネントのことならスキンは クラス名で管理されてるんで 背景についてはコンポーネントの中身を開くと出てくる スキン一覧のButton_selectedDisabledSkinとかいう名前のやつを 変えてしまえばいけるはず テキストについては var fmt=new TextFormat() fmt.color=0x000000 xxx.setStyle("desabledTextFormat",fmt) みたいなカンジでいけるはず var stlObj=Button.getStyleDefinition() for(var stl in stlObj){ trace(stl+"="+stlObj[stl]) } とでもやって何をどういう風に設定できるか 見てみるといいかと getStyleDefinition()は静的なんで インスタンスじゃなくクラスで使用 結果 selectedUpSkin=Button_selectedUpSkin upSkin=Button_upSkin disabledIcon=null selectedDisabledIcon=null focusRectSkin=null selectedUpIcon=null overIcon=null disabledTextFormat=null repeatDelay=500 selectedDownSkin=Button_selectedDownSkin textFormat=null focusRectPadding=null selectedOverIcon=null downSkin=Button_downSkin selectedDownIcon=null selectedOverSkin=Button_selectedOverSkin disabledSkin=Button_disabledSkin overSkin=Button_overSkin repeatInterval=35 icon=null emphasizedSkin=Button_emphasizedSkin embedFonts=false emphasizedPadding=2 downIcon=null textPadding=5 selectedDisabledSkin=Button_selectedDisabledSkin upIcon=null 見てみるとここで背景で使うスキンのクラスも 変更できるらしいことがわかります その他いろいろ設定できるみたいですね
それは、外部テキストが残ってるからっていうより 先に読み込んだ外部テキストを表示してる TextFieldインスタンスなりを removeChildせずに新しいTextFieldインスタンスを 作成してaddChildしてるからとかじゃないですか？ もしそうだったら表示するTextFieldを先に作っておいて 読み込み完了の度に新しいTextFieldを作らないように var fld=new TextFiled() addChild(fld) var ldr=new URLLoader() ldr.addEventListener(Event.COMPLETE,onComp) function onComp(e){ fld.text=ldr.data } というようなかんじでやれば重なる事はないはずです
急がばまわれというカンジで 一発の正則表現でやろうとせずに おとなしく置き換えを２回にわけ 置き換えメソッドを使って var str="元の文字列" var CR=String.fromCharCode(13) var reg1=new RegExp("(value:)?(item:)?","g") var reg2=new RegExp("(?<=\<description\>).*(?=\<\/description\>)","gs") str=str.replace(reg1,"") str=str.replace(reg2,repFnc) function repFnc(str,ind,allStr):String{ return str.replace(new RegExp(CR,"g"),"") } 結果 <type>1</stype> <img url="http://hoge/"></img> <description>hogehogehogehoge</description> うまいこといったようです 改行の消去がうまくいかなかったらとりあえず \nにするかキャラコードを１０にするかで多分なおるはず 強制改行か改段落かの違いです
AS3しか使ってないんで同じかわからないですが テキストのフォーマットを変える時は サイズだけとかフォントだけとかじゃなく テキストフォーマットのオブジェクトをつくって まとめてフォーマットを変えないといけないみたいです だから var fmt=this._fmt fmt.size=24 this._fmt=fmt でいけるのではないかと
＃１（ANo.1）です。 　犬をつかまえて「投げたフリスビーを取れ」と命令するのです。 　(ボタンを選択して「フレーム50に進めろ」とめいれいするのです。) > ボタンを編集するところでは(アップ、オーバー、ダウン等のあるところです) それは，犬で言えば内臓です。 犬の肝臓に 「投げたフリスビーを取れ」 と命令はできないでしょう？ > 「マウスイベントはボタンインスタンスでのみ使用できます」 「マウスイベントは」 とは ＃１ で書いた onハンドラ のことです。 onハンドラ は元来ボタンにしか書けなのでそういうメッセージが出るようになっています。 Flash MX 以降（Flash Player 6 以降）になって， ムービークリップ自体にも書けるようになりましたが， 元来 onハンドラ は ボタンにしか書けなかったので， フレームを選択して onハンドラ を書こうとすると， 　 「マウスイベントはボタンインスタンスでのみ使用できます」 　　→ onハンドラ は ボタン自体 のみに書けます というメッセージが出ます。 実際は 　 「マウスイベントはボタンインスタンスもしくはムービークリップインスタンスでのみ使用できます」 に変更すべきでしょうが，そう変更されていないようです。 そんなことはどうであれ， 「ステージ上のボタン」をひっ捕まえてActionScriptを書くのです。 レイヤー（フレーム）ではありません。 ステージ上に見えているボタンです。 あと，ひょっとして， ファイル→パブリッシュ設定でFlashタブを選択すると， ActionScript のバージョンが ActionScript 3.0 に設定されていませんか？ onハンドラ は ActionScript 2.0 以下 に存在するスクリプトで ActionScript 3.0 にはありませんよ。 もし パブリッシュ設定 で ActionScript のバージョンが ActionScript 3.0 に設定されていたならば， ActionScript 2.0 や 1.0 にすべきです。 （というか， もし ActionScript 3.0 に設定されていたならば， > on(press)関係をボタンをつけたレイヤーに書くと などという表現はしないはずです。 ご質問に > on(press)関係をボタンをつけたレイヤーに書くと と書かれていらっしゃるので， こちらは自動的に ActionScript 2.0 以下だと判断して回答しています。）
作ったボタンになにもSpriteを入れてないし addChildもしてないみたいですが もし、ステージ上の既存のインスタンスを ボタンにしようとしてるのならこれは 新しくボタンを作る記述になっているので そもそもそこから間違いです 多分topBtn01とnextBtn01という 既存のボタンのインスタンスが タイムラインに現れるフレームに これを記述してるんだと憶測しますが タイムラインに途中から現れたインスタンスは 一度ENTER_FRAMEを待たないとアクセスできません ですからこのフレームに書きたいなら ENTER_FRAMEイベントを一度まってから addEventListenerをするか あるいは１フレーム目でボタンを作っておいて visible=falseにするなりremoveChildしておいて このフレームにきたらvisible=trueか addChildするなりするようにするかです
var ref=new FileReference() ref.download(new URLRequest("ファイルのURL"),"デフォルトの名前") みたいなカンジでいけるようですよ
addEventListener(MouseEvent.CLICK,onClick) function onClick(e){ navigateToURL(new URLRequest("右側URL#アンカー"),"フレーム名") } でいけるかと
当時の事はよくおぼえてないですが確か 外のXML読み込むときは XMLクラスのコンストラクタに入れるのはObject URLLoaderのデータはバイナリでなけりゃString ってことでnew XML()じゃなくXML()で 文字列をXMLに変換 ってカンジにやってました
AS2までだったら_parentでしたね すいませんAS3ばっかり使ってるもんで...
＃１の方と同じような内容ですが， こんな感じで良いのではないでしょうか (コピペ可↓)。 -------------------------------- var boxArray:Array = new Array(); for (var i:int = 0; i < 3; i++) { boxArray[i] = new box_mc(); addChild(boxArray[i]); boxArray[i].y = 20*i; boxArray[i].addEventListener(MouseEvent.MOUSE_OVER, function (event:MouseEvent):void { // ★↓ここを変更 event.currentTarget.x += 10; }); } // ★↓こうして確認してみれば？ trace("「i」の値は？→" + i); -------------------------------- 「制御」→「ムービープレビュー」で動作確認します。 ↑これでどこが原因かわかりますか？ for文 を抜けた後， 変数「i」の値は 3 になるのです。 for文 によって boxArray の中の要素(box_mc参照変数)は， boxArray[0]，boxArray[1]，boxArray[2] の ３つしかできませんよね？ つまり boxArray[i] つまり boxArray[3] など存在ません。 各ムービークリップに人間がロールオーバーする頃など， for文 などとっくに抜けきっていて，「i = 3」 で止まっています。 したがって書かれていらっしゃる > boxArray[i].x = 10; だと，どのムービークリップにロールオーバーしようとも， boxArray[3] を 10px に移動させようとします。 だから 「null のオブジェクトを参照してます(そんなものありませんで！)。」 というエラーが出るのです。
これは意図的にそうさせているのではなく、［設定］をクリックして表示される設定マネージャの大きさよりもムービーが小さいと自動的に［設定］の項目が無効になります。 ムービーのサイズがwidth=214以下またはheight=137以下だとそうなるそうです。 ■参考 http://migelnanai.blog.so-net.ne.jp/2007-05-02
ボタン.addEventListener(MouseEvent.MOUSE_OVER,function(e){左の画像MC.gotoAndStop(行先フレーム)}) ついでにフェードインさせるなら import fl.transitions.Tween import fl.transitions.easing.Regular var twn=new Tween(左の画像MC,"alpha",Regular.easeOut,0,1,20) ボタン.addEventListener(MouseEvent.MOUSE_OVER,function(e){左の画像MC.gotoAndStop(行先フレーム);twn.rewind();twn.start()}) ってところでしょうか 最近のFlashはヘルプがもう本はいらないんじゃないかってくらい秀逸なのでまずは addEventListenerを調べればその辺の基本はわかると思います フェードインに使ってるTweenクラスも同じく
こんにちは 少し違うかもしれませんが参考になると思います。 http://mysketch.jp/blog/javascript/ 【JavaScript】+【AS2】フローティング効果
AS3ならAway3D、Sandy、PaperVision3Dという選択肢もあり AS2でもあるけど実行速度考えるとやっぱり3から 新しいFlashでは３D表現できるようになったと言っても シーンにカメラにオブジェクトがあって レンダリングしてビューができるという ３Dのプロセスを経ているわけじゃないので疑似３D バリバリ3D表現したいなら3Dライブラリ導入を
XMLの構造が正確にわかならないので、全体の構造がわかるように省略してほしいですが、、ひとまず一番簡単に書けるので、 for each文で回すことにします。 ■ XML ---- <?xml version="1.0" encoding="UTF-8" ?> <data> <time>1234567890</time> <id>12345</id> <id>23456</id> : : </data> ---- ■as ---- var xml:XML = new XML('上記のString'); var idList:Array = new Array(); for each(var dat in xml.id) { //配列idListに追加 idList.push(dat); } ---- 全体の構造がよくわからないので、もしもidタグが上記のような単純な構造に収まっていないのであれば、同様のロジックで別途追加する必要があります。 XMLを作成する時はデータの構造を見て、あらかじめどのような構造で作ればデータが拾いやすくなるかを考慮して作ることがも大事です。
憲ちゃん も関係なければ スライドバー も関係ないと思いますよ。 ダイナミックテキスト(またはテキスト入力)のテキストフィールドを回転させるだけでそうなります。 すでに複雑になったもので検証したり考察したりするのではなく， 「問題を単純化する」「問題の切り分けをする」ということが大切です。 「ダイナミックテキストを回転させたい」 http://okwave.jp/qa/q1227796.html 「FN0502002 - デバイスフォントが表示されない - Flash テクニカルノート」 http://fumiononaka.com/TechNotes/Flash/FN0502002 … 「ダイナミックテキストを回転させて使う場合//AS2.0」 http://www.bute-studio.com/lab/2008/02/as20.html 上記３ページとは別の解決策 「ダイナミックテキストの回転やalpha(透過)を設定 ClockMaker Blog」 http://clockmaker.jp/blog/2008/09/dynamic_text_a … その他 テキスト１文字ずつをを画像化して（他ソフトで文字画像を作るとか，テキストを分解してシェイプにして）， その画像を表示させるとかいう手段もあります。
多分公開者が上げ忘れてるんだと思いますが Flashのパブリッシュ使ってるんだとしたら とりあえずブラウザのJavaScript切っちゃうと 一応見れるかと思います それで見れないときはソースコードから AC_RunActiveContents.jsをさがしてそのなかで 引数として渡されている文字列群のなかの "movie"の次にきてるのがswfへのパスですので そこに直接いったら一応見れるかと思います Flashからパブリッシュしてたら多分 文字列群の後ろから２番目にありますが 公開者が意図しない見られ方なので 意図しないものが見えちゃったりします たとえばバールのような....
//CS3AS3で基本的な作りだけ //フレーム１にコピペするだけでうごくはず //太さと色と範囲の指定 var rct:Rectangle=new Rectangle(0,0,550,400); var weight:Number=5 var color:int=0x333333 //当たり判定につかうスプライトと //描画に使うスプライトと描画されるビットマップとビットマップデータ作る var hitSpr:Sprite=new Sprite() var drawSpr:Sprite=new Sprite(); var boadBmpData:BitmapData=new BitmapData(rct.width,rct.height); var boadBmp:Bitmap=new Bitmap(boadBmpData); //で、ステージに addChild(boadBmp); addChild(drawSpr); addChild(hitSpr); //描画用のスプライトの描画範囲を透明で塗りつぶす //なんにもないとマウスイベントかからないから with (hitSpr) { graphics.beginFill(0,0); graphics.drawRect(0,0,rct.width,rct.height); graphics.endFill(); } //描画用スプライトにマウスが置かれたら描画開始 //離れたら描画終了するようにする hitSpr.addEventListener(MouseEvent.MOUSE_DOWN,onDown); hitSpr.addEventListener(MouseEvent.MOUSE_UP,onUp); hitSpr.addEventListener(MouseEvent.MOUSE_OUT,onUp); //マウスが置かれた時、とりあえずグラフィックの線の太さと色を設定してから //描画点をマウスのとこまで移動する、そしてマウス移動で描画するようにする function onDown(e) { with (drawSpr) { graphics.lineStyle(weight,color); graphics.moveTo(mouseX,mouseY); } addEventListener(MouseEvent.MOUSE_MOVE,onDraw); } //マウスが離れたら描画用スプライトをビットマップに描画してクリアしてしまう function onUp(e) { boadBmpData.draw(drawSpr,new Matrix(),new ColorTransform(),BlendMode.MULTIPLY,rct); with (drawSpr) { graphics.endFill(); } removeEventListener(MouseEvent.MOUSE_MOVE,onDraw); } function onDraw(e) { drawSpr.graphics.lineTo(mouseX,mouseY); }
　JavaScriptそのものはWEB上で検索すると入門講座やサンプル・スクリプトなどが幾らでも参照できるので説明の必要なしと思います。 それよりも[dewplayer]がM.I.T.（マサチューセッツ工科大学）のオープン・ソースであることが謳われているので、そちらも確認しておきましょうということです。 参考URL：http://ja.wikipedia.org/wiki/JavaScript
「配列アクセス演算子」 というのは「配列」という言葉が名前には含まれていますが， インスタンスの階層を示す場合は全く配列とは関係がありません。 しかし， 書く書き方自体の法則は配列(二次元配列・三次元配列…多次元配列)と同じく， 間にドットは要りません。 つまり書かれていらっしゃる > this[ "ph0" + i + "MC" ] . [ "ph0" + i ] ではなく， this[ "ph0" + i + "MC" ] [ "ph0" + i ] 的な書き方をします。 ＝＝＝＝＝＝＝＝＝＝＝ ただ，そのインスタンスのプロパティを書く場合は， 例えば y座標 というプロパティを指示する場合は， this[ "ph0" + i + "MC" ] [ "ph0" + i ]._y = 60; という感じの書き方になります。 [ ] は１つの階層ですから。 ＝＝＝＝＝＝＝＝＝＝＝ しかしもっとも， this などのターゲットパスが元から狂っていたら（ターゲットパスを理解していないとかケアレスミスで何かが間違っているとかすれば）， 書き方だけの問題ではなくなりますが。 ※ trace(this); などで this は何なのか検証しながら作ったり 　 いっそのこと _root (AS2 の場合 root ではありませんよ) からの 　 絶対パスにする方が良いかもしれません。 以上，全く動作検証などしていません。 ご質問とご質問で提示されたページを見た限りの感想のようなものです。
確かに参考先のURLにはなぜかActionScript用のドキュメントもないので、わかりづらいですね。。。 FlashDevelopやFlexBuilderを使用すれば、swcをライブラリパスに追加すると入力した際にコードヒントが出てくれるので、どういったコードを追加すればよいのかがわかるようになります。 とりあえず、ライブラリパスを通した後、下記のようにasを書けば使えます。 使い方としてはこんなかんじです。 ■カタカナ→ひらがな ----- import com.googlecode.kanaxs.KanaUtil; trace(KanaUtil.toHiraganaCase("カタカナ")); ----- ■ひらがな→カタカナ ----- import com.googlecode.kanaxs.KanaUtil; trace(KanaUtil.toKatakanaCase("ひらがな")); -----
間違っているかもしれませんが、 この場合、呼び出し元のswfのサイズを、 「画面の横幅分（左の端から右の端まで）」 としなくてはいけないのではないでしょうか？ → １．先ず、同時再生は出来たのでしょうか？これが、主目的だったと思いますが。 ２．位置は、main.swf(読み込み側）とsub0.swf/sub1.swfのサイズを設計し、その上で、どこに表示させるかを決めます。loaderは、外部swfを左上基準で読み込みますから、それを考慮し、且つ、本文のサイズも考慮し、全体サイズを決定する必要があります。
＃３の方と同意見です（Suzuka的補足です）。 要は例えば， 　　部屋の中のムービーのようなものを作るとき 　　部屋にある窓の外に雪を降らせたいのに 　　部屋の中に雪が降ってしまう～～！ とかいうようなことでしょう(笑)？ スプライトの中に雪を降らせて， そのスプライトを部屋など画像やスプライトの下のレイヤーに配置すれば良いだけでしょう。 　メインのタイムライン 　　　　├画像など 　　　　├スプライトなど 　　　　└雪スプライトが入ったスプライト 　　　　　　　　　└雪スプライト ActionScriptで配置するものは普通 深度0 以上なんですよ。 一方レイヤーで配置できるものは 深度0 未満なんです。 でもそれはそのタイムライン階層(そのスプライト内)での深度だけの話ですから， スプライトごと下レイヤーに持っていけば良いわけです。
ANo.2です。 ３階層下の意味はわかりますよ。 ただそれらにどういうインスタンス名が付けてあって "どのこにスクリプトを書きたいか" などがわからないのです。 (動くMC自体に書く/動くMC内フレームに書く/クラスを作る/ などなど…) ActionScript のバージョンは ANo.4 の お礼 に書かれていいらっしゃる > ActionScript2.0を使用していると書くべきだった… でなんとか判明しました。 それと ANo.2 で書いた 『「A君(速さ不明)」と「B君(速さ一定)」を競走させる喩え話』 は理解されましたか？ どのバージョンであっても同じ考え方で行けると思うのですが。 ～～本題～～～ _root に 「mc1」 というインスタンス名のムービークリップ(MC)があって その中に 「mc2」 があって，さらにその中に 「mc3」 というMCがあるとします。 その場合 _root のフレーム1に書くスクリプト例です。 (勝手に _root のフレームに書くと決めます。) -------------------------- // とりあえず この階層(_root) の再生を停止 this.stop(); // スタート y座標 を設定(※変更可) var sta:Number = 73.5; // ゴール y座標 を設定(※変更可) var gol:Number = 44.8; // sta と gol を大小比較し ± を出す var p_m = (gol-sta>=0) ? 1 : -1; // ロード1％で動く距離を算出 var mov:Number = Math.abs(gol-sta)/100; // 「B君(速さ一定)」の速さを設定(※1.5は変更可) var spdB:Number = mov*1.5; // 「mc3」 y座標を sta にしておく mc1.mc2.mc3._y = sta; // カウント用変数 cnt の初期化 var cnt:Number = 0; // １フレーム進む時間ごとに毎回実行する関数を定義 this.onEnterFrame = function():Void { // // この階層(_root) のロードパーセントを算出 var per:Number = this.getBytesLoaded()/this.getBytesTotal()*100; // // 「A君(速さ不明)」の動く距離を算出 var MrA:Number = p_m*mov*per; // // カウント用変数 cnt に 1 を加算 cnt++; // // 「B君(速さ一定)」の動く距離を算出 var MrB:Number = p_m*spdB*cnt; // // mc3のy座標をA君との動く距離を比べた小さい方の値にする mc1.mc2.mc3._y = p_m*(Math.min(Math.abs(MrA), Math.abs(MrB)))+sta; // // もし 100％以上ロードが完了し なおかつ // B君の移動距離が ゴール-スタート 以上になったとき if (per>=100 && Math.abs(MrB)>=Math.abs(gol-sta)) { // この階層を再生 this.play(); // １フレーム進む時間ごとに毎回実行する関数を削除 delete this.onEnterFrame; } }; -------------------------- [制御]→[ムービープレビュー] で出るパネルの [表示]→[ダウンロードのシミュレート] で動作検証できます。 スタートとゴール座標の値の大小が入れ替わっても良いように， （下から上へ移動しても上から下へ移動しても良いように，） 少々スクリプトが複雑になりました。 あと，Flashのインスタンスの座標は， そのインスタンスがある階層の基準点からのローカル座標ですからね。 「mc3」の座標とは「mc2」の基準点を0とした「mc3」の基準点の座標です。 混乱しないようにご注意ください。
> 別で作成してあるswfファイルを表示できるようにしたいです。 いったいどこに？ ボタンのある Flash 内に別の Flash をロードするということでしょうか？ > また、その場合に別窓でも表示できるようにしたい これの意味はおそらくわかります。 別窓のブラウザに別Flashを表示するという意味ですね。 === === === 私は ParaFla! 専門の者ではありませんが(ParaFla!ド素人で Flash と Suzuka が専門)， 書かれていらっしゃることくらいでしたらなんとかできますので一応説明します。 まず作ろうとするものの ファイル構造が 次のようなものであったとします。 　任意のフォルダ 　　　├A.html(A.swfを貼り付ける) 　　　├A.swf(ボタンがあるFlash) 　　　├B.html(B.swfを貼り付ける) 　　　└B.swf(あらたに表示されるFlash) とりあえずは仮の形だけでも良いので，話の本題ではない「B.swf」を先に作っておきます。 そして本題の A.pfl(A.swfを作るプロジェクトファイル)のイベントに クリックするボタンとスプライトを追加します。 イベントに追加したスプライトには，例えば「load_mc」というインスタンス名を付けておきます。 イベントに追加したボタンを選択し， スクリプトを書くパネルを表示させて， そこに次のようなActionScriptを書きます。 そして，「ファイル」→「SWFファイル生成」でSWFとHTMLを作成すればできあがりです。 ---------------------------------- on (release) { // load_mc に B.swf をロード _root.load_mc.loadMovie("B.swf"); // B.html(B.swf)を別窓で開く getURL("B.html","_blank"); } ---------------------------------- ここでは回答文字数も限られますし， 図も420×314pxという小さなJPEGしか貼れませんから詳細な説明は無理です。 これを機会に， 例えば 「ParaFla on(release)」 とか 「ParaFla loadMovie」 のような用語でGoogle検索をしてみると， 今回の質問に直接関係するしないに関わらず，色々な情報を提供してくださっているサイトが見つかると思いますよ。 「ParaFla on(release)」 http://www.google.co.jp/search?hl=ja&source=hp&q … 「ParaFla loadMovie」 http://www.google.co.jp/search?hl=ja&q=ParaFla+l … 検索エンジンを使うと 「１つの専門用語(スクリプトも専門用語)から100以上の専門用語を知ることができる」 という大きな大きなメリットがあります。 (逆に言えば１つも専門用語を知らなければずっとわからないままとも言えます。) 検索エンジンを有効に利用してください。
まず高さ500pxの画像をムービークリップ（以下MCと略）に変換します。 その時に 「基準点」を左上 に設定してMCに変換します。 そしてステージ上のこのMC にインスタンス名を付けますが， ここでは「pic_mc0」というインスタンス名を付けることにします。 　┼──┐←基準点左上の「pic_mc0」 　│画像│ 　│画像│ 　│画像│ 　│画像│ 　└──┘ その「pic_mc0」をさらに 「基準点」を左上 に設定したMCに変換します。 そして「scr_mc」というインスタンス名を付けることにします。 　┼────┐←基準点左上の 　│┼──┐│　 「pic_mc0」入り「scr_mc」 　││画像││ 　││画像││ 　││画像││ 　││画像││ 　│└──┘│ 　└────┘ その「scr_mc」の上や下など，適当な場所に２つのボタンを作成して， scr_mcを上にスライドさせる方のボタンには「up_btn」，下にスライドさせる方のボタンには「down_btn」 というインスタンス名を付けます。 次に「scr_mc」やボタンを配置したレイヤーの上にレイヤーを追加して， そのキーフレームに次のように書きます。 --------------------------- // スライドする速さを設定(※可変) var spd:Number = 20; // 「scr_mc」の初期座標を記録 var base:Number = scr_mc._y; //scr_mc内の 「pic_mc0」を「pic_mc1」という名で複製し // 「pic_mc1」のy座標を「pic_mc0」のすぐ下に配置 // (※これが無限スクロールのミソ) scr_mc.pic_mc0.duplicateMovieClip("pic_mc1", 1); scr_mc.pic_mc1._y = scr_mc.pic_mc0._height; // 「up_btn」プレス時の動作 up_btn.onPress = function():Void { // 「scr_mc」に１フレーム時間ごとに実行する関数を定義 scr_mc.onEnterFrame = function():Void { // spd ずつ座標を上げる this._y -= spd; // もしy座標が「scr_mc」の半分未満になるば if (this._y<base-this._height/2) { // 「scr_mc」の半分下に下げる this._y+=this._height/2; } }; }; // 「up_btn」を放した時の動作 up_btn.onRelease = up_btn.onReleaseOutside=function ():Void { // 「scr_mc」の１フレーム時間ごとに実行する関数を削除 delete scr_mc.onEnterFrame; }; // 「down_btn」プレス時の動作 down_btn.onPress = function():Void { // 「scr_mc」に１フレーム時間ごとに実行する関数を定義 scr_mc.onEnterFrame = function():Void { // spd ずつ座標を下げる this._y += spd; // もし最初のy座標より下に下がれば if (this._y>base) { // 「scr_mc」の半分上に上げる this._y-=this._height/2; } }; }; // 「down_btn」を放した時の動作 down_btn.onRelease = down_btn.onReleaseOutside=function ():Void { // 「scr_mc」の１フレーム時間ごとに実行する関数を削除 delete scr_mc.onEnterFrame; }; --------------------------- > ボタンを操作して画像を初期の座標（たとえばy.100）から上下に動かし、 100 ではなく -100 ではないでしょうか？ そもそも y座標 は下方が ＋ ，上方が － ですよ。 Flash に限らず何でもそうです（イラレを除く）。 何にしても初期の座標は画像自体ではなく「scr_mc」の初期配置を -100 などにすれば良いです。
ここは、FlashのQ&Aなので、PHPで、質問されたら良いでしょう。 どう設定されたか、分からないので、回答はできませんが、通常は、「It　Works！」と表示されますので、設定が間違っているのでしょうね。 PHPサイトで、その辺の設定方法を詳しく、記載した上で、聞いて下さい。 今の質問を繰り返しても、同じ回答になると思います。
解決したようなところにおせっかいですが 1の方への返答に書かれたコード 同じようなものを作った事があるんですが これだと重力の値が高いとき地面でガタガタしません？ たとえば地面に接触している時を考えた時 地面に接触しているのに重力分加速して 地面からはねることになるはずです 簡単に言うと 地面にぶつかって押し戻された分 つまり、なかったことにされた時間の分まで 加速されているから永遠に止まらない ってことです これを回避するには 簡単な方法だと速度がある程度以下なら ０にしてしまい、加速もしないようにする ある程度ちゃんとするなら 本来すすむはずだった距離と 押し戻された距離を考慮して 重力加速を減算する というようにやれば良いかとおもいます おせっかいスイマセン
kkminさん、 パブリッシュ設定は Flash Player8、ActionScript2.0 で作成しました。学校にあるソフトは、Macromedia Flash MX 2004 です。 → パブリッシュ設定は、過去バージョン分がサポートされてますが、flaファイルの保存は、ひとつ前のバージョンしかサポートされてないので、CS4の場合は、CS3まで、CS3は、Flash8まで、Flash8は、MX 2004までです。 尚、CS3までは、過去バージョンflaを全て開くことができましたが、CS4では、Flash8以降なら開けますが、MX 2004以前は、開けなかったかと思います（CS4では、Adobeが、MX2004以前を切り捨てたのです。） 従って、これは、直接は、無理で、面倒でも、 １）CS4で保存する際に、ファイル>名前を付けて保存＞CS3を選択して、CS3にし、 ２）CS3で開いて、ファイル>名前を付けて保存＞Flash8を選択して、Flash8 にし、 ３）Flash8で開いて、ファイル>名前を付けて保存＞Mx 2004を選択して、Mx2004にする必要があります。
Web制作やっております。 アニメーション素材は、見る限り全部イラレで作られてますね。 半透明のグラデはイラレで作ってPNG保存すれば半透明化もできますし FLASH側でアルファー化すればいいわけですから 輪郭が不均一といってもパーツごとに組み合わせなければ アニメさせるのはめんどくさいですので、大まかにレイヤーわけで制作しておいてから、PNG保存でパーツを抜き出してアニメさせてると考えますが パルコアラは手塗りのものをアウトライン化　パスに変換して、イラレでパーツ作ってますね。
次のシーン２などの飛び先のフレーム(例：シーン 2 の フレーム1)の キーフレームに次のように書けば，流れ星は消えると思います。 ------------------------ // とりあえず今飛んでいる最中の流星を消す removeMovieClip( ns); // そして setInterval を削除 clearInterval(ID); ------------------------
IE などブラウザの，ローカル実行時の仕様ではないでしょうか？ Google検索「IE クエリ ローカル」 http://www.google.co.jp/search?hl=ja&source=hp&q … ローカルでクエリ文字列を渡そうと考えたことがなかったので今まで気にしていませんでしたが， getURL("check_1.html?firstName=Gus&lastName=Richardson&age=92"); のようにしても同じくダメでした。 そもそも 「ローカル環境」で「ブラウザを使う」ということ自体普通はしませんし， なおかつ「それにFlashを引っ付けて」なおかつ「クエリの送受信をする」 という状況は普通考えられないので，困る人はあまりいないと思います...。 もしそういう変わったことをする場合は別の方法をとるべきですね。 考えて，実験もしてみましたが， 次の方法だとローカルでも動作しました。 　任意のローカルフォルダ 　　　├任意のHTML(send_get.swf を貼り付ける) 　　　├send_get.swf 　　　└check_1.html 任意のHTML内のコード例↓ -------------------------- <html> <head> <meta http-equiv="Content-Type" content="text/html; charset=shift_jis" /> <title>send_get</title> <script language="JavaScript"> function goMyURL(myURL) { location.href(myURL); } </script> </head> <body bgcolor="#ffffff"> <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="300" height="200" id="send_get" align="middle"> <param name="allowScriptAccess" value="sameDomain" /> <param name="movie" value="send_get.swf" /> <embed src="send_get.swf" width="300" height="200" name="send_get" align="middle" allowScriptAccess="sameDomain" type="application/x-shockwave-flash" /> </object> </body> </html> ------------------------- Flash のボタンのスクリプト↓ ------------------------- on (release) { import flash.external.*; var firstName:String = "Gus"; var lastName:String = "Richardson"; var age:Number = 92; ExternalInterface.call("goMyURL", "check_1.html?firstName="+firstName+"&lastName="+lastName+"&age="+age); } ------------------------- ※ 要：Flash 8 (Flash Player 8) 以上 簡単に言えば JavaScript 経由です。 変わったことをせずに普通にネットにアップすれば， このような妙なことはしないで良いと思います。
totorojpさん、 総じて、難しくしてるような気がしますが、 3)、最後、もう一回Enterキーを押下すると、「次」ボタンと連動して次のページへ進みます。 → ここは、あまり考えてないので、ご自分で考えて頂くとして、以下でいかがでしょうか？ ■fla側：2フレームから構成し、第一フレーム目のscriptレイヤーに、以下を記載します。 //ここから this.stop(); _txt.text = "";//サーバーサイドのPHPから返信を表示するダイナミックテキストの設置、初期値は、ブランク var lv:LoadVars = new LoadVars(); lv.onLoad = function(success:Boolean) { if (success) { _txt.text = this.mess;//PHP処理結果の&mess=XXXXX&のXXXを代入 } else { _txt.text = "ロード失敗"; } }; /*こっちの方が簡単だと思いますがね・・・ a.onRelease = function():Void { lv.sendData = "あ"; lv.sendAndLoad("./receiver.php?"+getTimer(),lv); }; b.onRelease = function():Void { lv.sendData = "い"; lv.sendAndLoad("./receiver.php?"+getTimer(),lv); }; c.onRelease = function():Void { lv.sendData = "う"; lv.sendAndLoad("./receiver.php?"+getTimer(),lv); }; */ next.onRelease = function():Void { nextFrame();//次のフレームに移動、停止し、次のページを表示 }; //以下が、ボタンクリックの代わりに、ENTERキーを使うケース var n:Number = 0; this.onEnterFrame = function():Void { if (Key.isDown(Key.TAB)) { n++;//TABキーを押し下げする都度、カウントアップ trace(n); if (n == 1) {//1回目なら、 Selection.setFocus("a");//ボタン　a　に、フォーカスし、 lv.sendData = "あ";//LoadVarsの変数sendDataに、"あ"を代入 } else if (n == 2) { Selection.setFocus("b"); lv.sendData = "い"; } else if (n == 3) { Selection.setFocus("c"); lv.sendData = "う"; n = 0;//初期値に戻す } } if (Key.isDown(Key.ENTER)) {//ENTERキーを押し下げたなら、 lv.sendAndLoad("./receiver.php?"+getTimer(),lv);//同一階層のreceiver.phpに送信して、処理させ、結果を受け取る } }; //ここまで ■サーバーサイドアプリ側：receiver.phpを設置しました。 <?php $data=$_POST['sendData']; switch ($data){ case 'あ': print '&mess=「'.$data.'」を受け取りました&'; break; case 'い': print '&mess=「'.$data.'」を受け取りました&'; break; case 'う': print '&mess=「'.$data.'」を受け取りました&'; break; } となります。
なぜかしばらく非表示でした.../(-_-)ヽ ＃１です。 ＃１の補足で書かれていらっしゃるようなことはボタンではできません。 できませんが，なるべく元を変えずに，近いことをするには， まずボタンにインスタンス名を付けます。 たとえば「newpage_btn」というインスタンス名を付けます。 そしてスクリプトを次のようにします↓。 ------------------------- on (release) { _global.soundBtn.start(); _root.gotoAndStop("newpage"); } on (keyPress "<Enter>") { _global.soundBtn.start(); // ↓ボタンnewpage_btnにフォーカスを与える Selection.setFocus("newpage_btn"); _root.gotoAndStop("newpage"); } ------------------------- しかし，↑こういうことではありませんよね(多分)？ ＃２の方が書かれていらっしゃるように， ムービークリップ(MC)でボタンを自作する必要があると思います。 仮にムービークリップ内に置く画像の， 　　フレーム1 の色を緑 　　フレーム2 の色を赤 　　フレーム3 の色を青 とします(何でも良いですが)。 そのMC"自体"に書くスクリプト例↓。 ------------------------- // このMCが表示された時 onClipEvent (load) { // このMC内の再生を停止 this.stop(); } // 何かキーが押された時 onClipEvent (keyDown) { // もしそのキーがEnterであれば if (Key.getCode() == 13) { // このMC内をフレーム3で停止 this.gotoAndStop(3); } } // 何かキーが放された時 onClipEvent (keyUp) { // このMC内をフレーム1で停止 this.gotoAndStop(1); // もしそのキーがEnterであれば if (Key.getCode() == 13) { _global.soundBtn.start(); _root.gotoAndStop("newpage"); } } // このMCにロールオーバーした時 on (rollOver) { // このMC内をフレーム2で停止 this.gotoAndStop(2); } // このMCを外で放したりロールアウトした時 on (releaseOutside, rollOut) { // このMC内をフレーム1で停止 this.gotoAndStop(1); } // このMCを押した時 on (press) { // このMC内をフレーム3で停止 this.gotoAndStop(3); } // このMCをクリックした時 on (release) { // このMC内をフレーム1で停止 this.gotoAndStop(1); _global.soundBtn.start(); _root.gotoAndStop("newpage"); } ------------------------- ※ Flash MX (Flash Player 6) 以上 　　ActionScript 1.0 (設定は 2.0 でもOK) なお，次のページにあるように， MC内に「_up」「_over」「_down」というフレームラベルを付けておくとスクリプトはもっと簡略化できます↓。 「ムービークリップのボタン化」 http://homepage3.nifty.com/ginga-b/MX/btnmc.html スクリプトは簡略化はできますが， 結局考える方向性はほとんど同じです(むしろややこしいかも)。
ActionScriptではMovieClip(ムービークリップ)、 Suzukaではスプライトと呼ばれるものがありますよね。 それのフレーム移動を使えば良いでしょう。 メインメニューにボタンが３つあって、 サブメニューにもボタンが３つずつ出るとします。 そして 　_root(メインのタイムライン) 　　├ボタン１ 　　├ボタン２ 　　├ボタン３ 　　└menu_mc(スプライト) 　　　 │ 　　　 │-フレーム1- 　　　 ├スクリプトのみで何も置かない 　　　 │ 　　　 │-フレーム2- 　　　 ├ボタン21 　　　 ├ボタン22 　　　 ├ボタン23 　　　 │ 　　　 │-フレーム3- 　　　 ├ボタン31 　　　 ├ボタン32 　　　 └ボタン33 このような階層構造を作るとします。 まずスプライトを用意して、 そのスプライト内のフレーム1にアクションレイヤーを追加し、 スプライト内が自動再生しないように、 stop(); と書いておきます。 そしてスプライト内のフレーム2には３つのボタンを配置し、 スプライト内のフレーム3にも３つのボタンを配置しておきます。 メインのタイムラインの編集に戻って、 ３つのボタンと、上で作成したスプライトをレイヤーに追加し、 スプライトを配置したレイヤーをダブルクリックするなどして、 「レイヤーのプロパティ」パネルを出し、 「インスタンス名」の欄に「menu_mc」と記入してスプライトにインスタンス名を付けます。 (図↓) メインメニューのボタン１を選択し、 右下に出てくる [スクリプトを編集(E)] ボタンをクリックし、 次のようなスクリプトを書きます。 ------------------------ // このボタンロールオーバー時に実行 on (rollOver) { // menu_mc内をフレーム1に進めて停止 menu_mc.gotoAndStop(1); } ------------------------ メインメニューのボタン２には次のようなスクリプトを書きます。 ------------------------ // このボタンロールオーバー時に実行 on (rollOver) { // menu_mc内をフレーム2に進めて停止 menu_mc.gotoAndStop(2); } ------------------------ メインメニューのボタン２には次のようなスクリプトを書きます。 ------------------------ // このボタンロールオーバー時に実行 on (rollOver) { // menu_mc内をフレーム3に進めて停止 menu_mc.gotoAndStop(3); } ------------------------ もちろん 　// menu_mc内をフレーム○に進めて停止 　menu_mc.gotoAndStop(○); ではなく 　// menu_mc内をフレーム○に進めて再生 　menu_mc.gotoAndPlay(○); にしてボタンをトゥイーンでフェイドインさせてもかまいません。 その辺は自由です。 menu_mc内の各ボタンには次のように書けば良いでしょう。 ------------------------ // このボタンをクリック時に実行 on (release) { // ○○.htmlページへジャンプ getURL("○○.html"); } ------------------------ 「タイムラインの制御」 http://suzupara.iinaa.net/kiso031.html 「フェイド効果」 http://www16.plala.or.jp/kiitoksia/sanft/suz/suz … 「on ハンドラ」 http://suzupara.iinaa.net/kiso041.html 「getURL」 http://suzupara.iinaa.net/kiso081.html
PHPなどと組み合わせればなんとかって感じかと思います URLRequestのdataのURLvariableにいろいろ必要事項を入れて POSTで送信してサーバサイドのPHPとかで処理してもらうカンジです 要するにフォームのようなものは作れるので あとはHTMLで作るのと同じようにってことですね 余談ながらASCってサーバサイドで動くASがあるみたいですね 動くサーバをみたことないんですが
OSがWindows系だと仮定して話を進めます。 ブラウザのプラグインにはIE系（ActiveX）と、その他（Netscape互換）の２種類があります。 また、ブラウザのプラグイン以外にも、スタントアロンプレイヤー（デバッグプレイヤー）という物もあり、それぞれ全く別のものです。 swfファイルを直接実行した場合、使用されるのは、スタントアロンプレイヤー（デバッグプレイヤー）の方です。これは、通常のブラウザからFlashのインストールでは、インストールされません。 FlashのCS3とCS4が入っているとの事なので、すでにインストールされているかと思いますが（私は持ってないので確認できません）、見つからなければ、Adobeのサイトからダウンロード可能です。 http://www.adobe.com/jp/support/flashplayer/down … Windows Flash Player 10 プロジェクタコンテンツデバッガをダウンロード (EXE, 5.18 MB) ファイルの関連付けで、Flash Player 9 が選択されていると思われますので、関連付けを変更すれば Flash Player 10 で開くと思います。 関連付けの変更方法 １．swfファイルを右クリックして、「プログラムから開く」→「プログラムの選択」 ２．「この種類のファイルを開くときは、選択したプログラムをいつも使う。」をチェック ３．Flash Player 10　を選択し、「OK」 これで、デフォルトのプログラムがFlash Player 10になると思います。 プログラムの一覧にFlash Player 10がない場合は、「参照」で探すか、上記のURLからダウンロードして下さい。プレイヤーのEXEファイルがダウンロード出来ますので、適当なフォルダに保存し、上記の「参照」から、このファイルを指定して下さい。
SharedObjectを使います。 以下のサイトにFLAのサンプルがありますので、研究してみて下さい。 参考URL：http://hfm-kenchan.com/xbook/s156.htm
csvにしてテキストとして読み込み シート、行、列それぞれの区切り文字で split()して多次元配列にすればいけるかと xml書き出せるならflashにはXMLのクラスがあるんで それで扱えるようになると思います Flash側で直接テーブルの様なデータを 扱うようなことはできなかったと思います
srtai4112さんのscript(harayuさんがオリジナル？）は、正常に停止しますが・・・
その書き方だとコンストラクタのgoo()実行後 rectはガーベージに入ってアクセスできなくなりますよ このクラスに共通で使いたいなら class goo{ private var rect:Sprite public function goo(){ rect=create() } ってクラスのプロパティとして 宣言してやればいいと思うんですが そうしたくないなにかあるんでしょうか？
一応問題解決したみたいですが とりあえず見せてもらったソースからみて 最初に言ったような同じインスタンスを 置き直すようなことにはなってないです が、まず配列にインスタンスを入れて その配列をリセットしたところで 中身のインスタンスは消えません b1,b2,b3という連番のインスタンスを 上書きすることでremoveMovieClip() したみたいになってますが リセットするたびにb1,b2,b3...の数が 変わるので上書きしきれなかった bのインスタンスがでてきたりして aを-1し続けてまたリセット処理 してしまうような感じになってます c=5とか、数がランダムでないなら これでも動作するかも知れないですが リセット処理の度に確実に bに入ってる全てのインスタンスを removeMovieClip()する処理を 加えるようにしないと bのインスタンスの残骸が残ってしまいます あと、これは書き直しの時に 間違っただけだと思いますが bのインスタンスをattachMovieする場所は この場合_rootじゃなくthisですね this.onEnterFrame = function(){ if(a == 0){ b = new Array(); for(var i=1; i<=c; i++){ ↓ var b = new Array(); this.onEnterFrame = function() { if (a <= 0) { for(var j=0;j<b.length;j++){ b[j].removeMovieClip() } for (var i = 1; i<=c; i++) {
◎ その１ に関して スクリプトは次のようにすれば良いと思います。 ------------------------------- this.stop(); // キー監視用にするオブジェクト「myKey」を作成 var myKey = new Object(); // 「myKey」にキーダウン時のイベントハンドラメソッドを定義 myKey.onKeyDown = function() { if (Key.isDown(Key.RIGHT)) { _root.gotoAndPlay(21); } else if (Key.isDown(Key.LEFT)) { _root.gotoAndPlay(31); } }; // Keyクラスのリスナーとして「myKey」を登録 Key.addListener(myKey); ------------------------------- (注) キー動作を実行させる場合はあらかじめ 　　Flashムービー上の任意の場所をクリックするなどして 　　Flashにフォーカスを当てておく必要があります。 　　(当たり前ですが， 　　例えばFlashを見ながらExcelを操作しているときに 　　キー操作をするとExcelの選択セルが移動するだけです。 　　Excelでなくブラウザであって同様。 　　ブラウザでなくSuzukaであっても同様。) > ●[parse error]とエラーが出る on(keyPress("a")){} や on(release){} など onハンドラ は フレームではなく，ボタンまたはスプライト(ムービークリップ)自体に書くスクリプトです。 > ●キーを押しても何も起こらない 書かれていらっしゃる if文 が実行されるのは， その if文 を書いたフレームの表示が開始される瞬間だけです。 普通はそのような瞬間を狙ってキーを押すことは不可能です。 したがって「フレームが表示された瞬間」ではなく 「キーを押した瞬間」に if文 を実行させるようにします。 ◎ その２ に関して これは今ひとつどうしたいのか意味がわかりません。 こう↓したいということでしょうか？ ---------------------------- this.stop(); buttonA.onPress=function(){ // どこまでも持続して動かさずフレーム11で停止 _root.gotoAndStop(11); }; ---------------------------- それともこう↓したいということでしょうか？ ---------------------------- this.stop(); buttonA.onPress=function(){ _root.gotoAndPlay(11); // buttonAのボタン機能を無効にする buttonA.enabled=false; }; ---------------------------- それともこう↓したいということでしょうか？ ---------------------------- this.stop(); buttonA.onPress=function(){ _root.gotoAndPlay(11); // buttonAのonPressイベントハンドラメソッドを削除 delete buttonA.onPress; }; ---------------------------- 　　↓deleteの参考URL↓ 「イベントハンドラメソッドはdeleteで消せ!」 http://f-site.org/articles/2004/05/22140833.html
myRectってのはcreate()の中のプライベート変数だから参照はできないという問題もある・・・というツッコミはおいといて。 create関数の戻り値が無いようなので、 public function create():Sprite{ var myRect:Sprite = new Sprite(); //略 return myRect } として、 create().y =100 とか、 var myRect:Sprite=create();myRect.y=100 とかでいかが？
>>2 getTimer()はintしか返さないんで req:URLRequest=new URLRequest("./xxx.xml?"+getTimer()); じゃなく req:URLRequest=new URLRequest("./xxx.xml?xx="+getTimer()); でないとURLリクエストエラーになると思うんですが、どうでしょう？
４です 追加です xx["xx"]とやった場合 型宣言もできないです ってことで var this["tf"+i:TexrField ↓ this["tf"+i] あと、先に言ってるひとがいますが 配列で作ったほうが、何個あるのかすぐ調べれるし for each()で巡回できるしなにかと便利と思います
so.addVariable('repeat','list'); こいつを追加することで解決するかと思います。 以下はサンプルコードです。 --------------------------------------------------------------- <script type='text/javascript' src='swfobject.js'></script> <div id='mediaspace'>This text will be replaced</div> <script type='text/javascript'> var so = new SWFObject('player.swf','mpl','470','320','9'); so.addParam('allowfullscreen','true'); so.addParam('allowscriptaccess','always'); so.addParam('wmode','opaque'); so.addVariable('file','http://content.longtailvideo.com/videos/flvplaye …); so.addVariable('playlist','bottom'); so.addVariable('autostart','true'); so.addVariable('repeat','list'); so.write('mediaspace'); </script>
再び１です ではもう一回ENTER_FRAME待つようにしてみます これでだめだったらちょっとわからないです addEventListener(Event.ENTER_FRAME,eventBuffer) function eventBuffer(e:Event):void{ _1mc.addEventListener(Event.ENTER_FRAME, x1EnterFrame); removeEventListener(Event.ENTER_FRAME,arguments.callee) } ↓ var wait=1 addEventListener(Event.ENTER_FRAME,eventBuffer) function eventBuffer(e:Event):void{ if(wait<0){ _1mc.addEventListener(Event.ENTER_FRAME, x1EnterFrame); removeEventListener(Event.ENTER_FRAME,arguments.callee) } wait-- } なんか無駄に長い・・・ もっと賢い方法がある気もします
実際に使った事ないんですが ButtonMC＝ボタンにするムービークリップインスタンス名 ButtonMC.addEventListener(MouseEvent.CLICK,onClickPageJump) function onClickPageJump(e:Event):void{ navigateToURL(new URLRequest("リンク先のURL")) } でいけると思います それでこっちはちょっと裏技的なやり方 蛇足ですが覚えておくといいことあるかも ButtonMC1.addEventListener(MouseEvent.CLICK,onClickPageJump("リンク先のURL1")) ButtonMC2.addEventListener(MouseEvent.CLICK,onClickPageJump("リンク先のURL2")) function onClickPageJump(arg:String):Function{ return function(e:Event):void{ navigateToURL(new URLRequest(arg)) } }
http://livedocs.adobe.com/flash/9.0/ActionScript … 未検証ですが、floodFillメソッドとか使えませんか？ #どっちの挙動になるか試した方がいいかも http://en.wikipedia.org/wiki/Flood_fill
> ソフトと本を買って独学でも結構使えるようになるのでしょうか？ 基本的に独学で "なければ" 結構使えるようになりません。 学校で習ったくらいでできるようでしたら誰でもプロになれます。 Illustrator でも同じでしょう。 学校で教わる（または教えられる）ことなど 誰でもが共通にするような基礎の基礎だけです。 まさか10年もIllustratorの学校に通う人はいませんよね。 Flash も同じです。 入り口として学校に通うのは場合によっては１つの方法かもしれません。 というかFlashができるようになるならないという意味ではなく， 学校に通うと，どこかに就職しやすいかもしれません。 その程度のメリットがあるくらいで， Flashを使えるようになるかどうかは学校で習うだけでは無理です。 独学で "なければ" 結構使えるようになりません。 そう言った意味， 書籍や情報が充実していて，Flashの標準仕様そのものである，Flash CS4 などが良いと思います。 他のソフトでもかまいませんが，書籍や情報が充実していませんから， もっと 本当の独学 をせざるを得ないでしょう。 --- --- --- ＃１の方の書かれていらっしゃるソフト「Suzuka」の補足ですが， Suzuka は Illustrator で描いた絵を SWF として書き出せば， その SWF を Flash 内で使う絵として使うことができます。 ですから ParaDraw を使う必要が殆どなくなるので， Illustrator 使いの方にとっては，かなり使いやすいソフトだと思います。 （Illustrator の技術が無駄にならない。） ただ Suzuka は Windows 限定ソフトでそれも XP以下 が望ましいです。 Illustrator使い の方は Mac を使われていることが多く，Suzukaは使えません。 そういう意味でも，やっぱり Flash CS4 でしょうね。。。 やはり Flash CS4 に勝てるソフトはないでしょう。
以前は無理でしたが、FlashPlayer10からサウンドデータを 直接編集できるようになりました。 下記を参考にしてみてください。 http://hakuhin.hp.infoseek.co.jp/main/as3/sound. …
マウスで触れるようなものにしたいのでない限り AfterEffectで作ってFLVにしてFLVPlayBackなどで 表示したほうがいいかと思います FlashでやるとするとAfterEffectでつくるような クオリティにはなかなかできませんし フィルタを何重にもかけるような ものになるのでとっても重いです AS3でやるとしたら大まかな流れとしては Sprite.graphicsで大元の線とか背景を描く BitmapDataを取得して applyFilterやdrawをいろいろ何度もくりかえす 何個もそういうBitmapDataを作って それをBlendいい感じに設定してdrawして合体 作ったBitmapDataをBitmapにいれてaddChild フレーム毎にBitmapのBitmapDataが 更新されるようにする、という感じ applyFilterで使うフィルターは主に BlurとColorMatrixFilter、DisplacementMapFilterになるかと思います DisplacementMapFilterはフォトショップの置き換えフィルタにあたります 多分これが一番活躍します AS3で扱えるフィルタというのは基本的に７つしかありません そしてこういうものを作るときに実質役に立つのは多分先の３つだけです 先の３つの内の後者２つとComvolutionフィルタは スクリプトでしか使えないフィルタなので 必然的にActionScriptを使う事になります BitmapDataを直接いじるような形でsetPixelとかするのもありですが 正直これをやるとかなり重いのでフィルタを中心に使う事になると思います それでも多分かなり重いです、Flashには荷が重い気がします 動かないパソコンが出てくると思われます 何らかそういう動画を先に作って読み込む形にした方がいいと思います
本で勉強するならサンプルが沢山ついているものが良いと思います。 本の解説は嘘（誤植や解説が足りないという意味。）も書いてる場合がありますから。
ronts05さん、 以下で行けるでしょう。 //ここから /*xmlファイル名を、url.xmlとしました <?xml version="1.0" encoding="UTF-8"?> <file> <visual> <gazou>./main/001.jpg</gazou> <thumb>./navi/thumb_001.png</thumb> <url>http://www.yahoo.co.jp/</url> </visual> <visual> <gazou>./main/002.jpg</gazou> <thumb>./navi/thumb_002.png</thumb> <url>http://www.google.co.jp/</url> </visual> <visual> <gazou>./main/003.jpg</gazou> <thumb>./navi/thumb_003.png</thumb> <url>http://okwave.jp/</url> </visual> <visual> <gazou>./main/004.jpg</gazou> <thumb>./navi/thumb_004.png</thumb> <url>./test.html</url> </visual> </file> */ import mx.xpath.XPathAPI;//XpathAPIをimportすると、分かり易いです //以下、各配列生成 this.createEmptyMovieClip("mc",_root.getNextHighestDepth());//最深度に、空のMovieClipを生成しておく var gazouList:Array = new Array(); var thumbList:Array = new Array(); var urlList:Array = new Array(); var _xml:XML = new XML(); _xml.ignoreWhite = true; _xml.onLoad = function(success:Boolean) { if (success) { var rootNode:XML = this.firstChild; gazouList = XPathAPI.selectNodeList(rootNode, "/file/visual/gazou/*"); thumbList = XPathAPI.selectNodeList(rootNode, "/file/visual/thumb/*"); urlList = XPathAPI.selectNodeList(rootNode, "/file/visual/url/*");//ここから、URLを抽出する trace(gazouList.length);//今回は、4となる for (var i:Number = 0; i<gazouList.length; i++) {//検証用 trace(gazouList[i]); trace(thumbList[i]); trace(urlList[i]); } for (var k:Number = 0; k<gazouList.length; k++) { _root["btn"+k].id = k;//別途btn0、btn1、btn2、btn3を配置しておき、kを、XX.idに保存し、 _root["btn"+k].onRelease = function():Void {//其々のボタンが押されたら、 _root.mc.loadMovie(gazouList[this.id]);//_root.mcにロードする。この時、thid.idで配列要素を取り出す }; } /*btn.onRelease = function():Void { makeButton(); };*/ } else { trace("error"); } }; _xml.load("url.xml"); //_xml.load("url.xml?"+getTimer());//ローカルではエラーとなりますが、サーバーアップ時は、ブラウザーのキャッシュ対策として、こっちを使用する、 /*動的に、ボタンを生成する場合は、以下のような例もあり得るでしょう function makeButton() { for (var i:Number = 0; i<gazouList.length; i++) { var btn:MovieClip = this.attachMovie("Btn", "btn"+i, i); btn._x = 40+90*i; btn._y = 400; btn._txt.text = String(i); btn.id = i;//iを、btnに動的に生成するプロパティ id に、保管しておく btn.onRelease = function():Void { //getURL(urlList[this.id], "_blank"); mc.loadMovie(gazouList[this.id]); trace(gazouList[this.id]); }; } } */ //ここまで
カテ違いかと。。。 少なくともプログラミングではないですね。 とりあえず、Flash Playerを最新版にアップデートしてはどうでしょう？ それか、IEでインターネットオプションから詳細を選択して「マイコンピュータのファイルでのアクティブコンテンツの実行を許可する」にチェックを入れていますか？
6969bさん、 これは、AS3.0 逆引きクイックリファレンスの記事ですね。 ステージ上にダイナミックテキスト「date」「weather」「comment」設置 → ダイナミックテキストにしてるでしょうか？ その上で、各ダイナミックテキストのインスタンス名を、以下のようにします。 date_txt、weather_txt、comment_txt
それはそうなりますよ。 「i」はグローバルで変動しますから。 　// この階層の変数 i をで 0～2 まで 1 ずつ加算してループ 　for(i=0; i<3; i++){ 　　　// _root にある a? ロールオーバー時の動作を定義 　　　_root["a"+i].onRollOver = function(){ 　　　　　// 変数 i を出力窓に出力 　　　　　trace(i); 　　　} 　} 　// この階層の変数 i を出力窓に出力 　trace(i); このように注釈行を入れれば結果(そうなる原因)がわかると思います。 この for文によって この階層(このタイムライン(このムービークリップ(_rootもムービークリップの一種))にある 変数 i の値が変動して動き， 結局 i は 3 になってループを抜けます。 この for は一瞬で実行されます。 そのずっと後，ユーザー(Flash閲覧者)が， _root.a0 や_root.a1 や _root.a2 にロールオーバーします。 そのとき， 変数 i は 3 なのですから， どの _root.a0 や_root.a1 や _root.a2 にロールオーバーしても， 出力結果は 3 になります。 解決方法です。 変数 i が共有でグローバルなものであるからダメなのです。 次のようにすれば良いでしょう。 -------------------------------------------------- // この階層の変数 i をで 0～2 まで 1 ずつ加算してループ for(i=0; i<3; i++){ // この階層の今現在の i の値を 各mc a? 内のローカル変数 n に代入 _root["a"+i].n = i; // _root にある a? ロールオーバー時の動作を定義 _root["a"+i].onRollOver = function(){ // このムービークリップ内の変数n を出力窓に出力 trace(this.n); } } --------------------------------------------------
> これは、根本的に無理な事をしようとしているのか、 > ちょっとした記述間違いなのか、教えて貰えたらありがたいです。 無理なことではないですが， どこかで引っかかることは多々多々あると思います。 ・HTMLに張り付いた状態のSWFをブラウザで閲覧していない ・ブラウザのJavaScriptを有効にしていない ・ローカルSWFからウェブ上のページにアクセスしようとしている ・ローカルSWFからローカルのページにアクセスしようとしている ・ブラウザにポップアップブロックをかけている 　などなど… などなど… 外部テキストが次のようなものであったします。 &data0=img/image01.gif,AAA.html,400,300& &data1=img/image02.gif,BBB.html,400,200& &data2=img/image03.gif,CCC.html,300,300& &data3=img/image04.gif,DDD.html,300,200& &data4=img/image05.gif,EEE.html,200,400& その場合， > _root.getURL(myLV["data"+rlis[0]].split(",")[1],"_blank"); と書かれていらっしゃる部分を _root.getURL("javascript:void(window.open('"+myLV["data"+rlis[0]].split(",")[1]+"','myWin','width="+myLV["data"+rlis[0]].split(",")[2]+",height="+myLV["data"+rlis[0]].split(",")[3]+"'))"); ↑のようにしたら，一応は動作しましたよ。 ただし， > lis = [1, 2, 3, 4, 5]; これはおかしくないですか？ lis = [0, 1, 2, 3, 4]; にしておかないとズレると思います。 また， > _root.onRelease = function() { これは有効にならないでしょう。 _root も MovieClip の一種ですが，ある程度は特別なもので， _root に直接 onRelease は設定できません。 onRelease の部分を onMouseUp に変更するとか， または _root に ボタン「btn」でも作成して _root.btn.onRelease = function() { のようにしないとならないと思います。 ☆ そして，最難関のブラウザです。 私の場合， IE8 では上のもので動作 "しません" でした。 http://blog.ishiro.com/?p=142 のようにグローバルセキュリティを変更しても， ポップアップブロックをはずしても， ローカルイントラネットのセキュリティを修正してもだめでした。 しかし FireFoxでは無事に動作しました。 おそらく IE 関係のセキュリティで， ローカルにあるSWFからはJavaScriptが実行できないのではないかと思います。 (ネット上のSWFから実行したJavaScriptは問題ありませんが。) JavaScriptを有効にして ポップアップブロックをはずして ネット上にアップしたファイルだと， おそらく動作すると思います。 １つでも欠けると動作しない可能性が大きいです。 それが，最初に書いた 「どこかで引っかかることは多々多々あると思います。」 の意味です。
書かれていらっしゃるものは、 結局、Z座標(奥行き)とういものはそもそもなくて、 X座標とY座標とでZ座標を生み出しているものです。 だから疑似3Dです。 そのZ座標(奥行き)度合いを生み出してる根元はY座標ですから、 X座標に対するY座標の扁平率を上げる(もっと扁平にする)ようにすれば良いと思います。 変更例です。 スクリプトの後半、 // 1フレーム進む時間ごとに毎回実行 this.onEnterFrame = function() { … } 内にある、 // 仮のx,y,z座標を算出 tmp_x = Math.cos(rad2)*rds; tmp_y = Math.sin(rad2)*rds/4; を、部分をもっと上から見る場合、 // 仮のx,y,z座標を算出 tmp_x = Math.cos(rad2)*rds; tmp_y = Math.sin(rad2)*rds/2; のように変えたり また、もっと下から見る場合、 // 仮のx,y,z座標を算出 tmp_x = Math.cos(rad2)*rds; tmp_y = Math.sin(rad2)*rds/10; などのように変えれば良いでしょう。 (/4 を /2 や /10 にしただけです。)
tentouxxさん、 tentouxxさん方式でも良いと思いますが、EnterFrameでフレームをカウントする方法ですと、精度が、あまり、良くないので、精度を求める時は、getTimer()を使うといいです。 //ここから this.onEnterFrame = function():Void { trace(getTimer()); if (getTimer()>5000) {//5秒を超えたら play(); this.onEnterFrame = null; } }; //ここまで
(1)では？ 目的は「仕事で使う」ですよね？ じゃあ職場で使用してる2.0を学習する事が最優先かと。 そういう意味でも(2)は却下。 また「プログラミングに慣れ、またコンテンツ制作の際に必要な考え方を学ぶ」 って意味なら2.0でもいいでしょうし。 (3)はおっしゃる通り無謀…というか、こんがらがるだけだと思います。 がんばってください。
＃１です。 ＃１を回答したあとしばらく考えていたのですが， > クリックしたままカーソルを移動させて > シンボルに触れたとき音を鳴らしたい これは『ひんと』と書かれたボタンをクリックするという意味でしょうか？ つまり， 　「『ひんと』と書かれたボタンをクリックした"後に"， 　　マウスカーソルを移動させて，そのマウスカーソルが 　 ムービークリップなどのインスタンスに触れたときに 　 音を鳴らしたい。」 という意味でしょうか？ もしそうであれば hitTest は要りませんよ。 ＃１同様， ☆(星形ムービークリップ) 内のフレームを２フレームにして， ボタンと同じように フレーム1 には最初に表示されている星の絵を置き， フレーム2 には回る星と音を配置します。 音は，ボタンと同じく，プロパティで同期を「イベント」に設定しておきます。 そういう ☆(星形ムービークリップ) を音の数だけ作ります。 そして☆をステージ上に配置し， それらにインスタンス名を付けます。 たとえば，３つの☆インスタンスをステージ上に配置し， それらに「star_mc0」「star_mc1」「star_mc2」というインスタンス名を付けます。 また， 『ひんと』と書かれたボタンには， 例えば「btn」というインスタンス名を付けます。 その場合， ３つの☆インスタンスとボタンが存在するメインのタイムラインには 次のようなActionScriptを書きます。 --------------------------------------------- // ☆の最終番号を登録 var star_last:Number = 2; // マウスがダウンしているかどうかのフラグの初期化 var down_flg:Boolean = false; // 「star_mc0」～「star_mc○」に関してのループ for (var i:Number = 0; i<=star_last; i++) { // 「star_mc?」 内ライムラインの再生を停止 _root["star_mc"+i].stop(); } // btnをクリックしたときの動作を定義 btn.onRelease = function():Void { // マウスがダウンしているかどうかのフラグをtrueにする down_flg = true; }; // 「star_mc0」～「star_mc○」に関してのループ for (var i:Number = 0; i<=star_last; i++) { // 「star_mc?」 にロールオーバーしたときの動作定義 _root["star_mc"+i].onRollOver = function():Void { // マウスがダウンしているかどうかのフラグがtrueのときのみ if (down_flg) { // 自分自身(star_mc?)をフレーム2で停止 this.gotoAndStop(2); } }; // 「star_mc?」 からロールアウトしたときと // 「star_mc?」 を外で放したときの動作定義 _root["star_mc"+i].onRollOut = _root["star_mc"+i].onReleaseOutside=function ():Void { // 自分自身(star_mc?)をフレーム1で停止 this.gotoAndStop(1); }; } --------------------------------------------- 以上です。 ＃１よりずっと簡単です。
やり方にもよりますが出来ますよ。 FlashもFlexもActionScript3を利用することに変わりないので。 また、表面上タイムラインはなくてもフレームイベントはあるのでEventListenerで管理すれば良いですし、 こういったグラフやマップならタイムラインでの管理よりもプログラム側での制御になると思うので問題なく表現できますよ。 ただしFlash用のアニメーション系ライブラリの利用を考えているなら、 Flexだととっつきにくいことがあるかもしれません。
失礼。訂正します。 記事】と12月の間にも全角スペース → 記事】と「は」の間にも全角スペース です。
gaet574さん、 １．・・・・・これだと配列が送れません。（可能ならFor文でループさせて送れるようにしたい） → 良く分からないので、回答は、他の方々に、お任せしますが、 ２．FlashからJSPにデータを送る方法もわからないのです。 → これは、以下のようにします。分かりやすい、AS2.0で記載してます。 -Flash側：第一フレームに記載 //ここから input_txt.text = "";//テキスト入力で、ロード時は、ブランク rcv_txt.text= "";//JSP処理結果を代入する、ダイナミックテキストで、ロード時は、ブランク var lv:LoadVars = new LoadVars();//LoadVarsオブジェクトを生成 lv.onLoad = function(success) { if (success) {//successなら、ダイナミックテキストrcv_txtに、JSPで生成された、外部テキスト相当のmessageを代入する rcv_txt.text = this.message; } else { rcv_txt.text= "読み込み失敗です！"; } }; btn.onRelease = function():Void {//ボタンクリックで、JSPへ送信し、処理結果を、受け取る lv.nameData = input_txt.text;//テキスト入力値を、変数　nameData　に代入し、 lv.sendAndLoad("./response.jsp?"+getTimer(),lv);//nameDataを、SWFと同一階層にある、response.jspに送信する。lvは、受信するオブジェクトでもある。+getTimer()は、ブラウザーのキャッシュ回避策 }; //ここまで JSPは使ったことないですが、某サイトを、訪問し、PHPやPerlと基本は同じだろうと、勝手に思い込んで、書いてますので、間違いがあるかも。JSPは、gaet574さんに、お任せします。 -JSP側：ファイル名　response.jsp <%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %> <html> <head> <title>FlashからのnameData処理</title> </head> <body> <% request.setCharacterEncoding("UTF-8");//Flashの内部コードは、UTF-8なので、とにかく、UTF-8としました String str = request.getParameter("nameData");//Flashから送付される変数　nameDataを取得 out.println("&message=" + str+"を受け取り&");//JSP側で、&message=strを受け取り&　と表示されると、Flashが表示できます %> </body> </html> でいかがでしょうか？
shinhaさん、 フレームアクションの最初の方に、以下を記載下さい。 mc.swapDepths(_root.getNextHighestDepth());//mcが、_rootでは、最深度となる 手動で、ステージに配置した、mcの深度は、レイヤーの順序やレイヤー内での重なり順などから、-16384 から順に深度が割り当てられます。 従って、いくら-1と設定しても、mcより、遥かかなたの深度にいますので、mcは、表面に出てこれません。
例えばですが、 方向キーを押すたびに、その時刻をnew Date()で記録して、 次回ボタンを押したときに、記録された時刻との差を計算する。 その差が指定ミリ秒以内なら、走る。 こんな感じ？ var preTime; onKeyDown = function(){ if(preTime){ var nowTime = new Date(); if(nowTime.getTime() - preTime.getTime() < 500) playerRun(); // 走る処理の実行 } preTime = nowTime; }; （AS2.0はやったことがないので、1.0のつもりで書いています。） 方向キー取得の方法によって、適した方法も変わってくると思いますが、 こんな感じでいいのではないでしょうか。
shotakaさん、 (1)表示させたイメージファイルをクリックして音を出す → 音がないので、検証してないですが、以下の例は、イメージをクリックすると、配列で定義した、サイトにリンクされる例です。キーは、イメージをクリックした際に、そのイメージが保有してる番号を取得できるかどうかです。それさえ取得できれば、外部サイトへのリンクであろうと、音であろうと、自由に出来るはずです。 //ここから var max:uint=4;//400×300を、120×90に縮小して、4枚読み込むケース //音の変わりに、著名サイトのURLを使って、配列を作っておき、 var url:Array=["http://yahoo.co.jp","http://google.com/","http:/ …]; function Display(n:uint) {//カスタム関数化 for (var i:uint=0; i<max; i++) { var mc:MovieClip=new MovieClip();//loaderを包む、dyamic クラスのMovieClipを生成しておく addChild(mc); mc.id=i;//iをmcに動的に追加したプロパティであるidに、保存しておき、mcがクリックされた時に、このidを使う mc.buttonMode=true; mc.mouseChildren=false;//包まれたloaderが、マウスに反応しないようじしておく if (i<2) {//横２枚、縦２枚の適当な位置に、mcを配置する mc.x=67+173*i;//数値は、ステージサイズに応じて、適当に決める mc.y=53; } else { mc.x=67+173*(i-2); mc.y=180; } var loader:Loader=new Loader(); mc.addChild(loader);//mcで、loaderを包む loader.contentLoaderInfo.addEventListener(Event.INIT,xInit,false,0,true);//縮小してるので、記載、なければ、不要 loader.load(new URLRequest("../../fotos"+n+"/"+i+".jpg"));//引数nで、フォルダー名を指定する mc.addEventListener(MouseEvent.CLICK,mClick,false,0,true);//ｍｃがクリックされたら、 } } function xInit(e:Event):void {//原寸400×300を120×90に縮小してるので、縮小がなければ、不要 e.target.content.scaleX=0.3; e.target.content.scaleY=0.3; } function mClick(e:MouseEvent):void { trace(e.target.id);//クリックされたmcのiが復元される var req:URLRequest=new URLRequest(url[e.target.id]);//mc.id番目の配列を採取し、 navigateToURL(req,"_blank");//リンク } a_btn.addEventListener(MouseEvent.CLICK,aClick,false,0,true); b_btn.addEventListener(MouseEvent.CLICK,bClick,false,0,true); function aClick(e:MouseEvent):void { Display(0);//fotos0の0を引数に、カスタム関数を呼び出す } function bClick(e:MouseEvent):void { Display(1);//fotos1の1を引数に、カスタム関数を呼び出す } //ここまで (2)読みこむファイルが増えていくので更新を楽にするために、外部XMLからよみこみ。 → なんとも言えないです。理由は、XMLで何を定義されようとしてるのか分からないからです。ファイルが、単に増えるだけなら、フォルダー0、フォルダー1、フォルダー2・・・と増やして、それに見合う、ボタンを増やせばいい訳ですから、XMLで出来ると思いますし、これだけなら、XML使わずに、外部テキストで、数だけ、指定してやれば、事足りうような気もします。 やはり、how toの前に、whatを決めることが、肝要ではないでしょうか。
ご参考に↓ ・GAC なぜなにGAC-ActionScript 「 [22402] ActionScript2.0 mc再生について」 http://gac.kir.jp/19/22402
試してないですが、下のサイトはどうでしょうか？ 参考URL：http://d.hatena.ne.jp/otoyasumi/20080621/1214077 …
ちょっと、違うようですが、下のサイトは参考になるのでは？ 8/AS2.0で記載した、FLAもダウンロード出来るようです。 参考URL：http://www.ffiles.com/flash/photo_galleries/itun …
そのロードのフレームになにかあるはずです。 0～100%まで　ロードの進行を表示するスクリプトの最後に Cへ行く記述があるはずです。 まず、ロードを表記するスクリプトを探しましょう。 そのロード画面のアイテムを一つずつクリックしたらどうでしょう？ スクリプトが表示されていたエリアに、出てきませんか？ 自分はかじった程度なので　joy_28　さんの方が詳しいと思うのですが・・・ joy_28　さーん（笑
まず３行目に次のように書かれていらっしゃいますよね。 > this.onRollOver = function() これで，そのスクリプトを書いたムービークリップに ボタン系の on○○イベントハンドラメソッド が定義されます。 そして10行目にに次のように書かれていらっしゃいますよね。 > this["child_mc"].onRelease = function() これで，そのスクリプトを書いたムービークリップ内にある「child_mc」というインスタンス名のムービークリップに ボタン系の on○○イベントハンドラメソッド が定義されます。 ActionScript 2.0 以下では，ボタン機能は入れ子にできないんですよ。 ボタン系の on○○イベントハンドラメソッド，または on(○○) イベントハンドラ は，上下や内外に重ねられないということです。 もし，重ねた場合，上のボタンが優先になります。 ムービークリップは一種の箱のようなものですから， 箱自体がボタンであるような箱の中にボタンは入れられない， 入れても先に箱を押してしまうので，中のボタンにまで手が届かないという感じです。 ボタン機能を上下に(内外に)重ねる場合は， 一般的には，片方のムービークリップに hitTest を使います。 「onハンドラを使わずにロールオーバー/ロールアウトを検出する」 http://fumiononaka.com/TechNotes/Flash/FN0308001 … --------------------------------- 最近 Flash を始められた方であれば区別が付きにくいと思うのですが， ムービークリップの on○○イベントハンドラメソッド には大きく分けて２種類のものがあるのです。 １つは Flash 4 以前からあるボタン由来の on○○イベントハンドラメソッド で， もう１つは Flash 5 以降に登場したムービークリップ由来の on○○イベントハンドラメソッド です。 「ムービークリップのイベントハンドラ」 http://homepage3.nifty.com/ginga-b/MX/mc_eventha … ボタン系の on○○イベントハンドラメソッド，または on(○○) イベントハンドラ は，上下に重ねられませんが， ムービークリップ系 on○○イベントハンドラメソッド，または onClipEvent(○○) イベントハンドラ は， マウスでそのもの自体をクリックするとかしないとか関係ないので，上下に重ねられます。
オリジナルのスキンを１から自作するのであれば、 自分で全部作っちゃうのもありかと。 http://hakuhin.hp.infoseek.co.jp/main/as/import. … が役立ちます。AS2.0です。 サンプルもあるのでやりやすいかと。 flvのパスをHTMLで指定とのことですが 個人的にはXMLにした方がよいかと思います。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as/import. …
> どこか間違っているとしたら指摘してほしいです。 と書かれましても何がしたいのかがよくわからないので， どこをどう直せばいいのかよくわかりません。 特にわからないのは root.moveTo (SimpleWebNote1[i], SimpleWebNote2[i]); _root.lineTo (SimpleWebNote3[i], SimpleWebNote4[i]); この部分の， SimpleWebNote2 や SimpleWebNote3 や SimpleWebNote4 の突然の出没です。 どこから出てきて，何がしたいのか？？？ ◎ ファイル構造が次のようになっているとします。 　　任意のフォルダ 　　　　　├○○.html (○○.swf を表示) 　　　　　├○○.swf (話題の本題のFlash) 　　　　　└SimpleWebNote1.txt ◎ SimpleWebNote1.txt 内のデータが次のようになっているとします。 xb_old=200,50,100,350,350,150,50,150,300,350,200,50 ◎ Flash のスクリプト例 -1- -------------------------------------------- load_obj = new LoadVars(); load_obj.load("SimpleWebNote1.txt"); load_obj.onLoad = function() { str = load_obj.xb_old; SimpleWebNote1 = str.split(","); for (var i = 0; i<=9; i += 2) { _root.lineStyle(3, 0x000000, 100); _root.moveTo(SimpleWebNote1[i], SimpleWebNote1[i+1]); _root.lineTo(SimpleWebNote1[i+2], SimpleWebNote1[i+3]); } }; -------------------------------------------- ◎ Flash のスクリプト例 -2- -------------------------------------------- load_obj = new LoadVars(); load_obj.load("SimpleWebNote1.txt"); load_obj.onLoad = function() { str = load_obj.xb_old; SimpleWebNote1 = str.split(","); // ↓ユーザ定義関数drawLineを実行 drawLine(); }; // ↓ユーザ定義関数drawLineの定義 function drawLine(){ for (var i = 0; i<=9; i += 2) { _root.lineStyle(3, 0x000000, 100); _root.moveTo(SimpleWebNote1[i], SimpleWebNote1[i+1]); _root.lineTo(SimpleWebNote1[i+2], SimpleWebNote1[i+3]); } } -------------------------------------------- 少なくともご質問で書かれていらっしゃる， > str = load_obj(bx_old); これは間違っていると思います。 上記１行を直訳すると 「変数strに，ユーザー定義関数load_objを引数bx_oldで実行した戻り値を代入。」 のようになります。 つまり，「何ソレ？」状態です。
1.<iframe src="xxx.html"></iframe>を包むLayerを、visibleもしくは、hiddenにするjavascriptを、<head></head>の間に記載し、 ２．SWFのボタンで、getURL();か（8以降なら）ExternalInterface.call("");を使って、該当javascriptを呼び出せば、<iframe></iframe>を包むLayerの表示、非表示位は出来ると思いますが、全て、SWFからという方法は、私は、知りません。
あとは、デジタルサイネージというのが、最近流行っているようですが、 こちらも調べてみると何かわかるかもしれません。
もう解決されてるかもしれませんが一応。 つまり シーン１┬ムービークリップA─（ラベル1） 　　　　└ボタン という状態で、 ボタンからムービークリップAのフレームをラベル１へジャンプしたいと。 だとしたら、ボタンには on (release) { this.A.gotoAndStop("ラベル1"); } と記述します。 適当にthisや_parentを入れて、動いたらOK的なやり方ではなく、 ちゃんと理解して使うようにしましょう。 現段階ではこう捉えてください。 thisは、ActionScriptを書いた場所を差します。 _parentは、ActionScriptを書いた一階層下の場所を差します。 ボタンはそれ自体にタイムラインを持たないので、 階層としてカウントしません。つまりシーン１上のオブジェクトなので、 ボタンでthisと記述した場合、それはシーン１を差します。 例えばボタンがムービークリップBだった場合 シーン１┬ムービークリップA─（ラベル1） 　　　　└ムービークリップB ムービークリップBからムービークリップAのフレームをラベル1にジャンプするには、 on (release) { this._parent.A.gotoAndStop("ラベル1"); } とムービークリップBに記述します。
TEXTFIELD.mouseEnabled = false; でOKです。
Flash Liteなどに限らず、全て(?)の言語で、小数の計算には誤差が生じます。 これは、パソコンが10進法ではなく2進法で扱っているためです。 必ず整数だという確信のある計算は、おっしゃるとおり、四捨五入かなんかしたほうが無難だと思います。 他の対策は、参考URLを見てください。 参考URL：http://scriptstesting.org/syosu/index.htm
私も、Flash Liteは使ったことありませんね…（汗 ただ、今調べてみたところ、配列は使えないようです。 http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … あと、文字列の結合には、add演算子を使うようです。 http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … 頑張ってください。
ボタンメニューなどの下のレイヤーにムービークリップを作成して， そのムービークリップに外部画像をロードすれば良いだけでしょう。 　レイヤー　・・・|○| ←ActionScript 　レイヤー　・・・|●| ←ボタンメニューなど 　レイヤー　・・・|●| ←ステージの左上コーナーに空のムービークリップを置く 下レイヤーのステージの左上コーナーに置いた空のムービークリップに， 例えば 「loaderMC」 というインスタンス名を付けたとします。 そして， その 「loaderMC」 に 「AAA.jpg」 をロードするとします。 ActionScript1.0 ＆ 2.0 で Flash Player 5 以上用SWFを作成する場合のスクリプト。 　↓↓↓ loaderMC.loadMovie("AAA.jpg"); ActionScript 3.0 で Flash Player 9 以上用SWFを作成する場合のスクリプト。 　↓↓↓ var myLD:Loader = new Loader(); myLD.load(new URLRequest("AAA.jpg")); loaderMC.addChild(myLD); とにかく， ムービークリップをメニューより上のレイヤーに作る下のレイヤーに作るか， または ムービークリップをActionScriptで作って深度をコントロールするかだけの違いで， 何にしてもすることは同じでしょう。
smiabさん、 １．そのflash部分だけがクローラーに無視され、他は問題なくすべて読み込まれるのでしょうか? → そうです。 ２．Flahにメタデータを埋め込むこともできます。 「修正メニュー」＞「ドキュメント」＞「タイトル」や「説明」に記載し、パブりッシュすると、検索メタデータが、<rdf></rdf>形式で、SWFに埋め込まれます。 内容を見たい時は、パブりッシュ時に、「サイズレポートの作成」のチェックボックスに、チェックをいれます。
setTextFormatの代わりにsetNewTextFormatを使ってみてはどうでしょう？
※ParaFla!使用経験有り、Suzukaの使い勝手は知りません。 以前の質問も見ました。Javaとかをご存知とのことでAS3.0をお勧めしようかと思っていたら締め切られちゃいました。 本題。 マウスオンのエフェクトを甚だ豪華にしないのであれば、画像を切り抜く必要はありません。 （部分的な拡大、縮小は視野に入っていません） 画像は画像で表示しておき、マウス当たり判定用のムービークリップを別当用意することで実現できます。 手順（私なりのやり方） ・ParaDrawにて、下絵に素材の画像を表示しつつ、目的の部分にあわせ、輪郭を作る。 （[自由曲線の描画]で、例えば左心室のみの輪郭をなぞっていく＆微調整） ・パスを閉じる　の後、何でもいいので何色かで塗り潰す。 ・カラーパレット左下の[不透明度]の設定で、塗り潰しを0にする。 （何も表示されなくなるが、描画領域は残り、あたり判定が完成） ・必要に応じて、マウスオンのときのエフェクトも用意しておく。 （サンプルを見ると、水色の縁取りが成されていますね） ・Suzukaで、サンプルの「ミトコンドリアボタン（スプライト製ボタン）」にあたる部分を変更。 　フレーム１：当たり判定用に作成したpdrファイル 　フレーム２：必要に応じてエフェクト なんうまく伝わりそうに無い気がします・・・ 他にいい手段があったときのため、画像だけ先に全部作る、という徒労は避けてください。
改めて、見ましたら、きちんと表示されてましたね。解決ですね。
> 4と6の真ん中の穴の部分が連続したアニメになってくれません。 なりませんよ。穴の数が違うのですから。 ホモロジーが違うという状態です。 「ホモロジー同値」 http://www.google.co.jp/search?hl=ja&source=hp&q … 「５」の一部分を細い線(極細線を塗りに変換するなどして)でつないで「６」と同値にするとか， 「４」と「６」の一部を切って「５」と同値にするとかした上で， 「シェイプヒント」を使ってスムーズに動かすようにします。 例えばです（あくまでもたとえばです）。 http://www2.oninet.ne.jp/nonosasa/5/ 上記ページで Five が Fight に変わってそのあと， Fight の 「i」 が 「人間の形」に変化するわけですが， 「i」 と 「人間の形」 は塗りの個数が 「1」→「2」 で違います。 こういう場所はシェイプヒントだけで頑張ってもどうにもならないので， 「i」の「上の点」と「下の棒」とをあらかじめ細い線でつないでいます。 そすることによって 塗りの個数を「1」→「1」で変化ナシにしています。 穴の数も同様です。
movamogaさん、 外部JPGの読み込む数（xmlのtotalに相当）によって、空のMovieClipを生成し、それに、外部JPGを読み込み、2枚半位を表示して、自作のスクローラ（コンポーネントは、あまり、使ったことがないので）、垂直にスクロールするサンプルを作ってみました。 コメントをできるだけ、記載して、おきましたので、サンプルを参照下さい。 尚、数が少なくても、スクローラーを非表示にはしてませんが、ロジックが分かれば、MovieClip._visible辺り使えば、出来るかと思います。研究してみて下さい。 参考URL：http://homepage2.nifty.com/joys/answers/scroller …
> Flashのフリーソフトを探していたらsuzukaというのがあったので使ってみたのですが > 使い方がわららなく製作時間中に使い方をいろいろ調べました。 　　＆(アンド) > 人体図を描き、臓器を描いてカーソルを当てると臓器の仕組み、 > どんなホルモンを分泌しどのような臓器を標的器官として、どのようにフィードバックするか、 > どのような障害が発生するかなどを詳しく調べれるようなシステム？ この２点からでしたら、 簡単には（入り口には）次のようなページとかが良いように思います。 「Suzuka 基礎・基本 ナビゲーションボード(Flash案内板)」 http://suzupara.iinaa.net/kiso161.html ↑マウスカーソルを各細胞器官に乗せると簡単な説明が出て来ますが さらに詳細な事項に進めたい場合は クリックで別ページに進めるとか↓ 「Suzuka 基礎・基本 getURL」 http://suzupara.iinaa.net/kiso081.html または， 外部JPEGや他のムービーをFlash内にロード表示させるとか↓ 「Suzuka 基礎・基本 MovieClip.loadMovieメソッド」 http://suzupara.iinaa.net/kiso221.html どんどん可能性は広がります。 > もしFlashがだめならVisual studio 2005で作る それで作るのはローカルアプリケーションではないでしょうか？ 「ネットで動作させる」のか「ローカルで動作させる」のか， その辺をまず固めないと何とも進めませんよ。 だれが　どこで　どのように　使うのかです。
> ActionScriptよりのムービークリップ配置ではなくじかにタイムライン上に配置することが問題なのでしょうか・・・ それは問題ではありません． TypeError: Error #1009: このエラーはまだ、または既に参照できない オブジェクト（のプロパティまたはメソッド）に アクセスしようとしたときに起こります．（そのままですが…） メインタイムライン1フレーム目にご質問のASを書いておられますが、 loader_mc main_mc galleryback_mc（サイズ変更） back_mc（サイズ変更） 配置されているという以上のオブジェクトのうち、 いずれかが当該フレームではまだ登場していないのでは、と思います、 （ex.3フレーム目に配置）違っていたらすみません． もし上記のようなミスだった場合は以下を試してみてください． 最小限の修正で、且つ1フレーム目より後に オブジェクトを登場させたい場合は、 後で登場させるオブジェクト内1フレーム目に 以下のスクリプトを書きます． ここでは例としてmain_mcを後から登場させるものとします． //////////メインタイムライン 1フレーム目スクリプト修正 //ローカル変数としてではなくタイムライン変数として保持 var sw:int = stage.stageWidth; var sh:int = stage.stageHeight; // MC を整列させる関数 arrangeMC を定義 function arrangeMC():void{ sw = stage.stageWidth;//新しいステージ幅を取得 sh = stage.stageHeight;//新しいステージ高を取得 loader_mc.x = sw/2; loader_mc.y = sh/2; //main_mc.x = sw/2;←■削除 //main_mc.y = sh/2;←■削除 //main_mc.x = sw/2;//←■削除 ～～ （以下同） ---------------------------- //////////main_mc内 //リサイズ用リスナーをステージのリサイズイベントに登録 stage.addEventListener(Event.RESIZE, mainResize); //リサイズ用リスナー関数 //通常の関数として呼び出せるようイベントオブジェクトに //デフォルト値（null）を設定 function mainResize(e:Event = null):void { this.x = MovieClip(root).sw/2; this.y = MovieClip(root).sh/2; } //初回登場時に（通常の関数として）実行 mainResize();
yurariさん、 英語ですが、以下のサイトが懇切丁寧です。 ＊「Flash　Smoke」でGoogle検索しただけで、こういうサイトを見つけることができますので、日本語に限定せず、海外サイトにも、足をのばすといいと思います。 参考URL：http://www.pixelhivedesign.com/tutorials/Realist …
ネットスケープを使っている人なんて居ないから大丈夫と言いたい 全てのブラウザに合わせる事がそれを専門職としている人でも面倒な事なので対応ブラウザを限って制作する所が殆どなのです IEやFirefox対応というところはあるが、今時ネスケなんてサイト見た事ねーけどな
hinarueさん、 組み合わせがいくつあって、少し、混乱するかもしれないですが、trace();で丹念に、調べることです。 //以下、1.html、12.html、13.html、123.html、132.htmlの5枚用意 //ここから var strLink:String = "1"; var strA:String = ""; var strB:String = ""; var a:Boolean = false; var b:Boolean = false; a_mc.onRelease = function():Void { a = !a;//aがfalseなら、trueに、trueなら、falseに変化する trace(a); if (a) {//trueなら、 this.nextFrame();//第二フレームに移動、停止し、選択状態を表示 strA = "2"; strLink += strA;//文字列　12もしくは、123を生成 } else {//falseなら、 this.prevFrame();//第一フレームに戻り、非選択状態を表示 if (b) {//bがtrueなら、 strLink = "13";//b_mcが選択された状態なので、"13" } else {//falseなら、b_mcは非選択状態なので、"1" strLink = "1"; } } trace("ボタンAによるLink先："+strLink); }; b_mc.onRelease = function():Void { b = !b; if (b) { this.nextFrame(); strB = "3"; strLink += strB;//文字列13もしくは、132を生成 } else { this.prevFrame(); if (a) { strLink = "12"; } else { strLink = "1"; } } trace("ボタンBによるLink先："+strLink); }; link_mc.onRelease = function():Void { trace("最終的なLink先："+strLink);//1、12、13、123、132 getURL("./"+strLink+".html"); }; clear_mc.onRelease = function():Void {//初期値に戻す a = b=false; a_mc.prevFrame(); b_mc.prevFrame(); strLink = "1"; strA = ""; strB = ""; }; //ここまで となります。
tkmkokさん、 私なら、以下の記事辺りから、紐解くことになると思います。 ご参考までに。 参考URL：http://oshiete1.goo.ne.jp/qa5437890.html
「はじめてのActionScript3.0」のサンプルコードの使用に関して、 「本書や本書のサンプルコードを引用して質問に答える場合、許可を求める必要はありません」と記載されてましたので、PHPのコードを記載します。 -ファイル名：savejpg.php <?php if (isset($GLOBALS["HTTP_RAW_POST_DATA"])) { $jpg = $GLOBALS["HTTP_RAW_POST_DATA"]; $img = $_GET['img']; header('Content-Type: image/jpg'); header("Content-Disposition: attachment; filename=".$img); print $jpg; } else { print 'Encoded JPG information not received.'; } です。
大筋は ＃１～３ の方のおっしゃる通りですが， ParaFla! の場合に限っては次のような感じにしないとならないようです。 「質問ページ-126 - ParaFla! Wiki」 http://www.wikihouse.com/ParaFla/index.php?%BC%C … onClipEvent() ハンドラ内では function ○○(){}　は使えません this.○○=function(){} 形式でなければならないようです。
第二フレームの //初期設定領域 var num:Number = 1;//現在表示されているjpgの番号、初期値は、1 for (var i:Number = 1; i<=Max; i++) { var mc:MovieClip=this.createEmptyMovieClip("mc"+i,Max+1-i);//空のMovieClipをMax枚生成し、深度を其々、mc1→Max、mc2→Max-1、と減算していく mc._y=50;//"mc"+i をmcで参照させましたので、このmcのX座標、Y座標をこのように記載します。記載しなければ、0,0の位置となります。 //trace(_root["mc"+i]+"の深度は、"+_root["mc"+i].getDepth()); } //～以下は省略
piroriroriさん、 面白いですね。 自分のFLAをチェックしてみました。 １．外部JPGを読み込み、Timerクラスで、自動的に変更、且つ、ボタンでも変更可能なモノ:12Mbytes ２．pv3Dを使って、6枚のJPGを読み込み、Cubic表示、回転させるもの：13Mbytes ３．SharedObjectを使って、一日一回おみくじ：10Mbytes 程度でしたが、凝ったものでないので、参考になるかどうかは、分かりませんが。
どの程度のflashムービーなのでしょうか？ 私はフリーソフトparaflaで簡単なflash動画を作っていますが、自作のflashファイルやＤＬして保存してあったswfファイルをフリーソフトのSwf2Aviを使って、Aviファイルに変換しています。 http://www.avi-swf-convert.com/ Swf2Aviは基本的には英語ですが、swfファイルをドラック＆ドロップしてコンバートするだけで、Aviファイルに変換してくれるので、重宝しています。 フリーソフトですが、今まで変換エラーの経験はありません。 Swf2Aviで作成したAviファイルから、更に他のフリーソフトを使い、ＷＭＰで観賞用mpeg2やテレビでも見られるようＤＶＤにしてみましたが、mpeg2のレートに因るでしょうが、問題なく利用できています。 参考URL：http://www.avi-swf-convert.com/
RRHHさん、 htmlのタグを読めるようにします。 -外部 mess.txt; &mess=あああああああ<br>いいいいいい<br>うううううう& -FLA側； _txt.html=true;//インスタンス名 _txtというダイナミックテキストが、タグを解釈できるようにします。（変数は、使わないようにします） var lv:LoadVars = new LoadVars(); lv.onLoad = function(success:Boolean) { if (success) { _txt.htmlText = this.mess;//lvの変数messの内容を、_txt.htmlTextに、代入する } else { _txt.htmlText = "読み込み失敗です！"; } }; lv.load("mess.txt"); //lv.load("mess.txt?"+getTimer());//サーバーアップ時は、ブラザーのキャッシュ回避策として、こちらを使用、ローカルでは、エラー
yuki356さん、 知りえる範囲では、残念ながら、ないです。 やはり、一からAS3.0の文法を勉強して、組み替える必要があります。 また、その方が、応用が効きますので、一つ、tryしてみたらいかがでしょうか？
anzunyaさん、 Mx2004以上で実装されている、MovieClipLoaderクラスを使ったらどうでしょうか？ -top.flaの第一フレームに、以下を記載 //ここから var mcl:MovieClipLoader=new MovieClipLoader(); var listener:Object=new Object(); listener.onLoadInit=function():Void{//bgm.swfの第一フレームの読み込み完了したなら、下を始動させる navi.loadMovie("navi.swf"); logo.loadMovie("logo.swf"); } mcl.addListener(listener); mcl.loadClip("bgm.swf",bgmplayer); //ここまで
サイト：http://just1factory.kir.jp/dev/ を開き、swfが埋め込まれている（であろう）箇所を 右クリックすると、flashプレイヤーのコンテクストメニューが 表示されます．つまりswfは表示されています． swfを置いてあるディレクトリは"fla/ImageGallery.swf"で、 このswfで外部画像の読み込みをされていますが、 xml上で外部画像に対しswfの位置からの相対指定 （img/画像名.jpg）がされています． htmlに埋め込んだswfから外部画像を読み込むのであれば、 ImageGallery.swfが埋め込まれたhtmlからの相対指定 （fla/img/画像.jpg）を指定しなくてはいけません． xmlを上記の通り書き直して見てください． また、xmlファイルを読み込む際のURL指定も同様です． 上記修正を行うと、今度はswf単体で見た場合 正しく表示されなくなります． こういうややこしさを回避する方法として、 htmlとswfを同ディレクトリに置く前提で 制作されるとhtmlからの相対指定＝swfからの相対指定となり、 楽ではあります．
tkmkokさん、 以下でいけるでしょう。 //ここから var max:uint=3;//クラスから生成するbtnの数 var _array:Array=["0番目の要素","１番目の要素","２番目の要素"]; for (var i:uint=0; i<max; i++) { var btn:Btn=new Btn();//クラス名　Btn(MovieClipで生成前提）からインスタンス生成 addChild(btn); btn.num=i;//iをbtnに動的に追加したproperty　num に保管 btn.buttonMode=true; btn._txt.mouseEnabled=false;//btnに入れ子にしたダイナミックテキスト　_txtをマウスに反応させない btn._txt.text=String(i); btn.x=100+100*i; btn.y=50; btn.addEventListener(MouseEvent.CLICK,xClick,false,0,true); } function xClick(e:MouseEvent):void { trace(_array[e.target.num]); } //ここまで
第二フレームに配置するPNGは、 凸ではなく、凹でした。 記載ミスです。
失礼。 btn2しか、効果がないのではと思います。
anzunyaさん、 簡単なAS2.0で説明します。 -外部mess.txtに、例えば、以下のように記載: &mess1=1番目のmess& &mess2=2番目のメッセージです& &mess3=3番目のメッセージと意見です。& &kazu=3& -FLA側の記載内容:第一フレームのscriptレイヤーに記載 //ここから //初期設置領域 var max:Number;//メッセージの数の変数定義 _txt.text = "";//インスタンス名　_txtのダイナミックテキストのロード時の初期値は、ブランク var mess_array:Array = new Array();//配列定義 //System.useCodepage = true;//mess.txtのコードが、UTF-8で記載されてない場合は、これが必要、されていれば、不要 //LoadVarsクラスの設置領域 var lv:LoadVars = new LoadVars(); lv.onLoad = function():Void { mess_array[0] = "";//要素番号0は、以下のfor文では、定義されないので、ここで、ブランクで定義しておく→なくてもいいですが、気持悪い場合は、こうする max = Number(this.kazu);//文字列の数値化 for (var i:Number = 1; i<=max; i++) { mess_array[i] = this["mess"+i];//配列に、外部mess.txtの変数の中身を格納する } pickUp();//外部mess.txtの読み込みが終了したなら、下のカスタム関数を始動させる }; lv.load("mess.txt"); //lv.load("mess.txt?"+getTimer());//サーバーアップ時は、ブラウザーのキャッシュ対策として、こちらを使用する。ローカルでは、エラー発生 function pickUp() {//ごちゃごちゃするので、このように、カスタム関数化して、外出しにしておくといいでしょう。 btn1.onRelease = function():Void { _txt.text = mess_array[1];//配列要素番号の１番（→この場合は、"1番目のmess")を抽出して、_txt.textに代入 }; btn2.onRelease = function():Void { _txt.text = mess_array[2]; }; btn3.onRelease = function():Void { _txt.text = mess_array[3]; }; /*今回は、ボタンが3つですが、多くなった場合は、以下のように、for文を使うほうが良いです for (var i:Number = 1; i<=max; i++) { this["btn"+i].id = i;//iを、動的に生成したプロパティ　id に保管 this["btn"+i].onRelease = function():Void { _txt.text = mess_array[this.id];//this.idで配列要素を抽出 }; } */ } //ここまで 以上で、ボタンを押す都度、該当メッセージが表示されます。
この辺はいかがでしょうか。 「雪が降るスクリプトについて」 http://okwave.jp/qa1835975.html
まず、Left Center Rightそれぞれのボタンに押されたかどうかの flagを用意します。 falseが停止状態。 //-------_rootに記述 var LL_BtnFlag = false; var LC_BtnFlag = false; var LR_BtnFlag = false; var LL_Pattern = ""; var LC_Pattern = ""; var LR_Pattern = ""; ・リールが回り始めたら、flagをtrueにします。 //-------startボタンに記述 _root.LL_BtnFlag = true; _root.LC_BtnFlag = true; _root.LR_BtnFlag = true; ・ボタンが押されたら、flagをfalseにしていく。 //-------左ボタンに記述 on (release) { _root.LL_BtnFlag = false; _root.LL_Pattern = "7";//←止まった絵柄を記入 _root.judge(); } //-------中ボタンに記述 on (release) { _root.LC_BtnFlag = false; _root.LC_Pattern = "7";//←止まった絵柄を記入 _root.judge(); } //-------右ボタンに記述 on (release) { _root.LR_BtnFlag = false; _root.LR_Pattern = "7";//←止まった絵柄を記入 _root.judge(); } //-------_rootに記述 function judge(){ if(_root.LL_BtnFlag ==false && _root.LC_BtnFlag ==false && _root.LR_BtnFlag ==false){ リールが全部止まってるか確認する if( _root.LL_Pattern == "7" && _root.LC_Pattern == "7" && _root.LR_Pattern == "7"){ リールの絵柄(数字)が7か確認する getURL("xxx.html");//URL先へジャンプする。 } } }
tkmkokさん、 PHP側で、urlencode();を行って、変数を、SWF側に、引き渡してやる必要があります。以下、シンプルなテスト結果です。（phpも、UTF-8で記載してます） -PHP側： <?php $str1='あいうえお&trade;'; $str2='あいうえお™'; $str1=urlencode($str1); $str2=urlencode($str2); print 'm1='.$str1.'&'.'m2='.$str2;//Flash側で、urldecode();をしてくれるはず。 -FLA側の第一フレームscriptレイヤー： //ダイナミックテキストを2つ(m1_txtとm2_txtの２つ）設置しておく //定番の外部ファイルから変数をロードする方法 //ここから var loader:URLLoader=new URLLoader(); loader.dataFormat=URLLoaderDataFormat.VARIABLES; loader.addEventListener(Event.COMPLETE,xComplete,false,0,true); loader.load(new URLRequest("./special.php"));//PHPのファイル名を、special.phpとした function xComplete(e:Event):void { loader.removeEventListener(Event.COMPLETE,xComplete);//不要なので、一応、登録削除 var vars:URLVariables=e.target.data; m1_txt.text=vars.m1;//PHP側で定義した、変数m1=XXXXを代入 m2_txt.text=vars.m2;//同様に、変数m2=XXXXを代入 } //ここまで 以上で、意図した内容で、表示されます。
amane123さん、 あまり、自信がないのですが、pv3D（Papervision3D 2.0.0)に内蔵されているDocの中には、 ・focus:Number (default = 500) This value is a positive number representing the distance of the observer from the front clipping plane, which is the closest any object can be to the camera. Use it in conjunction with zoom. ・zoom:Number (default = 3) This value specifies the scale at which the 3D objects are rendered. Higher values magnify the scene, compressing distance. Use it in conjunction with focus. と記載されてますが、実際に、６枚のJPGで６面のCubicを作り、このパラメータを弄った結果からの、憶測です。 １．focus:外部JPGのピクセルサイズを変更して、縮拡大を行うように思われます。 ２．zoom:元サイズに対しての倍率で、縮拡大を行うように、思われます。 他の方で、正しく、ご理解されてる方が、いらっしゃれば、ご訂正下さい。
coringo15さん、 下のPHPマニュアルを見ると、・・・T_PRINT・・・の意味は、 print();が間違っているという意味ですが、私の方は、問題なく、PHPが動きます。 良く、分かりませんが、()をはずして、 print file_get_contents($file); とか echo file_get_contents($file); で試して下さい。 尚、最後の?>は、不要というか、（引き続き、htmlのタグがない場合は、）削除した方が、良いでしょう。 参考URL：http://www.php.net/manual/ja/tokens.php
sei0114さん、 ご要望に合っているかどうか分かりませんが、mcを外部SWFにする方法もあります。それぞれ、フレームラベル名をつけて、0.swf、1.swf・・・6.swfとして、外部におきます。 外部SWFを読み込むmain.fla側： //ここから var _array:Array = [0,1,2,3,4,5];//6つの数値の配列生成 _txt.text = "";//ロード時にShuffleされた配列を表示する function Shuffle() {//カスタマ関数化して、見やすくする var num:Number = _array.length; for (var i:Number = 0; i<num; i++) { var r:Number = Math.floor(Math.random()*num);// ランダムなindexを取得 // i とランダムなindexの中身を入れ替え var t:Number = _array[r]; _array[r] = _array[i]; _array[i] = t; } } Shuffle();//ロード時、Shuffle _txt.text = String(_array); this.createEmptyMovieClip("mc",0);//外部SWF読み込み用MovieClip生成 mc._y = 60;//位置決め→適当 var mcl:MovieClipLoader = new MovieClipLoader(); var listener:Object = new Object(); listener.onLoadInit = function():Void { mc.gotoAndPlay("2nd");//指定ラベル名に飛んで、play続行 //trace(mc._currentframe);//その時のフレーム数 }; mcl.addListener(listener); mcl.loadClip("./"+_array[0]+".swf",mc);//index０番目の配列要素に格納されている番号のSWFをロード var n:Number=0;//カウントアップの初期値 function Move(){//setInterval();で呼び出すカスタム関数 clearInterval(myID);//ループ処理時定番のclearInterval(); n++; if(n>=_array.length){//_array.length以上になったなら、 n=0;//０に戻して、ループ } mc.loadMovie("./"+_array[n]+".swf");//n番目の配列要素番号のSWFをロード trace(_array[n]); myID=setInterval(Move,6000);//再設定 } myID=setInterval(Move,6000);//テストでは、外部SWFの最終フレームまでの時間が約5秒なので、これより、大きい数値とし、6秒とした //ここまで 尚、外部読み込みが嫌な場合は、ライブラリーから、MovieClip.attachMovie("識別子","インスタンス名",深度); で読み込んでもいでしょう。 一つの参考です。
anzunyaさん、 AS2.0使用と思いますが、記載のASの一部は、良く分かりませんが、ボタンで、XMLで読み込んだURLにリンクさせたいということだと思いますので、以下のようにしてみました。 /*xmlファイル名を、url.xmlとしました <?xml version="1.0" encoding="UTF-8"?> <file> <visual> <gazou>./main/001.jpg</gazou> <thumb>./navi/thumb_001.png</thumb> <url>http://www.yahoo.co.jp/</url> </visual> <visual> <gazou>./main/002.jpg</gazou> <thumb>./navi/thumb_002.png</thumb> <url>http://www.google.co.jp/</url> </visual> <visual> <gazou>./main/003.jpg</gazou> <thumb>./navi/thumb_003.png</thumb> <url>http://okwave.jp/</url> </visual> <visual> <gazou>./main/004.jpg</gazou> <thumb>./navi/thumb_004.png</thumb> <url>./test.html</url> </visual> </file> */ /*ここから 400×200のステージに、50×50で作ったMovieClipが4つ生成され、XMLで作ったURLに、_blankで、リンクされます。*/ import mx.xpath.XPathAPI;//XpathAPIをimportすると、分かり易いです //以下、各配列生成 var gazouList:Array = new Array(); var thumbList:Array = new Array(); var urlList:Array = new Array(); var _xml:XML = new XML(); _xml.ignoreWhite = true; _xml.onLoad = function(success:Boolean) { if (success) { var rootNode:XML = this.firstChild; gazouList = XPathAPI.selectNodeList(rootNode, "/file/visual/gazou/*"); thumbList = XPathAPI.selectNodeList(rootNode, "/file/visual/thumb/*"); urlList = XPathAPI.selectNodeList(rootNode, "/file/visual/url/*");//ここから、URLを抽出する trace(gazouList.length);//今回は、4となる for (var i:Number = 0; i<gazouList.length; i++) { trace(gazouList[i]); trace(thumbList[i]); trace(urlList[i]); } makeButton();//下のカスタム関数を実行する } else { trace("error!"); } }; _xml.load("url.xml"); //_xml.load("rss.xml?"+getTimer());//ローカルではエラーとなりますが、サーバーアップ時は、ブラウザーのキャッシュ対策として、こっちを使用する、 function makeButton() {//ライブラリー内に作っておく、識別子　BtnのMovieClipを、ステージに生成するカスタム関数を設置しておく for (var i:Number = 0; i<gazouList.length; i++) { var btn:MovieClip = this.attachMovie("Btn", "btn"+i, i); btn._x=40+90*i;//位置決め、適当 btn._y=75; btn._txt.text=String(i);//btnの中に、設置した、ダイナミックテキスト　_txtに、i を代入 btn.id = i;//iを、btnに動的に生成するプロパティ id に、保管しておく btn.onRelease = function():Void { getURL(urlList[this.id], "_blank");/*btn.id、即ち、this.id　で、配列urlListから、要素を抽出する。3番目のボタンは、.test/htmlを作らないかぎり、リンクされない*/ }; } } //ここまで 尚、XPathAPIについては、下の、吉岡梅さんの解説が、分かりやすいので、参考に、記載しておきます。 参考URL：http://itpro.nikkeibp.co.jp/article/COLUMN/20061 …
ActionScript2.0以下なのか3.0なのかがご質問からは判断できませんが， どちらにしても if(flag=1){gotoAndPlay(2)} これは変です。 flag=1　の 「=」 は代入演算子です。 変数flagに1を代入しなさい という意味になります。 if判定では true が返ります。 「=」ではなく「==」にする必要があると思います。 「==」が等価演算子です。
無視して、OKボタンを押せば、登録されます。 クラス名を例えば、Btnとした場合、 フレームアクションで、 var target:Btn=new Btn(); addChild(target); とでも記載すれば、targetという、インスタンスが生成され、表示されます。
＞自分のパソコンのFlash Playerのバージョンは10,0,2,54です。 FlashPlayerと一言に言いましても、いろいろあったり。 私の場合、 IE用アドオン Shockwace Flash Object：10.0.22.87（IE上でFlashを再生するときに必要） FireFox用プラグイン Shockwave Flash：10.0 r12（FF上で〃） スタンドアロン版も、他ブラウザとかも。 ここら辺を調べてみるとFFのほうの問題はわかるかもしれません。 IEのほうは、私ならアップロードしたswfファイルのアドレスに直アクセスした結果で見分けますね。 （アドレスバーにhttp:/～～.swfのように入力） 何も表示されない→キャッシュの問題かもしれないので Ctrl+F5 で再読み込み 　　もしくは再生環境に問題あり。flashplayerを完全にアンインストール後、再インストール。 無事に表示される→ページへの貼り付けに問題あり。 　　本家Flash作成ソフトはよく知らないのですが、＃１の方の回答が的確かと思います。
kimidoraさん、 ローカルとサーバーアップ時の「見栄えの差」が分からないので、なんとも言えないですが、CS3をお使いなら、なにも、Player5以前のloadVariables();ではなく、より、詳細に制御できる、LoadVarsクラスを使うことを、お勧めします。
sirobara19さん、 以下、必要な部分のみ、記載してます。 １．metadataで、Videoの長さを取得し、 ２．playheadで、経過時間を取得します。 //以下、必要部分のみですから、これだけでは、動きませんので、注意下さい。 import mx.video.*; var mc:FLVPlayback;//インスタンス宣言 var Duration:Number;//ビデオの長さ var Time:Number;//ビデオ経過時間 var playheadListener:Object = new Object();//headの進行をwatchするリスナーの設置 function Duration(evt:Object):Void {//metadataの中のビデオの長さの情報を取得し、小数点以下を切り捨て、Durationに代入 var meta:Object = mc.metadata; Duration = Math.floor(meta.duration); } playheadListener.playheadUpdate = function(evt:Object) {//headの進行に伴いupdateを行い、mcの経過時間を取得し、 Time = Math.floor(mc.playheadTime);//小数点切捨てし、Timeに代入 t_txt.text = Time+"　秒経過中"+"/"+Duration+"秒中"; }; // となります。
cnkozoさん、 ・外部テキストを、data.txtとし、SJISで記載前提 &mess0=1番目のメッセージ& &mess1=2番目のメッセージ& &mess2=3番目のメッセージ& &mess3=4番目のメッセージ& &mess4=5番目のメッセージ& &kazu=5& ・FLAのscriptレイヤーに、以下を記載 //ここから var max:Number;//メッセージの数 _txt.text = "";//インスタンス名　_txtは、ロード時は、ブランク var mess_array:Array = new Array();//配列定義 System.useCodepage = true;//data.txtのコードが、UTF-8で記載されてない場合は、これが必要 var lv:LoadVars = new LoadVars(); lv.onLoad = function():Void { max=Number(this.kazu);//文字列の数値化 for (var i:Number = 0; i<max; i++) { mess_array[i] = this["mess"+i]; } var r:Number = Math.floor(Math.random()*mess_array.length);//0から4までの乱数発生 trace(r); _txt.text = mess_array[r];//ｒ番目の配列要素を取り出して、ダイナミックテキスト　_txtに代入 }; lv.load("data.txt"); //lv.load("data.txt?"+getTimer());//サーバーアップ時は、ブラウザーのキャッシュ対策として、こちらを使用する。ローカルでは、エラー発生 //ここまで となります。
cnkozoさん、 外部data.textは、今までのを使うとします。 以下で、左にメッセージが隠れたら、次のメッセージに変わり、ループします。 順番は、ロード時に、毎回変化しますが、一度ロードされた後は、変化しません。 //ここから var max:Number;//メッセージの数 mc._txt.text = "";//インスタンス名　_txtをMovieClip化し、ステージ上でのインスタンス名を、mcとする。ロード時は、ブランク mc._x = 20;//ステージより、少し、右寄りに配置 var n:Number = 0;//mess_array[n]、即ち、配列要素番号をnとし、初期値は、0とする var mess_array:Array = new Array();//配列定義 //System.useCodepage = true;//data.txtのコードが、UTF-8で記載されてない場合は、これが必要 var lv:LoadVars = new LoadVars(); lv.onLoad = function():Void { max = Number(this.kazu);//文字列の数値化 for (var i:Number = 0; i<max; i++) { mess_array[i] = this["mess"+i]; } Shuffle(mess_array);//下のカスタム関数　Shuffle()を動かし、mess_arrayをShuffle trace(mess_array); Move(mc);//mcを引数として、下のカスタム関数　Move(targt_mc)を始動させる }; lv.load("data.txt"); //lv.load("data.txt?"+getTimer());//サーバーアップ時は、ブラウザーのキャッシュ対策として、こちらを使用する。ローカルでは、エラー発生 //左に動かす関数を、カスタム関数化し、引数を、target_mcとする function Move(target_mc:MovieClip) { target_mc._txt.text = mess_array[n];//最初は、n=0が入り、左に隠れたら、n=1,2,3,4,0,1,2,3,4,0・・・・・となる target_mc._txt.autoSize = "left"; w_txt.text = "_txtサイズ="+target_mc._txt.textWidth; var speed:Number = 3; target_mc.onEnterFrame = function():Void { this._x -= speed;//左へ移動 if (this._x<(-this._width)) {//ｍｃがステージの左に完全に隠れたら、 n++;//カウントアップし、 if (n>=max) {//max以上になったなら、 n = 0;//カウンターを元に、戻す } Move(this);//カスタム関数を、ここで、実行させる this._x = Stage.width;//ステージの幅に、mcの基準点を戻す } }; trace("n= "+n); } //配列を、Shuffleする関数を、カスタマ関数化して、見易くしておく function Shuffle(_array:Array) { var num:Number = _array.length; for (var i:Number = 0; i<num; i++) { var r:Number = Math.floor(Math.random()*num);// ランダムなindexを取得 // i とランダムなindexの中身を入れ替え var t:Number = _array[r]; _array[r] = _array[i]; _array[i] = t; } } //ここまで となります。
パッケージ「ppp」フォルダとパッケージ「qqq」フォルダ、 test.flaが同階層にあるとします． ===================== test.fla pppフォルダ ---Aaa.as qqqフォルダ ---Bbb.as ===================== Aaa.as=============== package ppp{ public class Aaa { public function Aaa(){ } protected function aMethod():void { trace("AaaクラスMethod"); } } } ===================== Bbb.as=============== package qqq{ import ppp.Aaa;//パッケージpppのAaaクラスをインポート public class Bbb extends Aaa{ public function bMethod():void { aMethod(); //Aaaクラスのメソッド } } } ===================== test.fla============= import qqq.Bbb; var bbb:Bbb = new Bbb(); bbb.bMethod();　//"AaaクラスMethod" が出力される ===================== なおAaaクラスでメソッドの属性をデフォルトのinternalにすると 同パッケージ内からの参照でないためエラーになります．
（リンク先引用します．） >FLVPlayback コンポーネントでは、FLV の再生が終了した時 >（動画ファイルの最後に達した時）に” complete ”という >イベントが発生します。 同様に、再生状態に移行したときに発生するイベントが " playing "です． //ボタンを非表示にしておく link_btn._visible = false; //ボタンがクリックされた時の処理 link_btn.onRelease = function() { /*ここに、ボタンがクリックされた時の処理を書く*/ }; //再生開始時にボタンを非表示にする←追加 flv_listener.playing = function() { link_btn._visible = false; trace("再生開始します．"); } //FLVの再生が終了した時の処理 flv_listener.complete = function() { //ボタンを表示する link_btn._visible = true; }; //FLVPlaybackのリスナーオブジェクトを作成 flv_listener = new Object(); //リスナーオブジェクトを登録 flv_player.addEventListener("complete",flv_listener); flv_player.addEventListener("playing",flv_listener);←追加 //タイムラインを止めておく stop(); なお、上記を試すとわかりますが、 「再生状態に移行したとき」に起こるイベントですので 例えば一時停止した後に再生を開始する際にも リスナーが処理されます． 上記の処理だけならこのままでもいいですが、 問題があればボタンの表示、非表示を保持する変数をつくり、 条件分岐で処理してください．
変数　スコープ　等で検索してください． 関数の中でvar宣言をすると、その関数の中だけで 保持される変数になります． abc.addEventListener(MouseEvent.MOUSE_OVER , mover); abc.addEventListener(MouseEvent.MOUSE_OUT , mout); //関数の外で宣言 var xyz:aru = new aru(); function mover(e:MouseEvent):void{ xyz.x = 380; xyz.y = 100; addChild(xyz); } function mout(e:MouseEvent):void{ removeChild(xyz); }
状況がわからないので，「確かにそうなる」という検証すらできませんね。 検証ができない(現象が再現できない)ので，原因もわかりません。 原因がわからないので，解決策も見つかりません。 たとえばです。 ステージ上に 　あいうえお 　かきくけこ 　さしすせそ 　たちつてと 　なにぬねの 　はひふへほ と入力したダイナミックテキストのテキストフィールドを用意し， そのテキストフィールドをムービークリップに変換して， そのムービークリップに，たとえば「text_mc」というインスタンス名を付けたとします。 その上のレイヤーにでも 　あいう 　かきく 　さしす だけがかぶさるような塗りの矩形を描き， 基準点を左上としたムービークリップに変換し， そのムービークリップに「mask_mc」というインスタンス名を付けたとします。 その上のレイヤーのフレームにでも次のスクリプトを書いたとます。 ----------------------------------------------- // 「text_mc」に「mask_mc」のマスクをかける text_mc.setMask(mask_mc); // １フレーム進む時間ごとに毎回実行 this.onEnterFrame = function() { // 「mask_mc」 の横幅を 1px ずつ拡大 mask_mc._width += 1; // 「text_mc」 のy座標を 1px ずつ上へ text_mc._y -= 1; }; ----------------------------------------------- ※ 以上，【下の図】↓を参照のこと。 上記の状態でムービープレビューやパブリッシュをすると， 文字(あいうえお…)は上にスクロール移動しますし， その文字が見える範囲も拡大します。 > マスクサイズを変更すると > マスクされた文字が表示されなくなってしまします。 いったい何をどのようにされたのでしょうか？ その方法に問題があるような気がしますが， その方法を一切書かれていらっしゃらないので判断のしようがありません。 たとえば上の例では，マスクの横サイズを1pxずつ大きくしていますが， マスクの横サイズを0pxに変更したならば，当然ですが文字は見えなくなります。 また「マスクサイズを変更する」という受けとり方も， ・ステージ上の手動操作でマスクのサイズを拡大しただけ ・ステージ上の手動操作でマスクの塗りを拡大しただけ ・モーショントゥイーンでマスクのサイズを除々に拡大した ・シェイプトゥイーンでマスクの塗りサイズを除々に拡大した ・ActionScriptでマスクのサイズを拡大した 　　…などなど… 色々な取り方ができます。これも特定ができません。 　「スタート」→「すべてのプログラム」→「Macromedia」 　→「Macromedia Flash MX 2004」をクリックしてソフトを起動させ 　新規ドキュメントを作成し　… … などと逐一全部を書かれると，逆にわかりにくくなってしまいますが， 「要所だけを "なるべく具体的に" 記述」してもらう方が良いです。
>「あと〇〇日〇〇時間〇〇秒」の後に >〇〇ミリ秒（2桁）を加えて表現をする場合の方法 方法は先の回答を見ればわかるはずですが、補足を入れて説明します． flashPlayerは、フレームレート（fps）毎に描画の更新を行います． fpsをデフォルトの12fpsにしている場合、 1秒＝1000ミリ秒（以下ms）/12fps＝約84ms 毎に描画を更新します． （ただし正確ではありません．環境や処理内容でずれます．） つまり、タイマーを例えば10ms毎に動作するよう設定しても 12fpsの場合は約84msたたないとタイマーの結果を表示しないのです． フレームによる描画を待たずに描画の更新を強制する updateAfterEvent()メソッドがありますが、 このケースでは必要ないと思います． 上記をふまえ、以下の通り修正します． まずフレームレートを40fpsにします． //1秒毎に作動するタイマーを設定 var timer:Timer = new Timer(s); sはconstで設定した秒なので1000msです． つまり、上記タイマーは1秒毎に作動します． これを25msごとに作動するようにします． var timer:Timer = new Timer(25); var seconds:～～（秒を取得）のあとにmsを取得するため 以下を追加します．10で割っているのは、 0～999msを1～2桁表示にするためです． var mseconds:Number = Math.floor((millenium.getTime()-today.getTime()) % d % h % m % s / 10); テキスト表示を修正します． txt.text = "ドラえもん誕生まで、あと"+days+"日"+hours+"時間"+minutes+"分 "+seconds+"秒"+mseconds; フレームレートを40fps、タイマーを25ms毎にしたのは 描画のタイミングとタイマーのタイミングを合わせるためです． 1秒＝1000ms/40fps＝25ms
CPU使用率の取得はFlashのみでは無理です。 as3であれば、System.totalMemoryというメソッドで使用されているメモリの値は取得可能です。 解決策としては、as2はそのあたりのメモリ管理が貧弱なので、可能であればas3で作り直して、随時メモリを開放してあげれば、長時間の再生にも耐えられると思います。
方法はいくつかありますが以下最も単純な方法です． （ライブラリにbackImageのシンボルがあり、その中には画像が埋まっていて リンケージ書き出しされているという前提です．） ライブラリのbackImage（のシンボル、以下シンボル）を編集します． シンボルの編集画面では、左上に基準点があると思いますが その基準点が左下に来るよう画像の方をを移動させます． つまりプロパティのx、y欄が0,0となっているのを 0,マイナス画像の高さ となるようにします． シンボルの編集は以上です． メインタイムラインに戻り、fixMenu関数以下を 下記のように書き換えます． 参考にされるサイトでは、幅をフィックスし、 高さは下詰めで縦横比を一定にしておくという仕様ですので 以下で足ります． function fixMenu() { _root.backImage._y = Stage.height; scale = Stage.width/backWidth; /*背景の設定*/ _root.backImage._xscale =_root.backImage._yscale=100*scale; } fixMenu();
質問1 あっています． 質問2 以下に的確な説明がありました． http://hfm-kenchan.com/Lesson/log_qa/D0804241.htm
メニュー[編集]から[検索して置換]でできます。
推測ですが、C#やJavaのジェネリクス、あるいは型パラメータのようなものだと考えています。 解説はC#やJavaのサイトに任せておきましょう。検索すれば多く出てくるし。 http://ufcpp.net/study/csharp/sp2_generics.html#ex http://www.javainthebox.net/laboratory/J2SE1.5/L … コンパイルの段階で検知できるようにすることで、誤りを見つける可能性を高めておく、ってのがC#やJavaだからねぇ…。 一応Adobeのサイトのも(英語) http://www.adobe.com/devnet/flash/quickstart/pro … ただ… 何かうまく動かないとか、自分で型パラメータを使ったクラスを作れないようだとか何とか怪しげな情報があります。 http://blog.iconara.net/2008/05/16/actionscript- … #もともとクラス等の導入とかはECMAScript 4に提案されていた機能らしい。今はECMAScript HarmonyやECMAScript 5の方向みたいだけど。AdobeとMSが推してたんだったかな？
■ FLV：外部FLV（再生するswfと同ドメイン内に置く） ■ サーバ：FMSではない、一般のサーバ 上記の条件でSoundMixer.computeSpectrumを使用して、 一応できることは確認しました． 【方法】 flvを読み込み再生 →ENTER_FRAMEイベント内でSoundMixer.computeSpectrumを実行、 得られる値をByteArrayに保持してそれを元に描画 （波形のライン等のアニメーション） が、ローカル環境では再生したものの途中で止まってしまったり、 （念のためlocal-trusted サンドボックス内で実行） 他の音声を出しているFlashサイトを開くと 止まってしまったり、と不安定です． 上記について、こちらで詳しく解説をされています． http://feb19.jp/blog/archives/000133.php http://faces.jp/2008/01/computespectrum.html 結論として、使いどころが難しいのではと思います． 参考URL：http://feb19.jp/blog/archives/000133.php,http://faces.jp/2008/01/computespectrum.html
環境がFlash CS3 IDEまたはCS4でこのソースを表示させたい という前提でよろしいでしょうか． その場合、（Ripple.asに書いてある通りですが） 新規で.flaファイルを作成し、 Ripple.asにEmbedされている画像（shallow-water-750509-ga.jpg）を ライブラリに読み込んでリンケージでクラスとして書き出します． クラス名は_sourceImageで、画像をリンケージするので 基本クラスはflash.display.BitmapDataとなります． あとはドキュメントクラスとしてRipple.asを指定します． Ripple.as側ですが、Flexの指定部分を コメントアウトまたは削除します． ※ [SWF(～～　の部分と、[Embed(source=～～　の部分 さらに、_sourceImageは基本クラスがBitmapDataなので 以下を書き換えます． 【original】 _target = new Bitmap(new _sourceImage().bitmapData); 【修正】 _target = new Bitmap(new _sourceImage(0,0)); ※_sourceImageのコンストラクタで引数を 0,0としているのは引数を与えないとエラーになるためです． 0,0としても_sourceImageの画像サイズで表示されます． あとは上記2点（.flaファイルとRipple.as）と be.nascom.flash.graphicsフォルダを同じ階層に置き パブリッシュします． ソースの表示ということに関しては以上です． 内容の理解についてはDisplacementMapFilterで いろいろ試されると良いと思います．
スクロールについての考え方がわかりやすく書いてあります． http://oshiete1.goo.ne.jp/qa5324121.html こちらは希望されているバナーのスクロールより 凝った動きをつけていますが、 一部スクロールのさせ方などは参考になると思います． http://gihyo.jp/dev/serial/01/as3/0011 各バナーをムービークリップで作成し、 それぞれのムービークリップのタイムラインに以下を書き、 上記サイトを参考にバナーをスクロールさせれば完成します． addEventListener(MouseEvent.CLICK , onClick ); function onClick (e:MouseEvent) { // URLRequestを設定する var url:URLRequest = new URLRequest( "リンク先URL" ); // 移動する navigateToURL( url, "_blank" ); } こういった作例がある書籍はわかりませんが、 入門書の内容で十分に作れます．
suzukaではできませんがflash cs4以降ならas3で音声の生データを操作できます。 ・同時に複数音源を鳴らす ・音量設定、スピード設定、ピッチ設定 等、soundChannelまわりをいじくれば自由に操作できます。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as3.html
以下ドキュメントクラスを使った一例です． 新規でASファイル（Main.as）を作成します． 次に新規でflaファイル（AS3.0）を作成します． 適当なシンボルを作成し、リンケージでクラスに書き出します． リンケージプロパティで、"ActionScriptに書き出し" と "最初のフレームに書き出し" にチェック、 クラス名はIcon_、基本クラスはflash.display.Spriteとしています． ドキュメントクラスにMain（.as）を指定します． .flaファイルは以上です． Main.asの内容は以下の通りです． //Main.as package { import flash.display.Sprite; import flash.events.Event; import flash.events.MouseEvent; public class Main extends Sprite{ var arr:Array = new Array(); var sw:Number = stage.stageWidth; var sh:Number = stage.stageHeight; var count:int = 5; //コンストラクタ public function Main(){ init(); } private function init(){ addEventListener(Event.ENTER_FRAME, onEnterFrame); addEventListener(MouseEvent.CLICK, onClick); //アイコン生成（とりあえず5個） for(var i:int = 0; i<count; i++){ var _icon:Icon_ = new Icon_(); addChild(_icon); //適当な位置に配置しクリック判定用のフラグを0にする _icon.useHandCursor = true; _icon.x = randomInt(0,sw); _icon.y = randomInt(0,sh); _icon.flg = 0; _icon.addEventListener(Event.REMOVED_FROM_STAGE,onRemoved); //配列に収納 arr.push(_icon); } } //ランダムに動かす private function onEnterFrame(e:Event){ var len = arr.length; for(var i:int = 0; i<len; i++){ var tmp = arr[i]; tmp.x += randomInt(-10,10); tmp.y += randomInt(-10,10); //ステージ外に出た場合の処理 if(tmp.x > sw + tmp.width/2){ tmp.x -= sw + tmp.width; }else if(tmp.x < 0 - tmp.width/2){ tmp.x += sw + tmp.width; } if(tmp.y > sh + tmp.height/2){ tmp.y -= sh + tmp.height; }else if(tmp.y < 0 - tmp.height/2){ tmp.y += sh + tmp.height; } } } //クリックされたとき、クリックイベントが起きたターゲットを調べて //そのターゲットのサイズを拡大 private function onClick(e:MouseEvent){ var tmp:Icon_= e.target as Icon_; tmp.scaleX = tmp.scaleY = 2; //フラグが1（＝一度クリックされている）ならそのターゲットを削除 //フラグが0（＝初めてクリックされた）ならそのターゲットの動きを止めてフラグに1を追加 if(tmp.flg){ removeChild(tmp); }else{ var index:int = arr.indexOf(tmp); arr.splice(index,1); tmp.flg++; } } //全てのアイコンが消えたときの処理 private function onRemoved(e:Event){ count--; if(count==0){ trace("全部消えました"); }removeEventListener(Event.REMOVED_FROM_STAGE,onRemoved); } //ランダムな整数を得るための関数 function randomInt (int1, int2) { var max = Math.max(int1, int2); var min = Math.min(int1, int2); var nRandomInt = Math.floor(Math.random()*(max-min+1))+min; return nRandomInt; } } } 上記では各アイコンは同じクラス（Icon_）から 同じ外観で作成しています． アイコンの動きは最低限のものです． あくまで一例ですので、画像やテキストを使ったアイコンを作成して リンケージで書き出して使ったり、 アイコンの動きを各アイコン自身に持たせたり、 色々改変してみてください．
Adobeの下記サイトによると「FlashPlayer10」はVistaは言うに及ばず、XPにも対応しているようです。 http://www.adobe.com/jp/products/flashplayer/sys …
>ステージ上から動いて外に出るというのはステージから消えたことにはならないからでしょうか？ そうです． removedFromStageはFlashPlayer上で見えなくなったとき、ではなく 「表示リスト」から削除されようとするときに送出されるイベントです． ENTER_FRAMEイベントを停止させたいのであれば、 オブジェクトからリスナーを削除します． removeEventListener（Event.ENTER_FRAME,　リスナー関数） オブジェクトがステージから完全に出たときに オブジェクト（の表示）もActionScriptで消すのであれば、 removeChildを使いますが、これで削除できるのは ASで配置したオブジェクトだけです． そこでオブジェクトの元のシンボルをリンケージでクラスとして 書き出して動的にオブジェクトを配置するようにします． 以下、メインタイムラインに書く場合の一例です． (リンケージでクラス名を"MC"で書き出しているとします） なお簡潔にするためシンボル内にはASは書いていません． var mc:MC = new MC(); addChild(mc); mc.x = stage.stageWidth;//どこでも良い mc.addEventListener(Event.ENTER_FRAME, onEnterFrame); function onEnterFrame(e:Event){ mc.x -= 10; trace("左に10進む"); if(mc.x < 0 - mc.width){ mc.removeEventListener(Event.ENTER_FRAME, onEnterFrame); removeChild(mc); mc = null; } }
phpを使って、a.phpに header("Location: b.html#aaa"); なんてのはどうでしょうか？ （動作確認してません）
FLASHのみでは無理。 なぜならFLASHはローカルデータを件の様に扱えないように作ってあるから。 やるとしたらformとしてデータをアップロードする(=何かしらユーザの手操作が必要)かAIR等(特権を使える環境)を用いるしかないと思う。(どのみちFLASH単体でローカルデータ直投げは無理)
こんな感じでしょうか↓？ -------------------------------------------------------- var btnArr:Array=new Array("Home","About","Contact"); for (var i:int=0; i<=2; i++) { menu["button"+btnArr[i]].addEventListener(MouseEvent.MOUSE_OVER, this[btnArr[i]+"Over"]); } function HomeOver(evt:MouseEvent):void { trace("homeです"); } function AboutOver(evt:MouseEvent):void { trace("Aboutです"); } function ContactOver(evt:MouseEvent):void { trace("Contactです"); } -------------------------------------------------------- なお上記では 「buttonHome」と「HomeOver」 は 「Home」 で統一しています。 「buttonHome」「homeOver」のままでは無事に動作しません。 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q …
Flash はバージョンによって大きく仕様やスクリプトや作るべきムービーの構造が変わります。 質問をするにしても，本を買うにしても，サイトを参考にするにしても， 少なくともまずご自身の持たれている Flash 作成ソフトとそのバージョンをしっかり把握して，はっきりさせておくことが大切です。 以下，勝手に， Flash 4(ActionScript 1.0未満)以前ではないものとします。 ◎ Flash 5 以上をご使用の場合(ActionScript 1.0) 　及び Flash Lite 1.x 用 SWF をパブリッシュする場合。 指定フレームにキーフレームを作成して そのフレームを選択した状態でアクションパネルに // 再生停止 stop(); と書きます。 またステージ上の透明ボタンを選択して， // このボタンをクリックしたとき on (release) { // タイムラインを再生 play(); } と書きます。 ◎ Flash MX 以上をご使用の場合(ActionScript 1.0) まず透明ボタンを選択してプロパティインスペクタよりインスタンス名を付けます。 たとえば「play_btn」というインスタンス名を付けます。 指定フレームにキーフレームを作成して そのフレームを選択した状態でアクションパネルに // 再生停止 stop(); // 「play_btn」をクリックしたときの動作を定義 play_btn.onRelease = function() { // タイムラインを再生 play(); }; と書きます。 ◎ Flash MX 2004 以上をご使用の場合(ActionScript 2.0) まず透明ボタンを選択してプロパティインスペクタよりインスタンス名を付けます。 たとえば「play_btn」というインスタンス名を付けます。 指定フレームにキーフレームを作成して そのフレームを選択した状態でアクションパネルに // 再生停止 stop(); // 「play_btn」をクリックしたときの動作を定義(戻り値なし) play_btn.onRelease = function():Void { // タイムラインを再生 play(); }; と書きます。 ◎ Flash CS3 以上をご使用の場合(ActionScript 3.0) まず透明ボタンを選択してプロパティインスペクタよりインスタンス名を付けます。 たとえば「play_btn」というインスタンス名を付けます。 指定フレームにキーフレームを作成して そのフレームを選択した状態でアクションパネルに // 再生停止 stop(); // 「play_btn」にクリックしたとき実行するイベントリスナーを登録 play_btn.addEventListener(MouseEvent.CLICK,function():void{play()}); と書きます。 ※あくまでも上記スクリプトは記述例です。 　他にも書き方などはあります。 ※Flash 作成ソフトのバージョンの順は次の通りです。 　Flash 5 → Flash MX → Flash MX 2004 　→ Flash 8 → Flash CS3 → Flash CS4 ※下の図は Flash 8 Windows版 のスクリーンショットです。 　Flash MX ～ Flash CS3 では比較的似ていると思いますが 　Flash 5 や Flash CS4 では著しく違う箇所があります。 　また OS によっても違う箇所はあります。
> 右側の写真は自動でスライドするというものです。 スライドですか？ 書かれていらっしゃるサイトのFlashは スライドではなくフェードインで写真が登場します。 どちらかわかりませんので その部分は手動で作って それ以外の部分をActionScriptで動作させる方法を書きます。 とにかく スライドでもフェードインでも そのように登場してくるムービークリップを作成して， ボタンロールオーバーと同時にそれらを上へ上へとコピペで上乗せしていけば良いと思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ステージ上に１辺10pxくらいの四角い塗りを描きます。 その小さな塗りを選択して「修正」→「シンボルに変換」でムービークリップに変換します。 その変換するときに，基準点はどこでも良いと言えばどこでも良いですが， 一応「右下」に設定するとします。 そのムービークリップにプロパティインスペクタよりインスタンス名を付けます。 たとえば「loadMC」というインスタンス名を付けます。 その「loadMC」を再びムービークリップに変換します。 基準点は同じく右下に設定するとしておきます。 そのムービークリップにもインスタンス名を付けます。 たとえば「koMC」というインスタンス名を付けます。 ここまでを階層図で表すと次のようになります。 　_root(メインのタイムライン) 　　　└koMC 　　　　　└loadMC 「koMC」をダブルクリックするなどして， そのムービークリップ内の編集に入ります。 「koMC」内のタイムラインには 最初に作った「losdMC」があるはずですから それをモーショントゥイーンでスライドなりフェードインで登場させます。 　「koMC」内のタイムライン 　　レイヤー　筆・・・|●--------------->|●| 　　　　　　　　　　　　　モーショントゥイーン モーショントゥイーンで登場しきった最後のフレームにキーフレームを作成して， その最終フレームに stop(); と書いておきます。 「koMC」内のタイムラインの編集は以上で終了ですから， ステージ上の何もないところをダブルクリックするなどして _root(シーン1 などメインのタイムライン)の編集に戻ります。 上のようにして作成した「koMC」をまたさらにムービークリップに変換します。 そのムービークリップにもインスタンス名を付けます。 たとえば「oyaMC」というインスタンス名を付けます。 ここまでを階層図で表すと次のようになります。 　_root(メインのタイムライン) 　　　└oyaMC 　　　　　└koMC 　　　　　　　└loadMC(←モーショントゥイーンで登場) この「oyaMC」を写真の左上コーナーが来るのに頃合が良い場所に配置します。 写真を切り替えるボタンは この「oyaMC」よりも上のレイヤーに置く方がなんとなく良いと思います。 写真を切り替えるボタンは仮に４つ置くものとします。 その場合例えば４つのボタンには 「btn1」「btn2」「btn3」「btn4」というインスタンス名を付けます。 外部JPEG は SWF(Flash) や HTML と同じフォルダにあって， 仮に「1.jpg」「2.jpg」「3.jpg」「4.jpg」というファイル名であったとします。 その場合， ボタンやムービークリップが存在フレームに， 次のように書けば，それらしいものができると思います。 ------------------------------------------------ // カウント用変数 cnt の初期化 var cnt:Number = 0; // 「koMC」を複製してJPEGをロードする関数の定義 function copyAndLoad(pic:String):Void { // 変数 cnt に 1 を加算 cnt++; // koMC を koMC○ というインスタンス名で震度○に複製 oyaMC.koMC.duplicateMovieClip("koMC"+cnt, cnt); // その koMC○ 内を フレーム1 から再生 oyaMC["koMC"+cnt].gotoAndPlay(1); // その koMC○ 内の loadMC に JPEG をロード oyaMC["koMC"+cnt].loadMC.loadMovie(pic); // 4つ前くらいの koMC○ を消す oyaMC["koMC"+(cnt-4)].removeMovieClip(); } // 最初のJPEGをロード copyAndLoad("1.jpg"); // ボタン「btn1」ロールオーバー時の動作を定義 btn1.onRollOver = function():Void { // 「1.jpg」 をロード copyAndLoad("1.jpg"); }; // ボタン「btn2」ロールオーバー時の動作を定義 btn2.onRollOver = function():Void { // 「2.jpg」 をロード copyAndLoad("2.jpg"); }; // ボタン「btn3」ロールオーバー時の動作を定義 btn3.onRollOver = function():Void { // 「3.jpg」 をロード copyAndLoad("3.jpg"); }; // ボタン「btn4」ロールオーバー時の動作を定義 btn4.onRollOver = function():Void { // 「4.jpg」 をロード copyAndLoad("4.jpg"); }; ------------------------------------------------ 　
AIRならHtmlViewerというコンポーネントがあるので機能ありです。 それ以外(FlashCS/Flex)ですと、残念ながら機能なしです。 代替案として、HTMLのIFrameをFlash上のCanvas(またはSprite)に置いてレンダリング機能自体をブラウザに依存させる方法があります。 受信したコンテンツをそのまま表示するだけならこれでいいのですが、Flash側から動的にコンテンツ表示を変えたい場合はExternalInterfaceを使い、JavaScriptで表示コンテンツを書き換えるといった処理が必要になります。 # 参考URLはFlexですのでFlashCSの場合は移植が必要です 参考URL：http://www.deitte.com/archives/2006/08/finally_u …
お役に立つか判りませんが、ご参考まで。 こちらは該当しませんでしょうか。 [IE7+FlashPlayer9（?）でSWFが表示されないっぽい件 - blog.naggg.jp] http://blog.naggg.jp/2007/06/bug-ie7-flashplayer … 実行環境（OS,IE,FlashPlayerのバージョン）も影響するみたいなので、その部分の情報もあると良いかもしれません。 参考URL：http://blog.naggg.jp/2007/06/bug-ie7-flashplayer …
> removeEventListener処理を行いましたが、 > 「TypeError: Error #2007: パラメータ listener は > null 以外でなければなりません。」 > というエラーが表示 他のスクリプトは具体的であるのに， この removeEventListener に関してだけ具体的ではないので， どこがどう間違っているとは言えません。 例えば 「button」以外にボタンを作って そのボタンに「button2」というインスタンス名を付け， 次のコードを書かれていらっしゃる function btnOver の下に書くと エラーも出ませんしイベントリスナーも削除できますよ。 button2.addEventListener(MouseEvent.CLICK, removeButtonEvent); function removeButtonEvent(event:MouseEvent):void { button.buttonMode=false; button.removeEventListener(MouseEvent.MOUSE_OVER, btnOver); }
お役に立つか判りませんが、ご参考まで。 [Flashアニメーション習得ガイド | デベロッパーセンター] http://www.adobe.com/jp/devnet/flash/articles/an … 以下、上記URLより引用 ---------------------------------------------------------------- フレームレートとアニメーションについてフレームレート（アニメーションの再生速度）は、１秒あたりのフレーム数で表されます。フレームレートが遅過ぎると、アニメーションの動きがぎこちなくなります。早過ぎると、アニメーションの動きに悪影響が出たり、ユーザのコンピュータ処理能力を過剰に消費することがあります。アニメーションの複雑さとアニメーションを再生するコンピュータの速度は、再生の滑らかさに影響します。各種のコンピュータでアニメーションをテストし、最適なフレームレートを設定してください。 ---------------------------------------------------------------- 引用ここまで。 フレームレートの値が大き過ぎても良くないようです。 逆に少し小さい値にしてみてはいかがでしょうか。 拡大する画像の元サイズが大きければ、プロセッサにかかる負担も大きいでしょうし。 参考URL：http://www.adobe.com/jp/devnet/flash/articles/an …
Progressionを使ってはいかがでしょうか． http://progression.jp/ja/ 便利ですよ．
Flash CS3の［ファイル］→［読み込み］→［ビデオの読み込み］で ウィザードを使ってmovをflvに変換しているということでよろしいでしょうか． その前提で、さらにflvを置くサーバが一般的なサーバとして （flash Media サーバーではない） 以下がFLVを読み込んでループさせる方法です． flvはswfに埋め込まない方が良いので、 ビデオの読み込みウィザードで、 ［WEBサーバーからのプログレッシブダウンロード］を選択し、 movをflvに変換します．スキンを「なし」でウィザードを進めます． 終了すると、movから変換されたflvファイルができます． 開いているflaファイル（FLVPlaybackのインスタンスがステージに配置） をflvと同じ階層に保存し、以下の操作をします． FLVPlaybackインスタンスを選択した状態で、 ［プロパティ］の［インスタンス名］で適当な名前を付けます． （この説明では「player」としています） さらに［パラメータ］のsource　で、flvへのパス（相対パス）が 異なっていれば修正します． それからメインタイムラインの第一フレームに以下入れてください． プレイヤーインスタンスがあるフレームとレイヤー分けは してもしなくても良いです． import fl.video.VideoEvent; //プレイヤーが再生完了したら再度再生させる player.addEventListener(VideoEvent.COMPLETE, replay); function replay(e:VideoEvent){ e.target.play(); } これでswfにパブリッシュし、 flvファイルと一緒にサーバにアップします． WordPressに貼付けるのはswfファイルです． なおご質問ではAS2でとなっていますが、上記はAS3です． パブリッシュ設定で、ActionScriptのバージョンをAS3にして下さい．
まずは ご使用の Flash のバージョン そして 使用する ActionScript のバージョン この辺を明確にして（ちゃんと把握して定めて）から 「Flash リキッドレイアウト」 「ActionScript リキッドレイアウト」 のように検索するのが良いと思います。 http://www.google.co.jp/search?hl=ja&source=hp&q … 上記検索で見つけた私の回答例 「flash ブラウザのサイズに合わせた各オブジェクト位置の移動方法」 http://okwave.jp/qa5140171.html?ans_count_asc=0 結局 ActionScript 1.0 や 2.0 の場合 // ステージ内容の拡大縮小なし（お決まり文句） Stage.scaleMode = "noScale"; // ステージの上左を基準にする（お決まり文句） Stage.align = "TL"; ActionScript 3.0 の場合 // ムービー内の拡大縮小なし（お決まり文句） stage.scaleMode = StageScaleMode.NO_SCALE; // 整列の基準を左上にする（お決まり文句） stage.align = StageAlign.TOP_LEFT; 上のようなお決まり文句を書いて そのあとで色々なオブジェクト（主にムービークリップ）の座標や大きさなどを指定します。 ご質問で書かれていらっしゃるような写真がピラピラめくれるようなアニメーションも， 何らかの形でムービークリップ内に作成して， そのムービークリップのサイズをステージサイズから算出するようにします。 「何らかの形」とはActionScriptでも良いですしモーショントゥイーンでも良いです。 とにかく何らかの形で１つのムービークリップ内でアニメーションが動くようにして， そのムービークリップのサイズを指定します。 > この様にFLASHを載せるにはどうすればいいんでしょうか？ Flash(SWF) の貼り付け方の質問でしょうか？ Flash(SWF)は HTML に 100％ 表示させます。 CSSなどでマージンを 0 にします。 HTML 側はそれだけのことです。
とりあえず オブジェクト も ゴミ箱 もそれぞれを各ムービークリップで作成します。 (絵などをムービークリップに変換します という意味です。) そして各ムービークリップにインスタンス名を付けます。 仮に オブジェクト は ４つ で，ゴミ箱 は ３つ であったとします。 その場合 ７つ のムービークリップになるわけですが， 例えば４つのオブジェクトムービークリップには 「obj_0」 「obj_1」 「obj_3」 「obj_4」， 例えば３つのゴミ箱ムービークリップには 「box_0」 「box_1」 「box_3」 というインスタンス名を付けます。 各ゴミ箱ムービークリップ内の フレーム2 には 「ゴミ箱がふくらんだ状態」の絵を置きます(描きます)。 ここまでの状態を表したのが 【下の図】↓ です。 ※「ゴミ箱がふくらんだ状態」の絵は， 　 シーン1 などメインのタイムラインのフレーム2に置くのではありません。 　 "各ゴミ箱ムービークリップ内" のタイムラインの フレーム2 に置きます。 これら７つのムービークリップが存在するフレームに 次のようなスクリプトを書けば， ご質問で書かれていらっしゃるようなことができます。 --------------------------------------------- // ゴミ箱(box_○)に関するループ for (var i:Number = 0; i<=3; i++) { // 「box_0」～「box_3」内をフレーム1で停止 _root["box_"+i].stop(); } // オブジェクト(obj_○)に関するループ for (i=0; i<=4; i++) { // // 「obj_0」～「obj_4」を押したときの動作を定義 _root["obj_"+i].onPress = function():Void { // このムービークリップのドラッグを開始 this.startDrag(); }; // // 「obj_0」～「obj_4」を放したときの動作を定義 _root["obj_"+i].onRelease=_root["obj_"+i].onReleaseOutside=function():Void { // このムービークリップのドラッグを終了 this.stopDrag(); // ゴミ箱(box_○)に関するループ for (i=0; i<=3; i++) { // もしそのときゴミ箱(box_○)がマウスに接触していたら if (_root["box_"+i].hitTest(_root._xmouse, _root._ymouse, true)) { //なおかつそのゴミ箱のフレームが1であれば if (_root["box_"+i]._currentframe == 1) { // そのゴミ箱内のフレームを2に進めて停止 _root["box_"+i].gotoAndStop(2); // そしてこのオブジェクトを非表示にする this._visible = false; } } } }; } --------------------------------------------- ・バージョン 　ActionScript 2.0 　Flash Player 6 以上用のSWFパブリッシュで動作 上に書いた「これら７つのムービークリップが存在するフレーム」とは 例えば「obj_0」～「obj_4」をムービーのタイムラインの上レイヤーのフレーム1， 「box_0」～「box_3」をムービーのタイムラインの下レイヤーのフレーム1に作成した場合， 同じムービーのタイムラインの同じフレーム1にスクリプトを書くという意味です。 　　　　　　↓↓↓ 　～ムービーのタイムライン例～ 　レイヤー3　・・・|○| ←スクリプトはこのフレームに書く 　レイヤー2　・・・|●| ←例えば「obj_0」～「obj_4」 　レイヤー1　・・・|●| ←例えば「box_0」～「box_3」 スクリプトの内容に関してです。 まず， 　// ゴミ箱(box_○)に関するループ 　for (var i:Number = 0; i<=3; i++){…} これは for(繰り返しループ)文 です。 何のことかわからない場合は次のページなどを参考にしてみてください。 「繰り返し文 for - FLASHアクションスクリプト入門編」 http://isvalid.jp/actionscriptLab/ASlesson/actio … 次に， 　// 「box_0」～「box_3」内をフレーム1で停止 　_root["box_"+i].stop(); で書いたような _root["box_"+i] の [ ] を「配列アクセス演算子」と言います。 使い方や意味などは，そのままを Google で検索してもらえば 説明や参考になるサイトが出てきます。 Google検索「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q … ○○.onPress=function(){…}; ○○.onRelease=function(){…}; ○○.onRelease=function(){…}; これらのようなものを「イベントハンドラメソッド」と言います。 これも何のことかわからない場合は次のページなどを参考にしてみてください。 「ムービークリップのイベントハンドラ」 http://homepage3.nifty.com/ginga-b/MX/mc_eventha … ムービークリップ.hitTest(○○) これは ムービークリップクラスの接触判定メソッド です。 次のページなどが参考になると思います。 「Flashゲーム講座＆ASサンプル集【当たり判定について】」 http://hakuhin.hp.infoseek.co.jp/main/as/hittest … あと， :Void　とか　:Number　が少し出てきていますが， これは変数や関数の型指定をしているだけで ActionScript 2.0 の場合は特に大きな意味はありません。 デバッグ時にエラーを発見しやすいとか 他人が見たときにその変数が何であるのかがわかりやすいとか その程度のものです。 var i:Number　→ 変数 i には数値が入りますよ～ function():Void → この関数に戻り値はありませんよ～ というようなことです。 何のことかわからなければ無視しても良いですし， コロン以下を削除してもらっても全く問題はありません。 ※ Void を理解しようにも まず， 　「戻り値がある関数とはどういうものか」を理解しない限り， 　「戻り値がない関数とは何なのか」は理解できないと思う。 　「熱い」がわからなければ「熱くない」がわからない と同様 　「明るい」がわからなければ「明るくない」がわからない と同様 ※ ActionScript 3.0 では話が別です。 　 ActionScript 3.0 の型指定には動作上の意味があります。 === 以下は質問外の補足 ============================= 各オブジェクトのムービークリップは， 　// そしてこのオブジェクトを非表示にする 　this._visible = false; で非表示にしただけです。 これを 　_visible = true にしてやると戻って来ます。 例えば， 　「各ゴミ箱をクリックしたときに， 　　オブジェクトを元の表示状態に戻したい。」 という場合は次のようにスクリプトを書き換えます。 書き換えると言うよりも最後の部分を付け足します。 --------------------------------------------- // ゴミ箱(box_○)に関するループ for (var i:Number = 0; i<=3; i++) { // 「box_0」～「box_3」内をフレーム1で停止 _root["box_"+i].stop(); } // オブジェクト(obj_○)に関するループ for (i=0; i<=4; i++) { // // 「obj_0」～「obj_4」を押したときの動作を定義 _root["obj_"+i].onPress = function():Void { // このムービークリップのドラッグを開始 this.startDrag(); }; // // 「obj_0」～「obj_4」を放したときの動作を定義 _root["obj_"+i].onRelease=_root["obj_"+i].onReleaseOutside=function():Void { // このムービークリップのドラッグを終了 this.stopDrag(); // ゴミ箱(box_○)に関するループ for (i=0; i<=3; i++) { // もしそのときゴミ箱(box_○)がマウスに接触していたら if (_root["box_"+i].hitTest(_root._xmouse, _root._ymouse, true)) { //なおかつそのゴミ箱のフレームが1であれば if (_root["box_"+i]._currentframe == 1) { // そのゴミ箱内のフレームを2に進めて停止 _root["box_"+i].gotoAndStop(2); // そしてこのオブジェクトを非表示にする this._visible = false; } } } }; } // ---以下を付け足し------ // ゴミ箱(box_○)に関するループ for (i=0; i<=3; i++) { // 「box_0」～「box_3」をクリックしたときの動作を定義 _root["box_"+i].onRelease = function():Void { // オブジェクト(obj_○)に関するループ for (i=0; i<=4; i++) { // もしこのゴミ箱がオブジェクト(obj_○)に接触していたら if (this.hitTest(_root["obj_"+i])) { // このゴミ箱内のフレームを1に戻して停止 this.gotoAndStop(1); // そしてその接触しているオブジェクトを表示する _root["obj_"+i]._visible = true; } } }; } --------------------------------------------- 　
ActionScript 2.0 や 3.0 には”クラス”という概念があり、クラスは as ファイルでなければ定義できないことになっています。 １つの仕事に関わるクラスを定義したいくつかの as ファイルをフォルダにまとめることで、Ｃ言語などでいうところのライブラリ（Ｃ言語のライブラリは関数の集まりですが、こちらはクラスの集まりになり、”パッケージ”と呼ばれています）に似たものにすることができます。 ActionScript 1.0 にはクラスはありませんが、Flash Player 5 以降（カスタムオブジェクト関連の機能が本格的に整備されたのは Flash Player 6 から）では、クラスの前身とも言える”カスタムオブジェクト”が使えるようになっています。 カスタムオブジェクトは通常の関数の形式を使って定義するため、as ファイルによらずフレームアクションなどで定義することができます。 この点を利用して、カスタムオブジェクトを定義するスクリプトを外部 as ファイルに記述し、#include でスクリプトに追加してカスタムオブジェクトを他の fla ファイルで再利用するといった使い方もできます。 もちろん、#include では as ファイルをそのまま挿入できますので、似た作品を作る時にスクリプトを丸ごと持ち込む・よくできた関数や頻繁に使う関数を再利用するという使い方も考えられます。 ただ、そういった使い方は特殊で、一般に as ファイルでコードを再利用するといえばやはり、カスタムオブジェクトやクラスの定義に使うことだと思います。
質問文のコードがrootだとすると、thisはrootを表します。 varはローカル変数を作成します。 以上を踏まえて。 function map(lcr) { var Left_map = new Array("ba","rc","ba","re","be","wa");//varでmap()内“限定”の変数Left_mapを作成 trace(this[lcr+"_map"]);// undefined //書き換えると、_root.Left_map。_rootには存在しない変数 trace(Left_map);//ba,rc,ba,re,be,wa//map()内で変数Left_mapを探す（無ければ_rootのプロパティを探す） } 要は参照する場所を間違えていますね。 改善案。 var lcr = "Left"; map(lcr); var Left_map = new Array("ba","rc","ba","re","be","wa");//グローバル（に近い）変数にするためfunction外へ function map(lcr) { trace(this[lcr+"_map"]);// undefined → ba,rc,ba,re,be,wa trace(Left_map);//ba,rc,ba,re,be,wa } ところでAS1.0でよかったのでしょうか？
Flash Lite には1.1と2.0と3.0といったバージョンがあります。 今までActionScript 2.0を使用したことがあるなら、Lite 1.1だといろいろ覚え直すことが多く面倒だと思います。 ドコモの904シリーズ以前の全機種と現在の一部の機種への対応を無視するのならFlash Lite 2.0にすることをおすすめします。 http://www.nttdocomo.co.jp/service/imode/make/co … ↑詳しくはこちら 2.0よりパブリッシュ設定の「ムービーの圧縮」が利用できるので少し容量が削減できます。 ※3.0にしてしまうとauの対応機種が少なくなってしまいます。 http://doruby.kbmj.com/hal_on_rails/20090531/Fla … ↑技術的なことはこちらに書いてありました。 アドベンチャーゲームのサンプルがありましたので関連リンクとして張っておきます。 (Flash Lite 1.1のようです) 参考URL：http://flashlite.ofg.jp/
そのままの形で行くのでしたら フラグとなる変数を作って そのフラグを切り替えれば良いと思います。 例 ----------------------------------------------- onClipEvent (load) { // スピードの初期値 spd = 5; // フラグとなる変数を用意(初期値例 false) flg = false; } onClipEvent (enterFrame) { // spd ずつ右へ移動 this._x += spd; // もしx座標が100より大きく かつ flg が false のとき if (this._x>100 && !flg) { spd = 0; this.gotoAndPlay(11); // フラグとなる変数の値を true にする flg = true; } } ----------------------------------------------- ・バージョン 　ActionScript ： ActionScript 1.0 　オーサリング ： Flash 5 以上 　Flash Player ： Flash Player 5 以上
mac: command + Enter command + option + Enter Windows: Ctrl + Enter Ctrl + Alt + Enter
もう少し詳しく教えてください。 mac or win。 osのバージョンなど。 エラーメッセージは全文正確に転載してください。 あとは、状況の説明がなければこちらも判断できません。 インストール自体ができないのか、 インストールはできるがアプリの実行ができないなど。
> タイムライン編集したいので、取り込もうとしてます。 > １時間くらいあるビデオはFlashでは編集できないのでしょうか？ Flash はそもそもビデオ編集ソフトではありませんよ。 仮にメモリの件がクリアされたとしても...↓ 「オーサリングにおける Flash の限界について」 http://www.adobe.com/jp/support/kb/ts/228/ts_228 … ですからね。 １時間だと頭打ちが続発するでしょう。 最高 16000 フレーム 仮に 1秒10コマ の動画であっても 1600秒 1600秒 ≒ 27分程度 普通は 1秒30コマ くらいでは？ > 数～数十メガバイトの Flash ファイルを作成した場合に、… 色々書いてあります。 そもそも SWF はその性質上， ファイル全体をメモリにロードさせて動作させるタイプのファイルです。 （ビデオとは違い再生させているところだけをメモリにロードさせているのではありません。） 仮にSWFが作成できたとしても， 今度は見る側で見えない可能性が大きいです。
最初に _quality = "HIGH" としてはどうでしょうか？ また、デバイスフォントを使うこともよいとおもいます。
関数部分、ちょっと訂正です。 cat_array → ar -------------------------------------------- //配列と調べたい数値を渡す。 myFunction(cat_array,5); function myFunction(ar:Array, n:Number):Number { //配列を数値の小さい順番に並べる。(必要なければ外してください。) ar.sort(Array.NUMERIC); for each (var num:Number in ar) { // n以上で、かつn+4以内の数値の場合、最小値を返す。 if (num > n && num <= n+4) return num; } // 該当する値がなかった場合、nを返す。 return n; } --------------------------------------------
MovieClip(root).gotoAndStop(2); でできると思います。 「FN0707001 - rootプロパティでメインタイムラインの関数にアクセスできない - Flash テクニカルノート」 http://www.fumiononaka.com/TechNotes/Flash/FN070 …
http://www.fxug.net/modules/xhnewbb/viewtopic.ph … blue-horseさんと同じようなことがしたくて調べていました。 HTMLコンポーネントの印刷はWebkitというものを使えば出来るようです。 ただ制約があるようなので、参考にならないかもしれません。 参考URL：http://www.fxug.net/modules/xhnewbb/viewtopic.ph …
こちらのmacbook環境だと問題なく再生できますね。 最近モニターを変えたとかはないですか？
手動のコピペの位置を固定する事はできません。
お早うございます。 ＞全部のレイヤーを少しずつずらしていくという、なんとも時間のかかる作業を繰り返しています。 と、いうことで、私の場合ActionScriptで次のようにしています。 全て同じ動きのムービークリップなら色々なスライドショーを自動的に行う方法が紹介もされていますが、それぞれの写真をそれぞれ好み応じて表現したいということで作成してみました。 いかがでしょうか。 １．挿入－新規シンボル　インスタンス名「MC」を作成 内容は矩形でも作成しておく。これは、見えるようにするためでなんでもかまわない。そして、ステージの外側に配置する。 ダイナミックテキストボックス、インスタンス名「TboxTitle」を作成し、適当な位置に配置。タイトルを表示しないのならステージ外へでも配置する。 ２．表示したい写真のムービークリップを作成する。そのムービークリップ内で好みのきをタイムラインに作成する。 インスタンス名は自由、下記ActionScriptでは、「MCa」「MCb」「MCc」としている。 ３．MCのActionScriptに次を記載 　配列のフィールドは、 　ムービークリップ名、表示時間、タイトル 　です。 onClipEvent (load) { Cnt=0; OverVTime=10;//重なり時間 CntMod=0; MCAry = new Array(); MCAry[0] = new Array("MCa", 60,"aaaaa"); MCAry[1] = new Array("MCb", 80,"bbbbbbbb"); MCAry[2] = new Array("MCc", 60,"ccc"); AryLen=MCAry.length; TtlTime=0; for(i=0;i<AryLen;i++){ TtlTime=TtlTime+MCAry[i][1]-OverVTime; } AryNo=0; OldAryNo=AryLen-1; NextAttachCnt=0; CrntEraseCnt=OverVTime; } //以下，１フレーム進む時間ごとに１回実行 onClipEvent (enterFrame) { CntMod=Cnt%TtlTime; _root.Dtext.text="経過時間="+CntMod; //----- ムービーをアタッチ if(CntMod==NextAttachCnt){ _root.attachMovie(MCAry[AryNo][0],"MC"+AryNo,AryNo); _root.TboxTitle.text=MCAry[AryNo][2] NextAttachCnt=(NextAttachCnt+MCAry[AryNo][1]-OverVTime)%TtlTime; ++AryNo; AryNo=AryNo%AryLen; } //----- ムービーを削除 if(CntMod==CrntEraseCnt){ OldAryNo=(AryLen+AryNo-2)%AryLen; _root.DebugText.text="削除した "+OldAryNo; _root["MC"+OldAryNo].removeMovieClip(); CrntEraseCnt=(CrntEraseCnt+MCAry[AryNo][1]-OverVTime)%TtlTime; } ++Cnt; }
状況に不明点があります。 プレビューというのはブラウザ上で見ているのでしょうか？ それとも、flash pro上でプレビューしているのでしょうか？ そして、ステージが1200×1200のサイズになっていないのか、 それともコンテンツが1200ピクセルをはみ出しているのか、 もう少し具体的に状況のご説明をお願い致します。
崩れている部分のソースを記載頂けますでしょうか？ あと、崩れているブラウザは何になりますか？
my_mc.blendMode = BlendMode.SCREEN; または my_mc.blendMode = "screen"; でしょうね。
今回はスクリプトで読み込むファイルを動的に選び、選んだファイルの情報を配列変数 file_list に登録します。 冒頭でファイル名を file_list に格納している 　file_list = [ "image" , "pic" , "photo" ]; ↑この部分を削除するか、コメントにしてください。 （ file_list = new Array(); の行は削除しないでください） 次に、ファイルをランダムに選び、file_list に登録する処理を追加します。 ファイル名の番号を 001 や 010 というように３桁に統一すると Windows などの表示リストでは見やすくなるのですが、スクリプトでは数値として扱えなくなるために面倒になります。 最初のうちは、ファイルを管理する上では少々不便になっても、１桁や２桁の数字の場合もアタマに 0 を付けないファイル名にした方が簡単です。 読み込むファイルは共通の名前＋連番（ 1 ～ 100 ）で名前が付いているものとして、ランダムに選ぶ方法は次のように考えます。 ファイル名に付いている連番に着目して、1 ～ 100 までの間で乱数を発生させ、番号を１つ選びます。 この時に file_list の中身を調べて、同じ番号がなければ選んだ番号を配列変数に登録し、既に登録されていた場合は登録せずに破棄して再度選び直します。 この作業を繰り返して、指定の数だけ（今回の件では５つ）登録したら、リストは完成です。読み込む時は、この配列変数を見ながらファイルを読み込みます。 スクリプトにしますと、次のようになります。 このスクリプトを、「読み込みに関するイベント処理」の前あたりに追加してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /*****************************************************/ 　/////////////////////////////////////////////////////// 　//読み込むファイルのリストを作成 　/////////////////////////////////////////////////////// 　//ファイルに共通する名前 　file_name = "image"; 　//ファイルの総数と、選ぶ数の総数 　file_max = 100; 　slide_max = 5; 　//指定の数だけファイルの番号をランダムに選んで 　//ファイル番号のリストを作る 　while( file_list.length != slide_max ) 　{ 　　//１～file_maxの中から、数字をランダムに１つ選ぶ 　　rnd = Math.floor( Math.random() * file_max ) + 1; 　　//ファイルリスト内に同じ番号はあるか？ 　　for( i = 0 ; ( i < file_list.length ) && ( file_list[ i ] != rnd ); i++ ) 　　　; 　　//同じ番号が登録されていなければ登録する 　　//既に登録されていた場合は、この番号を捨てる 　　if( i >= file_list.length ) 　　{ 　　　file_list.push( rnd ); 　　} 　} /*****************************************************/ 多くの中からいくつかのものを重複なく選ぶには様々な方法があり、それぞれ一長一短があります。 今回は、「 100 個の中から１個を適当に取り出し、重複していた場合は選び直す」方法を採用しました。 乱数次第では選び直しばかり繰り返すことになり、時間がかかったりいつまでも作業が終わらなくなる可能性があるところが欠点ではありますが、100 個の中から５個を選ぶという割合であれば、選び直しになる確率は低くなります。 機会がありましたら、他の方法も研究してみてください。 file_list に入るのは、1 や 100 といった数字だけです。 実際にファイルを読み込む時は、これに全ファイルに共通する名前と拡張子を追加してファイル名を作ります。 先のスクリプトでは、変数 file_name に共通する名前を格納しています。ここでは仮に” image○○”というファイル名を想定しています。違う名前を付けた場合は変更してください。 なお、選ぶ対象のファイルの総数が 100 ではなくなった場合は変数 file_max を、スライドの枚数が５枚ではなくなった時は変数 slide_max を変更していただくと対処できます。 先述の通り、今回は配列変数 file_list には番号しか入っていませんので、ファイルを読み込む部分も変更が必要です。 「メインの処理」の case 0: のところにある 　//できたムービークリップに画像を読み込む 　load_obj.loadClip( file_list[ i ] + ".jpg" , clip ); の部分を、 　load_obj.loadClip( file_name + file_list[ i ] + ".jpg" , clip ); ↑このように変更してください。 ------------------------------------------------------------ ループ再生は実は簡単で、終了判定をとらずに、最後のスライドまで表示した時はスライドの番号を 0 にし、次のスライドを表示する要領でフェードインを始める case 2: に戻ればいいのです。 スライドの番号は変数 current_pic に入っています。 配列変数は 0 から始まりますから、配列変数の長さを表す file_list.length （この例では 5 ）の剰余を利用すると、if 文で判断しなくても最後のスライドの次に最初のスライドに戻すことができます。 詳しくは省略しますが、current_pic を１つ進めた後で file_list.length による剰余を求めると、 0 → 1 → 2 → 3 → 4 → 0 …という順番を取得できます。 スクリプトにしますと、次のようになります。 「メインの処理」の中の case 5: の部分を、次のように変更してください。 /*****************************************************/ 　//表示中のスライドをフェードアウト 　//最後まで表示したら最初のスライドに戻る 　case 5: 　　//表示中のムービークリップの参照を格納 　　clip = this[ "clip" + current_pic ]; 　　//フェードアウト：アルファを徐々に下げる 　　//0になったら終了 　　clip._alpha -= fade_spd; 　　if( clip._alpha <= 0 ) 　　{ 　　　//このムービークリップを非表示にする 　　　clip._visible = false; 　　　//スライドの番号を更新し、スライドの初期化処理に戻る 　　　current_pic = ( ++current_pic ) % file_list.length; 　　　act_step = 2; 　　} 　　break; /*****************************************************/ 「ムービープレビュー」では、表示比率が”100％”に設定されていると画像が変な位置に表示されることがありますが、HTML に配置した場合や swf ファイルをスタンドアロンプレイヤーで再生した場合はステージの中央に表示されます。 プレビューで表示位置が正しくならない場合は、プレビュー中に「表示」メニュー→「表示比率」で”すべて表示”に設定し、再度プレビューし直してみてください。
＃１です。 for ループと [　] を利用して変数を定義する場合は、型の明示をなしにして 　this[ "str" + i ] = "0"; とすればエラーにならず、変数も定義されます。 var は、他の階層にある変数（ this.str1 のように、実は自分のものだがターゲットパスを記述する場合なども含む）には付けられないことになっています。 [　] で動的に変数を作る場合は必ず左側にターゲットパスを書かなければならないため、var を付けるとエラーになってしまいます。 しかし、変数の型を明示する” : ”演算子は、var と一緒でなければ使用できません。 つまり、for ループと [　] で動的に変数を作る場合、型の明示はできないのだと思います。
「区立ぱらふら予備校」というサイトに詳しい補助説明が載っているようです。 参考にしてみてください。 検索すればすぐ出ると思います。
なんとなく全体的にご質問内容が変なので， まず大前提の根本的な話から整理します。 Flash MX で使用できるのは ActionScript 1.0 だけです。 ActionScript 1.0 には ドキュメントクラス どころか，普通のクラスの概念もほとんどありません。 （実際にはあるのですが使われることはほとんど無かった。） クラスという概念がはっきり登場したのが Flash MX 2004 の ActionScript 2.0 からです。 ドキュメントクラス はありません。 ドキュメントクラス が登場したのは Flash CS3 以降の ActionScript 3.0 からです。 　 ［バージョン］ … ［使用可能言語バージョン］ 　Flash 4 未満 … ActionScript 1.0 未満の言語 　Flash 5 … ActionScript 1.0 だけ 　Flash MX … ActionScript 1.0 だけ 　Flash MX 2004 … ActionScript 2.0 以下 　Flash 8 … ActionScript 2.0 以下 　Flash CS3 … ActionScript 3.0 以下 　Flash CS4 … ActionScript 3.0 以下 しかし...，ですね，，， http://www.flashiroha.com/script/textEffect/as27 … で登場するスクリプトはドキュメントクラスのスクリプトではなく， ActionScript 2.0 の普通のクラスのスクリプトです。 以上が根本的な話です。 > FlashMXでは*.asを指定するということに相当する設定を見つけることができません。 クラスを import できるのは ActionScript 2.0 からですが， 単に外部ASファイルをタイムラインに呼んでくるだけでしたら， #include "ASファイル名" などでできます。 スクリプトを書き換えます。 ファイル構造が次のようになっているとします。 　　任意のフォルダ 　　　├ ○○.fla 　　　└ textEffect.as 「○○.fla」 の フレーム1 のスクリプト -------------------------------- // 「textEffect.as」 をインクルード // 注：行末に「;(セミコロン)」 を入れてはダメ #include "textEffect.as" //文字列 var $str = "ようこそ　私のホームページへ"; //表示位置開始座標 var targetx0 = 30; var targety0 = 70; //Effect開始座標 var x0 = 200; var y0 = 0; var narabi = 0; //文字表示間隔; var kankaku = 32; //文字表示時間差（ミリ秒) var delay0 = 150; //文字format t_fmt = new TextFormat(); t_fmt.color = 0xff0000; //文字色 t_fmt.size = 32; //文字サイズ(ポイント) var randomcolor = 1; //文字初期scale(%) var scalex0 = 0; var scaley0 = 0; //文字初期アルファー値(%) var alpha0 = 50; //文字の回転 var kaitensu = 3; var kakudo = 45; var mawari = +1; //移動の速度 var speed = 4; // 関数 textEffect を実行 textEffect(); -------------------------------- 「textEffect.as」 のスクリプト -------------------------------- function textEffect() { for (var i = 0; i<=$str.length-1; i++) { tE = _root.attachMovie("tField", "tField"+i, i); tE.tF.text = $str.charAt(i); if (randomcolor == 1) { t_fmt.color = Math.random()*255*255*255; } tE.tF.setTextFormat(t_fmt); tE._x = x0; if (narabi == 1) { tE._x = x0+kankaku*i; } tE._y = y0; tE._xscale = scalex0; tE._yscale = scaley0; tE._alpha = alpha0; tE._visible = false; targetx = targetx0+kankaku*i; targety = targety0; delay = delay0*i; textEffect2(tE, targetx, delay, kakudo); } } function textEffect2(tE, targetx, delay, kakudo) { var count:Number; tE.interval = function() { clearInterval(tE.ID); tE.count = 1; tE.onEnterFrame = function() { this._visible = true; this._xscale += (100-this._xscale)/speed; this._yscale += (100-this._yscale)/speed; this._alpha += (100-this._alpha)/speed; this._x += (targetx-this._x)/speed; this._y += (targety-this._y)/speed; this._rotation += mawari*kakudo; if (tE.count*kakudo>=kaitensu*360) { kakudo = 0; } tE.count++; }; }; tE.ID = setInterval(tE, "interval", delay); } -------------------------------- (↑UTF-8が望ましい と思われるが 文字コードによってエラーが出るのでその辺に注意。） 一応上のように変更すると，無事の動作しました。 #include "textEffect.as" の行を消して， 「textEffect.as」 のスクリプトをその部分に書いても動作します。 その場合，ファイルとしての 「textEffect.as」 は不要です。 要するに #include は パブリッシュする際に， 外部ASをその場所に取り込むというだけのものです。 クラスという概念のものではありません。 言うまでもなく， loadVariables関数 や LoadVars.load とも全く別物です。 SWF 生成時に外部ASをその場所に取り込むようにする という Flashオーサリングツールに対する命令文です。
ビルダーは、使用していないので使い方は解りませんが、htmlのソースにて、下記のようなものが入っているか確認して見て下さい。 「○○○」は、swfの名前です。 但し、これはhtmlとswfのフォルダが同じ箇所の場合です。 WIDTHと HEIGHTは、サイズの指定です。 （ご存知かも知れませんが） これが無いのであれば、表示されません。 <OBJECT classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cab … WIDTH="660" HEIGHT="150" id="="○○○" ALIGN=""> <PARAM NAME=movie VALUE="="○○○.swf"> <PARAM NAME=quality VALUE=high> <PARAM NAME=bgcolor VALUE=#FFFFFF> <EMBED src="○○○.swf" quality="high" bgcolor="#FFFFFF" WIDTH="660" HEIGHT="150" NAME="○○○" ALIGN="" TYPE="application/x-shockwave-flash" PLUGINSPAGE="http://www.macromedia.com/go/getflashplayer"></E … </OBJECT>
ステージ上に 「bar_mc」 というインスタンス名のムービークリップを１つ作って， メインタイムライン の フレーム1 に this.bar_mc.scaleX =1; とだけ書いてムービープレビュー this.bar_mc.scaleX =2; とだけ書いてムービープレビュー this.bar_mc.scaleX =3; とだけ書いてムービープレビュー …繰り返し 色々やってみる… などとすれば，原因と答えが見えませんか？ > 設定してある200pxで止まらず 全く 200px という指示（設定）にはなっていません。 scaleX や scaleY は，元の大きさを 1 としたときの比です。 ムービークリップの scaleX を 200 にするということは， 横サイズを 200倍 の大きさにするということになります。
はじめまして。 次のようにするといいんではないでしょうか？ var mc_array:Array = new Array(); for(var i:int=0;i<3;i++){ mc_array[i] = new MovieClip(); }
Flash 5 には UIコンポーネント の前身 「スマートクリップ」 というものが存在していたと思います。 http://www.google.co.jp/search?hl=ja&source=hp&q … その他，このコミュでは次のページが参考になるかもしれません。 「FLASH5でテキストのスクロール」 http://okwave.jp/qa1023283.html
ローカルではhtmlとswfは同じ階層にあるんですね。 サーバー上でも同じでしょうか？ >ソースの表示からしか閲覧できません はい、それでokです<object></object>の部分をコピペしてください もしくは（使用してるswfが「example.swf」という名前だとして） <param name="movie" value="example.swf"> <embed src="example.swf"> という部分の paramのname="movie"が付いているvalueの中と embedのsrcの中をexample.swfに変更 それでパスは通ると思います。
> 何度か試してみたのですがPCでは反映するのですが携帯だと表示がされません。 作られた PC用 Flash の FlashPlayer のバージョンやActionScriptのバージョン， そして作ろうとされている 携帯用Flash の Flash Lite のバージョンも書かれていませんし， 具体的な方法も書かれていませんから，原因は全くわかりません。 原因は無数にありすぎて推測不可能ということです。 少なくとも， 携帯で外部のものをロードするときは， ボタン操作でロードさせる必要がありますよ（一部の Flash Lite 3.x 機種を除く）。 何かボタンを押してからでないと， 何かをロードすることも，他のページにジャンプすることもできないということです。 「KDDI au Flashコンテンツ 技術情報」 http://www.au.kddi.com/ezfactory/mm/flash04-01.h … > [外部ファイルとの連携] > ダイナミックにファイルを読み込むには > ユーザ操作が伴わなければ実行されない為、 > ユーザ操作無しでloadMovie() /loadVariables() が実行されるような > Flash Liteコンテンツを作成した場合には、 > loadMovie() /loadVariables() は無効となり無視して実行されます。 これは パケ代 を支払う身になる ユーザー（閲覧者） を保護するためのセキュリティ上の仕様です。 次から次に色々なページやサイトをロードしたり開いたりすると代金がたくさんかかるでしょう？ その他， そのページの上にもありますが， 「インタラクティブ再生でないと，ボタン操作が無効になる。」 というのも原因になり得ますね。 上記の辺は Flash Lite のバージョンにかかわらない基礎的な部分です。 さらに Flash Lite のバージョンによっては， loadVariables() は使えても LoadVars クラスは使えない とか， ダイナミックテキストに変数名は付けられてもインスタンス名は付けられないとか， いっくらでも原因はありますし，複数の原因が同時にたくさん重なっている可能性もあります。 　～例～ 　インライン再生にしていて 　タイムラインに LoadVars で外部データをロードし 　インスタンス名を付けたテキストフィールドに 　データを表示しようとしている。 ↑こんなのは全くダメです（一部の Flash Lite 3.x 機種を除く）。 全部やりなおしです。
> 上記のサイトのASを3.0に書き換えを教えて頂ければ幸いです。 書き換えると言ってもその前にスクリプトを書く場所を変えないといけませんし， それに応じてムービーの構造自体も変える必要があると思います。 その作り替えたムービーの 「ムービーの構造」 や 「スクリプトを書く場所」 によって， ActionScript は全く変わりますよ。 【下の図】↓ のように， ステージ上に 「menu_0」～「menu_4」 というインスタンス名を付けた５つのムービークリップがあったとします。 その場合で， なおかつそれら５つのムービークリップが存在するフレームにスクリプトを書くのでしたら， 次のようにすればできます。 ------------------------------------------ // 変数 speed の値を -3 に設定 var speed:Number = -3; // 関数 moveMC の定義（毎フレーム実行する関数） function moveMC(evt:Event):void { evt.target.V = evt.target.V*0.8-(evt.target.M-evt.target.y)/speed; evt.target.y += evt.target.V; } // 関数 onOver の定義（ロールオーバーしたときに実行する関数） function onOver(evt:MouseEvent):void { evt.target.y = evt.target.M-10; } // 変数 i を 0～4 で 1 ずつ加算してループ for (var i:int=0; i<=4; i++) { // menu_○ 内の変数 V に 0 を代入 this["menu_"+i].V = 0; // menu_○ 内の変数 M に menu_○ の 初期y座標 を記録 this["menu_"+i].M = this["menu_"+i].y; // menu_○ に毎フレーム実行するイベントリスナーを登録 this["menu_"+i].addEventListener(Event.ENTER_FRAME,moveMC); // menu_○ にロールオーバー時に実行するイベントリスナーを登録 this["menu_"+i].addEventListener(MouseEvent.ROLL_OVER,onOver); } ------------------------------------------ 参考：「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&source=hp&q … ＝＝＝＝＝＝＝ ５つのムービークリップ内のタイムラインのフレームにスクリプトを書く場合は当然スクリプトは変わります。 また， ヘルプなどにあるようなドキュメントクラスのクラスファイルにする場合も当然スクリプトは変わります。 その他， MovieClipクラスを継承するようなカスタムクラスを作る場合も当然スクリプトは変わります。
額縁がgoweb_btn2ですか？ そしたら額縁の外に画像を読み込んでるからじゃないでしょうか SimpleImageLoaderのthisを、goweb_btn2に変更してみるとか。 as3でgoweb_btn2.useHandCursor = true;って出来ましたっけ？
携帯で対応してるFlashのバージョンが、4とか6とかみたいです。 Flexで作ったFlashは9が必要なので無理ですね。 そのうち対応できる携帯も出てくるとは思いますが。
まず、解決策から説明しますが、 下記のように関数slideStartと関数dataCompleteHandlerを別に分けて書けば一度のTimerの呼び出しにつき、dataCompleteHandlerは一度しか呼び出されません。 ------------------------------------------------------ function slideStart(event:Event):void { var largeRequest:URLRequest=new URLRequest(dataArr[count]); largeLoader.load(largeRequest); largeLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, dataCompleteHandler); } function dataCompleteHandler(event:Event) { trace("画像読み込み完了"); count++; } ------------------------------------------------------ 関数内に関数を書く記述はこういったケースではあまりお勧めはしませんが、どうしてdataCompleteHandlerの呼び出しが重複されていたのか、というと... ------------------------------------------------------ largeLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, dataCompleteHandler); ------------------------------------------------------ 上記で行ったイベントリスナーの登録が消えずに残ってしまっているため、slideStart関数が２回目以降に呼び出される時は２重に追加されていきます。読み込み完了後の処理がすべて同一であれば、addEventListenerの定義は一度だけでいいので、slideStart関数の外に書くか、読み込み完了のタイミングでremoveEventListenerを使用して削除しましょう。
１の方の回答です。 同じことをしようとして調べましたが、今のところ見つかりませんでした。 ちょっとめんどくさくなりますが、HorizontalListでItemRendererをカスタマイズして使えば可能です。
var s:String = loader.data as String; var t:Array = s.split(/\n/); のように、改行文字で分割しないといけません
・フレームを2倍にする でも作り直したほうが早かったりします。
ステージ上 に 「hanabira1」 と 「hanabira2」 というインスタンス名のムービークリップがあるものとします。 まずタイムラインを２フレームにします。 花びらを置いたフレームはそのままで， スクリプトを書くレイヤーをそれぞれキーフレームに変換します 【図↓】。 少し現代風に書くのでしたら次のようにすると思います。 フレーム1 --------------------------------- for (i=1; i<=2; i++) { eval("hanabira" add i)._rotation += 5; } --------------------------------- フレーム2 --------------- gotoAndPlay(1); --------------- 古い(本来の)書き方風にすると次のようになります。 フレーム1 ---------------------------------------------- for (i=1; i<=2; i++) { setProperty("hanabira" add i, _rotation, getProperty("hanabira" add i, _rotation)+5); } ---------------------------------------------- フレーム2 --------------- gotoAndPlay(1); --------------- １つ目のスクリプトの欠点はドットシンタックスによるターゲットパスの記述です。 Flash Lite 1.x ではスラッシュシンタックスによるターゲットパスを使うのが本来の書き方です。 上記の場合はドットシンタックスでも動くのですが， 場合によっては動作しないケースもあります。 スラッシュシンタックスに統一する方が混乱が少なくなると思います。 ２つ目のスクリプトの欠点は「見慣れない」＆「回りくどい」という点です。 Flash Lite 1.x 言語には，本来メソッドなどというものはなくて，関数でアクションを指定します。 つまりオブジェクトや値は関数の引数に入る場合がほとんどです。 // ターゲット(MC) の 指定プロパティ に値をセット setProperty(ターゲット , プロパティ , 値) // ターゲット(MC) の 指定プロパティ の値をゲット getProperty(ターゲット , プロパティ) この２つの組合せです。 　//setProperty(ターゲット, プロパティ, getProperty(ターゲット, プロパティ)) 　setProperty("hanabira" add i, _rotation, getProperty("hanabira" add i, _rotation)+5); 形が Excel の関数に似ています。 　' A1セルの値を文字列にしてその文字列の左から3文字を返す 　=LEFT(TEXT(A1,0),3) 関数ばかりなので，引数にぐちゃぐちゃ色んなものが入りこみます。 したがって長くて非常にわかりにくくなりがちですが， こちらの方が Flash Lite 1.x の本来の書き方です。 getProperty で得られる値を変数化しておけば長くなるのはある程度解消されますが...。 また，間違った書き方だと思いますが，なぜか動作するものもあります。 フレーム1 ---------------------------- for (i=1; i<=2; i++) { tellTarget ("hanabira" add i) { _rotation += 5; } } ---------------------------- フレーム2 --------------- gotoAndPlay(1); --------------- tellTarget の使い方として意味的におかしいと思いますが，動くことは動きます。 (setProperty や getProperty が使えない ParaFla! 系ソフトはこれを使う） とにかくどの場合にしても， フレームを2フレームにして，フレーム1と2をグルグルループ再生させることで， 1フレーム進む時間ごとに毎回 5 どずつ回転させます。 しかし何にしても上のような方法をとると， メインのタイムラインをフレーム3以降に進めることができなくなってしまいます。 メインのタイムラインをフレーム3以降に進めた上で， 上のようなスクリプトを随時動作させたい場合は，ムービークリップを使います。 ムービークリップの中に花びらを置いて， ムービークリップ内のフレームをループさせて， メインのタイムラインでは別のアニメーションを動かすようにするのが１つの方法です。 　メインのタイムライン 　　　└ムービークリップ 　　　　　　├hanabira1 　　　　　　└hanabira2 また， 花びらはそのままで， スクリプト記述用のムービークリップ(指令塔)を作成して， そのムービークリップ(指令塔)内のフレームをループさせて， メインのタイムラインに置いた花びらを回転さるのも１つの方法です。 　メインのタイムライン 　　　├hanabira1 　　　├hanabira2 　　　└ムービークリップ(指令塔) その場合， ムービークリップ(指令塔)内に書くスクリプト例【絶対パス】 ムービークリップ内フレーム1 ---------------------------------------------- for (i=1; i<=2; i++) { setProperty("/hanabira" add i, _rotation, getProperty("/hanabira" add i, _rotation)+5); } ---------------------------------------------- ムービークリップ内フレーム2 --------------- gotoAndPlay(1); --------------- ムービークリップ(指令塔)内に書くスクリプト例【相対パス】 ムービークリップ内フレーム1 ---------------------------------------------- for (i=1; i<=2; i++) { setProperty("../hanabira" add i, _rotation, getProperty("../hanabira" add i, _rotation)+5); } ---------------------------------------------- ムービークリップ内フレーム2 --------------- gotoAndPlay(1); --------------- "/hanabira" は "_root.hanabira" と同じ意味です。 "../hanabira" は "_parent.hanabira" と同じ意味です。 スラッシュシンタックスによるターゲットパスの表記は，HTML のリンクの表記と良く似ています。 ただし 「./ (同階層(this))」 はありません。 同階層はパスを無記入にします。 （"./hanabira" という書き方はない。 "hanabira" にする。） （"./" という書き方はない。 "" にする。） 例えば指令塔を作らず， 「hanabira1」 や 「hanabira2」 内を２フレームにして， 自分自身を回転させる場合， フレーム1 に書くスクリプトは次のようになります。 ムービークリップ内フレーム1 ---------------------------------------------- setProperty("", _rotation, getProperty("", _rotation)+5); ---------------------------------------------- ムービークリップ内フレーム2 --------------- gotoAndPlay(1); --------------- もし 「hanabira1」 と 「hanabira2」 が同じシンボルである場合， 「hanabira1」 と 「hanabira2」 は自動的に同じ構造を持つことになりますから， こうすれば，そもそも for文 は不要になります。 長くなりましたが， 色々なケースでの色々な書き方を書きました。
書かれていらっしゃるサンプルとやらはここからDLできる分ですね↓。 http://hfm-kenchan.com/Lesson/contents/s868.htm > アクションスクリプトに詳しい方 > よろしくお願いします。 と言いますか，スクリプトに詳しい詳しくないではなくて， 3D座標系をどうするかを 「考えるアイデア」 の問題だと思います。 アイデア に沿って コーディング するわけですから アイデア＝方針 によって変わると思います。 上記URLからDLできるサンプルでは， 決まった座標系（透視変換の座標系）があるのです。 > 画面の中央に来た写真をクリックすると拡大表示されて、 > マウスが写真上からなくなると元に戻るようにしたい という状態は， 完璧にこの座標系（透視変換の座標系）から逸脱した（はみだした）ものだと思います。 その 座標系 からはみだすのでしたら， いっそのこと，別のものを作り出せば簡単になると思います。 ↑というのは私の勝手なアイデアですよ。 　 全く別の対処法もあると思います。 　 ＡＳに詳しいか詳しくないかではなくて 　 どうするかを考える路線によってスクリプトは変わります。 上記URLからDLできるサンプルの > var ax :Array = new Array();// x 座標計算 > var az :Array = new Array();// z 　〃 > > //----------------------------------// > > /* 座標（x,y,z）, 中心（cx,cy）, 視点（f） を与えると、 > 　　x, y 座標とスケール s を持つオブジェクトを返す関数 */ > function func_projection ( px :Number, py :Number, pz :Number, cx :Number, cy :Number, f :Number ) :Object { という部分に１行付け足します↓。 var ax :Array = new Array();// x 座標計算 var az :Array = new Array();// z 　〃 //----------------------------------// // ★付け加え // 変数 select_mc に現在選択されている MC の名前を記録 var select_mc:String = "box0_0"; /* 座標（x,y,z）, 中心（cx,cy）, 視点（f） を与えると、 　　x, y 座標とスケール s を持つオブジェクトを返す関数 */ function func_projection ( px :Number, py :Number, pz :Number, cx :Number, cy :Number, f :Number ) :Object { そして， > mc.onPress = function ( ) {// マウスで押したとき > nx = this.i;// 列番号 > >nz[ this.i ] = this.k;// 奥行き番号 > } という部分を次のようにします。 mc.onPress = function ( ) {// マウスで押したとき nx = this.i;// 列番号 // もし 変数 select_mc にこのMCの名前が入っていれば if(select_mc == this._name){ // このMC を「new_mc」という名で最高深度に複製 this.duplicateMovieClip("new_mc",_root.getNextHighestDepth()); // 「new_mc」に１フレーム進む時間毎に毎回実行する関数を定義 new_mc.onEnterFrame = function(){ // サイズを 200％ に近付ける this._xscale += (200-this._xscale)/5; this._yscale += (200-this._yscale)/5; } // 「new_mc」からロールアウトしたときに実行する関数を定義 new_mc.onRollOut = new_mc.onDragOut = function(){ // このMCを消す this.removeMovieClip(); } }else{ select_mc = this._name; } for ( var i = 0; i < yoko; i ++ ) nz[ i ] = 0;// 全列の奥行き初期化（列が変わっても戻さない場合は、このループをコメントアウトする） nz[ this.i ] = this.k;// 奥行き番号 } 3D座標系からはみだすのですから， 独自のMC（ムービークリップ）「new_mc」をコピーで作ってしまって， 全く別の動作をさせるという内容です。 ※あくまでも DL できる FLA の書き換えです。 なお，duplicateMovieClip でコピーした 「new_mc」 には， > 各BOXごとにムービクリップローダーで外部から > イメージ写真を読み込ませるところまでできた という写真がロードされていないと思います。 ですから， この 「new_mc」 には再度イメージ写真をロードさせる必要があると思います。
Resource Hacker(リソースハッカー) でできますよ。 http://www.ne.jp/asahi/maoce/pc-life/memo/images … http://www.sd-dream.com/toolinside/vol064.html
duplicateMovieClip で階層を越えてムービークリップをコピーすることはできません。 というか，ActionScript 1.0 と 2.0 では階層を越えてムービークリップをコピーすることはできません。 シンボルに識別子を付けて attachMovie するなどの方法をとる必要があります。 リンケージとは？ http://1art.jp/flash2/chapter/33/33.htm
>貼り付け動作を見ると正常に動作し どの状態で正常動作しているのでしょうか？ FLASHのプレビューですか？ SWFにしてHPに貼り付けた後、ローカルででしょうか？ 前者の場合、書き出しのPlayerのバージョンがあって居ないのかも。 後者の場合は、htmlの書き方がまずいのかも・・・
Flash 作成において最も重要な「バージョン」の記述が抜けていますよ。 いったいどのような状況でそのようなエラーが出たのでしょうか？ つまり 「その状況」 に問題があると思います。 書かれていらっしゃるスクリプトは， どう見ても ActionScript 3.0 (の少し間違い入り) です。 少なくとも ActionScript 3.0 を使用できる Flash のバージョンを持っている必要があります。 ActionScript 3.0 を使用できる Flash のバージョン とは， 現在 Flash CS3 と Flash CS4 です。 たとえば Flash 8 では ActionScript 3.0 は使えないので Flash 8 ActionScript 2.0 設定では ----------------------------- **エラー** シーン = シーン 1, レイヤー = レイヤー 1, フレーム = 1 :行 10:クラスまたはインターフェイス 'Event' をロードできませんでした。 function scroll (event:Event) :Void { ActionScript エラー数 :1 報告済みエラー :1 ----------------------------- というエラーが出ます（＝当たり前です）。 Flash CS3 や Flash CS4 であっても， パブリッシュ設定で ActionScript のバージョンを ActionScript 2.0 や 1.0 にすると， ----------------------------- クラスまたはインターフェイス 'Event' をロードできませんでした。 function scroll (event:Event) :Void { ----------------------------- というエラーが出ます。 ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ちなみに， スクリプトで１箇所確実に間違っている部分があります。 //マウスのX座標によってスクロール値が動的に変化する function scroll (event:Event) :Void { 　　　↓訂正↓ //マウスのX座標によってスクロール値が動的に変化する function scroll(event:Event):void { ActionScript 3.0 では，Void ではなく void が正解です。 Flash CS3 または Flash CS4 をお持ちで， なおかつ パブリッシュ設定で Player のバージョンを Flash Player 9 または 10 にして， なおかつ パブリッシュ設定で ActionScript のバージョンを ActionScript 3.0 にして， なおかつ ステージ上に 「photos_mc」 というインスタンス名のムービークリップを用意して， なおかつ メインのタイムラインのフレームに次のようなスクリプトを書けばエラーは出ません。 ----------------------------------------- //ステージの幅の中心を求める変数を作成 var stageCenter:Number=stage.stageWidth/2; //スクロール終点のX座標を求める変数を作成 var scroolEnd:Number=stage.stageWidth-this.width; //イベントリスナーを登録 photos_mc.addEventListener(Event.ENTER_FRAME,scroll); //マウスのX座標によってスクロール値が動的に変化する function scroll(event:Event):void { var scrollValue:Number = (stageCenter-stage.mouseX) *0.05; this.x+=scrollValue; //この行に次の「手順3」のif文を記述する } ----------------------------------------- ただし， this.width や this.x の this とは何なのか。 このthisの示すものによってスクリプトを書く場所などを変える必要があるように思います。 つまり this が何を指すのかは作者でないとそれを使っている意図がわかりません。 メインのタイムラインのフレームに書くべきスクリプトかどうかは知りませんが， 仮に メインのタイムラインのフレームに上のスクリプトを書けば， エラーも出ませんし，なんとなくそれっぽい動きはします。 ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ Flash は超高速に進化し続けているソフトです。 昔も今もできることや仕様が変わらないという死んだようなソフトではありません。 とにかく最も重要なのは「バージョン」です。 「void」 や 「this」 など細かいことはその後です。
追加 参考URLをご覧ください。 対処方法をSTEPに従って確認 Flash Play*rのアドオンが有効に設定されているか確認 Internet Explorerのセキュリティーの設定を「既定」に戻す。 新規ユーザーアカウントを作成し試す。 該当のソフトウェアがインストールされていませんか？ http://www.adobe.com/jp/support/kb/ts/228/ts_228 … セキュリティレベルが高い場合場合、カスタムレベルに設定（「署名済み ActiveX コントロールのダウンロード」および「Active X コントロールとプラグインの実行」「有効にする」および「ダイアログを表示する」設定）の場合、ActiveX コントロールが表示できないことあり。 アドミ権限でログインしインストール。 ビデオカードドライバの更新 参考URL：http://search.vaio.sony.co.jp/solution/S07021410 …
MCをクリックしたかどうか判定する変数を作っておけば モーションのきりのいいところでif文を使って分岐できますー クリックされてなかったらループ継続で、クリックされてたらページを切り替えます
なんでhtmlファイル？ データのやり取りならtextやxmlとかの方がいいと思うんだが。 取得するhtmlファイルってのはもしかして他人のサイトのものなのかな？ だとするとサーバサイドでアプリを作らないと無理なんじゃないかな‥クロスドメイン的に。 と、フラッシュを使ったことがない人が一般論を申しております。
とりあえずは次のページをご参考に↓。 「*ここのthisは何を指しているのか？LoadVars()の攻略」 http://hima.chu.jp/flash/tips/whatisthis.htm 理由は上記ページに書いてあるようなことです。 また対処法も 「オブジェクトに独自変数を付け加える」 という方法と， 「オススメできないが_globalにする」 という方法を書かれています。 私は次のようにしています。 --------------------------------- this.phad=new LoadVars(); this.phad.load("photoadress.txt"); // このタイムラインの this を変数化 Me = this; this.phad.onLoad = function(suc) { if(suc){ Me.checker.text="s"; //※ } }; ---------------------------------
object{ outline:none; } で消えるかな？
SAYKAの書いている通り AIRはインストールする様なクライアントアプリを作るためのものです ディスクトップアプリを作るならAIRだけで作れますけど Webアプリの場合には主にインターフェース周りの部分 JAVAでいったら主にJSPとjavascript部分ですから Web系のアプリを作りたいならサーバサイド側の処理が作れる 言語は必要ですよ
例えば Google のページを別窓で開くスクリプトを あえて強引に １行 で書ききってしまうと次のようになります。 navi_btn.addEventListener(MouseEvent.CLICK, function(){navigateToURL(new URLRequest("エイチttp://ダブリューww.google.co.jp/"),"_blank")}); ※ エイチ=h , ダブリュー =w です。 １行 で書ききってしまうのではなく， バラしてちゃんと書けば次のようになります。 ------------------------------------------------------ var url_str:String="エイチttp://ダブリューww.google.co.jp/"; var url_req:URLRequest=new URLRequest(url_str); navi_btn.addEventListener(MouseEvent.CLICK, openGoogle); function openGoogle(evt:MouseEvent):void { navigateToURL( url_req); } ------------------------------------------------------
引用先のURL ( http://f9.aaa.livedoor.jp/~poweromp/menu2.html ) も含めて参考になりますでしょうか↓。 「携帯アイコンメニューのフォーカスのデフォルト位置を中央にしたい※初心者」 http://oshiete1.goo.ne.jp/qa4321185.html それ以外でも方法はあります。 ボタンをとりあえず縦に並べておいて， ロールオーバーで見せかけのムービークリップを大きくするとか。
別にActionScriptは2.0でも可笑しくないですよ。 実際にActionScriptは3.0を操れる人って、まだまだ少数派でしょうから。（だからこそ、需要も高いのですが） >今日と昨日と明日の日付を表示させる簡単なFlashを作成しようとおもっているのですが、 >中々うまくいきません。 どう巧くいかないのですか？コードも表示されていないと「ここがまずい」とも助言できませんよ。 >できたとしてもFlashが動作するローカル環境の日時が間違っていたら、今日の日付もおかしいのでしょうか？ はい。その通り。もしくはグローバル時間を読み込むかです。 >結局、ActionScriptはJavascriptということでしょうか？ 似ていますが、違います。ActionScript2.0とActionScript3.0も大きく違います。
> ↑のように、外部からビットマップ画像を呼び出して配置しているのですが、 > このビットマップ画像だとマウスクリックなどのインタラクションを持たせることができないので > ムービークリップに差し替えたいのです。 意味がわかりません。 Loader にも Sprite にも addEventListener できると思います。 また MovieClip に変えたければ， new Sprite(); の部分を new MovieClip(); に変えれば良いのではないでしょうか。 変えたところで， addEventListener ができるできないは変わりません。
＞その「パブリッシュに多少時間がかかる」を軽減できる手段はないのでしょうか？ こちらの読み違いでしたら申し訳ないのですが、sho27_2009さんの 「パブリッシュ」という言葉に対する認識が「swfファイルの再生」であるように感じられました。 「パブリッシュ」とはflaファイルやasファイルから実行形式のファイル(swf)を作成することを言います。他の言語でいうところのコンパイルのようなものです。 もしこれを早くしたいというのであれば、それはお使いになっているPCの性能によると思いますので、最新のマシンに買い換えるくらいしか思いつきません。 ご質問の内容の意味が、「再生開始時に最初から画像が表示された状態にしたい」ということであれば、startViewで表示する画像とは別に、画像を最初に配置し、表示後数秒たってからstartViewを呼ぶことにすればよいと思います。 1.startViewを直接呼ばず、最初に表示した画像に設定したTweenerのonCompleteで実行するようにします。 2.1で配置した画像はstartViewで同じ画像が表示されるタイミングで削除します。 ※例として3番目に表示する画像を最初に表示してみました。 　3　⇒　1　⇒　2　⇒　3　⇒　1　・・・となります。 //最初から表示する画像 var myFirstMc:Class = Class(getDefinitionByName("photo03")); var mc:MovieClip = new myFirstMc(); //削除する時にわかりやすいように名前を付けておく mc.name = "first"; //配置 main_mc.addChild (mc); //最初の画像を一秒間表示後にstartViewを呼ぶ Tweener.addTween(mc, { alpha:1, onComplete:startView, time:1, delay:0 }); function startView():void{ for (var i:int=1; i<=3; i++) { var mc_str:String = "photo0" + i; var myClassMc:Class = Class(getDefinitionByName(mc_str)); var myMc:MovieClip = new myClassMc(); main_mc.addChild (myMc); myMc.visible = false; myMc.name = mc_str; tween (myMc,i); } } function tween (MC:MovieClip, num:Number):void { trace(num); var _num:Number = num - 1; if (num >= 1) { trace (_num+"枚目通過"); Tweener.addTween(MC, { alpha:0, onComplete:function():void{MC.visible=true;}, time:0, delay:1+(_num*5) }); trace (_num+"枚目終わり"); if (num <= 2){ Tweener.addTween (MC, { alpha:1, transition:"linear", time:1, delay:1+(_num*5) }); trace (_num+"枚目準備完了！"); }else{ //ここを追加 //最初に表示した画像を取得 var mcFirst:MovieClip = MovieClip(getChildByName("first")); //あれば削除 if (mcFirst != null){ main_mc.removeChild(mc); } //ここまで Tweener.addTween (MC, { alpha:1, transition:"linear", time:1, onComplete:startView, delay:1+(_num*5) }); trace (_num+"枚目準備完了！"); } } } いかがでしょうか？
LocalConnection でできるのではないでしょうか。 Google検索「LocalConnection」 http://www.google.co.jp/search?hl=ja&q=LocalConn …​ SharedObject経由でもできないことはないと思います。 Google検索「SharedObject.flush」 http://www.google.co.jp/search?hl=ja&q=SharedObj …​
説明が難しいですが。 とりあえず 【下の図】↓ のようなものをイメージすれば良いと思います。 親ムービークリップ内に、 「photo●.jpg」と同じ大きさの塗り入りムービークリップを２つ作成して、別々のレイヤーに配置します。 下レイヤーのムービークリップに例えば 「load_mc」 というインスタンス名を付けます。 上レイヤーのムービークリップにはインスタンス名を付けないでおきます。 そして上レイヤー側をマスクレイヤーにします。 　階層構造 　_root(メインのタイムライン) 　　└親ムービークリップ 　　　　　├無名ムービークリップ(マスク) 　　　　　└load_mc その親ムービークリップ内のタイムラインを例えば40フレームくらいにして、 ２つのレイヤーの最終フレームをキーフレームにして、 無名ムービークリップ(マスク) を大きく下からモーショントゥイーンで動かします。 load_mc を小さく下からモーショントゥイーンで動かします。 そして、 親ムービークリップ内の最終フレームには、 ループ再生しないように、 stop(); を書いておきます。 メインのタイムラインの編集に戻って、 上で作成した 親ムービークリップ をコピペで２つに増やし、 これまた別々のレイヤーに配置します。 どっちがどっちでも良いのですが、 片方の 親ムービークリップ には例えば 「mc0」 というインスタンス名を付けます。 もう片方の 親ムービークリップ には例えば 「mc1」 というインスタンス名を付けます。 そしてActionScriptを書くためのレイヤーも作ります。 　メインのタイムライン 　レイヤー 3　筆・・・|○| ←ActionScriptを書く 　レイヤー 2　筆・・・|●| ←「mc1」(または「mc0」) 　レイヤー 1　筆・・・|●| ←「mc0」(または「mc1」) 　階層構造 　_root(メインのタイムライン) 　　├mc1 　　│　├無名ムービークリップ(マスク) 　　│　└load_mc 　　└mc0 　　　　├無名ムービークリップ(マスク) 　　　　└load_mc そして、 メインのタイムラインのActionScriptを書くキーフレームに 次のようなスクリプトを書きます(コピペOK)。 ------------------------------------------------------ // 写真を表示する間隔を設定（単位：ミリ秒） var interval:Number = 5000; // ムービークリップ番号の初期化 var mc_num:Number = 0; // ムービークリップ番号の初期化 var jpg_num:Number = 0; // 関数 loadJPG の定義 function loadJPG():Void { // mc_num が 1 であれば 0 に 0 であれば 1 にする mc_num = (mc_num == 1) ? 0 : 1; // jpg_num が 4 未満であれば 1 を加算 そうでなければ 1 にする jpg_num = (jpg_num<4) ? jpg_num+1 : 1; // mc○ を 深度0 に移動 _root["mc"+mc_num].swapDepths(0); // mc○ 内のフレームを 1 へ戻して再生 _root["mc"+mc_num].gotoAndPlay(1); // mc○ 内の load_mc に photo●.jpg をロード loadMovie("photo"+jpg_num+".jpg", "mc"+mc_num+".load_mc"); } // 関数 loadJPG を初回実行 loadJPG(); // 関数 loadJPG を interval ミリ秒間隔で実行 var myID:Number = setInterval(loadJPG, interval); ------------------------------------------------------ 深度0 というのは、 ActionScriptでしか配置できない、上の上のレイヤーのような場所です。 つまり ActionScriptでしか配置できないような手前に表示される場所です。 その 深度0（超上のレイヤー） に mc0 と mc1 を交互に移動させて、 その中の「load_mc」にJPEGをロードさせるということです。 とにかく「先にイメージありき」です。 そういうイメージがあればActionScriptも簡単に組むことができますし、 また上で書いたスクリプトとは違う書き方もできます。 逆に言えば、 イメージがなければスクリプトは書けないということになりますし、 スクリプト以前に構造も作れないということになります。 「全体をどう動かそうか」というイメージをまずしっかり持つということが大切だと思います。 ちなにみ、 似たような説明が書いてある Q＆A のサイトを見つけました。 GAC[22632] 参考サイトのようなマスクでの表示の切替 http://gac.kir.jp/7/22632 → 回答 004 の方が書かれている最初の URL のページ。 (ココ(教えて！ｇｏｏなど OKWave系)では、自作サンプルの提示は規則上できません。)
Math.atan2() でしょう。 http://www.google.co.jp/search?hl=ja&source=hp&q … ↑検索されるものは ActionScript に限りません。 ? = Math.atan2(Y, X) で求められます。 引数は Y,X の順です。 ちなみに得られる数は ラジアン 単位です。 ただしモニタ上の y座標 は上がマイナス方向ですから， そこが注意点です。 　　　　 -y 　　　　 ↑ 　- x ←　→ +x 　　　　 ↓ 　　　　 y
Flashには、SharedObjectというクッキーに似たものがあります。 最後に読み込んだ画像をさえ覚えておけばいいです。 Google先生で(flash lite sharedobject)で検索 function loadCompletePrefs (SharedObject: mySO) { if (0 == mySO.getSize() ) { // サイズが 0 の場合、データを初期化する必要がある mySO.data.imgPhone = "2jpg"; } else } if(mySO.data.imgPhone == "2jpg") ～ } } } SharedObject.addListener( "Prefs", loadCompletePrefs ); // 共有オブジェクトを作成することができる var Prefs: SharedObject = SharedObject.getLocal("Prefs");
ダイナミックテキストの文字色を変えたい場合は テキストフィールド名.textColor = 0xff0000; などと出来ますが、質問にそぐわぬ回答の予感・・・。 （#の代わりに0x）
＃２ です。 動かせる 「○」 は変形点です。 変形点はFlashオーサリングツール上の FLAファイル にしか存在しない編集上の中心点です。 基準点の 「＋」 は SWF 上で存在する ActionScript 用の中心点で， Adobe(Macromedia) Flash の場合， シンボルに変換した以降は動かすことができません。 (別のFlash作成ソフトであれば動かせるものもあります。) Adobe(Macromedia) Flash の場合は， 基準点の 「＋」 を動かすのではなくて， ムービークリップなどシンボルの中身を動かします【図】↓。
> ifでmcが座標内に入っていたら、ボタンをenabled=trueにする感じでしょうか？ それで良いと思います。 あとは 「いつそうするのか」 が残りますが， これはおそｋらく 「十字キー をアップしたとき」 で良いと思います（十字キー とは何かが不明ですが...）。 メインのタイムライン（_root）に， 「my_btn」 というインスタンス名のボタンと 「my_mc」 というインスタンス名のムービークリップがあったとします。 その場合， メインのタイムライン（_root）のフレームに書くスクリプト例です↓。 ////////////////////////////////////////////////////////////////// // 移動するスピード(px/frame)を設定 var spd:Number = 2; // my_btn の ボタン機能を無効にする my_btn.enabled = false; // キーを監視する用のオブジェクトを作成 var keyLsn:Object = new Object(); // カスタム関数 moveMC を定義 function moveMC(my_x, my_y):Void { // my_mc に毎フレーム実行するイベントハンドラメソッドを定義 my_mc.onEnterFrame = function():Void { // my_x・my_y の値ずつ移動 this._x += my_x; this._y += my_y; }; } // キーが押されたとき実行するイベントハンドラメソッドを定義 keyLsn.onKeyDown = function():Void { // もし「↑」キーが押されていたら if (Key.getCode() == Key.UP) { // カスタム関数 moveMC を実行(上に移動) moveMC(0, -spd); // もし「↓」キーが押されていたら } else if (Key.getCode() == Key.DOWN) { // カスタム関数 moveMC を実行(下に移動) moveMC(0, spd); // もし「←」キーが押されていたら } else if (Key.getCode() == Key.LEFT) { // カスタム関数 moveMC を実行(左に移動) moveMC(-spd, 0); // もし「→」キーが押されていたら } else if (Key.getCode() == Key.RIGHT) { // カスタム関数 moveMC を実行(右に移動) moveMC(spd, 0); } }; // キーが放されたとき実行するイベントハンドラメソッドを定義 keyLsn.onKeyUp = function():Void { // my_mc.onEnterFrame を削除 delete my_mc.onEnterFrame; // // ↓★---ご質問の本題はココの範囲だけ---★↓ // もし my_mc の座標が 10<=x<=50、10<=y<=50 であれば if (my_mc._x>=10 && my_mc._x<=50 && my_mc._y>=10 && my_mc._y<=50) { // my_btn の ボタン機能を有効にする my_btn.enabled = true; // それ以外は } else { // my_btn の ボタン機能を無効にする my_btn.enabled = false; } // ↑★---ご質問の本題はココの範囲だけ---★↑ }; // Keyクラスのリスナーとして keyLsn を登録 Key.addListener(keyLsn); ////////////////////////////////////////////////////////////////// ※「ある座標内(10<=x<=50、10<=y<=50)に入ったとき」 とは， 　 「ムービークリップmy_mc の座標が座標内に入ったとき」 　 すなわち， 　 「ムービークリップmy_mc の基準点の座標が座標内に入ったとき」 　 と解釈した上でのスクリプトです。 もし「ムービークリップの基準点」が 何のことかわからない場合は 次のページをご参考に （「＋」印の位置のことです）。 「インスタンスの基準点」 http://homepage3.nifty.com/ginga-b/MX/inst_refpo … 　
１つ１つ「開く」「名前を付けて保存」を選択。 「ファイルの種類」でCS3を選択。
質問される時は、コードを書いていただくと分かりやすいと思います。 今こんな感じでしょうか？ TENSU_tx.text = countINT; 未定義のcountINTが・・・ ↑型が間違っていませんか？ キャストしていますよね？ var countINT:uint; TENSU_tx.text = String(countINT);
for文はそのフレーム（フレーム1）が表示されたときに実行されますよね。 つまり， 変数 i は フレーム1 が表示されたときに 1→2→3→4→5→6→7→8→9　となり さらに i++ が実行されて i は 10 になるけど i<10 の条件を満たさないので for文 内は実行されず 変数 i の値は 10 で放置されます。 そして，そのずーーーーーーーーーっと後に， エンドユーザの気が向いてボタンがクリックされます。 そのときに変数 i は 10 のまま放置されているので， どのボタン（MC）をクリックしても var photo = "photo"+10+".jpg"; photo_mc.loadMovie(photo); が実行されます。 そうならないようにするためには， そのときの i を別の場所に格納しておく必要がありますが， 簡単なのは作ったMC内に格納しておくことです。 for (var i = 1; i<10; i++) { _root.createEmptyMovieClip("mc"+i, i); // ★↓MC内にそのときの i を格納 _root["mc"+i].n = 1; var load_mc = _root["mc"+i]; load_mc.createEmptyMovieClip("my_mc", 0); var jpg_pcs = "pcs"+i+".jpg"; load_mc.my_mc.loadMovie(jpg_pcs); i = i-1; load_mc._x = i*20; i = i+1; load_mc.onPress = function() { // ★↓格納した値を参照 var photo = "photo"+this.n+".jpg"; photo_mc.loadMovie(photo); }; } ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ >> ボタンを生成したかったのですがわからなくて・・・ ActionScript ではボタンは生成できません。 ムービークリップを生成するので正解です。 ただ， createEmptyMovieClip で MC を生成するのではなく， attachMovie でライブラリの中のMCを呼び出して来て その中にボタンを入れておくことならできます。 しかしーーーー！ それをした場合，今度は画像がロードできなくなりますよ。 loadMovie は MovieClipクラスのメソッドです。 Buttonクラスのメソッドではないのでボタンには外部画像をロードできません。 また， ボタンの中にMCを作成してそのMCに外部画像をロードするのも不可能です。 したがってやはり， ムービークリップを生成するので正解です。
＃１ です。 > ReferenceError: Error #1056: Upload のプロパティ obj00 を作成できません。 > と表示されてしまいます。 例えばファイルの構造を次のようにして， 　任意のフォルダ 　　　　├名称未設定-1.fla (ファイル名は何でも良いです) 　　　　└00.jpg 「名称未設定-1.fla」 のフレーム1 ------------------------------------ var bn:String="00"; this["obj"+bn] = new Loader(); this["obj"+bn].load(new URLRequest(bn+".jpg")); addChild(this["obj"+bn]); ------------------------------------ そして 「制御」→「ムービープレビュー」。 何のエラーもなくパブリッシュ＆動作検証できますよ。 クラスファイルの中とか， 書く場所などの条件が関係するのではないでしょうか。 「this」 は場合によって変わります。
最新版と言うことは、バージョン１０ですか？ 一般的なユーザーは、多分６～８位じゃないかな？　特にスクリプトを使用していないのであれば、バージョンを下げて書き出されては、いかが？ パブリッシュ設定で「swf」のタブを選択すれば、書き出しバージョンが選択できる様になりますよ。 >Flashを作る際に、最初の画面でアクションスクリプトの3.0を選んでしまったのがいけなかったのでしょうか。 もし、AS2.0で作り直し（又は3.0→2.0へ書き換え？）をした場合、 スクリプトを使わないのであれば、２．０で制作された方がいいでしょうが、既に制作した物を書き換えは出来ないと思いますよ。 無理矢理するのならば、２．０を新規で作成し、３．０で作ったフレームをコピーして貼り付けるくらいでしょうか。^^;
よくわかりませんが， 「else」を使っているのでその前の if が実行されるからではないでしょうか？ たとえば， 　if (AAA) { 　　　　aaa; 　} else if (BBB) { 　　　　bbb; 　} else if (CCC) { 　　　　ccc; 　} この場合， AAA の条件が成立しても(true になっても) BBB の条件が成立しても CCCの条件がどうであれ ccc は実行されません。 「else」 は 「それ以外で」 とか 「上の条件が成立しない場合に」 とかいう意味ですから。 AAA の条件が成立してもしなくても BBB の条件が成立してもしなくても そんなこととは関係なく CCCの条件が成立したときに ccc を実行したい場合は， 　if (AAA) { 　　　　aaa; 　} 　if (BBB) { 　　　　bbb; 　} 　if (CCC) { 　　　　ccc; 　} とすべきでしょう。 AAA の条件が成立した場合に限って， さらになおかつ BBB の条件が成立した場合に限って， CCCの条件が成立したときに ccc を実行したい場合は， 　if (AAA) { 　　　　aaa; 　　　　if (BBB) { 　　　　　　　bbb; 　　　　　　　if (CCC) { 　　　　　　　　　　ccc; 　　　　　　　} 　　　　} 　} とすべきでしょう。 上のものの変形バージョンとして， AAA の条件が成立した場合に限って， さらになおかつ BBB の条件が成立した場合に限って， CCCの条件が成立したときに aaa も bbb も ccc も実行したい場合は， 　if (AAA) { 　　　　if (BBB) { 　　　　　　　if (CCC) { 　　　　　　　　　　aaa; 　　　　　　　　　　bbb; 　　　　　　　　　　ccc; 　　　　　　　} 　　　　} 　} と書くことになります。 この場合は全く同じ意味として次のように書くこともできます。 　if (AAA && BBB && CCC) { 　　　　aaa; 　　　　bbb; 　　　　ccc; 　} ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 「そんなことを言っているのじゃない！」 と思われるかもしれませんが， ご質問で書かれている状態では他に何とも原因が特定できません。 たとえば 　MCに「about5」というインスタンス名を付け忘れている。 とか 　MCに「about5」ではないインスタンス名を間違えて付けいる。 とか 　MC「about5」のフレーム6でクリックしているつもりで 　実はフレーム7でクリックしている。 とか そういう可能性もあります。 しかしそういうことは わかりませんよね。 そういうことは一切ないとした場合，「else」を疑うしかなくなります。
書かれていらっしゃるページに書いてあるとおり作成しましたが， 別に難なく動作しましたよ。 特に間違っている部分はないと思います。 ただ，CS4 の場合は， > ●star2編集画面でstar2を選択してシンボルに変換（star0とでも名付ける）し、 > タイムラインでFRAME10、20をキーフレームに変換、 > FRAME0-10、10-20でモーショントウイーンを作成する の部分の「モーショントウイーン」を「クラシックトウイーン」に読み替える程度です。 しかしこれは「瞬く星」だけに関することですから， 「流れ星」や「背景の小さな瞬かない星」には影響しないことです。 > 実行しても特に星が表示されることもなく、背景のみの状態になってしまいます。 と書かれていらっしゃいますが， これは 「流れ星」 だけではなく，全ての星も表示されないということでしょうか？ そうでしたら 「リンケージ名」 を理解していないということかもしれません。 ページの説明に 「リンケージ名」 が度々出てきます。 たとえば流れ星の部分の説明です↓。 > ●「挿入」「新規シンボル」でシンボル名ns、リンケージ名nsとし、 これは 【下の図】↓ のようにするということです。 正確に言えば 「リンケージ名」 を付けるのではなくて， リンケージ の設定で 「識別子」 を付ける という意味です。 なお，新規シンボルを作成後であっても， ライブラリの中のシンボルを選択して， そのシンボルを「右クリック」→「プロパティ」辺りで命名することや命名し直すことはできます。 ちなみにその下に続く， > それぞれをシンボルに変換し、それぞれのインスタンス名を　mask, line とする。 これは 「リンケージ名（識別子）」 ではなく 「インスタンス名」 です。 四角い塗りを選択し， 「修正」→「シンボルに変換」で「ムービークリップ」に変換して， そのムービークリップになった四角い塗りを選択した状態で， プロパティパネルより「mask」というインスタンス名を付けてください。 また， 線を選択し， 「修正」→「シンボルに変換」で「ムービークリップ」に変換して， そのムービークリップになった線を選択した状態で， プロパティパネルより「line」というインスタンス名を付けてください。 という意味です。
> ５フレーム目の絵が表示されている状態で、 > クローズボタンをクリックすると、 > メインタイムラインに配置したアイコン(item)が > 表示される仕組みにしたい item が登場するフレームに item._visible = false; と書いてitemを非表示状態にしておいて， クローズボタンのボタンインスタンスには， on (release) { if (about1._currentframe == 5) { item._visible = true; } } と書けば良いと思いますが...。
＃１ です。 > 作成したメールボタン(btn1）を押すとメール画面へ。 > 電話番号ボタン(btn2)を押すと、電話がかけられるようにしたい。というのが希望する動作です。 それでしたら最初から， on (keyPress "<Enter>") ← 「決定ボタンを押したときに実行」 を書く必要がないと思いますよ。 on (release) { getURL("Tel: 0312341234"); } とか on (press) { getURL("Tel: 0312341234"); } で良いのではないでしょうか？ （一方しか書いていませんが両方のボタンともです。）
まずは1つ目の点をクリアしましょう。 それができなければ２つ目にも進めません。 逆に言うと、一つ目の点が理解できれば２つ目の点もクリアできるはずです。 とりあえず、基本的な考え方のみ説明いたしますと、 こういった流れる系統のインターフェースの場合、表示されている画像のリストを配列で管理することが多いです。 上記のサイトの場合、ウインドウを大きくリサイズすると、表示されていなかった右側のスペースにサムネイルが新たに生成されるのが分かると思います。 つまり、サムネイル画像はそれぞれ自分の座標を監視しておき、ブラウザの外(左側)に出た時点で、removeChildで取り除いて配列からも取り除き、替わりに右側にaddChildで追加される画像を配列に順次追加していきます。 配列で管理しておけば、順番に消すことやに表示させることは容易いことです。 もしもこの考え方を見ても作り方がピンとこない場合は、何ができないのかもう少し細かく問題を切り分けてみた方が良いでしょう。
var url:String = "sample.txt"; var myTextBox:TextField = new TextField(); myTextBox.multiline = true; myTextBox.wordWrap = true; addChild (myTextBox); var txtLoader:URLLoader = new URLLoader(); txtLoader.dataFormat = URLLoaderDataFormat.TEXT; txtLoader.addEventListener (Event.COMPLETE, onLoaded); var urlRequest:URLRequest = new URLRequest(url); txtLoader.load (urlRequest); function onLoaded (event:Event):void { myTextBox.text = txtLoader.data; } 参考URL：http://gelsol.sub.jp/examples/urlloader/001.html
タイマー関数を使えば良いと思います。 public function TimerExample() { var myTimer:Timer = new Timer(1000, 2); myTimer.addEventListener("timer", timerHandler); myTimer.start(); } public function timerHandler(event:TimerEvent):void { trace("timerHandler: " + event); }
r=100;//基準となる円の半径です がポイント。 これを縦半径と横半径、別々の変数に分け、 moveToやlineToに使われているX側のrを横半径の変数に、 Y側のrを縦半径の変数に変更すればうまくいくでしょう。 X側とY側がわからない場合はmoveTo・lineToのヘルプをみてください。
阿部さんの部分ですよね。 >このflashバナーを何と呼ぶかが分かりませんので あの～単にFLASHバナーかと・・・・ 構造も至って単純なのですが・・・（スクリプト制御をする必要もないぐらい）逆にスクリプトで作るのは大変だな～ １度、FLASHについているHELPやチャートを読まれて、制作されてはいかがかと・・・^^;
> onDragを使用して ActionScript には onDrag などという言葉は存在しないので何のことかわかりません。 ＝＝＝ ＝＝＝ ＝＝＝ 仮に，メインのタイムライン上にある 「mc0」， 「mc1」， 「mc2」 というインスタンス名を付けたMCを 一気にドラッグしたいとします。 その場合次のようなスクリプトをメインのタイムラインのフレームに書けば一応できます。 ///////////////////////////////////////////////////////////////////// // ドラッグ対象MCのインスタンス名登録用オブジェクトを作成 var name_obj = new Object(); // インスタンス名を登録（例「mc0」「mc1」「mc2」） for (var i:int=0; i<=2; i++) { name_obj["mc"+i]=true; } // ステージにイベントリスナーを登録（マウスダウン時，実行関数onDown） stage.addEventListener(MouseEvent.MOUSE_DOWN,onDown); // 関数 onDown の定義 function onDown(evt:MouseEvent):void { // マウス座標のPointインスタンス pos を作成 var pos:Point=new Point(stage.mouseX,stage.mouseY); // 配列 lst に pos の下にあるオブジェクトを取得 var lst:Array=stage.getObjectsUnderPoint(pos); // 配列 lst の要素数分 ループ for (i=0; i < lst.length; i++) { // obj に pos の下にあるインスタンスを１つずつ取得 var obj:DisplayObject=lst[i].parent; // もし obj の名前が name_obj に登録されていれば if (name_obj[obj.name]) { // そのMC内の変数 down_flg を true にする MovieClip(obj).down_flg=true; // そのMC内の変数に現在のマウスの座標を記録 MovieClip(obj).down_x=obj.mouseX; MovieClip(obj).down_y=obj.mouseY; } } // ステージにイベントリスナーを登録（マウスムーブ時，実行関数onMove） stage.addEventListener(MouseEvent.MOUSE_MOVE,onMove); } // 関数 onMove の定義 function onMove(evt:MouseEvent):void { // インスタンス名を登録した name_obj 内を捜査 for (var str:String in name_obj) { // もし登録インスタンス内の変数 .down_flg が trueであれば if (this[str].down_flg) { // マウスに合わせてそのMCの座標を移動 this[str].x=stage.mouseX-this[str].down_x; this[str].y=stage.mouseY-this[str].down_y; } } // 表示を即更新 evt.updateAfterEvent(); } // ステージにイベントリスナーを登録（マウスアップ時，実行関数onUp） stage.addEventListener(MouseEvent.MOUSE_UP,onUp); // 関数 onUp の定義 function onUp(evt:MouseEvent):void { // インスタンス名を登録した name_obj 内を捜査 for (var str:String in name_obj) { // 登録インスタンス内の変数 .down_flg を false にする this[str].down_flg=false; } // ステージのイベントリスナーを削除（マウスムーブ時，実行関数onMove） stage.removeEventListener(MouseEvent.MOUSE_MOVE,onMove); } ///////////////////////////////////////////////////////////////////// インスタンス名がバラバラである場合は， // ドラッグ対象MCのインスタンス名登録用オブジェクトを作成 var name_obj = new Object(); // インスタンス名を登録 name_obj.ringo_mc = true; name_obj.mikan_mc = true; name_obj.ichigo_mc = true; のように全てを手動登録する必要があります。
ＰＣベースで有ればフリーツールで十分です。 しかしFLASH Lite（携帯向けFLASH）を作るのであれば純正品しか対応しているモノがないと思うので、バイトで頑張って稼いで買ったほうが良いと思います。
> Flash上のプレビューでは問題なく動いています。 ↑ココに問題があります。 XMLオブジェクト.load("XMLファイル") や loadMovie("画像ファイル") などの 「XMLファイル」 や 「画像ファイル」 を，SWFから見たパスにしていますね。 　任意のフォルダ 　　　　└swf（フォルダ） 　　　　　　├orderworks.swf 　　　　　　├○○.jpg（など） 　　　　　　└○○.xml であるとした場合， mｙXML.load("○○.xml") または mｙXML.load("./○○.xml")　などと書かれているでしょう？ という意味です。 load や loadMovie や getURL は "ブラウザに対してのリクエスト" なんです。 「ブラウザが表示している物」つまり「ブラウザの居所」は， 「ブラウザが表示しているページ」＝「ブラウザが表示しているHTML」です。 次のようになっていたとします。 　任意のフォルダ 　　　　├○○.html （○○.swf を表示） 　　　　└swf（フォルダ） 　　　　　　├orderworks.swf 　　　　　　├○○.jpg（など） 　　　　　　└○○.xml この場合， mｙXML.load("swf/○○.xml") または mｙXML.load("./swf/○○.xml")　などと書かなければなりません。 「ブラウザが直表示している物は何なのか」 「そのブラウザが直表示している物から見たパスはどうなのか」 それを意識して ActionScript を書いてみてください。
上記のコードは、どこかのサイトからコピペしたのでしょうか？ 構文エラーになりませんか？ 閉じカッコがなかったりしています。 下記コードの通りにやれば難しくないはずです。 var container: MovieClip = createEmptyMovieClip("container", getNextHighestDepth()); var mcLoader: MovieClipLoader = new MovieClipLoader(); mcLoader.addListener(this); mcLoader.loadClip("YourImage.jpg", container); function onLoadInit(mc: MovieClip) { trace("onLoadInit: " + mc); }
＃１です。 遅くなりました。 > 全てスクリプトで書きたいと考えております。 ということは， ＃１で書いた内容のイメージはほぼそのままで， そのすべてをスクリプトで作成するということになります。 ただ スクリプト で作成する場合は， 特にムービークリップ（MC） で構造を作成する必要はなく， スプライト（Sprite）で十分ということになります。 > 画像の読み込み方法 ということは，外部画像ファイルをロード＆表示させるわけですね。 　任意のフォルダ 　　　├○○.swf 　　　└pic0.jpg このようなファイル構造になっていて， 「pic0.jpg」 は 120×90px の JPEG ファイルだとします。 その場合，＃２の【下の図】↓ のような動きを落書きして考えてみます。 ※ステージ上に図のようなものを置くのではなくて， 　 単なる紙などへの落書きのつもりです。 そして，構造と動きがそうなるように ActionScript を考えます。 ○○.swf（○○.fla）のフレーム1の空白キーフレームに書く場合のスクリプト例です↓。 コピペ可能です。 ///////////////////////////////////////////////////////////////////////// // --- パッケージ付き クラス宣言 ------ // （必要であれば頭の // を取る） //import flash.geom.Rectangle; //import flash.display.*; //import flash.net.URLRequest; //import flash.events.MouseEvent; //import flash.events.Event; // ---初期設定--------- // 拡大縮小するスピードの設定 var spd_w:Number=4; var spd_h:Number=3; // 縮小時のマスクのサイズを設定 var msk_w_min:Number=80; var msk_h_min:Number=60; // 拡大時のマスクのサイズを設定 var msk_w_max:Number=120; var msk_h_max:Number=90; // 縮小時の背景のサイズを設定 var bck_w_min:Number=100; var bck_h_min:Number=80; // 拡大時の背景のサイズを設定 var bck_w_max:Number=140; var bck_h_max:Number=110; // ロードする画像ファイルを設定 var pic_dat0:String="pic0.jpg"; // my_sp0座標の設定 (例：ステージ中央) var sp0_x:Number=stage.stageWidth/2; var sp0_y:Number=stage.stageHeight/2; // ---構造作成--------- // スプライト my_sp0 を作成 var my_sp0:Sprite = new Sprite(); // 背景スプライト bck_sp0 を作成 var bck_sp0:Sprite = new Sprite(); // bck_sp0 に矩形を描画（仮色：赤） bck_sp0.graphics.beginFill(0xFF0000); bck_sp0.graphics.drawRect(-bck_w_min/2, -bck_h_min/2, bck_w_min, bck_h_min); // 画像表示用スプライト pic_sp0 を作成 var pic_sp0:Sprite = new Sprite(); // マスク用スプライト msk_sp0 を作成 var msk_sp0:Sprite = new Sprite(); // msk_sp0 に矩形を描画（仮色：青） msk_sp0.graphics.beginFill(0x0000FF); msk_sp0.graphics.drawRect(-msk_w_min/2, -msk_h_min/2, msk_w_min, msk_h_min); // pic_sp に msk_sp0 のマスクをかける pic_sp0.mask=msk_sp0; // 背景スプライト bck_sp0 を my_sp0 に配置 my_sp0.addChild(bck_sp0); // 画像表示用スプライト pic_sp0 を my_sp0 に配置 my_sp0.addChild(pic_sp0); // マスク用スプライト msk_sp0 を my_sp0 に配置 my_sp0.addChild(msk_sp0); // スプライト my_sp0 の座標を指定 my_sp0.x=sp0_x; my_sp0.y=sp0_y; // スプライト my_sp0 をステージに配置 addChild(my_sp0); // --- 外部画像のロード --------- // URLRequestインスタンス url0 を作成 URLRequest=pic_dat0 var url0:URLRequest=new URLRequest(pic_dat0); // Loaderインスタンス ld0 を作成 var ld0:Loader = new Loader(); // Loaderインスタンスの座標指定 ld0.x=- msk_w_max/2; ld0.y=- msk_h_max/2; // Loaderインスタンスを ld0 に指定画像をロード ld0.load(url0); // Loaderインスタンスをスプライト pic_sp0 内に配置 pic_sp0.addChild(ld0); // ---動きの定義と実行--------- // my_sp0 にイベントリスナーを登録（ロールオーバー時，実行関数onOver） my_sp0.addEventListener(MouseEvent.ROLL_OVER,onOver); // 関数 onOver の定義 function onOver(evt:MouseEvent):void { //my_sp0 のイベントリスナーを削除（毎フレーム実行，実行関数onFrame01） evt.target.removeEventListener(Event.ENTER_FRAME,onFrame01); //my_sp0 にイベントリスナーを登録（毎フレーム実行，実行関数onFrame00） evt.target.addEventListener(Event.ENTER_FRAME,onFrame00); } // 関数 onFrame00 の定義 var onFrame00 = function(evt:Event):void { // 設定スピードずつ拡大 bck_sp0.width+=spd_w; bck_sp0.height+=spd_h; msk_sp0.width+=spd_w; msk_sp0.height+=spd_h; // もし拡大時以上のサイズになれば if (bck_sp0.width >= bck_w_max && msk_sp0.width >= msk_w_max) { // 拡大時サイズで固定 bck_sp0.width=bck_w_max; bck_sp0.height=bck_h_max; msk_sp0.width=msk_w_max; msk_sp0.height=msk_h_max; // my_sp0 のイベントリスナーを削除 evt.target.removeEventListener(Event.ENTER_FRAME,onFrame00); } } // my_sp0 にイベントリスナーを登録（ロールアウト時，実行関数onOut） my_sp0.addEventListener(MouseEvent.ROLL_OUT,onOut); // 関数onOut の定義 function onOut(evt:MouseEvent):void { //my_sp0 のイベントリスナーを削除（毎フレーム実行，実行関数onFrame00） evt.target.removeEventListener(Event.ENTER_FRAME,onFrame00); //my_sp0 にイベントリスナーを登録（毎フレーム実行，実行関数onFrame01） evt.target.addEventListener(Event.ENTER_FRAME,onFrame01); } // 関数 onFrame01 の定義 var onFrame01 = function (evt:Event):void { // 設定スピードずつ縮小 bck_sp0.width-=spd_w; bck_sp0.height-=spd_h; msk_sp0.width-=spd_w; msk_sp0.height-=spd_h; // もし縮小時以下のサイズになれば if (bck_sp0.width <= bck_w_min && msk_sp0.width <= msk_w_min) { // 縮小時サイズで固定 bck_sp0.width=bck_w_min; bck_sp0.height=bck_h_min; msk_sp0.width=msk_w_min; msk_sp0.height=msk_h_min; // my_sp0 のイベントリスナーを削除 evt.target.removeEventListener(Event.ENTER_FRAME,onFrame01); } } ///////////////////////////////////////////////////////////////////////// 以上をコピペしてパブリッシュやムービープレビューすれば 一例のサンプルの出来上がりです。 階層構造は次のようになっています。 　メインのタイムライン 　　　└my_sp0（スプライト） 　　　　　├msk_sp0（マスク用スプライト） 　　　　　├pic_sp0（画像表示用スプライト） 　　　　　└bck_sp0（背景用スプライト） ※「msk_sp0」「pic_sp0」「bck_sp0」はインスタンス名ではなく 　インスタンスを参照するメインのタイムライン上の変数名です。 ※＃１↓(？)↑(？) の【下の図】にイメージ的な図を追加しました。 上のように矩形入りスプライトの入れ子構造を空で考えてスクリプトで書いて作成するより， ムービークリップを手動で作成した方がずっと楽で色々し易いと思いますけどね。 上のスクリプトを書くこと自体も当然そうですし，ここから先を考える場合もそうです。 上のようなものでは実体が見えませんし， インスタンスを参照した変数名という遠隔操作みたいなイメージも要ります。 スクリプトで作成しない場合に手動で作成すると言っても， ムービークリップ３コ入りのムービークリップを１コ作って リンケージでムービークリップを継承するクラスに登録して， そのクラスをスクリプトでコピペ（addChild）すれば良いだけです。 （回答的には，操作手順などを一々説明しなくても良いので，スクリプトで回答する方が楽ですが。） ～～～～～～～～～～～～～～～～～～ まだまだ先の話ですが， 上で作成したもの群を， さらに１つのスプライトまたは１つのムービークリップの中に入れて １つのインスタンスとして全体を動作させるようにするのが一般的です。 　メインのタイムライン 　　└全体のインスタンス（スプライトまたはムービークリップ） 　　　　　├my_sp0（スプライト） 　　　　　│　├msk_sp0（マスク用スプライト） 　　　　　│　├pic_sp0（画像表示用スプライト） 　　　　　│　└bck_sp0（背景用スプライト） 　　　　　├my_sp1（スプライト） 　　　　　│　├msk_sp1（マスク用スプライト） 　　　　　│　├pic_sp1（画像表示用スプライト） 　　　　　│　└bck_sp1（背景用スプライト） 　　　　　…　　　　… さらに各「my_sp○」にロールオーバーしたとき， 全体のインスタンス の中で，各「my_sp○」の表示インデックス順（AS2.0以下で言う深度depth）を入れ替えるようなことも必要でしょう。 表示順の上下(見えないレイヤーみたいなもの)を入れ替えるわけです。 スクリプトはイメージ（構造・平面配置・上下配置・動き）を具体的に想像して そのイメージ通りの構造とデザインが実現するように組まなければならないため，なかなか難しいと思います。 スクリプトが難しいのではなくてイメージが難しいと思うという意味です。 おそらく先は長い長い… だと思います。
＃１ です。 > それでパブリッシュして再生をすると、 > なぜか、うまくいきません。。。 シーン を使ってやっていて勝手にうまく行く方がビックリします。 「なぜか、うまくいきません」ではなく「当然、うまくいきません」だと思います。 あえてうまく行かないことをしているだけです。 シーン など最初から使わなければ良いだけではないでしょうか？ 極々シンプルに単純に考えてそう思いますが。 わざとうまく行かないようにすれば誰だってうまく行きませんよ。 本に書いていようと無かろうと「そう」でしょう？ いちいち「これはシーンは使ってはダメです」など書いていません。 > そういうものが書いてあるお勧めの参考書は無いでしょうか？？ あいにくそういう本の具体的書籍名は知りません。 この「そういう本」とは上で書いた妙な意味の本ではなく， 単純に 「普通の簡単な本」 という意味の本です。 「そういう簡単な本」を長年店頭などで見たことがありませんし，あえて探そうともしてません。 私がそういう本を見ていた頃とは時代が違っていますから，同じ本は出ていないということです。 また，私の場合結構昔からやっているので，毎バージョン毎バージョン「そういう簡単な本」を探すわけがありません。 最近始められた方，つまり初心者の方の方がそういう本を知っていると思います。 また「わからない部分」や「何を知りたいか」も初心者の方の方がずっとわかると思います。 CS4用の本もそろそろだいたい出ていると思いますよ。 自分で「これはできそう」と判断した本を買うのが一番だと思いますよ。 一番肝心なのは，「バージョンを間違えないように買う」ということです。
Flash のマスクは本来 「ベクタ画像の"形"」 でかけるものですから できないのが普通ですし、PNGをマスクにする必要性が特に(あまり)見つからないので、 今までやってみたことはありませんでしたが... しかし、 このご質問を見て実際にやってみましたら、透過(またはアルファ入り)PNGもマスクにできることがわかりました。 ただし条件付きです。 まず、 Suzuka の 「ファイル」→「プロジェクトのプロパティ」で 「SWFバージョン」の項目を 「SWF8」 にする必要があります。 （少なくとも携帯用 SWF4 では無理ということになります。） そして、 レイヤーのマスク機能でマスクをかけるのではなくて、 ActionScript でマスクをかける必要があります。 さらに、 「マスクになるPNG」も「マスクをかけられる画像」も、 両方ともスプライト（ムービークリップ）の中に入れておく必要があります。 「シンボルリスト」内にスプライトを ２つ 追加して、 １つの スプライト 内の編集に入り、 そのスプライト内のレイヤーに、マスクになる PNG を追加します。 もう １つの スプライト 内の編集に入り、 そのスプライト内のレイヤーに、マスクをかける画像を追加します。 その 「PNG入りスプライト」 と 「マスクをかけられる画像入りスプライト」 を メインのレイヤーに追加します。 「PNG入りスプライト」 を配置したレイヤー名の部分をダブルクリックするなどして 「レイヤーのプロパティ」 パネルで任意の インスタンス名 を付けます。 ここでは 「png_mc」 という インスタンス名 を付けることにしておきます。 また、 「マスクをかけられる画像入りスプライト」 を配置したレイヤー名の部分もダブルクリックするなどして 「レイヤーのプロパティ」 パネルで任意の インスタンス名 を付けます。 ここでは 「my_mc」 という インスタンス名 を付けることにしておきます。 メインのタイムラインの一番上のレイヤー名を右クリックするなどして 「アクションレイヤーを挿入」 します。 そのアクションレイヤーのキーフレームを選択して、 キャンバス右側のパネルにある右下の「スクリプトを編集」ボタンをクリックし、 出てくる「スクリプトエディタ」パネルに次のように書きます。 --------------------------------------- // 「png_mc」のビットマップキャッシュを有効にする png_mc.cacheAsBitmap = true; // 「my_mc」のビットマップキャッシュを有効にする my_mc.cacheAsBitmap = true; // 「my_mc」 に 「png_mc」 のマスクをかける my_mc.setMask(png_mc); --------------------------------------- そして、 「ウィンドウ」→「プレビュー」などをすればマスクがかかっているのが確認できると思います。 以上の操作を１枚の画像にまとめたのが 【下の図】↓ です。 「透過していない部分」か「透過している部分」かの違いで、 「マスクになる部分」か「マスクにならない部分」が別れるのがわかると思います。 またそれに加えて 「アルファ」 のマスクもかかっているのがわかると思います。 　（マスクは結局 "形" になるだけですから 　マスクになるPNGの絵柄に凝っても意味がないのですが、 　「Air Chrysalis (空気さなぎ)」 でも描いてみました。 　(「Air Cocoon」 と訳すべきだったのだろうか???) 　何でも良いですが、時のものを描いてみたただけのことで 　絵柄に特に深い意味はありません。） PNG を使った説明ではありませんが、 上に書いたことの大半は次↓のページに書いてあることです。 上に書いたスクリプトも、 次のページで書いてあるスクリプトをほぼそのまま使用しています。 「マスク・グラデーションマスク」 http://suzupara.iinaa.net/kiso111.html
Flex3 SDKがあるのでeclipsでpathを通して使えます。 FlexBuilderに慣れた人には酷です。
だいたいこんな流れじゃないですかね。 １、ファイルを開くボタン押下→ファイルを選択→Flash上で指定された写真を表示 ２、拡大縮小回転操作（それぞれの値を保持） ３、ボタン押下→写真をアップロード ４、アップロード完了→PHPに拡大縮小回転の値とファイル名を渡す ５、渡された値に基づいてPHPが画像を処理して表示 ページが切り替わってから戻るボタン押したら初期化されちゃうので フレームを使うといいかもしんないですね。 ・AS2.0でのファイルアップロード http://help.adobe.com/ja_JP/AS2LCR/Flash_10.0/he … ・PHP GDプログラミング http://www.geekpage.jp/web/php-gd/
＃１です。 > サンプルは画像が「透ける」・私の画像は「透けない」 > ココに画像が切り替わらない原因があるのかと考えておりますが > いかがでしょうか？ 関係ないでしょう。 透けると言うよりシェイプの輪郭が線となって見えるのでしょう？ それはシェイプだからです。 シェイプとはベクトル画像のことです。 Flash の 「線ツール」 や 「ブラシツール」 や 「ペンツール」 や 「矩形ツール」 や 「楕円ツール」 などで描いた画像はシェイプで シェイプには形があるのでその輪郭が見えるだけです。 > サンプルと私の画像の相違点は私のは写真画像、と言う事くらいです。 それが 「透ける」「透けない」 の原因です。 写真画像はシェイプではないので写っている物の輪郭データなど存在しません。 だから透けません。 あえて言うなら 写真画像自体 には輪郭があります。 その 四角い輪郭 でしたら透けて見えるかもしれませんが、 透けて見えたところで 「透けて見える」 というだけのことであって、 「動作する」「動作しない」とは無関係です。 ===とにかく以上は無関係です===================== サンプルの背景画像入りムービークリップをダブルクリックして中を見られましたか？ ライブラリの中のムービークリップを見ても良いですが、 ステージ上のムービークリップをダブルクリックする方が階層がわかりやすいです。 サンプルのページにも図が用意されているでしょう？ その図にあるように、 ムービークリップが階層構造になっているのです。 ムービークリップが「ネスト構造」になっているのです。 ステージ上の背景画像入りムービークリップをダブルクリックして中を見ると、 下の 【図】↓ のようになっていると思います。 例えば、一番上のレイヤー「pic0」のロックをはずして、 そこに表示されている画像を選択し、 プロパティインスペクタ（プロパティパネル）を見るとムービークリップになっていると思います。 画像自体は「シェイプ」ですが、「pic0」レイヤーに配置してあるインスタンスは「ムービークリップ」です。 そのムービークリップに 「pic0」 というインスタンス名を付けてあるので、 スクリプトでその 「pic0」 を操作できるのです。 名前がないと操作できないでしょう？ ですから、「シェイプ」であれ「写真画像」であれ、 そんなことは関係なしに、 とにかく画像をムービークリップにして、 そのムービークリップに対して「インスタンス名」を付ける必要があります。 当然，スクリプトで命令するムービークリップ全部，つまり各ムービークリップ全部です。 その 「画像を ムービークリップ に変換して インスタンス名 を付ける」 という操作が抜けているのではないでしょうか？ ※なんとなく...， 　 バージョンに合ったなるべく簡単な本を 　 最初からする方が早道かもしれないと思います。 　 Flash 8 用の本も探せばまだ売っていると思います。 　 「どれが良い？」などという贅沢は言えないと思います。 　 「おしえて!!Flash 8」 とその「アクションスクリプト編」 　 くらいがお薦めですが今ごろあるかどうかは知りません。 　 もしくは 　 ＃１ で書いた「Flash 8 入門講座」の 　 「第１回」からするとか。 　 （古いバージョンの情報は貴重ですよ。 　 本屋さんからもネットからもどんどん消えて行きます。実感。） 　
FlashMXの書き出し設定でAVIを選んで直接書き出してみたら どうでしょうか？ QuickTime形式(.mov)で書き出してAVIに変換してみるという 手もあります。
挫折した人間です、ご質問者がやられたような段階は比較的簡単で、造作なくできましたが、マウスを指のようにして捲るという点で詰まってしまいました。 私自身、デジタル書籍を作りたかっただけで、特にホームページは考えていなかったので、あるソフトで代用しましたけど、ご質問者の場合は http://www.page-flip.com/products/flippingbook-h … http://www.flashpageflip.com/ ここを調べてみてください。 参考 http://youmos.com/news/dynamic_page_flip 私も理屈は理解できました、この手はほとんどが英語のページで、英語が分らないとなかなか理解できません。
「ActionScript レイヤー にしよう」 と勝手に決めたレイヤーを作って， そのレイヤーの最終フレームをキーフレーム（空白キーフレーム）にして， そのフレームに次のように書けば良いと思います。 ------------------------------------------- // ジャンプしたい先の URLRequest を設定 var myURL:URLRequest=new URLRequest("index.html"); // 指定した URLRequest にジャンプ (同窓で開く) navigateToURL(myURL,"_self"); ------------------------------------------- 　
今朝 私が回答したものと似ていますね。 「auのトップにあるようなFLASH」 http://okwave.jp/qa5167052.html この質問者の方と同じく、 バージョンをまるっきり書かれていませんが。。。 上記回答にも書いたここ↓が参考になるのではないでしょうか？ GACさん 「ActionScript2.0 mc再生について」 http://gac.kir.jp/19/22402 上のページで提示されたサンプルスクリプトでは ボタンロールオーバー時に 　// setInterval をクリアする 　clearInterval(ID); を実行し、 ボタンのロールアウトで 　// change_spd 秒数間隔で changePicture を実行 　ID = setInterval(changePicture, change_spd*1000); を実行していますね。 そうすれば良いのではないでしょうか？ バージョンや具体的状況がわからないので、 これ以上は思考も書く気力も湧きません。。。
Flash Player 6 以上でしたら， LoadVars.onLoad で外部テキストのロード完了がわかります。 Flash Player 5 以上でしたら， ムービークリップ内に外部テキストをロードした場合に限って ムービークリップ自体に書く onClipEvent(data){}　で外部テキストのロード完了がわかります。 Flash Player 4（つまり Flash Lite）ではその両方がないのですから， 例のごとくフレームの グルグルループ でロード完了を待つしかないでしょう。 とにかく，外部テキストがロードされない限り， 外部テキスト内のデータはわからないわけですから， わからないうちに何かを外部テキストデータ通りにすることはできません。 フレーム の グルグルループ で， どこのフレームをグルグルループさせるべきかは 作るものによるので何とも言えません。 とりあえず Flash Lite では，外部○○ と通信するにはキーイベントが必要なわけですから， 少なくとも，loadVariables はボタンに書く必要がありますよね。 ボタンのフレームをグルグルループさせることはできませんから， 座標を動かすムービークリップのフレームをグルグルループさせることにします。 とりあえずボタンには次のように書きます。 ---_root のボタン------------------------- on(release){ loadVariables("abc.txt",_root); } --------------------------------------- 座標を変えるムービークリップ内のフレームを 少なくとも ２フレーム 以上にして， フレーム1 に次のように書きます。 ---ムービークリップ内フレーム1--------------- // もし _root の y が空白文字列ではない場合 if(_root.y ne ""){ // このムービークリップの座標を移動 _x = _root.x; _y = _root.y; // そしてこのムービークリップの再生を停止 stop(); } --------------------------------------- そしてフレーム2にキーフレームを作って， フレーム2 には次のように書きます。 ---ムービークリップ内フレーム2--------------- gotoAndPlay(1); --------------------------------------- これで， _root の変数 y に何かが入るまで ムービークリップ内のフレーム1と2はグルグルループ再生され， 外部テキストがロードされ次第ループ再生は停止します。 もっとも ムービークリップ内フレーム1 の stop(); は単なる１つの例です。 stop(); ではなく　gotoAndPlay(3);　などにしても良いですね。
ご参考 http://livedocs.adobe.com/flash/9.0_jp/UsingFlas …
■ＦＬＡＳＨで画像を動かす方法 （１）インスタンス（画像・文字なんでも）を右クリックしてシンボルに変換でグラフィックを選択 （２）インスタンスを選択して指定のタイムラインのフレームをキーフレームに変換（仮に動きの始めとする） （３）動きの終わりの部分のタイムラインのフレームを右クリックしてキーフレームに変更する。そのインスタンス（画像等）の位置を動かしてみる ｃｔｒｌ＋ｅｎｔｅｒでタイムラインを再生 すると、最初のタイムラインからあとのタイムラインの間のクリップがうごく。 ★動きはプロパティーウィンドウ内でいろいろ調整できます。 ご参考にどうぞ。ＦＬＡＳＨ道場さんです。 http://www2.netwave.or.jp/~light/
＃１ です。 すみません。 見落としていたわけではないのですが， > ・数字MCを配置 と書かれていらっしゃる条件を取りまちがえていたかもしれません。 この「数字MCを配置」の意味は， ひょっとして 「画像でできた数字を表示」 という意味でしょうか？ それだと MC が出てくる意味もわかります。 MCの中に画像を入れて切り替えるという意味になりますね。 また，＃１ では， 1，2，3，4，5，6，7，8，9 の9個の数をランダムに入れ替えたものに 後からランダムな数を挿入するという流れのプログラムを書いています。 　6，9，3，8，5，2，7，1，4 　　　　↑ 　　　　○=ランダムな数(どこかに挿入) しかし，最初から， 1，2，3，4，5，6，7，8，9，○=ランダムな数 の10個の数を用意して，それをランダムに入れ替えた方が早かったですね...。 そこの部分の修正も加えて回答し直します。 修正すると言っても，ムービー全体の構造はそのままです。 ２フレーム２レイヤーで， １つのレイヤーにはコンテンツ １つのレイヤーにはActionScript ActionScriptのレイヤーはフレーム1と2にキーフレームを入れておく。 ここまでは＃１と変わりません。 インスタンスは変えます。 まず「disp」という変数名を付けたダイナミックテキストを削除します。 それでその代わりに， 1～9 までの数字画像を それぞれ1～9フレームに配置したムービークリップを用意します。 【下の図】↓ の上側半分。 このムービークリップのフレームを指定フレームに gotoAndStop() させれば良いわけです。 _root の編集に戻って， 上で作ったムービークリップを 元「disp」という変数名を付けたダイナミックテキストがあった部分に 10個横並びで並べます。 そして，左から順に 「dsp_mc1」，「dsp_mc2」，「dsp_mc3」，…，「dsp_mc10」 という "インスタンス名" を付けます。 【下の図】↓ の下側半分。 ここまでで構造は次のようになります。 　_root（メインのタイムライン） 　　　├dsp_mc1(1～9の画像入りMC) 　　　├dsp_mc2(　〃　) 　　　├dsp_mc3(　〃　) 　　　├dsp_mc4(　〃　) 　　　├dsp_mc5(　〃　) 　　　├dsp_mc6(　〃　) 　　　├dsp_mc7(　〃　) 　　　├dsp_mc8(　〃　) 　　　├dsp_mc9(　〃　) 　　　├dsp_mc10(　〃　) 　　　├ダイナミックテキスト 変数名：point 　　　└ボタン（透明にしておいても良い） あとは ActionScript用の２フレームと，ボタンにスクリプトを書いて行きます。 一応全部書きますが，変えたのは フレーム1 のスクリプトのみです。 ◎ フレーム1 のキーフレームに書くスクリプト↓(短くなった) --------------------------------------------- // 再生停止 stop(); // 変数 num1～num9 に 1～9 の数を代入 for (i=1; i<=9; i++) { eval("num" add i) = i; } // 1～9までのランダムな数を my_num に取得 my_num = random(9)+1; // 変数 num10 に my_num の値を代入 num10 = my_num; // ランダムシャッフル用ループ for (i=1; i<=10; i++) { // 1 以上 (10-i)+1未満の整数の乱数を取得 r = random(10-i)+1; // num[10+1-i] の値と num[r] の値とを入れ替える tmp = eval("num" add (10+1-i)); eval("num" add (10+1-i)) = eval("num" add r); eval("num" add r) = tmp; } // dsp_mc1～10 を フレーム num1～10 に進めて停止 for (i=1; i<=10; i++) { tellTarget ("dsp_mc" add i) { gotoAndStop(eval("/:num" add /:i)); } } // 変数 point が空白文字列であれば実行 if (point eq "") { //変数 point に 0 を代入 point = 0; } --------------------------------------------- ◎ フレーム2 のキーフレームに書くスクリプト↓(変更ナシ) --------------------------------------------- // もし my_num の値が btn_num の値と等しいとき if (my_num == btn_num) { // 変数 point の値に 5 を加算 point += 5; // my_num の値が btn_num と等しくなければ } else { // 変数 point の値から 5 を減算 point -= 5; } // フレーム1 に書いたスクリプトを実行 call(1); --------------------------------------------- ◎ ボタン に書くスクリプト↓(変更ナシ) --------------------------------------- on (keyPress "1") { // 変数 btn_num に 1 を代入 btn_num = 1; // フレーム2 に書いたスクリプトを実行 call(2); } on (keyPress "2") { btn_num = 2; call(2); } on (keyPress "3") { btn_num = 3; call(2); } on (keyPress "4") { btn_num = 4; call(2); } on (keyPress "5") { btn_num = 5; call(2); } on (keyPress "6") { btn_num = 6; call(2); } on (keyPress "7") { btn_num = 7; call(2); } on (keyPress "8") { btn_num = 8; call(2); } on (keyPress "9") { btn_num = 9; call(2); } ------------------------------------- 作成は以上です。 上で， > そして，左から順に > 「dsp_mc1」，「dsp_mc2」，「dsp_mc3」，…，「dsp_mc10」 > という "インスタンス名" を付けます。 ということを書きましたが， これは説明の都合上そうするだけで， インスタンス名の付け忘れや重複がなければ，どこにMCを配置しても良いわけですから， ＃１の方法より，この方法の方が面白いレイアウトなどできて良いような気がします。 例えば輪に並べるとか，場合によっては例えば波のように動かすとか。 その他の補足説明は，すみませんが ＃１ の補足を見てください。 同じです。
ダウンロードできる FLA ファイルにも書いてありますが， そこを見るまでもなく， 表示されているサンプル（SWF）にもちゃんと書いてありますが。。。 ～引用～～～～～～～～～～～～～～～～～～～ //スクロールバーの初期設定の関数 scrollbar_mc.setScroll(content_mc, containerRect, true, 0.1 ); //第1引数　コンテンツ:MovieClip //第2引数　表示エリア:Rectangle //第3引数　スクロールしながら表示するか否か:Boolean //第4引数　第3引数をTrueとしたときのスクロールの加速度 // 　　　　（0.1～0.5程度を推奨）:Number ～～～～～～～～～～～～～～～～～～～～～～ //第3引数　スクロールしながら表示するか否か:Boolean 　　↑ココに書いてあります↑ 書かれてある通り，第3引数を false に変更するだけです。 //スクロールバーの初期設定の関数 scrollbar_mc.setScroll(content_mc, containerRect, true, 0.1 ); 　　↓変更↓ //スクロールバーの初期設定 scrollbar_mc.setScroll(content_mc, containerRect, false, 0.1 ); http://www.google.co.jp/search?hl=ja&q=Boolean%E … 　
コードの一部、間違えてましたね。すみません MC.onEnterFrame = function(){ 　this._x += (目標座標 - this._x)/5; } 参考URLは計算方法がちょっと違うだけで同じことをしています。 参考URL：http://www.findxfine.com/actionscript/asmotion/a …
先日、会社のデザイナーにFlashを教えました。 考え方にもよると思いますが、多くの方（特にグラフィックデザイナー）の方は、理論から入ってもすぐ挫折する傾向にあるように思います。 その場合は「教えてFlash」シリーズなどの一見子供向けっぽいやんわりした本で、“楽しんでもらう”ことを最初にしています。 ただ、CS3以降対応は出てないようなので、あくまで基本の考え方を習得するために本とお考えください。 逆に理論からいけそうな人はオライリー本など本格的な教本の方が良いと思います。 私も独学でFlashをやった身ですが、Directorというアプリ（これも独学ですが、、）を使ってたということもあるので、参考になるかどうか分かりませんが。。。 『教えてシリーズ』 http://www.amazon.co.jp/exec/obidos/search-handl …まつむら%20まきお 『オライリー』 http://www.amazon.co.jp/exec/obidos/search-handl …
場合によっては（やりかたによっては），ActionScript を使う必要などありません。 カウントするのはFlashではありません。 Flash(SWFファイル) は静的なファイルであって，その点 HTML や JPEG と変わりありません。 アクセスをカウントできるのは CGI や PHP などのようなサーバサイド言語です。 そのサーバサイド言語が「ページを見た」とか「サイト内にアクセスした」ということを感知して， サーバ内にそのアクセスカウント数をデータとして残します。 そのデータをサーバサイド言語がFlash（SWF）内に送信するか， または Flash（SWF）内にFlashがデータを読みに行くかして， Flash 内にデータを取り込み，取り込んだデータを何らかの形で表示させます。 Flash は 単なる「表示機」です。 たとえば， アクセスカウント数というデータを持って PHP が HTML を生成し， FlashVars でそのデータを Flash 内に送りつつ，HTML に Flash を表示させたとします。 その場合， FlashVars で送られたきた変数と同じ変数名のテキストフィールドを用意しておけば， そのデータがFlash内に自動表示されます。 ActionScriptなど全く必要ありません。 たとえば， アクセスカウント数というデータを何某かのテキストファイルとして PHP が 生成していたとします。 それだけだと Flash には何も送信されないので，Flash からそのテキストファイルを見に行く必要があります。 その場合はたいてい LoadVarsクラス のメソッドで Flash が任意のテキストファイルをロードする プログラム を実行させる必要があります。 その部分には ActionScript が必要です。 前者のように FlashVars で受け取っても， 後者のように LoadVars で取りに行っても， 結局そのデータは 文字列 または 数値 でしかありません。 単なる 文字列 や 数値 データから， 色々な演出を付加して（デコレーションして）表示させるのが ActionScript の役目です。 従って「演出」を不要とするならば，必ずしもActionScriptは必要でないということになります。 カウントするのはサーバサイド言語です。 そのデータを単に表示させるだけのものが Flash です。 アクセスカウンタを作る場合は， HTML＋JavaScript ＝ Flash のように考える方が良いです。 カウントデータはあくまでもサーバサイドが残すもの。 残したデータを HTML に表示させる場合は JavaScript が必要な場合もあります。 残したデータを Flash に表示させる場合は ActionScript が必要な場合もあります。 同じです。
＃１です。 > 何故クラス宣言の後に生成したMovieClipが > ステージに追加されたのかがわからなかったので 書いていらっしゃる意味がよくわかりません。 コンストラクタ関数を実行するときの引数が，この場合 this(MovieClip) であって， その引数を受けてコンストラクタが動作するのですが。 なんだかさっぱりわかりませんね.....。 この場合の this とはあえて言うと root ですよ。 root はそもそも MovieClip です。 別の言い方をすればこの場合の this は SWF のメインのタイムラインです。 SWF のメインのタイムライン は デカイ MovieClip です。 メインのタイムラインは階層も持ちます。タイムラインも持ちます。その他ムービークリップクラスのすべてのプロパティも持ちます。 階層ですからムービークリップその中に内包することができます。 つまりムービークリップです。 ただもっと大きな目で見ると，root は DisplayObject(表示オブジェクト) です。 例えば， 佐藤太郎 は 佐藤一家の 「お父さん」 です(そうだったとします)。 しかし同じ 佐藤家の「お父さん」佐藤太郎 であっても，別のもっと大きな枠で言うと　佐藤太郎は「人間」です。 人間の中の 佐藤家の「お父さん」 なだけで， 佐藤太郎 は，佐藤家の「お父さん」 には違いありません。 this は root であり root は MovieClip です。
やれやれと.......。 質問者さんだけに言っているわけではありませんが，せめて Flash のバージョンくらいは書きましょう。 ActionScript に関するご質問の場合は，使用する ActionScript のバージョンもあったほうが望ましい（必要）です。 私はここかしこで 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も 何度も ……… 同じ内容のことを書いているのですが， 質問者の方はなかなかバージョンを書かれません/(-_-)ヽ。 --- --- --- さて，ご質問の件ですが，基本的に 「Flash外」 のことです。 「ユーザのブラウザを操作する」＝「Flash外」 ですよね。 「ユーザのブラウザを操作する」≒「JavaScript(& CSS & HTML)」 です。 Flash内に，そういうブラウザ操作系のボタンを用意する場合は， 「Flashのボタンからブラウザに向けて，そういうJavaScriptを実行するような命令を投げる。」 というプログラムを実行させるしくみを作ります。 しかし...， ブックマーク登録JavaScript はブラウザによってまちまちですよ。 「ブックマーク（お気に入り）オブジェクト」 の クラス がそもそもブラウザによって違います。 IE だと window.external クラスに属するようです。 FF などだと window.sidebar クラスに属するようです。 Opera だと JavaScript ではなく HTML を使うとか。 質問 「使用者の閲覧しているページをブックマークするにはどうすればよいのでしょうか？ 」 http://oshiete1.goo.ne.jp/kotaeru.php3?q=2249284 そもそもがそういう状況ですから 「お気に入りに追加」 ボタン自体をそうそう見かけないのです（あっても趣味サイトの遊び程度ボタンですね）。 "IE対応のみ" での，数例を書いてみます。 ◎ ActionScript 1.0　ボタン自体に書く 【例１】 on (release) { getURL("javascript:window.external.AddFavorite('Ｈttp://○○','Page名')"); } ※ Flash Player 4 以上（注:作成ツールは Flash 5 以上） 　　　この 注: について↑ 　　　作成ツール Flash 4 は言語がこれとは全く違うので 　　　ここで書いたものは全く使えません。 　　　ActionScript 1.0 は Flash 5 以上の言語です。 ※ Ｈttp:// の 頭の Ｈ は半角小文字の h にしてください。 　 自動リンクで入る目に見えない文字の混入防止のためです。 　 続く以下全ても同じです。 　 　　￣￣￣￣￣￣ ◎ ActionScript 1.0　ボタン自体に書く 【例２】 on (release) { flash.external.ExternalInterface.call("window.external.AddFavorite", "Ｈttp://○○", "Page名"); } ※ Flash Player 8 以上（作成ツールも Flash 8 以上） --- --- --- ◎ ActionScript 1.0　フレームに書く 【例１】 bookmark_btn.onRelease = function() { getURL("javascript:window.external.AddFavorite('Ｈttp://○○','Page名')"); }; ※ Flash Player 6 以上（作成ツールも Flash MX 以上） ※ ボタンには 「bookmark_btn」 というインスタンス名を付けた場合です。 　　「フレームに書く」とはボタンが存在するフレームの任意のレイヤーの 　　キーフレームに ActionScript を書くという意味です。 　 続く以下全ても同じです。 　 　　￣￣￣￣￣￣ ◎ ActionScript 1.0　フレームに書く 【例２】 bookmark_btn.onRelease = function() { flash.external.ExternalInterface.call("window.external.AddFavorite", "Ｈttp://○○", "Page名"); }; ※ Flash Player 8 以上（作成ツールも Flash 8 以上） --- --- --- ◎ ActionScript 2.0　フレームに書く 【例１】 bookmark_btn.onRelease = function():Void { getURL("javascript:window.external.AddFavorite('Ｈttp://○○','Page名')"); }; ※ Flash Player 6 以上（注:作成ツールは Flash MX 2004 以上） 　　　この 注: について↑ 　　　Flash MX では ActionScript 1.0 までしか使えません。 　　　変数や関数の型指定は ActionScript 2.0 以降で可能。 　　　AS2 の 型指定は SWFパブリッシュ後に無効になるので 　　　Flash Player 6 でも動作します。 　　　(AS3 の型指定 は SWFパブリッシュ後も有効です） ◎ ActionScript 2.0　フレームに書く 【例２】 import flash.external.*; bookmark_btn.onRelease = function():Void { ExternalInterface.call("window.external.AddFavorite", "Ｈttp://○○", "Page名"); }; ※ Flash Player 8 以上（作成ツールも Flash 8 以上） --- --- --- ◎ ActionScript 3.0　フレームに書く 【例１】 bookmark_btn.addEventListener(MouseEvent.CLICK,setBookMark); function setBookMark(evt:MouseEvent):void { var myStr:String="javascript:window.external.AddFavorite('Ｈttp://○○','Page名')"; var myURL:URLRequest=new URLRequest(myStr); navigateToURL(myURL,"_self"); } ※ Flash Player 9 以上（作成ツールも Flash CS3 以上） ※ これ↑は他との均衡で書いてみただけで普通は使いません。 　　普通は次↓を使います。 ◎ ActionScript 3.0　フレームに書く 【例２】 import flash.external.*; bookmark_btn.addEventListener(MouseEvent.CLICK,setBookMark); function setBookMark(evt:MouseEvent):void { ExternalInterface.call("window.external.AddFavorite", "Ｈttp://○○", "Page名"); } ※ Flash Player 9 以上（作成ツールも Flash CS3 以上） ====== ====== ====== 繰り返しますが 「ユーザのブラウザを操作する」 のです。 したがって， SWF と HTML をパブリッシュして（または SWF を HTML に貼り付けて）， ブラウザでその HTML を開いて動作検証する必要があります。 あと，Flash Player 9 以降はセキュリティが変わったので， こちらも検索しておく必要があるかもしれません↓。 Google「allowscriptaccess samedomain always」 http://www.google.co.jp/search?hl=ja&q=allowscri … これだけ書けば，どれかに当てはまるのではないかと思います。 ただし，IE限定ですが。 逆に言えば最低これくらいは書かないとかすりもしない回答になるということになります。 ExternalInterface.call の普通の使い方は HTML に記入した JavaScript の関数を SWF 内から実行するというものです。 したがって， ブラウザの判定やもっと複雑なことをする場合は， とりあえず JavaScript を完成させて， そして その JavaScript の関数を Flash から実行するという方法を取る必要があります。 本題は Flash や ActionScript ではありません。 ブラウザの判定やもっと複雑なことをする場合， JavaScript と ActionScript が絡む部分は， 上記の中で使うものに応じて， 「getURL JavaScript」 や 「ExternalInterface.call」 などと検索してみてください。 Flash は猛烈に進化し続けている "生きたソフト" です。 「バージョンアップしてもしなくても大差なし」 というような どこかの死んだソフトとは違います。 「昨日の真 は 今日の嘘」 です。 バージョン違いでできたりできなかったりするのは当たり前。 本やサイトを書いている時点では「真実」でも， それを読んだ時点では「大嘘」になってしまうことは Flash ではしょっちゅう起こります。 ですから，質問をするにしてもしないにしても， 自分の使ってる作成ツールのバージョンくらいはせめてしっかり自覚して使い， 最重要ポイントとして押さえておくことが大切です。 ↓下の図の画面は Windows 版 Flash 8 のものです。 　 Flash MX ～ Flash CS3 は比較的似ていると思います。 　 Flash 5 や Flash CS4 は全く異なります。
画像 または 画像入りムービークリップ に 四角い塗りがたくさん入ったムービークリップのマスクをかけて 四角い塗りを大きくすることで 画像 または 画像入りムービークリップ を徐々に表示させているのです。 これ自体は手動でもActionScriptでもできますよ。 手で作るかActionScriptにやらせるかの違いで、 することは同じですから。 手動の方が自由度が高いので（何でもアリなので）、 基本的には手動で作る方が良いと思いますよ。 てきとうにこの辺りでヒントなどが出てくると思います↓。 Google 「Flash マスク トランジション」 http://www.google.co.jp/search?hl=ja&q=Flash+%E3 … もしボタンによってそれを動的に変えるには、 上のものをムービークリップの中に作成しておいて、 ボタンのロールオーバーなどでそのムービークリップを上の深度に swapDepths します。 Google 「swapDepths」 http://www.google.co.jp/search?hl=ja&q=swapDepth …
お絵描き部分専用のMCを用意して、そのMCにattachBitmapをし、 そのMCのサイズを大きくすればドットも大きくなりますよ。 // 例 // お絵描き部分専用のMCのインスタンス名 oekakiMC bmpData = new flash.display.BitmapData(16, 16, true,0xffeeeeee); bmpData.setPixel(5, 5, 0xff000000); _root.createEmptyMovieClip("oekakiMC", 1); oekakiMC.attachBitmap(bmpData, 0); oekakiMC._xscale = oekakiMC._yscale = 2000;//20倍表示 マウスダウンしている最中等でsetPixel()する際には、 そのMCのマウス座標を使えば簡単です。 // 例 bmpData.setPixel(int(oekakiMC._xmouse), int(oekakiMC._ymouse), 0xff000000);
CS2（Flash8）しか手元にないので、多少異なる部分があるかもしれませんが、 １）メニューの「ファイル」から「パブリッシュ設定」を選択 ２）表示されたウインドウから「Flash」タブを選択 ３）「バージョン」と書かれたところでFlashPlayerのバージョンを変更 お使いの古いパソコンにインストールされているFlashPlayerのバージョン以下に変更し、もう一度パブリッシュを行えばバージョンの面では大丈夫なはずですが、いかがでしょうか。 ただしバージョンを落とすことによって、使用できるActionScriptなども変わってしまうことがあります。この場合は、意図した動作をしなくなるかもしれません。 またどのように崩れているのかにもよりますが、原因はFlashPlayerではなくブラウザの可能性はありませんか？ ちなみに、現在のFlashPlayerのバージョン別普及率がAdobeから出されています。Playerのバージョン選びのご参考になれば幸いです。 参考URL：http://www.adobe.com/products/player_census/flas …
ここに普及率が載ってます http://www.adobe.com/products/player_census/flas … 日本だと9以下が98.8%、10が86.8%らしいので 不特定多数に見せたい場合はまだ10にしない方がいいかもですね。
HTMLでは無理ですね。 Flash Lite であれば可能です。 fscommand2("StartVibrate", 2000, 1500, 2); ⇒2秒間、1.5秒ごとに2回バイブさせる。
生成される AS ファイルは Documentクラス の AS のようですよ。 「Main.as」 を 任意のフォルダ に保存されてのでしたら， その 任意のフォルダ に 任意の名前 の 新規 FLA ファイルを保存して， その 新規 FLA ファイル のステージをクリックした状で示されるプロパティパネルで， クラス のところに 「Main」 を記入すれば良いだけです 【下図】↓。 import は Document クラスではない普通のクラスをインポートするときに使うスクリプトです。したがって，スクリプトなど一切要りません。 上記のように，プロパティパネル で クラス のところに 「Main」 を記入すれば， あとは 「ファイル」→「パブリッシュ」 や 「制御」→「ムービープレビュー」 などで動作確認できます。 「アドビ－Flashクイックスタート：シンボルとドキュメントクラスの使用」 http://www.adobe.com/jp/devnet/flash/quickstart/ …
＃１ です。 > ちなみにflash CS3　AS3.0です。 わかりました。 ＃１でも書きましたが、 ActionScript1.0　2.0　3.0 という言語が違ってもやることの内容は同じです。 また、ポイントも同じです。 　１ どうしたいのかを具体的にイメージして考える 　２ 考えた通りになるようにムービーを仕組む 　３ 仕組みが狙い通りに動くようにASコーディング http://www.direct-co.com/index2.html さんの場合は(場合に"限って"は)、以下のようにするとできます。 まず、【下の図】↓のように各MC（=ムービークリップの略）を配置します。 下の図の「back_mc」、「menu_mc」、「main_mc」、「footer_mc」、「logo_mc」というのは各 MC の "インスタンス名" です。 また各 MC の ＋印 はそのMCの "基準点" の位置を示しています。 （色分けした＋印は位置を示すためにわざわざ描いてみただけで実際には描かない方が良いです） ステージのサイズ（=ドキュメントのサイズ）はどうでも良いです。 たとえば、50×50px でも 5000×20px でも 1000×700px でも何でも良いです。 モニタの比なども全く考える必要はありません。 大きすぎても小さすぎても作りにくいはずですから、作りやすいサイズで良いです。 それら ５つのMCが登場するフレームの、任意のレイヤーのキーフレームに、 次のように書けばFlashの方は出来上がりです。 ----------------------------------------------- // ムービー内の拡大縮小なし（お決まり文句） stage.scaleMode = StageScaleMode.NO_SCALE; // 整列の基準を左上にする（お決まり文句） stage.align = StageAlign.TOP_LEFT; // 「back_mc」 の初期横幅と高さを変数に記録しておく var bw:Number = back_mc.width; var bh:Number = back_mc.height; // MC を整列させる関数 arrangeMC を定義 function arrangeMC():void{ // // ローカル変数 sw にステージの幅を代入 var sw:int = stage.stageWidth; // ローカル変数 sh にステージの高さを代入 var sh:int = stage.stageHeight; // // 「menu_mc」をステージ右に配置 menu_mc.x = sw; // // 「main_mc」をステージ中央に配置 main_mc.x = sw/2; main_mc.y = sh/2; // // 「footer_mc」をステージ下に配置 footer_mc.y = sh; // // 「logo_mc」をステージ右下に配置 logo_mc.x = sw; logo_mc.y = sh; // // 「back_mc」をステージの "幅に合わせて" リサイズ back_mc.width = sw; back_mc.height = bh/bw*sw; } // 上で定義したarrangeMCを即実行 (初期表示用) arrangeMC(); // 関数 stageOnResize を定義 function stageOnResize(evt:Event):void { // 上で定義したarrangeMCを実行 (リサイズ時用) arrangeMC(); } // ステージにイベントリスナーを登録 //引数(ステージリサイズ時に実行、実行関数stageOnResize) stage.addEventListener(Event.RESIZE, stageOnResize); ----------------------------------------------- arrangeMC あとは、パブリッシュ設定の「HTML」タブで、 サイズ を [パーセント] にして 幅×高さ を [100] × [100] にして HTML と SWF をパブリッシュすると 簡易的にはそれらしいものができます。 実際には ＃１ で書いたサイトのように HTML や スタイルシート でページのマージンを 0 にしてSWF を 100％ 表示させる方が良いです。 --- 補足(わかっていらしたら読む必要全くなし) --- --- 【下の図】↓ では、 『「back_mc」内の画像の下端は背景色と同化させておく』 と書いていますが、 これは、 　１ そのサイトの方が具体的にイメージして考えて 　２ サイトの方が考えた通りになるようにムービーを仕組んで 　３ 仕組みが狙い通りに動くようにASコーディングした から、「そういう画像」を用意する必要があるのです。 そのサイトの方が "勝手に考えて" "勝手にそう工夫した" からそうなだけで、 これは決まりでも何でもありません。 背景画像入りMC 「back_mc」の幅はステージの幅にぴったりフィットさせています。 そしてそれに合わせて「back_mc」の高さを決めています↓。 　　// 「back_mc」をステージの "幅に合わせて" リサイズ 　　back_mc.width = sw; 　　back_mc.height = bh/bw*sw; このスクリプトだと...、 つまり、 サイトの方が具体的にイメージして考えて考えた通りになるようにムービーを仕組んだものだと、 ブラウザを縦長にすると画像の下がどんどん見えてしまいます。 それで 『画像の下端は背景色と同化させておく』 ようなグラデーションにしておかなければ 背景画像の下に継ぎ目が見えてしまいます。 だから "そう仕組んだ" 画像を用意してあります。 もしくは、 どんなにブラウザを縦長にされても良いように、 超々縦長写真を用意しておいても良いかもしれません。 同じ事を逆から言えば、 　　// 「back_mc」をステージの "幅" に合わせてリサイズ 　　back_mc.width = sw; 　　back_mc.height = bh/bw*sw; こういうスクリプトにしなければ、 『画像の下端は背景色と同化させておく』 とか 『超々縦長写真を用意しておく』 ようなことはしなくても良いわけです。 実際に 「どうしたいのか」 は作者以外わかりません。 「どうしたいのか」 を具体的に考えて、 そうなるような「仕組み」を作って 仕組みが狙い通り動作するように「ActionScriptをコーディング」して作ります。 実際に 「どうしたいのか」 は作者以外わかりませんが、 一例として書いておくと、 よく見かけるのは次のようにサイズ変更させるものです。 ---上記スクリプトより--------------------------- // 「back_mc」をステージの "幅に合わせて" リサイズ back_mc.width = sw; back_mc.height = bh/bw*sw; ------------------------------------------- 　　　↓この部分を変更↓ ------------------------------------------- // もし 「back_mc」 が ステージより縦長であれば if(bh/bw > sh/sw){ // 「back_mc」をステージの "幅に合わせて" リサイズ back_mc.width = sw; back_mc.height = bh/bw*sw; // そうでなければ }else{ // 「back_mc」をステージの "高さに合わせて" リサイズ back_mc.height = sh; back_mc.width = bw/bh*sh; } ------------------------------------------- 　
多分全体的に Flash 外 のご質問だと思います。 > divタグでレイヤーにしてFlashをabsoluteで配置 > （bodyタグの下に書き込み）してみたのですが、 本当は（内容の実質は）Flash外の JavaScript CSS HTML の話になるのですが， Flash と関わったものとしては，次のページのサンプルが参考になるかもしれません。 「レイヤーを使用したFull Flash 」 http://f-site.org/articles/2006/09/09042615.html > 「２」に関しては、同日に開いたとき、 > 指定したキーフレームに飛ばして再生出来ることはわかったのですが、 これも Flash に入ってから対処するのではなくて， JavaScript で Cookie（クッキー） を保存して，Cookie の値によって（Cookieに保存した前回訪問時の時刻）によって，Flash を表示させるかさせないかを決めると思います。 （あえて Flash でするなら SharedObject だとは思いますが，ご質問の場合は，SharedObject（つまりActionScript） に立ち入るのは変だと思います。）
敷居が低くて，ある程度ハイレベルで，ある程度広範囲のご質問でしたらココでしょうね。 敷居の低さでは Yahoo! さんの知恵袋もアリかもしれません。 少し敷居が高くなると 「GAC」 さんでしょうね。 http://gac.kir.jp/ 別に コレ という目に見える敷居はないのですが， 傾向としては結構「本当の現場職人」的質問の割合が多いように思います。 ココ（OKWave・教えて!goo 系）は，現場の人でなくても何でも良いわけですから， それに比べると少しレベルが高い気がします。 ココ（OKWave・教えて!goo 系）より少しハイレベルで，少し広範囲のご質問でしたらGACさんでしょうね。 さらに敷居が高くなると 大御所 である「FLASH-JP.COM - フォーラム」 さんがあります。 ある程度ハイレベル から超ハイレベル，超広範囲のご質問でしたらこの「FLASH-JP.COM - フォーラム」 さでしょうね。 ここも目に見える敷居はない？ のですが， 少なくとも Flash のバージョンや ActionScript のバージョン， そして 「質問内容を正確に捉えている」 必要があります。 どういう状況で，どういう質問をしていて，何（←ポイント） がわからないのかを明確にしておかなければ， 説教を受けるか，それだとまだ良い方で， 「鉄則」や「公式」みたいなものを１行書かれるか，「無視」です。 一般的なところで広く知られているのはその辺だと思います。 mixi内にも Flash系 コミュはたくさんありますから， プライベートなことを含む質問などでしたら， mixiが向いていると思います。 ↑ここも層は非常に厚いです。 ココ（OKWave・教えて!goo 系） とはちょっと比べものにならないかもです。 選ぶのには色々諸事情が絡むわけですから， 「ここが良い」というのはなかなか言えませんね。 以上にようなことが平気でかけるのも，ココだからだと思いますし， その点，ココもなかなか良いと思います。 （画像での説明が十分できなかったり，ファイルのアップなどができないのがココの難点です。）
質問の意味がわかりません。 １．何をしたくて ２．こう書いて、こうなると思ったのですが、動かない ３．どうかけば希望通りになるか まとめて質問しなおすことをお勧めします。 参考URL：http://kats.twinstar.jp/vms/goodquestion.html
チェックボックスとはコンポーネントを利用しているのですか？ もしそうなら、hitTestなど使わず下記のようにすればＯＫです。 on (click) { if (this.getState()) { } else { } } もし、上記が使えない状況、例えば、 チェックボックス等をまとめているMCコンテナなどがあり、 MCコンテナ -> onイベントハンドラでマウス操作 チェックボックス等 -> mouseup等でhittest判断によるマウス操作 というのならば、 MCコンテナ -> mouseup等でhittest判断によるマウス操作 チェックボックス等 -> onイベントハンドラでマウス操作 とすればよいです。 既にon (click)で動作したならここは新たに考慮する必要はありません。
「フレーム○ の ボタン△ には □ というスクリプトを書いて 　フレーム○' の ボタン△' には □' というスクリプトを書いて 　フレーム○'' の ボタン△'' には □'' というスクリプトを書いて…」 のように書くと説明がややこしくなる上，本題が見えなくなるので， 説明の都合上，形を変えたもので説明します。 形はどうであれ， 　「フレーム移動の履歴を配列に残しておいて， 　 その履歴を参照しながら戻る。」 という方法例です。 とりあえずは，【下の図】↓ のようなものがあるとします。 _root（メインのタイムライン）のフレームが仮に40フレームあった場合です。 フレーム1("Q_00") ～10 では 「質問 0」 が表示されるとします。 フレーム11("Q_01") ～20 では 「質問 1」 が表示されるとします。 フレーム21("Q_02") ～30 では 「質問 2」 が表示されるとします。 フレーム31("Q_03") ～40 では 「質問 3」 が表示されるとします。 最初の 「質問 0」 というのは，チャートの質問ではなく， チャートに関する 「説明や注意書き」 のようなもので，「表紙」のつもりです。 「質問 1」 以降がチャートの質問のつもりです。 「btn0」～「btn3」 がありますが， この 「btn0」～「btn3」 は，各ボタンに付けた 「インスタンス名」 です。 これらのボタンは フレーム1～40 まで通して全フレームに共通で配置しています。 （↑キーフレームで区切っていないだけのことです。この説明で仮にそうしているだけです。） このようなものを作成した場合， フレーム1 に次のようなスクリプトを書けば「戻る」ボタン（btn0）が使えるようになります。 ----------------------------------- // 再生の停止 (要/不要 は任意) stop(); // スタートフレームの指定 var start_frm = "Q_00"; // 「戻る」ボタン btn0 を非表示にしておく btn0._visible = false; // カウント用変数 cnt の初期化 var cnt = 0; // 履歴記録用配列 recArr の作成 var recArr = new Array(); // 配列の最初の要素にスタートフレームを代入 recArr[0] = start_frm; // 引数に指定されたフレームに進めて再生させるとともに // 履歴をの残す関数 gotoAndSave を定義（引数：フレーム） function gotoAndSave(frm) { // フレームfrm から再生 gotoAndPlay(frm); // カウントの値に 1 を加算 cnt++; // 配列の cnt 要素に引数 frm の値を代入 recArr[cnt] = frm; // 「戻る」ボタン btn0 を表示する btn0._visible = true; } // 「戻る」ボタン 「btn0」 クリック時の動作を定義 btn0.onRelease = function() { // カウントの値から 1 を減算 cnt--; // そのカウントの要素配列に gotoAndPlay させる gotoAndPlay(recArr[cnt]); // もしカウントが 0 になれば if (cnt == 0) { // 「戻る」ボタン btn0 を非表示にする btn0._visible = false; } }; // 「btn1」 クリック時の動作を定義 btn1.onRelease = function() { // 関数 gotoAndSave を実行（引数：フレーム） gotoAndSave("Q_01"); }; // 「btn2」 クリック時の動作を定義 btn2.onRelease = function() { // 関数 gotoAndSave を実行（引数：フレーム） gotoAndSave("Q_02"); }; // 「btn3」 クリック時の動作を定義 btn3.onRelease = function() { // 関数 gotoAndSave を実行（引数：フレーム） gotoAndSave("Q_03"); }; ----------------------------------- ※ ActionScript 1.0(パブリッシュ設定は 2.0 でも OK) 　　Flash MX 以上(Flash 8 も含む)で使用可 実際には，フレーム移動が入るので， 上記のように，各ボタンに１フレームで一斉に動作を定義することはできないと思いますから， 「btn1」～「btn3」 などのボタンに対する動作定義は各フレームで定義する必要があると思います。 戻るボタンの 「btn0」 に関しては共通の１つで済むと思います。 何にしても， とにかく最初のフレームで， 「カウント用変数(例：cnt)」 と 「配列(例：recArr)」 と 「変数や配列を操作する関数(例：gotoAndSave)」 を用意しておいて， 各フレームの各ボタンでは， 　// 用意しておいた関数を実行(引数：フレーム); 　gotoAndSave(フレーム) を実行させれば良いということです。 この 「フレーム」 は 「フレーム数」 でも 「フレーム名(ラベル名)」 でもどちらでも指定可能です。 「変数や配列を操作する関数(例：gotoAndSave)」 は， 上のスクリプトで書いた内容以外のことでも， 各ボタンで「共通の動作」を書いておけば良いです。 上記の場合に限っては， 「btn1」～「btn3」のボタンで "違う部分" は移動させる "フレームのみ" ですから， 各ボタンからは，その違う部分である "フレーム" を引数にして関数に渡します。 あとのことは関数がやってくれるので， ボタンごとにほぼ同じ内容のスクリプトをダラダラと書く必要はなくなります。 各ボタンへの動作定義は 　ボタンのインスタンス名.onRelease = function() {}; というイベントハンドラメソッド形式ではなく， 各ボタンに直接 　on(release) {} というonハンドラ形式のスクリプトを書いても良いです。 ターゲットパスさえ間違わなければどちらでも良いと思います。 ※ on(release){} 形式では説明をするのがややこしいのです。 　　　 赤ボタンには on(release) {AAA} と書いて， 　　　 緑ボタンには on(release) {BBB} と書いて， 　　　 青ボタンには on(release) {CCC} と書いて，… 　　という説明だと それを書いたり読んだりするだけで 　　本題が何のことかわかりにくくなりますから 　　onRelease=function(){};形式での説明にしています。
別に困難というほどのものではありませんが, ドラッグ＆ドロップできるスプライト(=スクロールバーの部分のことですよ) を作る方法とか, テキストフィールドとの連携 とかいう諸々の説明をするのはここでは困難ですね。 テキストフィールドとの連携というのは, 「テキストをドラッグしてもバーが動き,バーを動かしてもテキストがスクロールする」 ＆ 「▲▼ボタンをプレスしたときもバーとテキストが動く」 つまり 「テキストフィールド」 ＆ 「ボタン」 ＆ 「バー」 の三つ巴の連携 です。 書かれていらっしゃるサンプルを理解すれば、その延長の応用で作れますよ。 それは確かです（私は作ったことがあるので確かです。でもここではファイルのアップなどできないのでお渡しっすることは無理です）。 一番難しいところは、バーの伸び縮みです。 実は私はその部分までは作ったことがありません。 しかし,「▲▼ボタン」と「スクロールバー」と「テキストのスクロール」の三つ巴まででしたら比較的簡単に作れます。 バーが伸び縮みしなくても， たとえば 　▲ 　花 　▼ のように、小さな花の形をしたバーを作っても良いわけですし。 その程度の連携まででしたら自作できます。 もしできなければ、 Suzuka ＆ ParaDraw 講座-Flashコンポーネント http://suzupara.iinaa.net/compo81.html ここのコンポーネントを使わせてもらうとかです。 （環境によって見える見えないが不安ですが...） Adobe Flash を使う人の大半は、たいていこのコンポーネントを使うので、 Adobe Flash のためのサイトを見ても、 スクロールバーの作り方など解説したサイトがないのです（あっても、低機能＆古いです）。
私がたまたま今朝回答したものですが 参考になりましでしょうか？ OKWaveより「Youtubeの動画を埋め込みではなくサイトで利用したい」 http://okwave.jp/qa5122283.html Adobe Flash （Flash CS4 Professional など） を持っていらっしゃらなかったとした前提の回答です。 つまり，「このカテゴリでのご質問ではない」とした場合の回答です。
私もFlashはまだ基本的な事を質問する程度の知識しかないので トンチンカンな回答かもしれませんが… 表示させるswfを切り替えるのではなく、 swfは最初の段階でそれぞれ別のMCにすべて読み込ませておいて、 ボタンによってアルファ値を変えるか画面外に出したりすればよいのではないでしょうか？
"createEmptyMovieClip"で、"左上"ですね。 生成したtestの中に更にMCを作って、それにjpgを読み込み、 そのMCの座標を動かせば、どこにでも基準点を持っていけます。 横120px縦100pxの画像ファイルを例にすると、 中心にしたいなら、中のMCの_xを-60、_yを-50にする。 右上にしたいなら、中のMCの_xを-120にする。 といった感じです。 _xscale等は今の通りtestのサイズを変更します。 追加するのは、testの中に新しくMCを作ることと、 そのMCに画像を読み込むこと、そのMCの座標を動かすこと、です。 画像サイズに規則性などがなく、 自動でサイズ等を取り込みたい場合はMovieClipLoaderクラスを使いましょう。 MovieClipLoaderクラスについては、ヘルプに詳しく載っています。
imgをaddChildする前にsquareをaddChildしてしまっているので、関数内の処理自体がTimerイベントまで処理する前に無効になっているのでは。 imgを先にaddChildしたらTimerイベントまで有効になるかと思います。
traceをしている場所が悪いです。 setIntervalを設定した直後に一回実行しているだけです。 var i = 0; function cnt() { i++; trace(i); } setInterval(cnt, 1000); として、時間ごとに実行されるcnt()内で実行しましょう。 setIntervalに使われている数値の部分はミリ秒表記なので、 1000ミリ秒=1秒、よって20秒にしたい場合は、20000とすればよいです。 また、setIntervalを変数に代入しておくと後から削除もできるので、 必要な場合はやっておくと良いでしょう。 var i = 0; function cnt() { i++; trace(i); if (i >= 20) { clearInterval(myID);//interval終了 trace("iが20以上になったから終了！"); } } var myID = setInterval(cnt, 1000);
ご質問にあるようなインスタンスがすでにあるものと仮定すると， 私の場合次のようにすると思います。 １フレームのみに全てがある場合（【図】↓のような状態）で， スクリプトをそのフレームに書く場合です。 -------------------------------------------------------- // だんだん現れるスピードの変数「spd」の値を設定(※可変) var spd:Number = 5; // MCを参照する配列「weddingArr」の作成(※各要素や要素数は可変) var weddingArr:Array = new Array(); weddingArr[0] = weddingA_mc; weddingArr[1] = weddingB_mc; weddingArr[2] = weddingC_mc; // ---以上が変える設定------------------- // ---以下は変える必要なし---------------- // カウント用変数 cnt の初期化 var cnt:Number = 0; // 配列「weddingArr」の要素の数だけループ for (var i:Number = 0; i<weddingArr.length; i++) { // 全 「wedding○_mc」 のアルファを 0 にする weddingArr[i]._alpha = 0; } // 最初の eddingA_mc のみ アルファ を 100 にする weddingArr[0]._alpha = 100; // フェードイン を開始させる関数 fadeIn の定義 function fadeIn(mc:MovieClip):Void { // 指定されたMCを最高深度に移動 mc.swapDepths(this.getNextHighestDepth()); // 指定されたMC のアルファ を 0 にする mc._alpha = 0; // // 指定されたMCに毎フレーム実行するイベントハンドラメソッドを定義 mc.onEnterFrame = function():Void { // 指定されたMCのアルファを spd ずつ加算 this._alpha += spd; // もし アルファ が 100 以上になれば if (this._alpha>=100) { // この毎フレーム実行するイベントハンドラメソッドを削除 delete this.onEnterFrame; } }; } // ボタン「next_btn」クリック時にするイベントハンドラメソッドを定義 next_btn.onRelease = function():Void { // もし カウント用変数 cnt が weddingArr の最終要素番号未満のとき if (cnt<weddingArr.length-1) { // カウント用変数 cnt に 1 を加算 cnt++; } else { // それ以外は カウント用変数 cnt を 0 にする cnt = 0; } // フェードイン を開始させる関数 fadeIn を実行 // 引数（次にフェードインさせるMC） fadeIn(weddingArr[cnt]); }; // ボタン「back_btn」クリック時にするイベントハンドラメソッドを定義 back_btn.onRelease = function():Void { // もし カウント用変数 cnt が 0 より大きいとき if (cnt>0) { // カウント用変数 cnt から1 を減算 cnt--; } else { // それ以外は カウント用変数 cnt を weddingArr の最終要素番号 にする cnt = weddingArr.length-1; } // フェードイン を開始させる関数 fadeIn を実行 // 引数（次にフェードインさせるMC） fadeIn(weddingArr[cnt]); }; ----------------------------------------------------- 　
> 外部swfを読み込むことができれば一番いいです。 というわけですから， ローダー(Loaderインスタンス)を１つだけ用意して， その１つだけのローダーに，ボタンによって違う SWF をロードすれば良いと思います。 ファイル構造が次のようになっているとします。 　任意のフォルダ 　　　　├○○.fla （○○.swf を作成） 　　　　├○○.swf 　　　　├a.swf 　　　　├b.swf 　　　　└c.swf ○○.fla （○○.swf を作成） のステージ上には， 「btn0」，「btn1」，「btn2」 という インスタンス名 を付けたボタンがあったとします。 その場合， そのボタンが存在するフレーム（フレーム1にボタンがあるのでしたら フレーム1）の任意のレイヤーのキーフレームに次のように書くのが１つの方法例です。 ------------------------------------------ // ローダー「swfLD」を作成 var swfLD:Loader = new Loader(); // ローダーを配置 this.addChild(swfLD); // 場所(座標)を指定 swfLD.x=100; swfLD.y=50; // 各ボタンにイベントリスナーを登録 // 引数（イベント：クリック，実行関数：setURL○） btn0.addEventListener(MouseEvent.CLICK,setURL0); btn1.addEventListener(MouseEvent.CLICK,setURL1); btn2.addEventListener(MouseEvent.CLICK,setURL2); // 関数 setURL○ の定義 function setURL0(evt:Event):void { // 関数 loadSWF を実行 loadSWF("a.swf"); } function setURL1(evt:Event):void { loadSWF("b.swf"); } function setURL2(evt:Event):void { loadSWF("c.swf"); } // 関数 loadSWF を定義 function loadSWF(myURL:String):void { // ＵＲＬリクエスト myReq を作成　引数（URL） var myReq:URLRequest=new URLRequest(myURL); // ローダー「picLD」にリクエストURLをロード swfLD.load(myReq); } ------------------------------------------
なんだか妙な捉え方と言いますか， 複雑に考えすぎと言いますか， 「コンテンツの移動」という変なフィルタをわざわざ通して見るから 理解できないのではないかと思います。 変なフィルタをかけた目で見るのではなくて，極々普通に見れば， ムービークリップを右往左往させたり，表示/非表示を切り替えているだけにしか見えませんよ...。 たとえば...。 ステージ上の上の方に 「btn0」，「btn1」，「btn2」 という インスタンス名 を付けたボタンインスタンスを用意します。 また ステージ上の適当な位置に 「mc0」，「mc1」，「mc2」 という インスタンス名 を付けたムービークリップを用意します。 ※参考：【図】↓ それらインスタンスを配置したレイヤーとは別のレイヤーを追加で用意して， 例えば次のように書けば，勝手なサンプルの出来上がりです。 ------------------------------------ // ムービークリップを動かす速さを指定 var spd:Number=3/10; // 変数 y0 の定義(初期設定) var y0:Number=100; // 変数 x2 の定義(初期設定) var x2:Number=stage.stageWidth+100; // mc1 を非表示にする mc1.visible=false; // mc2 の x座標 を x2 にする mc2.x=x2; // mc0 に毎フレーム実行するイベントリスナーを登録 mc0.addEventListener(Event.ENTER_FRAME,funcMC0); // 関数 funcMC0 の定義 function funcMC0(evt:Event):void { // mc0 の y座標を y0 に spd の割合ずつ近付ける evt.target.y += (y0-evt.target.y)*spd; } // mc2 に毎フレーム実行するイベントリスナーを登録 mc2.addEventListener(Event.ENTER_FRAME,funcMC2); // 関数 funcMC2 の定義 function funcMC2(evt:Event):void { // mc2 の x座標を x2 に spd の割合ずつ近付ける evt.target.x += (x2-evt.target.x)*spd; } // btn0 に クリックしたとき実行するイベントリスナーを登録 btn0.addEventListener(MouseEvent.CLICK,funcBTN0); // 関数 funcBTN0 の定義 function funcBTN0(evt:Event):void { // 変数 y0 を 100 にする y0=100; // mc1 を 非表示 にする mc1.visible=false; // 変数 x2 を stage.stageWidth+100 にする x2=stage.stageWidth+100; } // btn1 に クリックしたとき実行するイベントリスナーを登録 btn1.addEventListener(MouseEvent.CLICK,funcBTN1); // 関数 funcBTN1 の定義 function funcBTN1(evt:Event):void { // 変数 y0 を stage.stageHeight - 60 にする y0=stage.stageHeight-60; // mc1 を 表示 する mc1.visible=true; // 変数 x2 を stage.stageWidth-50 にする x2=stage.stageWidth-50; } // btn2 に クリックしたとき実行するイベントリスナーを登録 btn2.addEventListener(MouseEvent.CLICK,funcBTN2); // 関数 funcBTN1 の定義 function funcBTN2(evt:Event):void { // 変数 y0 を stage.stageHeight + 100 にする y0=stage.stageHeight+100; // mc1 を 非表示 にする mc1.visible=false; // 変数 x2 を stage.stageWidth/2 にする x2=stage.stageWidth/2; } ------------------------------------ ↑すごく適当です。 こんな感じで各ボタンをクリックしたときに 各ムービークリップをどこに置きたいのかをイメージして， イメージ通りの場所に配置させるように動かせば良いと思います。
こんなのですよね↓。 「無題」 http://examples.kuwamoto.org/DragTile/DragTile_s … http://examples.kuwamoto.org/DragTile/DragTile_s … 上のページへのリンクは次のページにありました↓。 「 Introducing the FlexibleContainer component (aka Advanced ActionScript Refactoring - Step 3)」 http://kuwamoto.org/2007/05/17/introducing-the-f … 全体の技術はFlash（Flex）で， 名前は リキッドレイアウト にしたときの レイアウトマネージャ機能 とかそういうたぐいのになると思います。 この辺りを検索すれば他にも出てくると思います。 Google 検索「"Layout Managers" ActionScript」 http://www.google.co.jp/search?hl=ja&q=%22Layout …
>このサンプルでは飛び出す最大の範囲までFlashの領域として確保されていますが、 コメントに書いてある通り、Flashは領域内でしか表示できませんので、ヘッダの下のコンテンツもSWFにしてしまう他に方法しかないでしょうね。
＃１ です。 > Flash Lite 1.1でした。これで出来るやり方も教えていただけますでしょうか。 Flash Lite 1.1 では， 「スクリプトで」テキストの文字の色を変えることはできませんから， 「手動で」 テキストの文字色を変えます。 手動で変えるのだと動的に変えられない（場合によっていちいち作り替えなければならない）。 と思うかもしれませんがそれは大間違いです。 Flash Lite 1.1 の修行が足りないということです。 例えば， １つのムービークリップ内の フレーム1 に 「黒色文字」のテキストフィールドを用意します。 そののムービークリップ内の フレーム2 に 「赤色文字」のテキストフィールドを用意します。 そのムービークリップ内の フレーム3 に 「青色文字」のテキストフィールドを用意します。 そのムービークリップ内の フレーム4 に 「緑色文字」のテキストフィールドを用意します。 Flash Lite 1.1 ですから， ムービークリップ内のテキストフィールドにはちゃんと変数名を付けておきます。 ※インスタンス名は付けられません。 全部同じ変数名で良いです。 たとえば元の通り「battLvl」という変数名を付けることにしておきます。 そしてそのテキストフィールド入りのムービークリップには「インスタンス名」を付けます。 たとえば 「batt_mc」 というインスタンス名を付けます。 そしてスクリプトを次のような感じに書き換えます。 ----------------------------------------------- // 変数 battLvl の値が仮に 2 だったとする battLvl = 2;//fscommand2("GetBatteryLevel"); // batt_mc 内の変数 battLvl にこの階層の battLvl の値を代入 batt_mc/:battLvl = battLvl; switch (battLvl) { case 3 : // ムービークリップ「batt_mc」に命令 tellTarget ("batt_mc") { // フレーム2 に進んで止まりなさい gotoAndStop(2); } break; case 2 : tellTarget ("batt_mc") { gotoAndStop(3); } break; case 1 : tellTarget ("batt_mc") { gotoAndStop(4); } break; default : tellTarget ("batt_mc") { gotoAndStop(1); } } -----------------------------------------------
回答番号：No.1 で補足要求をした者です。 > すみませんでした。 と，あやまられなくても良いのですが， しかし，困りましたね......。 中一で，難しい言葉(専門用語のことでしょうね)があまりわからなくて， 誰に教わることもなく Flash をされているのですか。 う～ん，困った。 ここは図説もあまりできませんから，文字ばかりの説明になりますよ。 Flash CS3 をお使いだということですが， 画像を直観的(ちょっかんてき)にボタンのようにとらえるには， ActionScript 1.0（アクションスクリプト バージョン 1）が良いように思います。 この ActionScript 1.0の方法でやってみましょう。 Flash を起動させて， 「ファイル」→「新規」などで，新しいドキュメントを作成して， 「ファイル」→「名前を付けて保存」などで， どこか適当な場所に適当なファイル名で，その新しいドキュメントを保存します。 次に，「ファイル」→「パブリッシュ設定」で， 「パブリッシュ設定」パネルを表示させます。 その「パブリッシュ設定」パネル の中から「Flash」と書いてあるタブを選んで， 「ActionScriptのバージョン」となっている欄で， [ActionScript 1.0 ]　を選びます。 そして「OK」ボタンをクリックしてそのパネルを閉じます。 どこからどうやって画像を用意されたのかわかりませんが， とにかく，最初のご質問のときにされたように， Flash 内に画像を１つ用意します。 これで画像がムービークリップというものに変換されたことになります。 画像が画像のままでは，ボタン機能を付けることができません。 それで，ボタン機能を付けることができるムービークリップに変換したのです。 ボタンシンボルに変換してもボタン機能を付けることはできます。 そのムービークリップになった画像を選択した状態で， 「アクションパネル」を表示させます。 もし「アクションパネル」が表示されていないか， 表示されていてもどこにあるかわからない場合は， 「ウィンドウ」→「アクション」にチェックを入れると， どこかに表示されると思います。 上の段階で，ムービークリップを選択した状態で，アクションパネルを表示させたはずですから， アクションパネルの上側には 「▼アクション-ムービークリップ」のように表示されているはずです。 確認してみて，そのようになっていればOKです。 もし 「▼アクション-フレーム」などのように違う表示がされていましたら， どこかで余分な操作を入れてしまったことになりますから， 再びステージ上のムービークリップを選択して，アクションパネルを表示させる操作をやりなおしてください。 そのアクションパネルの白く大きな入力可能なスペースに ActionScript（アクションスクリプト）を書いて行きます。 次の------内のスクリプトを アクションパネルの白いところにコピペで貼り付けてください。 -------------------------------- // このムービークリップがクリックされたとき on (release) { // 「AAA.html」 というページに移動する getURL("AAA.html"); } -------------------------------- スクリプトの中に日本語が入っていますが， その日本語の前にはコメントアウト記号「//」を入れてあるのでコピペしても大丈夫です。 「//」を先頭に付けた行はプログラムでは無視されますから， 書いてあっても書いてなくても同じ事になります。 どこにジャンプをさせたいかなどがわかりませんので， ご自分で色々変えてみて実験してみるのが良いと思います。 一応この段階で， 「ファイル」→「パブリッシュ」して動作検証（リンクがはたらくかどうかの確かめ）をします。 今回はリンクの作業をしているわけですから， パブリッシュされた「HTML」をブラウザで開いて確認する方が良いでしょう。 とにかく全部を先に作ってしまってはダメなのです。 １つのことをしてみたら， その１つのことがちゃんと出来ているかどうかを，１回１回確かめることが大切です。 全部作ってしまって「動かない～！」では， どこに動かない原因があるのかがつかめなくなります。 また，１つ１つの動作検証（動作の確かめ）で，動作しないことがあった場合は， 動作しないまま先へ作業を進めるのも良くありません。 確実，着実に１つずつ動かしながら作って行きます。 仮に上の　getURL("AAA.html");　のまま，変えないで行く場合は， そのFlash を作成した同じフォルダ内に「AAA.html」を作成しておきます。 このように， 仮の動作検証のためのものとして，「AAA.html」を作っておいても良いと思います。 （とりあえず「AAA.html」にジャンプできるようにしておいて，後から違うページに変えても良いと言うことです。） もし，Flash を見ている画面ではなく， 違う画面（違うウィンドウ）に目的のページを表示させたい場合は， スクリプトを次のように書きかえます。 -------------------------------- // このムービークリップがクリックされたとき on (release) { // 「AAA.html」 というページを新しいウィンドウで開く getURL("AAA.html", "_blank"); } -------------------------------- 以上では１つの画像についてしか説明していませんが， このようなムービークリップを３つ作成して， そのムービークリップを順繰りに表示させれば良いと思います。 １つができれば，他の２つも同じようにすればできるでしょう？ 回答番号：No.1 で書いた内容ですが， もし１つができて他ができないとするなら，その状況がわからないのです。 「問題の切り分けが大切」というのはそういうことです。 　１つでできないなら３つでできるはずがありません。 　リンクページに飛べない原因は 　１つの画像にリンクを付けることができないからではないでしょうか？ 　もしそうであれば， 　画像を順繰りにループさせていることは関係がないので， 　そのことを一緒に考えてはいつまでたっても解決しませんよ。 ということです。 また， 　もし，１つの場合はできるのに３つの場合はできなくなるのでしたら， 　そのうまく行かない状況がはっきりさせないと 　いつまでたっても解決しませんよ。 ということです。 問題点に関係のないことをごちゃまぜにして考えてもダメなのです。 問題点がわからないのに解決策などわかるはずがありません。 解決策を探す前に，まず問題点をしっかりととらえましょう。 日頃の定期考査なども同じですよ。 テスト問題を見ずに解答は書けません。 当てずっぽうに ア やら Ａ やら ○ やら答えても，まず不正解です。 実際に問題が解けるか解けないかは知りませんが， とりあえずはテスト問題を読まないと解ける問題も解けないでしょう？ 解答を書く前にテスト問題をしっかりと読みましょう。
もう、期限は過ぎていますか？何かの課題ですか？ >読み込みは正常に行えており、動作するのですが、どうしてもリピートしてしまいます。 はい。子のswfはきちんと止まっていると思いますよ。 リピートしているのは、親のSWFです。ですので、親のタイムラインを止めましょう。親自身で止めるのならば、親の最終フレームにもストップを書きましょう。読み込んだ子swfは、ムービークリップですから、親のタイムラインが止まっても再生されます。＾～＾
こうゆうのですか？ ロールアウトで逆戻りするアニメーション http://www.fumiononaka.com/TechNotes/Flash/FN030 … mixiでも思ったんですけど、自分の開発環境（flashのバージョンやas、osなど）や、試したこと（なかなかうまくいかないとか書いてあるので）をもっと具体的に書いて質問したほうがいいですよ。 あなたがどこでうまくいってないのか、どこまで理解できてるのか、さっぱりわかりませんもの。
思うに ActionScript 以前の問題だと思いますが。 「ドラッグできて入力できる」 という状況がよくわかりません。 どんなルールでドラッグするのか入力するのかを決めるのでしょうか？ つまり， どんなルールで「入力開始でフォーカスを与えたり入力開始位置をセットする」と「ドラッグ」を区別するのでしょうか。 例えば Windows でしたら メモ帳 というテキスト入力エディタがあります。 別に それに限らず ブラウザ に表示される Google の検索窓 であっても良いです。 その何かのテキストの「入力欄」にカーソルを当てると， とりあえずその入力出来る場所にフォーカスが当たって， なおかつ文字の入力位置を決めることができるでしょう？ そしてその「入力欄」にカーソルを当ててドラッグすると， 「複数文字選択」になったり場合によっては「文字列移動」になります。 ですから通常そんなところをドラッグしても， メモ帳なりブラウザがドラッグ移動できるわけではありません。 ドラッグする と 入力する は通常共存できないでしょう。 私はそんなもの見たことがありません。 したがって，ブラウザなどをドラッグ移動させる場合は， 「ブラウザなどの上の部分をドラッグすれば移動できる」 というルールがあります。 何かそういうルールを決めて， そのルールに従うようにプログラムしなければならないと思いますよ。
var n:int=5; var abc = new TextField(); //ここからが追加 var format:TextFormat = new TextFormat(); format.size = 50;//フォントサイズを50に abc.defaultTextFormat = format; //ここまでが追加 stage.addChild(abc); abc.border = false; abc.x = 100 abc.y = 60; abc.width = 50; abc.height = 50; abc.htmlText =n; ヘルプのTextFormatを参照するとより詳しい説明があります。
＃１ です > 「Adobe Flex Builder」というのが大変便利と聞きましたが > 具体的にどういう風に便利なのか解りません ココだけについて。 私も Flex系 は良く知らないのですが， 簡単に言うと リッチインターフェイス特化Flash作成ツール です。 Flash 8 にも コンポーネントが付いているでしょう。 「ウィンドウ」→「コンポーネント」 にチェックを入れるとコンポーネントパネルが出てきます。 そこには「ボタン」とか「コンボボックス」とかそういうたぐいのインターフェイス部分が元から入っています。 Flash の基本路線は，タイムラインなどを使ってアニメーションを作成したり， ボタンなども自作するのが普通です。 プログラマの方にとっては，これが非常に苦らしいのです。 で，その苦の部分をあらかじめ用意してあるので， その中から必要なものを配置して， プログラムだけでそれらを制御するのが Flex です。 Flash よりもっともっとたくさんのコンポーネントが用意されています。 > 具体的にどういう風に便利 私にとってはぜんぜん便利じゃないです。 自作のボタンも作れませんし，個性的な動きやアニメーションも作れない。 ぜんぜん使い物にならないものです。 しかし，人によってそれは変わります。 「PHP や MySQL などなど，サーバサイドのデータやシステムと人間をうまくつなぎたい」 という場合は，Flexの方が最初からFlashを作らなくて良いので， 効率よく開発ができるのです。 そういう方にとっては 「Flash は大変不便で，Flex は大変便利。」 ということになると思います。 他の方が作られたプログラムなどど組み合わせると このようなこともできるらしいですよ。 http://examples.adobe.com/flex3/labs/dashboard/m … 各ウィンドウ（コンポーネント）の右上の「最小化」ボタンや「最大化」ボタンをクリックすると， 各ウィンドウ(コンポーネント)が面白い動きをします。 上記のものを見て貰ってもわかりますが， Flash というより，やはりプログラムのインターフェイス部分ですよね。 だいたいそういうことです。 「Flash 8 のコンポーネント」↓
以下がポイントです。 1. 初心者の方にありがちですが、すべて変数で管理しようとしないことです。複数のデータを扱う場合、配列を利用するクセをつけましょう。 2. 文字列をクラスをとして扱いたい場合、getDefinitionByName()を使用します。 また、for文の条件式も間違っていますので修正します。 書き出すクラスはMC1~MC4までとします。 ----- //MC管理用配列 var mcArray:Array = new Array(); for (var i:int = 0; i < 4; i++) { var mcClass:Class = getDefinitionByName("MC"+(i+1)) as Class; var mc = new mcClass(); mcArray[i] = mc; mc.x = 10*i; mc.y = 10*i; this.addChild(mc); } ----- それぞれのMCにアクセスしたい場合は、mcArrayからアクセスします。 参考にしてみてください。
「もっと簡単」かどうかは人によりますから何とも言えませんが， 最初からアクションスクリプトなど使おうとせずに， "ごく普通に" モーショントゥイーン で画像を切り替えれば良いだけではないでしょうか？ Flashのステージ上に１つ目のJPG画像を読み込んで， その画像をグラフィックシンボル(ムービークリップでも良いです)に変換して， そのグラフィックシンボルに変換したステージ上のグラフィックインスタンスの アルファを 0→100 と変化させるようにモーショントゥイーンを作成します。 その上のレイヤーに２つ目のJPG画像を読み込んで， その画像をグラフィックシンボル(ムービークリップでも良いです)に変換して， そのグラフィックシンボルに変換したステージ上のグラフィックインスタンスの アルファを 0→100 と変化させるように時間差を付けてモーショントゥイーンを作成します。 その上のレイヤーに３つ目のJPG画像を読み込んで， その画像をグラフィックシンボル(ムービークリップでも良いです)に変換して， そのグラフィックシンボルに変換したステージ上のグラフィックインスタンスの アルファを 0→100 と変化させるようにさらに時間差を付けてモーショントゥイーンを作成します。 　～これを繰り返します～ 最後の画像のレイヤーの上のレイヤーに， 最初の画像入りグラフィックインスタンスをライブラリから引きずり出して， アルファを 0→100 と変化させるように時間差を付けてモーショントゥイーンを作成する。 このアルファが 100 になった時点にキーフレームを作成して， 最初の画像がアルファ100になったフレームに gotoAndPlay(**); を書いて フレーム** から再生させます 【図↓】 。 最初の画像が最初だけフェードインで登場させない場合は， 最後のフレームに書く， gotoAndPlay(**); さえ要りません。ActionScript無使用 でできます。 仮に ActionScript を使うとしても， することの内容自体は基本的にほぼ同じです。 手動で上記のように作成するか， それを ActionScript で自動化させるかというだけで， 上記モーショントゥイーンの考え方（イメージ）自体がなければ，どっちにしても作成できないと思いますよ。 ※ 補足 　> 簡単に、JPG画像を読み込ませて、 　この「読み込ませて」とは 　ひょっとして Flash 5 では本来は不可能な 　外部JPEGをSWFに表示させること？ 　とも思いましたが，よくわからないので保留します。 　Flash 5 では本来不可能のはずですが，一応はできますよ。 　でも，ご質問をシンプルに受け止めると 　そうではないと思いますので保留です(それ用画像もアップできませんし)。 420×314px の画像１枚 という制約がありますから 小さくて見えにくいと思いますが，補足より上の件の参考画像です↓。
一度unload()してからload()するようにしては？ たしかUILoaderコンポーネントだと いちいちURLRequesut作らなくてもいい上に .source="ファイルパス"で書き換えるだけでその辺の処理を 全部してくれるはずなのでこだわらないなら UILoader使ってみるのもいいかもしれないですよ
書かれていらっしゃる内容自体よりも， それ以前の問題で， Flash 作成ソフトのバージョン，ActionScript のバージョン， そして HTML や CSS などをどこまで書けるのかがわかりませんね。 AS関係限定でしたらこちらのページが参考になると思います。 Flash MX 以上(Flash MX，MX 2004，8，CS3，CS4) をお持ちの場合で， ActionScript 2.0 または 1.0 を使用する場合。 「Flashゲーム講座＆ASサンプル集【Flash の画面表示について】」 http://hakuhin.hp.infoseek.co.jp/main/as/stage.h … 　↑このページ全体が参考になりますが， 　　特ににこの部分↓が参考になります。 整列する位置を指定したい http://hakuhin.hp.infoseek.co.jp/main/as/stage.h … Flash CS3 以上(Flash CS3，CS4) をお持ちの場合で， ActionScript 3.0 を使用する場合。 「FlashゲームPG講座 For AS3.0【Stage クラスについて】」 http://hakuhin.hp.infoseek.co.jp/main/as3/stage. … 　↑このページ全体が参考になりますが， 　　特ににこの部分↓が参考になります。 Flash の整列する位置を設定する http://hakuhin.hp.infoseek.co.jp/main/as3/stage. … たまたま他の方が作られたサイトを提示しているので， なんとか回答はできていますが， 通常は， バージョン の記述がないと回答不能ですよ。
あー 「モバイルでflashを作成」て書いてあるのでノートPCでFlashを作成してる者ですって説明してるのかと思いましたよ 「モバイルのflashを作成」=FlashLiteを作成してるって事ですか。。。
＃２ です。 「星が飛び散る」辺りは， Flash の 基本中の基本である 『モーショントゥイーン』 です。 この辺は本などでキッチリされた方が良いと思いますよ...。 『モーショントゥイーン』 について 『CS4 用』 で書かれてある本です。 最近はどれが良いのか良く知りません。 もしお持ちでなければ， 『モーショントゥイーン』 について 『CS4 用』 で書いてある本を立ち読みするなどして探すのがベストだと思います。 ここでは例のごとく図説などに不向きですし。 一応は説明してみますが......。 ステージ上に星を描いて， グラフィックシンボルのインスタンスに変換し（シンボル1）， さらに，そのグラフィックシンボルをムービークリップに変換します（シンボル2）。 　メインのタイムライン(シーン 1) 　　　└ムービークリップ(シンボル2 のインスタンス) 　　　　　　└グラフィック(シンボル1 のインスタンス) 　　　　　　　　　　└★の絵 ムービークリップをダブルクリックするなどして， そのムービークリップ内の編集に入って その中に４つのレイヤーを作り， 各レイヤーの同じ位置にグラフィックインスタンスをコピペで増やします。 　メインのタイムライン(シーン 1) 　　　└ムービークリップ(シンボル2 のインスタンス) 　　　　　　├グラフィック(シンボル1 のインスタンス) 　　　　　　│　　　└★の絵│ 　　　　　　├グラフィック(シンボル1 のインスタンス) 　　　　　　│　　　└★の絵│ 　　　　　　├グラフィック(シンボル1 のインスタンス) 　　　　　　│　　　└★の絵│ 　　　　　　└グラフィック(シンボル1 のインスタンス) 　　　　　　　　　　└★の絵 各レイヤーを適当に 20フレーム くらいにして， さらに各フレームに「挿入」→「モーショントゥイーン」で モーショントィーン を設定します。 各レイヤーの最終フレーム辺りを選択して， 各★グラフィックインスタンスを四方に配置します。 すると 「モーションパス」 という線が勝手に出てきます。 四方に配置した★グラフィックインスタンスを選択して アルファ を 0 に設定します。 「自由変形ツール」を選択し， Windows であれば 「Control (Ctrl)」 キー， Mac であれば 「 Command」 キー を押した状態で， カーソルを 「モーションパス」 の線の中央付近に近づけ， カーソルの下に 「）」 のようなマークが出たとき 「モーションパス」 の中央付近を引っぱります。 すると線が曲線になります。 また，「自由変形ツール」の上にある 「ダイレクト選択ツール」で モーションパス の アンカーポイント（端の点）をクリックすると ペジェ曲線をコントロールできる コントロールハンドル が出てきますから， これでさらに曲線を変形させても良いと思います。 これを繰り返して曲線運動をするアニメーションを作成します。 そして，レイヤーをもう１つ挿入して， Actionscript専用レイヤーと勝手に決めて， その最終フレームをキーフレームに変換し， ムービークリップがループ再生しないように stop(); を書きます。 ここまでを 【図】↓ にしてみました。 ※図はあくまでもイメージです。 　 実際は 「分身の術！((((((★)」 のような ★ にはなりません。 　 「オニオンスキンマーカー」を設定して 　 「オニオンスキン」 を表示させているので， 　 「分身の術！((((((★)」 のような軌跡が見えるだけです。 以上のようにして作った ムービークリップを どこか別のムービークリップの表示させたい場所に入れれば良いと思います。 書いてはみましたが， 以上の説明を読んでもよくわからないと思います。 とにかくこの辺は 本などを読んで，実際にやってみて， Flash を使い倒しながら慣れるしかないと思います。 仮に説明を読んで理解できたとしても， 理解するだけでは決して実際に作ることはできないと思います。 この辺は 「Flashの基本中の基本」 ですが， コピペすればできるような ActionScript などとは大違いです。 とにかく Flash を使い倒して感性や技術やコツなどを身に付けなければ何ともならないでしょう。 ちなみに上記で説明した Flash CS4 の モーショントゥイーン は， 『CS4 の モーショントゥイーン』 であって，『CS3 までの モーショントゥイーン』 とはかなり違います。 『CS3 までの モーショントゥイーン』 を CS4 では 『クラシックトゥイーン』 と言います。 現在，ネット上で単に 「モーショントゥイーン」 と検索しても， 出てくるページの大半は 『CS4 での クラシックトゥイーン』 のことを指しています。 混乱しないように気をつけてください。 『CS4 の モーショントゥイーン』 は， 『CS3 までの モーショントゥイーン』＝『CS4 での クラシックトゥイーン』 よりは，かなり簡単に色々なことができます。 上記の説明を例にしても， 『CS3 までの モーショントゥイーン』＝『CS4 での クラシックトゥイーン』 には モーションパス などありませんから， 曲線モーショントゥイーンを作成する場合は， 別レイヤーに 「モーションガイド」 という線をわざわざ描いて用意しなければなりません。 結構手間で大変です。 『CS4 の モーショントゥイーン』 の方がずっと楽です。 ※『CS4 の モーショントゥイーン』 そのもの "自体" は， 　 Flash Player のバージョンを選びません。 　 例えば， 　 ムービークリップ の インスタンス は 　 初代 Flash の Flash 1 にはありませんが， 　 グラフィックシンボルのインスタンス ならあります。 　 また 初代 Flash 1 ではアルファはサポートされていません。 　 ですから パブリッシュ設定 で 　 Flash Player 1 を選んだ状態で作成を開始し， 　 グラフィックインスタンスにアルファを使わないような 　 CS4モーショントゥイーンを設定すれば， 　 Flash Player 1 対応用 SWF も作成することができます。 　 つまり， 　 　　「CS4 の モーショントゥイーン は， 　　　　Flash Player 10 以上でないと閲覧できない。」 　 　　ということは "決してない" 。 　 ので，比較的安心して使うことができます。 Flashの基本中の基本の説明にしては，専門用語のオンパレードですね。 「シンボル」，「インスタンス」，「モーショントゥイーン」，「モーションパス」，「オニオンスキン」，「オニオンスキンマーカー」，「アンカーポイント」，「コントロールハンドル」，「クラシックトゥイーン」… いくら用語を覚えても，技術が身についていなければ何にもなりませんが， 「用語を覚えると検索などが楽になる」 というメリットがあるので， この辺の専門用語も覚えた方が良いでしょう。
＃１です。 もう１つ。 thum.loadMovie("./img/+["thum"+i]+".png"); この頭の 「thum」 は何なのかわかりませんが， もし _root["thum"+i]　自身のことでしたら， ＃１ で書いたようにしてもうまくできません。 理由は _root["thum"+i]　に「何か」がロードされた時点で， その 「何か」 によって _root["thum"+i] が乗っ取られるのですから， クリックした時点で， そこに定義した _root["thum"+i].onRelease が消え去ります。 これを回避するには， _root["thum"+i]　の中に適当な空のムービークリップでも作成して， その _root["thum"+i]　の中の空のムービークリップに 「何か」 をロードします。 すると， _root["thum"+i]　の中の空のムービークリップは 「何か」 によって乗っ取られますが， _root["thum"+i] 自体は乗っ取られないので， _root["thum"+i].onRelease が消え去ることはありません。
情報が少なすぎる上に，具体性に欠けますよ。 実際にやってみて問題が生じたとき， 具体的な事例や取った手段を書いてくれないとわかりません。 ご質問では， まず Flash のバージョンに関する記述がまるでありません。 そして， どうやってスクリーンセーバーにしたかもさっぱりわかりません。 ↑おそらく何某かの形で EXE を SCR にしたのだとは思いますが， それは Windows 限定の話であって，OSの種類も書かれていません。 > 恐らくこれは「別ドメイン」でのやり取りとなるため、 そんなことは知りません。 普通は「別ドメイン」など登場しないと思います。 「別ドメイン」が登場するようなことがあってそれで問題が生じるなら， その具体的事例を示していただかなければ何ともさっぱりです。 関係するなら， 「別ドメイン」つまり「クロスドメイン問題」でなくて， ローカルセキュリティの問題ではないでしょうか？ 他人に全ての場合について実験させるのではなく， 自身でまずやってみることが大切ではないでしょうか？ 危惧する前にやってみないと話になりません。 自分でやってみてできないならできないことを追求する必要があると思いますよ。 それでもわからないことを具体的に訊ねる。 自分勝手な妄想や，他人の勝手な推測に期待するのがそもそも間違いだと思います。
＞adobeサイトに載っている解決方法や、ある程度ネット上に挙げられている方法も試してみました 簡記しないと重複します。 レジストリに残骸がありインストールできない→Flash Player の専用アンインストーラで強制削除後再インストール http://www.adobe.com/jp/support/kb/ts/228/ts_228 … ダウンロードを邪魔するもの→Windowsファイアーウォール、セキュリティ対策ソフトのパーソナルファイアーウォールの遮断、ブラウザのセキュリティ設定でブロック（例：「ツール」「インターネットオプション」「セキュリティ」「レベルのカスタマイズ」「セキュリティの設定」ActivXコントロールとスクリプトを有効、「レベルのカスタマイズ」「セキュリティの設定」「ダウンロード」「ファイルのダウンロード」が有効、「ツール」「インターネットオプション」「全般」「Cookieの削除」「ファイルの削除」「OK」など） StackHash はシステム領域の破損→「システムの復元」、ファイルスキャン、HD交換、リカバリ 参考URL：http://okwave.jp/qa4182704.html
サーバサイドのスクリプトを使用せずにhtmlのみでクエリで渡す場合、まず、javascriptでクエリ変数を取得して、 ■JavaScript集（QueryStringの受け渡し） http://homepage2.nifty.com/BASH/WWW/JavaScript/q … FlashにはFlashVarsを使用して渡します。 ■JavaScript + FlashVarsでswfにGET値を渡すCommentsAdd Star http://d.hatena.ne.jp/kurihhi/20070510/p1 参考先のURLより参考にしてみてください。
＃２です。 > >if (stageH/stageW<backH/backW) > この「/」で区切ったものはどういう条件になるのでしょうか？ 「/」で区切っているのではなくて， 2/3 （３分の２=さんぶんのに） とか，1/5 （５分の１=ごぶんのいち） という意味です。 if (stageH/stageW<backH/backW)｛ 　　　↓↓↓ ------------------------ 「if」 ←もし 「stageH/stageW」 ← ステージの横幅 分の ステージの高さ が 「<」 ← より小さい 「backH/backW」 ← 背景の横幅 分の 背景の高さ このとき 「{」 以降を実行。 ------------------------ です。 バラせばバラすほど（分解して説明すればするほど），ややこしくなるだけだと思います。 「/」 は 「÷」 です。 「<」 は 「小なり」 です。不等号（ふとうごう）です。 Flash や ActionScript 以前に，また 数学以外に， どこでも使われますよ。
> 中央から放射線状にページを切り替えていく というイメージがどう言ったものか正確につかめませんが、 「画像１」から「画像２」に表示を切り替える際、 「画像２」を中央部から周りに拡がるように円く表示させることでしたら、 マスクを使えば簡単にできます。 まず、「画像１」を任意のレイヤーに配置して、 その上のレイヤーに「画像２」を配置します。 さらにその上にレイヤーを作成して ● の塗りを描き、 その ● をムービークリップまたはグラフィックのシンボルに変換します。 そして、３レイヤーとも複数フレームにします。 そして ● を、小さな状態から大きな状態へとなるように モーショントゥイーン または クラシックトゥイーン で拡大させます。 その ● があるレイヤーをマスクレイヤーにすれば、 「画像２」に ● のマスクがかかるので、 「画像２」のうち ● と重なった部分だけが見えるようになります。 ● は小さな状態から大きな状態へと拡大されるわけですから、 つまり 「画像２」 のうち円く見えている部分がだんだん大きくなるアニメーションができます。 【↓参考動画↓】 CS4の解説ではないので見た目や用語が違いますが、 一応、よく似た内容を書いているページです↓。 「マスクとは？」 http://www.1art.jp/flash/le/lesson9/lesson9-2.htm --- --- --- --- この方法を利用して発展させると、ご質問の題名、 > 画面切り替えの様々なやり方 は無数にできます。 本当の意味で、無限通りの画面切り替えの効果が作成できます。 Adobe Flash ではありませんが、 Adobe Flash と仕様が結構似ているフリーソフトに Suzuka というソフトがあります。 但し、Suzuka は Windows 限定ソフトで、 サポートされているのは、一応 XP までです。 (Vista でも動かなくはありませんが、設定などが少々面倒かもしれません。) その Suzuka で、 同様のマスクの方法を発展させて、色々な画面転換をさせる解説ページでしたら見たことがあります。 Suzuka ＆ ParaDraw 講座/マスクでトランジション http://suzupara.iinaa.net/kiso121.html ↑この例でも、まだほんの極々極々一部の一部にしか過ぎません。 これ以外でも、 例えば、ハート型 のマスクを回転させながら大きくしても良いかもしれません。 また例えば、大きな直角三角形のマスクを右から左に動かしても良いかもしれません。 また例えば、マスクの蝶をたくさん飛ばして その蝶で画像を覆いつくしても良いかもしれません。 また例えば、雑巾がけをするようなアニメをマスクにしても良いかもしれません。 また例えば …　…　また例えば …　… ～ ～ 書いているとキリがありません。 とにかく無限通りの画面切り替えの効果が作成できます。 「マスクをかける」、「マスクをモーショントゥイーンで動かす」 これだけに限定すると ActionScript は全く必要ありません。
１．HTTPヘッダにFlashから送信したPOST値が表示されて内容が見えてしまったり これについてはPOSTするデータを暗号化して送信することで回避できます。実際セッション情報を渡すような案件で使用したこともあります。 参考： http://q.hatena.ne.jp/1200732246 ですが、リンク先にもある通り、swf自体を解析されてしまえばどうしようもありません。 2．Firefoxだとステータスバーに"データを転送しています"と表示されてしまいます これはFlashを使用する限り、どうしようもないでしょうね。
参考書籍と言っても ActionScript2.0 以下 と 3.0 以上では選ぶ書籍が全く違いますよ。 買うときは買い間違えないように注意してください。 書かれていらっしゃるようなものの場合， ボタンによって写真の動きが変わりますから， 普通はモーショントゥイーンは使いません。 （もしモーショントゥイーンで作るなら凄まじい数のモーショントゥイーンを作成しなければならなくなります。） でも動きはモーショントゥイーンのようです。 これは多分 Tween クラス と Easing クラス 辺りを使用していると思います。 ActionScript2.0 の場合 「Tweenクラス」 http://www.fumiononaka.com/TechNotes/Flash/FN050 … >Elastic　値が変化する範囲の片端あるいは両端の外側に広がる、 >　　　　　バネのような弾性効果を加えます。 >　　　　　弾性の度合いは、時間に影響されません。 ActionScript3.0 の場合 「org.as3s.Tween Ver2.0の使い方(3) 物理的なイージング」 http://as3s.org/2008/08/tween-ver20-howtouse3/ > ばねイージング > org.as3s.Tweenでは、Tween.elastic関数を使って、 > ばね係数やダンパーを指定したばねイージングを行うことができます。 この辺のことについて書いてある本を， 立ち読みするなどして選べば良いのではないかと思います。 （買うときはActionScriptのバージョンを間違えないように注意してください。) （またご使用の Flash のバージョンも間違えないように注意してください。）
Flash はそのソフトのバージョンによって大きく仕様が変わります。 またできることやできないことも変わります。 さらに ActionScript のバージョンによってもスクリプトはまるで変わります。 その重要ポイントについて何一つ書かれていらっしゃいませんね。 ですから本来は 「回答不可能な質問」 ということになります。 ちゃんとした回答は不可能ですが， 勝手に Flash MX 以上（Flash MX，MX 2004，8，CS3，CS4）をお持ちで， 勝手に ActionScript1.0 を使う場合のみについて回答します。 > 何卒わかりやすく教えていただけると幸いです。 「わかりやすいスクリプト」 と 「洗練されたスクリプト」 と 「使いやすいスクリプト」 は全く違います。 ここでは，わかりやすさをなるべく重視したスクリプトを書きます。 　（スクリプトを短くするようなテクニックや， 　 変数もなるべく使わない方法で作りましたから 　 スクリプトがやたら長いです。 　 また使い勝手も少々悪いです。） 実検用サンプルの作り方です。 ステージ上に適当な四角い塗りを描いてその塗りをムービークリップに変換します。 ムービークリップに変換するとき，「基準点」の位置に気を付けます。 ここでは一応「基準点を左上にしたムービークリップ」を作成することとします。 適当な四角い塗り入りムービークリップができましたら，インスタンス名を付けます。 ここでは 「pic_mc」 というインスタンス名を付けることにしておきます。 【↓下の図を参照のこと↓】 そのレイヤーの上に新しいレイヤーを挿入して， 適当なボタンシンボルのインスタンスを４つ縦に並べます。 そのボタンにもインスタンス名を付けます。 ここでは上から 「btn0」 「btn1」「btn2」「btn3」というインスタンス名を付けることにしておきます。 さらにそのレイヤーの上に新しいレイヤーを挿入して， そのフレーム1に次のようなスクリプトを書きます。 ---------------------------------------------- // ---↓初期設定↓--- // 座標を設定する配列を作成 zahyouArr = [-100, 0, 100, 200]; // 初期表示画像座標番号の設定 num = 1; // ---↓自動動作⇔ボタン動作 切り替えフラグ↓--- // ボタン動作フラグを false にしておく btnFlag = false; // ---↓主要エンジン↓--- // pic_mcに1フレーム進む時間毎に実行する関数を定義 pic_mc.onEnterFrame = function() { // pic_mcのx座標を zahyouArr[num] に 0.3 の割合で近付ける this._x += (zahyouArr[num]-this._x)*0.3; }; // ---↓ボタンの動作↓--- // btn0にロールオーバー時に実行する関数を定義 btn0.onRollOver = function() { // 変数 num を 0 にする num = 0; // ボタン動作フラグを true にする btnFlag = true; }; // btn1にロールオーバー時に実行する関数を定義 btn1.onRollOver = function() { // 変数 num を 1 にする num = 1; // ボタン動作フラグを true にする btnFlag = true; }; // btn2にロールオーバー時に実行する関数を定義 btn2.onRollOver = function() { // 変数 num を 2 にする num = 2; // ボタン動作フラグを true にする btnFlag = true; }; // btn3にロールオーバー時に実行する関数を定義 btn3.onRollOver = function() { // 変数 num を 3 にする num = 3; // ボタン動作フラグを true にする btnFlag = true; }; // btn0～3にロールアウト時，ドラッグアウト時に // 実行する関数を定義 btn0.onRollOut =btn0.onDragOut =btn1.onRollOut =btn1.onDragOut =btn2.onRollOut =btn2.onDragOut =btn3.onRollOut =btn3.onDragOut=function () { // ボタン動作フラグを false にする btnFlag = false; }; // ---↓自動動作↓--- // 2000ミリ秒(２秒)間隔で実行 myID = setInterval(function () { // もし ボタン動作フラグが false であれば if (!btnFlag) { //そして num が 座標設定配列の要素数-1 未満であれば if (num<zahyouArr.length-1) { // num に 1 を加算 num++; // それ以外であれば } else { // num を 0 にする num = 0; } } }, 2000); ---------------------------------------------- 上のスクリプトの最初 　// 座標を設定する配列を作成 　zahyouArr = [-100, 0, 100, 200]; これは当然適当です。 作るものによって座標は変わりますからこの辺は調節してください。 実際にはもっと横長画像を入れると思うので，だいたいの雰囲気， // 座標を設定する配列を作成 zahyouArr = [0, -400, -800, -1200]; // 初期表示画像座標番号の設定 num = 0; のような感じになるのではないかと思います。 しかしこのような数値では，適当に作ったムービークリップが見えなくなってしまう可能性があるので， 一応 [-100, 0, 100, 200] のような数値を適当にいれています。 また， 　// pic_mcのx座標を zahyouArr[num] に 0.3 の割合で近付ける 　this._x += (zahyouArr[num]-this._x)*0.3; の 0.3 も適当ですし 最後の行の時間間隔 2000ミリ秒 　}, 2000); これも適当です。 好みなどによって変えてください。 とにかく上のスクリプトの本体は 　// ---↓主要エンジン↓--- 　// pic_mcに1フレーム進む時間毎に実行する関数を定義 　pic_mc.onEnterFrame = function() { 　　// pic_mcのx座標を zahyouArr[num] に 0.3 の割合で近付ける 　　this._x += (zahyouArr[num]-this._x)*0.3; 　}; これだけです。 このスクリプトの zahyouArr[num] の部分， つまり　-100, 0, 100, 200 が入る部分 を ボタンや時間によって切り替えているだけです。 ただそれだけのことです。 この部分さえちゃんとわかれば， どのようなスクリプトに変えても良いということになります。 上のようにグダグダと長いスクリプトを書く必要もないということです。 なお，書かれていらっしゃるページのものは， ボタンの色なども変化していますが， その辺はボタンをムービークリップで自作するなどして機能を付け加えて行きます。 そんなこんなを全て書いていると さらに理解不能になるかもしれませんので省略します。 サンプル FLA ファイルが提示できれば， 「このファイルのようにすれば良い」 の一言ですむかもしれません。 しかしここでは，FLAファイルの提示はできませんので， なんとか上の部分までを理解して，さらに先へ発展させてみてください。 　（回答者にとっても，上のように回答するより 　 サンプルファイルを提示するだけの方が100倍簡単なのです。 　 ここはそれができませんから， 　 「わかりやすく教える」 にも限度があります。 　 さらに画像↓も 420×314px １枚しか添付できません。 　 つまりここでは，基本的に わかりにくい説明 しかできません。）
> 作ったものはこれです。 > http://www.ac.auone-net.jp/~mrs/ Access Denied(アクセス 権限なし） になります。 時間をとって再アクセスしても環境（回線やOS）を変えてもダメでした。 > this.addEventListener(MouseEvent.MOUSE_OVER,long01); この this って何でしょうか？ this で良いものかどうかも Access Denied(アクセス 権限なし） では判断できません。 回答でもアドバイスでも補足要求でもなく，ご一報まで。 (ココは自サイトのURLを公開したり，アップローダを使うことも禁止されています。 したがって，「他の場所にアップしてください」などという補足要求すらできません。 ですから，ご一報までです。)
あ、ごめんなさい、本来はアニメーションなのですね。 box_mcの透明度＝alphaでフェードイン・アウトの処理をしていると勘違いしていました。 hitTestPoint()の使い方は合っています。 変数hitに代入せずに、ifのの条件へ box_mc.hitTestPoint(mouseX, mouseY)をそのまま入れても大丈夫です。 アニメーションということで、タイムラインによるものならば、 例としてbox_mcの1フレーム目が透明（見えない）で、 box_mcの20フレーム目が不透明（見える）とすると、 function ef(Event) { var hit = box_mc.hitTestPoint(mouseX, mouseY); if (hit == true) { if (box_mc.currentFrame < 20) {//box_mcが20フレーム目に到達していなかったら box_mc.nextFrame(); } } else if (box_mc.currentFrame > 1) {//box_mcが1フレームより進んでいたら box_mc.prevFrame(); } } box_mc.addEventListener(Event.ENTER_FRAME,ef); のような形になります。 質問者さんがどのようにフェード効果を付けているかわからないので、 ご自分で実際に試して、調整してみてください。
> 波紋が放射線状に広がっていくスピードというのは、 > ずっと同じままでしょうか？ 物理学上，液体が均質である場合，当然同じです。 そうでなければおかしいでしょう。 波が波を生むのです。 横の粒子(分子)の動向によって対象となる粒子が動くのです。 分子にとっては 100km 離れた場所が波の発生源であったとしても 1mm 離れた場所が波の発生源であったとしても そんなことは関係ありません。 隣の分子が動くのに引きずられます。 音波は音源がどこであれ， 媒体が均一であれば音速（約340m/秒）は等しいのと同じです。 ただ， 波の発生源から遠いほど，振幅は減ります（波は弱まる）。 また， が波の発生源から遠いほど，通る経路に差が生じ安くなるので， 波の幅は大きくなります（波の幅が大きくなる）。 今現在，私のいる場所で，雷の音が聞こえます。 少し遠いのでうるさいというほどではありません（遠いほど音波は弱まる）。 また 少し遠いのでゴロゴロ継続時間が長いです（山などによって音が跳ね返る経路が多くなるので長く聞こえる）。
イージング設定ですと http://blog.greensock.com/tweenmaxas3/ 上記のページのBASIC PROPERTY TWEENING INTERACTIVE DEMOという ところでイージングのファンクションの確認ができます。 例として下記のようにeaseの後にイージング方式を設定する感じです。 TweenMax.to(mc, 1, {x:293, y:330, ease:Quart.easeInOut}); またカスタムのイージングやイージングの強弱などもつけれるみたいです。多分ここは必要ないと思うのですが色々機能的で使いやすいですね。 http://blog.greensock.com/customease/
そうゆうのはflagを立てるといいみたいです。 ステージをクリックなのかボタンをクリックなのかボールをクリックなのかわかりませんが 今クリックさせてるやつを、クリックしたら 適当な変数、例えば「flag」に「on（これも任意で）」代入 跳ねているボールが着地するフレームに if(flag=="on"){ gotoAndPlay("page2",1); } みたいな感じでどうでしょうか
SWFファイルのバイナリの話ですよね？ PlaceObject2のMATRIXの部分を確認しましたが、特にずれていることはありませんでした。私も今勉強中なので詳しく分かりませんが、どのタグのどの部分をみたのでしょう？
LoadVarsを使えば可能です。 詳しくは参考URLで見てみてください。 簡単なCGIプログラミングの知識も必要になりますが。 参考URL：http://1art.jp/flash2/chapter/46/46.htm
FlashではMTが生成したxmlを読み込み表示するというぐらいしか できないと思いますがどうでしょうか。 test.xml <xml> <$MTBlogEntryCount$> </xml> 上記xmlを生成し、 ででてきた数をflashで読み取るとういことならできると思います。
javascriptはあまり詳しくないので想像ですが、 サイトでの動きを見ている限り、 MouseOverで全て実現できるのではないかと思いました。 三つのボタンは、それぞれに対応したサブメニューを表示し、 四つ目のボタンと、サブメニューが表示される領域のMouseOver のイベントでサブメニューを下げてあげればどうでしょうか。
私も同じことがありました。私の場合はhtmlのファイル名をindex.htmlにしたらできました。 契約しているレンタルサーバーによるかもしれませんが、私が契約しているレンサバはトップページのファイル名はindex.htmlでないと表示されないということでした。
「マスクでトランジション」 マスクを使った画面転換の例と，重複しない乱数の列挙。 http://suzupara.iinaa.net/kiso121.html ココ↑にもかいてありますが 中身をシャッフルした配列を作成しておいて 配列要素を先頭から順に引いていくと重複は起こりませんよ。 21，22，23，24，…，71，72 からランダム要素を引くのではなくて あらかじめランダムシャッフルされた配列 55，30，26，65，…，22，45 の先頭要素から順に引くということですね。 --- --- --- あと配列 Arrayクラス にはsplice メソッドがあります。 Flashドキュメンテーション splice (Array.splice メソッド) http://livedocs.adobe.com/flash/8_jp/main/000019 … （使用できるバージョン : ActionScript 1.0、Flash Player 5） これで 21，22，23，24，…，71，72 からランダムに引いては、その要素を消す ということをしても重複は起こりません。 「だるま落とし」の積み木をランダムに叩いてはじき飛ばすような方法です。 ただこれを使った場合配列の要素がだんだん減って行くわけですから、 つまり元の配列自体が壊れてしまうので、 再使用したい場合は配列を再作成しなおすような必要があります。 また「引いた履歴」が配列には残りませんから もし履歴を残したい場合は 引いた要素と引いた順などを別に記録しておく必要が出てきます。
> 本当に説明ベタですいません！ 補足は十分わかりましたよ。 ただ， > ロゴにロールオーバーしたらまた同じ動きでロゴが動く、 > ロゴをクリックしたらリンク先に飛ぶ という部分が...，ひっとしたら最初から作りなおしになるかもしれません。 クリック や ロールオーバーで動作するものは，つまりボタンとして使用できるものは， ボタンインスタンス もしくは ムービークリップ インスタンス です。 ロゴを「画像のまま」動かしている場合は最初から作り直しとなるでしょう。 ロゴを「グラフィックインスタンスとして」動かしている場合は， すべてのロゴのキーフレームにある全てのグラフィックインスタンスのプロパティをボタンまたはムービークリップに変える必要があります。 ＝＝＝ ＝＝＝ ＝＝＝ 順当に最初から作成する方法を書きます。 まず「ロゴ」を選択して， 「修正」→「シンボルに変換」などで，「ロゴ」を「ムービークリップ」または「ボタン」のシンボルに変換します。 そして，そのシンボル化された「ロゴ」(インスタンス)を選択した状態で， ステージ下にあるプロパティインスペクタ（プロパティパネル）でインスタンス名を付けます。 ここでは「logo_mc」というインスタンス名にしたとしておきます。 その「logo_mc」をモーショントゥイーンで自由に動かすのです。 そして，「logo_mc」があるレイヤーとは別のレイヤーを作成して， 最終フレームを空白キーフレームに変換します。 それで，フレーム1 のキーフレームと，最終フレームのキーフレームに， ActionScript を書いて行きます（下↓の図）。 最終フレームのキーフレームを選択して， ------------------------------- // このフレームの再生を停止 stop(); ------------------------------- と書きます(コピペします)。 「//」はコメントアウト記号ですからその後に続く文字はスクリプトとして判断されません。 つまり上の場合，Flash的には stop();　のみがスクリプトとして動作します。 これで， > ■その動きがループせずに終わる の部分ができます。 次に フレーム1 の空白キーフレームを選択して， そのフレームに「logo_mc」に対するマウスカーソル反応の関数(イベントハンドラメソッド)を ActionScriptで定義します。 ------------------------------------------------------ // 「logo_mc」ロールオーバー時の動作を定義 ：戻り値なし logo_mc.onRollOver = function():Void { // このタイムラインのフレームを1に進めて再生 gotoAndPlay(1); }; // 「logo_mc」クリック時の動作を定義 ：戻り値なし logo_mc.onRelease = function():Void { // 「xxxx.html」 を別窓で開く(同窓の場合は「, "_blank"」は不要) getURL("xxxx.html", "_blank"); }; ------------------------------------------------------ これで「ファイル」→「パブリッシュ」をすれば出来上がりです。 ロゴを「画像のまま」動かしている場合は， 画像をムービークリップまたはボタンに変換するところからやり直しです。 ロゴを「グラフィックインスタンスとして」動かしている場合は， すべてのロゴのキーフレームにある全てのグラフィックインスタンスのプロパティを ステージ下のプロパティインスペクタより， 左上の方にある 　［グラフィック　　　▼］ の部分で， ボタンまたはムービークリップに変える必要があります。 下の図ですが， もし本当に下の図のようにロゴが動き回るようなアニメーションを作成していたならば， ロゴをクリックすることは非常に難しいですよ。 また変な動きになると思います。 あと，下の図の 「ロゴろご」 のようにロゴに隙間がある場合は， その周りを埋めるように透明な塗りでも用意した方が良いと思います。 「透明」を図示することができないので下の図では水色の半透明グラデーションにしています。 ※ Adobe Flash なら書籍も充実しています。 　　また Flash 8 の本もまだ探せば残っていると思います。 　　この辺のことは， 　　本来 「本」 を参考にして作って行くべき部分だと思います。 　　（注：本の購入はバージョンを間違えないように。 　　　　　これが本を選ぶ最低条件です。）
アクションスクリプトは、編集したソフトによって消し方は異なります そのようなエラーが出るようならアクションを削除すればよい。 名前の横に（Ｓ）っと書かれているのもアクションスクリプトなので注意。
スプレー缶のムービークリップ内に ActionScript を書くためだけのレイヤーを追加して(すでにあったらそのままで)， その レイヤーのフレーム1に，次のような感じのスクリプトを書けば良いのではないかと思います。 ------------------------------------------------------------- // とりあえず停止 stop(); // 途中で止めるフレームを登録 var middle_frm:Number = 10; // タイムラインを動かす関数 moveFrame を定義 // 引数(止めるフレーム：数値，動かすフレーム：数値)　戻り値：なし function moveFrame(stop_frm:Number, nMove:Number):Void { // １フレーム進む時間毎に実行する関数を定義 onEnterFrame = function ():Void { // 今のフレーム＋引数nMove に進めて停止 gotoAndStop(this._currentframe+nMove); // もし今のフレームが止めるフレームになれば if (this._currentframe == stop_frm) { // この １フレーム進む時間毎に実行する関数 を削除 delete onEnterFrame; } }; } // ロールオーバーしたときに実行する関数を定義 this.onRollOver = function():Void { // タイムラインを動かす関数 moveFrame を実行 // 引数(止めるフレーム：数値，動かすフレーム：数値)　 moveFrame(middle_frm, 1); }; // ロールアウト＆ドラッグアウトしたときに実行する関数を定義 this.onRollOut = this.onDragOut=function ():Void { // タイムラインを動かす関数 moveFrame を実行 // 引数(止めるフレーム：数値，動かすフレーム：数値)　 moveFrame(1, -1); }; // プレスしたときの動作を定義 this.onPress = function():Void { // もし今のフレームが途中で止めるフレームであれば if (this._currentframe == middle_frm) { // タイムラインを動かす関数 moveFrame を実行 // 引数(止めるフレーム：数値，動かすフレーム：数値)　 moveFrame(15, 1); // ロールオーバーしたときに実行する関数を削除 delete this.onRollOver; // ロールアウトしたときに実行する関数を削除 delete this.onRollOut; // ドラッグアウトしたときに実行する関数を削除 delete this.onDragOut; } }; ------------------------------------------------------------- スプレー缶のムービークリップ内に書くのではなく， スプレー缶のムービークリップ自体に書きたい場合は， onClipEvent (load) { // ココに書く } の 「// ココに書く」 の部分に書けば良いと思います。
階層化の何が(どの点が)わからないのかがわかりませんが。 ムービークリップの階層につきましてはココ↓で詳しく説明されていますね。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath … これ以上の「解説」となると何を解説すべきなのか私もわかりませんよ。 つまり ニーズ がわからないので，対応は閃かないということです。 解説は抜きで， 「生きたサンプル」であれば， こちら↓のサイトのサンプルが面白いと思います。 「ホームページテンプレート - テンプレートモンスター ジャパン」 http://www.templatemonster.jp/ より ホームページテンプレート サンプルダウンロード http://www.templatemonster.jp/sample/sample.php とか。 ムービークリップを入れ子にすると 簡単な動き を重ね合わせて 複雑な動き をつくることができるのです。 月の上でウサギがジャンプしているだけのムービークリップを作る そのジャンプしているウサギを月の円周上でモーショントゥイーンさせれば， ウサギがジャンプしながら月の上を動き回るアニメができる。 　　↓↓↓ ウサギがジャンプしながら月の上を動き回るアニメを地球の周りで回せば， 地球の周りを回る月の上でウサギがジャンプしながら動き回るアニメができる。 　　↓↓↓ 地球の周りを回る月の上でウサギがジャンプしながら動き回るアニメを太陽の周りで回せば， 太陽の周りを回る地球の周りを回る月の上でウサギがジャンプしながら動き回るアニメができる。 最初から全てを計算してウサギの動く座標を求めるのは至難の技ですが， 「ジャンプするだけ」「回るだけ」のアニメを階層的に作れば， 複雑な動きもものすごく簡単にできる。 というのが ムービークリップ 階層化のメリットだと思います。
> 割り当ててみましたが、そうするとマウスダウンした際に > アニメーションが最初から再生されてしまいます。 そうですね。 ですからボタンに融通を利かせたい場合はムービークリップで自作するのが普通です。 > ActionScriptを使ってボタンと同様の制御をしようと思い、 > addEventListenerでそれぞれオーバー、ダウン時の設定をしましたが、 何を制御しようとされたのか文面からはわかりかねますが， ムービークリップを自作ボタンとして使う場合で， ロールオーバー時にハンドカーソルにする場合は そのムービークリップのボタンモードを有効しないとなりません。 たとえば， ムービークリップのインスタンス名を button_mc とした場合 button_mc.buttonMode=true; を付け加えます。
FPS値は30ぐらいでもいいと思います。24は少ないです 60のサイトもたまにみかけますが、ロースペックマシン環境に対しては親切ではないともいえるので判断に迷うところです。 そのような環境の人を切り捨てても いいなら60でもいいんじゃないかと思います。 また四角を縦に伸ばすという方法ですが、 ムービークリップにしたいというのは何をしたいのでしょうか？ もしとにかくMC化したいだけならば、 シェイプとゥイーンしたタイムラインをさらに、 入れ子にするのもアリだと思います。 もしくは、すべてスクリプトで組むのもアリかと思います。 アプローチの仕方がいくらでもあるので、 まずはFPS60にしたとしても、 自分の理想の動きを実現してみるところから始めればいいと思います。
荷重と値の関係が示されてないなら 要所要所で実測して 間は「補間」するんですね。 直線補間なら比較的ラクですが曲線の場合もあります。 曲線補間が困難なら測定ポイントを多くして、間は直線でよしとする手も あります。 尚、荷重と値の関係は構造によっても違ってくるでしょう。
FLVPlayback コンポーネントでは、FLV の終端に達して再生が終了した時に” complete ”というイベントが発生します。 このイベントを利用してフレームを移動してはいかがでしょう。 スクリプトの一例です。 FLVPlayback コンポーネントのインスタンス” flv_player ”があるとします。 このスクリプトは、FLVPlayback コンポーネントのインスタンスがあるタイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /**************************************************/ 　//リスナーオブジェクトを作成 　var obj:Object = new Object(); 　//FLV再生終了時の処理を定義 　obj.complete = function( info:Object ):Void 　{ 　　//アニメのフレームに進む 　　gotoAndPlay( "○○○" ); 　　//リスナーを削除 　　flv_player.removeEventListener( "complete" , obj ); 　}; 　//リスナーを登録 　flv_player.addEventListener( "complete" , obj ); 　//タイムラインを止めておく 　stop(); /**************************************************/ 外部 FLV も JPEG 画像等をスクリプトで読み込む時と同じように、FLVPlayback コンポーネントのインスタンスがあるフレームが再生されて内部のスクリプトが実行されるまでは読み込まれません。 一般にプリローダーは、ムービーの最初に専用のフレームを作り、読み込みが完了するまで先のフレームを再生しない仕組みで作るかと思います。 つまり、ムービー自体が読み込まれるまでは FLVPlayback があるフレームが再生されず、そのためにコンポーネント内のスクリプトも実行されないことになるので、FLV は先読みされません。 もっとも、プリローダーと FLVPlayback　が同じフレームにある場合などは、容量によっては FLV とムービー自体の読み込みが並行して行われることはあるかもしれません。 これは単に、ムービー自体と外部 FLV の２件の読み込みが同時に行われるだけの話で、進捗状況もそれぞれ別の情報として管理されます。 ムービーのプリローダー１つではムービー自体と FLV を合わせた分の読み込み完了を検出できません。合算で読み込み完了率等を求めたいのでしたら、それなりの工夫が必要になります。
> 私が持ってるFLASHのバージョンは8ですが、 > AC3を使うことはできるのでしょうか？ できません。 > 本屋に行ってもCS3以降のAC3対応の本しかありません。 あまり売れてそうにない郊外の大きな本屋さんに行けばまだあると思いますよ。 Flash 8 といっても CS4 の二世代前です。 > 実際CS版を買うお金もないし、 Flash 8 を持っている人は 普通，CS4 を購入したりしません。 アップグレードするだけです(私も 8→CS4 のアップグレードをした者です。) Adobeに直接アップグレード版を注文すると，26,250円（税込）です。 https://store3.adobe.com/cfusion/store/index.cfm … 職場経由など違うルートを使えばもう少し安くなる可能性もあります。 Flash CS4 にアップグレードせず， なおかつ本も買わない場合でしたら， ここが良いかもしれません。 「Flash 8 入門講座：ITpro」 http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … 上の２ページからリンクされているページをしていきます。 上の２ページのうち，上側のページの一番下。 「第1回　Flashで何ができるの？」 http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … ここから順にしていきます。 題名は 入門講座 となっていますが，内容はそうでもありません。 最初の方は簡単ですが，最後の方はプロでもしないような高度なことまでかかれています。
fontは埋め込んでますか？
resecさんが回答してくれたように、 要はas BitmapとすることでこれはBitmapですと教えているようなものです。 このasの部分を省くとgetChildAt(0)の部分がなんなのかわからずにエラー になると思われます。 なので～を静的オブジェクト～で参照しようとしていますとか エラーがでるのですがこれはasを使いキャストしてあげると治る事が多いです。
ああ！ 思い出しました。 ここのサイトたしかこれ事態をアートとして ドメインごと売っているんですよね。すごく面白くて私も好きです。 すみません、 ここの作品たちはJavascriptではなくFlashで作成されています。 どうやらアイデアをだし、プログラマーの方に頼んで作成してもらっているそうですよ。 制作するにあたってはflashから入るのが良いと思います。 私が恥じめたのはまずこの２冊を我慢して勉強したのですが すごく身に付きました。そしてなんとなく教えてくださったサイトなどの 作成方法などもぼんやりですがわかるようになると思います。 http://www.amazon.co.jp/ActionScript-3-0-%E3%83% … http://www.amazon.co.jp/Adobe-Flash-ActionScript … がんばってください＾＾
スクリプトの後半部分から一部を抜粋して注釈行を入れてみます。 　// １フレーム進む時間ごとに毎回実行 　onClipEvent (enterFrame) { 　　　// もしこのムービークリップのアルファが80以上になれば 　　　if(this._alpha >= 80){ 　　　　　// _root を ラベル「pic02」に進めて停止 　　　　　_root.gotoAndStop("pic02"); 　　　} 　} 「１フレーム進む時間ごと」というのは フレームレートが 12fps だと， 「約 12分の１秒 ごとに１回ずつ」という意味です。 ですから， 　もしこのムービークリップのアルファが80以上になれば， 　１フレーム進む時間ごとに毎回， 　フレーム「pic02」に行き続ける。 ということになります。 アルファが82になってもフレーム「pic02」に行き続けます。 アルファが84になってもフレーム「pic02」に行き続けます。 アルファが86になってもフレーム「pic02」に行き続けます。 　　　…　　　　　　　　　　　　　　　… アルファが100になってもフレーム「pic02」に行き続けます。 その後もフレーム「pic02」に行き続けます。 フレーム「pic02」に行き続けるということは，先のフレームに進めないということです。 > 原因が分かる方がいらっしゃいましたら、ぜひおしえてください。 上に書いたことが原因だと思います。 原因はわかりましたか？ 対処法ですが， 書かれていらっしゃる Flash5 形式のスクリプトを貫く場合， onClipEvent (load) {} 内で フラグとなる変数を立てて onClipEvent (enterFrame) {} 内で フラグが立っていてアルファが80以上になればそのフラグを倒す というような方法をとるのが１つの解決策になると思います。 --------------------------------------------------------- // このムービークリップがロード(表示)されたときに実行 onClipEvent (load) { // このムービークリップのアルファを0にする this._alpha = 0; // フラグとなる変数を用意してその値を true にしておく flag = true; } // 1フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // もしこのムービークリップのアルファが 100 未満であれば if (this._alpha<100) { // このムービークリップのアルファを2ずつ加算 this, _alpha += 2; } // もしフラグが true で なおかつ アルファが80以上になれば if (flag && this._alpha>=80) { // _root を ラベル「pic02」に進めて停止 _root.gotoAndStop("pic02"); // そしてフラグの値を false にする flag = false; } } --------------------------------------------------------- if (flag && this._alpha>=80) {}　内は フラグが true であって なおかつ アルファが80以上でなければ動作しません。 この条件を満たしたとき， フラグの値を false にしてやれば， 以降 「フラグが true であって なおかつ アルファが80以上 」という条件は満たされなくなるので， この if文 内は１回しか実行されなくなります。 つまり 「pic02」に行き続けるということはなくなります。
SharedObject以前に何がしたいのかがわかりませんよ...。 SharedObject も for文 も抜きにして 簡単なもので実験などしてみるのが良いと思います。 例えば _root に 「test_1」 という変数のみ を書いたとします。 そしてその「test_1」を trace したとします↓。 --------------------------- test_1; trace(test_1); // →結果 undefined --------------------------- ↑「test_1」の 値 など定義していないので， test_1 は当然 undefined になります。 スクリプトを私とFlashとの日本語会話にします↓。 　私：「test_1 があります。」 　私：「さて test_1 は何ですか？」 　　　//→Flash：「は？ 何ですかって知りません。未定義です。」 というやりとりになります。 test_1 を undefined にしたくなければ， というか， 変数だけ置いても意味が無いので，変数を意味のあるものにしたければ 次のように値を入れるべきでしょう。 --------------------------- test_1 = "あいうえお"; trace(test_1); // →結果 あいうえお --------------------------- スクリプトを日本語会話にします↓。 　私：「test_1 は "あいうえお" です。」 　私：「さて test_1 は何ですか？」 　　　//→Flash：「"あいうえお" です！」 というやりとりになります。 少なくともこの辺の理解が必要だと思います。 というわけで， いったい何がしたいのでしょうか？ SharedObject や for文 の前に何がしたいのかをハッキリさせないと， Flashは言うことを聞きません。 雰囲気や感じから何をしたいのかを理解できる人間ですらわからないのですから Flash にわかるはずがありません。 一応， こうすれば↓少なくとも undefined ではないものが出力されますが。 --------------------------------------- my_hozon = SharedObject.getLocal("test", "/"); for (count=0; count<=3; count++) { my_hozon.data["test_"+count] = count; } trace(my_hozon.data.test_0);//結果 0 trace(my_hozon.data.test_1);//結果 1 trace(my_hozon.data.test_2);//結果 2 trace(my_hozon.data.test_3);//結果 3 --------------------------------------- 回りくどいですが， わざわざ 変数 abc を介す場合は， 次のようにしても，少なくとも undefined ではないものが出力されます。 --------------------------------------- my_hozon = SharedObject.getLocal("test", "/"); for (count=0; count<=3; count++) { abc = "test_"+count; my_hozon.data[abc] = count; } trace(my_hozon.data.test_0);//結果 0 trace(my_hozon.data.test_1);//結果 1 trace(my_hozon.data.test_2);//結果 2 trace(my_hozon.data.test_3);//結果 3 --------------------------------------- しかし，これは私が勝手に作ったスクリプト例です。 実際には何がしたいのかわからないので 書けることはこのぐらいです。 それと，SharedObject ではなく， 書かれていらっしゃる for文 の使い方がそもそも変ですよ。 「for文」 をネット検索やヘルプ検索で調べて理解して使えるようになることが先のような気がします。 また， その 「for文」 と合わせて良く使用されるのが上のスクリプトにもある， 「[ ]」＝「配列アクセス演算子」 です。 「配列アクセス演算子」 についてもGoogle検索やヘルプ検索などしてみて 理解して使えるようにするのが良いと思います。 結論：問題点は SharedObject の使い方にあるのでは "ない" と思います。 　
> わかりやすいシンプルな記述をご教授していただけると > ありがたいです。 それだけ複合的なものの「出来上がり」を見て， 「わかりやすくシンプル」ということはないと思いますよ。 作るのは簡単ですが，それを理解するのは作る以上に難しいと思います。 いきなりの「出来上がり」を提示してそれを説明するのも大変ですから 以下では私が作成してみた手順を書きます。 どんなものを作る場合もそうですが， 複数のものを同時に動かそうとするのではなく １つずつを着実に動かして作成していくというのが鉄則です。 というわけで「１つの雲」のみを動かす行程を書きます。 まずステージ上に基準点を真ん中にした「雲のムービークリップ」を作成し， 適当な場所に配置します 。 そしてその「雲のムービークリップ」に，例えば「kumo0」というインスタンス名を付けます。 そして，新規でActionScript用レイヤーを追加して １フレーム２レイヤーにします (ここまでが下の図↓)。 そして， ActionScriptを次のように進化させて作成して行きます。 ActionScriptレイヤーのフレーム1に， 一番上のものから順にコピペ＆パブリッシュしてみて， １つ１つの部分を理解すれば 最後のスクリプトがなぜそうなるのか理解し易いのではないかと思います。 　　　　　↓↓ 　　　　スタート 　　　　　↓↓ ---x座標のみを動かしてみる------------------ // 「kumo0」に対して１フレーム進む時間ごとに実行する関数を定義 kumo0.onEnterFrame = function():Void { // 2pxずつ左に移動 this._x -= 2; // もし -(自分自身の横幅の半分) 未満のx座標になれば if (this._x<-this._width/2) { // ステージの右から(自分自身の横幅の半分) 右に移動 this._x = Stage.width+this._width/2; } }; --------------------------------------- 　　　　　↓↓ 　　　　　進化 　　　　　↓↓ ---y座標も動かしてみる--------------------- // 初期y座標の記録 var kumo0Y:Number = kumo0._y; // y座標を決める角度θの初期化 var theta0:Number = 0; // 「kumo0」に対して１フレーム進む時間ごとに実行する関数を定義 kumo0.onEnterFrame = function():Void { // x座標を2pxずつ左に移動 this._x -= 2; // もし -(自分自身の横幅の半分) 未満のx座標になれば if (this._x<-this._width/2) { // ステージの右から(自分自身の横幅の半分) 右に移動 this._x = Stage.width+this._width/2; } // θを 60分の１周 ずつ加算 theta0 += 2*Math.PI/60; // y座標をsin(θ)の値 ±20 で上下させる this._y = kumo0Y+Math.sin(theta0)*20; }; --------------------------------------- 　　　　　↓↓ 　　　　　進化 　　　　　↓↓ ---ロールオーバーで拡大を追加してみる--------- // 初期y座標の記録 var kumo0Y:Number = kumo0._y; // y座標を決める角度θの初期化 var theta0:Number = 0; // ロールオーバー時のフラグ0の初期化 var over_flag0:Boolean = false; // 「kumo0」に対して１フレーム進む時間ごとに実行する関数を定義 kumo0.onEnterFrame = function():Void { // もしロールオーバーフラグがfalseであれば if (!over_flag0) { // x座標を2pxずつ左に移動 this._x -= 2; // もし -(自分自身の横幅の半分) 未満のx座標になれば if (this._x<-this._width/2) { // ステージの右から(自分自身の横幅の半分) 右に移動 this._x = Stage.width+this._width/2; } // θを 60分の１周 ずつ加算 theta0 += 2*Math.PI/60; // y座標をsin(θ)の値 ±20 で上下させる this._y = kumo0Y+Math.sin(theta0)*20; // サイズを５分の１ずつに元に戻す this._yscale = this._xscale += (100-this._xscale)/5; } else { // サイズを５分の１ずつに２倍に近付ける this._yscale = this._xscale += (200-this._xscale)/5; } }; // 「kumo0」にロールオーバーしたときの関数を定義 kumo0.onRollOver = function():Void { // ロールオーバーフラグを true にする over_flag0 = true; }; // 「kumo0」からロールアウトしたときの関数を定義 kumo0.onRollOut = kumo0.onDragOut=function ():Void { // ロールオーバーフラグを false にする over_flag0 = false; }; --------------------------------------- 　　　　　↓↓ 　　　　　進化 　　　　　↓↓ ---雲をランダムな位置から落下を追加してみる----------- // 「kumo0」のx座標をステージの範囲内でランダムに配置 kumo0._x = Math.random()*Stage.width; // 「kumo0」のy座標をステージのすぐ上に配置 kumo0._y = -kumo0._height/2; // 「kumo0」が落ちたかどうかのフラグ0の初期化 var drop_flag0:Boolean = false; // 「kumo0」の落下地点 y座標 をランダムに出す var kumo0Y:Number = 50+Math.random()*(Stage.height-100); // y座標を決める角度θの初期化 var theta0:Number = 0; // ロールオーバー時のフラグ0の初期化 var over_flag0:Boolean = false; // 「kumo0」に対して１フレーム進む時間ごとに実行する関数を定義 kumo0.onEnterFrame = function():Void { // もし雲が落ちたかどうかのフラグがtrueであれば if (drop_flag0) { // もしロールオーバーフラグがfalseであれば if (!over_flag0) { // x座標を2pxずつ左に移動 this._x -= 2; // もし -(自分自身の横幅の半分) 未満のx座標になれば if (this._x<-this._width/2) { // ステージの右から(自分自身の横幅の半分) 右に移動 this._x = Stage.width+this._width/2; } // θを 60分の１周 ずつ加算 theta0 += 2*Math.PI/60; // y座標をsin(θ)の値 ±20 で上下させる this._y = kumo0Y+Math.sin(theta0)*20; // サイズを５分の１ずつに元に戻す this._yscale = this._xscale += (100-this._xscale)/5; // もしロールオーバーフラグがtrueであれば } else { // サイズを５分の１ずつに２倍に近付ける this._yscale = this._xscale += (200-this._xscale)/5; } // もしこの雲が落ちたかどうかのフラグがfalseであれば } else { // この雲を8pxずつ落下させる this._y += 8; // もし「kumo0」の落下地点 y座標以上になれば if (this._y>=kumo0Y) { // この雲を落下地点 y座標に固定 this._y = kumo0Y; // そして雲が落ちたかどうかのフラグをtrueにする drop_flag0 = true; } } }; // 「kumo0」にロールオーバーしたときの関数を定義 kumo0.onRollOver = function():Void { // ロールオーバーフラグを true にする over_flag0 = true; }; // 「kumo0」からロールアウトしたときの関数を定義 kumo0.onRollOut = kumo0.onDragOut=function ():Void { // ロールオーバーフラグを false にする over_flag0 = false; }; --------------------------------------------- 以上でスクリプトの説明は終わりです。 もし Math.sin() や Math.random()， その他 if～else文 や onEnterFrame などがわからない場合は 個別にネット検索やヘルプで調べてみてください。 １つ１つはとうてい説明できそうにありません。 上の例では，雲は１つしか動かしていません。 複数の雲を動かす場合， 単純には，同様のスクリプトを雲の数だけ書き連ねれば良いということになります。 同様と言っても インスタンス名は「kumo0」「kumo1」「kumo2」…のように１つの雲ごとに変えて， 各変数も 「kumo0Y」「kumo01Y」「kumo2Y」…のように変えて書くということです。 一応それでとりあえずはできると思いますが， 普通はあまりそのようなことはしません。 次のようにさらにスクリプトを進化させるのが普通です。 ◎「for文 ＆ 配列アクセス演算子」を使ってループ処理をする ◎スクリプトを_rootに書くのではなくてムービークリップ内に書く ◎ムービークリップクラスを継承するカスタムクラスを作成し， 　 雲ムービークリップにそのクラスを適用する などのようにさらに進化させて 「使える物」 にします。 「使える物」にする研究も 「それはそれ」 でしてみてください。 いきなり上のものを進化させるのはかなり難があると思います。 たとえば最初に書いた 「x座標のみを動かしてみる」 辺りを， 複数のムービークリップに適用させるにはどうすれば良いか などから研究して身に付けて行くのが良いのではないかと思います。 「for文 ＆ 配列アクセス演算子」 で一括制御する方法辺りから始めるのが良いのではないかと思います。 　
私はAS3.0から勉強し始めました。 なのでAS2.0の事はわからないのですが、 これからFLASHのグレ－ドがあがっても AS2.0に戻る事はないと思ったので私もAS3.0から始めました。 また業務でたまにほかから来るflashの修正なども AS3.0でくる事が多いのでAS3.0から初めてみるのはいかがでしょうか？
> アクションフレームに以下のように記述したのですが上手くいきませんでした。 > if(_root.coin <= 0){ > 　　_root.gameover.gotoandplay(ゲームオーバー画面へ); > } それだと， 単純に "そのスクリプトを書いたフレームが表示された時" のみに if文が実行されるだけですよ。 いったい "どのタイミング" で ゲームオーバー画面へ へ進ませたいのでしょうか？ つまり， "どのタイミング" で "(変数_root.coin)が０枚になる可能性がある" のでしょうか？ 少なくとも "そのフレームが表示された時" ではありませんよね。 "何かのボタンをクリックした時" に "(変数_root.coin)が０枚になる可能性がある" のでしたら， その "何かのボタンをクリックした時" に if文 を実行させる必要があります。 自動的に (変数_root.coin)が 減って行くようなルールでしたら， "(変数_root.coin)が 減って行く時" に if文 を実行させる必要があります。 大まかには以上の部分に問題があると思います。 人間である私であっても "どのタイミング" で "(変数_root.coin)が０枚になる可能性がある" のかがわかりませんからね。 人間でなく相手は PC です。 具体的に具体的にプログラミングしなければ動作しません。 細かい点を挙げるとキリがありませんが， _root.gameover.gotoandplay(ゲームオーバー画面へ); 　　↑間違い　変更↓ _root.gameover.gotoAndPlay(ゲームオーバー画面へ); です。 SWF6 を書き出す設定にしていればどちらでも動くと思います。 つまり間違っていてもなにがしかの動作はしようとすると思います。 SWF7 以降は大文字と小文字は厳格に区別されますから， gotoandplay では何も動作しません。 あと _root.gameover.gotoandplay(ゲームオーバー画面へ); １つを挙げても， ちゃんとステージ上(レイヤー上)には gameover というインスタンス名のスプライトが配置されているか。 そのスプライト gameover 内には本当に ゲームオーバー画面へ があるのかどうか。 また， ゲームオーバー画面へ は数値になっているか。 もしくは プレームラベル名であるとしても，キチッと "ラベル名" のようにダブルクォーテーション囲みになっているかどうか，などなど， 思ったように動作しない要因は無数に見えます。 その辺をキチッと詰めて行けば思うような動作をするものができると思います。
『SWFAddress』というライブラリーを使います。 javascriptとactionscriptを連携したものです。 SWFAddress http://www.asual.com/swfaddress/ 参考URL：http://dev.convexstyle.net/2007/08/swfaddress.html
Application Support > Adobe > Flash CS3内にenフォルダができていませんか？ そちらにインストールされていることがあります。 参考URLもどうぞ。 参考URL：http://mionstar.com/blog/2008/11/flashmxpjsfl.html
まず， 書かれていらっしゃるスクリプトをもっと単純化して， どういう動きをしているのかを観察してみます。 ----------------------- function mySort(A,B):int { trace(A,B); return ★; } var myArr=new Array("要素0","要素1","要素2","要素3","要素4"); trace(myArr.sort(mySort)); ----------------------- ↑これを見ます。 ★＝0 の場合 ---------------------------------- function mySort(A,B):int { trace(A,B); return 0; } var myArr=new Array("要素0","要素1","要素2","要素3","要素4"); trace(myArr.sort(mySort)); //---↓出力↓--- //要素1 要素2 //要素0 要素2 //要素3 要素2 //要素4 要素2 //要素4 要素2 //要素3 要素2 //要素0 要素2 //要素1 要素2 //要素2,要素1,要素0,要素3,要素4 ---------------------------------- ★＝1 の場合 ---------------------------------- function mySort(A,B):int { trace(A,B); return 1; } var myArr=new Array("要素0","要素1","要素2","要素3","要素4"); trace(myArr.sort(mySort)); //---↓出力↓--- //要素1 要素2 //要素4 要素2 //要素3 要素2 //要素0 要素2 //要素1 要素2 //要素0 要素3 //要素4 要素3 //要素1 要素3 //要素0 要素3 //要素0 要素1 //要素0 要素4 //要素1 要素4 //要素2,要素3,要素4,要素1,要素0 ---------------------------------- ★＝-1 の場合 ---------------------------------- function mySort(A,B):int { trace(A,B); return -1; } var myArr=new Array("要素0","要素1","要素2","要素3","要素4"); trace(myArr.sort(mySort)); //---↓出力↓--- //要素1 要素2 //要素0 要素2 //要素3 要素2 //要素4 要素2 //要素4 要素2 //要素1 要素0 //要素4 要素0 //要素3 要素0 //要素3 要素0 //要素3 要素1 //要素1 要素4 //要素3,要素1,要素4,要素0,要素2 ---------------------------------- ★の値によって，演算回数は増減しますが， mySort(A,B) の A と B には， 少なくとも，どれかの要素(真ん中の要素) を軸とした 総当たりの要素ペア が入ることがわかります。 どれかの要素(真ん中の要素) とは上の場合， myArr[2] ＝ 要素2　です。 その他色々やってみると， 要素数が偶数の場合，どれかの要素(真ん中の要素) は， 後半の１つ目になることがわかります。 細かいことはFlashのソートアルゴリズム自体に関わることなので， おそらく意識しなくて良いことだと思います。 　mySort(A,B) の A と B には， 　ほぼ総当たりで 要素のペア が入る ということだけを意識すれば良いと思います。 というわけで， 以上のことを意識してご質問のスクリプトにコメント行を１行ずつ加えると次のようになります。 ------------------------------------------------- // データの順を示す配列 tsize を作成 var tsize:Array=new Array("SS","S","M","L","LL","XL"); //関数tSortの定義(引数:alist[*]要素,alist[*以外]要素)戻り値:整数 function tSort(a:String, b:String):int { // tsize における alist[*]要素 の順番を調べる var indexa:int=tsize.indexOf(a); // tsize における alist[*以外]要素 の順番を調べる var indexb:int=tsize.indexOf(b); // alist[*]要素 の順が alist[*以外]要素 の順より小さい時 if (indexa<indexb) { // alist[*]要素 を alist[*以外]要素 より前にソート return -1; // alist[*]要素 の順が alist[*以外]要素 の順より大きい時 } else if (indexa>indexb) { // alist[*]要素 を alist[*以外]要素 より後にソート return 1; // alist[*]要素 の順が alist[*以外]要素 の順と同じ時 } else { // ソートをしない return 0; } } // 順を並べかえるデータ配列 alist の作成 var alist:Array=new Array("LL","M","XL","S","L","SS","M","S"); // alist の要素をソート(引数:関数tSort) trace(alist.sort(tSort)); ------------------------------------------------- だいたい以上のような感じ意味になると思います。 全体的な流れは， 　「Array.sort(引数) 　の 引数 部分に関数をいれておけば， 　その関数に Arrey の２要素ずつが渡されて， 　sort処理の途中で細かい指示ができる。」 というものです。 ＝＝＝ 以下はどうでも良い補足です ＝＝＝＝＝＝ 実行する内容は全く違いますが， 全体的には次のような流れ(やりとり)になっていると思います(コピペで動作可能)。 ---------------------------------------------- // 擬似Flash側関数(引数:関数)戻り値:文字列 function flashFunc(A:Function):String { if (A("男性ですか？")=="はい") { return "ようこそ。男風呂をゆっくりお楽しみください。"; } else if (A("男性ですか？")=="いいえ") { return "ここは男風呂です。女風呂へ行ってくださいね。"; } else if (A("女性ですか？")=="はい") { return "ようこそ。女風呂をゆっくりお楽しみください。"; } else if (A("女性ですか？")=="いいえ") { return "ここは女風呂です。男風呂へ行ってください！"; } return "申し訳ありませんがオカマの方は御遠慮ください。"; } //---↑以上はFlash側で本来見えないとする↑--- //---↓以下はユーザ側で見えるものとする↓--- // 「男性ですか？」という問いに「いいえ」を返す関数を定義 // カスタム関数(引数:文字列) 戻り値:文字列 function myFunc(Q:String):String { if (Q=="男性ですか？") { return "いいえ"; } return null; } // カスタム関数を引数として擬似Flash側関数を呼び出し // その戻り値を出力 trace(flashFunc(myFunc)); ---------------------------------------------- 妙な例ですみません...。 ソートのイメージ図
とりあえずですね… ━━記述例━━━━━━━━━━━━━━━━━━━━━━━━━━ <object 　classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" 　codebase="ttp://download.adobe.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" 　type="application/x-shockwave-flash" 　data="images/test.swf" 　style="width:750px;height:270px" /> 　<param name="movie" value="images/test.swf" valuetype="ref" type="application/x-shockwave-flash" /> 　<param name="loop" value="false" /> 　<param name="quality" value="high" /> 　<comment> 　　<embed src="images/test.swf" 　　　type="application/x-shockwave-flash" 　　　width="750" height="270" 　　　loop="false" 　　　pluginspage="ttp://www.adobe.com/go/getflashplayer_jp"> 　　　　<noembed> 　　　　No Java Support. 　　　　</noembed> 　　</embed> 　</comment> </object> ━━記述例━━━━━━━━━━━━━━━━━━━━━━━━━━ ～こんな感じで2つをまとめて書きます。 何というかテンプレだと思って下さい。 「classid」と「codebase」はそのままで無いといけませんが、後の部分は適当にアレンジして貰っても構いません。 他にも最近のトレンドがあると思いますが。 自分が知ってるのはコレくらいです…。 P.S. OKWaveの仕様で勝手に文字列をリンク処理してしまうので。 「http」を「ttp」にしてあるので、そのままコピペしたらいけません(笑)。適宜、直して使って下さい。
> サンプルでは、ActionScripを外部ファイルで記述して > flaファイルに読み込ませるサンプルが多いような気がします。 そうですか？ 最近はそうかもしれませんが， 私の見ることがあるものはそんなことありません。 > もちろん一つのflaファイルには > 一つのasファイルしか読み込ませる事が出来ないと思うので そんなことはありません。 といいますか， それは単にドキュメントクラスのクラスファイルのことを指しているだけではないでしょうか？ ドキュメントクラスのクラスファイルはすごく特殊なもので普通の as とは違います。 というかフレーム1に書くようなことをわざわざクラスにしただけのものがドキュメントクラスのクラスファイルです。 一般的なクラスとは違います。 asファイルは import (クラスファイルをインポートする場合に使う) や include (タイムラインスクリプトを挿入する場合に使う)で いくらでもflaにロードできます。 またムービークリップなどは， ムービークリップクラスを継承するカスタムクラスを個々(各シンボルごと)にロードすることもできます。
> MCに設定したIntervalIDは > 違うMCからclearIntervalを使うことはできないのでしょうか？ 使うことは普通にできますよ。 > aaaというMCにtimeという名前でsetIntervalを使って > bbbというMCをaaaにドラッグしたらtimeをclearIntervalで動作をやめさせたい 具体的な状況がつかみにくいですね。 階層構造を図にすると次のような感じということでしょうか。 　_root(シーン 1 などメインのタイムライン) 　　　├bbb(ムービークリップ) ドラッグ可能 　　　└aaa(ムービークリップ) 　　　　　└time=setInterval(～～) これ以上のことがよくわかりません。 よくわからないので私が勝手に状況を作ります。 上のような階層構造になっていた上で， インスタンス名「aaa」のムービークリップ内のタイムラインのフレーム1に 次のように書いていたとします。 ---------------------------------------- // 関数 myFunction を 1000ミリ秒間隔で実行 time = setInterval(myFunction, 1000); // 関数 myFunction の定義 function myFunction() { trace("何かを実行"); } ---------------------------------------- ※↓下図 仮にこのままの状態で 「制御」→「ムービープレビュー」すると， 　何かを実行　何かを実行　何かを実行　何かを実行　… という文字列が出力窓に約１秒間隔で出力されるものができます。 この場合， _root に配置した「bbb」というインスタンス名のムービークリップ "自体" には， 次のように書けば，aaa 内の setInterval が削除できます。 ---------------------------------------- // このムービークリップを押したとき on (press) { // このムービークリップのドラッグを開始 this.startDrag(); } // このムービークリップを放したとき on (release, releaseOutside) { // このムービークリップのドラッグを停止 this.stopDrag(); // もし _root にある aaa にヒットしていたら if (this.hitTest(_root.aaa)) { // _root の aaa の time をクリア clearInterval(_root.aaa.time); } } ---------------------------------------- 上記のように作った場合は， 至って普通に clearInterval ができます。 何か特殊なことをしているわけではありません。 なるべく シンプル にご質問内容を再現してみただけです。 したがってご質問では，どこが問題なのかがわかりません。 状況によってはうまく clearInterval できないこともあるでしょう。 しかし， なにしろ具体的状況をいっさい書かれていらっしゃらないので， どこが原因で clearInterval ができないのは判断のしようがありません。 また， その原因がわからないので解決策の提示もできません。 よろしければ一度実際に上のようにして簡単なものを作ってみてください。 作ってみて clearInterval ができた場合は， 作成していらっしゃるものと状況がどこか違うはずです。 その違う状況の場所に原因があると思います。 原因がわからない場合は， そのうまく行かない場合の「なるべく簡素で単純な状況例」を 「補足」に書いてもらうと原因や解決策が見つかるかもしれません。 また， 『うまく行かない場合の「なるべく簡素で単純な状況例」』 を作成してみると， その時点で， 質問者さん自信でうまく行かない原因がわかるかもしれません。 原因がわかると解決策も簡単に見つかるかもしれません。 つまり自己解決するかもしれません。 問題解決には 「問題を単純化する。問題を切り分ける。」 というのが大切なことです。 「問題を単純化する。問題を切り分ける。」 具体的な方法は， シンプルで簡単な 「正常動作サンプル」 または 「不具合サンプル」 を作成してみることです。 シンプルで簡単な 「正常動作サンプル」 と 「不具合サンプル」 との相異点に 不具合を起こす 問題点 があります。 --- --- --- しかし，そもそも， > bbbというMCをaaaにドラッグしたら などという複雑な状況を， すでに作ってしまわれているところに， 問題点が発見できない第一原因があると思います。 なぜ， 「bbbというMCをaaaにドラッグしたら」 という妙で複雑な状況ではなく， 「bbbというMCクリックしたら」 などのような単純なサンプルを作ることができないのでしょうか？ 階層(ムービークリップ)が違う場合 clearInterval に動作不具合があるのでしょう？ そう思われるのでしたら，模索をそれに限定すべきです。 ドラッグ などという雑多な要素を加えるから問題点がしぼりにくくなるのだと思います。 雑多な要素を増やすと不具合がどこで起きているか特定しにくくなるだけですよ。 「問題を単純化する。問題を切り分ける。」 ことが大切です。
これは容量の問題だと思います、実際に表示させるswfが 50MBの場合ですとローダーをつけたほうがよいと思います。 やり方としては最初にloader.swfをおいてからそれに 50MBのswfをよませればいいでしょう。いかがでしょうか？
「メールリンク」と書かれていらっしゃる意味が， 「メーラーを起動してそのアドレス欄にxxx@xxx.xxを記入しておく。」 という意味でしたら， 「URLへのジャンプ」の方法と同じで， URL の部分を 「mailto:xxx@xxx.xx」 に変えれば良いだけだと思いますよ。 ---例----------------------------------------- var myAddress:String="mailto:xxx@xxx.xx"; var myRequest:URLRequest=new URLRequest(myAddress); var myURLLoader:URLLoader = new URLLoader(); mail_btn.addEventListener(MouseEvent.CLICK,openMailer); function openMailer(evt:Event):void { myURLLoader.load(myRequest); } ------------------------------------------- ただこれはブラウザ経由でメーラーを起動するという流れですから， 少なくとも SWF を HTML に貼り付けるなどして， ブラウザ でその Flash を閲覧した状態でないとメーラーは起動しないと思います。 またブラウザによってメーラーが起動するのです。 決して Flash がメーラーを起動するわけではありませんから， Adobe でもサポート外ですし，実際にメーラーが起動しないケースはたくさんあります。 例えば 閲覧 OS が Mac だとダメとか， ブラウザのセキュリティを高くしておくとダメとか， メーラーをブラウザに関連付けていなければ何も起こらないとか， セキュリティ系のソフトが入ってるとダメとか，とか，とか…。 とにかく色々な環境や設定によって左右されるので， 使わない，または，使っても無事動作しないのが当たり前 と思っておいた方が良いと思います。 私の環境では， たまたまできただけです（図↓）。 もしできない場合は， 深刻に悩んだり解決策をさぐることはないと思います。 できればラッキー（知らぬが仏のアンラッキー）なのです。 　
私の持っているFLASH（MX）のリファレンスにはないので、想像の域をでませんが（新しいASにはそういうプロパティがあるんだ！ということであればごめんなさい）、vyっていうのはプロパティなのかな？ ためしに、「FLASH _vy」で検索かけてみましたが、使われ方を見ると、y方向の加速度（変数）に使われているようなことが多いような。 _yは減点からみたy座標を表すプロパティ vyはその_yを変化させる加速度（変数） ではないかなと想像します。 ※参考URLはマウストレイルの作例で、この中にvyという記述がありますが、このこと？？？ 参考URL：http://www.asahi-net.or.jp/~tk3t-ysok/flash/tuto …
SWFObjectなどを 使用すればフラッシュプレーヤーがインストールされた際は <div></div>の中身を表示するという事が可能です。 http://www.drk7.jp/MT/archives/001481.html http://www.adobe.com/jp/devnet/flash/articles/sw … また、swfファイルにborderはできないと思います。周りを囲うdivなどに borderを指定したほうが良いですね。
true と false (または 0 と 1)しか持たないフラグなどという特殊な変数を使うからそうなるだけだと思います。 たとえば dx = (0-this._x)/4; となっている 0 の部分を 0 という数値ではなく普通の変数にしておいて その普通の変数をボタンから操作すれば良いのではないでしょうか。 ムービークリップ自体に書くスクリプト ----------------------------------------------------- // このムービークリップが現れたときに実行 onClipEvent (load) { // 初期 xy座標を指定 this._x = -200; this._y = 0; // 変数 point_x に -200 を代入しておく point_x = -200; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // このムービークリップを point_x に近づける this._x += (point_x-this._x)/4; } ----------------------------------------------------- this._x += (point_x-this._x)/4; ↑ ここで ムービークリップの座標を 0 や 200 という固定値に近づけるのではなくて point_x という変数の値に近づけるようにしています。 そしてボタンにはたとえば ------------------------------------ on (release) { // もし pic 内の変数 point_x が -200 より大きいときは if (_root.pic.point_x>-200) { // pic 内の変数 point_x の値を 200 減らす _root.pic.point_x -= 200; } } -------------------------------------- -------------------------------------- on (release) { // もし pic 内の変数 point_x が 1000 より小さいときは if (_root.pic.point_x<1000) { // pic 内の変数 point_x の値を 200 増やす _root.pic.point_x += 200; } } -------------------------------------- と書いておきます。 この場合は point_x が -200～1000 の間で 200 刻みで動きます。
Flash上で、BBSを表示することは結構難しいかもしれません。 そもそもswf場では簡単なhtmlとCSSは読めますが 複雑なものは読めなかったと思います。 ですのでもしflash場で掲示板的な事をやりたかった場合は ActionScriptで外のCGIから変数をひっぱってくるか Movable typeなどのCMSソフトを使い書き込んだ内容をxmlに 排出しそれを再度表示させるなどの処置が必要かと思われます。 いくぶん簡単にはできないと思われます＞_＜
船がムービークリップになっていて， 船にロールオーバーすると船ムービークリップ内のフレームが再生されて 船からロールアウトすると船ムービークリップ内のフレームが逆再生されているだけに見えます。 「Macromedia Flash非公式テクニカルノート ロールアウトで逆戻りするアニメーション」 http://www.fumiononaka.com/TechNotes/Flash/FN030 …
下記のサイトをお試しくださいませ。 http://www.mochibot.com/ 英語表記ですがそこまで難しくは ありませんし結構便利です。 　
当たり前ですがAdobeFlashで変換できます。 お急ぎなら体験版でやってみては。
このような感じのスライドでどうでしょうか？ www.hfm-kenchan.com/Lesson/log_qa/D0412094.htm
すみません。。。 すごく勘違いをしておりました。。 プリローダーですよね。 ただ%を表示するというのではなくて バーのようなものを表示ですよね。。 再度スクリプトを書いてみました。 どうでしょうか？ ただ縦2px横１pxのSpriteをaddChildしてあげて それを読み込んだ%でのばしてあげています。 そこの記述が sp.width = (stage.stageWidth/100) * loadNum; ここになります。読み込みが終わったら最後の /*ここに次の処理を記述☆*/の部分で2フレームにいくなり 関数を記述するなりしてくださいませ。 またなにかありましたらお聞きください。 /*パーセンテージを表示するスプライト*/ var sp:Sprite = new Sprite(); sp.graphics.beginFill(0x000000); sp.graphics.drawRect(0, stage.stageHeight/2, 1, 2); sp.graphics.endFill(); addChild(sp); /*ローダーインスタンスを作成*/ var loader:Loader = new Loader(); /*ロードされた定数*/ var loadNum:int = 0; var loadedNum:int = 0; /*イベントのリスナー登録*/ loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressEvent); loader.contentLoaderInfo.addEventListener(Event.OPEN, loadStart); loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadComp); /*URLRequestでurlを指定してロード*/ loader.load(new URLRequest("scene.swf")); /*ロードがスタートする時に呼び出される関数*/ function loadStart(e:Event):void { addEventListener(Event.ENTER_FRAME, checkLoader); } /*エンターフレーム*/ function checkLoader(e:Event):void { /*読み込まれた％まで数値を追加*/ if(loadNum < loadedNum) { loadNum ++; } /*ローダーをのばす*/ sp.width = (stage.stageWidth/100) * loadNum; /*もしloadNumが100の場合はエンターフレームを削除*/ if(loadNum >= 100){ removeEventListener(Event.ENTER_FRAME, checkLoader); trace("100%"); } } /*ロードされるたびに呼び出される関数*/ function progressEvent(e:ProgressEvent):void { loadedNum = e.bytesLoaded / e.bytesTotal * 100; trace(loadedNum); } /*ロードが読み込まれたらリスナーを削除*/ function loadComp(e:Event):void { /*リスナー削除*/ loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, progressEvent); loader.contentLoaderInfo.removeEventListener(Event.OPEN, loadStart); loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, loadComp); /*ローダー削除*/ removeChild(sp); /*ここに次の処理を記述☆*/ gotoAndStop(2); }
AHソフトのMotion Decompilerをお使いになられてはどうですか？ 参考URL：http://www.ah-soft.com/md/index.html
ActionScript2.0ならあるかもしれませんが 3.0はまだ少ないんじゃないでしょうか。 書籍もまだあまり出ていない状況ですし。 恐らく、書籍を書く側の人間も習得中とかじゃないでしょうか。 Flashのヘルプはかなり詳細に記載されているので、 ActionScriptの項を読まれるのが 一番安く、深い知識が得られ、早いと思います。 回答になってなくてすみません。
単なる報告ですが， 書かれていらっしゃるようなものを作成して， スクリプトもそもまま貼り付けてみましたが， フレーム１以外のボタンが動かないという現象は起きませんでした。 インスタンス名の付け忘れなども考えられますが， その場合はエラーが出ますよね。 　～エラー例～ 　　シーン1，レイヤー'ActionScript'，フレーム51、行３ 　　1120：未定義のプロパティ test_a2 へのアクセス このようなエラーも出ないのでしたら， インスタンス名の書き間違いや書き忘れの可能性も低いです。 とにかく フレーム１以外のボタンが動かないという現象は起きないのでわかりません。 *ー*－*－*－*－*－*－*－* ただ， 最初にボタン「test_b1」をクリックしたとします。 すると フレーム51 に行きますが そのフレームには「test_a1」，「test_b1」，「test_c1」は存在しません（インスタンスは消えています）。 代わりに「test_a2」，「test_b2」，「test_c2」が新登場します。 このフレーム51で次に ボタン「test_a2」 をクリックしたとします。 すると フレーム11 に行きますが， そのフレームにはボタン「test_a1」，「test_b1」，「test_c1」が存在します。 これらのボタンは一度消えてから再登場するので新登場することと同じになります。 新登場したこれらのボタンにはイベントリスナーは登録されていないので， ボタンとしての動作はしません。 イベントリスナーの登録スクリプトはフレーム1です。フレーム11にはありません。 ※こういうやっかいな現象がおこるのは 　 AS1やAS2で使えていた on(release) などの onハンドラ が 　 使えなくなったことによる弊害です。 　 何気なく適当に他のフレームに移動することはできなくなりました。 そのフレーム11での動向が気になりますが， フレーム１以外のボタンが動かないという現象は起きませんでした。 少なくともフレーム51のボタンは動作します。
＃１＆２ です。 > 1,2,3,4, > 5,6,7,8, > 9,10,11,12, > 13,14,15,16, > > との結果を得たいです。 そうする意味（メリット）もさっぱりわかりませんが， それはさておき， そう書かれていらっしゃる意味が全くわかりません。 ボタンには -------------------------------------- on (release) { _root.FuncPieceSet(); } -------------------------------------- と書いておいて， フレームには次のように書けば良いだけではないでしょうか？？？？？？？ ---------------------------------------------------- Arr = new Array(); for (column=0; column<=3; column++) { Arr[column] = new Array(); } function FuncPieceSet() { p_cnt = 1; for (column=0; column<=3; column++) { for (row=0; row<=3; row++, p_cnt++) { Arr[column][row] = p_cnt; } } // ↓書かれていらっしゃる通りを記述↓ Board = ""; for (column=0; column<=3; column++) { for (row=0; row<=3; row++) { Board += Arr[column][row]+","; } Board += newline; } // ↑書かれていらっしゃる通りを記述↑ trace(Board); } ---------------------------------------------------- つまり， 何が疑問かさっぱりわかりません。 答えはご自身で書かれていらっしゃいます。 「パンにジャムをはさみましたがうまく行きません。 　パンにジャムをはさんでジャムパンを作りたいです。」 と書かれていらっしゃるようにしか見えません。 ジャムパンを作りたいのでしたらジャムをパンにはさめば良いのでは？？？ それ以外答えようがないというか， こたえはちゃんとご質問（＃２の補足）に書いてあるというか...。 さっぱりわかりませんね。
チェックボックスのようにクリックするたびに選択・選択解除が切り替わるボタンで、選択されているボタンの番号を２行で表示したい・・・とのことだと思います。 いろいろな作り方がありますが、ボタンの選択状況を配列変数で管理し、ボタンがクリックされるたびに表示を更新してはいかがでしょう。 ボタンとの動作を組み合わせる前に、まずは２行で表示する仕組みについて考えてみましょう。 例えば、1 ～ 10 の数字の中の偶数だけを 　2/4/6/ 　8/10 このように表示するスクリプトは、どのようになるでしょうか。 単純に考えると、1 から 10 まで for ループで順番に見ていって、ループカウンタが偶数の時に数字と仕切りの”/”を表示する文字列に追加していけば、「 2/4/6/8/10/ 」という文字列が作れそうです。偶数・奇数は、２で除算した時の余り（剰余： % 演算子で求められます）が 0 かどうかで判別できます。 しかし、これだけでは２行の表示にならない上に、最後の項目である”10”の次にも仕切り記号”/”が付いてしまいます。 この場合は、１行目の行末には”6”が、最後には”10”が必ず表示されると分かっています。 それなら、表示する文字列を作る際に「ループカウンタが 6 の時は続けて改行を追加し、更にカウンタが 10 の時を除いて”/”を入れる」という条件を付けたら、どうでしょうか。 確かに、１行目の行末である 6 の部分で改行され、最後の項目の後に”/”は付かなくなります。 表示するものが予め決まっているのなら、このような力ずくでも何とかなります。 ですが、実際のボタンの場合は、10 個のうち何番目のボタンが選ばれるか、そもそも５個全て選ばれるのかすらも分からず、１行目の行末および最後に来る数字は不定です。 そこで、もう少し柔軟に考えて、「１行目の最後に改行を挿入する」「最後の項目の後には”/”を付けない」という発想で設計してみましょう。 改行と”/”を入れる判断を表示する数字の内容そのものではなく、「一定件数を表示したら改行を入れる」「最後の項目だったら入れない」というように、変数を利用して柔軟性を持たせます。 この例では for ループのループカウンタが偶数だった場合のみ文字列に追加するのですが、ループカウンタとは別の変数を用意して、項目を追加するたびにカウントを取ります。 すると、このカウントを見ることで文字列に何件追加したのかが分かるようになります。 １行あたり３件表示するには、このカウントが３の倍数の時に改行を入れます。３の倍数であるかは、偶数・奇数の判別と同様に剰余を利用すると簡単に分かります。 最後の”/”を省略するのも同じく、”/”を追加する時に「このカウントが最大表示件数（ご質問の例では 5 ）ではない場合」という条件を付ければいいわけです。 ------------------------------------------------------------ 表示に関する仕組みが考案できたところで、ボタンの動作と組み合わせてみましょう。 ボタンの詳しい仕様が分からないのですが、さしあたって 　・ 10 個のうち５個まで選択できる 　　既に５個選択されている場合、６個目は選択できない 　・ボタンの名前は 1 ～ 10 　・選択されているボタンの番号をリアルタイムで表示する このような仕様で考えます。 先ほどは「 1 ～ 10 の数字の中から偶数だけ」を表示する例を考えました。 今回はこれを応用して、「 10 個の変数を見て、ある特定の値が入っている場合に」「ボタンの名前」を表示する、と考えます。 ************************************ まずはボタンの選択状況の管理から。 次のように考えます。 10 個のボタンに対応する変数を 10 個、用意します。 この変数には、ボタンが選択されている場合は true 、選択されていない場合は false を入れると決めます。 ボタンがクリックされた時、対応する変数の中身が false であればそのボタンは”選択されていない”ということなので、選択された証として変数の値を true に書き換えます。 逆に、変数の中身が true だった場合は”選択されていた”ということですから、選択を解除したものとして false に書き換えます。 これだけでは 10 個のボタン全てを選択することも可能です。 ”５個まで”と制限を設けるには、選択されたボタンの数を把握しておく必要があります。 この動作は次のように考えます。 選択されたボタンの数を数えるための変数を用意して、選択されるたびにカウントを増やします。 あるボタンがクリックされた時、まず、そのボタンの選択状況を調べます。 基本的に選択されていない場合は選択できるのですが、この時にもう１つ、”選択されているボタンの数”についても調べます。既に５つ選択されている時は選択できません。 選択できないと判断される場合は、選択状況と選択された数の更新は行いません。 画面でクリックされても選択状況に関する変数を書き換えなければ、スクリプトの上では”選択されていないもの”と見なすことができます。 クリックされたボタンが現在選択されているものだった場合は逆に、選択は解除されます。 選択が解除された場合は、選択できるボタンの数に１つ空きができることになりますから、選択されているボタンの数を減らし、別のボタンを選択できるようにします。 ************************************ 選択状況を表示する時は、選択状況を管理する変数全部を片っぱしから調べて、変数の内容が true だった場合にのみ、ボタンの名前を文字列に追加して表示します。 とすると、選択状況を管理する変数は規則性のない名前を付けると不便なので、配列変数で用意します。 配列変数は同じ名前で管理番号だけが異なる、複数の変数の集まりです。 管理番号は 0 からの連番で付いており、for ループで順番に内容を見ていくことができます。 今回は詳しくは説明できませんが。 ActionScript の配列変数は、仕切りを作って複数の情報を管理できるようになっています。 仕切りを”フィールド”といい、文法の範囲内で好きな名前を付けることができます。 例えば、選択状況を sentaku_tbl という配列変数で管理し、この中にボタンの名前と選択状況の２つの仕切りを作るとします。フィールド名をそれぞれ btn_name と select という名前を付けたとすると、 　sentaku_tbl[ 0 ].btn_name や 　sentaku_tbl[ 0 ].select というように、同じ sentaku_tbl[ 0 ] の名前でも同時に２つの情報を管理することができます。 配列変数の管理番号は必ず 0 から始まります。 ボタンの番号（画面に表示する番号など）が 1 から始まったり、数字ではない名前を表示したい場合など、配列変数の管理番号とボタンの名前につながりがない時は、配列変数にボタンの名前を同時に記録しておくと便利です。 ************************************ スクリプトの一例です。 ステージにボタンとして使うムービークリップが 10 個と、変数 sentaku の値を表示するダイナミックテキストのテキストフィールドがあるとします。 各ボタンのムービークリップは、フレーム１に選択されていない状態の絵、フレーム２に選択済みの絵が描かれているものとします。 このスクリプトはメインのタイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /******************************************************/ 　///////////////////////////////////////////////// 　//初期設定 　///////////////////////////////////////////////// 　//ボタンの総数 　btn_max = 10; 　//選択可能なボタンの数（５件まで）と 　//現在選択されているボタンの数 　item_max = 5; 　selected_cnt = 0; 　//１行に表示する件数と 　//表示した件数を数えるカウンタ（改行処理に使用） 　col_max = 3; 　disp_cnt = 0; 　//ボタンの選択状況のテーブル（配列変数） 　//フィールド： 　//　btn_name：表示されるボタンの名前 　//　select　：選択されている場合true、それ以外はfalse　　　　 　sentaku_tbl = new Array(); 　//ボタンの名前（1～10）と選択状況（最初は全てfalse）を入れておく 　for( i = 0 ; i < btn_max ; i++ ) 　{ 　　sentaku_tbl[ i ] = { btn_name : ( i + 1 ) , select : false }; 　} 　///////////////////////////////////////////////// 　//ボタンの選択処理および選択状況を表示する関数 　//引数： 　//　btn_no ：ボタンの管理番号（テーブルの参照位置） 　//　btn_ref：ボタンのムービークリップの参照 　//戻り値：なし 　///////////////////////////////////////////////// 　function Select_Work( btn_no , btn_ref ) 　{ 　　var i , sentaku_status; 　　//---------- ボタンの選択処理 ---------- 　　//選択状況を取得 　　sentaku_status = sentaku_tbl[ btn_no ].select; 　　//現在、選択されていないボタンの場合： 　　if( sentaku_status == false ) 　　{ 　　　//選択可能な数未満であれば選択の処理 　　　if( selected_cnt < item_max ) 　　　{ 　　　　//選択されたことを記録し、選択されたボタンの数を更新する 　　　　sentaku_tbl[ btn_no ].select = true; 　　　　selected_cnt++; 　　　　//ムービークリップを”選択済み”のフレームに切り替える 　　　　btn_ref.gotoAndStop( 2 ); 　　　} 　　} 　　//現在、選択されているボタンの場合： 　　else 　　{ 　　　//選択を解除したことを記録し、選択されたボタンの数を更新する 　　　sentaku_tbl[ btn_no ].select = false; 　　　selected_cnt--; 　　　//ムービークリップを”選択可能”のフレームに切り替える 　　　btn_ref.gotoAndStop( 1 ); 　　} 　　//---------- 選択状況の表示処理 ---------- 　　//表示内容をリセット 　　sentaku = ""; 　　//テーブルを見ながら選択状況を表示する 　　for( i = 0 , disp_cnt = 0 ; i < sentaku_tbl.length ; i++ ) 　　{ 　　　//選択されている場合のみ表示 　　　if( sentaku_tbl[ i ].select == true ) 　　　{ 　　　　//表示する文字列にボタンの名前を追加し、 　　　　//表示した件数を更新 　　　　sentaku += sentaku_tbl[ i ].btn_name; 　　　　disp_cnt++; 　　　　//仕切り記号”/”を挿入 　　　　//ただし、最後の項目の後には入れない 　　　　if( disp_cnt != selected_cnt ) 　　　　{ 　　　　　sentaku += "/"; 　　　　} 　　　　//１行分の件数を表示するごとに改行を挿入 　　　　if( disp_cnt % col_max == 0 ) 　　　　{ 　　　　　sentaku += "\n"; 　　　　} 　　　} 　　} 　} /******************************************************/ 各ボタンがクリックされた時の処理は、配列変数を見る番号とボタンのインスタンスが異なるだけで、情報の書き換えや表示処理は全く同じです。 そこで、選択や解除の処理と選択状況を表示する関数を _root 階層に用意し、各ボタンからはこの関数を呼び出すだけにします。 違う部分である配列変数の番号とボタンのインスタンスについては、この関数を呼び出す際に引数（パラメータ）として渡します。 続けて、各ボタンのムービークリップのインスタンスにそれぞれ、次のように記述してください。 /******************************************************/ 　on(release) 　{ 　　//ボタンの処理関数を呼び出す 　　_parent.Select_Work( 0 , this ); 　} /******************************************************/ ↑これは１番目（最初）のボタンの例です。 ２番目のボタンは 0 の部分に 1 、３番目のボタンは 2 ・・・というように、関数の第１引数に渡す番号を連番で変えてください。 ある規則に従って情報を入れ、表を見るように使う配列変数を”テーブル”といいます。 今回は、配列変数の 0 番に１番目のボタンの名前と選択状況の情報を、以下、1 番に２番目のボタン、2 番に３番目のボタン・・・というように情報を入れて、ボタンに応じた番号の表＝配列変数を見ることでボタンの名前と選択状況を取得します。 Select_Work 関数を呼び出す際の第１引数が、表を見る位置である配列変数の管理番号の指定になっています。 この番号を間違えると正しく情報を取り出せなくなるので、ご注意ください。 ご質問文を見る限りでは、ボタンのムービークリップが何かの入れ子になっているようですが。 この作例では、呼び出す Select_Work 関数はメインのタイムライン（通常は _root ）にあります。 制作中の作品にこのスクリプトを組み込む場合は、ターゲットパスの誤りにもご注意ください。 ------------------------------------------------------------ 紙面の都合上、１つ１つを詳しくは解説できません。 スクリプトの内容につきましては、コメントをご参考になさってください。 お使いの Flash のバージョンが分からないのですが。 ダイナミックテキストに変数を指定して表示する方法は、テキストフィールドにインスタンス名を付けられるようになった Flash Player 6 （作成ツールは Flash MX 以降）からは旧式になりました。 それから、バージョンによっては、インスタンス名を工夫してタイムラインでクリックした時の動作等をまとめて定義することもできます。 この話はあちこちの解説サイトなどで取り上げられていますし、このサイトでも度々出ています。興味がありましたら、調べてみてください。
ソースの提示がないと、全くの憶測でしか書けませんが。^^; 「safari opera」だけならば、embedが書かれてないのかと。
＃１です。 > 回答の雰囲気からすると、paraFlaでは作れないようですね…。 Flash はソフトやまたそのバージョンによって回答や方法が変わります。 ParaFla という特殊なソフトを使われているのでしたらそのことをまず明記すべきでしょう。 また、 「paraFlaでは作れない」 ではありません。 「paraFlaでは作らなければならない」 が正確です。 Adobe Flash だと用意されているので 「作らなくても良い」ということです。 用意されていないソフトでしたら 「作る必要がある」のです。 同じフリーのFlash作成ソフトでも Suzuka でしたら、 「リンクシンボル」という機能があって、 他のSWFのムービークリップなどを 別のSWFの中にむしって持ってくるということができます。 その「リンクシンボル」という機能で、 AdobeFlashのコンポーネントをむしってとってきて使うという方法を提示してあるページを見たことがあります。 「Suzuka ＆ ParaDraw 講座-Flashコンポーネント」 http://suzupara.iinaa.net/compo81.html もちろん ParaDraw などですべての部材を描いて作成するところからはじめてもかまいませんが、 Suzuka のリンクシンボルを使うのも１つの手段かもしれません。 なお、 ラジオボタン程度でしたら、 リンクシンボルではなく、ちゃんと最初から自作する方法を 同じサイトの別ページに書いてあります。 「ラジオボタン・チェックボックス(カスタムクラスの使い方)」 http://suzupara.iinaa.net/radio_btn.html またラジオボタン程度でしたら「クラス」の概念など使わなくても、 普通のタイムラインスクリプトでもできます。 http://suzupara.iinaa.net/kiso151.html ↑後半の「トグルボタン」の部分 ParaFla でも上のように自作すればできますよ。 ※ParaFlaでは「クラス」の概念は使えませんから 　下の方の「トグルボタン」のような作り方になると思います。 この自作するという行為を「苦」と思えばかなり面倒だと思うと思います。 しかし、 この「自作する作業こそがフリーの醍醐味」と思えば， 自作する方がものすごくこの上なく楽しいものです。 また人によっては 「Adobeなんか使わなくても実力で何でもできるさ！」 と言い張れる喜びになるかもしれません。 「苦」か「楽」かは、考え方によって180°変わります。
書き方が良いとか悪いとかいう細かい話は抜きで， 書かれていらしゃるような現象は起きませんので何とも言えません。 書かれていらっしゃるスクリプトの抜けている部分， startDrag 関連スクリプトを補完すると 次のようになりますよね。 /////////////////////////////////////////////////////////////////// my_mc.addEventListener(MouseEvent.MOUSE_DOWN,onMouseDown); function onMouseDown(event:MouseEvent):void { my_mc.startDrag(); my_mc.stage.addEventListener(MouseEvent.MOUSE_UP,onMouseUp); } //↓大勢に影響はしませんし本題ではありませんから残しましたが， // 　本当はここにこれを書くと onReleaseOutside の意味とはズレます。 my_mc.stage.addEventListener(MouseEvent.MOUSE_UP,onMouseUp); function onMouseUp(event:MouseEvent):void { my_mc.stopDrag(); my_mc.stage.removeEventListener(MouseEvent.MOUSE_UP,onMouseUp); } /////////////////////////////////////////////////////////////////// 選択可能にしたダイナミックテキストを作成しても テキスト入力のテキストフィールドを作成しても ご質問にあるような マウスボタンを離してもmy_mcがくっついてくる現象は起きませんでした。 また， 「my_mc」の上のレイヤーに作成しても下レーヤーに作成しても， ご質問にあるような現象は起きませんでした。 さらにまた， Flash　Player 9 用の SWF をパブリッシュしても Flash Player 10 用の SWF をパブリッシュしても結果は同じで， ご質問にあるような現象は起きませんでした。 ここまでだけの組み合わせでも，少なくとも 8 通りはしてみたということです。 さらにテキストフィールドではなく， TextAreaコンポーネントの書きまちがいかとも思いましたので， それでしてみましても結果は同じ。 やはりご質問にあるような現象は起きませんでした。 さらにさらに， SWF とともに HTML をパブリッシュして， その HTML を IE で開いてみても同じ。 ご質問にあるような現象は起きませんでした。 (ブラウザ用プラグイン Flash Player 10) もしすごく稀な条件が重なったときにだけ起こる現象でしたら その稀な条件を特定すれば解決するのかもしれません。 例：「ダイナミックテキストを選択可にして 　　 センタリング にして 背景なし にして 　　 HTMLレンダリングを有効にして 　　 テキストフィールドの下レイヤーにMCを配置して 　　 Flash Player 10 でパブリッシュして 　　 ブラウザ Opera で見たとき。」 　　など。
初歩的なご質問というより， 質問になっていないご質問だと思いますよ。 何がご質問なのでしょうか？ ～質問の疑問例～ ・ステージ上に画像を描く描き方がわからない ・ステージ上にJPEGファイルを配置する方法がわからない ・ステージ上に配置したJPEG画像をだんだん透明にする方法がわからない ・ステージ上に配置したJPEG画像を透明からだんだんと不透明にする方法がわからない 　などなど また， Flash Lite は 普通のFlash の特殊応用編だと思われた方が良いと思います。 普通のFlashで書かれていらっしゃることができるかどうかが先だと思います。 携帯ではなく普通のPC対応Flashではご質問のようなものが作成できるのでしょうか？ もし普通のFlashでも作成できないのでしたら， 携帯であるなしに関わらず， Flash のバージョンに合った本で 立ち読みして自分でもできそうだと思った本を買って それで１つ１つ覚えて行くのが良いと思います。 携帯はその先です。 ネット検索をするなら 「モーショントゥイーン」 とか 「Flash フェードイン フェードアウト」 などど検索すると そういうことを図説付きで説明されたサイトが見つかると思います。 Google「モーショントゥイーン」 http://www.google.co.jp/search?hl=ja&q=%E3%83%A2 … Google「Flash フェードイン フェードアウト」 http://www.google.co.jp/search?hl=ja&q=Flash+%E3 … --- --- --- 補足 --- --- --- 例えば， 上に書いた「モーショントゥイーン」という言葉（専門用語）を仮に知らないとします。 　モーショントゥイーンという言葉を知らない 　　　↓ 　とりあえず何か検索する 　　　↓ 　思ったものが検索でヒットしない 　　　↓ 　モーショントゥイーンの方法がわからない 　　　↓ 　作成できない 　　　↓ 　とりあえず何か検索する 　　　↓ 　思ったものが検索でヒットしない 　　　↓ 　モーショントゥイーンの方法がわからない 　　　↓ 　作成できない 　　　↓ 　とりあえず何か検索する 　　　↓ 　思ったものが検索でヒットしない 　　　↓ 　モーショントゥイーンの方法がわからない 　　　↓ 　作成できない 　　　↓ 　　　… 同じ所をグルグル回るだけです。 だから最初は本が良いと思います。 　とりあえず本の通りに作成して用語を覚える 　　　↓ 　モーショントゥイーンという言葉を知る 　　　↓ 　検索する 　　　↓ 　ヒットする 　　　↓ 　さらなる使い方や発展させる方法が見つかる こうなるのが良い循環です。 本は基本的すぎても無駄になることは少ないと思います。 モーショントゥイーンという言葉を知るだけでも先につなげて行けます。 ※ モーショントゥイーンはあくまでも一つの例です。 　　シンボルもしかり，インスタンスもしかり， 　　ムービークリップもしかり，モーションガイドもしかり， 　　レイヤーもしかり，ターゲットパスもしかり， 　　gotoAndPlay() もしかり，…キリがない……… あと上にも書きましたが， もし本をお持ちでない場合， 「本は持っているFlashのバージョンに合ったものを選ぶこと」 これが第一条件です。 CS3 Pro でしたら 「Flash CS3 用の本を買う」 これが最も重要です。 とにかくFlashはバージョンが変わると大きく仕様やスクリプトが変わります。 たとえば上のモーショントゥイーン１つを例にしても， CS4 のモーショントゥイーンと CS3以下 のモーショントゥイーンとでは全然違います。 バージョン違いの本を買えば，モーショントゥイーンすらできないままになる可能性が大きいです。 ※ CS3以下のモーショントゥイーンのことを 　　CS4 では クラシックトゥイーン と呼びます。 　　現在のところネット検索で見つかるサイトでは 　　CS3以下のモーショントゥイーンの説明が多いので 　　特殊な検索をしない限り 　　CS4の新モーショントゥイーンに出会うことは少ないと思います。 　　一方，本屋さんでは， 　　CS4用の本に出会う可能性が大きいので要注意です。 　　（買っても混乱するだけなので買わない方が良いでしょう。 　　 売れ残りの汚れた本でも CS3 用の方が良いです。） ※ 自分でもできそうだと思う本を 　　ご自身で選択して買うのが良いです。 　　できそうかどうかがわからない場合は， 　　「描画方法」「線と塗り」「バケツツールなどの使い方」 　　「シンボルの作成方法」「シンボルとインスタンス」 　　「ボタンの作成方法」「ムービークリップ」 　　「レイヤー」「マスクレイヤー」 　　「モーショントゥイーン」「モーションガイド(ガイドレイヤー)」 　　この辺のことについて 　　しっかり書かれている本を選択するのが良いと思います。
あ、ごめんなさい、これだと小数点がない場合はresが文字列で返ってきちゃいますね。 必ず小数点が含まれるのであればいいのですが。。。
ポップアップが開いた先のタイトルバーに限定しては 今までほとんど気になどしていませんでしたが， 単にブラウザの仕様ではないでしょうか。 つまり不可解な現象でも何でもなく， 単に「そういうもの」ではないかと思います。 また getURL とは何の関係もないのではないでしょうか。 つまり Flash は基本的に無関係ではないかと思います。 どこでも良いですが たとえばここに普通のJavaScriptのポップアップウィンドウのページがあります。 「ポップアップウィンドウを開く」 http://www3.ocn.ne.jp/~motiya/java/sample-1/pop_ … この↑ページの「お知らせ」ボタンをクリックすると， IEではタイトルバーにURLが表示されます。 Firefox ではタイトルバーに タイトル が表示されます。 Flash は関係なく，単にブラウザの仕様だと思います。 「ＪａｖａScript＆VBScriptサンプル集（２）」 http://www.aichi-iic.or.jp/co/otaya-jouzou/tv01/ … 　　↓「タイトルの表示」 　http://www.aichi-iic.or.jp/co/otaya-jouzou/tv01/ … のように， ポップアップで開かれるウィンドウのタイトルを JavaScript コントロールされてはいかがでしょうか。
テキストフィールドのインスタンス名を「my_txt」とした場合， 次のようになると思います。 ---------------------------------------------------------- // テキストフィールド 「my_txt」 に <a href='event:hoge'>テスト１</a> を表示 my_txt.htmlText = "<a href='event:hoge'>テスト１</a>"; //「my_txt」にテキストのリンクがクリックされたときに実行するイベントリスナーを登録 my_txt.addEventListener(TextEvent.LINK,function(evｔ:TextEvent):void { // 公開されている関数の呼び出し(hoge，引数無し) ExternalInterface.call(evｔ.text,""); }); ---------------------------------------------------------- 私が参考にしたURL 「AS3 では asfunction の代わりに TextEvent.LINK を使う」 http://blog.kaihatsubu.com/archives/001637.html
> ドラッグして「モーショントゥイーンを作成」としているのですが、 > キーフレームをつけた箇所ずつ区切れてしまうのです。。 おそらく自由曲線的にインスタンスをモーショントゥイーンさせたいということなのだと思います。 しかし，残念ながら Adobe Flash ではそれができません(他のソフトではそれらしいことができるものもありますが。) Adobe Flash の場合は(正確には CS3 以下では)， 線ツールで自由曲線を描いて， その曲線を モーションガイド にしてモーショントゥイーンをさせます( CS4 では少し違います。)。 [参考図↓下] 操作は比較的簡単なのですが， 図示などが十分できないここでは詳細な説明が難しいので そのまま「モーションガイド」などと検索してみてください。 http://www.google.co.jp/search?hl=ja&q=%E3%83%A2 …
http://oshiete1.goo.ne.jp/qa3256732.html 過去の回答です swfファイルを作成して、TMPGEnc+swf.vfpかAviutl+swf.vfpでAviとかに変換すればWMMで変換できるとおもいます。 また、『swf avi 変換』などで検索すると出てくると思います。 わからないことがあったら補足で聞いてください(*^_^*)
スミマセン＃１です。 FlashLite3.0 と ActionScript3.0 を読み間違えていました。 FlashLite3.0 だと ActionScript2.0 までですよね。 FlashLite3.0 は経験したことがありません。 また FlashLite系のSharedObjectは SWFがデータフォルダに存在する場合でないとダメなど，かなり制限があったと思います(それも機種によってまちまち)。 この辺を軸に検索してみてください。 Google検索「SharedObject Flash Lite 3.0」 http://www.google.co.jp/search?hl=ja&q=SharedObj …
参照のサイトから変換ソフトを使ってみてはいかがでしょうか？ 特にコンポーネントがなくてもこのソフトを使えば変換可能です。 自らコーデックを持っているためかなり重たいソフトですが、QuickTimeに依存しないところが良いです。 ただインターフェースは完全にWindows用であり、変換設定も少々面倒です（条件がきちんと設定しないと変換できないと怒られます） 自分はMP4ファイルをFLV形式に変換するときに使います。（こんな変換をする人はあまりいないのでは？？？） 参考URL：http://zibuntoushi.blog31.fc2.com/blog-entry-202 …
SUZUKA ParaFla FlashDevelop SVG2PDR 等、幾つもあります。
alpha や enterFrame 以前に 「何をどうやって表示させるのか」 という根本的な方法が抜けているので回答しにくいですね。 「何をどうやって表示させるのか」によって enterFrame で実行されることは変わります。 まず 『「画像」とはJPEGなどビットマップ画像である』 とします。 次に 『「画像」はFLAファイルのライブラリの中に登録されている』 ものとします。 (＝つまり 『外部ファイルをロードしていくパターンではないもの』 とします。) この条件であるとするなら， ライブラリからステージ上にランダムに画像を呼びだしてきて表示させるのが簡単なように思います。 まとめると 　　ライブラリの中に登録されているビットマップ画像(JPEGなど)を 　　10秒間隔でステージ上にランダムに呼びだしてきて 　　"enterFrame"（Event.ENTER_FRAME） で 　　alpha を 0 から 0.15 ずつ加算する。 という場合の方法例を書きます。 ＝＝＝ ＝＝＝ ＝＝＝ まず， ライブラリにあるランダムに表示させたいビットマップ画像に クラス名を付けて行きます。 ライブラリのビットマップ画像を選択して， 右クリックなどからプロパティを表示させると， 「リンケージ」の欄があると思いますから， 　□ActionScript用に書き出し にチェックを入れて 　クラス(C)[　　　　] となっているところに，１つずつ違うクラス名を指定して行きます（下の図↓）。 この説明例では， ５つの画像があって， 「Img0」，「Img1」，「Img2」，「Img3」，「Img4」 というクラス名を付けたということにします。 その場合， メインのタイムラインのフレームには次のように書けば良いと思います。 ================================================= // ライブラリのBitmapDataの Img* の最終番号を設定 var last_num:int=4; // Img* の準備 for (var i:int = 0; i<=last_num; i++) { // クラス名からクラスを参照 var myClass:Class=Class(getDefinitionByName("Img"+i)); // BitmapDataクラスのインスタンス myBMD* を作成 this["myBMD"+i]=new myClass(0,0); } // カウント用変数の初期化 var cnt:int=0; // Timerクラスのインスタンスを作成(実行間隔，繰り返し回数(0は無限)) var myTimer:Timer=new Timer(10000,0); //間隔ごとに発生するイベントリスナーを登録(イベント，実行関数) myTimer.addEventListener("timer", startFadeIn); // リスナーで呼び出される関数 startFadeIn の定義 function startFadeIn(evt:TimerEvent):void { // フェードインの準備をする関数 setFadeIn の実行 setFadeIn(); } //タイマーの動作を開始 myTimer.start(); // フェードインの準備をする関数 setFadeIn の定義 function setFadeIn():void { // カウントを1加算する cnt++; // ランダムな 0～last_num の整数を取得 var rnd:int = Math.floor(Math.random()*(last_num+1)); // Bitmapクラスのインスタンス myBMP* を作成 this["myBMP"+cnt]=new Bitmap(this["myBMD"+rnd]); // 座標を指定 this["myBMP"+cnt].x=50; this["myBMP"+cnt].y=20; // 初期不透明度を指定 this["myBMP"+cnt].alpha=0; // myBMP* を配置 addChild(this["myBMP"+cnt]); // myBMP* に毎フレーム発生するイベントリスナーを登録(イベント，実行関数) this["myBMP"+cnt].addEventListener("enterFrame" ,fadeIn); // カウントが3以上になれば２つ下の画像を削除 if (cnt>=3) { removeChild(this["myBMP"+(cnt-2)]); } } // フェードインをさせる関数 fadeIn の定義 function fadeIn(evt:Event):void { // myBMP* の不透明度を 0.15 ずつ加算 evt.target.alpha+=0.15; // もし 不透明度が 1 以上になれば if (evt.target.alpha>=1) { // 不透明度を 1 で固定 evt.target.alpha=1; // 毎フレーム発生するイベントリスナーを削除 evt.target.removeEventListener("enterFrame" ,fadeIn); } } // フェードインの準備をする関数 setFadeIn の初回実行 setFadeIn(); ================================================= ※10秒(10000ミリ秒)ごとに何かをさせるのには 　 Timerクラスを使用しています。 ※ランダムとは重複がある場合も含みます。 　上の例でも同じ画像が連続で呼びだされる場合があります。 　もし，重複連続出没させない場合は 　具体的に「どうしたいのか」をご自身の中でハッキリさせて， 　それなりの対処をする必要があると思います。 　[参考] 　FN0212003 - 配列を偏りなくランダムに並替える 　http://www.fumiononaka.com/TechNotes/Flash/FN021 … 　↑あくまでも一参考例です。 　 どのようなランダム数を発生させたいかは作者でないとわかりません。 　
＃１の方が仰るように http://creator.job-stage.jp/guide/fla_sample/0001/ のHTMLソースを元にしていると仮定して話します。 ＞ このページのヘッダー部分にあるドキュメントタイプの指定が間違っているようです。 間違っていません。 最初の2行がある場合とない場合の違いは、ブラウザにおける互換モードと標準モードの差です。 Firefoxで起きた現象は、 「flashの高さを100%にされても、親（HTML）自体の高さが決まっていなくて、何に対して100%なのかわからないからこう表示しちゃおう」 といった感じです。 前途URL先の場合、標準モードとなりますが、このまま使う場合の解決方法は、HTMLのCSSに html,body{height:100%;} を追加して下さい。 ソースで言うと <style type="text/css"> <!-- //↑から↓までの間に追加です --> </style>
遊び程度の簡易的なものであれば簡単に作成できますよ。 ステージ上にテキスト入力のテキストフィールドを作成し， プロパティインスペクタで， たとえばインスタンス名を「pass_txt」などと付けます。 そして， 「単一行」とか「複数行」などになっている部分を 「パスワード」にします。 ボタンも適当に作成して， プロパティインスペクタで， たとえばインスタンス名を「go_btn」などと付けます。 このボタン 「go_btn」 をクリックしたときに テキストフィールド 「pass_txt」 に入力されている値(文字列)が 何某かのパスワードと一致していれば 好みのフレームに gotoAndStop または gotoAndPlay させれば良いわけですから， フレームに書くスクリプト例は次のようになります。 ---------------------------------------------- // コンキストメニューの非表示 (右クリック→「再生」の防止) Stage.showMenu = false; // とりあえず停止(あってもなくても良い) stop(); //ボタン「go_btn」 クリック時の動作定義 go_btn.onRelease = function() { // もし passs_txt に 「abcde」 が入力されていたら if(pass_txt.text == "abcde"){ // 任意のフレームにジャンプして再生 gotoAndPlay("○○",1); } }; ---------------------------------------------- (参考図：下↓) === === === === === === === === === ただし。 わかっていらしたらそれで良いのですが， これはあくまでも簡易的なものです。 SWFは "ファイルの" セキュリティが非常にヤワです。 ※SWFファイル自体のセキュリティがヤワなだけです。 　 プライバシー侵害やPC内の情報漏洩に関するセキュリティは高いです。 　 つまり 　 Flash閲覧者に対するセキュリティは高いです。 　 SWFファイル(=作成者が入れた情報)に対するセキュリティは無に等しいです。 閲覧者のPC内にSWFを保存されて，分解や解析などされれば 上記の場合，パスワードは 「abcde」 であることがすぐにバレます。 有償無償に関わらずそういう解析ソフトなどはかなりたくさん出まわっています。 また仮に， パスワードの部分をいくら頑張って見やぶられないようにActionScriptなどを駆使して作ったとしても， SWFをPC内に保存されてしまえば， パスワードなどなくても先にあるデータや画像などは簡単に見ることができます。 ですから パスワードの部分の解析が困難か簡単かという問題でもありません。 （=上のスクリプトやパスワードでは簡単すぎるという点が問題なのではありません。） キーワード：「HugFlash」，「SWF Decompiler」，「FreeMotion」，… たとえば「会員名簿」など， 他の人に決してバレてはならない情報入りFlashをこの方法で作成して， ネット上にアップするのは厳禁でしょうね。 簡単なゲームの景品や何かの参加賞程度に パスワードなしで見られることがあっても良いということを前提として， 「壁紙用画像を用意しておく」 とか 「オメデトウアニメを見せる」 とか 「作者自身のはずかしい写真を公開する」 とか そういうことであれば問題ないと思います。
ちょっといま手元に本がないのでカンですが、すべてのフレーム読み込む前に以下実行してもクリアされて1フレーム目になってしまうのではないでしょうか。 _root.mc1.gotoAndPlay(50); 読み込み完了を待つ必要があるんじゃないかとおもいます。普通はmc1のローディングをリスナーなどで読み込み待ちすると思うんですが、簡単にやろうとするなら、メインフレームの1フレーム目で読み込み、2フレーム目でフレーム50でとめるとかすれば、案外いけるかもしれません。 あくまでカンということでスイマセン。実際のやり方はまた手が空いたら書きます。
PrintJob()を使ってみてはいかがですか?
ディレイ と言うべきかどうかはわかりませんが， スクリプトの遅延実行をするのでしたら setInterval が使えると思います。 フレーム30 のキーフレームに次のように書きます。 -------------------------------------------- // とりあえず停止 stop(); // setInterval をセット(戻り値：myID) myID = setInterval(function () { // フレーム2 へ行って再生 gotoAndPlay(2); // この setInterval を解除 clearInterval(myID); // 10000ミリ秒後(10秒後)に実行 }, 10000); -------------------------------------------- (回答内容とは関係なし→オリジナル画像 横315px 縦240px)
どこを問題だとされているのかがわからないので 何を解決する方法をきかれているのかがよくわかりませんが， たとえばファイル構造を次のようにしてあるとするなら， 　　任意のフォルダ 　　　　　├ ○○.html 　　　　　├ ○○.html 　　　　　├ test1.mp3 　　　　　└ test2.mp3 ActionScriptは次のような感じにすれば良いのではないでしょうか？ ------------------------------------------------------------ // 外部 mp3 ファイルの URLRequest をそれぞれ作成 var sound_url1:URLRequest=new URLRequest("test1.mp3"); var sound_url2:URLRequest=new URLRequest("test2.mp3"); // その URL の Soundインスタンス をそれぞれ作成 var sound_obj1:Sound=new Sound(sound_url1); var sound_obj2:Sound=new Sound(sound_url2); // sound_obj1 を再生させて SoundChannelクラス の戻り値を得る var sound_chn:SoundChannel=sound_obj1.play(0,1); // そのSoundChannelクラスオブジェクトに イベントリスナーを追加 // 引数(イベント.サウンド終了，実行関数：playNextSound) sound_chn.addEventListener(Event.SOUND_COMPLETE,playNextSound); // 関数 playNextSound を定義 function playNextSound(evt:Event):void { // sound_obj2 を 10000回ループ再生 sound_obj2.play(0,10000); } ------------------------------------------------------------ Sound に関しては ActionScript2.0 より ActionScript3.0 の方が簡単（わずらわしいことが少ない）ように思います。 上のスクリプトの元や説明はすべてこのページにありますが↓。 「FlashゲームPG講座 For AS3.0【サウンドについて】」 http://hakuhin.hp.infoseek.co.jp/main/as3/sound. …
text-align:center;　の下に margin:0 auto;　を加えてみてはどうです？
Flash のプログラミング の問題ではなくて ブラウザの仕様とHTMLの問題です。 SWF(Flashのファイル)を HTML に貼り付けるときのタグで object の方には <param name="wmode" value="transparent" /> embed の方には <embed　wmode="transparent"... /> を付け加えれば一応，SWFが下に表示されることはされます。 ただし， これは Flash のプログラミング の問題でも Flash Player の仕様でもなく あくまでも "ブラウザの仕様" ですから， すべてのブラウザにおいて うまく行くかどうかはわかりません。 FLASH PAPA FLASH（swf）の上にレイヤーの乗せる http://tommylee.blog71.fc2.com/blog-entry-212.html Flash-FlashのswfがHTMLのレイヤーより上に表示されてしまう - PukiWiki http://okra.ark-web.jp/~takemura/public/pukiwiki … Flash・・・HTML上でFlash（swf）の上にレイヤーを乗せるとき（メモ http://blogs.yahoo.co.jp/mxjrm717/21494474.html
onClipEvent(load){}　は， そのムービークリップがロード(表示)されたときに１回だけ実行されます。 ですからまず そのムービークリップがどこかに出没した瞬間に， そのムービークリップの ｘ座標 が 50 以上であれば nextFrame(); で， "そのムービークリップ内のタイムライン" 再生が 次のフレームに移ってストップします。 そのムービークリップがどこかに出没した瞬間に， そのムービークリップの ｘ座標 が 50 未満であれば そのままの状態です。 そのままの状態というのは "ムービークリップ内のタイムライン" が再生状態であれば 再生されっぱなし， "ムービークリップ内のタイムライン" が停止状態であれば そのフレームで停止しっぱなし ということです。 onClipEvent(enterFrame){}　は １フレーム進む時間ごとに毎回実行されます。 12fps 設定のムービーだと，１秒間に 12回 ほど実行されます。 したがって， 　mcのx座標が50以上になったら 　その "ムービークリップ内のタイムライン" を 　次フレームへ進める ということをしたいのであれば， １フレーム進む時間ごとに毎回 50 以上か未満かを判定させなければなりません。 したがって， ここだけを単純に鵜呑みにしてスクリプトを書き換えるなら， ------------------------------------------ // １フレーム進む時間ごとに毎回実行 onClipEvent(enterFrame){ this._x += 10; // ｘ座標が 50 以上になれば if (this._x>=50) { // このムービークリップ内を次のフレームに進めて停止 nextFrame(); } } ------------------------------------------ と書く必要があります。 （ onClipEvent(load){} は不要なので削除 ） --- --- --- --- --- --- 単純に鵜呑みにしてスクリプトを書き換えましたが 本当は鵜呑みにしていいかどうかわからない部分があります。 nextFrame();　は ムービークリップ自体に書いているわけですから， その "ムービークリップ内のタイムライン" が次のフレームに進みますよ。 それで良いのかどうかは私にはわかりません。 あと ムービークリップ のｘ座標が 50 以上になれば １フレーム進む時間ごとに毎回 その "ムービークリップ内のタイムライン" が次のフレームに "進み続け" ますよ。 それで良いものかどうかも私にはわかりません。 もし "進み続け" させたくない場合は， ---------------------------------------------------------------- // このムービークリップが現れたときに実行 onClipEvent (load) { // 適当にフラグ(旗)となる変数を作る(初期値false) flag = false; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { this._x += 10; // ｘ座標が 50 以上で なおかつ フラグが false のとき if (this._x>=50 && !flag) { // このムービークリップ内を次のフレームに進めて停止 nextFrame(); // フラグを true にする flag = true; } } ---------------------------------------------------------------- のように一工夫する必要があります。
未検証。 この記事のコメントやその他のサイトのブログなどを見ると， super()はActionScript 3かららしい。 http://www.gskinner.com/blog/archives/2003/09/pa … 2007年1月31日についた最後のコメントによると， super.constructor.apply( super, arguments ); と書く必要があるらしい
どこから説明すれば良いか困りますね。 長くなりますが，広く浅く説明します。 onClipEvent (enterFrame) {○○} は１フレーム進む時間ごとに毎回 ○○ の部分が実行されます。 そこは宜しいですよね？ この onClipEvent(enterFrame){○○} を各ムービークリップに書くということは， 各ムービークリップの onClipEvent(enterFrame){○○} の○○が １フレーム進む時間ごとに毎回順次実行されるということです。 この各ムービークリップの onClipEvent (enterFrame) {○○} の実行順序ですが， これは [パブリッシュ設定] の [Flash]タブ にある， 　ダウンロードの順序(L)：[下から上へ　　ｖ] となっているところで決まります。 [下から上へ]　を [上から下へ]　などに変えると， 逆に mc01 のみが反応するように変わると思います。 ※デフォルトは [下から上へ] です。 　 通常それで問題はありません。 　 またそこを変えても何の解決にもならないので 　 実験してみるだけにしておいて， 　 本番は変えない方が良いです。 順序の規則（法則）については詳しく書きませんし複雑です。 とにかく， 　各ムービークリップの onClipEvent(enterFrame){○○} の○○が 　１フレーム進む時間ごとに毎回，不明な順序で実行される。 ということだけはちゃんと認識しておく必要があります。 ご質問のような現象が起こるのは， 　mc01 の onClipEvent(enterFrame){○○} が実行 　mc02 の onClipEvent(enterFrame){○○} が実行 　mc03 の onClipEvent(enterFrame){○○} が実行 　　　　　　…略… 　mc07 の onClipEvent(enterFrame){○○} が実行 という順で実行されるので起こる現象です。 たとえば， 「mc01」にだけ マウスが乗っていたとします。 　mc01 の onClipEvent(enterFrame){○○} が実行 ここ↑でフレーム「f01」に進もうとします。 これがやりたいことですよね。 しかし次の 　mc02 の onClipEvent(enterFrame){○○} が実行 が実行されたときには， マウスは「mc02」には乗っていないのですから， このスクリプトによって フレーム「start」 に進もうとします。 次の 　mc03 の onClipEvent(enterFrame){○○} が実行 によっても フレーム「start」 に進もうとします。 最後の 　mc07 の onClipEvent(enterFrame){○○} が実行 によっても フレーム「start」に進もうとします。 旗上げゲームで言うと 　　「赤上げて，赤上げないで，赤上げない。」 　　　→赤が下がっているのが正解！ と同じ状態です。 したがって，結局最後に実行される mc07 の onClipEvent (enterFrame) {○○} が最優先されて， 「mc01」にだけマウスが乗っていた場合， フレーム「start」に進みます。 以上がそうなる理由です。 ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ ＝＝＝ 解決策ですが。 そもそも Flash 5 時代にしか使われなかったような， onClipEvent(enterFrame){○○} を使うところに 問題を生じやすくさせる原因があると思います。 普通 onClipEvent (enterFrame) {○○} などは それ相応の理由がない限り使いません。 ※仮に Flash 5 であっても 　 指令塔のようなムービークリップを１つ作成して 　 その 1ムービークリップ の onClipEvent(enterFrame){○○} だけによって 　 全体を管理するというのが普通のやり方です。 ご質問内容にあるようなことをする場合で， なおかつ，スクリプト内容も変えない場合は次のようにします。 まず， 「mc01」～「mc07」 自体に書いた onClipEvent(enterFrame){○○} を全て削除します。 そして _root のフレーム1などに次のように書きます。 --------------------------------------------------- _root.onEnterFrame = function() { if (_root.mc01.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f01"); } else if (_root.mc02.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f02"); } else if (_root.mc03.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f03"); } else if (_root.mc04.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f04"); } else if (_root.mc05.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f05"); } else if (_root.mc06.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f06"); } else if (_root.mc07.hitTest(_root._xmouse, _root._ymouse, 1)) { _root.gotoAndPlay("f07"); } else { _root.gotoAndPlay("start"); } }; --------------------------------------------------- これで， 最後の「mc07」のスクリプトだけが動作するということはなくなります。 ＝＝＝ ＝＝＝ ただしー！ ですね。 最初に書きましたが， onClipEvent (enterFrame) {○○} は， １フレーム進む時間ごとに毎回 ○○ の部分が実行されます。 また上に書いた ○○.onEnterFrame = function() {○○} も １フレーム進む時間ごとに毎回 ○○ の部分が実行されます。 つまりどっちにしても， １フレーム進む時間ごとに毎回 ○○ の部分が実行されることには変わりがありません。 たとえば 「どのmcにもマウスが乗っていないとき」。 _root.gotoAndPlay("start"); これが１フレーム進む時間ごとに毎回実行されます。 つまり，１フレーム進む時間ごとに毎回フレーム「start」に行き続けます。 １フレーム進む時間ごとに毎回フレーム「start」に行き続けるということは ずっと フレーム「start」 で止まりっぱなしになります。 ひとつも _root.gotoAndPlay("start"); の play は実行されないということです。 １フレーム進む時間ごとに毎回 フレーム「××」 に行きつづけさせないようにするのは， 何かフラグとなるような変数を１つ作って， そのフラグを切り替えて，そのフラグによって動作を変えるようにするのも１つの方法です。 上のスクリプトを全て消して， 次のスクリプトに書き替えです。 --------------------------------------------------- var flag:Boolean = false; _root.onEnterFrame = function():Void { if (_root.mc01.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f01"); flag = true; } } else if (_root.mc02.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f02"); flag = true; } } else if (_root.mc03.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f03"); flag = true; } } else if (_root.mc04.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f04"); flag = true; } } else if (_root.mc05.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f05"); flag = true; } } else if (_root.mc06.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f06"); flag = true; } } else if (_root.mc07.hitTest(_root._xmouse, _root._ymouse, 1)) { if (!flag) { _root.gotoAndPlay("f07"); flag = true; } } else if (flag) { _root.gotoAndPlay("start"); flag = false; } }; --------------------------------------------------- これ↑は長いので， 次↓のように for文を用いて短くしても良いかもしれません。 --------------------------------------------------- var ON_flag:Boolean = false; var Hit_flag:Boolean; var i:Number; _root.onEnterFrame = function():Void { Hit_flag = false; for (i=1; i<=7; i++) { if (_root["mc0"+i].hitTest(_root._xmouse, _root._ymouse, 1)) { if (!ON_flag) { _root.gotoAndPlay("f0"+i); ON_flag = true; } Hit_flag = true; break; } } if (!Hit_flag && ON_flag) { _root.gotoAndPlay("start"); ON_flag = false; } }; --------------------------------------------------- 長くなりましたが，ポイントを要約すると次の２つなります。 ◎「複数のインスタンスにスクリプトを書くと実行順序の把握が困難になる」 　　→実行順序の把握をしようとするのではなくスクリプトを１つにまとめる 　　※スクリプトを１つにまとめると実行順序を気にしなくて良い上 　　　 見通しが良くなり全体を管理しやすくなる （一石二鳥） ◎「enterFrame系スクリプトは１フレーム進む時間ごとに毎回実行される」 　　→ play() や gotoAndPlay() を使う場合は要注意 　　※ play() や gotoAndPlay() に限らず 　　　 ずっと全く同じ命令を出しつづけることは避けるべき ～～～ ～～～ ～～～ あと， どうしても hitTest を使わなければならないのでしょうか？ on(rollOver){○○} や onRollOver=function(){○○} ， on(rollOut){○○} や onRollOut=function(){○○} などを使えば 以上のようなことを一々考えずに簡単に済む話ですが。
＃１ です。 説明する時間がとれたので， ＃１に書いた内容を具体的な例を示して説明します。 ただし， Flash作成ソフトとして Macromedia(現Adobe)の Flash 5 以上を持っているという前提での説明です。 他のソフトの場合は，まるっきり作成方法などが違う可能性が大きいです。 また同じMacromedia(現Adobe)の Flashでも Flash 4 以下の場合はまるっきりスクリプトなどが違います。 下の図↓のように， ３つのアニメーションシーンからできているものを作成したとします。 ◎ フレーム1～10 　「赤アニメ」…赤い●▲■があって赤▲が動くアニメ ◎ フレーム11～20 　「緑アニメ」…緑の●▲■があって緑■が動くアニメ ◎ フレーム11～20 　「青アニメ」…青の●▲■があって青●が動くアニメ また，それぞれのアニメを見るための３つボタン 「赤へ」ボタン，「緑へ」ボタン，「青へ」ボタン を用意したとします。 「赤アニメ」終了時には， タイムラインがそれ以上再生されないように停止させる必要があります。 これをするには， 「赤アニメ」の最終フレームである フレーム10 をキーフレーム(空白キーフレーム)にして --------------------------- // このタイムラインを停止 stop(); --------------------------- と書けば良いです。 この stop(); を書いたフレームでアニメーションが停止しますから， 勝手に次のアニメ（「緑アニメ」）が再生されずに済むようになります。 「緑アニメ」終了時も，「青アニメ」終了時も同じです。 つまり， フレーム20 も フレーム30 もキーフレームにして --------------------------- // このタイムラインを停止 stop(); --------------------------- をそれぞれ書きます。 === === === === === === === === === 次にボタンですが， このボタンの説明が厄介です。 上の stop(); は， Flash 5 以上の ActionScript1.0 以上であれば， どのバージョンも共通で使えますが， ボタンアクションはぜんぜん違います。 === === === まずは，Flash 5 以上を使用していて， ActionScript1.0（2.0でも可）を使用する場合の ボタンアクションのスクリプト例を書きます。 ※ Flash 5 以上とは，今現在， 　　Flash 5，Flash MX，Flash MX 2004系，Flash 8系， 　　Flash CS3 Professional，Flash CS4 Professional 　　のことです。 ※ ActionScript3.0 と 2.0以下の混在はできません。 　　Flash CS3 Professional 以上をお持ちの場合は， 　　パブリッシュ設定の Flash タブで 　　スクリプトの欄を ActionScript1.0 または 2.0 にした場合です。 「赤へ」ボタンをクリックしたときは， 「赤アニメ」が再生されれば良いわけですから， 「赤へ」ボタンを選択した状態で アクションパネルに次のように書きます。 ------------------------------------ // このボタンをクリックした時 on (release) { // このボタンがあるタイムラインをフレーム1に進めて再生 gotoAndPlay(1); } ------------------------------------ これで，「赤へ」ボタンがクリックされたとき， フレーム1 から再生が始まるので， つまり「赤アニメ」が再生されます。 「緑へ」ボタンをクリックしたときは， 「緑アニメ」が再生されれば良いわけですから， 「緑へ」ボタンを選択した状態で アクションパネルに次のように書きます。 ------------------------------------ // このボタンをクリックした時 on (release) { // このボタンがあるタイムラインをフレーム11に進めて再生 gotoAndPlay(11); } ------------------------------------ これで，「緑へ」ボタンがクリックされたとき， フレーム11 から再生が始まるので， つまり「緑アニメ」が再生されることになります。 「青へ」ボタンも同様。 「青へ」ボタンを選択した状態で アクションパネルに次のように書きます。 --------------------------------------------- // このボタンをクリックした時 on (release) { // このボタンがあるタイムラインをフレーム21に進めて再生 gotoAndPlay(21); } --------------------------------------------- これで，「青へ」ボタンがクリックされたとき， フレーム21 から再生が始まるので， つまり「青アニメ」が再生されることになります。 === === === 次に，Flash CS3 Professional 以上を使用していて， ActionScript3.0 を使用する場合の ボタンアクションのスクリプト例を書きます。 ActionScript3.0 ではボタン自体にスクリプトを書くことはできません。 そこでまずは 「赤へ」ボタン，「緑へ」ボタン，「青へ」ボタンにそれぞれインスタンス名を付けます。 「赤へ」ボタンには 「red_btn」 「緑へ」ボタンには 「green_btn」 「青へ」ボタンには 「blue_btn」 というインスタンス名をそれぞれに付けることにします。 そして，タイムラインの フレーム1 の空白キーフレームに次のようなスクリプトを書きます。 //////////////////////////////////////////////////////////////////// // red_btn にイベントリスナーの追加(イベント:クリック，実行関数:playRedAnime) red_btn.addEventListener(MouseEvent.CLICK,playRedAnime); // 「赤アニメ」を再生させる関数 playRedAnime を定義 function playRedAnime(evt:Event):void { // このタイムラインをフレーム1に進めて再生 gotoAndPlay(1); } // green_btn にイベントリスナーの追加(イベント:クリック，実行関数:playRedAnime) green_btn.addEventListener(MouseEvent.CLICK,playGreenAnime); // 「緑アニメ」を再生させる関数 playGreenAnime を定義 function playGreenAnime(evt:Event):void { // このタイムラインをフレーム11に進めて再生 gotoAndPlay(11); } // blue_btn にイベントリスナーの追加(イベント:クリック，実行関数:playBlueAnime) blue_btn.addEventListener(MouseEvent.CLICK,playBlueAnime); // 「青アニメ」を再生させる関数 playBlueAnime を定義 function playBlueAnime(evt:Event):void { // このタイムラインをフレーム21に進めて再生 gotoAndPlay(21); } //////////////////////////////////////////////////////////////////// これで， ActionScript1.0 と ActionScript3.0 での 簡単なサンプル例は出来上がりです。 （ActionScript1.0 用のが使えるので ActionScript2.0 用を飛ばしていますけど。 ） しかし，これらの欠点は， 途中のアニメーションの長さを変えると， （たとえば「赤アニメ」の長さを15フレームに変えると，） それ以降の開始フレームもすべて後にずれるので， ボタンアクションを全て変更しなければならなくなることです。 そうならないように， フレームには「フレームラベル」という「ラベル名」を付けて， 　　// このタイムラインをラベル「red」に進めて再生 　　gotoAndPlay("red"); のようにすることもあります。 この辺は好みや場合などによります。 この辺が Flash のだいたいの始まり（＝スタートライン）でしょうね。 この説明では， _root または root （メインのタイムライン） を使っただけの 極基本的な Flash の使い方しか書いていませんが， さらにムービークリップ内タイムラインを使うと，もっともっと色々なことが可能になります。 ムービークリップ内タイムラインを使うにしても， stop()，play()，gotoAndStop()，gotoAndPlay() が 一番の基礎（基盤の意味）だと思います。 あとは，イベントハンドラ（イベントリスナー）です。 この辺が基礎です。 野中文雄さんという Flash界で超著明な方が 「イベントを制する者、ActionScript 3.0を制す」 とおっしゃっています。 私は， 「ムービークリップを征する者，Flashを征す」 だと思っています。 なお，_root および root もムービークリップの一種です。 とにかく stop()，play()，gotoAndStop()，gotoAndPlay() のあとは， この辺（イベントやムービークリップ）が重要です。
＃１ です。 > length-1 > で実現できるとは知りませんでした。 私も知りませんでした。 と言いますか， 知ってる知らないではなくて， 考えるとそうなるのです（そういうのも方法の１つです）。 あと『「length-1」で取得』しているのではありませんよ。 誤解されている気もするので 　// テキストフィールドの文字を右から消す 　TF.text = TF.text.substr(0, TF.text.length-1); について補足します。 簡単なところから スクリプトを進化させて説明します。 // テキストフィールド TF に 「あ」 を表示 TF.text = "あ"; です。 // テキストフィールド TF に TF と同じ内容を表示 TF.text = TF.text; です。 // テキストフィールド TF に TF の左１文字を表示 TF.text = TF.text.substr(0, 1); です。 // テキストフィールド TF に TF の左から2文字を表示 TF.text = TF.text.substr(0, 2); // テキストフィールド TF に TF の左から右までを表示 // →TFの１文字目から全文字数文字を表示 TF.text = TF.text.substr(0, TF.text.length); // テキストフィールド TF に TF の左から(右-1)文字までを表示 // →TFの１文字目から(全文字数文字-1)文字を表示 TF.text = TF.text.substr(0, TF.text.length-1); だから結局 // テキストフィールドの文字を右から消す TF.text = TF.text.substr(0, TF.text.length-1); ということになります。 文字列.substr(開始位置, 開始位置からの文字数) という関数(この場合はメソッド)を知っていれば， あとはそれを考えて使えば良いということです。 いちいちそれがどのように使えるかなど知りませんし覚えてもいません。 だから 知っているとか知らないとかではなく， 考えて出すということになります。
ループによるsetPixel()は、毎回そのピクセルのカラー情報を取得し、それにあわせて実際に塗られるカラーを毎回再計算します。 fillRect()は、おそらく最初にそのBitmapData自身が24bitか32bitかを判断するだけで、実際塗られるカラーの計算も最初の１回のみと思われます（24bitカラーによる塗り潰しの違いから推測、わかりやすく言うと上書き）。 もう一つは、setPixel()は実行するごとに毎回、つまりループで100回マスを塗ったとしたら100回、その関連するオブジェクトに「情報が変わったよ」と、教えます。 （一応AS3.0からはlock()/unlock()で制御できます） 以上がsetPixelが遅くなる大きな理由だと思われます。
世の中どんな装置や機械があるかわかりませんが、私の知りうる限り、Flashで”録音”ができるとは聞いたことがありません。 どちらかと言えばメディアプレーヤーとかQuickTimeとかで、その周辺のアプリで適したものがあるかどうか探してみては？？？
書かれていらっしゃることの中で よろしくない部分はここだけです↓ > 一度コントロールパネルからアンインストールし コントロールパネルからアンインストールするのは良くないらしいです。 専用のアンインストーラでアンインストールする必要があるということです。 「Adobe - Adobe Web Player」 http://www.adobe.com/jp/shockwave/download/alter … 「Flash Player のアンインストール手順（Windows）」 http://www.adobe.com/jp/support/kb/ts/228/ts_228 … 書いている内容が古いのですが 最初に私が書いたことの情報源はこちらです。 「Flash Player プラグインおよび ActiveX コントロールをアンインストールする方法」 http://www.adobe.com/jp/support/flashplayer/ts/d … > 近頃のFlash Playerインストーラの強化により、 > 現在、以下のFlash Playerアンインストーラ以外では > Flash Playerを削除できなくなりました。 ------------------------ 解決はされていない（かどうかもよくわからない）質問でしたら 最近見たことがあります。 ひょっとしたら参考になる箇所があるかもしれません。 http://okwave.jp/qa4863821.html
＃１ です。 文字列を数値に変換する場合は普通 Numuber関数 を使います。 こんな感じで良いでしょうか↓。 ------------------------------------------------------------------ var my_num:Number = 72; var my_str:String = String(my_num); trace( Number(my_str.substr(0, 1)) + Number(my_str.substr(1, 1)) ); ------------------------------------------------------------------
ご使用の Flash のバージョンや ActionScript のバージョンなどがわかりませんので， 何とも言えませんが...。 （何とも言えないというのは場合によって答えがありすぎて，つまり変わりすぎて回答のしようがないということです。） 普通考えるのは ASCIIコード で対象参照すれば良いのではないでしょうか。 しかし， 規則が不規則な場合は配列やハッシュ(ハッシュもどき：結合配列)を使うかもしれません。 ActionScript1.0 or 2.0 で ASCII コードを使う方法 新規ドキュメントを作成して フレーム1 に次のスクリプトをコピペして 「制御」→「ムービープレビュー」 ------------------------------------------------- // 変数 my_str の値を "A" とする my_str = "A"; // 変数 my_str の 1 番目の文字を ASCII コードで出力 trace(my_str.charCodeAt(0)); // ↑ココで 65 が返るので 64 を引いてやる trace(my_str.charCodeAt(0)-64); // ↓"B"に関してもやってみる my_str = "B"; trace(my_str.charCodeAt(0)-64); // ↑ちゃんと 2 が返る ------------------------------------------------- ActionScript1.0 or 2.0 で ハッシュもどきを使う方法 新規ドキュメントを作成して フレーム1 に次のスクリプトをコピペして 「制御」→「ムービープレビュー」 ------------------------------------------------- // 変数 STR という Object を作成 STR = new Object(); // "A"エレメントの値を1，"B"エレメントの値を2，"C"エレメントの値を1 とする STR = {A:1, B:2, C:30}; // "A"エレメントの値を取り出してみる trace(STR["A"]); // "B"エレメントの値を取り出してみる trace(STR["B"]); // "C"エレメントの値を取り出してみる trace(STR["C"]); // ↑ ちゃんと 「1」 「2」 「30」 が返りますね // ちなみに値の型は何？ trace(typeof (STR["A"])); // ↑numuber（数値） です ------------------------------------------------- ※ ASCII や ハッシュ が使えないバージョンでも 　 場合によっては if文 を使えば乗り切れます。
＃１ です。 > どうしても質問に書いたスクリプトでやりたいということでは > 全くありませんので、他にもっといい方法がありましたら > ぜひ教えていただけると助かります。 いえ，これと言って良い方法というのは具体的にはないのです。 またムービーの構造（階層構造や位置関係など）がわからないので， よく考えると， 他のバージョンでもどれが良いかはわからないということに ＃１ を書いた後に気づきました。 ただ， ご質問のスクリプトや＃１で書いたスクリプトでは， １フレーム進む時間ごとに毎回ずっとマウスの位置を調べていて その結果 １フレーム進む時間ごとに毎回ずっと popup を表示または非表示させるという命令を出し続けるていることにすごく抵抗を感じるのです。 つまり 「すっと無駄な命令をし続けてCPUの無駄づかいだなぁ」 と思うのです。 Flash MX（Flash Player 6）以降では， ムービークリップにも on(rollOver) や onRollOver などが使えます。 また， Flash MX（Flash Player 6）以降では， setInterval が使えますから，これで ○秒おきに何かをさせることができます。 また， Flash 8 ※注↓ （Flash Player 8）以降では， setTimeout が使えますから，これで ○秒後に何かをさせることができます。 ※注 　一応 setTimeout が使えるのは 　無難に Flash 8 であると書きましたが 　おそらく Flash MX でも使えると思います。 　ただし プレビューしたり閲覧するFlashPlayerのバージョンは 　Flash Player 8 以降である必要があります。 そんなこんなで， 絶対にこれが良いと言うわけではありませんが， 　Flash 8 だと次のようにするのが普通かな？ という例を書きます。 まずスクリプトを書いたエリアのムービークリップのスクリプトを全部消して， そのエリアのムービークリップにインスタンス名を付けます。 たとえば 「area_mc」 というインスタンス名を付けることにしておきます。 そして， ムービークリップ「popup」や「area_mc」が存在するフレームに， たとえば _root のフレーム1に次のようなスクリプトを書きます。 ------------------------------------- // 「popup」を非表示にする _root.popup._visible = false; // 「area_mc」にロールオーバーしたときの動作を定義 _root.area_mc.onRollOver = function() { // 「popup」を表示する _root.popup._visible = true; // セットした setTimeout を削除 clearTimeout(myID); }; // 「area_mc」からマウスをはずしたときの動作を定義 _root.area_mc.onRollOut = _root.area_mc.onDragOut=function () { // setTimeoutをセット myID = setTimeout(function () { // 「popup」を非表示にする _root.popup._visible = false; // 1000ミリ秒（１秒）遅延して実行 }, 1000); }; ------------------------------------- 必ずしもこれが良いとは限りません。 状況によっては使えないかもしれませんが， 「Flash 8 で普通に考えるなら，まずこんな感じにするかなあ。」 という例です。 ちなみに Flash 8 とは言っても ActionScript のバージョンは ActionScript1.0 のままです。 また，ボタン機能が重なるなど， 何かの理由で hitTest を使わなければならない場合で， なるべく無駄な命令をなくそうと思えば次のようになるかもしれません。 ------------------------------------- // 「popup」を非表示にする _root.popup._visible = false; // 「area_mc」 に対するロールオーバーのフラグを用意 area_flg = false; // マウスを監視するためのインスタンス「mouse_obj」を作成 mouse_obj = new Object(); // マウスが動いたときの動作を定義 mouse_obj.onMouseMove = function() { // もし 「area_mc」 がマウスとヒットして area_flg が false であれば if (_root.area_mc.hitTest(_root._xmouse, _root._ymouse, 1)) { // area_flg が false であれば if (!area_flg) { // セットした setTimeout を削除 clearTimeout(myID); // area_flg を true にする area_flg = true; // 「popup」 を表示する _root.popup._visible = true; } } else if (area_flg) { // setTimeoutをセット myID = setTimeout(function () { // 「popup」を非表示にする _root.popup._visible = false; // 1000ミリ秒（１秒）遅延して実行 }, 1000); // area_flg を false にする area_flg = false; } }; // 「mouse_obj」をMouseクラスのリスナーとして登録 Mouse.addListener(mouse_obj); ------------------------------------- やたらややこしくなってしまいましたね...。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ あと思ったのが， 作成しようとされているものは， ボタンをクリックすると外部swfを読み込むという仕組みの 「ポップアップウィンドウ」 のようなものですよね？ そういったものは，黄色い 「ポップヒント」 とは違って， 「OK」や「キャンセル」や「×」ボタンなどがクリックされるまで普通出っぱなしになっていませんでしょうか？ そういったものは，ふつう出っぱなしになっていると思うので， そもそもエリアから離れたときに消す必要があるのだろうか？ とも思います。 これも場合や好みなどによるので何とも言えませんが。
単純に「無料のフラッシュソフトはどこまでできますか？ 」 にこたえるとすなら回答不可能ですね。 そもそも「無料のフラッシュソフト」とは何なのか。 「無料のフラッシュソフト」を十把一絡げにするようなことはできませんし， また 「無料のフラッシュソフト」が何なのかわかったところで， 「Excelはどこまでできますか？ 」 に答えるようなものです。 何でもできすぎて回答のしようがありません。 > FLASHの勉強をしようと考えているのですが 「FLASHを作成しよう」 ではなく 「FLASHの勉強をしよう」 なのですから， 言わずもがな，Adobe Flash に決まっています。 ・ActionScript1.0～3.0まで使える 　↑どの ActionScript でも勉強できる ・書籍がものすごく充実している 　↑ソフトがAdobe 以外では本が皆無に近いので 　　まずなにをするべきかさえわからないのでは？ ・Flash Lite 1.0～3.x 対応 ＆ FLV作成機能もあるなどなど 　↑Flashのできる分野の全てが勉強できます > 最終的にはフラッシュで画像を作成・保存する > お絵かきソフトの様なものを作りたいと考えています。 Adobe Flash を使おうとも フリーのソフトを使おうとも それは関係なく 「フラッシュで(FlashPlayer上で動作するSWFで)画像を保存する」 ということは不可能です。 「フラッシュで(FlashPlayer上で動作するSWFで)○○を保存する」 ということは極々一部の例外を除いて不可能です。 「フラッシュで○○を保存する」 この ○○ の部分を「ウィルス」とか「スパイウェア」に置き換えてもらうと 話がわかりやすいと思います。 「フラッシュで画像を保存する」が容易にできれば， 「フラッシュでウィルスを保存する」がはもっと容易にできるでしょう。 そんなことが基本的にできないようにしてあるので Flash は Flash として現在存在しているのです。 「フラッシュで画像を保存する」 いったいどこに保存するのかわかりませんが， ネット上に保存するのでしたらPHPなどサーバサイド言語などとの連携が必要です。 ローカルに保存するのでしたら， そのOS対応の言語が必要になるでしょう。 多くのOSなどに対応したいのでしたら AIR などとの連携が必要になると思います。 AIR などとの連携を考えた場合も やはり Adobe Flash となります。 何はともあれ 「フラッシュで画像を保存する」 は Adobe Flash でも フリーでも無理ですが， 「フラッシュで(FlashPlayer上で動作するSWFで)画像を作成する」 まででしたら， Adobe Flash でもできますし フリーでも，それなりの ActionScript が使用できればできます。 「フラッシュで画像を作成する」 まででしたら Adobe Flash でも フリーでもすることに大差はありませんし， また 他言語との連携もほぼ同等です（例えば PalaFla！ や Suzuka だと）。 「ParaFla!のページ」 http://www.geocities.jp/coa9999/ 「Suzuka」 http://www.cty-net.ne.jp/~uzgensho/ Adobe と 上２つのソフトの大きな違いは ActionScript3.0 が使えるかどうかということくらいです。 ※ ParaFla! も Suzuka も ActionScript1.0 まで対応です 　 しかし Flash 8 相当の Flash(SWF)は十分作成できます。 ActionScript3.0 になると 画像をビットマップデータとして外部に送信できるのです。 ActionScript1.0 だとそこができません。 もっともビットマップデータとして外部に送信できなくても 他言語側を駆使すれば 「フラッシュで画像を作成・保存する」 まではできます。 しかし，Flash から送信されるデータが 座標データなどだけなので， かなり Flash外 のプログラミングに骨が折れると思います。 結局， 　Adobe Flash を使っても使わなくても， 　　「フラッシュで画像を作成・保存する」 　は Flash 単体では不可能。 　また， 　Adobe Flash を使っても使わなくても， 　　「フラッシュで画像を作成する」 　までは Flash 単体でできる。 同じですね。 Adobe にしても フリーにしても 結局できるのは 「フラッシュで画像を作成する」までなのですから， とりあえずフリーでそこまで作成されてみるのが良いと思います。 「できるかできないか」 という個人的な問題は知りませんよ。 フリーはタダなのですから， 挑戦してみても金銭的に損はないのではないでしょうかという意味です。 ただ， 参考書籍もなく 参考サイトも乏しい状態で それができるのかどうかは知りません。 参考書籍もなく 参考サイトも乏しい状態で それができる方はたくさんいらっしゃいます。 個人的な能力や努力のことは知りません（ソフトの問題ではないです）。
書籍に付属のディスクから開いた fla ファイルを編集して、プレビューしようとしていませんか？ プレビューでは、通常は fla ファイルと同じところに swf ファイルが作成されます。 しかし、書籍に付いているＣＤや DVD は書き込みができません。 ＣＤや DVD から開いた fla ファイルをプレビューしようとすると、swf ファイルの作成先がＣＤや DVD になって書き込みに失敗してしまい、そのようなエラーが発生することがあります。 付属のディスクから必要なファイルを自分のハードディスク等の作業用のディスクにコピーして、プレビューしてみてください。 Windows ではかつて、ＣＤからコピーしたファイルが自動的に「読み取り専用」に設定されることがありました。 Vista ではこの現象は起こらないようですが、念のため、コピーしたファイルの「プロパティ」→「全般」のタブを見て、属性の中にある”読み取り専用”の項目にチェックが入っていないかどうかを確認してみてください。 読み取り専用になっていると、Flash で上書き保存ができなくなってしまいます。 ちなみに。 サンプルファイルをもとに作品を作る時は、コピーを取り、コピーの方を使って作業するようにしましょう。 オリジナルをもとのまま残しておけば、不測の事態が起きてもすぐに戻すことができます。
”簡単”、”難しい”はどれほどFlash（他の言語でも）の習熟度によっても異なります。 さて、サンプルをざっと見ていってこれを横スクロール（？）に変えるには、Sprite3の４連ムービークリップを縦並びから横並びにする必要があります。 この下準備をしたところで、Action Scriptを以下のように変えます。 //初期設定 SlideNum = 0; Speed = 10; //スライド targetX = new Array(); targetX = [150,-240+150,-240*2+150,-240*3+150]; imgGr.onEnterFrame = xMove; function xMove(){ var Dist = targetX[SlideNum]-this._x; if(Math.abs(nDest) < 0.5){ this._x = targetY[SlideNum]; }else{ this._x += Dist/Speed; } } 要は_yのY座標を動かすところを_x（X座標）に変更します。 例では240＊150の画像４枚ですから、X座標で動かすなら１枚の横の長さ、つまり240pxを動かさなければなりません。 わかりやすいように式で書いてありますが、計算して数値を求めてもいいです。 後はこれらの例に載っているAction ScriptやFlashのソースを見て頑張ってください。
> なぜかすべてのmcにtest5へのリンクがついてしまいます。 この理由に関しましては 私もここ（OKWave や 教えて！goo など）で何度も書いたことがありますし 他の方が答えていらっしゃっるのも何度もみたことがあります。 どこでも良いですがこの辺↓でも参考にしてみてください。 http://okwave.jp/qa4822516.html 対処法は場合によって変わりますし 複数の方法があります， ご質問の場合は， 「i の値を各mcの変数に格納して onRelease 時に this参照 させる」 または 「"test"+i を各mcの変数に格納して onRelease 時に this参照 させる」 くらいが良いと思います。 for(i=0; i<=5; i++){ creatEmptyMovieClip(["mc"+i],i); // そのムービークリック内の変数 myNum に i の値を格納 _root["mc"+i].myNum = i; _root["mc"+i]._x = i*10 _root["mc"+i].onRelease=function{ // "test" + this参照 で取り出した数に getURL getURL("test"+this.myNum,"_blank"); } } または for(i=0; i<=5; i++){ creatEmptyMovieClip(["mc"+i],i); // そのムービークリック内の変数 myURL に "test"+i を格納 _root["mc"+i].myURL = "test"+i; _root["mc"+i]._x = i*10 _root["mc"+i].onRelease=function{ // this参照 で取り出した文字列に getURL getURL(this.myURL,"_blank"); } } あと，細かい点は for(i=0; i<5; i++) →変更→ for(i=0; i<=5; i++) だと思います。 また getURL(["test"+i],"_blank"); これは意味がわからないので(ちゃんとした配列アクセス演算子の使い方になっていないので) getURL("test"+i,"_blank"); という意味であるものとして書き換えました。
＃１ です kurobon619 さん， 意地悪で言っているわけでも手厳しく言っているわけでもなくて， 「ケシコミ」をする前にちゃんと「お絵描き」を本(「おしえて!!Flash CS3」など)でされた方が良いと思います。 ここ（OKWave や 教えて！goo）でも画像をアップすることができるようになりましたが， たった「420px × 314px」でそれも１枚きりです。 説明をしようにも十分説明ができません。 ------------------------ > 塗りを消すって、どうやるんでしょうか？ ここで出来る範囲内で， また私が表現できる範囲内で説明します。 ・ブラシツールで適当な線を描きます(↓図１) ・フレーム２を選択してキーフレームを追加します(↓図２) ・同じレイヤーに塗りを通過するように線を描きます(↓図３) 　これで塗りは線によって分断されます。 ・塗りの片側を選択して「右クリック」(↓図４) ・そして「カット」または「Delete」キーを押す。 以上です。 なお図示できませんでしたが， 最初のブラシツールで適当な塗りを描くとき， ツールパネルの「オブジェクトの描画」ボタンが押された状態になっていないかどうかを良く注意をしてブラシツールで適当な塗りを描いてください。 「オブジェクトの描画」ボタンはツールパネル(左側のバケツツールやブラシツールのあるパネル)のオプションの欄にある「レンズ」のような形をしたボタンのことです。 「オブジェクトの描画」ボタンが押された状態になっていると， 「一塗り」が「一オブジェクト」となってしまうので， この「ケシコミ」の操作には向きません。
imaMcをStringにする理由がわかりませんが、 そのまま扱いたいのであれば、 --------------------- this.getChildByName(imaMc).x=500; --------------------- で動くのではないでしょうか？
肝心な Flash のバージョンを書かれていらっしゃいませんが...。 どっちみちコンポーネントを使用されるのでしたら Alertコンポーネントを使えば解決すると思いますが(ただし確か Flash 8 以上)。 Alertコンポーネントを一旦ステージ上に配置して，すぐに削除し， --------------------------------- import mx.controls.Alert; Alert.show("メッセージ", "タイトル"); --------------------------------- このようなスクリプトを書くだけで Alertコンポーネントのみが出没して他のボタン機能などがすべて無効になります。 ===別法============================================== 別法というか＃１の方の路線と同じです。 > getNextHighestDepth()で取得した深度に > empty movieclipを作って、 > そこにダイアログボックスのビットマップをattachして > 表示させました。 この具体的な状況が全くわかりませんが， その 「ダイアログボックスのビットマップ」 の１つ下の深度に ステージ全体の透明な塗り入りムービークリップを用意して， その透明ムービークリップに 擬似onRelease を定義して さらにハンドカーソルを無効にすれば良いのではないでしょうか？ これは ActionScriptなど関係なしでFlash作成上でよく使われる手段です。 その手段をスクリプト化したものです。 コピペするだけでできるサンプル↓。 ------------------------------------------------ // DepthManagerをimport import mx.managers.DepthManager; // 空のムービークリップ [btn_mc] を _root の最高深度に作成 var btn_mc:MovieClip = _root.createEmptyMovieClip("btn_mc", _root.getNextHighestDepth()); // DepthManagerで改めて使用可能な最上位の深度に再設定 btn_mc.setDepthTo(DepthManager.kTop); // [btn_mc] にステージ全体に広がる透明な塗りを作成 // (ここでは見えるように黒の半透明にしておきます) btn_mc.beginFill(0x000000, 20); btn_mc.moveTo(0, 0); btn_mc.lineTo(Stage.width, 0); btn_mc.lineTo(Stage.width, Stage.height); btn_mc.lineTo(0, Stage.height); btn_mc.lineTo(0, 0); // [btn_mc] にダミーの onRelease を設定 btn_mc.onRelease = function():Void { }; // [btn_mc] のハンドカーソルを無効にする btn_mc.useHandCursor = false; // --- 以下は適当 --- // テキストフィールド [btn_txt] を [btn_mc] の上の深度に作成 var btn_txt:TextField = _root.createTextField("btn_txt", btn_mc.getDepth()+1, 150, 100, 0, 0); // [btn_txt] の書式などを設定 btn_txt.border = true; btn_txt.background = true; btn_txt.autoSize = true; btn_txt.text = "★ココをクリック★"; // [btn_txt] をクリック(プレス)したときの動作を定義 btn_txt.onSetFocus = function():Void { // テキストフィールドとムービークリップの後片付け btn_txt.removeTextField(); btn_mc.removeMovieClip(); }; ------------------------------------------------ ※ Flash MX 2004 をお使いの場合は 　　または Flash Player7 用SWFをパブリッシュする場合は， // テキストフィールド [btn_txt] を [btn_mc] の上の深度に作成 var btn_txt:TextField = _root.createTextField("btn_txt", btn_mc.getDepth()+1, 150, 100, 0, 0); 　　↓変更↓ // テキストフィールド [btn_txt] を [btn_mc] の上の深度に作成 _root.createTextField("btn_txt", btn_mc.getDepth()+1, 150, 100, 0, 0); 「F-site 意外と使えないMovieClip.getNextHighestDepth()」 http://f-site.org/articles/2004/12/12021122.html 「F-site 深度の管理 DepthManager」 http://f-site.org/articles/2006/06/02202128.html
以前より内容が具体的になって なんとか全体像がつかめた気がします。 ＞ ランダム関数がよく分からずにやっているからダメなのだと思いますが、 おそらく違いますよ。 関数ではなくて Flash というものの仕様をわかっていらっしゃらないか， もしくは ネットやPCというものを全く意識していらっしゃらないかのどちらかだと思います。 SWF は何も指示しなければ メモリにロードされる端から再生されます。 これをストリーミング再生もしくはプログレッシブ再生と言います。 これのおかげで， どんなに重いファイルであってもフレーム1が軽ければフレーム1はすんなりストレス無く表示させるのです。 すべてのフレームのロードが完了してから再生を始めるという仕様であれば， 数秒から数十分真っ白なままのFlashになってしまう可能性があります。 フレーム1 に配置したものやスクリプトなどが全てロードされて準備されると， フレーム1 に配置した物が表示されるとともにスクリプトも実行されます。 このときはフレーム1しかロードされてません。 いきなり 例えば フレーム1 で gotoAndStop(5); をしても フレーム5 がロードされていなければジャンプしようにもジャンプする場所がありませんから， 変なフレームで墜落したり，真っ白のままFlashの再生が止まってしまいます。 このようなときのために，よく見かける 「Now Loading...」 のようなものが必要になってくるのです。 「Now Loading...」のような演出は全く付けていませんが， スクリプトを無事動作させるには次のような感じにする必要があるということです。 --- _root の フレーム1 に書くスクリプト例 ----------------- // とりあえず再生を停止 stop(); // 1フレーム進む時間毎に毎回実行 this.onEnterFrame = function() { // もし ロードされたバイト数が全バイト数に達すれば if (_root.getBytesLoaded()>=_root.getBytesTotal()) { // 変数 a に 2～7 のランダムな整数を代入 a = Math.ceil(Math.random()*6)+this._currentframe; // そのランダムなフレームにジャンプして停止 gotoAndStop(a); // この this.onEnterFrame を削除 delete this.onEnterFrame; } }; ------------------------------------------------ 上のようなことができるのも， つまり最後のフレームまでロードを待つというスクリプトが実行できるのも， フレーム1 のスクリプトが即実行されるからです。 つまりプログレッシブ再生のおかげです。 Google で「NowLoading Flash」 などと検索すると Now Loading の作り方やサンプルを紹介されているページがヒットします。
http://hfm-kenchan.com/Lesson/log_qa/D0303092.htmとか http://hfm-kenchan.com/Lesson/log_qa/D0706063.htm を参考にいろいろ試行錯誤するしかないですかね＾＾； 「Flash　無限スクロール」とか 「Flash　横　スクロールメニュー」 とかで検索するといろいろでてきます。
普通は Flash 8 で作成 → Flash MX 2004 までです。 したがって Flash 8 で作成した FLA ファイルは Flash MX では開けません。 元からそういう仕様です。 元と言うのは Flash MX → Flash 5 からの仕様です。 したがって　Flash MX 時代からその辺は何にも変わっていません。 --- --- --- 変な技(というか誰しも考える普通っぽい変な技) を使う人もたまにはいます。 　Flash 8 で Flash MX 2004 用 FLA ファイルを保存 　　　↓ 　Flash MX 2004 でその FLA を開き Flash MX 用のファイルを保存 　　　↓ 　Flash MX でその FLA ファイルを開く しかし この方法は元から Flash MX で使用することを前提でなければできないことです。 Flash MX では 　ActionScript2.0 × 　フィルター系 × 　ブレンドモード × 　線の先端の形 丸しかダメ 　コンポーネント Flash 8 用は使用できない 　　… 略 … 言い出したらきりがありませんが， Flash 8 にできて Flash MX にはできないことだらけです。 こういう機能を使用していた場合，保存はできません。 --- --- --- かなり特殊な技として， Flash Decompiler や Motion Decompiler などというソフトを使われる方も たまーーーーーーにはいらっしゃるようです。 Motion Decompiler 2 - 高性能Flash解析ソフト http://www.ah-soft.com/md/ なんでも SWF を FLA に変換してくれるソフトらしいです(使用の意図はご質問の場合とは違うようですが)。 Flash 8 で Flash Player 6 でも動作するレベル(ただし ActionScript2.0 などを除く)の SWF をいったん作成して， その SWF を Flash MX 用の FLA に変換するとできるということは聞いたことがあります(ちなみに私はしたことがありません聞いたことがあるだけです)。
ないのかと思って#1を書いたけどこっちを使うよう修正。 http://livedocs.adobe.com/flex/3/langref/flash/x …
一休さんの「屏風の虎退治」ではありませんが (言い換えると「屏風の虎退治」と全く同じですが)， そのふんわり感のある > 左右前方からランダムに花びらが舞って現れ、 > 最終的にランダムに現れた花びらが所定の位置で > ストップし１つの花になるようにしたいのです というイメージを数式またはデータにしてみてください。 そのイメージを数式またはデータにした上で さらに ActionScript のバージョンと お持ちの Flash のバージョンを書かれると ひょっとしたら良い回答がつくかもしれません。 プログラミングはイメージではありません。 具体的なものが必要です(コンピュータ計算が速いだけのおバカなので逐一適切な言語で具体的なことを指示しなければ動かないのです。) (また人間の感性も人によって様々です。具体的なイメージでないとプログラミングはできません。)
私はFlashの勉強を始めたばかりでトンチンカンを 言うかもしれませんが。 色々な方法があるように思えます。 別名保存からSVGで渡す。 書き出しからJPGやBMPやSWFで渡す。 また、Flash内蔵の画像か、動作中にloadする画像か の条件にもよるのではないでしょうか？ 矩形でない方法で渡す手段があるかないか、勉強中 で分かりません。私の要望としては絶対なのですが。
#1の方、惜しいけど若干違いますかね。 this["scale_mc"+i].alphaのように配列アクセス演算子をつかって 子ムービークリップやプロパティを参照できますので for(var i:int=1; i<=10; i++){ if(mY>pos*(i-1)&&mY<pos*i){ sc=i; for(var j:int=1; j<=10; j++)this["scale_mc"+j].alpha=(i==j)?1:0; } } #1の方よりちょっと縮めてありますし、個数が増加しても汚くなりにくくなっているつもりです。 私はas2.0使うことのほうが多いのでところどころ混ざってるかもしれません・・・＾＾；
まず、クラスとは関数(メソッド)と属性(プロパティ)をひとまとめにして部品化したものなので、関数とクラスは用途が似ている、という解釈が少し違和感があります。 ムービークリップごとに関数や変数を書く人がいますが(5～6年前まではみんなそうやっていましたが)、そのムービークリップごとに書いた変数と関数をひとかたまりにまとめたものがクラスになる、と考えた方が近いでしょう。ですので、flaに書く場合とクラスを使用する場合、ということで比較した方がよいです。 ありきたりの回答になりますが、制作する上での主なメリットは下記のような点にあります。 ・複数人数での開発に有効。 ・全体の構造が把握しやすい。(flaにムービークリップ単位で書いてしまうと、基本的に書いた人間にしか構造が理解できない。) ・よく使用するものは使い回しが可能。継承などはクラスにしかできないです。 ・開発速度が上がる。(ムービークリップやフレームのあちこちに書いていたり、１フレームに延々と書かれているものよりも、クラスごとに分けて書かれているものの方がエディタを使用する場合、移動や検索がしやすいです。) これらはFlash開発に限らず、他の言語でも同じことなので、「クラス メリット」などで検索すれば出てきます。ただ、実際に使用してクラスの恩恵を感じるようになるには、それなりの設計力や実装力が必要とされますす。他の人が作ったファイルを参考にしながら、何度も繰り返し失敗を重ねていくうちに、自然とクラスで書くメリットは理解できるようになると思います。 逆に、複雑な遷移を伴わず、思いつきで作るような簡単なものはクラスを使用せずにそのままflaのフレームに書いてしまえばいいと思います。 未だにonClipEventを使ってムービークリップに直接書いている人は業務レベルでは間違いなく淘汰されていきますが、何を作るにもクラスを使った方が絶対いい、ということはないです。
ムービークリップの名前の数字から0を取って、 menu_mc1～10 にして、 ____________ this["menu_mc"+i].x=500; ____________ と、thisを先頭に足してみてください。 ちなみに、それぞれのムービークリップの座標から500ピクセル動かしたいのであれば、 下記が正解だと思います。 ____________ this["menu_mc"+i].x+=500; ____________
onRelease される時点で_root.URLはループの一番最後になっています。 URLを_rootに保持するのではなく、各ムービークリップに持たせます。 this["target_mc"+i].url = _root.URL;/*リンクを設定*/ this["target_mc"+i].link_btn.onRelease = function() { getURL(this._parent.url);/*リンクに飛ばす*/ }; ※ link_btnがボタンシンボルであれば、 getURL(this.url);になるかも知れません。
こちら↓にそういう計算をする関数を書かれている方がいらっしゃいますよ。 「JavaScript,ActionScript2,ActionScript3,MTASC,Flex,Javaアプレット,Perlの覚え書」 http://www1.kiy.jp/~yoka/TechNote/TechNote_Actio … 上記ページの ■数式を数値に変換（数式を与えると数値を返す） という項目に > ActionScript2 > ここに、evalMyAS.html ←をクリックして表示されるものを > 全部そのままコピーして、貼り付ける。 と書いてある部分があります。 その evalMyAS.html がこちらです↓。 http://www1.kiy.jp/~yoka/TechNote/evalMy/evalMyA … たとえばステージ上に 「my_txt」というインスタンス名のテキスト入力のテキストフィールドと 「my_btn」というインスタンス名のボタンを用意して， 上の evalMyAS.html の内容をフレームにすべて貼り付け， my_btn.onRelease = function() { my_txt.text = evalMyAS(0, my_txt.text); }; をさらに付け加えると， 　(5+3)*2 → 16 が計算されます。 ※ 上記ページの同項目には 　 > ActionScript では eval()関数が存在しないようなので、 　 と書いてありますが，実際は存在します。 　 存在はしますが意味が全く違うためこのようには使えないのです。
閲覧した時点でユーザーのパソコンに一旦保存されてます。 よってダウンロード禁止はあってなきに等しい方策と言えるでしょう。 ダウンロード禁止云々と仰る方多いけど大抵が杞憂。 企業のプロモーションビデオとかはダウンロードしても悪用する意味がない。 勝手に転載しても配布元企業の宣伝になるだけなんじゃないですか。
> 画像を読み込ませるとリンクが消えてしまいます。 そうです。正解です。 最初はその「リンクが消えてしまう」という現象が起こっていることがわからないので 解決策がわからずに沈没することが多いと思います。 しかし， 外部JPEGなどをロードしたとたんリンク(onReleaseなど)が消えるということさえわかれば，解決策は比較的簡単にわかると思います。 解決策はいくつかあると思いますが， 次の方法がその方法のうちの１つです。 ----------------------------------------------------- // まず親の mc を作りますよね createEmptyMovieClip("mc", 1); // そして作った親 mc の中にさらに子の mc を作ります mc.createEmptyMovieClip("mc", 0); // そして親 mc 内の子 mc に 「test.jpg」 をロードします mc.mc.loadMovie("test.jpg"); // 親の方の mc をクリックしたときの動作を定義します mc.onRelease = function() { getURL("aaa.html", "_blank"); }; ---------------------------------------------------- ※↑Flash MX 以上(FlashPlayer6以上)で使用可能なスクリプト 　 ActionScript バージョン 1.0 また次の方法も解決策のうちの１つです。 ---------------------------------------------------- // とりあえず mc を作りますよね createEmptyMovieClip("mc", 1); // そして mcl という名の MovieClipLoader インスタンスを作成します mcl = new MovieClipLoader(); // またロードを監視するためのインスタンス obj も作成します obj = new Object(); // 外部JPEG がロードされたときに実行する関数を定義します obj.onLoadInit = function() { // ロード完了時に作った mc をクリックしたときの動作を定義します mc.onRelease = function() { getURL("aaa.html", "_blank"); }; }; // mcl のリスナーオブジェクトとして obj を登録します mcl.addListener(obj); // そして mc を表示ターゲットとして mcl に 「test.jpg」 をロードします mcl.loadClip("test.jpg", mc); ---------------------------------------------------- ※↑Flash MX 2004 以上(FlashPlayer7以上)で使用可能なスクリプト 　 ActionScript バージョンは上と同じく ActionScript 1.0
普通に次のようなスクリプトを加えれば良いのではないでしょうか？ panel01_mc.onRelease = function():Void { getURL("○○○.html"); }; panel02_mc.onRelease = function():Void { getURL("△△△.html"); }; panel03_mc.onRelease = function():Void { getURL("□□□.html"); }; getURL("○○○.html"); の部分を getURL("○○○.html","_blank"); にしても良いと思います。
「F-site | レイヤーを使用したFull Flash」 http://f-site.org/articles/2006/09/09042615.html こんな感じでしょうか。
flashvars が足りないですね。 embed の場合、 flashvars="clickTag=http://www.○○.html&clickTarget=_self"
基本的にはローカルでも動作するはずなのですが、 後はクロスドメインとかデベロッパーキーの間違いとかしか... > var dev_key:String = "DEV_KEY"; これも、「"DEV_KEY"」ではなく「DEV_KEY」ですね。
まずは、相対パスと絶対パスの違いから... /image1.jpg ← これは絶対パス http://www.example.com/image1.jpgを意味します。 html、swfの階層と関係なく、第一階層にimage1.jpgがあることで表示されるはずです。 image1.jpg ← これは相対パス 大抵のブラウザではhtmlとimage1.jpgが同階層にあれば表示されるはずです。htmlとswfが別の階層にあるのであれば、htmlを基点に相対パスで指定すると表示されると思います。 ただし、一部の古いブラウザではswfを基点にしている物もあるようなのでhtmlとswfを同じ階層に置いておくのが間違いないと思います。 ただ、質問者さんの場合、Flash Playerで再生とあるので、ローカルPCでチェックされているのかも知れませんが...
Math.random()は　0≦n＜1（１にはならない）を満たすnを返す関数であるというのは大丈夫でしょうか？ そこに２１を掛けると、 0≦ｎ＜21 Math.floor()は小数部を切り捨てるので0≦n≦20.99999999999・・・と考えると n=0,1,2,・・・,19,20 そこから-10なので n=-10,-9,-8,・・・,9,10 となり、 -10≦n≦10（n:整数） の範囲のnをランダムで生成することができます。 一般的に乱数に範囲を付ける場合は最大値MAX、最小値MINとすると、 Math.floor(Math.random()*(MAX-MIN+1))-MIN と表されるようです。 実際にゲーム製作なんかしてると特にそんな処理をすることはほとんど無く (Math.random()*(範囲))>>0　　　　>>0：0ビットシフトで少数未満切り捨て（正の数限定、処理高速） と0からの乱数を得たほうが便利なことのほうが多いです。
きっと回等を見てがっかりされるのだろうな・・・とか考えながら。 エラーが全く見えなくなるのはよくあることです。 「-」は引き算ですから var url:URLRequest-new URLRequest(''); を代入の「=」で var url:URLRequest=new URLRequest(''); にするだけです。
見つけたサンプルとやらは「.swf」じゃない？ それはパブリッシュ済だからどのversionであっても「scriptを見れるように開く事はできない」よ。 1.0では、難しいんじゃないかなぁ・・・ http://www.google.com/search?lr=lang_ja&q=%22act … 検索してみても3.0に書き換える話ばっかり出てくるし。
このメニュー自体はSWFファイル（いわゆる世間的にFlashと呼ばれるもの）です。 １，について簡単に説明するのは無理です。よくあるメニューバーなので「Flash メニューバー」で検索されれば、解説サイトが出てきますよ。 ２，AdobeのFlashが一番良いですが、お高いです。ソフトを購入されるより、制作依頼した方が安くなるでしょう。同じように作れるソフトでは、suzukaというフリーソフトがありますよ。 ご参考まで。
IEのFlash Player ActiveXコントーロールと、FirefoxなどのActiveXコントロールを使用しないブラウザ用とは別物ですから、今のものを一旦削除して、再度インストールしてみたらいかがですか。 http://www.adobe.com/jp/support/kb/ts/230/ts_230 … なお、Uninstallerを使用して削除すると、IE用も削除されると思いますから、再度インストールが必要です。
手元の本、Brian W.Kernighan/Rob Pike「プログラミング作法」第一章には以下のようにあります。 ・グローバルにはわかりやすい名前を、ローカルには短い名前を ・命名の規則を統一する ・一つの概念には一つの用語を使う ただし 「特定のスタイルを一貫して使う事に比べれば、スタイルそれ自体はあまりたいした問題ではない」 ともあり、これは命名だけでなくプログラミング全般に通じることでもありますから、いつも念頭に置いてます。
AS３はさわったことがないので、全くの推測ですが、確かムービークリップに「識別子」をつけて操作するんだったと思いますが。 「変数」では無かったような・・・・ 大御所のサイト、上げておきます。 参考URL：http://www.fumiononaka.com/Sample/F-site/ActionS …
ご質問で日本語で書かれていらしゃるところままで， すでにプログラミングはできていますから， あとはそのプログラム通りにコーディングすれば良いと思います。 基本的には次のようにコードを書きます。 ----------------------------------------------- // 変数 speed に 10 を代入しておく speed = 10; // photo_mc にマウスを乗せたとき photo_mc.onRollOver = function() { // 変数 speed を 5 に変更する speed = 5; }; // photo_mc からマウスをどかすと photo_mc.onRollOut = photo_mc.onDragOut=function () { //変数 speed がまた 10 になるようにする speed = 10; }; photo_mc.onEnterFrame = function() { // photo_mc を spped の値ずつ右に移動 photo_mc._x += speed; }; ----------------------------------------------- ただ上のスクリプトには欠点があります。 もし photo_mc の中にボタンがあった場合， photo_mc に定義した onRollOver などによって， photo_mc の中のボタンの onRelease などが機能しなくなってしまいます。 その場合は次のようにします。 ----------------------------------------------- // 変数 speed に 10 を代入しておく speed = 10; photo_mc.onEnterFrame = function() { // もし photo_mc がマウスとヒットしていれば if (photo_mc.hitTest(_root._xmouse, _root._ymouse, false)) { // 変数 speed を 5 に変更する speed = 5; // photo_mc がマウスとヒットしていなければ } else { //変数 speed がまた 10 になるようにする speed = 10; } // photo_mc を spped の値ずつ右に移動 photo_mc._x += speed; }; ----------------------------------------------- 　
＃１です。 まずは補足とつぶやきから。 古いスクリプトが一概に悪いというわけではありません。 _level が超くせ者なのです。 Adobe Flash を使っていても _level を使用すると不可解な現象や説明不可能な事項に遭遇します。 おそらく _level は Macromedia 自信が手に負えなくなって、 昔に放り投げてしまった概念だと思います。 本当は非推奨機能の第一にあげるべき存在だと思いますが、 その非推奨機能に挙げることすら放棄してしまったたちの悪いものです。 この OKWave や 教えて!goo でレベルに関する質問は少ないですが(みんな忘れ去ったので質問が少ない方が当然です)、 なぜか GAC という Q＆A サイトには最近でも _level に関する行き詰まりの質問がたまに来ます。 どこからそんなものを引きずり出して来るのかしりませんけどね。 （今時 _level を使うなどという情報源はいったいどこにあるのだろう？） 具体的事例が気がかりでしたらご参考にしてみてください。 http://gac.kir.jp/7/22031 http://gac.kir.jp/19/21786 http://gac.kir.jp/19/22191 http://gac.kir.jp/7/20931 以下では _level の件を断ち切ります。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > スプライト（ムービークリップ）の場合、音がダブってしまします。 最初のご質問では音に関してなど一切書かれていらっしゃいませんよ。 また、 外部SWFをロードするしないに関わらず音の出し方は様々です。 たくさんある音の出し方をいちいち検証できませんので、 そうなる場合も特定できません。 しかし そもそも音をロードするのになぜSWFをロードするのでしょうか？ 音のロードは Sound.loadSound を使うのに相場は決まっています。 http://www.google.co.jp/search?hl=ja&q=loadSound … Suzuka を使うことを決して悪いと言っているわけではありませんよ。 　Suzukaを使っている ＝普通ではない 　_levelを使う ＝普通ではない 　音のロードにSWFをロードする ＝普通ではない 普通ではないことをするのも別にかまいませんが、 普通でないという自覚を持って探求心ですべき分野だと思います。 当たり前ではない使用方法をすればどんなものでも不具合を起こします。 パソコンを水中で使っても良いです。 缶ビールを直火で加熱しても良いです。 なんでも良いですが、 少なくともそういうことをする場合は自己責任でお願いしたいところです。 決して怒っているのではありませんよ。 私も変なことをするのは好きで妙な実験はしています。 ただ 質問者さんのしていらっしゃる分野に関しては そこまで探求してみたことがありません。
すみません。 embed　の前に　< 　が抜けていました。下が正しいタグになります。 ----------------------------------------------------------- <embed src=" ●ここにＵＲＬを貼り付けます●" width="横のサイズ" height="縦のサイズ"></embed> -----------------------------------------------------------
＞見た目上では半分のサイズになりますが、 ＞サイズ(重さ)は変わらない FLASHはベクター形式（画像のようにラスター形式ではない）ですから、 480×640を半分の240×320にしたところで、サイズ（ファイルの容量）は大して変わらないと思いますよ？ これは実際におやりになればわかるかとは思いますが。 ファイルサイズが問題になっているのであれば、FLASHのコンテンツそのものを軽くしていく以外に無いと思います。 ＞ステージ外ではみ出した画像を見せない(表示させない)方法 これは、下でBlurFiltanさんが回答されているように、 マスクをかけるのが一番手っ取り早いかと思います。 google等で、「マスク　Flash」で検索してみてください。 下に私が見つけたサイトを載せておきます。 参考URL：http://www.1art.jp/flash/le/lesson9/lesson9-2.htm
> 演算子'='は、オペランドの前にくる必要があります。 > > となってうまくいきません・・・・。 ＃１の方のスクリプトを直接そのままアクションパネルに貼り付けたからではないでしょうか。 ここ（OKWave や 教えて！goo など）では http から始まる URL を書くと自動的にリンクが挿入されて，見えない文字が混入してしまいます。 次のものをコピペすれば大丈夫だと思います。 var mc = createEmptyMovieClip(["load_mc"+cnt], cnt); mc.onRelease = function() { getURL("aaa.html", "_blank"); }; > onPressもボタンにしか使用できないし、、、、。 それは Flash 5 までの話です。 createEmptyMovieClip が使えるのは Flash MX（FlashPlayer6）以降です。 また，Flash MX（FlashPlayer6）以降はムービークリップにも onPress や onRelease は使用できます。
ActionScriptはほとんど使ったこと無く、 開発環境自力で作れないので検証できないけど， flash.net.URLStream#readMultiByteの第二引数に文字符号化方式が指定できるようで， http://livedocs.adobe.com/flash/9.0/ActionScript … 尚且つ，そのリストの中には http://livedocs.adobe.com/flash/9.0/ActionScript … >Japanese (EUC) euc-jp が含まれているように思う。…ので出来るのでは？ >http://livedocs.adobe.com/flash/9.0/ActionScript … 多分httpResponseStatusイベントのHTTPStatusEventオブジェクトのstatusが200かどうかで調べられるのではないかと思う。IOErrorかもしれないけど。
大きな問題点が３点ありますが， そのうちの２点はとりあえず無視します。 trace(count);　の出力結果が 3 になるのは 単純に次のようなスクリプトを書けば理解できると思います。 ------------------------------ for (count=0; count<3; count++) { trace(count); } trace(count); trace(count); trace(count); ------------------------------ もし for文を動作的に理解するのが難しければ， while文 にすればわかりやすいかもしれません。 上記 for文 使用のスクリプトと全く同値なものです↓。 ------------------------------ count = 0; while (count<3) { trace(count); count++; } trace(count); trace(count); trace(count); ------------------------------ for文にしても，while文 にしても， 結局 count の値は 3 になってループを抜けます。 したがって次のような出力結果になります↓。 ------- 0 1 2 3 3 3 ------- たとえば， このまま 10秒後 に trace(count); を実行したとしても結果は同じ。 count は 3 のままです。 このまま １分後 に trace(count); を実行したとしても結果は同じ。 count は 3 のままです。 つまり， このまま MCにロールオーバーしたときに trace(count); が実行されても結果は同じ。 count は 3 のままです。 したがって， 　eval("mc_4_" + count)._xscale = 150; はいつ実行しても 　mc_4_3._xscale = 150; を実行することと同じになります。 というわけで， 単純にこれで良いのではないでしょうか↓。 (＃１の方と同じ) ------------------------------ // ユーザ定義関数 SceneMcSelect の定義 function SceneMcSelect() { for (count=0; count<3; count++) { //マウスが乗ったら実行する関数を定義 eval("mc_4_"+count).onRollOver = function() { this._xscale = 150; this._yscale = 150; }; //マウスが離れたら実行する関数を定義 eval("mc_4_"+count).onRollOut = function() { this._xscale = 100; this._yscale = 100; }; } } // ユーザ定義関数 SceneMcSelect の実行 SceneMcSelect(); ------------------------------ 本題ではない残りの２つの問題ですが。 > //毎フレーム、シーン関数を呼ぶ > onEnterFrame = function() { > //現在シーンを呼ぶ > 　　eval( _global.scene )(); > } なせ onEnterFrame で 毎フレーム毎フレーム onRollOver や onRollOut を定義しなければならないのか， 不可解で意味が理解できません。 上に書いたスクリプトのように SceneMcSelect(); は１回で良いはずです。 何度も定義しなおす必要があることがあったとしても， その都度ごとに１回で良いはずで， 毎フレーム毎フレーム（コンマ数秒ごとに）再定義し続ける必要は普通ないと思います。 この理由を補足要求しているわけではありませんよ。 本題とは関係の無い部分なのでどうでも良いのですが， この変な部分は一考の余地があると思いましたので書かせていただきました。 もう１つは eval関数 です。 これを色々なときに使い続けると無事に動作しない場合などが出てきますよ。 eval は主に Flash 4 までで使用されていた古い関数で，Adobe もあまり推奨していません。 完全に非推奨（使用を避ける機能）にはなっていませんが，ほぼ非推奨です。 携帯の Flash Lite 1.x 用のSWFをパブリッシュするなど特別な理由がない限り， eval は使わずに 配列アクセス演算子 を使うのが一般的です。 Google検索 「配列アクセス演算子 eval」 http://www.google.co.jp/search?hl=ja&q=%E9%85%8D …
H_tF.text = "表示テスト"; これで「表示テスト」が無事に表示されるのでしたら 単純にその逆で H_str1 = _root.H_tF.text; だと思いますが。
たまにアクションスクリプトは自分も躓くことがありますが、 外部から読み込みをした物の１フレーム目で 止まるのは検証が出来ませんでした。 もし宜しければ、どこかにファイルをアップしていただければ わかるかもしれません。 また、ボタンクリックによっての項目ですが ボタンインスタンスに記述している場合は main.gotoAndPlay(first)でいけるのではないでしょーか？ mcだと _parent.gotoAndPlay(first)　ですけど どこに書いているか分からないのでなんともいえないですが
System.useCode"p"age = true;ではなく System.useCodePage = true;かと
吐き出すhtmlのflashを指定する部分で <param name="movie" value="ukeru.swf?hiki_suu_name=渡す値> と <embed ～略～ src="ukeru.swf?hiki_suu_name=渡す値" ～略～> のようにすれば行くと思いますよ。
考え方だけになりますが、以下のように管理するのが一般的だと思います。as2ですが、考え方はas3でも一緒です。 1. データの読み込みにはLoadVars関数を使う。 2．データ管理用のクラスを別に用意。 3. 外部から取得したデータは読み込み完了後に管理用クラスのプロパティに入れて、静的メソッドからどこからでも呼び出せるようにしておく。 ケースや規模にもよりますが、通信(データの読み込み)とデータ管理は別のクラスにしておいた方が管理はしやすくなる気がします。
AC_RunActiveContent.jsというファイルはアップロードしました？
>改行が統一できない おそらくFTPソフトで転送モードの設定がASCIIモードになっており、アップロード時に改行コードが自動的に変換されているためだと思われます。 環境設定などから設定をバイナリモードに変更してみてください。 改行コードについては参考URLをどうぞ。 参考URL：http://ash.jp/code/return.htm
普通にPDFにリンクすれば良いのではないでしょうか。 そういう意味ではないのですか？ ActionScript のバージョンを書かれていらっしゃいませんが， ボタンを作成してそのボタンに何かインスタンス名を付けて， そのボタンが存在するフレームに次のように書けばできると思います。 ---ActionScript3.0の場合----------------------------------------- ボタンのインスタンス名.addEventListener(MouseEvent.CLICK, 関数名); function 関数名(evt:MouseEvent):void { navigateToURL(new URLRequest("PDFへのパスと名前"),"_blank"); } --------------------------------------------------------------- ---ActionScript2.0の場合---------------------------------------- ボタンのインスタンス名.onRelease = function():Void{ getURL("PDFへのパスと名前","_blank"); } --------------------------------------------------------------- ボタンのインスタンス名 は適当に「my_btn」とか「pdf_button」 とか付けて 関数名も適当に「getPDF」とか何かにすれば良いと思います。
まずダミーのボタンを作成します。 これは見えてくれては困ると思うので， 見えない場所に配置するとか透明にするとかしておきます。 そして，そのボタンを選択して アクションパネルに次のように書きます。 ----------------------------- on (keyPress "1") { gotoAndStop(5); } on (keyPress "2") { gotoAndStop(12); } on (keyPress "3") { gotoAndStop(20); } ----------------------------- （参考図↓） あと，パブリッシュするときは パブリッシュ設定で Flash Player 4 用SWFを作成する設定にするのをお忘れなく。 ===補足==================== 数あるFlashのバージョンの中で Flash5が最も携帯作成に向いていませんよ。 Flash4以下ではファイル容量など携帯用のルールさえ守れば ほぼそのままFlashLite1.0対応のSWFがパブリッシュできます。 FlashMX以降では FlashLite用の開発ツールなどが付いています(アップデートで付くパターンが多い)。 ただでさえ Flash Lite（特に1.0 や 1.1）はかなり難しいですが， Flash5にはツールも付いていない上にサポート外ですし ActionScriptも大半通じませんから一番キツイバージョンだと思います。 また Flash Lite 1.1 と書かれていらっしゃいますが Flash5 では Flash Lite 1.1 の目玉である fscommand2() 関数も使えませんから 結局，ほぼ Flash Lite 1.0 (Flash Player 4 相当) のスクリプトしか使えないということになります。
いろんな意味でめんどうくさいので 参考URLで紹介しているような 「その時そのPCで鳴っている音をそのまんま録音するフリーソフト」で、そのまんま録音すればいいと思います。 参考URL：http://pino.to/choroku/
おおむね＃１の方と同意見です。 とにかく onEnterFrame です。 もっと詰めると方法は色々考えられますが， よくあるのが次の３つだと思います。 ◎_root など１つのムービークリップに対して 　１フレーム進む時間毎に随時実行するイベントハンドラメソッド 　MovieClip.onEnterFrame = function(); 　を定義して右に移動させる ◎_root["load_mc"+i] １つ１つのムービークリップに対して 　MovieClip.onEnterFrame = function(); 　を定義して右に移動させる ◎１つの親ムービークリップを作成して， 　そのムービークリップ内に createEmptyMovieClip で子ムービークリップを作って 　親ムービークリップごと全体を 　MovieClip.onEnterFrame = function(); 　で右に移動させる ◎_root に対して 　 １フレーム進む時間毎に右に移動させる動作を定義する例 ------------------------------------------------------- var img = "○○.jpg"; for (i=0; i<10; i++) { createEmptyMovieClip("load_mc"+i, i); _root["load_mc"+i]._x = i*120; _root["load_mc"+i]._y = 20; _root["load_mc"+i].loadMovie(img); } // _root に １フレーム時間毎に実行するイベントハンドラメソッドを定義 _root.onEnterFrame = function() { for (i=0; i<10; i++) { _root["load_mc"+i]._x += 10; } }; ------------------------------------------------------- ◎_root["load_mc"+i] に対して 　 １フレーム進む時間毎に右に移動させる動作を定義する例 ------------------------------------------------------- var img = "○○.jpg"; //ロード監視用のオブジェクト「myLSN 」を作成 var myLSN = new Object(); // MovieClipLoaderインスタンス「myMCL」を作成 var myMCL = new MovieClipLoader(); // JPEGロード時の動作を定義(引数：ロードしたMC) myLSN.onLoadInit = function(targetMC) { // ロードしたMCに１フレーム時間毎に実行するイベントハンドラメソッドを定義 targetMC.onEnterFrame = function() { this._x += 10; }; }; // 「myMCL」のリスナーとして「myLSN」を登録 myMCL.addListener(myLSN); for (i=0; i<10; i++) { createEmptyMovieClip(["load_mc"+i], i); _root["load_mc"+i]._x = i*120; _root["load_mc"+i]._y = 20; // 「"_root.load_mc"+i」をターゲットとしてJPEGをロード myMCL.loadClip(img, "_root.load_mc"+i); } ------------------------------------------------------- ◎親ムービークリップ内に子ムービークリップを作って 　 親ムービークリップごと全体を右に移動させる例 ------------------------------------------------------- var img = "○○.jpg"; // 親ムービークリップを作成 createEmptyMovieClip("oya_mc", 0); for (i=0; i<10; i++) { // 親ムービークリップ内に 「"load_mc"+i」 を作成 _root.oya_mc.createEmptyMovieClip("load_mc"+i, i); _root.oya_mc["load_mc"+i]._x = i*120; _root.oya_mc["load_mc"+i]._y = 20; _root.oya_mc["load_mc"+i].loadMovie(img); } // oya_mc に １フレーム時間毎に実行するイベントハンドラメソッドを定義 _root.oya_mc.onEnterFrame = function() { this._x += 10; }; ------------------------------------------------------- スクリプト難易度的には３例のうち２つ目が一番高いですね。 またこの例にある MovieClipLoader を使うには Adobe（Macromedia） だと Flash MX 2004 以上をお持ちで Flash Player 7 以上用のSWFをパブリッシュする必要があります。 ３例のうち１つ目と３つ目は比較的簡単です。 Adobe（Macromedia） だと Flash MX 以上をお持ちで Flash Player 6 以上用のSWFをパブリッシュする必要があります。 ３つとも ActionScript1.0 です。 つまりパブリッシュするActionScriptバージョン設定は ActionScript1.0 または ActionScript2.0 にする必要があります。
this==_rootの状態を想定し、確認してみました。 こちらの環境では正常に表示できますから、スクリプトにはもう問題は無いみたいです。 他に考えられる原因としては、 ・記載のスクリプトが_root上のものではない（_rootとthisの使い分けをthisに統一すると動くか確認） ・img0～img30という変数が同じ階層に定義されていない（普通にtraceして確認） ・上の値が不正、またはファイルが存在しない（for文中でtrace(this['img'+i]);で確認） ・読み込むファイルがサーバ上・swfがローカル　のように、セキュリティでガードされている ・記載のスクリプト以降に同深度に別のものが生成されている（後のほうでtrace(this.getInstanceAtDepth(0));を確認） あたりでどうでしょう？ とにかく困ったときはtraceを駆使してください。
Func_01内ではtempがundefinedになっているのでしょうかね？ var temp:Array = Array(); を this.temp:Array = Array(); のように、Sampleクラスが持つ変数としてtempを定義してみてはどうでしょう。 因に ＞','と'>>>'でsplit等を利用し連想配列にして は質問範囲外でしょうか？
> それでどこを探してもbase_mcが見つからなく、 各ムービークリップをダブルクリックするなどして その各ムービークリップ内のタイムラインの編集に入るとすぐに見つかりますよ。 下に図示しました↓。 > どこにActionScriptを記述すればいい "どこ" とは？ 書かれていらしゃるページの先などは全く読んでいませんが， そのページ自体には次のように書いてあります。 >> 前章までは、ボタン・ムービークリップのインスタンスに >> 直接ActionScriptを記述していましたが、 >> 今回は全て削除しております。 ですから， この後にフレームに記述して行くのだと思います。 フレームと言っても メインのタイムライン(_root)のフレームは1フレームしかありませんから， おそらくメインのタイムラインのフレーム1に書いていくのだと推測できます。 そこにまとめて書くとスクリプト全体が把握しやすくなります。 > あと初心者がActionScriptに入りやすい > 書籍やサイト様がありましたら 書かれていらっしゃるページのスクリプトは，ActionScript2.0形式のものです。 ActionScript2.0 で行くなら， ActionScript2.0 または 1.0 の書籍を本屋さんで立ち読みなどして， 「自分でもわかりそう」とか「こんな路線のものが作りたい」と思うような本を買うのが一番良いと思います。 ただし！ Flash はバージョンによって仕様が大きく違います。 ActionScript の本というよりも 持っていらっしゃるFlashのバージョン対応の本を選ばれる方が良いです。 書かれていらっしゃるページのサンプル FLA が開けるのは Flash CS3 または CS4 です。 したがって Flash CS3 用 もしくは CS4 用の本が良いということになります。 CS3 と CS4 でも仕様がまるっきり違いますから， どちらでも良いという意味ではありません。 どちらかが良いという意味です。 ※ あとActionScript2.0以下とActionScript3.0 は全く違います。 ※ CS3 にしても CS4 にしても 　 デフォルトでは ActionScript3.0 を使う仕様ですから 　 ActionScript2.0 対応の書籍があるかどうかは知りません。 ※ 下の図は CS4 でファイルを開いて 　 クラシックスタイルのレイアウト表示にしたものです。 　 つまり わざと CS3 っぽく見せかけたものです。 　 見せかけているだけですから CS3 のものとは異なります。 　 また 　 CS4 では本来タイムラインはステージの下に来ます。 　 したがって CS4 のデフォルト状態とも異なります。
＃２です。 たびたび訂正すみません。 ＃２では ＞ちなみに usage[ウサゲ(誤読です)] というキャラも登場していて、 と書きましたが、 キャラクタ名称はカタカナ の ウサゲ ではなく ひらがなの うさげ が正式だと思います。 （元々が誤読なのですから正式とか正式でないとかは無いとは思いますが。） Google などで「ParaDraw うさげ」と検索してもらうと， これはこれでそれなりに良い情報が見つかると思います。 ※「ParaDraw ウサゲ」では出てきません。 http://www.google.co.jp/search?hl=ja&q=ParaDraw+ …
setInterval関数がいいと思います。 var timer = setInterval(sendMessage, 3000, "あ"); setIntervalは、一定間隔で命令を実行し続ける関数で、 第一引数には関数、第二引数には時間間隔(ミリ秒)、 第三引数以降には、関数に渡す引数を順に指定します。 （ミリ秒とは、1/1000秒単位の時間です。100なら0.1秒、12000なら12秒です） 補足ですが、setIntervalを止めるには clearInterval(timer); とすれば、タイマーがとまります。 （変数timerは自分で変えられます。） 参考URL：http://livedocs.adobe.com/flash/8_jp/http://d.ha …
>完成したFLASHファイルを連結するソフトってないですか？ Flashのそのもので、スクリプトを書けば出来ますが・・・ >確かFLASHって16000枚まではフレームを追加できたと思ったのですが。。。 アドビ（むかしのマクロメディア）の正規版はね。
書かれていらっしゃるスクリプトでちゃんと表示できますよ。 「x」という "変数名" のダイナミックテキストと 「y」という "変数名" のダイナミックテキストと 空のスプライトをキャンバス上に配置して 空のスプライト自体に書かれていらっしゃるスクリプトをそのままコピペ。 これで全く問題なしに動作しました。 ======================================== ただ、 その方法はFlash5時代の古いやり方ですし面倒ですから 普通はそういう方法をとりません。 Suzukaの基本仕様は SWF6～SWF8(+携帯ではSWF4) 作成です。 つまり普通は FlashPlayer6 以上をターゲットとして SWF を作成します。 その場合 　・テキストフィールドに変数名を付けるのは非推奨事項 　・関係ないムービークリップ(スプライト)は作る必要ない ということになります。 この FlashPlayer6 以上をターゲットとした Suzuka でのオーソドックスな方法を書きます。 まずシンボルリストのアイテム欄を右クリックしてダイナミックテキストを追加します。 このとき「テキストのプロパティ」パネルでフォント名に 「_ゴシック」 や 「_明朝」 や 「_等幅」 などのような 前に 「_(アンダースコア)」 の入ったフォントを指定するところがポイントです(↓図：左上)。 この、前に 「_(アンダースコア)」 の入ったフォントを「デバイスフォント」と言います。 デバイスフォントはフォントリストの上の方にあると思います。 そしてこのダイナミックテキストをレイヤーに２回追加します。 つまり、ｘ座標用とｙ座標用の２つのテキストフィールドをキャンバス上に並べます。 これら２つが並んだ レイヤーリスト枠 のリスト名の部分のうち１つをダブルクリックするなどして、 「レイヤーのプロパティ」パネルを表示させて 「インスタンス名」となっている欄にインスタンス名を付けます。 ここではx座標を表示させるテキストフィールドのインスタンス名を 「zahyouX」 と付けることにしておきます。 y座標を表示させるテキストフィールドについても同様に操作して インスタンス名を 「zahyouY」 と付けることにしておきます。 その レイヤーリスト枠 を右クリックして「アクションレイヤー」を挿入します(↓図：右下)。 そのアクションレイヤーのフレーム1を選択して、 次のスクリプトコードを書けばできあがりです。 --------------------------------------------- // マウスが動いた時に実行するイベントハンドラメソッドを定義 _root.onMouseMove = function() { // 「zahyouX」の text プロパティにマウスのx座標を代入 zahyouX.text = _root._xmouse; // 「zahyouY」の text プロパティにマウスのy座標を代入 zahyouY.text = _root._ymouse; // 表示を即更新(あってもなくても良い) updateAfterEvent(); }; --------------------------------------------- 上のスクリプトでも全くかまいません。 しかし、 _root.onMouseMove=function(){} はムービークリップクラスのイベントハンドラメソッドです。 マウスの座標を随時取得することに、 まだ ムービークリップのしがらみ（Flash5での束縛） から抜け切れていません。 次のようにすると、 もう少し理にかなったスクリプトになります。 ------------------------------------------ // マウスの動きを監視するためのオブジェクトを作成 mouseObj = new Object(); // マウスが動いたときに実行するイベントリスナーを定義 mouseObj.onMouseMove = function() { // 「zahyouX」の text プロパティにマウスのx座標を代入 zahyouX.text = _root._xmouse; // 「zahyouY」の text プロパティにマウスのy座標を代入 zahyouY.text = _root._ymouse; // 表示を即更新(あってもなくても良い) updateAfterEvent(); }; // マウスクラスのリスナーとしてmouseObjを登録 Mouse.addListener(mouseObj); ------------------------------------------ どちらのスクリプトにしても、 「なんでこんなものが要るの！？？？」 という不自然なムービークリップ（スプライト）を作成する必要はありませんね。
呼び出したいムービークリップをクラス名 Hogeでリンケージ設定した場合。 var hogeMc:Hoge = new Hoge(); addChild(hogeMc); hogeMc.gotoAndPlay("label2"); Hoge、hogeMcの部分は都合に合わせて変更して下さい。
書いてから思ったのですが 以下は ＃１ の方の補足になるような気がします。 「キラーン」がどのような状態をさすのかわからないので何ともいえませんが， 昔からのバージョンだとしてもアルファ以外にもっとあるでしょう，明度とか着色とか。 Flash 8 以上をお使いなのですからさらにもっともっと色々な表現方法ができるはずです。 画像をムービークリップなどに変換してグローをかけるとか（↓図の上） Flash3くらいからできる古典的な方法ですが， 光を描いて光をムービークリップなどに変換し， マスクをかけてスライドさせる方法もあります（↓図の下） Flash 8 以上なのですから， この古典的な方法にさらに「ブレンド」を加えても良いと思います。 さらに上で書いた２つを組み合わせても良いですし...。 試せば試すほど方法は色々出てきませんか？ ちなみに 図は勝手に「黄色」系で説明しているだけであって， 「黄色」系である必要は全くありません。
画像入りムービークリップにグラデーションアルファマスクをスクリプトでかけます。 このようなことですよね↓。 http://suzupara.iinaa.net/kiso111.html （一番下のFlash） 上のURLはFlash8用のサイトではありませんから この辺で検索してみてください↓。 Google検索「cacheAsBitmap = true Flash setMask」 http://www.google.co.jp/search?hl=ja&q=cacheAsBi …
Adobe への申請は不要です。 Webボタンはどこから入手しても良いのですが， 一応は下記URLのものが正式ということになっています。 http://www.adobe.com/macromedia/style_guide/butt …
ファイル全体とおっしゃるのはどのファイルでしょうか？ 中に取り込んでいる画像・音声ファイル全体と解釈しましたが、 まず第一に考えられるのは取り込むファイルが移動or改名されたために取り込めなくなったことでしょうか。 そこを確認しても問題がなさそうであれば、生成した*.swfファイルを再生してみてください。 意図したものと違うところが無いか確認してみてください。
少し前の携帯はswf4（Flash Lite）までのもあるかもしれませんが、 今はFlash8に対応してるものも多いので特殊な目的が無い限りさほど気にしなくてもいいでしょう。 大まかなことはSWFバージョンのセレクトボックスの下に出てくる内容なのですが、 ・swf4はFlash LiteのParaFla!独自文法になり、FScommand,FScommand2のような携帯用の関数が使える ・バージョンをあげるほど対応したFlash Playerが無いと再生できない（大抵入ってると思いますが） ・バージョンをあげるほど機能が多い くらいの差でしょうかね。 「最新のFlash Playerを・・・」 とか言う表示があるのは高いバージョンを使っているから閲覧できない人がたまに居るかもしれない、という配慮からでしょうね。 ＞また、ActionScriptも使うので、その点についても併記して、 SWF4が他と大幅に違う以外特に気になりませんので SWF6～8は目的に合わせて、変えたければ変える、程度でいいと思います。
追記です。 > "<embed>は、他のHTML用のタグです"と警告が出ます。 HTML 4.01以降では Object要素を使用してswfを埋め込む事が推奨されていますので、上記の警告が出ます。 つまり"<embed>は、HTML 4.01では非推奨のタグです"という意味だと思います。
問題が発生する環境と、問題点をもっと具体的におねがいします。
＃１ です。 間違えました。 getURL("xxxx.html", "_top"); ではないかと思います。 それでもダメでしたら ＃１ で書いた件かもしれません。
ごめんなさい 回答先、間違えました。
3.0でよいかと あえて2.0を勉強しても、 そもそも方言が強く、流用が効かないので
ムービークリップ1～nを一斉に右方向に100px移動したい場合， 普通はその 1～n を１つのムービークリップ内に用意します。 そうすれば， その複数ムービークリップ入りムービークリップを１つ動かすだけで， ムービークリップ 1～n が一斉に 100px 移動します。 もう少し具体的に書くとすれば， ステージ上にたとえば「oya_mc」というインスタンス名を付けたムービークリップを作成しておいて， その「oya_mc」内に createEmptyMovieClip() で， n 個のムービークリップ 「ko_mc1」～「ko_mc n」 を作成して， oya_mc._x += 100; のように動かせば，「ko_mc1」～「ko_mc n」が一斉に 100px 右に動くということです。 ムービークリップ「oya_mc」の中に 「ko_mc1」～「ko_mc n」を作成する場合であっても， 「ko_mc1」～「ko_mc n」を_rootなどに直接作成する場合であっても， どっちにしても必要なのは [] （←配列アクセス演算子）だと思います。 たとえば， 「my_mc1」～「my_mc50」というインスタンス名を付けたムービークリップ50個が， _root（メインのタイムラインのステージ上）にあったとします。 その 「my_mc1」～「my_mc50」のムービークリップを一斉に 100px 右に動かすには， 次のようなスクリプトになります。 for(i=1; i<=50; i++){ _root["my_mc" + i]._x += 100; } この50の場所をnに変えてやれば， 10であっても，1000であっても，同じスクリプトで動かすことができます。 最初に書きましたような場合でも， これを利用すれば，createEmptyMovieClip() で，動的に作成するムービークリップの数や深度や座標を変えることができます。 「配列アクセス演算子」 と検索してみてください。 http://www.google.co.jp/search?hl=ja&q=%E9%85%8D …
何のために覚えるのか？　何を作るために覚えるのか？　目的によりけりだと思います。 クリエーターを目指すのなら両方扱えた方が強みになりそうですが、 そうでなければネットの世界は淘汰が早いので3からでも良いのでは、と私も思います。 先に2から覚えたとしても、覚えた知識が無駄になるということは無いはずです。 ちょっと考え方を変えるだけで分かるようになるかもしれません。 http://builder.japan.zdnet.com/sp/10-reasons-pro …
直接的な原因ではないかもしれませんが・・・、 バイナリーモードで、アップロードしていますか？ テキストモードでアップロードしていると、再生できなかった気がします。
SWF を FLA 内に読み込むことなど普通はしません（「普通」というのは「絶対」にかなり近い「普通」です）。 SWF を FLA 内に読み込んだらスクリプトは全部消えますしレイヤーも１つになって， そのレイヤーのフレームも全てキーフレームになるので使いようがありません。 またそのような妙な方法は普通の本には書かれていないと思います。 SWF を FLA に読み込むときは， SWF を別ソフト（Illustratorなど）で作成して，その絵(動かない静止画)をFlashで使うときくらいです。それでもあまり普通はそのようなことはしませんけどね。 SWF は SWF に loadMovie() でロードするのが普通です。 すごく特例として 共有ライブラリ アセット として使うことはあります。 FLA 内でシンボルを使い回したい場合は， 普通にムービークリップを作成すれば良いだけです。
こんなのはどうでしょうか。 http://www.flashiroha.com/script/as58.html
色に関してはFlashに読み込むと変わるのではなく、Photoshopで書き出した時点で変わっているはずなので、下記リンクを参考にしてみてください。 http://bpc.blog14.fc2.com/blog-entry-1152.html http://aska-sg.net/pstips/tips/pages/color-profi …
Flash ではなくて HTML と言いますか，CSS の問題でしょう。 書かれていらっしゃるページのソース（HTMLコード）を見ると， <link rel=stylesheet type=text/css href="common/css/main.css"> という１行が見られます。 その「main.css」には， html,body{ height: 100%; bgcolor="#FFFFFF"; margin: 0 0 0 0; } という１文が見られます。 マージンを 0 にしているから， HTML コンテンツが周りの余白なしで見えるのです。 つまり...，Flash 以前の問題です。 このようなしくみにしなくても， HTML の周囲のマージンを0にすることはできます。 「HTML 余白」 http://www.google.co.jp/search?hl=ja&q=HTML+%E4% … や 「CSS margin」 http://www.google.co.jp/search?hl=ja&q=CSS+margi … などと検索してみてください。
インスタンス名ではなく、"変数"にtextを指定しないといけないのでは？
Flash Lite 3.0 だと， 書かれていらっしゃる内容のようなことはPC用でも携帯用でも， ほとんど違いがないと思いますよ。 違いがあるとすれば ActionScript 3.0 が使えるか使えないかくらいではないでしょうか。 あとは， キーの並びがPCの場合 　７ ８ ９ 　４ ５ ６ 　１ ２ ３ で，携帯の場合 　１ ２ ３ 　４ ５ ６ 　７ ８ ９ であるとか， キーコードがPCの場合 　「2」＝98 　「4」＝100 　「6」＝102 　「8」＝104 で，携帯の場合 　「2」＝50 　「4」＝52 　「6」＝54 　「8」＝56 であるくらいなもので， Flash Lite 1.0 とか 1.1 で作るように恐ろしく違うということは全くないと思います。 マップをムービークリップに変換して「map_mc」というインスタンス名を付け， キャラクター（ムービークリップ）に「man_mc」というインスタンス名を付けたとします。 　_root 　　├man_mc 　　└map_mc この場合，メインのタイムラインのフレームに次のように書くと， 一応ご質問されているような動きになると思います。 ----------------------------------------------- // map_mc の上下左右端座標を得るためのオブジェクトを作成 var bnd_obj:Object = map_mc.getBounds(this); // man_mc を動かすユーザ関数の定義（引数：x座標，y座標） function manMove(my_x:Number, my_y:Number):Void { // // １フレーム進む時間毎に随時実行する関数を定義 man_mc.onEnterFrame = function():Void { // man_mc の x座標 を my_x ずつ移動 this._x += my_x; // man_mc の y座標 を my_y ずつ移動 this._y += my_y; // もし man_mc の x座標 が map_mc の左端以下になれば if (this._x<=bnd_obj.xMin) { // man_mc の x座標 を map_mc の左端にする this._x = bnd_obj.xMin; // man_mc.onEnterFrame を削除 delete this.onEnterFrame; // もし man_mc の x座標 が map_mc の右端以上になれば } else if (this._x>=bnd_obj.xMax) { // man_mc の x座標 を map_mc の右端にする this._x = bnd_obj.xMax; // man_mc.onEnterFrame を削除 delete this.onEnterFrame; // もし man_mc の y座標 が map_mc の上端以下になれば } else if (this._y<=bnd_obj.yMin) { // man_mc の y座標 を map_mc の上端にする this._y = bnd_obj.yMin; // man_mc.onEnterFrame を削除 delete this.onEnterFrame; // もし man_mc の y座標 が map_mc の下端以上になれば } else if (this._y>=bnd_obj.yMax) { // man_mc の y座標 を map_mc の下端にする this._y = bnd_obj.yMax; // man_mc.onEnterFrame を削除 delete this.onEnterFrame; } }; } // キーを監視するためのオブジェクトを作成 var key_obj:Object = new Object(); // 何かのキーが押されたときに実行する関数を定義 key_obj.onKeyDown = function():Void { // （---出力検証用---） trace(Key.getCode()); // キー「2」(↑)であれば if (Key.getCode() == 50) { // ユーザ関数manMoveを実行（引数：x座標，y座標） manMove(0, -2); // キー「4」(←)であれば } else if (Key.getCode() == 52) { // ユーザ関数manMoveを実行（引数：x座標，y座標） manMove(-2, 0); // キー「6」(→)であれば } else if (Key.getCode() == 54) { // ユーザ関数manMoveを実行（引数：x座標，y座標） manMove(2, 0); // キー「8」(↓)であれば } else if (Key.getCode() == 56) { // ユーザ関数manMoveを実行（引数：x座標，y座標） manMove(0, 2); } }; // 何かのキーが放されたときに実行する関数を定義 // (キーを放しても動き続けさせる場合はこのスクリプトを消す) key_obj.onKeyUp = function():Void { // man_mc.onEnterFrame を削除 delete man_mc.onEnterFrame; }; // Keyクラスのリスナーとして key_obj を登録 Key.addListener(key_obj); ----------------------------------------------- ※ Flash Lite 3.0（Flash Lite 2.0以上） 　 ActionScript2.0 でパブリッシュ ＞ネット等で検索した所、 ＞PCでキャラクターが移動する方法しか見つかりませんでした。 その検索された方法と，上記の方法が違っているとするなら（おそらく大きく違っていると推測できます）， それは "作者が違う" ために違う意図や考え方でスクリプトを組んでいるからです。 決して "携帯用とPC用とが違う" から方法やスクリプトが違うのではないと思います。 "携帯用とPC用とが違う" から違う箇所は， キーの場所 と キーコード だけだと思います。
http://www.adobe.com/jp/support/kb/cs/2/cs_2978_ … http://www.adobe.com/jp/products/flash/upgrade/? … 譲渡もできますし、アップグレードの対象製品にもなっています。 間違いないとは思いますが、確実を狙うのでしたら素人よりもAdobeに問い合わせてください。
super.super.func()では駄目でしたか？ ところで、呼べるかどうかではなく、そのようにしなければいけない理由があるのでしょうか？ そもそも、そんな継承をせずclass1から継承するようにするか もしくは別なクラス構造を考えた方が良いかと思いますが
まず ＞// 深度は全て同じ位置 ＞duplicateMovieClip("scr", newName, 0 ); これで同じ深度にムービークリップを複製（作成ではありません）しているところが問題でしょう。 同じ深度に複数のムービークリップは配置できません。 強引に配置すると，前にその深度にあったものが消えてしまいます。 １つしかないムービークリップの表示を， 他のムービークリップに切り替えるということがそもそも不可能になります。 ＞_visible 非表示に設定したり、 FlashLite 1.x に _visibleプロパティ は存在しません。 MovieClip の _alphaプロパティ は存在しますから， _alpha を 0 にしたり 100 にしたりして表示を切り替えるのが普通だと思います。 何にしても同じ深度に複数のムービークリップは配置できませんから， 単に _alpha を使っただけではどうにもなりませんが。 ＞削除するスクリプトに関してですが、本当に削除されているのでしょうか？ "削除" の意味がわかりませんが， unloadMovie() でムービークリップの削除などできませんよ。 removeMovieClip() がムービークリップを削除する関数です。 「Flash CS3 ドキュメンテーション 　Flash Lite 1.x ActionScript リファレンスガイド 　removeMovieClip() 」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … unloadMovie() はムービークリップ内にロードされたものを， 文字通りアンロードする関数です。 "削除" の意味が "アンロード" でしたら本当にアンロードされると思います。
パブリッシュ設定の Flash Player のバージョンを8にして下さい。 サンプルのままだと6になっているかと思います。 Flash 8とFlash Player 8は別物です。
>なるほど、だから最後に「var num:Number = (todayUTC - eventUTC) / 1000 / 60 / 60 / 24 % 35 + 1;」の部分で最後に1を足しているのですね。 違います。
タイムラインで止める方法と、スクリプトで止める方法があります。 タイムラインを使う場合は、BGM を止めたいフレームにキーフレームを作成し、BGM を鳴らす時と同様に「プロパティ」パネルで設定します。 BGM を止めるキーフレームを選択した状態で、「プロパティ」パネルを見てください。フレームのプロパティが表示されます。 パネルの中ほどにある「サウンド：」のリストから BGM のシンボルの名前を、「同期：」のリストで”ストップ”を選択してください。 これで、このキーフレームが再生された時に、指定したサウンドシンボル（この例では BGM のサウンドシンボル）が停止するようになります。 止めるシンボルをきちんと指定すれば、キーフレームはどのレイヤーに作っても構いません。 サウンド専用のレイヤーを１つ作成し、鳴らす時も止める時もこのレイヤーにキーフレームを作るようにすると便利です。 ************************************************ スクリプトを使って止めることもできます。 いくつか方法があるのですが、” stopAllSounds ”という命令で全てのサウンドを停止させる方法が最も簡単です。 BGM を止めるフレームに、キーフレームを作成します。 このキーフレームを選択した状態で、「アクション」パネルを開いてください。 パネル上部に”▼アクション－フレーム”と表示されていることを確認し、次のようなスクリプトを記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /********************************/ 　//全てのサウンドを止める 　stopAllSounds(); /********************************/ ↑このスクリプトですと、現在再生されているムービー内の全てのサウンドが停止します。 サウンドを指定して止める方法もありますが、BGM だけしか鳴らしていないのでしたら、この命令で全てのサウンドを停止しても構わないと思います。
根本的にやりかたが間違っていると思います。 と言いますかいけませんねぇ。 書かれていらっしゃるような簡単な動きは， とりあえずモーショントゥイーンで作ってみるのが本来の作成方法だと思います。 お持ちの Flash 8 が， 「Flash Basic 8」 でしたら無理ですが 「Flash Professional 8」 でしたら ぼかしが変化するモーショントゥイーンなど簡単に作成できます。 それを飛ばして， いきなり他者のActionScriptをコピペするだけで始めようと思うから，先へすすめなくなるのです。 （Flash Basic 8 でしたら，ぼかしフィルタの使用は ActionScript から始めるしかありませんけどね。） ※同じ事をするのでも， Basic 8 は 　 Professional 8 に比べると難しいことをしなければなりません。 　 機能が Basic（基本機能しか付いていない）というだけで 　 どっちかと言うと Professional 8 よりプロ向きです。 ＝＝＝以上はさておき回答です＝＝＝＝＝＝＝＝＝＝＝ ＞ そのレイヤーの画像にまでエフェクトがかかってしまいます。 まずものの見方をしっかりした方が良いでしょう。 観察が大切です。 そのレイヤーの画像にはエフェクトはかかりません。 そのレイヤーの画像が，外部JPEGの下敷きになって見えなくなるのです。 外部JPEGにエフェクトがかかるので，そのエフェクトの下敷きになるだけのことです。 よく観察すればそうだとわかります。 ＞エフェクトをかからないようにする方法はありませんか？ したがって，この訊ね方も間違っているということになります。 「そのレイヤーに置いた画像を常に外部JPEGの上に表示させる方法はありませんか？」 が正解に近い訊ね方になります。 ◎ 解決策 まず，この↓１行のスクリプトを消すかコメントアウトします。 var picHolder:MovieClip = _root.createEmptyMovieClip("picHolder", 1); そして， 常に表示させたい画像の下のレイヤーに， 空のムービークリップを手動で作成して， その空のムービークリップに「picHolder」というインスタンス名を付けます。 これで終わりです （★図を参照のこと↓）。 ※なお，空のムービークリップは， 　 ステージ上に何かを描いてそれをムービークリップに変換し， 　 そのムービークリップ内のタイムラインの編集に入って， 　 最初に描いた何かを消せばできあがりです。 　 メインのタイムラインの編集に戻ると 　 小さな ○ みたいなものだけが残っています。 　 それが空のムービークリップです。 ◎ 上の操作をした内容の意味 消したスクリプトの 　_root.createEmptyMovieClip("picHolder", 1); ここで_root（メインのタイムライン）の「深度1」に空のムービークリップ「picHolder」が作成されます。 「深度1」というのは， ActionScriptでしかムービークリップなどを置けない， 上の上のはるか上のレイヤーのような配置順序＝Z順序です。 (※Z順序とは X-Y平面に対する高さZの順序という意味です。) (※なおこれは階層とは言いません。階層とはムービークリップ階層のことを指す場合が大半です。) 手動でムービークリップを配置する場合は， いくら頑張っても負（マイナス）の深度にしか配置できません。 「深度1」などという高い高い場所にムービークリップ「picHolder」を作成して， その「picHolder」内に外部JPEGをロード表示させているために， 手動でレイヤーに配置した画像などは必ずJPEGの下敷きになってしまうのです。 そこで， 「深度1」などという高い高い場所にムービークリップ「picHolder」を作成するのではなくて， 手動で下レイヤーに空のムービークリップ「picHolder」を配置しなおします。 すると， そのレイヤーの「picHolder」に外部JPEGがロードされるので， それより上のレイヤーに配置した画像などが見えるようになります。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ この辺は，ActionScriptなどだけで解決しようと思うと難しくなるだけです。 だから， わけもわからず ActionScriptコピペ などでするより， まずは自力でモーショントゥイーンなどを使って動かすようなことから始める方が良いのです。 モーショントゥイーンなどから始めていれば，すぐに解決策は思い付きます。
var url:String; var loader:URLLoader = new URLLoader(new URLRequest("test.txt")); loader.addEventListener(Event.COMPLETE, loadComplete); function loadComplete (event:Event):void { url = loader.data; /* linkMcは 『クリックするとリンク先へ飛ぶMC』*/ linkMc.addEventListener(MouseEvent.CLICK, gotoURL); } function gotoURL(event:MouseEvent):void { navigateToURL(new URLRequest(url)); } test.txtの内容************************ http://www.yahoo.co.jp ************************************** 基本的にはこんな感じです。あとはアレンジして下さい。
ムービークリップに印刷したいグラフィックを入れればよいのではないでしょうか？
まず， on(release){loadMovie("sub_screen.swf",_root.STAGE);} これで _root にある STAGE というインスタンス名のムービークリップに sub_screen.swf がロードされます。 この時点で sub_screen.swf はムービークリップ STAGE 扱いになります。 　　_root（main_screen.swf の _root） 　　　└ STAGE ←これが sub_screen.swf 次に， on(release){loadMovie("photo1.jpg",_root.PHOTO_STAGE);} これで _root にある PHOTO_STAGE というインスタンス名のムービークリップに photo1.jpg がロードされます。 　　_root（main_screen.swf の _root） 　　　├ STAGE ←これが sub_screen.swf 　　　└ PHOTO_STAGE ←ここに photo1.jpg がロードされる つまり， main_screen.swf の _root の直下に PHOTO_STAGE というインスタンス名のムービークリップがあれば， そこに photo1.jpg がロードされます。 言い換えると， main_screen.swf の _root の直下に PHOTO_STAGE というインスタンス名のムービークリップがなければ， そこには photo1.jpg がロードされません。 もし main_screen.swf の _root の直下にある PHOTO_STAGE というインスタンス名のムービークリップに JPEG をロードするのではなく， sub_screen.swf の _root の直下にある PHOTO_STAGE というインスタンス名のムービークリップに JPEG をロードするのでしたら， sub_screen.swf にあるボタンのスクリプトを on(release){loadMovie("photo1.jpg",this.PHOTO_STAGE);} とすべきです。 または， _root を是非とも使いたいという場合でしたら， sub_screen.swf の _root の フレーム1 の最初辺りに， // この階層で _root を ロック する this._lockroot = true; と書きます。 すると sub_screen.swf の _root で _root がロックされますから， main_screen.swf の _root の PHOTO_STAGE というインスタンス名のムービークリップ には photo1.jpg がロードされなくなります。 つまり， sub_screen.swf の _root の PHOTO_STAGE というインスタンス名のムービークリップ には photo1.jpg がロードされるようになります。 ただし， this._lockroot = true; が使えるのは Flash MX 2004（通し番号 Flash 7）以降で， FlashPlayer7 以降，もしくは Flash Lite 2.0 以降用の SWF をパブリッシュする場合に限ります。 Flashドキュメンテーション ActionScript 2.0 リファレンスガイド _lockroot (MovieClip._lockroot プロパティ) http://livedocs.adobe.com/flash/8_jp/main/000024 …
それは「編集モードの終了」で， 「１つ上の階層（ムービークリップなど）のタイムラインの編集に戻る」 フォルダに喩えるなら， 「上の親フォルダ内表示に移動する」 というボタンですが ショートカットキー はおそらく用意されていないと思います。 しかし，Flash MX 2004 以降をお持ちの場合， その動作を記録してシュートカットキーを登録することができますからそれを使えば良いのではないでしょうか。 新規ドキュメントを作成して， ステージ上に何かを描画して，ムービークリップ に変換します。 そしてそのムービークリップをさらにムービークリップに変換します。 　_root 　　└ムービークリップ 　　　　　└ムービークリップ その最下層のムービークリップ内の編集に入って， [ウィンドウ]→[他のパネル]→[ヒストリ] とたどって 「ヒストリパネル」を表示させ， 書かれていらっしゃる青い 「←」 をクリックします。 するとその動作が「ヒストリ」として記録されます。 その「ヒストリ」の動作名が「編集モードの終了」になっていると思います。 その「編集モードの終了」 項目を右クリックするなどして， [コマンドとして保存]をクリックします。 そして改めて「編集モードの終了(仮称)」のようなコマンド名を付けて保存します。 この状態で， ツールバーの[コマンド]→[編集モードの終了(仮称)]を選択することで， 「編集モードの終了」を実行することができるようになります。 さらにこのコマンドをショートカットキーに追加します。 ショートカットキーにこのコマンドを追加するには， ツールバーの[編集]→[キーボードショートカット]とたどり， 「キーボードショートカット」パネルより 　　現在のセット：[Macromedia 標準] 　　コマンド：[描画メニューコマンド] そしてその下の一覧で 　上は略 　+修正 　+テキスト　 　- コマンド 　　　├保存されたコマンドの管理 　　　├ほかのコマンドの取得 　　　├コマンドの編集 　　　└編集モードの終了(仮称) とたどれば出てくるなっている[編集モードの終了(仮称)]を選択し， 　　現在のセット：[Macromedia 標準] □ の □ 部分にある[セットの複製]を選択します。 そして「複製」パネルで再び [編集モードの終了(仮称)] のような名前を付けて[OK]します。 すると 　　ショートカット： + - の + ボタンがアクティブになりますから， そこで + をクリックして その下の下の 　　キー制御： [<空>　　] のような部分にカーソルを合わせて， たとえば 「Ctrl」キー と 「←」 キーをクリックすれば， 　　キー制御： [Ctrl+Left] のように自動でなりますから， これでショートカットキーに作成したコマンドの追加が完了します(図↓)。 あとは 「Ctrl」キー と 「←」 で 「編集モードの終了」 が実行されるようになります。 バージョンやOSによって， 上に書いた手順が違う場合が多いと思いますが， Flash MX 2004 以降（JSFLが使えるようになったバージョン以降）は， だいたいほぼ同様の手順でキーボードショートカットへの動作の登録ができると思います。
Adobe Acrobat をお持ちでしたら， Flash を印刷するときにプリンタで， Adobe Acrobat を選ぶか Acrobat Distiller 辺りを選ぶと PDF が作成できると思います。 また Acrobat 6 以降をお持ちでしたら， 静止画 ではなく 動くFlashムービーも PDF のなかに入れることができます（「高度な編集」などでFlashムービーが入れられる）。 しかし， この辺の手順や設定は Acrobat のバージョンなどによっても変わるので， バージョンによる違いや色々の設定のしかたなどは説明できません。 （Flash の専門外 という領域です。） その他， Flash を PDF に変換する方法など無数にありますし， 場合によって方法を変えるべきです。 ＃１ の方の書かれていらしゃるように問い合わせて確認されるのが一番良いと思います。
Flash Saving Pluginはどのような物かは知りませんが、 動画をＤＬしたつもりなのであれば、23KBという容量を疑うべきです。 このswfファイルは、外部から14,193KBのflvファイルを読み込んで再生しています。 ですからそのflvファイルのほうをダウンロードしないと再生は不可能でしょう。 ブラウザのキャッシュの中などをあされば目的のものが出てくるかもしれません。 「Flash Saving Plugin」にキャッシュから保存する機能が無いか調べたほうが楽でしょう。
結論から書きますと、グローバル変数に値を入れる際に 　_global.name = "太郎"; ↑というように、name の前に _global のターゲットパスを付けてみてください。 グローバル変数（ _global 階層にある変数）は、スクリプトを記述した階層に同名の変数がない場合に限り、_global のターゲットパスを省略して参照することができます。 ご提示の例で言いますと、on(press) を書いたムービークリップに name という名前の変数がなければ、_global を付けずに name だけでも参照できます。 グローバル変数と同名の変数を持っているムービークリップに書いたスクリプトの中でターゲットパスを省略した時は、ムービークリップが持っている方の name が参照されます。 このような場合は _global のターゲットパスを付けて、_global.name で参照します。 -------------------------------------------------- グローバル変数はこのように、参照する時には _global を省略できる場合があります。 しかし、値を入れる時は、_global を付けないと新しい変数を”スクリプトを実行するムービークリップに作成する”と解釈されるので、注意が必要です。 ご提示のスクリプトですと、 　> name="太郎"; では _global のターゲットパスが指定されていませんから、name は _global 階層ではなくメインのタイムライン（一般的には _root 階層）に作成されます。 それから、フレームアクションの１行目 　> _global.name; は初期値が指定されていないために無効になり、_global 階層には何も作成されません。 つまりご提示のスクリプトでは、_global.name は作成に失敗していて存在しませんが、その代わりに _root.name が存在していることになります。 先述の通り、on(press) を書いたムービークリップに name という名前の変数がなければ name だけでも参照できるのですが、ご提示のスクリプトでは _global 階層に変数 name がそもそも作成されていません。 ですから、たとえ _global.name とターゲットパスを付けて参照したとしても、この場合は undefined （未定義）になります。 しかし _root には変数 name が作られているので、_root.name とすると”太郎”の値を取り出すことができます。 ただし、これはあくまでも _root 階層の変数 name の値を見ているのであって、_global 階層にある変数を参照していることにはなりません。
ダイナミックテキストにデバイスフォントを使用しているのであれば、ユーザーの環境に日本語フォントが入っていなければ表示はできません。 デバイスフォントを使用せずにプロパティパネルから「埋め込み」を選択して「日本語（すべて）」を選択して埋め込めば、ファイル容量は大きくなりますが、ユーザーの環境に関係なく表示できるようになります。
＃１ の方の補足になると思いますが， CSV の区切り記号(カンマ とか 改行 とか Tab)で split すると， 勝手に配列ができて区切り記号間がその配列の要素になりますから， それを使えば良いだけです。 SWF(Flash)ファイル，それを表示するHTMLファイル，CSVファイル が同じフォルダにあったとして， CSV ファイルのファイル名が「log.xml」であったとします。 そして，その「log.xml」内の文字コードが Shift-JIS で， 内容が次のようになっていたとします。 ---「log.xml」内データ--------------- aaa.jpg,aaa.html,面白い bbb.jpg,bbb.html,カッコ良い ccc.jpg,ccc.html,すばらしい ddd.jpg,ddd.html,可愛い ------------------------------------ その場合に書くフレームのスクリプト例です↓。 ---------------------------------------------------------- // 外部テキストデータを Shift-JIS として読み込む設定 System.useCodepage = true; // CSV データを格納する配列を作成(後に２次元配列になる) var csvArr:Array = new Array(); // CSV をロードする LoadVarsクラス のインスタンスを作成 var csvLV:LoadVars = new LoadVars(); // CSVがロードされたときに実行する関数を定義 csvLV.onData = function(myData:String):Void { // 改行コードを \n に統一 myData = myData.split("\r\n").join("\n").split("\r").join("\n"); // CSVデータを改行コードで区切った配列を一時的に作成 tmpArr = myData.split("\n"); // tmpArr の要素数分ループ for (var i:Number = 0; i<tmpArr.length; i++) { // tmpArr の各要素をカンマで区切って csvArr[○] の要素に代入 csvArr[i] = tmpArr[i].split(","); } // 出力検証してみる trace("csvArr[0][0]…"+csvArr[0][0]); trace("csvArr[0][1]…"+csvArr[0][1]); trace("csvArr[0][2]…"+csvArr[0][2]); trace("---------------"); trace("csvArr[3][2]…"+csvArr[3][2]); }; // csvLV に 「log.csv」 をロード csvLV.load("log.csv"); ---------------------------------------------------------- split 以外のポイントは， csvLV.onData = function(myData:String):Void {}; です。 この function の引数部分に myData のような適当な変数を書いておくと， その変数に外部テキストデータが格納されますから， 「データの名指し」が可能になります。 改行コードはデータ作成の時点でわかると思いますから， 本来は「改行コードを\nで統一」の部分は不要だと思います。 私は質問者さんのデータの改行コードなど知りませんから， 改行コードが 「\n」 であっても 「\r\n」 であっても 「\r」 であっても無事に動作するように改行コードを 「\n」 に統一しているだけです。
＞これはＦＬＡＳＨが画面の大きさを変えられないとかそのような理由でしょうか？ それも理由の１つでしょうね。 Flashの画面の大きさは HTML のタグなどを触らないと基本的に閲覧者側で変えることができません。 Flash が小さい場合は多くのPCで見ることができると思いますが， Flash が大きい場合，中にはゲーム画面全体が見えない閲覧者も出てくる可能性があります。 良く言えばそういう閲覧者を困らせないために， 悪く言えばそういう閲覧者（客）を逃さないために， 比較的小さく作ってあるゲームが多いと思います。 ＞それ以外の画面をゲーム画面にすることもできるのでしょうか？ できますよ。 全画面Flashのゲーム版でしょう。 工夫次第でできます。 しかし，画面を大きくすると，画像処理に時間がかかって表示が遅くなる（動きが重くなる）場合が多々あります。 また閲覧者のPCの CPU の影響をもろに受けやすくなります。 全画面Flash（フルFlash）に動作が重いものが多いのはその影響もあります。 普通のFlashだと， 動きが遅くなってもあまり大したことはないというか， 態勢に影響しない場合が多いです。 しかしゲームとなると， 動きが遅くなると，たとえば 「敵からのミサイルをよけやすくなる」 とか， 「時間を競うゲームなのになかなかゲームが先に進まない」 とか， そういう不具合が生じやすいです。 つまり閲覧者によってゲームの難易度などがまるっきり変わってしまう可能性もあります。 なるべく無難に多くの閲覧者に同じようにゲームをしてもらうには，小さめの Flash の方が良いです。 そんな意味もあると思います。 あと，ゲームのキャラクターなどは， Flash で作成されたベクタ画像ではなくて， GIFやJPEGのようなラスタ画像のものも多く見かけます。 ラスタ画像は拡大縮小に弱い（汚くなる）ので， 画面に応じて拡大縮小させればガビガビで汚くなる可能性が多いです。 極端に大きなサイズにも対応させるために， ラスタ画像をあらかじめ大きく作成しておいてなんとかする方法も考えられますが， ラスタ画像は大きさを大きくするとファイルサイズも大きくなります。 したがって，重いファイルのFlashを作成せざるを得なくなります。 ファイルが重いと， 回線速度が遅い環境の閲覧者がゲームを始めるのに時間がかかって困ります。 良く言えばそういう閲覧者を困らせないために， 悪く言えばそういう閲覧者（客）を逃さないために， 比較的小さく作ってあるゲームが多いと思います。
＃３ です。 まずは ＃２ で書いたスクリプトの(スクリプトのコメントの)訂正＆お詫びをします。 １秒が1000ミリ秒ですから，1000ミリ秒が10秒というのは間違っていますね。すみません。 次のように訂正します。 ------------------------------------------- // このスクリプトを書いたフレームを停止 stop(); // 1000ミリ秒(１秒)後に実行 setTimeout(function () { // このスクリプトを書いたフレームを再生 play(); }, 1000); ------------------------------------------- で，＃３ の 補足 に書いていらっしゃることへの回答です。 > この方法でタイムラインが半分以下になったにもかかわらず、 > ファイルサイズは同じ・・・と言う事は、フレームの長さはサイズに関係しないという> 事になるんですね？ 動かすものがシンボル化されたインスタンスでしたら， さほど変わらないでしょう。 スクリプトで動かすにしても， モーショントゥイーンで動かすにしても， どちらにしても結局， 「あるインスタンスをA地点でのAAという状態からB地点でのBBという状態に変化させろ」という命令を書いていることに違いはありませんから。 たとえば， 動かすインスタンスが１つのみで， そのインスタンスが 100KB の JPEG 入りのグラフィックインスタンスやムービークリップインスタンスであったとします。 スクリプトで動かしてもモーショントゥイーンで動かしても， 結局そういうプログラム的なこと（インスタンスのプロパティを変化させるという命令）の容量はたいしたことありません。 せいぜい 数バイト～数キロバイト 程度でしょう。 100KB の JPEG の容量に比べれば全く無視できる大きさだということになります。 Flash(SWF) は動画ではありません。 インスタンスをなにがしかのデータやプログラムによって動かすものです。 したがってたいていは， SWF の容量の大半は インスタンスの容量 ということになります。 シェイプトゥイーン を使った動きなどは， フレームを使えば使うほど容量を食いますよ。 しかしちゃんとシンボル化されたインスタンスを動かしていれば， そのインスタンスの容量が Flash(SWF) ファイルの大半になるのが普通です。 単純に言うなら， 「ActionScript を使用するのは容量を減らすためではない」 ということです。
------------------------------------------- var uppage_btn:Button; var count:Number = 0; uppage_btn.onRelease = function():Void { attachMovie(pages[count], "mcpages", 10); mcpages._x = 280; mcpages._y = 50; count++; }; // 以下に配列が続く ------------------------------------------- こんな感じで良いのではないでしょうか？ リンケージの識別子が書かれていらっしゃるように page1，page2，page3，… とちゃんと連番が付けてある場合は， 特に配列を用意する必要はありませんが。 配列を用意せずに次のようにしてもできます。 ------------------------------------------- var uppage_btn:Button; var count:Number = 1; uppage_btn.onRelease = function():Void { attachMovie("page"+count, "mcpages", 10); mcpages._x = 280; mcpages._y = 50; count++; }; -------------------------------------------
FireFox ではデフォルトで Flash を表示する機能を持っていませんが、Flash はインストールして適用済みですか?
なぜ WordPress が出てくるのか， その理由がわかりません。 では，WordPress で作成されていない普通のページにはどうやってリンクを貼っているのでしょうか？ そして，その方法で WordPress で作成されたページにリンクを貼った場合，どこにどういった不都合が生じるのでしょうか？ つまりご質問の意図がまったくわかりません。
シンボル化してしまったステージ上のインスタンスを選択して 「修正」→「分解」 でできると思います。
歩くアニメーションを極めれば、 そういう方法ではなく、パラパラマンガを描いて行くというのが本格的な方法です。 「F-site 歩き」 http://f-site.org/articles/2006/05/12160729.html 　→ ムービーを見る しかし、このような本格的表現ではなく、 書かれていらっしゃるようなトゥイーンを使った簡易的な多関節アニメを作成する場合は、 スプライト（ムービークリップ）を入れ子にします。 　_root(メインのタイムライン) 　　└身体全体のスプライト 　　　　　├ 身体の色々なパーツ 　　　　　└ 脚全体のスプライト ←トゥイーンで動かす 　　　　　　　　　├ 太もも部分の絵 　　　　　　　　　└ ひざ下の絵 ←トゥイーンで動かす 絵を描くソフトは何でもかまいませんが、 仮に ParaDraw で描くとします。 ParaDraw の場合の保存画像は「○○.pdr」となります。 下の図の左上の図のようにとりあえず身体全体の絵を描いて、 「胴」、「太もも部分」、「ひざ下」ごとに別々のファイルに保存します。 図の例では 「胴」を「胴.pdr」、「太もも部分」を「脚1.pdr」、「ひざ下部分」を「脚2.pdr」として保存するということを意味しています。 そして、それらのファイルをSuzukaのシンボルリスト内に追加して、 さらに、 例えば 「体MC」 というスプライトと 「脚MC」 というスプライトを追加します。 まずは 「脚MC」 の編集に入って、 「脚MC」 内のレイヤーに 「脚1.pdr」 と 「脚2.pdr」 を入れて、 ひざ下部分である 「脚2.pdr」 をトゥイーンでブラブラするように動かします。 このとき膝の関節部分に「制御点」を移動させておくのがトィーン作成のポイントです。 次に 「体MC」 の編集に入って、 「脚MC」 内のレイヤーに 「胴.pdr」 と 「脚MC」 を入れて、 脚全体のスプライトである「脚MC」 をトゥイーンでブラブラするように動かします。 このときも太ももの関節部分に「制御点」を移動させておくのがトィーン作成のポイントです。 そしてメインのタイムラインの編集に戻って、 「体MC」 をレイヤーに追加すれば、 「体MC」 の中で脚がブラブラするアニメができますから、 その 「体MC」 をさらにトゥイーンで右（または左）動かせば「歩くアニメーション」が完成します。 もっとも， この説明では片脚だけしか作成していないので この状態のままでは「歩く」と言うより「ケンケンする」というアニメーションにしかなりませんが。 以上のことを、具体的な階層構造に書きなおすと次のようなります。 　_root(メインのタイムライン) 　　└体MC ←トゥイーンで右に動かす 　　　　　├ 胴.pdr 　　　　　└ 脚MC ←トゥイーンでブラブラ動かす 　　　　　　　　├ 脚1.pdr 　　　　　　　　└ 脚2.pdr ←トゥイーンでブラブラ動かす 『動きの足し算はスプライトを入れ子にする』 単純にこのように覚えておくと、色々なものに使えると思います。 ◎色々なものの例 ・月が地球の周りを公転しながら太陽の周りを公転するアニメ ・羽ばたきながら飛び回るたくさんの蝶全体を縮小させるアニメ ・ドラッグで好きな位置に移動できるアナログ時計 　
推測なのではずれだったらごめんなさい。 いつもは自分で実験してから書き込むのですが、 現在環境が無いもので・・・スイマセン。 たぶん階層の問題だと思います。 構成がわからないので例としてあげますが、 HTML　-----htmlの階層 |-swf　----Flashの階層(Txtもここ) となっている場合で html内のFlashのリンクは『swf/txt.swf』となるかと思います。 で、Flash内では『Txt.txt』で外部テキスト呼び出してますよね。 そうすると、htmlから呼ばれたFlashが実行される階層は『html階層』なため、 リンク先のファイルが見つからず表示できないのでは？ ※直リンだと『swfの階層』でFlashが動作するので正常になる。 ためしに全部のファイル『html/swf/txt』を同一の階層で動くようにリンクを張り直して、 同一階層に全部入れてhtmlをコールしてみてもらえませんか？ 上記原因なら対策として 1.Flashを呼ぶhtmlもFlashと同階層に入れる。 2.リンクをすべてベタ打ちで登録する。 　http://****.com/html/swf/txt.txtなど 3.外部テキストへのリンクをFlashに組み込まず、 　htmlから変数で渡す方法を取る。 　※やり方は参考URLのホームページが判りやすいかも。 のどれかで解消できると思います。 参考URL：http://itpro.nikkeibp.co.jp/article/COLUMN/20061 …
"mC1"はムービークリップとしてメインタイムライン上に配置されていますか？ ライブラリで、ムービークリップになっていても、ステージ上でグラフィック扱いになっていると、"mC1"のタイムラインが走っていない可能性がありますよ。 参考URL：http://orange.2-d.jp/flash/kiso/15.html
ActiobScript のバージョンなどがわかりませんが， ActionScript 1.0～3.0 で， なおかつ Flash Player 6 以上の SWF をパブリッシュするのでしたら， ○秒後（○ミリ秒後）に何かを実行させる場合，普通は setTimeout または setInterval を使います。 Google検索「setTimeout ActionScript」 http://www.google.co.jp/search?hl=ja&q=setTimeou … Google検索「setInterval ActionScript」 http://www.google.co.jp/search?hl=ja&q=setInterv … もっともこの辺は， 「秒後 ActionScript」と検索すればすぐに出てきますが。 http://www.google.co.jp/search?hl=ja&q=%E7%A7%92 …
どこかで少しは微妙に違う部分（誤差）が出てきてしまいますが， 私だと次のようにすると思います。 ---例えばフレーム1に書くスクリプト-------------------- // 時・分・秒 の取得 hr = fscommand2("GetTimeHours"); min = fscommand2("GetTimeMinutes"); sec = fscommand2("GetTimeSeconds"); // // 時針 と 分針 を回転 hour._rotation = hr*30+min*0.5; minute._rotation = min*6+sec/10; // // もし前回の秒が今の秒と違えば if (last_sec<>sec) { // その時のミリ秒時間(時刻ではない)を取得 time = getTimer(); } // // 秒針 を回転 second._rotation = (sec+(getTimer()-time)/1000)*6; // // 次回のために今の秒を記録しておく last_sec = sec; // //--- 以下は Flash Lite のバグ回避 --- hour._xscale = 100; hour._yscale = 100; minute._xscale = 100; minute._yscale = 100; second._xscale = 100; second._yscale = 100; ---------------------------------------------- ---例えばフレーム2に書くスクリプト-------------------- gotoAndPlay(1); ---------------------------------------------- 「秒の変わり目が ○.000 秒とは限らない」など， すごく微妙なことを言われると困りますが， だいたいはこれで滑らかに動くと思います。 Flash Lite のバグ回避 の部分は， 「_rotation で針を回転させるとだんだん針が長くなったり短くなったりする」 という，Flash Lite 1.x のバグを回避するためのものです。
現在広く一般に使用されているのはTweenerというライブラリです。移動のスクリプトはこれ一つ覚えれば大抵のことはできるようになります。 Tweenerで検索してみてください。 ※Tweenという用語は必ずしもタイムライン上で設定するモーショントゥイーンを指すものではないです。Flashにも標準でTweenクラスが用意されているので、ヘルプなどで調べてみるとよいと思います。
ソートそのもののアルゴリズムは有名なところでバブルソート・クイックソート・マージソートなど、それ以外にもコームソート・２分挿入ソートなどいろいろあります。 それぞれ一長一短がありますが、５件程度の少ないものなら、簡単なところでバブルソートでいかがでしょう。 今回の件はソート対象の変数 k1 ～ k5 の中身は変更せず、別の変数 q1 ～ q5 に”ソートした後の k1 ～ k5 の並びを入れる”・・・という、いわゆる Array クラス（ Flash MX 以前はオブジェクト）の sort ・ sortOn メソッドで RETURNINDEXEDARRAY フラグを渡した時のソートと同様の動作だと思います。 バブルソートの考え方はよその解説サイト等に譲りまして、この件は次のように考えます。 まず、変数 q1 ～ q5 に初期値として、文字列 "k1" ～ "k5" を入れておきます。 これで、q1 ～ q5 の値を eval 関数で参照に変換することで、変数 k1 ～ k5 の値を取り出せるようになります。 取り出した k1 ～ k5 の値を比較しながら、値が小さい順にを並び替えていきます。 この時、k1 ～ k5 の内容ではなく、これらの変数の名前を持っている ” q1 ～ q5 の内容の方を”並び替えるようにします。 すると、ソート終了後の q1 ～ q5 には、並び替えた後の順番で "k1" ～ "k5" の文字列が入っていることになります。 ------------------------------------------------------------ スクリプトの一例です。 このスクリプトは、タイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /**************************************************/ 　////////////////////////////////////////////////// 　//初期設定 　////////////////////////////////////////////////// 　//ソートする変数の数 　item_max = 5; 　//ソートの対象 　//ただし、これらの変数の内容自体はソートされない 　k1 = 5; 　k2 = 1; 　k3 = 3; 　k4 = 2; 　k5 = 4; 　//変数q1～q5にソート対象の変数名”k1”～”k5”を入れる 　for( i = 1 ; i <= item_max ; i++ ) 　{ 　　eval( "q" add i ) = "k" add i; 　} 　////////////////////////////////////////////////// 　//q1～q5が持つ名前の変数の値をバブルソート 　//q1～q5にソート後のk1～k5の名前が入る 　////////////////////////////////////////////////// 　//ソート済みの部分をソートしないようにするためのカウンタ 　sort_done = 0; 　do 　{ 　　//バブルソートのチェック用フラグ 　　//並び替えを実行した時true、それ以外はfalse 　　//この値がfalseのまま変化しなくなるまでソートを続ける 　　sort_check = false; 　　//バブルソート 　　for( i = 1 ; i <= item_max - 1 - sort_done ; i++ ) 　　{ 　　　// i 番目とその次の q が指している変数 k○ の値を取り出す 　　　n1 = eval( eval( "q" add i ) ); 　　　n2 = eval( eval( "q" add ( i + 1 ) ) ); 　　　//２つの値を比較し、前の方が大きければ q の内容を取りかえる 　　　if( n1 > n2 ) 　　　{ 　　　　temp = eval( "q" add i ); 　　　　eval( "q" add i ) = eval( "q" add ( i + 1 ) ); 　　　　eval( "q" add ( i + 1 ) ) = temp; 　　　　//並び替えを実行したことを記録する 　　　　sort_check = true; 　　　} 　　} 　　//ソート済みカウンタを更新 　　sort_done++; 　} 　while( sort_check == true ); 　////////////////////////////////////////////////// 　//動作チェック 　////////////////////////////////////////////////// 　for( i = 1 ; i <= item_max ; i++ ) 　{ 　　trace( ( "q" add i ) add " = " add ( eval( "q" add i ) ) add " : " add ( eval( eval( "q" add i ) ) ) ); 　} /**************************************************/ プレビューで確認してみてください。 trace アクションによる出力を有効にしていれば、「出力」パネルに 　q1 = k2 : 1 　q2 = k4 : 2 　q3 = k3 : 3 　q4 = k5 : 4 　q5 = k1 : 5 というように表示されます。 確認のための trace アクションが長～くなってしまっていますが。 " = "の次に連結されている 　eval( "q" add i ) で q1 ～ q5 に入っている文字列（ "k1" ～ "k5" ）を取り出し、 最後の 　eval( eval( "q" add i ) ) で q1 ～ q5 が持つ文字列を再度 eval 関数で参照に変換し、実際の k1 ～ k5 に入っている数値を取り出しています。
＃１です。 temp_vars.onLoad = function() { trace(this.hogehoge); } これが無事に動いているのでしたら， 書かれていらっしゃる temp_vars.onLoad = function() { _root.temp_hogehoge = this.hogehoge; trace(_root.temp_hogehoge); } でOKなはずです。 または _root をはずしてもかまいません。 temp_vars.onLoad = function() { temp_hogehoge = this.hogehoge; trace(temp_hogehoge); } これが無事に動作していないということは， そもそもロードできていなくて変なことになっているからかもしれません。 sendAndLoad は普通「送信用LoadVarsインスタンス」と「受信用LoadVarsインスタンス」が要ります。 「loadVars.sendAndLoad()メソッド。データ送受信」 http://www.1art.jp/flash2/chapter/49/49.htm ↑サンプルのサーバサイド言語は CGI(Perl) ですが， PHP でも ActionScript 側は基本的に同じです。
ご質問に単純に答えるなら scrollbars=yes を入れれば良いだけだと思います。 例 「$moker : 仕事的な、FLASHのサブウィンドの制御 / getURL」 http://topsmokers.exblog.jp/10604140/ しかし， ポップアップブロックは， 本来，Flash の getURL の _blank を阻止するためのものではなく， あえて使われている JavaScript の window.open 自動実行を阻止するためにあるのですからね。 つまり，わざわざ悪い方向へ進んでいるわけですから， なかなか難しいと思いますよ。 http://wakuworks.jugem.jp/?eid=85
またまたtkmkokです。 さっきまた嘘書いたかも。。 var num:Number; function myFunc(n:Number):Number { 　　num = n + 2; 　　return num; } myFunc(2); trace(num); // 結果 4 ↑こんなんでどうでしょ。。
初めてフルFlashのサイトを作るなら、ここ↓が分かりやすいと思います。 http://flash.webkun.org/index.html キャプチャ付きで順を追って説明してくれるので、仕組みが理解しやすいかと。 がんばって下さいね。
こんにちは。 一つのボタンを作り、それを多数配置しても、個々に設定するアクションスクリプトを替えることで、リンク先などの動作を変化させられます。 当然、同じインスタンスを使うわけですから、動作は違っても、マウスオーバーなど見た目上は、同じ効果が得られます。 ボタンごとに少し色を変えるなどして、多くのボタンを使いたいのであれば、マスターとなるボタンを作成してから、 右クリック⇒シンボルの複製 でいくらでも複製できます。 複製後は、それぞれが独立したインスタンスですから、必要に応じて編集すれば良いと思いますよ。 ちゃんとした回答になっているのか、いささか不安ですが、がんばってくださいｗ
そんな方法あるなら知りたいですね。 windowsのフリーソフトでそんなんあるのかな。。 "重く"の意味する所も・・・ 1）単純にデータサイズが重い。 2）動きがカクカクして遅い。 3）処理が複雑なのか、CPUを食いつぶす。 とかあると思います。 1や3はPCスペックが大きく関係するので質問者さまと友人さんのPCでは処理速度が違うでしょう。 2に関して言えばFlash上で右クリックで画質を"下"とかに落とせば多少軽減されます。 ただこれも制作者側で変更できないように設定していれば無理ですね。
背景画像がアップロードできていないのでは？
TOP.swf のフレーム1に書くスクリプト例です。 ----------------------------------------------- // ロード用の空のムービークリップを作成 var _mc:MovieClip = this.createEmptyMovieClip("loadMC", this.getNextHighestDepth()); // ロード用の空のムービークリップの座標指定 _mc._x = 100; _mc._y = 50; // カウント用の変数 cnt の初期化 var cnt:Number = 1; // 外部SWF をロードするユーザ定義関数 loadSWF を定義 function loadSWF():Void { // ロード用ムービークリップに 00?.swf をロード _mc.loadMovie("00"+cnt+".swf"); // カウント用の変数 cnt のカウントアップ if (cnt<3) { cnt++; } else { cnt = 1; } } // ユーザ定義関数 loadSWF を実行 loadSWF(); // １フレーム進む時間毎に随時実行 this.onEnterFrame = function():Void { // ロードしたムービークリップのフレーム数が2以上で if (_mc._currentframe>=2) { // 再生フレーム数が全フレーム数と等しい時 if (_mc._currentframe == _mc._totalframes) { // ユーザ定義関数 loadSWF を実行 loadSWF(); } } }; ----------------------------------------------- だだし， 上のスクリプトが無事動作するのは ・読み込む親SWFも読み込まれる子SWFも同じFlashPlayer対応 　＆同じActionScriptのバージョン対応のSWFをパブリッシュした場合 ・外部SWFが_rootのタイムラインを用いた素朴なアニメーションであって， 　＆最後のフレームに到着することが「ムービー終了」である場合 です。 「Flash swfのランダム再生 -OKWave」 http://okwave.jp/qa4441312.html
的外れでしたら、すみませんが、 swfファイル と htmlファイルが、別々のサーバ上にある場合は、 動作時、セキュリティガードが働くようです。 例えば、swf配置のタグに、以下のようなパラメタを追加で、 解決したりしますでしょうか。 <param name="allowScriptAccess" value="always" /> 参考URL：http://www.adobe.com/jp/support/kb/ts/229/ts_229 …
varを使いたいというのは、関数内のローカル変数にしたいということですか？ それならやっぱりオブジェクトを使うか、 空ＭＣをつくってその中で処理し、ＭＣごと消し去ってローカルっぽく見せるか（邪道？）、 そもそもこういう処理のための「クラス」を使った記述に書き換えるか、 ・・・ざっと思いついてもこれくらいか 初期段階ならクラスがお勧め、書き換えが少なくてすむのはオブジェクト。 ローカル変数じゃなくてもさほど影響の無いように全体を作るのが一番楽でしょうけどね。
Adobe、フリーなど、フラッシュを作成するソフトは お持ちですか？
＃２ です。 結構なマシンのスペックですね。 そうとうな動画などを扱わない限り十分だと思います。 Flash CS4 の金額ごときで考えこむくらいなら， 他が追いつけていない可能性が大きいと思って後半色々と書いた次第です。 上で書いた「Flash CS4 の金額ごとき」 というのは決して悪い意味ではありません。 ソフトの機能に比べたら（＆儲かる度合いに比べたら）， 他のソフトの比ではありませんという意味です。 ソフトは安い安い（すぐに元が取れる）。 その他は，＃２ で書いた通りです。
ご質問の趣旨とは違う回答だと思うので失敬します。 例としてのサイトを見ると、多くの情報とそれに伴う条件判断が必要で、その場合にはサーバー側にDBを備え情報管理をする場合がほとんどだと思います。flashやjavascriptはクライアントサイドスクリプトなので、不可能では無いにしろ現実的な選択肢にはならないと思います。 例えば。flashやjavascriptでこれを実現しようとすると。持っている商品情報など全てをページ遷移の度に引き渡し、クライアント側で処理させる事になるので、１ページ表示の度に膨大なネットワークコストが発生してしまいます。 なので、サーバーサイドスクリプトのphpやaspなどとDBのsqlを連携させたシステム構築が現実的な選択になると思います。
簡単に言えば， 「文字にマスクをかけて，そのマスクをモーショントゥイーンで動かす。」 ということです。 下の図↓を見て， 「なるほど」とわかった場合は，以下の文を読む必要はありません。 以下は操作方法の説明ですから， 図を見てすぐにわかる場合は，以下の文を読んでもややこしいだけで何の意味もなしませんので，全く読む必要なしです。 --- --- --- --- --- --- 書かれていらっしゃるページのスクリーンショットを撮ってみました(↓図１)。 「あなたの居場所をあなたらしく」 この１行を例に説明します。 「あなたの居場所をあなたらしく」の "所" という文字の "戸" は白っぽい文字の色ですが，"斤" は茶色っぽい色です。 ここから 『文字単位で色を変えている』のではなく， 『白い字の上に茶色の文字を徐々に表示させている』ということがわかります。 このように文字を表示させるのには マスク を使います。 ステージ上の任意のレイヤーの任意の位置に， 「_ゴシック」や「_明朝」などのように前にアンダースコアが入ったデバイスフォントではなく， 「○○明朝」とか「○○Pゴシック」とかのようなデバイスフォント以外の "普通のフォント" を使用して， 「あなたの居場所をあなたらしく」という文字を "静止テキスト" で入力します。 新規レイヤーを追加します。 そして静止テキスト「あなたの居場所をあなたらしく」を選択し， ［編集］→［コピー］， 新規で作成したレイヤーを選択して ［編集］→［同じ位置にペースト］などで同じ位置にコピーします。 この状態で， ２つのレイヤーの同じ座標に「あなたの居場所をあなたらしく」がそれぞれ配置されると思いますから， 上レイヤーの文字の色と下レイヤーの文字の色を別の色にします。 さらに， それぞれの文字のレイヤーの上にレイヤーを追加します。 その新規レイヤーのうち１つを選択して， 「あなたの居場所をあなたらしく」という文字をすっぽり包み隠すような塗りの長方形を描きます。 塗りの色は何色でもかまいません。 その塗りの長方形を選択して， [挿入]→[シンボルに変換] などで「グラフィックシンボル」，もしくは「ムービークリップ」に変換します。 その塗りの四角インスタンスを， 「あなたの居場所をあなたらしく」という文字のレイヤーの上にそれぞれ配置して， そのレイヤー名を選択して「右クリック」→「マスク」などによって四角い塗りのある方をマスクレイヤーにします。 マスクレイヤーにすると自動的にレイヤーにロックがかかってしまいますからそのロックを解除して， 下の図２↓や図３↓のようにモーショントゥイーンでマスクを動かします。 なお図３は全体の構造を見やすくしたイメージ図です。 実際に図のように見えるわけではありません。 そしてパブリッシュすると， 書かれていらっしゃるページのような文字が出没するアニメーションができます。 この作業を各行に対してしていけば文章全体が作成できます。
スプライトで作成した自作ボタンではなく、いわゆる本当のボタンである場合は、 「this」などの指定ができませんからとりあえずインスタンス名を付ける必要があります。 キャンバスに配置した透明ボタンのレイヤーをダブルクリックするなどして 「レイヤープロパティ」パネルを表示させ、 たとえば 「toumei_btn」 というインスタンス名を付けます（↓下図）。 そしてアクションレイヤーを挿入して、 そのボタンが存在するキーフレームに、 ---------------------------------------------- // toumei_btn の ハンドカーソルを無効にする toumei_btn.useHandCursor = false; ---------------------------------------------- と書きます。 これで、ボタンにマウスカーソルが乗ったときも指差しカーソルになりません。 //-//-//-//-//-//-//-//-//-//-//-//-// 以上なのですが、 こういう隠しボタンの場合は、普通さらに念を押す必要があります。 もし、その Flash を表示した状態で、「Tab」キーを連続押しなどされると、 せっかく透明にした上でハンドカーソルを無効にしたにも関わらず、 ボタンの周りに黄色の枠が出てしまいます。 この黄色い枠を表示させないようにするためにはさらに１行必要になります。 その１行を追加したのが次のスクリプトです。 ---------------------------------------------- // toumei_btn の ハンドカーソルを無効にする toumei_btn.useHandCursor = false; // toumei_btn の フォーカス選択 を無効にする toumei_btn._focusrect = false; ---------------------------------------------- これで「Tab」キーに対する対策もできます。
全くわかりません。 またそういう経験もありません。 以下は適当に勝手に書いてみたものです。 > 内容を編集しない状態で 　　　　＆ > Flashのパブリッシュ設定、環境設定も同じ内容でした。 これを 100％ 信用するなら， フォントかな？　という気がしないでもありません。 静止テキストで埋め込みフォントを使用する場合， デバイスフォントではなく何某かのフォントを指示する必要があります。 例えば， パソコンA で AAAゴシック を選択してテキストを打っていて，その FLA を パソコンB に持っていったとします。 パソコンB に AAAゴシック がなければ，何某かの代替フォントを選択せざるを得ません。 その 代替フォント のアウトラインデータが AAAゴシック より重ければファイルは重くなります。 しかし， 86KB という数字は Flash 内 AS や シェイプ の重さとは考えにくいです。 （静止テキストならあり得ないでもない数値ですが，それは置いておいて。） つまり Flash の重さではなく， おそらく 写真 などのビットマップ系画像データの重さが大半を占めているのではないかと推測されます。 > Flashのパブリッシュ設定、環境設定も同じ内容でした。 これを信用しないと仮定するなら， パブリッシュ設定の「Flash」タブ の JPEG画質 の値をさわってしまったのではないか などが考えられます。 > 内容を編集しない状態で これを信用しないと仮定するなら， ライブラリパネルにあるビットマップシンボル プロパティから， 圧縮 や 画質 をさわってしまったのではないか などが考えられます。 あと，同じ SWF でも， Flash Lite 2.0 設定では 圧縮SWF がパブリッシュできますしデフォルトでは圧縮されるように設定されてますよね。 Flash Lite 1.1 設定では 圧縮SWF はパブリッシュできません。 その辺が絡んでいるのかもしれません。 最初に書いた フォント よりも， やはりどこかを触ったと考える方が妥当な気がしてなりません。 または > swfファイルサイズが（86KB→116KB） の確認間違いとかも考えられます。 例えば同じファイルでも片方はファイルのサイズを見ていて，片方はディスク上のサイズを見ているとか。 ファイルシステム NTFS サイズ 　86.9 KB (89,086 バイト) ディスク上のサイズ 　87.0 KB (89,088 バイト) ファイルシステム FAT32 サイズ 　86.9 KB (89,086 バイト) ディスク上のサイズ 　88.0 KB (90,112 バイト) （↑同じファイルを見ていても全く別物に見えます。） また， SWFを入れたフォルダが圧縮フォルダになっていた場合， ファイルのサイズとディスク上のサイズぜんぜん違うサイズに見えます。 サイズ 　128 KB (131,955 バイト) ディスク上のサイズ 　84.0 KB (86,016 バイト) （↑この数字の差が結構リアルですね。アーカイブフォルダに適当に作成したSWFファイルを入れたときの本当の実測値です。）
Flash 作成ソフトのバージョンも， ActionScript のバージョンも， パブリッシュしたい Flash Player のバージョンもわかりません。 なおかつ何をしたいのかが具体的に全くわかりませんが， Local Connection でできることかもしれません。 Google検索「localconnection」 http://www.google.co.jp/search?hl=ja&rlz=1T4GGLL … 使用例「F-site LocalConnectionを使ったサンプル」 http://f-site.org/articles/2003/10/27112859.html 上のサンプルでは２つのSWFを別窓で用意してますが， 別窓でなくても同じです。 しかし， こんな ActionScript が使えただけでは無意味ですよ。 スクリプトを使うための手品(手品の種と仕込み)と具体的なイメージをしっかりと考えなければ。 手品あっての LocalConnection です。 LocalConnection に限らず， gotoAndPlay() みたいなものでもそうですけどね。 すべては種と仕込みが大切です。
トゥイーン を使います。 とりあえずは次のＵＲＬをご参考に。 フリーのFlash作成ソフトSuzukaによる、スライドショー作成チュートリアル http://www.towofu.net/blog/2006/08/flashsuzuka.h … ◎その他 Flashムービー作成フリーソフト「Suzuka」後編： スプライトやトゥイーン機能を使えば複雑な動きも楽々：ITpro http://itpro.nikkeibp.co.jp/article/COLUMN/20061 … Suzuka 基礎・基本 ものをトゥイーンで動かす http://suzupara.iinaa.net/kiso021.html 　
＃１です。 わかるかどうかが不安になったので，＃１ の補足をします。 ＃１で書いたのはアルゴリズム，いわば考え方です。 考え方のみではなく， 具体的なスクリプト例と，ムービークリップの構造を図示します。 左右に２枚の画像を連結して， その画像の左端を基準点に設定してムービークリップに変換したとします。 そのムービークリップ自体に書くスクリプト例です。 --------------------------------------------------------- on (press) { this.startDrag(false, -10000, this._y, 10000, this._y); } on (release) { this.stopDrag(); } on (releaseOutside) { this.stopDrag(); } onClipEvent (mouseMove) { if (this._x<-this._width/2) { this._x += this._width/2; } else if (this._x>0) { this._x -= this._width/2; } updateAfterEvent(); } --------------------------------------------------------- このスクリプトを書くムービークリップとは， 下の図のように作成したものの場合です。
やりたいことはほぼ判りますが、 何が判らないのか、全く判りません。 自分で作った物を提示するか、うまくいかないかったスクリプトをあげてはいかがですか？ それとも丸投げ？
象はパラパラマンガです。 ただし，その象に限っては Flash ではないソフトで描かれていますから， 別ソフトで作成したパラパラ１コマずつの絵をたくさん読み込んだのだと思います。 または GIF アニメを他ソフトで作成しておいてそれを Flash に読み込んで作成したかでしょう。 とにかく画像が荒くて一目でビットマップ画像だとわかるのでFlashではありません。 Flash での パラパラマンガ 作成技法の１つです↓。 「ケシコミ」 http://f-site.org/articles/2005/12/05231617.html 　→ ムービーを見る　をクリック 花びらは普通のモーショントゥイーンでしょう。 花びらを１枚描きます。 その花びらをグラフィックシンボルのインスタンスに変換します。 そのグラフィックインスタンスをムービークリップに変換します。 そのムービークリップの中でモーションガイドを使って 花びらグラフィックインスタンスを上から下に回転させながら移動させます。 画面の高さに対して２倍くらいの長さで長めに回転＆降下させるほうが良いです。 そのムービークリップの最終フレームには stop(); を書いてループ再生させないようにしておきます。 そのようにして作成した花びらムービークリップを を適当な場所に時間差で配置し適当に拡大・縮小させます。 そうすると１枚の花びらの回転＆降下アニメを作成するだけで簡単に沢山の花びらを降らせることができます。 モーションガイドについてピッタリのページが見つかりませんが，一応参考URL↓。 「Flash実践入門　パスアニメーション（モーションガイド）の作成」 http://www.feedsoft.net/feedsoft/useful/flash_ko … モーションガイドは使っていませんが， 一応花びらが回転しながら散るサンプル付き解説↓。 「夜桜のアニメーションを作成 - ［Flash］All About」 http://allabout.co.jp/gs/flash/closeup/CU2008030 …
こんにちは。 最後の画面で静止したものにしたいのであれば、ムービーのループを止めるのではなく、アクションスクリプトで制御したほうが簡単ですね。 新規レイヤーを追加して、静止したいフレーム（たぶん最終フレーム）をキーフレームにして、 　stop(); とだけ入れてパブリッシュしてください。 これで希望通りになると思います。
質問の内容が、いまひとつ掴み辛いのですが・・・ 消えたり出たりするのは、ボタンのことですかね？ ボタンに設定したアクションスクリプトの内容はわかりませんが、多分 　on (release) { gotoAndPlay("ラベル名"); 　} でしょうか。 この場合、クリックしたら指定されたラベルに移動して再生を続けますから、移動先で停止させたいフレームに 　stop(); を書き込めばいいですし、ボタンの中身を 　on (release) { gotoAndStop("ラベル名"); 　} とすれば、移動したラベルの頭で停止します。 なにぶん、状況がわからないので、勝手な解釈で書きました。 違ってたらごめんなさいｗ
根本的には ActionScript ではなく JavaScript のご質問だと思います。 　JavaScript でそういうことが不可能であればできない。 　JavaScript で可能であればその関数を Flash から叩いてやれば良い。 ということです。 「サブからメインウィンドウを操作する」 http://www.tagindex.com/javascript/window/sub_to … というわけで，JavaScript でできるのですからそれを使えばできます。 （しかし，width=800, height=480 とは大きな子窓ですね。 親窓が子窓に隠れて変わったことに気づかない場合もあるかも...？） ---子窓で開く「pop.html」のソースコード例-------------- <html> <head> <title>POP</title> <script type="text/javascript"> <!-- //以下 「サブからメインウィンドウを操作する」 をそのまま引用 --- function disp(url){ if(!window.opener || window.opener.closed){ // メインウィンドウの存在をチェック window.alert('メインウィンドウがありません'); // 存在しない場合は警告ダイアログを表示 } else{ window.opener.location.href = url; // 存在する場合はページを切りかえる } } //以上 「サブからメインウィンドウを操作する」 をそのまま引用 --- // --> </script> <style type="text/css"> <!-- BODY{ MARGIN: 0px } --> </style> </head> <body> <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="800" height="480" id="pop" align="middle"> <param name="allowScriptAccess" value="always" /> <param name="movie" value="pop.swf" /> <embed src="pop.swf" width="800" height="480" name="pop" align="middle" allowScriptAccess="always" /> </object> </body> </html> --------------------------------------------- 「pop.html」に貼り付けた「pop.swf」のボタンのスクリプト例↓。 （Flash Player 4 以降用の古めの例：ActionScript1.0/2.0） ----------------------------------- on (release) { getURL("javascript:disp('jump.html')"); } ----------------------------------- 「pop.html」に貼り付けた「pop.swf」に 「my_btn」というインスタンス名のボタンを作成した場合の フレームに書くスクリプト例↓。 （Flash Player 8 以降用の新しめの例：ActionScript2.0） ----------------------------------- import flash.external.ExternalInterface; my_btn.onRelease = function():Void { ExternalInterface.call("disp", "jump.html"); }; ----------------------------------- ※補足 　ExternalInterfaceクラス は ActionScript3.0 でも残りましたが， 　getURL関数 および MovieClip.getURL メソッドは消えました。 　on (release) および onRelease は ActionScript3.0 では存在しません。 　
書式と効果の意味がよくわかりませんが、すでにシンボルとして作成したものということでしょうか。 シンボルとして作成したものを一部分変えたいという場合は、ライブラリからシンボルを複製して、コピーしたものを修正すればよいかと思います。
特にいくつだからOKという基準はないですね。 ターゲットを絞ってそのターゲットユーザーが耐えられる容量であればOKだと思います。 あとは、閲覧者を考慮して先読み機能をつけるとか、コンテンツの前に1ページおいて、5MBあるのでこんな環境の人は何秒くらいかかるとか表示するとか。 パブリッシュ時に「ダウンロードのシミュレート」をやってみて体感してみるとか。 （個人的にDSLでロードにあまり時間がかからず、ストレスなく表示したらOKということにしてますｗ） まぁ最近は大手のサイトでも画像をふんだんに使って重くなってるページとか平気でありますが、見るのに時間がかかる場合は閲覧者が別なページに飛ぶので、問題はないと思いますが。。。 5MBだと個人的には光環境でたいしたことないと思いますが、世の中ブロードバンドだけではありませんのでなんとも。。。 問題は5MB読み込んだあとに、閲覧者に待った時間分喜んでもらえるコンテンツを提供できるか否か、ですかねｗ
＃１＆２ です。 キー操作は特に重要ではないのですか。 その点がネックで作成に詰まってしまわれる方が結構多いのでそこがポイントなのかと思っていました。 (例えば Flash Lite のバージョンの違いによって表示するSWFを自動切り替えするなどで詰まります。) Flash Lite 1.1 で SWF コンテンツの中に他の画像ファイルを読み込む場合は "SWF限定" で loadMovie() を使います。 「[Think IT] 第5回：Flash Liteのまとめと今後 (1-3)」 http://www.thinkit.co.jp/article/144/5/ SWF限定ではありますが， あらかじめSWFの中にJPEGなどを埋め込んだファイルを作成してしまっておけば SWF形式以外の画像もロードできると思います。 SWFをサーバで生成する方法ですが， ご存じかもしれませんが多くの方が Ming というライブラリを使われています。 「Mingの概要とMingで出来ること」 http://www.ohnolab.org/~kimoto/flash/ming.html サーバの言語は何かわかりませんが， JPEG などの画像を埋め込んだSWFを生成することも可能です。 「画像の表示(Ming-C++)」 http://www.fireproject.jp/feature/uzumi/ming/ima … 「PHP を使ってすぐに Flash ムービーを作る」 　>>画像を使用する http://www.ibm.com/developerworks/jp/opensource/ … SWFの仕様を解析するより， Ming の使い方を研究したり，また Ming 自体を解析する方がずっと近道だと思います。 すでにご存じのことも多いとは思いますが 以上のように思いましたので参考までに書かせていただきました。 その他 Google検索「Ming Flash Lite」 http://www.google.co.jp/search?hl=ja&q=Ming+Flas …
旗が動いていない所から見ても全く画像は変えてえていないと思うので， 単に半透明内ブロックを左上から，モーショントゥイーンでフェードインで登場させてフェードアウトで消しているだけだと思います。 タイムラインをイメージ的に表すと次のような感じです。 　白いブロック　・・・|○　　　　　[]●---->[]|●////////////// 　白いブロック　・・・|○　　　[]●---->[]|●//////////////// 　白いブロック　・・・|○　[]●---->[]|●////////////////// 　白いブロック　・・・|●---->[]|●////////////////////// 　写真レイヤー　・・・|////////////////////////////////（固定）
乱数の発生の話ではありませんが。 いくつかの候補の中から「正答１つと、誤答を２つ重複せずにランダムに選ぶ」のでしたら、複雑な条件の乱数の発生の仕組みを考えるより、発想を変えて、選択肢のデータの持ち方を工夫してはいかがでしょう。 仮に、正答１つと誤答９つの計 10 個の選択肢の候補があり、これらを a0 ～ a9 という変数で管理するとします。 正答を必ず a0 に入れると決めると、残る a1 ～ a9 は全て誤答の候補になります。 ランダムに選択したいのは誤答の候補だけですから、正答が入っている a0 は触らず、誤答の a1 ～ a9 だけをシャッフルして値をランダムに並べかえます。 こうして並べかえたものの中から先頭の３つを取り出せば、正答である a0 と、重複しない誤答をランダムに２つ取り出すことができます。 しかし、a0 ～ a2 の選択肢をただ順番に表示すると、正解が常に最初の項目に来ることになり、これではクイズになりません。 そこで、取り出した３つの選択肢もシャッフルし、ランダムな並び方で表示するようにします。 プレイヤーに提示する選択肢の並び方を決める処理を工夫すると、クイズの正誤判定も作りやすくなります。 ------------------------------------------------------------- スクリプトの一例です。 このスクリプトは、タイムラインのフレームに設定してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください。このまま使うとシンタックスエラーになります） /*********************************************************/ 　///////////////////////////////////////////////////// 　//初期設定 　///////////////////////////////////////////////////// 　//選択肢の候補：正答を0番に入れておく 　a0 = "富士山"; 　a1 = "槍ヶ岳"; 　a2 = "普賢岳"; 　a3 = "立山"; 　a4 = "月山"; 　a5 = "妙義山"; 　a6 = "乗鞍岳"; 　a7 = "岡山"; 　a8 = "富山"; 　a9 = "和歌山"; 　//誤答の候補の総数 　wrong_max = 9; 　//表示される選択肢の中での正答の番号（1～3）を保持 　//初期値はダミー 　answer = 1; 　//表示する選択肢（a0～a2）の表示順序を保持 　//初期値はダミー 　index1 = 0; 　index2 = 1; 　index3 = 2; 　//表示する選択肢の並び順をシャッフルする回数 　shuffle = 10; 　///////////////////////////////////////////////////// 　//誤答の候補をシャッフル 　///////////////////////////////////////////////////// 　//正答のa0を除くa1～a9の内容をシャッフル 　for( i = 1 ; i < wrong_max ; i++ ) 　{ 　　//ｉ番目以降の要素（ｉ番目も含む）の１つをランダムに選ぶ 　　rnd1 = random( wrong_max + 1 - i ) + i; 　　//ｉ番目の要素と選んだ要素の値を取りかえる 　　temp = eval( "a" add i ); 　　eval( "a" add i ) = eval( "a" add rnd1 ); 　　eval( "a" add rnd1 ) = temp; 　} 　///////////////////////////////////////////////////// 　//選択肢の表示順を決定し、正解のある項目を調べる 　///////////////////////////////////////////////////// 　//選択肢の並び順をシャッフル 　for( i = 0 ; i < shuffle ; i++ ) 　{ 　　//index1～3の中から２つの要素をランダムに選ぶ 　　rnd1 = random( 3 ) + 1; 　　rnd2 = random( 3 ) + 1; 　　//選んだ２つの要素の値を取りかえる 　　temp = eval( "index" add rnd1 ); 　　eval( "index" add rnd1 ) = eval( "index" add rnd2 ); 　　eval( "index" add rnd2 ) = temp; 　} 　//正答が入っている項目（＝0が入っている変数indexの番号）を調べる 　//調べた番号は変数answerに入る 　for( i = 1 ; eval( "index" add i ) <> 0 ; i++ , answer = i ) 　　; 　///////////////////////////////////////////////////// 　//デバッグ：問題文と選択肢・正解の表示 　///////////////////////////////////////////////////// 　//問題文 　q = "日本で一番高い山は？" 　//選択肢の表示データを作る 　disp = ""; 　for( i = 1 ; i <= 3 ; i++ ) 　{ 　　//項目の順序と、表示する選択肢を取得 　　a_index = eval( "index" add i ); 　　item = eval( "a" add a_index ); 　　//項目の番号と選択肢の本文を連結 　　disp = disp add "　" add i add " ： " add item add "\n"; 　} 　//問題文と選択肢を連結 　disp = q add "\n\n" add disp add "\n"; 　//正答を連結 　disp = disp add "　答え： " add answer; /*********************************************************/ ダイナミックテキストのテキストフィールド（行タイプは”複数行”にします）を作り、「変数：」の項目に” disp ”と記述して動作を確認してみてください。 　　日本で一番高い山は？ 　　　1： 槍ヶ岳 　　　2： 富士山 　　　3： 妙義山 　　　答え： 2 というように表示されます。 正答である”富士山”は必ず選択肢に出てきますが、残る２つの誤答はランダムに選出されます。 また、上記の例では”富士山”が２番になっており、この例での正解は２番ということになりますが、必ず２番目に”富士山”が来るとは限りません。１番や３番になることもあります。 ”富士山”が何番目に表示されていても、「答え：」には”富士山”が表示されている項目の番号が表示されます。 「答え：」で表示している値である、プレイヤーに提示される選択肢の中での正解の番号は、変数 answer の中に入っています。 つまり、変数 answer の値とプレイヤーが入力した番号を照合することで、クイズの正解・不正解を判断することができます。 ------------------------------------------------------------- スクリプトの主な構成です。 まず、変数 a0 ～ a9 の中に 10 個の選択肢の候補を用意します。 正答を a0 に入れ、誤答が入っている a1 ～ a9 だけをシャッフルして内容をランダムに並べ替えます。 シャッフルには様々な方法がありますが、a1 ～ a9 を並べ替える時は「ｎ番目と、ｎ番目以降の要素のいずれか１つを取りかえる」方法を使っています。 これは、 　a1と、a1 ～ a9 のいずれかを取りかえる 　a2と、a2 ～ a9 のいずれかを取りかえる 　a3と、a3 ～ a9 のいずれかを取りかえる 　　　： という作業を繰り返してランダムな並びを作る方法です。 最後の a9 は取りかえる相手がいないので、作業は a9 の１つ手前の a8 まで行います。 ******************************* こうしてできた並びの選択肢の候補の中から先頭の３つ（ a0 ～ a2 ）を取り出し、これらを更にシャッフルしてランダムな並び方で表示します。 正答が入っている a0 は先のシャッフルで移動していませんから、a0 は必ず選択肢に含まれるようになります。 a0 ～ a2 を直接シャッフルすると、a0 の内容が a1 や a2 に移動してしまい、a0 が必ずしも正答とは言えなくなる可能性が出てきます。 そこで、0 ～ 2 を入れた別の変数 index1 ～ index3 を用意し、こちらで選択肢を表示する順序を決めて、この番号を見ながら実際に提示する選択肢である a0 ～ a2 を表示していくことにします。 例えば、index1 ～ index3 の値をシャッフルした結果、 　index1 → 2 　index2 → 0 　index3 → 1 と決まったとすると、実際の選択肢は a2 → a0 → a1 の順に表示されます。 なお、index1 ～ index3 の値をシャッフルする方法は「２つの要素をランダムに選び、お互いに交換する。これを数回繰り返す」方法を使っています。 シャッフルの回数は、変数 shuffle の値を書き換えると変更できます。 ******************************* index1 ～ index3 のシャッフルは a0 ～ a2 の値を見ていく順番を決めるだけで、a0 ～ a2 の値は何も変更しません。 ですから、正答はやはり a0 に入っています。 それから、変数 index1 ～ index3 の”index ”の後ろに付いている番号は、画面上での選択肢の番号、つまりプレイヤーが選択する番号に対応します。 合わせますと、画面に表示された３つの選択肢の中での正解とは、a0 ～ a2 の表示順番を決めた index1 ～ index3 のうち、0 が入っているものが何番であるかを調べることで分かると言えます。 上記のスクリプトでは、for 文の「 (　) の２番目に記述されている条件が成立している間だけループが継続される」特徴を利用して調べ、最終的に変数 answer に正解の項目の番号が入ります。 クイズでは、プレイヤーが選んだものが正解かどうかを判別する処理も必要です。 複数ある選択肢の候補の中から正答と誤答を選んで提示する方法だけでなく、こちらの処理も合わせて考慮しながら、システムを設計してみてください。
> もしくは「FLASHでこうやればいいんだよ」的なアドヴァイスでも結構です。 Flash だったら最初に移動するだけのモーショントゥイーンを作成して， 途中のフレームをキーフレームにして， 最後のフレームの写真のアルファを 0 にします。 そうすると 　写真:アルファ100→　写真:アルファ100→　写真:アルファ0 というアニメーションが完成します。
スクリプト長すぎです。 これを全部読んで回答してくれる人はなかなかいないんじゃ・・・。 問題の部分だけに絞り込んだ方が良いかと。 表題の件はにゃあプロジェクトさんとこのが参考になりますよ。 http://www.azug.jp/~mayor/monkey/work_test/t6433 … 他、CASAframeworkなどのフレームワークを使うともっと楽チンかも。
すごい物を見つけてしまいました!! BatchDOO!と言うフリーソフトです。 これひとつで何でも変換してくれます。 初心者でも簡単に使えます。 ちなみにニコニコ動画はニコニコムービーメーカーでswf形式のままでアップロードできます。 無駄な手間が省けて高画質で容量も無駄に使わない(フラッシュの内容によります)ので効率いいと思います。 参考URL：http://www.vector.co.jp/soft/win95/art/se436800. …
その情報だけでは、誰も知恵は貸せません。 もう少しあなたの環境と、現在のスクリプトなど補足ください。
＃１ です。 状況がよくわかりませんが， 少なくともムービークリップに ._visible などというプロパティはないと思いますよ。 _alpha ならあるので， setProperty関数でキッチリとアルファを０にしてやれば， ムービークリップは非表示(見かけ上のみ)になるとは思います。 http://www.google.co.jp/search?hl=ja&q=setProper … 何にしても， ふつうのFlashのように考えてはいけません。 ふつうのFlashがパンパンできても Flash Lite 1.x ではまるっきり歯が立たないことは多々多々多々あります。 つまり最初から全てやり直しと思った方が良いと思います。
Flash CS4 からは "モーショントゥイーン" の示すものが変わったからでしょう。 Flash 1 ～ CS3 まで のモーショントゥイーンは CS4 では "クラシックトゥイーン" と呼ばれるものです。 Flash CS4 のモーショントゥイーン は今までになかった新トゥイーンです。 新トゥイーンでは 第一にキーフレームが不要です（自動的にプロパティキーフレームが挿入されます）。 3D回転などのトゥイーンもサポートされています。 その他色々違う点が多く， 旧モーショントゥイーン(クラシックトゥイーン) と 新モーショントゥイーン(つまりモーショントゥイーン)は， 「全く別物」と考えた方が良いと思います。 というわけで， 旧モーショントゥイーンを使いたい場合は， クラシックトゥイーンを選択してください↓。
> ボタンもムービークリップの一種なので 違いますよ。全く違います。 UIコンポーネント の Buttonコンポーネント でしたら， ムービークリップを拡張して作成されたものですから， ムービークリップの一種であると言えます。 しかし普通のボタンはムービークリップとは全く別物です。 だいたい，ボタンはムービークリップが登場する前の初代Flashからすでにありました。 ムービークリップはFlash3からの登場です。 ムービークリップにはこの時点ですでにインスタンス名を付けることができましたが， ボタンのインスタンス名が付けられるようになったのは Flash MX 以降の話です。 どちらかというとボタンはグラフィックシンボルに近い存在だと思います（近いだけで違いますが）。 またボタンはムービークリップと違って階層も持ちません。 またクラスも違います。 また内部にスクリプトを持つこともできません。 > mcBtn.gotoAndStop(3); // ダウンにならない 最初からムービークリップで作成すれば良いだけだと思います。 「ムービークリップのボタン化」 http://homepage3.nifty.com/ginga-b/MX/btnmc.html これは attachMovie するしないという以前の問題ですけどね。 その他検証結果 mcBtn.gotoAndStop(3); // ダウンにならない trace(typeof (mcBtn)); // →出力結果「object」 変なのは， 「gotoAndStop(3) ができないこと」 ではなく， 「attachMovie ができてしまうこと」 です。 attachMovie は MovieClip クラスのメソッドであって Buttonクラスにはありません。 したがって本来は attachMovie できるはずがない。できてはならないもののはずです。 できてはならないものができてしまう方が問題だとは思いますが， できたからと言って特に不具合を起こすようなことにはならないと思うので， そのまま放置されたもの，つまりバグの一種だと思います。 そういう変な現象（バグとは呼べないバグ）はけっこうありますよ。 先日発見したのですが， MovieClip.loadMovie メソッド の方ではなくて， loadMovie 関数の方で ロードするターゲットにボタンやテキストフィールドを指定した場合， 外部の画像やムービーがロードできてしまうとかとか… （↑この場合 typeof は movieclip に変身します。）
ファイル名の文字連結不正が原因だと思います。 myLV.load("http://●●/●●/+"count"+.txt");NG ↓修正 myLV.load("http://●●/●●/" + count+ ".txt"); これで再実行した結果、うまくいかない場合は 返却データ変数 countの値を確認してください。
日数の計算は年・月ごとに日数が異なるため、数値の演算のように単純に計算することができません。 しかし、基準を決めて、そこからイベントの日までの日数と現在までの日数を算出すると、両者は同じ基準から見た日数になり、容易に差分を求めることができます。 No.863385 の＃２の作例では、1970 年１月１日０時０秒を基準としてイベントの日までの時間と現在までの時間を求め、この差分を日数に直しています。 1970 年１月１日を基準にする理由は、Date クラス（古い Flash ではオブジェクト）という日付や時刻を扱うクラスが持っている機能で 1970 年１月１日から指定の日時までの経過時間を取得できるからです。 しかし、Flash Lite 1.1 には Date クラスやこれと同等の機能の関数がありません。 同じ発想で考えるならば、別の基準が必要になります。 日数単位の計算でしたら、グレゴリオ暦の特徴を活かした様々なアルゴリズムが考案されています。 他にも、ユリウス暦を使って求める方法などもあるそうです。 ActionScript の作例ではないのですが、現在の年月日とイベントの年月日だけで計算できる（配列変数も不使用）アルゴリズムがありました。 年に満たない分の日数を配列変数を使わずに求める部分が理屈っぽい話になっていますけれど、よろしければご参照ください。 　・ ++C++; // 未確認飛行 Ｃ： 　　経過日数の計算（アルゴリズムとデータ構造） 　　http://ufcpp.net/study/algorithm/o_days.html 紹介されているプログラムはＣ＃のものなので、Flash Lite では使えません。 Flash Lite 1.1 用に書き直すと、大体、次のようになりますでしょうか。 このスクリプトは、タイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /*****************************************************/ 　///////////////////////////////////////////////////////////////////// 　//初期設定 　///////////////////////////////////////////////////////////////////// 　//イベントの年月日 　event_y = 2009; 　event_m = 3; 　event_d = 3; 　//現在の年月日を取得 　today_y = fscommand2( "GetDateYear" ); 　today_m = fscommand2( "GetDateMonth" ); 　today_d = fscommand2( "GetDateDay" ); 　///////////////////////////////////////////////////////////////////// 　//グレゴリオ暦１年１月１日からイベント日までの経過日数を求める 　///////////////////////////////////////////////////////////////////// 　//イベントの月が１月または２月の場合、前年の13月・14月として扱う 　if( event_m <= 2 ) 　{ 　　temp_y = event_y - 1; 　　temp_m = event_m + 12; 　} 　else 　{ 　　temp_y = event_y; 　　temp_m = event_m; 　} 　//経過年を日に換算：とりあえず全て平年と見なして計算 　year_d = 365 * ( temp_y - 1 ); 　//閏年の回数を算出 　leap_y = int( temp_y / 4 ) - int( temp_y / 100 ) + int( temp_y / 400 ); 　//１月１日からイベントの月の１日までの日数 　adjust_d = int( ( temp_m * 979 - 1033 ) / 32 ); 　//１年１月１日からイベントの年月日までの日数 　event_days = year_d + leap_y + adjust_d + event_d - 1; 　////////////////////////////////////////////////////////////////// 　//グレゴリオ暦１年１月１日から現在までの経過日数を求める 　////////////////////////////////////////////////////////////////// 　//現在の月が１月または２月の場合、前年の13月・14月として扱う 　if( today_m <= 2 ) 　{ 　　temp_y = today_y - 1; 　　temp_m = today_m + 12; 　} 　else 　{ 　　temp_y = today_y; 　　temp_m = today_m; 　} 　//経過年を日に換算：とりあえず全て平年と見なして計算 　year_d = 365 * ( temp_y - 1 ); 　//閏年の回数を算出 　leap_y = int( temp_y / 4 ) - int( temp_y / 100 ) + int( temp_y / 400 ); 　//１月１日から現在の月の１日までの日数 　adjust_d = int( ( temp_m * 979 - 1033 ) / 32 ); 　//１年１月１日から現在までの経過日数 　today_days = year_d + leap_y + adjust_d + today_d - 1; 　////////////////////////////////////////////////////////////////// 　//イベントまでの日数を求める 　////////////////////////////////////////////////////////////////// 　day_cnt = event_days - today_days; /*****************************************************/ イベントの年月日を、変数 event_y ・ event_m ・ event_d に指定してください。上記の作例では 2009 年３月３日をイベントの日とし、現在からこの日までの日数を算出します。 最終的に、変数 day_cnt にイベント日までの日数が入ります。ダイナミックテキストなどに出力して、動作を確認してみてください。 シフト演算（ >> 2 と >> 5 の部分）は Flash Lite 1.1 では使えないため、シフト演算の部分を除算に置き換えています。 スクリプトを書いたフレームと次のフレームをループするなどしてスクリプトが連続的に実行される構成にすると、閲覧中に日付が変わった時にも日数が減るようになります。 当方は Flash Lite 1.1 や Flash Player 4 の文法に詳しくないので、なんか鈍くさいことをやっているかもしれません　^^; プレビューでの動作確認のみで実機では検証しておりませんが、ご参考までに。
適当に●とかでも描いて、それを「ムービークリップ」に変換。 ●をクリックして開いてその画面で羽ばたく鳥のアニメーションを作成 一つ前のシーン（一番はじめ、●をかいたとこ）に戻って、今度はそのムービークリップ自体（羽ばたく鳥）をモーショントゥーインで動かす。 こんな感じでOKでしょうか。 要するに、羽ばたくアニメが入ったムービークリップを作って、最終的のそのムービークリップ自体を動かすというかんじなのですが…。 うーん、説明下手＆質問文の理解が間違っていたらすみません。
書き忘れました；； 16kbpsのままでは、ステレオ指定が出来ませんから、24kbps以上にしてください。
＃２です。 ＃２は，＃１に書かれた文だけを見て書いたもので， ついうっかり本題のご質問の方を忘れ去っていました。 流れとしては MoveClipLoader クラスのメソッドでカードとなる画像をムービークリップにロードして， そのロードが完了次第， 画像を読み込んだムービークリップに何かを動作させる関数などを定義します。 私の回答したものですと下記のものが近いと思います。 「ランダムで表示されるアイコン→画像＋リンク」 http://okwave.jp/qa4639956.html 他のサイトですと次のような感じです。 【FlashQ&A】生成したムービークリップが押せない http://hfm-kenchan.com/Lesson/log_qa/D0805261.htm 中途半端に難しい条件なので， ちゃんとしたサイトのサンプルがなかなか見つかりませんね。 要はボタンではなくムービークリップに画像をロードするのです。 しかし， ムービークリップに外部の何かをロードすると， そのムービークリップが外部のものによって乗っ取られてしまうので， それまで(読み込む前まで)に定義や設定しておいたプロパティなどが吹き飛んでしまうのです。 そこで， ムービークリップに外部の画像がロードされるのを待ってから， その後で， そのムービークリップ.onRelease = function(){ 何かさせたい動作 }; を定義する必要が出てきます。 その「ムービークリップに外部の画像がロードされる」というタイミングをみはからうために， MovieClipLoader が必要になります。 ただし，絶対に MovieClipLoader が必要なわけではなく， ムービークリップ自体に固定的に書いた on(release){ 何かさせたい動作 } は，外部画像が読み込まれても消えることはありません。 したがって， 固定的な何かを実行させる命令がある場合は， MovieClipLoader は不必要だということになります。 （そういうことは普通はないので，もっとサンプルはありません。）
お持ちのFlashのバージョンもActionScriptのバージョンも書かれていらっしゃらないため， 少々回答がしにくいですね。 Flash MX 以上(Flash MX，MX2004系，8系，CS3，CS4)をお持ちだと勝手に決めて以下を回答します。 ActionScript のバージョンは 1.0 です。 ステージ上に 「ringo_mc」，「banana_mc」，「budou_mc」というインスタンス名を付けたドラッグ用ムービークリップと 「kago_mc」というインスタンス名を付けたカゴ用ムービークリップと 「goukei_btn」というインスタンス名を付けた合計表示動作用ボタンと 「goutei_txt」というインスタンス名を付けた合計表示用ダイナミックテキストを用意します。 （各インスタンスに関しては下の図↓をご参考に。） そして， それらを配置した _root などのタイムラインの フレーム（キーフレーム）に 次のように書けば 一応それなりに近い物ができると思います。 ================================================= // 変数「goukei(合計)」の初期化 goukei = 0; // // ---リンゴムービークリップに関して--------- // リンゴムービークリップにドロップフラグである変数を設定 ringo_mc.drop_flg = false; // リンゴムービークリップを押した時の動作定義 // ringo_mc.onPress = function() { // リンゴムービークリップをドラッグ開始 this.startDrag(); }; // // リンゴムービークリップを放した時の動作定義 ringo_mc.onRelease = ringo_mc.onReleaseOutside=function () { this.stopDrag(); // もしカゴムービークリップに当たっていてdrop_flgがfalseであれば if (this.hitTest(kago_mc) && !this.drop_flg) { // 合計に100を加算 goukei += 100; // drop_flg を true にする this.drop_flg = true; // もしカゴムービークリップに当たっていなくてdrop_flgがtrueであれば } else if (!this.hitTest(kago_mc) && this.drop_flg) { // 合計から100を減算 goukei -= 100; // drop_flg を false にする this.drop_flg = false; } }; // // ---バナナムービークリップに関して--------- banana_mc.drop_flg = false; // banana_mc.onPress = function() { this.startDrag(); }; // banana_mc.onRelease = banana_mc.onReleaseOutside=function () { this.stopDrag(); if (this.hitTest(kago_mc) && !this.drop_flg) { // 合計に200を加算 goukei += 200; this.drop_flg = true; } else if (!this.hitTest(kago_mc) && this.drop_flg) { // 合計から200を減算 goukei -= 200; this.drop_flg = false; } }; // // ---ブドウムービークリップに関して--------- budou_mc.drop_flg = false; // budou_mc.onPress = function() { this.startDrag(); }; // budou_mc.onRelease = budou_mc.onReleaseOutside=function () { this.stopDrag(); if (this.hitTest(kago_mc) && !this.drop_flg) { // 合計に300を加算 goukei += 300; this.drop_flg = true; } else if (!this.hitTest(kago_mc) && this.drop_flg) { // 合計から300を減算 goukei -= 300; this.drop_flg = false; } }; // // ---合計ボタンに関して--------- // 合計ボタンをクリックした時の動作定義 goukei_btn.onRelease = function() { // 「goutei_txt」に合計を表示 goukei_txt.text = goukei; }; ================================================= 本当は「金額データ用配列」などを別に用意して， インスタンス名なども機械的に整列させた名前を付ければ， プログラム的にはもっともっとスマートになります。 しかしそういうテクニックを使うと， 色々な概念や関数の使い方などにも話が及んで本体が見えにくくなると思いましたので， １つ１つのムービークリップに対して着実に１つ１つの動作と金額を設定するようなスクリプトにしました。 スクリプトは長いですが， これだと，ミカンが増えた時はどうすれば良いか とか ブドウをイチゴに変えたい場合はどうすれば良いのかなどが分かりやすいと思います。 Flashゲーム講座＆ASサンプル集【当たり判定について】 http://hakuhin.hp.infoseek.co.jp/main/as/hittest … 　
こんばんは。 この方法なら、 http://hfm-kenchan.com/Lesson/contents/index.htm のサンプル集にあったと思います。 沢山あるので、探すのが大変ですが、すごく役に立つと思います。
現物を見るわけにも行きませんから何とも言えませんが。 「A.swf」も「B.swf」もご自身で作成されものであり， なおかつ，同じFlash PlayerのバージョンのSWFにパブリッシュされたものであり， なおかつ，同じ言語設定(ActionScript1.0 とか 2.0 とか 3.0 とか)でパブリッシュされたSWFであるとするなら， たいていの場合は「ターゲットパスのズレ」が原因だと思います。 「A.swf」に「B.swf」がロードされたとたん， 「B.swf」に書いた「_root」は，「A.swf」の「_root」になりますからね。 「A.swf」中の「B.swf」は SWF ではなく，単なる１つのムービークリップ扱いになります。 お持ちの Flash のバージョンがわかりませんが， Flash MX 2004 以上(MX 2004系，8系，CS3，CS4)をお持ちで， なおかつ Flash Player 7 以上の SWF をパブリッシュしても良いものでしたら， 「B.swf」の _root の フレーム1 の最初の行に， this._lockroot = true; と書けば解決するかもしれません。 Flash CS3 ドキュメンテーション ActionScript 2.0 リファレンスガイド _lockroot (MovieClip._lockroot プロパティ) http://livedocs.adobe.com/flash/9.0_jp/main/0000 …
「design2.txt」ファイル をメモ帳などのテキストエディタで開いて， たとえば 「インフォメーション」 のリンク先を変えたいのでしたら &menu1_title=Information&　　/* MENU名・半角英数字のみ(文字数が多いと語尾が見切れます) */ &menu1_guide=インフォメーション&　　/* MENUの簡易ガイド・全角かな漢字16字以内(未記入時は非表示) */ &menu1_link=menu1.htm&　　/* LINK先URLの記述 */ &menu1_win=_blank&　　/* ターゲットWindowの指定（ _self は同一Window、_blank は新規Window）*/ となっている部分の， &menu1_link=menu1.htm&　　/* LINK先URLの記述 */ を &menu1_link=http://www.google.co.jp/&　　/* LINK先URLの記述 */ などに変えれば良いと思います。 ※上の google の URL には， 　おそらく自動でリンクが挿入されて目に見えない文字が入り込んでしまうと思うので 　そのままコピペはできません。 　とにかく URL を変えれば良いだけです。 その他も同じく &menu2_link=menu2.htm& や &menu3_link=menu3.htm& の場所を変えれば良いでしょう。 ただし， Flash Player のセキュリティによって， パソコン内の SWF(Flashファイル) からネット上のページを開いたり何かをロードする場合は， そのプログラムが遮断されると思います。 パソコン内の SWF(Flashファイル) からネット上のページを開いたり何かをロードする実験をする場合は， [グローバルセキュリティ設定] パネル http://www.macromedia.com/support/documentation/ … 上記ページ内のパネルで ダウンロードした素材を解凍したフォルダなどを「常に許可」などの設定にする必要があります。
あのスクリプトでは「画像が目的のところに到着する」ことは一生ありませんよ。 ムービークリップを動かしてムービークリップの座標と目標座標の間を 1/5 ずつ縮めているのです。 仮にムービークリップと目標座標との間隔が 1000px あった場合 １フレーム進む時間毎に随時 　1000 　　↓1/5 縮まる 　800 　　↓1/5 縮まる 　640 　　↓1/5 縮まる 　512 　　↓1/5 縮まる 　409.6 　　↓1/5 縮まる 　327.68 　　↓1/5 縮まる 　262.144 　　↓1/5 縮まる 　209.7152 　　↓1/5 縮まる 　167.77216 　　↓1/5 縮まる 　134.217728 　　↓1/5 縮まる 　107.3741824 　　↓1/5 縮まる 　85.89934592 　　↓1/5 縮まる 　68.71947674 　　↓1/5 縮まる 　54.97558139 　　↓1/5 縮まる 　…略… と言う感じで目標座標に近づき続けるだけです。 したがって「許容範囲」が必要です。 「もし許容範囲に入れば指定座標に移動する」 という部分を付け加えます。 on (rollOver) { // 目標の X 座標を 0 だとします var mokuhyouX:Number = 0; // 目標の Y 座標を 0 だとします var mokuhyouY:Number = 0; // 動かす速さ(割合) を 1/5 だとします var speed:Number = 1/5; // MC に対して1フレーム進む時間毎に随時実行するイベントハンドラメソッドを定義 MC.onEnterFrame = function() { // MC の座標を目標座標に speed ずつ近づける MC._x += (mokuhyouX-MC._x)*speed; MC._y += (mokuhyouY-MC._y)*speed; // ---※以下追加------------------------- // もし MC1 の座標が目標座標 ±1px 以内に近づいたら if (Math.abs(mokuhyouX-MC._x)<=1) { MC._x = 140; MC._y = -250; // そして MC1.onEnterFrame を削除 delete MC.onEnterFrame; } }; } なお， 今回のご質問のムービークリップのインスタンス名は， MC._x=140; MC._y=-250; で MC になっていますから上のスクリプトもそれに合わせました。 もし MC1 のままである場合は スクリプト とともに，実際のインスタンス名はどう付いているのかなども注意してください。
> スクリプトを教えていただけないでしょうか？ Flash 自体がそうですが， Flash Lite 1.0 や 1.1 では， さらにさらにスクリプトなどという安易なものだけでは解決できないことが大半ですよ。 ◎ 方法例 ステージ上に 「Ａ」という画像 を用意してムービークリップに変換します。 そのムービークリップをダブルクリックするなどしてムービークリップ内の編集に入ります。 ムービークリップ内のタイムラインの フレーム2 を選択して， 右クリック→「フレームを挿入」 などで 「Ａ」という画像 を フレーム1 と フレーム2 に存在させるようにします。 　ムービークリップ内のタイムラインの様子 　レイヤー1　筆・・□|●[]| ムービークリップ内のタイムラインの フレーム3 を選択して， 右クリック→「空白キーフレームの挿入」 などで フレーム3 を空白キーフレームにします。 　レイヤー1　筆・・□|●[]|○| そのフレーム3 に 「Ｂ」という画像 を配置します。 　レイヤー1　筆・・□|●[]|●| スクリプトを書くためにレイヤーを１つ追加します。 　レイヤー2　筆・・□|○　 []| 　レイヤー1　筆・・□|●[]|●| その新レイヤーの フレーム1 に次のようなスクリプトを書きます。 ---------------------------------------------------- Ye = fscommand2("GetDateYear"); Mo = fscommand2("GetDateMonth"); Da = fscommand2("GetDateDay"); Ho = fscommand2("GetTimeHours"); Mi = fscommand2("GetTimeMinutes"); if (Ye>=2010 && Mo>=1 && Da>=1 && Ho>=0 && Mi>=0) { gotoAndStop(3); } ---------------------------------------------------- その新レイヤーの フレーム2 を空白キーフレームにして次のようなスクリプトを書きます。 ----------------------------- gotoAndPlay(1); ----------------------------- これで， 指定時刻以上では フレーム3 に行ってストップするため 「Ｂ」という画像 が表示されます。 指定時刻未満では自然に フレーム2 に行きます。 フレーム2 には gotoAndPlay(1); が書いてあるため， 何度も フレーム1 と 2 がグルグルループで実行され， 指定時刻になれば フレーム3 に行ってストップするものができます。 なお，上の フレーム1 のスクリプトは， 「FLASHで決められた時刻にある画像を表示させたい」 という質問に対する回答です。 「2010年1月1日 00時00分に「Ｂ」という画像を表示させたい。」 という質問でしたら， 結局 2010年 に達していてそれ以降であれば 「Ｂ」という画像を表示させれば良いだけなので， 月や日や時や分の取得は不要です。 ムービークリップ内の フレーム1 のスクリプトは， ----------------------------- Ye = fscommand2("GetDateYear"); if (Ye>=2010) { gotoAndStop(3); } ----------------------------- これだけで良いと言うことになります。 (つまり質問に使われた 2010年1月1日 00時00分 は例として良くありません。もっと一般的な例にしないと，回答者にどうとられるかわかりません。)
普通にできますよ。 例えば メインタイムライン の複数あるフレームのうち任意のフレームに 「AAA」 というラベル名を付けておいたとして， 例えば メインタイムライン の フレーム1 などに次のように書いておくのですよね。 ------------------------------------------------ stop(); var a_mc:a_movieclip = new a_movieclip(); var b_mc:b_movieclip = new b_movieclip(); addChild(a_mc); addChild(b_mc); a_mc.x = 50; a_mc.y = 20; b_mc.x = 200; b_mc.y = 20; ------------------------------------------------ それで， シンボルプロパティで 「a_movieclip」 というクラス名を付けたムービークリップの中にボタンを２つ用意して， １つには「my_btn1」，もう１つには「my_btn2」というインスタンス名を付けておきます。 その「a_movieclip」 というクラス名を付けたムービークリップのタイムラインに 普通に次のように書けば難なく動作しましたよ。 ------------------------------------------------------------------- // my_btn1 にリスナーオブジェクトを登録(CLICKイベント, goFrameを実行) my_btn1.addEventListener(MouseEvent.CLICK, goFrame); // ユーザ定義関数 goFrame を定義 function goFrame(evt:MouseEvent):void { MovieClip(root).gotoAndPlay("AAA"); } // my_btn2 にリスナーオブジェクトを登録(CLICKイベント, tellB_mcを実行) my_btn2.addEventListener(MouseEvent.CLICK, tellB_mc); // ユーザ定義関数 tellB_mc を定義 function tellB_mc(evt:MouseEvent):void { MovieClip(root).b_mc.x+=20; MovieClip(root).b_mc.alpha-=0.2; } -------------------------------------------------------------------
CS4 だと書かれていらしゃるそのまんまの アレ があるじゃないですか。 あのすごく笑える機能。 [描画エフェクト] の [つる模様]！ 私は面白くて２時間ぐらいこれで遊んでましたよ。 [選択ツール(矢印)] や [バケツツール] などが並んだ [ツール] パネルの中に [パターン描画ツール] という，鉛筆にストラップが付いたようなボタンがありますから， それをクリックした状態で [プロパティインスペクタ] より [▽描画エフェクト] の欄で [つる模様 |▼] を選択して， ステージ上 を チョン とクリックすれば， つるが伸びる伸びるぅ ～～w～.,.,W～w～~~～～ww.~～,.,w～。 [詳細オプション] の欄で [□ パターンをアニメーション化] にチェックを入れておけば， その様子が各フレームに自動描画されてつる模様が伸びるアニメーションも作成できます(↓図)。 その他，各色々な設定すると，つるの伸び方や色や葉や花もカスタマイズできますよ。 つる模様を発生させる同じレイヤーにあらかじめ障害物を描いておくと， その障害物を避けるようにつるが伸びます。 もし， この [描画エフェクト] の [つる模様] をしたことがなければ是非やってみてください。 この機能，いったい何に使えるのだかよくわかりませんが， 私は面白くて笑ってしまいました。 Flash の機能で「笑えた」のは初めてかもしれません。 （その他，ボーンツールも笑えます。こちらは発展性がかなりありそうです。） ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > これをＡＳ３で再現しようとした場合どのような方法になるのでしょうか？ > 感覚的には「短い直線を何個も繋げる」という方法で合っていますか？（lineTo？） > でも上記の方法だと、線が引かれている過程がありません。 lineTo でできると思いますよ。 「線が引かれている過程がない」という意味が今ひとつわかりませんが， １フレーム進む時間毎にちょっとずつ lineTo すれば良いと思います。 ただし， その線の方程式もしくは座標データなどははどうするのかは知りませんが。 すっごい適当に作ってみた例↓(メインタイムラインのフレーム1に記入) ---------------------------------------- // 線を伸ばすスタート地点を設定 var startX:Number=0; var startY:Number=stage.stageHeight/2; // 線のスタイルを設定 this.graphics.lineStyle(1, 0x000000); // 線の描画開始 this.graphics.moveTo(startX, startY); // ENTER_FRAME イベントリスナーを登録(growLineを実行) this.addEventListener(Event.ENTER_FRAME,growLine); // 変数 i の初期化 var i:int=0; // ユーザ定義関数 growLine を定義 function growLine(evt:Event):void { i+=2; if (i<=Math.floor(stage.stageWidth/2)) { this.graphics.lineTo(startX+i, startY+100*Math.sin(i*Math.PI/50)); } else if (i<=Math.floor(stage.stageWidth)) { this.graphics.lineTo(startX+i, startY+Math.random()*50); } else { this.removeEventListener(Event.ENTER_FRAME, growLine); } } ---------------------------------------- 上のスクリプトをフレームにコピペして， 即「制御」→「ムービープレビュー」で見ることができると思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ あと， モーションガイド 付 クラシックトゥイーン でムービークリップを動かして， そのムービークリップの座標に Event.ENTER_FRAME で moveTo()　lineTo()　しても良いですね。 当然， モーショントゥイーン(CS4からの新モーショントゥイーン)でムービークリップを動かして， そのムービークリップの座標に同じく Event.ENTER_FRAME で moveTo()　lineTo()　しても良いと思いますが。 これらの方法だと，難しい方程式や面倒な座標データなどを用意せずに済みます。 しかし，複数の線が込み入るとこれでも難しいかも...ですが。
方法や書き方(使い方)は色々ありますが， 一応次のような感じにするのが Flash では多く使われます。 ボタンに書くスクリプト例 on (rollOver) { // 目標の X 座標を 0 だとします var mokuhyouX:Number = 0; // 目標の Y 座標を 0 だとします var mokuhyouY:Number = 0; // 動かす速さ(割合) を 1/5 だとします var speed:Number = 1/5; // MC1に対して1フレーム進む時間毎に随時実行するイベントハンドラメソッドを定義 MC1.onEnterFrame = function() { // MC1 の座標を目標座標に speed ずつ近づける MC1._x += (mokuhyouX-MC1._x)*speed; MC1._y += (mokuhyouY-MC1._y)*speed; }; } 　
ユーザ環境（設定）に依存しますが※、 CookieとJavaScriptと組み合わればできることはできます。 ただし、ここで解説できるほど簡単ではないので、 「Cookie FLASH ActionScript」などで検索してみてください。 ※CookieとJavaScriptの使用を拒否しているユーザには無効になります。
No1です。書いた答えは的外れでした。大変失礼を・・。 BlurFiltanさんが動作を修正して下さっていますので、置き換える部分だけ示しますね。 ---------------------（以下、ソースの置換部分）---------- //Date オブジェクトを生成 date_obj = new Date(); （中略） //1970年1月1日から今日までの時間をミリ秒で取得 todayUTC = Date.UTC( yy , mm , dd , hour , min , sec );
原因はたくさんありすぎるので特定できません。 とりあえず「その通り」をしてみるのがスタートラインではないでしょうか？ 書かれていらっしゃる参考にされたページのものは，cgi-bin にありますよ。 一方，質問者さんが用意されたページは cgi-bin 内のページではありません。 「無料ホームページ作成 レンタルサーバー - infoseek isweb」 　　→サーバーの仕様に関する情報 http://isweb.www.infoseek.co.jp/info/iw_spec.html ～引用～ > ※ cgiをご利用になる場合は、 > cgi-bin というディレクトリを領域内に新規作成してください。 この件ではありませんが， さらにその下にも続きます。 > CGIに関して以下のような制限を設けています。 > 状況 結果 > infoseek.co.jpに作成したあなたのホームページからCGIを呼び出した場合 正常に表示されます > URLを直接入力した場合 正常に表示されます > infoseek.co.jp以外のホームページからCGIを呼び出した場合 403 Forbidden（アクセス権限がありません） > ※iswebベーシックの場合は正常に表示されます > ブックマークを利用した場合 古いブラウザでは403 Forbiddenと出る場合があります 「infoseek.co.jp以外のホームページからCGIを呼び出した場合 403 Forbidden（アクセス権限がありません）」です。 つまりこのページからリンクしても見えません。 ルールや規則にはちゃんと目を通しましょう。
お持ちのFlashのバージョンやActionScriptのバージョンがわかりませんので何とも言えませんが， 次のページなどを参考にされてみてはいかがかと思います。 無限にスクロールするメニュー　FLASHRAVE - FLASH 講座 - http://flashrave.org/anima/infinity_scroll/ フラッシュサンプル - ナビゲーション系 http://www.condo.fromc.jp/flash/memo/index.html 　→下から８つめ 　　■画像の無限スクロール 　　　ボタンで、画像を無限スクロールさせるサンプル。 左右に無限スクロールする写真をクリックして停止させる方法？ http://hfm-kenchan.com/Lesson/log_qa/D0803221.htm (質問者の方の提示されたページも参照のこと)
ランダムに並ぶ画像が１つずつであったとします。 たとえば A1.jpg，A2.jpg，A3.jpg，A4.jpg，A5.jpg があったとして， 　a_mc1 には A3.jpg 　a_mc2 には A2.jpg 　a_mc3 には A5.jpg 　a_mc4 には A1.jpg 　a_mc5 には A4.jpg という感じで a_mc1～5 にランダムな JPEG がそれぞれ表示されたとします。 A1.jpg と対にしたいJPEGには B1.jpg A2.jpg と対にしたいJPEGには B2.jpg A3.jpg と対にしたいJPEGには B3.jpg A4.jpg と対にしたいJPEGには B4.jpg A5.jpg と対にしたいJPEGには B5.jpg と命名しておけば， 　a_mc1 には A3.jpg … b_mc1 には B3.jpg 　a_mc2 には A2.jpg … b_mc2 には B2.jpg 　a_mc3 には A5.jpg … b_mc3 には B5.jpg 　a_mc4 には A1.jpg … b_mc4 には B1.jpg 　a_mc5 には A4.jpg … b_mc5 には B4.jpg と表示させることが可能ですよね。 つまりランダムが１つ得られれば， それと連動する動作はいくらでも可能だということになります。 「どうすればうまく行くのか知りたい」ではなく 「どううまく行かせるかを考えよう」という方向で進めば良いと思います。 「鳴かぬなら鳴かせてみせようホトトギス」です。
＃１です。 補足を拝見してだいたいのことはわかりました。 書かれていらっしゃる感じくらいまで決まっていると、サンプル例回答が書きやすいです。 次のような感じにするのが一つの例です。 ◎ファイル構造 　任意のフォルダ 　　　　├ご質問のSWF 　　　　├data.txt(画像やリンク先を登録しておくデータ) 　　　　├bigAAA.jpg (大きい画像) 　　　　├bigBBB.jpg (　〃　) 　　　　├bigCCC.jpg (　〃　) 　　　　├bigDDD.jpg (　〃　) 　　　　├bigEEE.jpg (　〃　) 　　　　├icoAAA.jpg (アイコン用画像) 　　　　├icoBBB.jpg (　〃　) 　　　　├icoCCC.jpg (　〃　) 　　　　├icoDDD.jpg (　〃　) 　　　　└icoEEE.jpg (　〃　) 説明やデータを簡単にするために 全てのファイルをを平置きしているだけです。 ◎「data.txt」内のデータ例 ----------------------------------- &data_num=5& &data0=icoAAA.jpg,bigAAA.jpg,AAA.html& &data1=icoBBB.jpg,bigBBB.jpg,BBB.html& &data2=icoCCC.jpg,bigCCC.jpg,CCC.html& &data3=icoDDD.jpg,bigDDD.jpg,DDD.html& &data4=icoEEE.jpg,bigEEE.jpg,EEE.html& ----------------------------------- data_num=5　はデータの個数です。 この場合は data0～4 の５つがあるので 5 を書いています。 各データ内の「アイコン画像ファイル名」、「大きい画像ファイル名」、「リンク先URL」データは「,(カンマ)」区切りです。 ◎「ご質問のSWF」を作成するためのFLAの構造例 　_root 　　　├big_mc (大きい画像ロード用ムービークリップ) 　　　├ico_mc0 (アイコン画像ロード用ムービークリップ) 　　　├ico_mc1 (　〃　) 　　　└ico_mc2 (　〃　) ◎「ご質問のSWF」を作成するためのFLAのフレーム1のスクリプト /////////////////////////////////////////////////////////////////// // アイコン用ムービークリップの個数を登録 (※個数によって変える) var ico_num:Number = 3; // ランダム用配列を作成 var randArr:Array = new Array(); // アイコン用ムービークリップの個数分ループ for (var i:Number = 0; i<ico_num; i++) { // 「ico_mc0～?」に対応する変数に各固有の数値を代入 this["ico_mc"+i+"_n"] = i; } // アイコン画像ロード監視用インスタンス「myOBJ」を作成 var myOBJ:Object = new Object(); // MovieClipLoaderクラスのインスタンス「myMCL」を作成 var myMCL:MovieClipLoader = new MovieClipLoader(); // アイコン用画像ロード完了時の動作を定義 myOBJ.onLoadInit = function(Target:MovieClip):Void { // ロードが完了したムービークリップに onRollOver を定義 Target.onRollOver = function():Void { big_mc.loadMovie(myLV["data"+randArr[_root[this._name+"_n"]]].split(",")[1]); }; // ロードが完了したムービークリップに onRelease を定義 Target.onRelease = function():Void { getURL(myLV["data"+randArr[_root[this._name+"_n"]]].split(",")[2]); }; }; // 「myMCL」のリスナーとして「myOBJ」を登録 myMCL.addListener(myOBJ); // LoadVarsクラスのインスタンス「myLV」の作成 var myLV:LoadVars = new LoadVars(); // 外部テキスト「data.txt」ロード完了時の動作を定義 myLV.onLoad = function(Seikou:Boolean):Void { // ロードに成功すれば if (Seikou) { // データの個数分ループ for (var i:Number = 0; i<Number(myLV.data_num); i++) { // ランダム用配列に 0～? の数を代入 randArr.push(i); } // 変数 i にデータの個数を代入 var i:Number = Number(myLV.data_num); while (i--) { var j:Number = Math.floor(Math.random()*(i+1)); // 変数 temp にランダムに選択した要素を保存しておく var temp:Number = randArr[i]; // 要素を入れ替える randArr[i] = randArr[j]; randArr[j] = temp; } //--- // アイコン用ムービークリップの個数分ループ for (i=0; i<ico_num; i++) { // 「ico_mc0～?」を対称として data? の 1 つめのデータをロード myMCL.loadClip(myLV["data"+randArr[i]].split(",")[0], "ico_mc"+i); } } }; // 外部テキスト「data.txt」をロード myLV.load("data.txt"); /////////////////////////////////////////////////////////////////// ※ Flash MX 2004 以上用 　　Flash Player7 以上のSWFをパブリッシュする必要あり ※ スクリプトの記述順とプログラムの実行順は違います。 　　実行順は＃１で書いた「◎手動でムービークリップを作成する場合」の順です。 　　混乱しないように注意してください。 　　例えば最後に myLV.load("data.txt"); でテキストをロードしていますが 　　これによって最後にテキストがロードされるわけではありません。 　　他の関数や変数を定義し終わった段階でロードを開始させたいので 　　定義し終わった後、つまり最後に書いているのです。 　　連鎖するロード動作はここから始まります。 スクリプト中の [] は配列アクセス演算子と言います。 これは ＃１ の参考URLに入れていませんでした。 「ドットシンタックスと配列アクセス演算子 - Flash テクニカルノート」 http://www.fumiononaka.com/TechNotes/Flash/FN050 … あと split() は、 文字列を引数で区切って配列を返すという Stringクラス のメソッドです。 AAA = "あいう＠えお＠かき＠くけこ" BBB = AAA.split("@"); とすると， [あいう, えお, かき, くけこ] という要素の配列 BBB が作成されます。
メニューバーの [ウィンドウ]→[ツールバー]→[編集バー]にチェックを入れる で出てきます。
「パブリッシュ設定」で、”デバイスサウンドの書き出し”の項目にチェックが入っていませんでしょうか？ 「ファイル」メニュー→「パブリッシュ設定」を開き、” Flash ”のタブをクリックしてください。swf ファイルの書き出しに関する設定画面になります。 下の方にサウンドに関する設定があり、その１つに”デバイスサウンドの書き出し”という項目があります。 チェックが入っているようでしたら、再度クリックしてチェックを外してみてください。 デバイスサウンドは、主に携帯電話向けの作品を作る時に使います。 携帯電話向けの作品では、Flash では扱えない、携帯電話で使われている独自の形式のサウンドを使うことがあります。 このような作品を制作する時には、Flash で扱えるサウンドファイルで仮にサウンドを入れておき、パブリッシュする時に実際に使う携帯電話のサウンドファイルに置き換えます。 置き換えるサウンドとして指定するサウンドファイルが、デバイスサウンドと呼ばれるものです。 パソコンで見る作品を作る時には使わない機能ですので、先述の項目にはチェックを入れずにパブリッシュします。
サイズ指定をミリではなくピクセルにしてください
＃１ です。 私絡みですが，この辺を参考にしてみてください。 「FLVファイルをホームページ上で再生したい。」 http://oshiete1.watch.impress.co.jp/qa4395317.html 「FLVを再生するためのSWFファイルを作れるフリーソフトありますか？」 http://soudan1.biglobe.ne.jp/qa4103111.html > それとも、flvだと、画質は、皆、YouTubeのような感じなのでしょうか？？ 知りませんよそんなことは。 お金やソフトや設定によっていくらでも変えられます。 Google検索「FLV H264」 http://www.google.co.jp/search?hl=ja&q=FLV+H264& … 「H.264やばい、マジやばい。Adobeサイトで動画を見られるから今すぐ見て！：CodeZine」 http://codezine.jp/article/detail/1956?p=1
Flash のバージョンも， ActionScript のバージョンも， パブリッシュする FlashPlayer のバージョンも書かれていらっしゃいませんね...。 > ドラッグしたときに「ドラッグ中・・・」の文字が点滅するように 点滅ができないのでしょうか？ それとも 表示すらできないのでしょうか？ もし， 表示すらできないのでしたら， まずは表示させることをしてみられることをお勧めします。 もし， 表示させることができたのでしたら， どうやって表示させたのか書いてくださらないとわかりませんよ。 ActionScriptでドラッグ＆ドロップして動くウィンドウの中に たとえばムービークリップでも作成して， たとえばそのムービークリップの中の フレーム1～10 に何も置かないようにして， たとえばそのムービークリップの中の フレーム11～20 に「ドラッグ中・・・」の文字を置いて， ドラッグ＆ドロップして動くウィンドウをプレスしたときフラグでも立てて， マウスが動いていてなおかつフラグが立っているときのみ「ドラッグ中・・・」ムービークリップを play() させて， ドラッグ＆ドロップして動くウィンドウをプレスしたときフラグを倒して「ドラッグ中・・・」ムービークリップを gotoAndStop(1) させるとか， そういう方法も１つの手段だと思います。 play() と gotoAndStop(1) は ActionScript1.0～3.0 で共通ですから書けるだけです。 これ以上は書けません。
No. 1です。 他の、赤外線送信できるFLASH等も、リンクタグでしたか？ オブジェクトタグを利用しているなら、そのまま真似してみる手もありますが。 もし、FLASH作成段階でcopyrightが埋め込まれてしまっているとしたら、FLASH系の質問とした方が良いかもしれません。
最終フレームのスクリプトのことですね。 ------------------------------------------------ //問題に正解していれば（変数の値がtrueなら、スコアに1点足す for (i=1; i<=nQuestions; i++) { if (this["fQuestion"+i] == true) { nScore++; } } //最後に数字に「問」の文字を足す nScore += "問" ------------------------------------------------ 　　　↓変更↓ ------------------------------------------------ //問題に正解していれば（変数の値がtrueなら、スコアに1点足す for (i=1; i<=nQuestions; i++) { if (eval("fQuestion" add i) == true) { nScore++; } } //最後に数字に「問」の文字を足す nScore = nScore add "問"; ------------------------------------------------ です。 また， 間違いではありませんが， if (this["fQuestion"+i] == true) という回りくどい書き方は普通しません。 だいたい if (this["fQuestion"+i]) のように書きます。 したがって， if (eval("fQuestion" add i) == true) の部分も if (eval("fQuestion" add i)) のように書くのが普通です。 [] は配列アクセス演算子です。これは Flash Player 5 以上で使えます。 Flash Player 4（Flash Lite 1.x） では eval関数 を使います。 また， Flash Player 4（Flash Lite 1.x） では， 数値加算演算子「+」と，文字列加算演算子「add」は区別する必要があります。 Excel などの 「+」 と 「&」 の違いと同じです。
********** PHPのコード ********** <?php //Flashからの引数 $money = $_POST["money"]; $syohin = $_POST["syohin"]; $a=100; $b=200; print("a=".$a."&b=".$b); ?> *********************************** ********** AS2.0のコード ********** var lv = new LoadVars(); lv.onLoad = function(success:Boolean){ //PHPとの通信完了後の処理 if(success){ trace("接続成功"); //----- 結果取得 -----// trace("a=" + this.a); trace("b=" + this.b); }else{ trace("接続失敗"); } }; //phpに渡したい値（あれば） lv.money = 200; lv.syohin = "りんご"; //PHPと通信 lv.sendAndLoad("http://アドレス/ファイル名.php", lv); *********************************** このようにしてFlashからPHP、PHPからFlashに値を渡します。 PHPは単に値を出力しているだけです。 ですのでブラウザでアクセスすると"a=100&b=200"と表示されます。 複数値を渡したい場合"&"で区切らないとだめです。
onRelease などのイベントハンドラに登録する関数の中でターゲットパスを省略して指定した変数や関数・インスタンスは、登録する関数の持ち主のものと見なされます。 ご提示のスクリプトが仮にメインのタイムラインに記述されているとすると、onRelease = function 内にある変数 i や j は、この関数が定義されているメインのタイムライン、つまり _root のものと判断されます。 前者のスクリプトですと、for ループで btn1 ～ btn20 までの onRelease イベントハンドラに関数が登録され、ループ終了時には i の値は 21 になっています。 ボタンをクリックした時に呼び出される関数はいずれも、ループカウンタとして使った i の値を見て loadMovie を実行するようになっているため、どのボタンをクリックしても loadmc21.swf を読み込もうとしてしまいます。 ボタンとファイルに”共通の名前＋通し番号”で名前を付け、対応する番号のファイルを読み込む方法はいろいろあります。 簡単なところで、各ボタンにそれぞれ変数を作ってボタンごとの番号を記録しておき、この番号を見ながらファイルを読み込む方法はいかがでしょう。 スクリプトにしますと、次のようになります。 このスクリプトは、ボタンを配置したタイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /*******************************************************/ 　for( i = 1 ; i <= 20 ; i++ ) 　{ 　　//ボタンの番号を各ボタンに記録 　　this[ "btn" + i ].no = i; 　　//クリック時、番号に応じたswfファイルを読み込む 　　this[ "btn" + i ].onRelease = function() 　　{ 　　　_root.screan.loadMovie( "loadmc" + this.no + "swf" ); 　　}; 　} /*******************************************************/ onRelease = function の中で 　this.no = i; と書くと、結果的にはループ終了時の i の値を変数に記録することになってしまうので意味がありません。 ループ中の i の値を記録するには、onRelease = function の外で変数を作り、その時の i の値を保存します。 イベントハンドラに登録される関数の中での this は、イベントハンドラの持ち主を指します。 上記の例ですと、onRelease = function 内の this は、それぞれのボタン（ btn1 ～ btn20 ）を指します。 従って、this.no で、先ほど各ボタンに保存しておいた i の値であるボタンの番号を取得できます。 this は”自分自身”を指す表現ですが、使う場所によって”自分自身”を誰と考えるかが変わってしまうというクセモノです。 ActionScript では自分自身を指すターゲットパスを省略できますけれど、省略した時と this が指す対象が違う場合もあります。 this を付けても付けなくても同じ場合もあれば、this がないと上手くいかないもの、逆に this を付けたために正確に対象を指定できなくなる場合もありますので、ご注意ください。 ---------------------------------------------------------- 上記のスクリプトは、btn1 ～ btn20 がボタンシンボルのインスタンスでも動きます。 しかし、ボタンシンボルはタイムラインがなく１つの階層と見なされないので、本来は変数・関数・他のムービークリップ等のインスタンスを子として持つことができません。 スクリプトの書き方でボタンシンボルが変数などを持っているように見せかけることはできるものの、厳密に言うなら、変数を内部に持たせたい場合はボタンをムービークリップシンボルで作るべきなのかもしれません。 今回は番号を記録する方法を使いましたが、ボタンの名前から番号を抽出して読み込む方法もあります。 機会がありましたら、こちらも研究してみてください。
wheelHandler と言うのは単なるユーザ定義関数名だと思います。 関数の名前は何でも良いですが， 結局その任意のユーザ定義関数の中でムービークリップを gotoAndStop() させれば良いのだと思います。 ムービークリップ my_mc がステージ上にあった場合， そのムービークリップが存在するタイムラインのフレームに書くスクリプト例 ----------------------------------- // ムービークリップ my_mc の再生を停止 my_mc.stop(); // ステージにイベントリスナーを登録 // (マウスホイールが動いた時，関数wheelHandlerを実行) stage.addEventListener(MouseEvent.MOUSE_WHEEL, wheelHandler); // ユーザ定義関数wheelHandlerを定義 function wheelHandler(evt:MouseEvent):void { // ホイールの１目盛り回転を 1 または -1 に変換 var wheel_r:int=evt.delta/Math.abs(evt.delta); // my_mcのフレームをホイール１目盛り回転数分進めて停止 my_mc.gotoAndStop(my_mc.currentFrame+wheel_r); } ----------------------------------- Event.delta で得られる数値は，各ユーザのOS(Windows)の設定に依存します。 私の場合 3 や -3 が得られますが， これは [コントロールパネル] の [マウスのプロパティ] で [ホイール] の [ホイールの１目盛りでスクロールする量] の [１度にスクロールする(N)] を 3 に設定してあるからです。 これは人によって違います。 これを 1 や -1 に統一するために 　// ホイールの１目盛り回転を 1 または -1 に変換 　var wheel_r:int=evt.delta/Math.abs(evt.delta); というワンクッションを入れています。 --- ※注意 --------- MouseEvent.MOUSE_WHEEL での動作は 補助的なものとして使うのは良いですがあまり過信しない方が良いです。 （現にFlashで使われること(見かけること)は殆どありません。） Google検索 「MOUSE_WHEEL Mac」 http://www.google.co.jp/search?hl=ja&q=MOUSE_WHE … Google検索 「onMouseWheel Mac」 http://www.google.co.jp/search?hl=ja&q=onMouseWh … その他， マウスホイール自体が存在しないオーソドックスなマウスを使われている人もいます。 また， マウスも多機能化していてWindowsであっても全てのホイールに対応しているかどうかは知りません。 TPOにもよるので何とも言えませんが， ホイールのみに頼るのではなく場合によっては スライドバーみたいなのを用意する方が無難かもしれません。
NiVEなどはどうでしょうか? wiki http://nicoae.if.land.to/index.php?NiVE%20Wiki フリーのソフトでMAD制作などでも使われているようです。 特徴はプラグインを入れることによりさまざまな機能をつ以下することができます。静止画をエフェクトなしで動かすだけであれば本体のみでも十分に使えるはずです。
おそらく、あなたがダウンロードしたPapervision3Dと サンプル（http://www.thinkit.co.jp/images/article/91/3/913 …） で使われているPapervision3Dのバージョンが違います。 そのサンプルは古いバージョンのPapervision3Dが使われています。 最新のPapervision3Dとは大幅に変更されています。 最新のPapervision3D（Revision 858）では Scene3Dは引数なしのコンストラクタしか定義されていません。 OldCubeはなく、Cubeしかありません。 そのサンプルがどういうものか知りませんが、Cubeを表示するだけのものなら、以下のようにすればできます。 package { import flash.display.*; import flash.events.*; //Papervision3Dで使うクラスをインポート import org.papervision3d.cameras.*; import org.papervision3d.materials.*; import org.papervision3d.materials.utils.*; import org.papervision3d.objects.primitives.*; import org.papervision3d.render.*; import org.papervision3d.scenes.*; import org.papervision3d.view.*; //メインクラス public class HelloCube extends Sprite { private var scene:Scene3D;//シーン（3D空間） private var camera:Camera3D;//カメラ private var viewport:Viewport3D;//ビューポート private var renderer:BasicRenderEngine//描画エンジン private var cube:Cube//立方体 public function HelloCube() { //シーン（3D空間）の生成 scene = new Scene3D(); //カメラの生成 camera = new Camera3D(); //カメラの設定 camera.x = camera.y = 0; camera.z = -1000; camera.focus = 100;//focus×zoom分、オブジェクトから離れている場合 camera.zoom = 10;//画面に同じ大きさで描画される //ビューポートの生成 viewport = new Viewport3D(600, 400); //画面にビューポートを追加 this.addChild(viewport); //描画エンジンの生成 renderer = new BasicRenderEngine(); //Cube（立方体）の生成 //マテリアルリストの生成 var materialsList:MaterialsList = new MaterialsList(); materialsList.addMaterial(new ColorMaterial(0xFF0000),"front"); materialsList.addMaterial(new ColorMaterial(0x00FF00),"back"); materialsList.addMaterial(new ColorMaterial(0x0000FF),"right"); materialsList.addMaterial(new ColorMaterial(0xFFFF00),"left"); materialsList.addMaterial(new ColorMaterial(0xFF00FF),"top"); materialsList.addMaterial(new ColorMaterial(0x00FFFF),"bottom"); //マテリアルリストを元にCubeを生成 cube = new Cube(materialsList,100,100,100,2,2,2); //Cubeをsceneに追加 scene.addChild(cube); //毎フレームの描画処理メソッドを登録 stage.addEventListener(Event.ENTER_FRAME, drawPapervision3d); } //毎フレームの描画 private function drawPapervision3d(e:Event):void { //Cubeを回転 cube.rotationX += 1; cube.rotationY += 1; cube.rotationZ += 1; //cameraから見たsceneをviewportに描画 renderer.renderScene(scene, camera, viewport); } } }
> 子のASが複雑であり，親にどう設定していいのかわかりません． こちらはもっとわかりませんよ。 現物が手元にないわけですからどう設定するも何もわかりません。 回答者は超能力者ではありませんよ(普通は)。 　子_1.swf を単独で開いた場合， 　その中にロードされる孫swfが正常にコントロールできるのだけど， 　子_1.swf を親swfにロードした場合， 　その中にロードされる孫swfが正常にコントロールできない。 ということでしたら， 子_1.swf のフレーム1の最初にでも this._lockroot = true; という１行を加えてみてはいかがでしょうか。 「Flash CS3 ドキュメンテーション _lockroot の使用 」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … これでうまく行くものかどうかは知りませんが(超能力者ではないので)。
ボタンには「プレスしたままの状態で停止」などという指示はできません。 ボタンではなくスプライトを使うべきです。 例えば スプライト内のフレーム1のみにカレンダーを配置します。 スプライト内のフレーム2以降に「今は１月だ」というテキストを配置します。 そして スプライト内のフレーム1を選択した状態でアクションレイヤーを挿入し そのアクションレイヤーのフレーム1に次のようなスクリプトを書けば良いと思います。 ------------------------------------------- // このタイムラインをこのフレームで再生停止 this.stop(); // このスプライトをプレス時の動作を定義 this.onPress = function(){ // このタイムラインを再生開始 this.play(); }; ------------------------------------------- （図を参考に↓） その他 フレームで50フレーム待つのではなく スクリプトである一定時間待つ方法もあります。 Suzuka 基礎・基本 セルフタイマー(setInterval setTimeout) http://suzupara.iinaa.net/kiso311.html あと ボタンをボタンで作成するのではなく ボタンをスプライトで作成する例です。 Suzuka 基礎・基本 スプライト製ボタン http://suzupara.iinaa.net/kiso151.html 最近見かけるサイトでは ボタンはスプライト(ムービークリップ)で作成するものがかなり多くなっています。 やはりボタン製のボタンは融通が利かないと思われる方が多いからでしょう。
> ボタンを囲むように四角を描きボタン部分をくり抜けないのです。 意味がしばらく全くわかりませんでしたが， 「単純なお絵描き」のご質問でしょうか。 ボタンを囲むように四角を描きボタン部分をくり抜くには， 普通にそう描けば良いと思います。 方法はたくさんありますが３例ほど書いておきます。 ・□の中に□を描いてその間をバケツツールで塗る ・■の中に□を描いて□の中を切り取る ・■の中に違う色の■を描いて中の■を切り取る 文字だけではわかりにくいので，図を用意しました↓。 お絵描きは Flash の基本です。 これができないとボタンすら描けません。 次のサイトなどを参考に Flash で色々お絵描きしてみることをお勧めします。 マウスでお絵描き http://f-site.org/articles/2002/06/29000000.html ひっぱってつまんでほいほいほい♪ http://f-site.org/articles/2002/01/01000000.html アクアなボタンを作ってみよう！ http://f-site.org/articles/2002/04/01000000.html WINDOWSっぽいボタンを作る http://f-site.org/articles/2002/04/09000000.html 「Vectorkid.com - Tutorials - illustrating, flash, vector, art, tutorials, drawing, effects, 3d」 http://www.vectorkid.com/tutorials.html
＞＞参考書をみて打ってみたのですが、エラーになってないのに表示されませんでした。 作った描画オブジェクトは、ステージ上に追加表示させていますか？ addCHild( rect ); ＞＞graphics.beginFill();の（）の中に関数は使えるのでしょうか？ （）の中に関数の指定はできません。 その前に、色の指定をしてやるしかないと思います。
問題が２点、あります。 ActionScript では、外部から値や画像などのファイルを読み込む場合、「○○を読み込め」という命令を出したら、読み込みが終わるまで待たずに、すぐに次の命令が実行されます。 しかし、どんなに単純なテキストファイルであっても、たとえ通信回線を介さないローカル環境であったとしても、ファイルを開き、値を読み込み、内容を解析してファイルを閉じる処理がほんの一瞬で終了することは、まずあり得ません。 読み込みが完了する前に読み込まれるはずのものを利用しようとすると、思わぬ不具合の原因になります。 簡単に言いますと、loadVariables 等の読み込みの命令のすぐ後に、読み込まれるはずの変数などを利用するスクリプトを書いても、正常に動作しない場合の方が多いということです。 ですから、ActionScript で何かを読み込む場合は必ず、”読み込みが完了した後で読み込んだものを利用する”という形でスクリプトを書きます。 ご提示のスクリプトですと、読み込みの完了を待つ部分が抜けているようです。 テキストファイルに 　変数名=値&変数名=値 という形で記述して読み込むと、読み込みが完了した後でテキストファイルに書かれていた名前の変数が作られて、指定の値が格納されます。 スクリプトで予め同名の変数が作られている場合を除き、読み込みが終わる前までは、その名前の変数は存在していません。 存在しない変数の中身を見ると、” undefined ”（未定義）という値が入っているものと見なされます。 つまり、ご提示のスクリプトですと、if 文の条件にある変数 g01.w03 には undefined という値が入っているものと見なされた状態で、条件の判断が行われてしまいます。 もう１つの問題点は、g01.w03 の値を判別する部分です。 外部テキストから読み込まれた値は、文字列になります。 変数にある文字列が入っているかどうかを判別するには、 　if( g01.w03 == "akairo" ) ↑このように、判別したい文字列を " " で囲みます。 　if( g01.w03 == akairo ) と書くと、g01.w03 と変数 akairo に入っている値が同じであるかどうか、という条件になります。 おそらく akairo という名前の変数は存在しておらず、変数 akairo の値が未定義＝ undefined になっているかと思われます。 すると、 　if( g01.w03 == akairo ) ↑この if 文は 　if( g01.w03 == undefined ) と同じ意味になります。 読み込みの完了を待たずに g01.w03 の値を見ようとすると、g01.w03 がまだ存在していないために、g01.w03 の値は、テキストファイルに何が書かれていたかに関係なく undefined と見なされます。 変数 akairo も存在しておらず undefined だとすれば、ご提示のスクリプトですと、w03 の内容が何であれ、必ず if 文の条件が成立してしまいます。 そのため、テキストファイルの w03 の部分に” akairo ”以外の文字を指定しても、常に aka のムービークリップが表示されることになります。 ----------------------------------------------------------- 読み込みの完了を待つ方法はいろいろありますが、loadVariables で読み込む時は、読み込みが終わった時に発生する” data ”というイベントを利用して読み込みの完了を検出することができます。 ステージにムービークリップシンボルのインスタンス ao ・ aka と g01 があり、外部テキストファイル test.txt の内容は 　w01=ワード01&w02=ワード02&w03=akairo とします。 test.txt を読み込み、変数 w03 の値が” akairo ”の時は aka のムービークリップを、それ以外の時は ao のムービークリップを表示するスクリプトは、大体、次のようになります。 このスクリプトは、メインのタイムラインに設定してください。 FlashPlayer 6 以降、ActionScript 1.0 または 2.0 で動作します。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください。このまま使うと、シンタックスエラーになります） /*****************************************************/ 　//タイムラインを止めておく 　this.stop(); 　//aoとakaのムービークリップをとりあえず非表示にしておく 　ao._visible = false; 　aka._visible = false; 　//読み込みが終了した時の処理 　g01.onData = function() 　{ 　　//色の指定を判別 　　//変数w03の内容が”akairo”ならakaのムービークリップを表示 　　if( g01.w03 == "akairo" ) 　　{ 　　　aka._visible = true; 　　　ao._visible = false; 　　} 　　//それ以外の時はaoのムービークリップを表示 　　else 　　{ 　　　ao._visible = true; 　　　aka._visible = false; 　　} 　}; 　//Shift-JISで読み込む 　System.useCodepage = true; 　g01.loadVariables( "test.txt" ); /*****************************************************/ ActionScript では、テキストファイルだけでなく、画像や swf ファイル、CGI といってサーバーで実行されるプログラムが生成する値なども読み込んで利用することができます。 何を読み込む場合でも、読み込みの完了を待ってから読み込んだものを利用することが大切です。 読み込みにかかる時間は読み込むものや回線・サーバーの都合などによって変動するため、ActionScript には、読み込みが終わった時に合わせてスクリプトを実行できる仕組みが用意されています。 読み込み完了を待つ処理は、どんな命令を使って読み込みを実行したかによっても作り方が違います。 上記のスクリプトでは、読み込みにムービークリップが持っている loadVariables 命令を使い、onData = function という形式で読み込みの完了を待って ao または aka のムービークリップを表示する処理を作っています。 ここでは詳しく触れませんが。 ActionScript では、変数や関数、ムービークリップ・ボタンなどのインスタンスには全て、持ち主がいるものと考えます。 今回の件ですと、テキストファイルから読み込んだ w01 ～ w03 の変数はムービークリップ g01 のもの、g01 と ao ・ aka のムービークリップはメインのタイムライン（通常は _root という名前のムービークリップ）のものです。 変数や関数を利用したりインスタンスに指示を出す時は、誰が持っているものなのかを正確に指定しなければなりません。 持ち主の指定を”ターゲットパス”といい、様々な書き方があります。 ターゲットパスを誤ると内容を参照できなかったり、インスタンスに指示が伝わらなくなったりします。 ActionScript では大切な考え方ですので、解説書や解説サイトで調べてみてください。 それから、FlashPlayer 6 以降では、loadVariables よりも高機能な” LoadVars ”というクラス（ Flash MX ではオブジェクト）を使って読み込むこともできます。 機会がありましたら、こちらでの読み込みも研究してみてください。
まず確認ですが， W53CA は Flash Lite 2.0 対応ですね。 書かれていらっしゃるスクリプトは Flash Lite 2.0 以上で使えるスクリプトです。 ここまではOKです。 しかし， Flash Lite 3.0 とかの SWF をパブリッシュされていませんか？ ご質問でこの辺の重要事項が抜けていますから私にはわかりませんし， また，その辺のところはご自分でも明白にしておかなければなりません。 Flash Lite 2.0 でパブリッシュしてあるものとして次です。 「Flash Lite 2.x ActionScript リファレンスガイド SharedObject」 http://livedocs.adobe.com/flashlite/2_jp/main/00 … > Flash Lite 共有オブジェクトは、 > ローカルに保存された SWF ファイルのみが利用できます。 > ネットワーク対応ブラウザで再生される SWF ファイルは、 > Flash Lite 共有オブジェクトを使用することはできません。
おそらく(90％以上と予測)原因は， 「ロードされていないフレームに無理なジャンプをしている」 という部分にあると思います。 各フレームに用意した画像が重めなのではないかと思います。 フレーム1 などに， 「NowLoading...」のようなプリローダを用意して， 全フレームのロード完了次第フレーム２に進めて， フレーム２に書かれたスクリプトなどを書けば良いと思います。 Google検索「NowLoading Flash」 http://www.google.co.jp/search?hl=ja&q=NowLoadin … Google検索「NowLoading OKWave」 http://www.google.co.jp/search?hl=ja&q=NowLoadin …
・Suzuka ・ParaFla! ・FreeMotion（有料） なら、・ParaFla!　ですかね。 参考サイトが多いですし。。。 ちなみに、・FreeMotion（有料）は、Flash作成ソフトですが、 主目的は、解析用です。　また、Flash8等を使っている人が、解析用に買うことが普通です。 なので、いきなり・FreeMotion（有料）を買っても、使えません。たぶん。　参考書もない? 。。。と思う。 というこで、とりあえずやるなら、・ParaFla! ただ、・ParaFla!　で高度? なことをやるためには、ソースの勉強が相当大変です。 要するに、ホームページを「メモ帳」で、つくるか、 ホームページ作成ソフトで作るか。。。くらいの差がありますので。 では、何年か、がんばってください。^^　
＃１の方の方法でも当然良いと思います。 しかし結局「絶対こうすべき」という方法はないと思うので， 自分で考えるか，検索してそれらを参考にするのが普通でしょうね。 ご質問は ActionScript3.0 のようですが， ActionScript2.0 で一応１つの方法を考えてみました。 ------------------------------ // num に任意の整数を代入 var num:Number = 1000*1000; // str1 に num を文字列にしたものを代入 var str1:String = String(num); // str2　の初期化 var str2:String = ""; // str1 の文字数分ループ for (var i:Number = 1; i<=str1.length; i++) { // i が3の倍数+1であって， 1ではないとき if ((i-1)%3 == 0 && i != 1) { // str2 の前にカンマを連結 str2 = ","+str2; } // str2 の前に str1 の右から1文字を連結 str2 = str1.substr(-i, 1)+str2; } trace(str2); ------------------------------ ActionScript3.0 だと "正規表現が使える" ので， JavaScriptのようなカンマ挿入方法もできると思います。 Google検索「"３桁" カンマ ActionScript」 http://www.google.co.jp/search?hl=ja&q=%22%EF%BC … 色々検索してみてください。 ActionScriptに限らず，他言語で検索してもその考え方が参考になると思いますよ。
古来からある Flash の描画方法の１つですね。 「ペンツール」だともっと簡単にできるとは思いますが， その動画では「線ツール」で線を引いて「選択ツール」で線の中央付近を選択して引っ張っています。 > どのように書いているのですか 「普通にかいています」では回答にならないのですよね。 見るからに普通に描いているだけ。そのままなので説明しにくいですが...。 別サイトで言うならこんな感じですね↓。 「ひっぱってつまんでほいほいほい♪　-のんびり版-」 http://www.warawa.net/F/ILLUST/face.html > 鉛筆ツールやブラシツール・線ツールなどで書いても変更できないのですが ？？？ ひょっとしたらオブジェクトの描画機能がONになってしまっていて， 「描画オブジェクト」が描かれているのかもしれません。 オブジェクトの描画機能をOFFにしてみてください。 OKWave「ShapeでなくDrawingObjectになっている」 http://okwave.jp/qa4506935.html
重なっている時にカウンタ変数を毎回”1”ずつ足していき、ある量に達すると音を出してカウンタ変数を0にすることで実現可能です。 onClipEvent (enterFrame) { if (_root.mc2_mc.hitTest(_root.mc1_mc)) { if(pon_i==0){ _root.Oto.start(); } pon_i=(pon_i>=10)?0:pon_i+1; } else { pon_i=0; } } onClipEvent (load) { var pon_i = 0; } または、重なった瞬間にsetIntervalで音を一定間隔で鳴らす関数を定義し、外れた瞬間にclearIntervalで一定間隔を解除することでも実現できます。 onClipEvent (enterFrame) { if (_root.mc2_mc.hitTest(_root.mc1_mc)) { if(!pon_flag){ pon_flag=true; pon_si = setInterval(pon,500); } } else { if(pon_flag){ pon_flag=false; clearInterval(pon_si); } } } onClipEvent (load) { var pon_flag = false; function pon(){ _root.Oto.start(); } }
”Flashが読み込む動画”をCGI等にし、そのCGIは条件によって正規の動画やダミーの動画にリダイレクトすることによって振り分けます。 CGIやPHPでリダイレクトするので.htaccessは必要ありません。 CGIの場合は #!/usr/bin/perl if(ログインしている条件){ print "Location: movie.flv\n\n"; } else { print "Location: dummy.flv\n\n"; } exit; PHPの場合は <?php if(ログインしている条件){ header("Location: movie.flv"); } else { header("Location: dummy.flv"); } ?> こんな感じになります。
XPSP2 IE6では閲覧可能です。 最新版のFlashのインストールの際に、Windowsファイアーウォールのブロックやセキュリティ対策ソフトのパーソナルファイアーウォール機能の遮断がありませんか？ または、IE7のセキュリティ設定でブロックはありませんか？（例：「ツール」「インターネットオプション」「セキュリティ」「レベルのカスタマイズ」「セキュリティの設定」ActivXコントロールやスプリプトを「有効」に、「ツール」「インターネットオプション」「全般」「Cookieの削除」「ファイルの削除」「OK」や「セキュリティの設定」「ダウンロード」「ファイルのダウンロード」「有効にする」、レベルを「中高」から「中」に落としてみるなど） その他一時的に「検索ツール」をアンインストール（後で再インストールする）
＃１＆２ です。 今OKWaveを何気なく見ていると たまたま関連するような良い質問と，私が思う良い回答があったので補足として書いておきます。 「JavaFXとSilverlight」　質問投稿日時：08/12/30 13:46 http://okwave.jp/qa4593104.html ＃１の方の回答　回答日時：08/12/30 17:12 ・私の感想 日進月歩ですから何が良いのかはよくわかりません。 Web と ローカル の両方で考えるなら今のところ Flash(Flexを含む意味のFlash)＋AIRでしょうね。 ネットなら完璧 Flash(Flexを含む意味のFlash)だと思います。 今後はどうなることやら...
すみません。＃１です。 delete this.onEnterFrame(); 　↓括弧() が不要です↓ delete this.onEnterFrame; 空（ソラ）でテキストをココに打っていたので、 () の有無によるエラーなどの実証検証をしていませんでした。
「ワールドボイス」では出来ないと思います。 PHPやCGIとFlashを連携させてもワールドボイス側もそれなりの対応をしなくてはならないと思います。
Flashでフレームに記述してnewするのではなく、プロパティパネルからドキュメントクラスにTestを定義すれば解決すると思います。 あるいは、initを呼び出す部分を下記のようにして、ステージ上に追加されたタイミングに呼び出されるように変更します。 ____________________________________________________ □Test.as public function Test() { this.addEventListener(Event.ADDED_TO_STAGE, init); } private function init(event:Event) { //--省略 } □flash var hoge2 = new Test(); this.addChild(hoge2); ____________________________________________________
ブラウザの種類・バージョンやプラグインの関係で見えたり見えなかったりするようですのでなんとも・・・ ↓これではどうでしょうか？ <object data="../hoge.swf" width="○○○" height="○○○" type="application/x-shockwave-flash"> <param name="movie" value="../hoge.swf"> </object> あと、<embed>を併用するとか・・・ いずれにしてもあなたのパソコンで見えたからといってほかのでも見えるとは限らないと思いますので、そこらへんの確認が必要かもしれません。
無限ループに陥っているとかではないでしょうか？ 「エラーを直してくれるサイト」ていうのは無いと思います。 こういったQ&Aサイトに問題のスクリプトを書いていただけたらエラーの原因が分かるかもしれません。 また、スクリプトの行頭に // を入れると、その行のスクリプトは飛ばされますので、それで原因解明できるかもしれません。
移動できる範囲をムービークリップにしておきます。(test_mc) 質問文では、長方形の形でしか指定できませんが、この方法だと、複雑な形でも移動範囲制限が出来ます。 onClipEvent (mouseMove) { if (_root.test_mc.hitTest(_root._xmouse, _root._ymouse, true)) { this._x = _root._xmouse; this._y = _root._ymouse; } } ＞範囲外にマウスがいるときは定位置にｍｃを表示させる 場合は、 onClipEvent (mouseMove) { if (_root.test_mc.hitTest(_root._xmouse, _root._ymouse, true)) { this._x = _root._xmouse; this._y = _root._ymouse; } else { this._x = 200;//定位置のx座標（今回は200） this._y = 200;//定位置のy座標（今回は200） } } ＞表示を消したい 場合は、 onClipEvent (mouseMove) { if (_root.test_mc.hitTest(_root._xmouse, _root._ymouse, true)) { this._visible = true; this._x = _root._xmouse; this._y = _root._ymouse; } else { this._visible = false; } } でOKだと思います。
制作ツールのバージョンまで書くと良いかもしれません。 特に注意点は無いのですが、 ボタンを作成してアクションに on (release) { fscommand2("StartVibrate", 2500, 1000, 2); } としたFlash Lite2.0出力（Flash CS3）したSWFファイルを W43H2に読み込ませてみましたが、ちゃんと動作しました。 このほか、フレームのアクションとして、 fscommand2("StartVibrate"・・・ としましたが、正しく動作します。 質問文を見た限り、スペルミスもないようですし、 本来出来ることなのでもう少し説明をいただけるとありがたいです。 確認ですが、マナーモードは解除しましたか？
実地検証はしていませんが，次の通りではないかと思います。 「Adobe Flash Lite * setTimeout/clearTimeout」 http://help.adobe.com/ja_JP/FlashLite/2.0_FlashL … 　～引用～ > ActionScript 2.0 の setTimeout および clearTimeout グローバル関数は、 > Flash Lite 3.0 ではサポートされていませんでしたが、 > Flash Lite 3.1 でサポートされるようになりました。 土台としてそもそもの話ですが， 「auのFlash」という大枠では何も判断できません。 setTimeoutは，PC用 FlashPlayer で言うと FlashPlayer8 でやっと対応した関数です。 それも Flash 8 では超正式には未対応でヘルプにも載っていません（載っていませんが使えます）。 オンラインヘルプの方で Adobe の方が補足追加されたので， やっと Flash 8 で正式にサポートされていると認識されたいわく付きの関数です。 Flash Lite 2.0 は FlashPlayer7 相当なので，当然未対応です。 FlashPlayer8 相当である Flash Lite 3.0 でサポートされていなくても当然と思う方が普通です。 細かいことを書きましたが， 「auのFlash」 という大枠ではなく，Flash Lite という枠組みで考えないと，話は先に進みませんよ。 「auのFlash」 でも Flash Lite 1.1 以下機種となれば setInterval すら対応していません。
＃１ です。 すみません，いつもは画像がアップできるのですが， なぜか今日は 　「onException:識別子、文字列または数がありません。」 という意味不明なエラーが出てアップできないようです。 文面だけで理解してみてください。
ん？　それはwindowsの点滅速度設定とは　無関係の速度で点滅しているという質問？
ActionScript 3.0 やクラスは、あまり詳しくないのですが。 このクラスの名前は” Bom ”ですよね。 ActionScript のクラスはクラスごとに as ファイルを作って定義しますが、クラスを定義する as ファイルはクラス名と同じ名前を付けなければなりません。 Bom クラスを定義する as ファイルなら、ファイル名は” Bom.as ”です。 クラスを定義した as ファイルの名前が” classA.as ”になっているのでしたら、ファイル名を” Bom.as ”に変更し、import の部分を 　import Bom; にしてみてください。 余談ですが。 クラス名と同じ字で大文字・小文字だけが違う名前は紛らわしく、エラーは出なくても間違いの原因になります。 大文字・小文字は区別されるので、クラスと変数が混同されることはないのですが、クラス名とは違う名前を付けた方が無難だと思います。
そこは FlashPlayer の誇るセキュリティの問題ですから普通は何ともなりません。 そういう事ができないことを牙城としているからこそFlashは生き続けているのです。 プライバシー保護や情報漏洩のセキュリティにも絡みますが， メインはそうではなくて， 「他人のふんどしで相撲を取る」 というクロスドメインの関するセキュリティです。 「Flash Player 9および10におけるポリシーファイル関連の変更点」 http://www.adobe.com/jp/devnet/flashplayer/artic … 「Flash Player 8 のセキュリティ機能の変更点」 http://www.adobe.com/jp/devnet/flash/articles/fp … Google さんに頼んで，「クロスドメインポリシーファイル」を設置してもらえば即解決しますが， そんなことは普通できません。 Googleの社員であっても無理でしょう。 PHP などサーバサイドの言語で Google さんのファイルをサイト内に複製（疑似複製）すると， その複製ファイル（もしくは伝達データ）を SWF が取得できるそうです。 とにかく，ActionScriptだけではどうにもなりません。
Flash 8 入門講座 http://itpro.nikkeibp.co.jp/article/COLUMN/20060 …
ワイプに3D表現を加えasで完全に制御したいという前提で。 おそらく画像はflash内で加工せずに スクリプトで何とか全部やってしまいたいのですね。 おそらく組み立て方としては以下のクラス（asファイル）を作成し 組み合わせて一つのスクリプトにする必要がありそうです。 ・一枚の写真を分割するクラス ・分割された四角が拡大する動きのクラス（他の3D表現を加えるならこのクラスに加える） ・分割された四角を順番に一づつ動かすクラス ・↑このクラスを数秒ごとに実行するクラス 細かくするとこんな形になると思います。 あとは以下を検索して見て下さい。 ・ｍｃにクラスを定義する方法。 ・クラスにクラスを読み込む（連携・継承）する方法。 自分ですべて組み立てると以上のようなイメージです。 似たようなものでよければ以下を http://www.condo.fromc.jp/flash/memo/index3.html ■トランジッションのサンプル２ また標準のフレームワークでこんなものもあるようです http://www.logicalyze.net/blog/?p=85 映像のカットとカットのつなぎを トランジッション、ワイプなどと呼ぶようです。 参考になれば幸いです。
ちゃんとしているものは　それなりの値段が設定されてるので希望の物は恐らく無いんじゃないのかな・・・ アカデミック版でもかなりの価格・・・ あときしめんは効果ではなく素材だから別途の作成が必要だね。主に3Dツールかな。 http://www.google.com/search?lr=lang_ja&q=aftere … http://www.google.com/search?lr=lang_ja&q=%E5%AE … http://www.google.com/search?lr=lang_ja&q=flash% …
stateChange で FLVPlayback 状態のプロパティ state を参照すればロードエラーなどが取得できます。 書かれたコードの下に続くように，例えば次のコードを書きます。 var listenerObj:Object = new Object(); listenerObj.stateChange = function():Void { trace("state: "+mc_flvplayer.state); }; mc_flvplayer.addEventListener("stateChange", listenerObj); ファイルがない場合は connectionError という値（ストリング）が得られます。 ファイルがある場合は stopped という値（ストリング）が得られます。 その他得られる値の一覧がヘルプにあります。 http://livedocs.adobe.com/flash/8_jp/main/000035 … これらの値を取得して， その状態によってそれぞれ処理を分岐をさせれば良いと思います。 なお， 私は作成者ではないので 「エラー処理の仕方」 自体は知りませんよ。 エラーが起きたときの処理は無数にあって，それに対する無数の手段があると思います。 別のFLVのロードにとりかかるとか， ロードエラーコメントを出すとか， 代替画像を表示させるとか， アナウンスを流すとか， 別アニメーションを再生させるとか， 別ページにgetURLさせるとか， Windowをクローズして誤魔化すとか， お詫びに壁紙でもプレゼントするとかとか… 何かの対処を用意してください。
ここに質問される多くの方にも言えることなのですが， なぜ １つのみ でしてみないのですか？ １つだと原因究明も簡単になります。 またココに書く手間も省けます。 また考える手間も省けます。 できない状態で進み続けるからさらに状況が複雑になって，問題点が見えなくなり手に負えなくなります。 問題解決には「問題を切り分ける」ということが必要です。 「切り分ける＝単純化する」ということです。 問題解決が出来ない状態のまま進むということは逆に問題を複雑化させるということ他なりません。 それは悪循環するだけです。 つまり， ここに質問される方の多くはそこに共通の欠点があります。 その欠点に気をつければスムーズに行くようになると思います。 （多くの方 ≠ 全ての方　です。） > 3.シンボル“mc1”の1フレーズ目に > loadMovie("a.swf","mc1"); おそらく意味がわかっていらっしゃらないのでこう書かれているのだと思います。 この意味は， // この階層のインスタンス「mc1」に「a.swf」をロード loadMovie("a.swf","mc1"); です。 スクリプトを書いた階層，つまりシンボル“mc1”内に， 「mc1」 というインスタンスは存在するのでしょうか。 存在すればそこに「a.swf」がロードされると思います。 シンボル“mc1”内の「mc1」にロードするのではなくて， シンボル“mc1” をステージ上に配置したインスタンスそのものに「a.swf」をロードするのでしょう？ そうでしたらスクリプトは次のようになります。 // この階層に「a.swf」をロード loadMovie("a.swf", this); 自分自身を this で相対参照していますから， この場合はインスタンス名は要りません。 もし， この シンボル“mc1”をステージに配置したインスタンス に 「mc1」というインスタンス名を付けていて， そのインスタンス名を使いたい場合は次のようにします。 // _root階層にあるインスタンス「mc1」に「a.swf」をロード loadMovie("a.swf", _root.mc1); あまり次のような妙なことはしませんが， もし相対パスで自分自身を再参照したい場合は次のように書きます。 // 親階層にあるインスタンス「mc1」に「a.swf」をロード loadMovie("a.swf", _parent.mc1); または // 自分の親階層にあるインスタンス「mc1」に「a.swf」をロード loadMovie("a.swf", this._parent.mc1); ActionScript最重要事項「ターゲットパス」を理解すると同時にいつもこれに注意してください。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath …
リファレンスを知りたいなら、マニュアルを読めばいい。 へたなHowToサイトより詳細に書いてあります。 http://help.adobe.com/ja_JP/Flash/10.0_Welcome/W …
「メーター」 と 「ゼンマイ」 は同期しています。 これを１つのムービークリップ内のタイムラインアニメーションで作成すれば良いのではないかと思います。 「人」は同期していません。 これは上の２つのムービークリップとは別のムービークリップ内のタイムラインアニメーションで作成すれば良いのではないかと思います。 「メーター」＆「ゼンマイ」 は一方向のみのアニメーションで良いです。 「メーター」は増えるだけのアニメーション， 「ゼンマイ」は右回りするだけのアニメーションです。 マウスの座標が上がったとき（yにマイナス方向に動いたとき）， 「メーター」＆「ゼンマイ」 ムービークリップの再生を正の方向に進めます。 そして， マウスの座標が下がったとき（yにプラス方向に動いたとき）， 「メーター」＆「ゼンマイ」 ムービークリップの再生を逆方向に進めます。つまり逆再生させます。 私は下の図のような簡単なムービークリップ（MC）を２つ作成して実験してみました。 左のMC には 「meter_mc」 というインスタンス名を付けています。 右のMC には 「man_mc」 というインスタンス名を付けています。 その場合それら２つがあるフレームに次のように書けば， ご質問で書かれていらっしゃるようなことができると思います。 -------------------------------------------- // メーターMC が逆再生するスピードを設定 spd = 2; // メーターMC と 人MC を停止 meter_mc.stop(); man_mc.stop(); // マウス監視用オブジェクト mouseObj を作成 var mouseObj = new Object(); // マウスが動いたときの動作を定義 mouseObj.onMouseMove = function() { // // もし 変数 mouseY1 が未定義であれば if (mouseY1 == undefined) { // mouseY1に マウスの y 座標を代入 mouseY1 = _root._ymouse; // もし 変数 mouseY1 が定義済であれば } else { // 変数 mouseY2 に mouseY1 の値を保管(旧マウス座標) mouseY2 = mouseY1; // そして mouseY1に マウスの y 座標を代入(新マウス座標) mouseY1 = _root._ymouse; // // 新マウス座標が旧マウス座標より大きい場合 if (mouseY1>mouseY2) { // メーターMC に １フレーム進む時間毎に随時実行する動作を定義 meter_mc.onEnterFrame = function() { // // もし メーターMC の再生フレームが spd より大きい場合 if (meter_mc._currentframe>spd) { // 人MC を再生 man_mc.play(); // メーターMC をspdのフレーム数分逆生成 meter_mc.gotoAndStop(meter_mc._currentframe-spd); // メーターMC の再生フレームが 1 であれば } else { // メーターMC をフレーム1で停止 meter_mc.gotoAndStop(1); // 人MC をフレーム1で停止 man_mc.gotoAndStop(1); } }; // // 新マウス座標が旧マウス座標より小さい場合 } else if (mouseY1<mouseY2) { // メーターMC の １フレーム進む時間毎に随時実行する動作を削除 delete meter_mc.onEnterFrame; // 人MC をフレーム1で停止 man_mc.gotoAndStop(1); // 新旧マウス座標の差分だけ meter_mc のフレームを進める meter_mc.gotoAndStop(meter_mc._currentframe+mouseY2-mouseY1); } } }; // Mouseクラスのリスナーとして mouseObj を登録 Mouse.addListener(mouseObj); -------------------------------------------- (ActionScript1.0　Flash MX 以上で使用可能) ゼンマイですが， これはムービークリップの中でくるくる回るアニメーションを作成するのではなくて， グラフィックインスタンスの中で１回転するアニメーションを作成します。 そして，そのゼンマイが１回転するアニメが入ったグラフィックインスタンスを 「meter_mc」 の中に入れます。 そしてそのタイムラインを伸ばして， ゼンマイグラフィックインスタンスを選択した状態で， プロパティインスペクタから再生方法を 「ループ」 に指定すれば， 「meter_mc」 のタイムラインと同期して動くインスタンスが容易に作成できます。 「meter_mc」 の中に，ゼンマイが回転するムービークリップを入れた場合はこれができません。 ムービークリップではなくグラフィックインスタンスを使用する所がポイントです。 また， 「meter_mc」 の中のタイムラインを直接使うと， ゼンマイを何回転も何回転もさせなければならなくなりますから， かなり面倒ですし，位置を変えるのも一苦労になります。
次の「C-2. レジストリキーの確認」の項に、それらしいものがありますが、確認してください。 http://support.adobe.co.jp/faq/qadoc/AJ25.nsf/0/ …
前半に関してはどういうことかよくわかりません。 > 結果、１回目は反映されるのですが、２回目を試し、 以降について回答を書くと， これは Flash ではなくブラウザのキャッシュが原因だと推測されます。 loadVariablesNum() にしても LoadVars.load にしても，また loadMovie() にしても， これらはブラウザに対してのロードリクエストです。 したがって loadVariablesNum("test.txt", 0); をした場合，「～～/test.txt」 がブラウザのキャッシュに残ってしまいます。 それで２回目以降が１回目のロードと同じになってしまうのだと思います。 「～～/test.txt?=○×△」 のようにして，毎回○×△の部分を変えてやれば良いです。 そうすれば， 『 「～～/test.txt?=○×△」 と 「～～/test.txt?=＠※％」 とは 違うものだ。』 とブラウザが判断するので２回目以降もキャッシュを参照しなくなると思います。 ○×△ の部分は適当で良いです。 ランダムな数を出してそれを引っ付けても良いですし， そのときの時刻などを引っ付けても良いと思います。 aaa = "適当な値"; loadVariablesNum("test.txt?=" + aaa , 0); このような感じにすれば OK です。 例えば aaa = Math.random()*100000000; loadVariablesNum("test.txt?=" + aaa , 0); こんな感じにしても良いと思います。
2.0前提でお話しますと タイムラインに１票です。 以下のページに シーンのデメリットが載っております。 （cs4のページですがバージョン違いでもこれらはよく聞きます） http://help.adobe.com/ja_JP/Flash/10.0_UsingFlas … 一番のデメリットは ファイルが重くなることでしょう。 メリットは作成者が解り易い（1人で作業した場合） ので最初の取っ掛かりにはいい。 自分も一番最初、利用したこともありました。
とても偶然ですが、私も似ているようなものを作っています、 以下のページご参考を・・・・ http://hfm-kenchan.com/Lesson/log_qa/D0710111.htm 参考URL：http://hfm-kenchan.com/Lesson/log_qa/D0710111.htm
ActionScript 3.0 (及び 2.0 及び 1.0) です。 Flash CS4 ユーザーガイド http://help.adobe.com/ja_JP/ActionScript/3.0_Pro …
var goto:Number = 10; var timeId:uint = setTimeout(gotoAndPlay, 5000, goto); という感じではだめでしょうか？
var を付けたいか付けたくないかはコンピュータには判断できないと思います。 【例1】 -------------------------- var i:Number = 0; function myFunction() { for (var i:Number = 0; i<=2; i++) { trace(i); } } myFunction(); trace(i); -------------------------- 　出力→ 0 1 2 0 【例2】 -------------------------- var i:Number = 0; function myFunction() { for (i=0; i<=2; i++) { trace(i); } } myFunction(); trace(i); -------------------------- 　出力→ 0 1 2 3 【例1】 のように i を使いたいときもあれば，【例2】 のように i を使いたいときもあります。 それを var によって選択できるのです。 全部自動で 【例2】 扱いになってしまったら，【例1】のように使いたいとき困ります。 困られては困るので， 今度は逆に 【例1】 のように使う記号が開発されると思います。 すると今度は その記号を全自動にしてほしいと思うかもしれません（絶対思います）。 堂々巡りですよ。
ども。 初級初級シスアド、システム管理実務です。 ソースを確認しましたが、FlashとJava scriptで作られてますね。 ブラウザ上でマウスの右クリックをすればメニューの最下部に「Adobe Flash Player XXについて」と表示されると思います。 FlashコンテンツをFlash Playerで表示しているということです。 ブラウザの機能からソースを表示することができると思いますが、一応載せます。 このソースはあくまでこのページ全体のコンテンツ構成を記述しているだけです。実際のFlashコンテンツなどは別の場所にありそれを呼び出しているので、ファイル容量が10kBぐらいに見えますが実際のFlashコンテンツの容量は130kBなど内容によってさまざまです。 ご参考までに。 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html lang="ja"> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <link rel="shortcut icon" href="http://www.ungraffi.org/favicon.ico"> <title>ungraffi | ungraffi.org™</title> <meta name="keywords" content="ungraffi, art director, tomomichi ikeda, アングラフィ, アートディレクター, 池田智道, 池田龍哉 "> <meta name="description" content="presenting the free minded identity and the creativity -- ungraffi"> <meta name="design" content="tomomichi ikeda - ungraffi"> <meta name="copyright" content="Copyright (c)ungraffi All rights reserved."> <link rel="shortcut icon" href="favicon.ico"> <link rel="stylesheet" href="css/style.css" type="text/css"> <script type="text/javascript" src="js/swfobject.js"></script> <script type="text/javascript" src="js/swfmacmousewheel.js"></script> <style><!-- *{ margin: 0; padding: 0; } --></style> </head> <body> <div id="flashcontent"> This text is replaced by the Flash movie. </div> <script type="text/javascript"> var so = new SWFObject("loader.swf", "top", "100%", "100%", "8", "#ffffff"); so.addParam("scale", "noscale"); so.write("flashcontent"); var macmousewheel = new SWFMacMouseWheel( so ); </script> </body> </html>
hitTestPoint 「インスタンスと点の当たり判定を調べる」 http://hakuhin.hp.infoseek.co.jp/main/as3/contai … ↑これは説明のためのサンプルですから addEventListener(Event.ENTER_FRAME,function(event){ のように ENTER_FRAME を使用しています。 こういう非効率な方法をとるのではなくて， 親を CLICK するタイミングで当たり判定をすれば良いと思います。 ※ActionScript3.0 作成環境ではないため私は全く検証できませんが。
> flashのaction script3ですが別の言語でも構いません。 ということで。 私も回答者の中の１人に入っていますが， 私以外の方も別言後で色々な方法を書かれています。 質問番号：3990775 「多角形の内部かどうか判定する方法」 http://okwave.jp/qa3990775.html そこ（回答番号：No.7）でも 書いていますが， 私だと，とにかく白線内を塗りつぶします。島を島として塗る。 それでその塗り(島)と ■ との当たり判定をとります。 　塗り(島)と■が当たっている→画像のフチにたどり着けない 　塗り(島)と■が当たっていない→画像のフチにたどり着ける 私の場合なにしろ出がグラフィック系ですから， 内積だの曲線の方程式だのは考えていられません。 そこでは一応 ActionScript1.0 でベクタ図形を塗りつぶす方法を書いていますが， ビットマップ画像だと塗りにくいかもしれません。 その他データなどの状況によるので何とも言えません。 場合によっては塗りつぶすというより， 白線境界内を □ のスプライトやムービークリップでり配置するということが必要かもしれません。 塗りつぶす（または埋めつくす）ということまでができると後は当たり判定でできると思います。 私は ActionScript3.0 に関しては全くと言って良いほどわかりませんが， 当たり判定自体は，BitmapData との当たり判定や ムービークリップと点との当たり判定 など色々できると思います。 Google検索 「当たり判定 ActionScript 3」 http://www.google.co.jp/search?hl=ja&q=%E5%BD%93 … その他何かヒントになることが見つかるかもしれません（???）。 Google検索 「塗り潰し アルゴリズム」 http://www.google.co.jp/search?hl=ja&q=%E5%A1%97 …
以下のサイトを参考にしてみて下さい。 http://www.openspc2.org/reibun/javascript/ 参考URL：http://www.openspc2.org/reibun/javascript/
普通に 上のレイヤーのムービークリップの中に雪を降らせて 下のレイヤーにムービークリップにSWFをロードすれば良いのではないかと思います。
>エラーメッセージは「1120:未定義のプロパティ_parentへのアクセスです。」 なるほど、ちょっと確認して頂きたいのですが ファイル→パブリッシュ設定→ 【flashタブのactionscriptのバージョン】 を確認して頂き、ActionScript3.0になってましたら ActionScript2.0に変更してみて下さい。
flvをHTML上で見せるためには、flashでプレイヤー用のflashの実行ファイルであるswfファイルが必要です。 ご指定のサイトもそうなっています。 以下の部分です <object width="480" height="354"> <embed src="http：//base-ball.jp/mv/FlowPlayerDark.swf？config・・・・ </object> ここで、src="～～.swfとなっているのがプレイヤー用のflashの実行ファイル（.swf）です。 これが、flvを画面に映すエリアや、再生ボタンや停止ボタンなどのコントローラーを表示します。 ですので、flashか、flashを作れるソフトが必要です。 ない場合は、まえの回答にあるように、youtubeなどにアップロードして、参照のタグをそのままコピペで使うのもいいと思います。
ターゲットパスに間違いがあるのでしょう。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath … this.gotoAndPlay(url); だと， 「そのボタンのあるムービークリップのフレームを url に進めて再生させる」 となります。 ムービークリップ内のフレームを url に進めるのではないのでしょう？ 動かしたいフレームがどの階層のフレームなのか知りませんが， this の部分をどうするべきか考える必要があると思いますよ。 たとえば， _parent.gotoAndPlay(url) とか _parent._parent.gotoAndPlay(url) とか _root.gotoAndPlay(url) とかです。 ムービーがどういう階層構造になっているのかわかりませんし， さらにどの階層を動かそうとしているのかはわかりませんから， この辺はご自身で考えるしかないと思います。 あと， その動かしたい階層のタイムラインに url というフレームなど存在するのですか？ この辺の確認が必要です。 url にはどんな値が入っているのかは私は知りません。 url に 5 が入っていたら， 少なくとも フレーム5 以上は必要です。 url に "a" という値が入っているのでしたら， 少なくとも 「a」 と命名したフレームラベルが存在するフレームが必要です。
XOR は AND ・ OR ・ NOT で代用できます。 しかし、Flash Lite 1.1 ではそもそも、ビット演算自体ができないようです。 ビット演算を使わずに XOR と同じ処理を実現する方法は、心当たりがないのですが。 単に 0 と 1 を切り替えるだけなら、剰余を利用して、例えば 　a = ( a + 1 ) % 2; とする（ a の初期値は 0 または 1 ）と、a には 0 と 1 が交互に入りますので、XOR による反転と似たようなことができます。
Flash と言えば ムービークリップ です。 ムービークリップ があるからこその Flash です。 _root（シーン1 などメインのタイムライン）ばかりを使われるのでご質問のような状況になります。 吹き出しは ムービークリップ のタイムラインで作成するとすぐに解決します。 ◎ 実感するための簡単な作成例 【1】新規ドキュメントを作成します。 【2】ステージ上に四角い塗りを描きます。 【3】その塗りを選択して， 「修正」→「シンボルに変換」(Flash MX 2004以上) または， 「挿入」→「シンボルに変換」(Flash MX 以下) を選択します。(図3↓) 【4】出てくる「シンボル変換」パネルで「ムービークリップ」に変換します。(図4↓) 【5】ステージ状のムービークリップになった四角をダブルクリックして ムービークリップ内のタイムラインの編集に入ります。(図5↓) 【6】フレーム1の四角をタイムラインのドラッグなどでフレーム2に移動させて， フレーム1 を空白キーフレーム，フレーム2 を四角の入ったキーフレームにします。(図6↓) 【7】フレーム1の空白キーフレームを選択して下のアクションパネルに stop(); を書いてムービークリップが自動再生しないようにしておきます。(図7↓) 【8】ステージ上の何も無い所をダブルクリックするなどして， _root（シーン1 などメインのタイムライン）の編集に戻ります。 【9】 小さな○だけになったムービークリップを選択して， 下のプロパティインスペクタでインスタンス名を付けます。 ここでは「mc1」というインスタンス名を付けることにしておきます。(図9↓) 【10】ステージ上に別のボタンを作成します。 他で作ったボタンをコピペするなどしても良いと思います。 【11】ボタンを選択してアクションパネルに on (rollOver) { _root.mc1.gotoAndStop(2); } と書きます。(図11↓) 意味は ロールオーバーしたとき _root の mc1 内のフレームをを フレーム2 で停止 という意味です。 これでパブリッシュするなどすれば動作確認ができます。 ２つ目のボタン用にはインスタンス名 「mc2」 のムービークリップを作成 ３つ目のボタン用にはインスタンス名 「mc3」 のムービークリップを作成 　　…　　　　… としていくと， １つのボタンに対して１つの専用のムービークリップができます。 つまり言い換えると， １つのボタン専用のタイムラインができるということになります。 --- --- --- Flash は _root 自体も，実は１つのタイムラインをもつムービークリップの一種です。 たった１つのムービークリップでは大した表現などできません。 ムービークリップの中にムービークリップを作成するからこそ色々なものが作成表現できるのです。 ※図が見えない場合は 　 OKWave　http://okwave.jp/qa4526915.html 　 からこのページにアクセスすると見えると思います。
方法は２通り （両方やるっていうのが最高） Ａ．画像を圧縮する 　　保存形式がわかりませんが、jpegにして高圧縮にすればよい Ｂ．外部から読み込む 　　URLRequestを使って行う 　　非同期になるので、多少面倒にはなります
#1です。 再生させるのはhitではなくその上の階層のMCなのですね。すみません、勘違いしていました。 でしたら、#2の方の記述通り、thisの部分をすべてthis._parentに置き換えてください。
>教えていただいた西村あさひ法律事務所さんのURLを引用させていただいてもよろしいでしょうか？ どうぞー。お使いください。 ちなみにヒントですが、このサイトのようなレイアウトであれば、必ずしもFlash自体を変える必要はなく、Flashの上にHTMLのレイヤーを被せるように配置すれば、結果的にFlashのサイズが変わったように見せることができるのです。
直接はやってないので as3 -> php -> mysqlを １．as3からHttpServiceを使いをphpに必要なパラメータをgetもしくはpostで送る ２．phpで受け取ったパラメータを元にmysqlに対しリクエストを発行する ３．検索等の結果をphpで配列で構築し、json形式で出力する ４．as3で受け取ったjsonを展開し、Objectとして利用する と、こんな感じです、業務用なので、サンプル提示はできません
AS3で読み込んだAS2のムービーの関数は実行できません。どうしても制御する場合は、読み込まれるムービーが変更できないようでしたら、読み込む側のムービーをAS2で制作するしかありません。 □下記URLより引用 -------------------------------------------------------------- AVM1Movie オブジェクトと AVM2 オブジェクトの間で相互に運用することはできません (メソッドの呼び出しやパラメータの使用など) -------------------------------------------------------------- http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
XMLも元をたどれば単なるテキストです。 テキストをユーザーに更新させる、つまり書き換えさせるには、 ユーザーに書き換えさせる「プログラム」が必要となります。 しかし、Flashは基本的にユーザー側のマシン上で動作するので、 サーバ上にあるテキストを直接書き換えることはできません。 Flashからユーザーに更新させることを前提とする場合、 Flashからサーバにあるプログラム（PHP・Perl・Ruby他）に 「テキスト(XML)を書き換えて欲しい！」と 要求させるようにしなければなりません。 【ユーザ側】　　｜　　【サーバ側】 [Flash(swf)]→書換要求→[プログラム]→書換命令→[テキスト(xml)] もし、Flash版CMSというものがあるのだとしたら、 こういう仕組みに基本はなっていると思われます。 なお申し訳ないのですが、具体的にFlash版CMSにはどんな種類があるかは存じ上げません。 参考サイトを以下に張っておきます。 ■参考サイト ・sendAndLoadでPHPと連携 　http://nashiko.net/blog/699 ・受け取ったデータをphpでxmlデータに変換したい 　http://www.phppro.jp/qa/301 また、この他にも検索などでこれらを掘り下げていくといいと思います。
どこまでAIを突き詰めるかによりますが…「AI的」という表現から受け取って回答します。 したいことはおそらく… ■ロリポップ http://lolipop.jp/?mode=support&state=oshiete_chat ■イケア http://193.108.42.79:8080/ikea_jp/ に近いことではないかなーと考えました。 >HPに来たひとに質問して　帰ってきたこたえを >フォルダを　作っていって　そこに　自分で保存していて　整理していったらいいのだは　ともいました これらを実現させるには、 Flash→プログラム（PHPやPerlなど）→データの保存 という過程が必要になると思います。 具体的なAIに関するアルゴリズムまではわかりませんが、 参考サイトを以下に張っておきます。 ■参考サイト ・sendAndLoadでPHPと連携 　http://nashiko.net/blog/699​ ・PHPのファイルシステム操作関連 　http://phpspot.net/php/pg%82o%82g%82o%83T%83%93% … >保存先の問題とかで　これは　自分でサーバー　作らないと　できないとゆうことですか？ 自宅でサーバを構築してファイルを管理することはできますが、 共用・専用のレンタルサーバが、個人でも使えるほどのリーズナブルさで利用することができますので、そちらをオススメします。 どのようなプログラムを使うかなど、自分の条件に合うサーバを、探すとよいと思います。 なお、無料のレンタルサーバはプログラムが使えなかったり、広告が入ったりなどの問題がありますので、有料版をおすすめします。
>動きを付けられる程度でゲーム作りの経験は全くありません。 正直、ゲーム的カルタをつくるとなると非常に難しいと思います。 お断りするのが無難と考えます。 他の方が回答されたプログラムがご理解できるというのであれば、 問題はないと思いますが「どうにも難しい…」とお思いであるのであればなおさらです。 それでも、何とかしたい・・・とお考えでしたら、 例えば、次のようなことをしてはいかがでしょうか？ ■参考サイト：マウスに追随する虫眼鏡 http://www.geocities.jp/flashiroha/script/as23.h … ↑これを応用することで、子どもたちのつくったカルタを小さいスペースで表示させることが出来ます。 また、この特性をいかして、親がPCの前で読み札を読み上げ、 虫眼鏡で子どもが取り札を探すといった「遊び」もできます。 親が読み札を読み上げられるように、 読み札をPDFなど印刷できるようししてあげると親切かもしれません。 また、取り札も同様に印刷できるようにしてあげると、 PCの前だけではなく、リアルなカルタゲームが楽しめるようになるのではないでしょうか。 以上、拙い文章ですがご参考くださいませ。
つまり， 　onRollOver ＆ onRollOut 　と 　onPress ＆ onReleas 　とが かぶらないので， 　再定義できす，前の onRollOver ＆ onRollOut が残ってしまう。 ということですね。 そういう場合は delete すれば良いでしょう。 具体的例としては， s1 フレームのスクリプトが次のような感じである場合， for (var i:Number = 1; i<=3; i++) { _root["MC"+i].onRollOver = function():Void { this._alpha = 50; }; _root["MC"+i].onRollOut = function():Void { this._alpha = 100; }; } s2 フレームのスクリプトは次のようにすれば良いということです。 for (i=1; i<=3; i++) { // ↓ delete delete _root["MC"+i].onRollOver; delete _root["MC"+i].onRollOut; _root["MC"+i].onPress = function():Void { this.startDrag(); }; _root["MC"+i].onRelease = function():Void { this.stopDrag(); }; }
＃１です。 補足で書かれていらっしゃる内容が基本的によくわかりません...。 よくわからないと言うのは文章がわからないという意味ではなくて， 「どういう時」に「どういう現象を起こすのか」という法則がうまく把握できません。 > (1)aフレームにて，ドラッグ＆ドロップの操作を行い，以下の状態にする． > mc1(back1)／mc80(back80)　→　mc1(back80)／mc80(back1) これを直訳すると， 　　もし mc1 と back1 が重なっていて 　　　　　　　　なおかつ 　　mc80 と back80 が重なっていているとき 　　　　　　　　　　↓ 　　 back1 と back80 の座標を入れ替える となります。 単にそういうことでしたら， 「そういうことを起こしたい時」に「そのままの現象を起こす」ようにすれば良いと思います。 > これもhitTestを使ってASを制作すればよろしいのでしょうか??? 使っても良いですし，使わなくても良いと思います。 ただ hitTest と言っても色々な書き方があって， 実際にどう書かれたのかわかりませんので， hitTest を使った具体的なスクリプトは非常に私は提示しにくいです。 hitTest をどう書かれたのであれ，何某かのスクリプトによって， 　_root.mc○._x = _root["back"+○]._x; 　_root.mc○._y = _root["back"+○]._y; が実行されるのだと思いますから， その後であれば hitTest を使わなくても座標移動はできると思います。 【座標を使った例】 ---------------------------------- // もし mc1 と back1 の座標が等しく // なおかつ // mc80 と back1 の座標が等しいとき if (_root.mc1._x == _root.back1._x && _root.mc1._y == _root.back1._y && _root.mc80._x == _root.back80._x && _root.mc80._y == _root.back80._y) { // back1 の座標を変数に保存 b1x = _root.back1._x; b1y = _root.back1._y; // back1 を back80 の座標に移動 _root.back1._x = _root.back80._x; _root.back1._y = _root.back80._y; // back80 を保存しておいた座標に移動 _root.back80._x = b1x; _root.back80._y = b1y; } ---------------------------------- 実際にはどんな hitTest にされたのかわかりませんから， これで良いかどうかは判断できませんが， あくまでも 例 として if文 を次のように変えても良いと思います。 【hitTestを使った例】 ---------------------------------- // もし back1 が mc1 の基準点の座標にヒットしていて // なおかつ // back80 が mc80 の基準点の座標にヒットしているとき if (_root.back1.hitTest(_root.mc1._x, _root.mc1._y, true) && _root.back80.hitTest(_root.mc80._x, _root.mc80._y, true)) { // back1 の座標を変数に保存 b1x = _root.back1._x; b1y = _root.back1._y; // back1 を back80 の座標に移動 _root.back1._x = _root.back80._x; _root.back1._y = _root.back80._y; // back80 を保存しておいた座標に移動 _root.back80._x = b1x; _root.back80._y = b1y; } ---------------------------------- > (2)bフレームに移動したときに， > back1～20に位置しているmcのアルファを0にする． > つまり，mc80(back1)に位置しているmc80のアルファも0になる． こちらは簡単に理解できますし，する内容も簡単です。 bフレーム に次のように書けば良いと思います。 for文二重ループです。 【座標を使った例】 ---------------------------------- // back1～20 に対してのループ for (i=1; i<=20; i++) { // mc1～80 に対してのループ for (j=1; j<=80; j++) { if (_root["back"+i]._x == _root["mc"+j]._x && _root["back"+i]._y == _root["mc"+j]._y) { _root["mc"+j]._alpha = 0; } } } ---------------------------------- 【hitTestを使った例】 ---------------------------------- // back1～20 に対してのループ for (i=1; i<=20; i++) { // mc1～80 に対してのループ for (j=1; j<=80; j++) { if (_root["back"+i].hitTest(_root["mc"+j]._x, _root["mc"+j]._y, true)) { _root["mc"+j]._alpha = 0; } } } ---------------------------------- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- > ASの「古い」とかわからないんですよね(汗) Flash は極めてバージョンが重要です。 ご質問ではバージョンを一切書かれていらっしゃいませんが， 普通はバージョンを書かれない場合回答できません。 ではなぜ回答できたのかというと， ご質問のスクリプトの最初に次のコードがあったからです。 　_root["mc"+i].onPress = function(){ この一行からだけで次のことが瞬時にわかります。 　「ActionScript1.0をご使用」 　「Flash MX 以上をご使用」 　「FlashPlayer6以上のSWFをパブリッシュ予定」 したがって回答できたのです。 FlashのヘルプやActionScriptエディタを見ると， 古くて使えないようなスクリプトには， 「使用しないでください」 とか 「使用を避ける機能」 とかがちゃんと書いてあります。 もちろん使用しているFlashのバージョンによってこれは変わります。 そこら辺を注意して確認しておくことが大切です。 良い例なのでついでに 「_droptarget」 に関しても補足をしておきます。 FlashPlayer6 以上の SWF をパブリッシュする場合でも， 「_droptarget」 自体は決して使用禁止ではありません。 しかし...， ヘルプなどで「_droptarget」検索してみると非常にグレーで危険ゾーンのことが書かれています。 （私個人的には調べなくても 危険ゾーン とは認識していましたが。） 「スラッシュシンタックス」を調べるとこちらは「終了～！」状態です。 （下図：見えない場合は OKWave http://okwave.jp/qa4517765.html ） ついでに eval も危険いっぱいです。 ただ _droptarget の場合についてのみは例外で， スラッシュシンタックスのパスを勝手に返すのが _droptarget 側であって， スラッシュシンタックス を使用したターゲットパスをユーザーが使用しているわけではありません。 また，返す値は "文字列" です。 したがって FlashPlayer7 以降でも一応は使用できます。 「_droptarget」 自体は決して使用禁止ではありませんが， 四面楚歌状態で，どうにも動きが取れない存在だとわかります。 こういうものは色々な面で悩むだけ損なので最初から避ける方が良いです。 （携帯のFlashLite1.0でもドラッグは使えませんから忘れた方が良い存在です。） ※誤解されては困るので念のためさらに補足です。 　決して 「古いスクリプト＝ダメ」 ということではありません。 　「バージョン相応のものを使う」 ということが大切なのです。 わかりきったスクリプトであっても， ヘルプとかネットとかでしょっちゅう調べながら， 色々なバージョンのものを作成していると， この辺の感覚は身につきます。 　
exeである限り無理です。 また、インターネット上から実行ファイルを実行させる行為がどれだけ危険か理解されていますか？　 結論から言えばウイルスと一緒です。 実行されるのはそれを見ているPC上からですから、悪意ある実行ファイルが実行された場合、その実行しているPCの内部に被害をもたらすことになります。 そのexeを再生して動画としてキャプチャしたものを上げてください。
私はズレではなく、 flashで動画で書き出してカクカクしたことがあったのですが 原因は、動画データを再生する際の ＰＣの処理速度に問題があったらしく ＤＶＤに焼いたら全く問題ありませんでした。 一度、ＤＶＤに焼いてみて、動画自身に問題があるのか 単なる処理落ちなのか調べてみてはいかがでしょうか。
_root（メインムービーのタイムライン）の直下に， 「continue_btn」と「save_btn」というインスタンス名を付けたボタンがあった場合， 　_root 　　　├ continue_btn（続きからボタン） 　　　└ save_btn（セーブボタン） _root の フレーム1 とかその辺りのフレームのキーフレームに， 次のようなスクリプトを書けば良いと思います。 ----------------------------------------- // とりあえず _root の再生を停止 _root.stop(); // SharedObject my_so を作成し saveData データを得る var my_so:SharedObject = SharedObject.getLocal("saveData"); // 「続きから」ボタン continue_btn クリック時の動作定義 continue_btn.onRelease = function() { // もし my_so 内データの frame_num 存在していなければ if (my_so.data.frame_num == undefined) { // _root を フレーム2 から再生 _root.gotoAndPlay(2); } else { // _root を my_so 内データの frame_num から再生 _root.gotoAndPlay(my_so.data.frame_num); // --- // my_so 内データの frame_num の値を出力（検証用） trace("前回セーブしたフレーム番号="+my_so.data.frame_num); // my_so 内データの hensuu の値を出力（検証用） trace("前回セーブした適当な値="+my_so.data.hensuu); } }; // 「セーブする」ボタン save_btn クリック時の動作定義 save_btn.onRelease = function() { //（_root の再生を停止(要不要は不知) ） _root.stop(); // my_so 内データの frame_num に _root の現在フレームを保存 my_so.data.frame_num = _root._currentframe; // my_so 内データの hensuu に適当な値を保存 my_so.data.hensuu = Math.floor(Math.random()*100); // --- // my_so 内データの frame_num の値を出力（検証用） trace("今回セーブしたフレーム番号="+my_so.data.frame_num); // my_so 内データの hensuu の値を出力（検証用） trace("今回セーブした適当な値="+my_so.data.hensuu); }; ----------------------------------------- 　
http://z-temp.hp.infoseek.co.jp/2ch/flash_faq.htm ↑こちらのサイトで初歩的な事から、説明されています。本ではありませんが、参考になれば、光栄です。
インストールされたものはブラウザ(Internet Explorer ?)のプラグインと してのFlashPlayerだと思われますので単独での実行はできません。 (ブラウザの中でFlashが表示できるようになります。) バージョンの確認は以下のURLをブラウザで開くことによって確認できます。 http://www.adobe.com/jp/support/flashplayer/ts/d …
ものによるので何とも言えません。 また，作者の意向にもよります。 そもそも携帯用には 320×240 などで作成しますが， PCではこういうサイズで良いのか悪いのかということもあります。 また， 携帯で Flash の SWF を再生させるには， インタラクティブ再生（SWFだけを全画面表示）と インライン再生（HTMLの中にSWFを表示）の２種類がありますが， PCの場合SWFをブラウザで直表示させることはまずありません。 携帯の場合はSWFを直表示さないと通常ボタンなどが動作しません。 さらに， インライン再生の場合でも携帯の場合とPCの場合では， SWFを表示させるタグが若干違いますし，携帯はEMBEDは無効です。 ---携帯のタグ例--- <object data="○○.swf" type="application/xshockwaveflash" width="100" height="100"> <param name="bgcolor" value="#FFFFFF"> <param name="loop" value="on"> <param name="quality" value="high"> </object> その他， FlashLite1.0，1.1 では， 時計などを作成するときに使用するDateオブジェクトが存在しないので使えません。 FlashLite1.1 では，代わりに fscommand2関数 が使用できるので時計は作成できます。 その他，携帯のバッテリーの状態，電波信号の受信度合なども， fscommand2 を使用して取得できます。 携帯 Flash の目玉的役割を果たすのがこの fscommand2 です。 「携帯Flashで待ち受け画面を作る(Flash Lite 1.1)」 http://www.attainj.co.jp/ja/mlt/fl7.html しかし，このfscommand2関数 は， PC用のFlashPlayerでは全く受けつけません。 ボタンもなくて， ActionScriptも gotoAndPlay とか stop 辺りしか使わず， ただアニメーションが流れるだけの軽量のSWFで良ければ， > １．Flash Liteを使用することでPC・携帯電話ともに >　FLASHが閲覧できるSWFが作れる。 のかもしれません。 単なる動画に近い物です。 しかし， 普通はそういうことはまずないので， > ２．既存のホームページに加え、Flash Liteを使用して > 　携帯電話用ページを新たに作る必要がある。 となるのが普通です。 なお，本題とはあまり関係がありませんが， 「Flash Liteを使用して携帯電話用ページを作る」 ということはできません。 Flash Lite とは，携帯用の FlashPlayer，もしくは 携帯用の FlashPlayer で再生できるコンテンツを指します。 プレーヤーで Flash Lite 用のSWFを作成することはできません。 Adobe の Flash Lite 用 アップデートのページにも， > Adobe Flash Lite用モバイルコンテンツをオーサリング、テスト、パブリッシング。 などと書いてあります。 「Flash を使用して Flash Lite用ページを作る」 という意味で，ご質問の １． と ２． の項目を解釈しました。
> やはりaction scriput3.0を使わなければならないのでしょうか？ よくある古典的なスライドメニューですから， 特にActionScript3.0を使わなければならないようなことはないと思います。 書くのも何ですが， 提示されているFlashの場合， 古典中の古典的 AS，gotoAndPlay だけで動きを変えています。 初代 Flash でも作成できる動きです。 メニューをスライドさせている動きに関してはモーショントゥイーンです。 ４つのムービークリップをモーショントゥイーンで動かしてスライドさせています。 動きを見ればだいたいわかります（動きにミスもあるのでモーショントゥイーンだとすぐにわかりました）。 検証のため，悪いと思いましたが， http://www.maxline.co.jp/swf/topFla.swf の SWF を保存させてもらって(上の文字を「右クリック」→「対象をファイルに保存」)， Flash を起動して新規ドキュメントを作成し， 「ファイル」→「読み込み」→「ステージに読み込み」でそのSWFを読み込んで見ました。 SWF を読み込むと， モーショントゥイーンやActionScriptは見えなくなって，387個のキーフレームがダーっと出てきます。 パブリッシュ後はこうなってしまいますが， 元はモーショントゥイーンで動かしていたものと考えられます。 全てのメニューが開くパターンのアニメーションをあらかじめ作成しておいて， ４つの各ムービークリップの上レイヤー辺りで同じく透明ボタンもスライドさせて， そのボタンに， on(rollOver){ gotoAndPlay(目的のフレーム); } などを書いて _root のタイムラインの再生箇所を変えているだけです。 "変えているだけ" と言っても作成はかなり大変で力業です。 地道にコツコツと作られています。 書かれていらっしゃる Flash の， 「WEBシステム」のスライドにロールオーバーして， いったんFlash上からマウスをはずし， 「ASP」のスライドにロールオーバーすると， 「WEB作成」スライドが奇妙な動きをします。 ここが モーショントゥイーン 作成上のミスです。 全てのロールオーバーする場合を考えてモーショントゥイーンを作成されているので， おそらく作成途中で頭がこんがらがってしまわれたのだと思います。 ４枚のスライド（ムービークリップやボタン）が左右に動くモーショントゥイーンで作成する動きは12通りです。 下の図を参考に考えてみてください。 このような力業の地道なものではなくて， もっと ActionScript を使って楽をしたい場合は， Google検索例 「スライド メニュー FLA」 http://www.google.co.jp/search?hl=ja&q=%E3%82%B9 … などと検索すると色々な情報が出てくると思いますよ。 しかし， このような力業の地道な方法はFlashの基本です。 難しい ActionScript を考える前に閃いたり作成できて当然の事項です。 基本が大切です。 ※下に画像が見えない場合は 　 OKWave からこのページにアクセスすると見えると思います。 http://okwave.jp/qa4508149.html ※添付画像のメモ 　 アップロード前のファイル容量 78.5KB(80,444バイト)JPEG 　 アップロード前の大きさ 横幅400px×高さ314px
> ムービークリップをｘ座標２０、ｙ座標２０に移動した場合にフレームをストップ ピッタリキッチリ x=20，y=20 ですか？ 意図的にそうすればできますが，普通はあまりピッタリキッチリ x=20，y=20 になることはありません。 また，意図的に x=20，y=20 にするのでしたら， その意図的に x=20，y=20 にするタイミングで stop(); させれば良いことになります。 最初からムービークリップの座標を監視する必要はないと思いますが。 その辺がどうも不可解ですが， 一応書いてみると次のような感じで監視できます。 Flash のバージョンを書かれていらっしゃいませんが， FlashのバージョンやFlashPlayer対応のSWFのバージョンやActionScriptのバージョンで方法などは大きく変わることがあります。 質問の際には必ず明記する方が良いです。 勝手に Flash MX 以上，ActionScript1.0 ということで回答します。 _root の直下に 「my_mc」 というインスタンス名のムービークリップがあって， その 「my_mc」 が動き回っていたとします。 　_root（ムービーのメインのタイムライン） 　　　└my_mc（ムービークリップ） その場合，フレームに書くスクリプトです。 ----------------------------------------------- // １フレーム進む時間毎に随時実行 _root.onEnterFrame = function() { // my_mc の _x が 20 なおかつ _y が 20 のとき if (_root.my_mc._x == 20 && _root.my_mc._y == 20) { // _root のタイムラインを再生停止 _root.stop(); // この onEnterFrame イベントハンドラメソッドを削除 delete _root.onEnterFrame; } }; ----------------------------------------------- ムービークリップの座標を監視する必要が有ある場合， たいていは，ピッタリキッチリなんてことは起こらないので， 許容範囲エリアを想定して，その範囲内エリアに入ったとき何かを実行させます。 もしくは MovieClip.hitTest などでムービークリップどうしの当たり判定を取ります。 どちらにしてもある程度の許容範囲エリアが存在します。 許容範囲が 20±5 のときの例 ----------------------------------------------- // １フレーム進む時間毎に随時実行 _root.onEnterFrame = function() { // my_mc の _x が 15 以上 なおかつ 25 以下 なおかつ // _ｙ が 15 以上 なおかつ 25 以下 のとき if (_root.my_mc._x>=15 && _root.my_mc._x<=25 && _root.my_mc._ｙ>=15 && _root.my_mc._y<=25) { // _root のタイムラインを再生停止 _root.stop(); // この onEnterFrame イベントハンドラメソッドを削除 delete _root.onEnterFrame; } }; ----------------------------------------------- ※下に画像が見えない場合は 　 OKWave からこのページにアクセスすると見えると思います。 http://okwave.jp/qa4507011.html ※添付画像のメモ 　 アップロード前のファイル容量 29.6KB(30,404バイト) JPEG 　 アップロード前の大きさ 横幅220px×高さ250px
Flash のバージョンも書かれていませんが...。 また DrawingObject とは全く聞き慣れない言葉です。 Flash8以降に追加された 描画オブジェクト のことかもしれません。 矩形ツール や 楕円ツール など， 描画ツール を選択した状態で， そのツールパネルの左下にある レンズ のようなボタンを押した状態で何かを描くと， 「描画オブジェクト」 として絵が描画されます。 レンズ のようなボタンを押さない状態で何かを描くと， 「シェイプ」 として絵が描画されます。 ※ 添付画像メモ 　　アップロード前ファイル容量 42.1 KB (43,178 バイト) JPEG 　　アップロード前の大きさ　横幅 250px × 高さ 400 px
動かしたいムービークリップ名.onPress = function() { 　this.startDrag(false); }
＃１～３ です。 > 画像は見れないみたいですね＾＾； > 早速、回答のスクリプトで試してみます。 見えませんでしたか。 すみません確認不足でした。 「教えて！goo」で同ページを見てみましたら，確かに 12/3 ぐらいまで調整中とかで見えませんでした。 「OKWave」だと見えると思います↓。 http://okwave.jp/qa4506486.html 「提携サイトによって見えないことがある」など注意書で書いていてほしいものですね。 見えない（添付できない）側の「教えて！goo」 には書いてあるのに， 見える（添付できる）側の「OKWave」には書いてないからわかりませんでした（ブツブツ...）。 しかし見えても， 何も考えてないずさんなリサイズ と ひどい圧縮 でかなり無気味な画像に変身してしまっています。 ゲゲゲの鬼太郎 でも出てきそうな恐くて汚い状態で，文字も判別しにくいです。 （かなりイライラ状態。） この回答以外に他の回答でも画像を添付してデータを取ってみました。 ・この回答＃３での画像 JPEG 　アップ前…79.0KB(80,927バイト) 横580px×縦500px 　アップ後…26.4KB(27,123 バイト) 横420px×縦314px ・他の回答での画像 JPEG 　アップ前…42.1KB(43,178バイト) 横250px×縦400px 　アップ後…15.6KB (15,976バイト) 横420px×縦314px 　　　　　　　（左右に黒い余白付き） どうやら縦横のどちらか一方が横420px×縦314pxを超えると， 強制的に 横420px×縦314px になってしまうようです(比も変わる！)。 というわけで， それように作成し直してみました。 画像の縦横サイズを合わせれば圧縮度合も下がるかもしれません。 ※今回添付画像のメモ 　 アップロード前のファイル容量 69.2KB(70,897バイト) JPEG 　 アップロード前の大きさ 横幅400px×高さ314px
<script type="text/javascript" > <!-- fData = new Array(); fData[0] = "./swf/a.swf"; fData[1] = "./swf/b.swf"; fData[2] = "./swf/c.swf"; fData[3] = "./swf/d.swf"; fData[4] = "./swf/e.swf"; fName = fData[Math.floor(Math.random()*5)%fData.length]; html = '<object data=" '+fName+' " '; html += ' width="200" height="55"'; html += ' type="application/x-shockwave-flash">'; html += '<param name="movie" value=" '+fName+' ">'; html += '<param name="loop" value="">'; html += '<param name="quality" value="high">'; html += '<param name="bgcolor" value="#000">'; html += '<param name="wmode" value="" >'; html += '</object>'; //--> </script> <body> <script type="text/javascript" > <!-- document.write(html); //--> </script>
キャンバスサイズ？ フラッシュだからドキュメントサイズのことかな？ ドキュメントサイズより大きいサイズで見えるのは プレビューで確認する時でしょうか？ だとするとウィンドウが最大化されていてよけいなものまで表示されているだけでは？ パブリッシュして確認するとドキュメントサイズだけになりませんか？
シーンの仕様は ActionScript と非常に相性が悪く， 昨今は殆ど使用されることはありません。 「シーン (Scene) とは FLASH関連用語集」 http://www.mitsue.co.jp/case/design/f_002.html 　～引用～ > ActionScriptを多用する場合など、 > 逆に作業が煩雑になる場合もありますので、 > 極力シーンは使わない方が無難でしょう。 シーン を使ったフレーム移動は， ムービークリップ内のボタンなどからは操作できませんが， ボタンA，B などをムービークリップの中に作成されているということはありませんよね？ 「gotoAndPlay/gotoAndStopでシーンの移動ができない」 http://www.fumiononaka.com/TechNotes/Flash/FN020 … 上記のようなムービークリップ内のボタンではないものとして続けます。 ご質問からの引用です。 > on(release){ > gotoAndPlay("シーン2","1"); > } この中におそらく２箇所の間違いがあります。 １箇所は ＃１ の方も指摘されていますが， gotoAndPlay() の２つ目の引数は "1" ではなく 1 です。 もう１つは， おそらく 「シーン 2」 は自動追加作成されたシーンだと思うので， シーン と 2 との間に 半角スペース が必要です。 gotoAndPlay("シーン 2", 1) "シーン 2" 　　↑ ダブルクォーテーション「"」 ＋全角カタカナ「シーン」 ＋半角スペース「 」 ＋半角数字「2」 ＋ダブルクォーテーション「"」 これ１つを考えただけでも，シーンの使用は面倒で煩雑になりがちです。
自分が最初に買ってよかったシリーズです。 http://www.amazon.co.jp/%E3%81%8A%E3%81%97%E3%81 … cs3版はまだ発売してないようですね。 ちなみにmx版も持ってますがmx版は ちょっと難しかったので中身は要確認です。 今からactionscript勉強するならバージョン2.0と3.0で 書き方が大きく違い互換性も無いので その辺も調べたほうがよいかと思います。 簡単に補足しますと 2.0 ・タイムラインやムービークリップなどの部品に直接 書くことができる。 ・どちらかと言うと小規模コンテンツ向き ・javascriptに近い文法 3.0 ・基本タイムライン１フレームにまとめて記述。 ・オブジェクト指向記述。 ・flashplayer9以上だと処理速度最大１０倍（だったと思うが） ・どちらかと言うと大規模コンテンツ向き。 ・javaに近い文法、ゆえにプログラマも参戦しやすい。 おそらく流れから行きますと 今後3.0が主流になるのではないかと思われます。 僕もこれから3.0勉強始めます。 お互い頑張りましょう！
テキストフィールドへの文字キーボード入力は有効しておくのが前提条件で， クリップボード経由の文字貼り付けを禁止したいということですよね？ 単なる１つのアイデアだけですが， System.setClipboard("文字列"); でクリップボードに文字列を入れることができます。 テキストフィールド上でMOUSE_DOWN したときなど，何かの拍子に， ""（空白文字列） を記憶させてしまえば良いのではないでしょうか。 つまり， クリップボードの中身を消してしまうということです。 「ActionScript3.0 テキスト処理 - kozy.heteml.jp」 http://kozy.heteml.jp/pukiwiki/index.php?ActionS … 　↓ 　クリックしたテキストを選択状態にしてクリップボードにコピー これの逆パターンみたいにするというような意味です。
> トゥイーン機能を使用せず、コマ上に配置するだけの > 場合はシンボルに変換する必要はないのでしょうか？ ありませんよ。 > シンボルに変換せずにすむならばそのままで使いたいですが、 > それでデータが重くなったり、バグが起こりやすい等の問題があるのならば > やはりシンボルに変換したいと思っています。 バグは起こらないでしょう。 JPEG などビットマップ画像をそのままステージに置いた場合， 表示上ピクセルのズレが起こって， 一部が少しがたついて表示されることがあるらしいですが， 些細な表示結果ですから，気にしなければ大丈夫です。 問題はJPEGなどビットマップ画像ではなくて， Flashで描いたシェイプなどベクタ画像です。 JPEG などビットマップ画像は，シンボルに変換しなくても， いったんシンボルとして画像が登録されますから， それの使い回しがステージ上に表示されます。 ベクタ画像の場合は描いただけではシンボルに登録されませんから， 複数フレームに同じ画像が使われていると， 毎フレーム分の画像データが必要で， フレームごとにそのデータ容量が加算されます。 シェイプトゥイーンなどをさせなくても加算されます。 たとえば， 10秒間のエンドロールの背景に静止画のJPEGを置いた場合と， １分間のエンドロールの背景に静止画のJPEGを置いた場合とでは， ほとんどファイル容量は変わりません。 10秒間のエンドロールの背景に静止画のベクタ画像を置いた場合と， １分間のエンドロールの背景に静止画のベクタ画像を置いた場合とでは， かなりファイル容量が変わります。 静止させたままであっても， ベクタ画像の場合はシンボル化したインスタンスを配置する方が良いです。
ソースが構成されているかの情報がありませんので憶測ですが 1フレーム目にクリックしたときにアニメーション開始の命令があり アニメーション完了後、再生ヘッドが最終フレームにあるため 何も起こらないのではないでしょうか？ アニメーション完了後、再生ヘッドを1フレーム目に戻せば動作するように 思えます。(gotoAndStop(1);)
Button コンポーネントがライブラリにある前提で 以下のようなソースで如何？ ----------------------<以下ソース>----------------------------- this.attachMovie("ScrollPane","scp",this.getNextHighestDepth()); scp.setSize(510,430); scp._x = 10; scp._y = 10; scp.contentPath = "image/test.jpg"; scp.attachMovie("button","btn1",this.getNextHighestDepth()); scp.btn1._x = 100; scp.btn1._y = 100; scp.btn1.label = "ボタン";
回答番号：No.1です。 ご質問の件ですが、下名の環境では "Path To Flash IDE" は 空欄になっていました。
インスタンスのタイプを[ボタン]にせず、[ムービークリップ]に変換します。 インスタンスに適当な名前を付けます。 例　btn01 , btn02 , btn03 , btn04 メインフレームにスクリプトを書きます。 btn01.onRollOver = btn02.onRollOver = btn03.onRollOver = btn04.onRollOver = function() { 　stop(); } btn01.onRollOut = btn02.onRollOut = btn03.onRollOut = btn04.onRollOut = function() { 　play(); }
根本的に意味がさっぱりわからないというのが，正直なところですが， 一応回答します。 Flash で使われる ロスレス は， 一般的にはビットマップ画像をSWF内にコンパイルするときに使う圧縮に関することですから， loadMovieする場合は全くこれとは関係ありませんね。 （圧縮してもしなくても，SWF上にロードされるファイル容量に変わりはないので受け手であるFlashPlayerで圧縮しても意味がない。） また， ムービークリップ や _root の _quality プロパティが， "LOW" であっても，"BEST" であってもこの場合は関係ありません。 つまり， 外部ビットマップ画像をロードした場合は， 基本的に圧縮されることもありません。 また，ペクトルではないので， 表示上アンチエイリアスみたいなものがかかるかからないは関係ありません。 「画像そのもの」，「画像そのまま」を表示すると思います。 「画像そのもの」，「画像そのまま」というのは， IE などブラウザに直接表示させたときとほぼ同じように見えるということです。 frame_mc.loadMovie("image.png"); で読み込んだ 「image.png」 が， 拡大も縮小もさせずに元の絵から劣化するということでしょうか？ そういう経験は一切ないのでわかりませんが。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 以下は私の勝手な推測です。 ご質問は，ロスレス とかそういうことではなくて， 「image.png」 をロードしたものを "拡大縮小させたとき" に， エッジのギザギザが目立たないように「スムージング」をかけて表示させたいということではないかと思います。 あくまでも私が勝手に思うだけです。 「image.png」 をロードしたものを拡大縮小させたときに， エッジのギザギザが目立たないように「スムージング」をかけるには次のような方法をとります。 frame_mc.loadMovie("image.png"); を消して， それを書かれた同じフレームに書くスクリプトです。 ----------------------------------------- // display クラス をインポート import flash.display.*; // ロード用のダミーMCを見えない座標に作成 var dummy:MovieClip = this.createEmptyMovieClip("dmy_mc", this.getNextHighestDepth()); dummy._x = 10000; // MovieClipLoader クラスのインスタンスを作成 var MCL:MovieClipLoader = new MovieClipLoader(); // ロード監視用のオブジェクトを作成 var OBJ:Object = new Object(); // 画像ロード完了時の動作定義 OBJ.onLoadInit = function(Target:MovieClip):Void { // 背景色透明のBitmapDataインスタンス BMD を作成 var BMD:BitmapData = new BitmapData(Target._width, Target._height, true, 0); // BMD に ターゲットMC（ロード用のダミーMC） を写し取る BMD.draw(Target); // ターゲットMC（ロード用のダミーMC）は要らないので削除 Target.removeMovieClip(); // frame_mc の深度 0 にスムージング true で BMD を呼びだす frame_mc.attachBitmap(BMD, 0, "auto", true); }; // MCL のリスナーとして OBJ を登録 MCL.addListener(OBJ); // 「image.png」 を dummy をターゲットとしてロード MCL.loadClip("image.png", dummy); ------------------------------------------- こうした場合， 外部からロードした画像であっても， 拡大/縮小/回転 などのときに画像にスムージングがかかります。 スムージングがかかると言ってもFlashPlayer は再生専用ソフトであって画像処理ソフトではないので， Photoshop など，画像処理ソフトなどの演算にはかないません。 ほんの少しシャギるのがごまかせる程度です。 ご質問には肝腎な Flash のバージョンなどが抜けていますが， 外部画像として 「image.png」 などPNGがロード表示できるようになったのは，Flash8以降（FlashPlayer8以降）です。 また loadMovie は ActionScript2.0 以下で使用できます。 したがって， お持ちのFlashのバージョンは Flash 8 または CS3 で， ActionScript2.0 以下を使用している状態であるということがわかります。 上のスクリプトも， SWF のパブリッシュ設定 FlashPlayer8 以上， ActionScript のバージョンを ActionScript2.0 に設定しておくという条件で初めて動作するスクリプトです。 以上， ロスレスに関する勝手な推測が間違っていたらすみません。
ご質問は ActionScript2.0 ですよね。 方法は無数にあります。 ・attachMovie で呼びだすシンボルを切り替える ・loadMovie でロードする外部画像を切り替える ・ムービークリップの _visible (表示) を切り替える ・ムービークリップの _alpha (不透明度) を切り替える ・ムービークリップの _x や _y (座標) を切り替える ・swapDepths でムービークリップの深度を切り替える ・gotoAndStop でムービークリップ内のフレームを切り替える 　～などなど～ 　そして各パターンのバリエーションや組み合わせもあります とりあえず， オーソドックスで， これくらいはすぐに思い付かなければならない gotoAndStop の方法を取るのが良いのではないでしょうか。 （gotoAndStop くらいは使えなければ Flash を全く使えないに等しいことだと思います。） ◎gotoAndStop でムービークリップ内のフレームを切り替える方法 ステージ上に 「鳥の画像」 を描くか，もしくは読み込んで配置します。 そのステージ上の 「鳥の画像」 を選択し， 「修正」→「シンボルに変換」などでムービークリップに変換します。 その 「鳥の画像」 入りムービークリップをダブルクリックするなどして ムービークリップ内のタイムラインの編集に入ります。 ムービークリップ内にはレイヤーが1つでフレーム1に 「鳥の画像」 があるだけだと思います。 そのレイヤーのフレーム2を選択して， 右クリック→「空白キーフレームの挿入」などで，フレーム2を空白キーフレームにします。 その何もないフレーム2のステージ上に， 「シマウマの画像」 を描くか，もしくは読み込んで配置します。 つまり，簡単に書くと， 　ムービークリップ内のフレーム1には「鳥の画像」を用意し， 　ムービークリップ内のフレーム2には 「シマウマの画像」を用意する。 というだけのことです。 ムービークリップ内タイムラインの編集は以上で終わりですから， ステージ上の何もない部分をダブルクリックするなどしてメインのタイムラインの編集に戻ります。 メインのタイムラインの編集に戻ると「鳥の画像」だけが表示されたムービークリップがあると思います。 このムービークリップを選択して， 下のプロパティインスペクタでインスタンス名を付けます。 たとえば，画像が入っているので， 「Gazou_mc」 というインスタンス名を付けます。 その「Gazou_mc」とは違う場所にボタンを用意します。 そしてボタンにもインスタンス名を付けます。 たとえば，画像を変えるので， 「Change_btn」 というインスタンス名を付けます。 以上で， ステージ上に「見える物（DisplayObject）」の準備は終わりです。 ActionScript用にレイヤーを１つ追加して， そのレイヤーのキーフレームに次のように書きます。 --------------------------------------- // 「Gazou_mc」 の再生を停止 Gazou_mc.stop(); // 「Change_btn」ロールオーバー時の動作を定義 Change_btn.onRollOver = function():Void { // 「Gazou_mc」内を フレーム2 に進めて停止 Gazou_mc.gotoAndStop(2); }; --------------------------------------- これで， 　ボタン「Change_btn」にロールオーバーしたとき， 　ムービークリップ 「Gazou_mc」 の画像が 　「鳥の画像」 から「シマウマの画像」に変わる。 というものができます。 もし， ロールアウトしたときやドラッグアウトしたときに元の 「鳥の画像」 に戻したいのでしたら， 上のスクリプトを次のようにすればできます。 --------------------------------------- // 「Gazou_mc」 の再生を停止 Gazou_mc.stop(); // 「Change_btn」ロールオーバー時の動作を定義 Change_btn.onRollOver = function():Void { // 「Gazou_mc」内を フレーム2 に進めて停止 Gazou_mc.gotoAndStop(2); }; // 「Change_btn」ロールアウト＆ドラッグアウト時の動作を定義 Change_btn.onRollOut = Change_btn.onDragOut = function():Void { // 「Gazou_mc」内を フレーム1 に戻して停止 Gazou_mc.gotoAndStop(1); }; --------------------------------------- 　何かに困ったら， 　とりあえず gotoAndPlay や gotoAndStop で考えてみる。 今も昔もそれが良いように思います。 play()， stop();，gotoAndPlay();，gotoAndStop() は， 結構オールマイティで様々なことに使えます。 「ムービークリップはActionScriptで作成する」など何らかの理由で， ムービークリップ内のフレームを複数にしたくないまたはできないという場合は（AS3のスプライト的なもの）， ムービークリップ内に attachMovie で呼びだすシンボルを切り替えても良いかもしれません。 　
＃１ です。 > 上記の条件の場合、 > Maskされる対象(BBB_mc)とMaskするMovieClip(AAA_mc)の間に > 画像を一枚挟むと、BBB_mcは見えなくなってしまいます。 ご質問は setMask を使った方法であって， 決してレイヤーのマスクを使うご質問ではありませんよね。 そうだとするならさっぱり意味がわかりません。 setMask を使う場合， ムービークリップのレイヤーは全く関係ありません。 こう↓しても良いですし， 　レイヤー2　|●| ←「AAA_mc」（マスクになるMC） 　レイヤー1　|●| ←「BBB_mc」（マスクをかけられるMC） こう↓しても良いですし， 　レイヤー2　|●| ←「BBB_mc」（マスクをかけられるMC） 　レイヤー1　|●| ←「AAA_mc」（マスクになるMC） こう↓しても良いですし， 　レイヤー9　|●| ←「AAA_mc」（マスクになるMC） 　レイヤー8　|●| ←違う何か 　　…　　　　…　　　　　… 　レイヤー2　|●| ←違う何か 　レイヤー1　|●| ←「BBB_mc」（マスクをかけられるMC） こう↓しても良いのです。 　レイヤー9　|●| ←「BBB_mc」（マスクをかけられるMC） 　レイヤー8　|●| ←違う何か 　　…　　　　…　　　　　… 　レイヤー2　|●| ←違う何か 　レイヤー1　|●| ←「AAA_mc」（マスクになるMC） 間に何か挟まるとか挟まらないとかが関係しないどころか， 「AAA_mc」 と 「BBB_mc」 自体の上下関係自体も全く関係ありません。 そういうものはどうでも良くて， マスクに関係あるのは 「AAA_mc」 の座標と 「BBB_mc」 の座標です。 > 画像を一枚挟むと、BBB_mc は見えなくなってしまいます。 これは単に， 挟んだ画像（つまり BBB_mc より上に置いた画像）によって， BBB_mc が見えなくなったというだけではないでしょうか？ （ マスク以前の問題で， 　またFlash以前の問題で， 　ミカンの上に布巾をかぶせると 　ミカンは見えなくなります（当たり前）。） それと， 「マスクがかからない状態」 というのは 「すべてが見える状態」 ですよ。 「マスクがかかった状態」 というのが 「マスクの部分しか見えない状態」 です。 そこのところはわかっていらっしゃいますか？ > BBB_mcは見えなくなってしまいます。 それだと， もし BBB_mc を覆い隠すような画像がないとするなら（ミカンを覆い隠す布巾がないとするなら） 少なくとも，マスクがちゃんとかかっている状態であるということになります。 もし，マスクがかかっていなければ逆で，何もしていない状態，つまり 「すべてが見える状態」 になります。 「BBB_mc に AAA_mc のマスクをかける」ということは， 「BBB_mc のうち AAA_mc と重なった部分だけが見える」 ということです。 AAA_mc と BBB_mc に重なった部分（座標的に重なった部分）がない場合は， BBB_mc は全体が見えなくなります。 BBB_mc にちゃんと AAA_mc のマスクがかかっているからこそ， BBB_mc全体が見えなくなるということです。 わかりますか？ AAA_mc と BBB_mc の座標がずれていないかどうかと， 画像によって BBB_mc が覆い隠されていないかどうかをチェックしてみてください。 当たり前すぎて書くのも何ですが...， もし，BBB_mc を覆い隠す何かがある場合は， 　（＝もし，ミカンを布巾で覆い隠している場合は，） BBB_mc のあるレイヤーを覆い隠したもののレイヤーより上にしてください。 　（＝布巾の上にミカンを置いてください。） そうすれば，BBB_mc が何かによって見えなくなることはありません。 　（＝そうすれば，ミカンが布巾によって隠されることはありません。） 　（泣きそうに当たり前...(ノ_・、)シクシク。） レイヤーの入れ替えをどうしてもスクリプトで解決したい場合は， 全くお薦めできませんが， 次のスクリプトをフレームのスクリプトの最初辺りにでも付け加えてみてください。 ---------------------------------- // BBB_mc を最高深度 にする BBB_mc.swapDepths(this.getNextHighestDepth()); ---------------------------------- これで， BBB_mc が最上深度に躍り出ますから， それを隠すような何かはなくなります。 繰り返しますがこれはお薦めできない方法です。 マスクに関してちゃんと理解した上で， 深度についてもちゃんと理解した上で， なおかつ， フレームがループ再生をしないような Flash を作成するときのみ使うべきものです。 （理由や原理がわかっていてもこういうときには普通は使わない。） 　
深度に原因があるというよりも、フレーム移動に原因があります。 OKWave「【FLASH】swapDepthsでＭＣが増殖する？？」 http://okwave.jp/qa2679897.html OKWave「シーン移動後に移動前のmcが残って表示される」 http://okwave.jp/qa2033432.html
私も携帯には詳しくないのですが、以下のQ&Aの回答番号：No.1が参考に なります。 http://qanda.rakuten.ne.jp/qa4467777.html 制限があるようですが、FlashPlayer4 でパブリッシュしたswfファイルは FlashLite1.0対応の携帯で見ることができる可能性が高いようです。
反応させたくないMovieClipのmouseEnabledプロパティをfalseに設定するとマウスに反応しなくなります。 ------- MovieClip.mouseEnabled = false; -------
＃１です。 > ご回答していただいた写真の枚数は5枚でしたが、 > 枚数制限を無くし、連番での画像の加減で > ロードさせるにはどうすればいいのでしょう。 例を 5 にしただけですから，5 の部分を全て 10 にすれば 10枚 になります。 画像の枚数が変わる旅に一々変更するのが面倒な場合は， 5 を何かの変数に入れておいて， その変数で数を指定すれば良いと思います。 例： // 画像の枚数を5枚に設定（5は変える） gazouNum = 5; // load_mc1～gazouNum を作成（本当は手動で作成すると思いますが） for (var i:Number = 1; i<=gazouNum; i++) { // 空のムービークリップ load_mc1～gazouNum を深度 i に作成 var _mc:MovieClip = this.cr … 　～ 略 ～ // ロード中 表示のテキストフィールドを作成（本当は手動で作成...） var _txt:TextField = createTextField("load_txt", gazouNum+1, 120, 100, 60, 20); 　～ 略 ～ // カウントが gazouNum になったら if (cnt == gazouNum) { // load_mc1～gazouNum を表示 for (i=1; i<=gazouNum; i++) { me["load_mc"+i]._visible = true; 　～ 略 ～ // 1～gazouNum.jpg を load_mc1～gazouNum をターゲットにしてロード for (i=1; i<=gazouNum; i++) { _mcl.loadClip(i+".jpg", "load_mc"+i); } - - - - - - - - - - - - - - > 連番での画像の加減で > ロードさせるにはどうすればいいのでしょう。 これって，ひょっとして， 用意した画像の最終番号を自動取得するというような意味でしょうか？ それだと普通 ActionScript では無理ですよ（しません）。 PHP などであるフォルダ内にある画像のファイル名を取得して， なんとか最終番号を判別するようなプログラムが必要になります。 また， その判別した最終番号をFlashで受け取る別のしくみも必要です。 ＃１ で書いたように一気に5枚のJPEGをロードするのではなく， 1.jpg，2.jpg，3.jpg，… と順次ロードしていって， ロードエラーが出たら（onLoadError）そこまででロードをストップさせる方法もアリかもしれませんが， 普通はしませんね。 Flash でフォルダ内を走査するということは，まずしないことです。 http://pekeflash.atrock.main.jp/?eid=380878
以下のサイトが参考になるかもしれません。 ■Flash の画面表示について 　http://hakuhin.hp.infoseek.co.jp/main/as/stage.h … ■Flashでウィンドウサイズの変更を取得 　http://ameblo.jp/linking/entry-10053519736.html
まず大前提の確認ですが， back_mc【背景】も，main_mc【オブジェクト】も， 基準点を左上のコーナーにしてあるムービークリップですよね （基準点の座標によってスクリプトは変わります）。 また，back_mc【背景】も，main_mc【オブジェクト】も， _root の直下に配置されていますよね。 そういう前提だと， ご質問の日本語通りにスクリプトを書き直すと次のようになります。 ----------------------------------- Stage.align = "TL"; Stage.scaleMode = "noScale"; // // main_mc を初期座標 (600,500) に配置 _root.main_mc._x = 600; _root.main_mc._y = 500; // back_mc のサイズをステージ全体に合わせる _root.back_mc._width = Stage.width; _root.back_mc._height = Stage.height; // // この階層(MC)を Stage クラスのリスナーとして登録 Stage.addListener(this); // // ステージのサイズが変わった時に実行 this.onResize = function() { // main_mc を ステージ中央に配置 _root.main_mc._x = (Stage.width-_root.main_mc._width)/2; _root.main_mc._y = (Stage.height-_root.main_mc._height)/2; // back_mc のサイズをステージ全体に合わせる _root.back_mc._width = Stage.width; _root.back_mc._height = Stage.height; }; ----------------------------------- ActionScriptという言語や， 座標の計算のなどの問題ではなくて， 肝腎の 「何がどうなったときに何をどうしたいのか」 ということ。 これがコーディングに欠けていると思います。 『最初はx=600,y=500 でステージがリサイズされたときに 中央』 これをそのままスクリプトにすると（コーディングすると）， 上のようになると思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ちなみにどうでも良いことですが， 「私の個人的な好みのイメージ」として 上のようなスクリプトにしても 私が思う良い動き ではありません。 また，そうする意味をあまり感じません。 個人的には次のような動きにすると， x=600,y=500 にする意味もわかりますし，イメージ的にもしっくり来ます。 ----------------------------------- Stage.align = "TL"; Stage.scaleMode = "noScale"; // // 中央配置するスピードの変数 spd を設定 // （0以上1未満の数で好みによって変える） spd = 1/8; // // main_mc を初期座標 (600,500) に配置 _root.main_mc._x = 600; _root.main_mc._y = 500; // // この階層(MC)を Stage クラスのリスナーとして登録 Stage.addListener(this); // // ステージのサイズが変わった時に実行 this.onResize = function() { // back_mc のサイズをステージ全体に合わせる _root.back_mc._width = Stage.width; _root.back_mc._height = Stage.height; // 表示を即更新 updateAfterEvent(); }; // 上の this.onResize を即実行 this.onResize(); // // １フレーム進む時間毎に随時実行 this.onEnterFrame = function() { // main_mc を ステージ中央に徐々に移動 _root.main_mc._x += ((Stage.width-_root.main_mc._width)/2-_root.main_mc._x)*spd; _root.main_mc._y += ((Stage.height-_root.main_mc._height)/2-_root.main_mc._y)*spd; }; ----------------------------------- back_mc【背景】 は， 最初表示されたときも，ステージのサイズが変わったときも， ステージのフィットさせています。 一方， main_mc【オブジェクト】 は， x=600,y=500 から徐々に中央配置させています。 つまり， back_mc【背景】 も main_mc【オブジェクト】 も， 全く別のタイミングで全く別の動きをさせています。 イベントハンドラも別々です。 上のスクリプトのようにするにしても，下のスクリプトのようにするにしても， どっちにしても， 「何がどうなったときに何をどうしたいのか」 をしっかりと持つことが肝腎だと思います。
まず、しようとされている事はFlashで実現可能だと思います。 サーバとの通信には、AS2であれば、loadVars.sendAndLoad、 AS33であればURLLoader.loadなどのメソッドを用いて通信可能です。 これらの単語で検索すれば情報は出てきますので調べてみてください。 誤解されているのは、画像データ自体を直接Flashに送信する、という考えです。一般的には、画像の読み込み先のURLをテキスト情報としてFlash側に送り、FlashがそのURLから画像を読み込む、という流れになると思います。(もしも画像データが検索の結果によって生成されるものであれば、一時的にサーバに保存しておく必要があります。) XMLSocketは通常はチャットなどのリアルタイム通信に使用するものなので、今回のケースでは使用する必要はないと思います。 また、ブラウザ上で動作するFlashプログラムを計画しているのであれば、Airはデスクトップアプリですので、そもそも目的が違ってきてしまうように思います。
text プロパティを使います。 例) テキストフィールドへ値を設定する場合 　テキストフィールド.text = 文字列; 　テキストフィールド.text = String(数値); 参考URL：http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
パーツたちは、Stage上に複製されたインスタンスたちを取得して配列に格納したものです。また、このやり方はインスタンス名を取得する必要はありません。 ActionScript3で作った方が早いかも知れません。 下記のURLにアクセスして、Latest Milestone Release BuildsのAdobe Flex SDKの最新版をダウンロードすることが出来ます。これでActionScript3が使えます。 「Download Flex 3 - Flex SDK - Confluence」 http://opensource.adobe.com/wiki/display/flexsdk … また、PHPの方はPHPカテゴリで質問してみてください。詳しく分かる方がいらっしゃると思います。 何かありましたらまた質問してください。頑張ってください。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
色を操作するプロパティとかは、FLASH LITEにはなかったはずなので、 #1番の方のおっしゃっている通りだと思います。 なので、はじめに色ごとにダイナミックテキストを分けておかないといけないみたいです。 どういった動きが欲しくて、 全体的にどういう状況がわからないのですが、 わたしの場合は、 曜日を表示させるダイナミックテキストの入った ムービープリップを、 　　　　フレーム番号|１|２|３| アクションスクリプト|α|α|α| ダイナミックテキスト|●|●|●| という感じで、レイヤー２枚、 上アクションスクリプト 下ムービークリップレイヤー という風に準備します。 フレーム番号順に、左から 同じ変数のダイナミックテキストを設置し 色だけを、 平日：白//1フレーム目 土曜：青//2フレーム目 日曜：赤//3フレーム目 という風に設定しておき、 アクションスクリプトレイヤーは、 全てのキーフレームに、 ---------------------------------------- stop();//このフレームでストップ nowWeek = fscommand2("GetDateWeak);//現在の曜日を携帯から読み取ります。 switch(nowWeek){ case"0"://曜日は0=日曜日だったら gotoAndPlay(3);//３フレーム目に行きましょう break;// case"1"://曜日は1=月曜日だったら gotoAndPlay(1);//1フレーム目に行きましょう break; case"2": gotoAndPlay(1); break; case"3": gotoAndPlay(1); break; case"4": gotoAndPlay(1); break; case"5": gotoAndPlay(1); break; case"6"://曜日は6=土曜日だったら gotoAndPlay(2);//２フレーム目に行きましょう break; } ---------------------------------------- と同じものを記入しておきます。 こうしておくと、曜日を読み取ったときに、自動的に指定された 色のついたダイナミックテキストのフレームでとまるので、 ＞ダイナミックテキストの文字の色を曜日によって変更したい ときは、たぶん、これで変更するように見せられると思います。 前にやったことのうろ覚えなので、細かいところは本や検索サイトで確認してみてください。
共通デザイン部分に、ユーザーが選択する回答ボタンを配置すると、それなりに難易度上がるので、質問内容を表示するムービークリップのフレームそれぞれに、ボタンを配置します。多少コテコテですが、難易度は下がります。 問1　ボタンA1　「はい」　ボタンB1「いいえ」 ボタンA1を押したら、配列に0番目に「0」を格納し、問2-aに移動 ボタンB1を押したら、配列に0番目に「1」を格納し、問2-bに移動 問2-a　ボタンA2　「はい」　ボタンB2「いいえ」 ボタンA2を押したら、配列に1番目に「0」を格納し、問3-aに移動 問2-b　ボタンA2　「はい」　ボタンB2「いいえ」 問3-a　ボタンA3　「はい」　ボタンB3「いいえ」 スクリプトは、自分で考えてください。 代行者じゃないので。
flash側に値を渡す方法として、flashVarsを試されてはいかがでしょうか。 どうしてもurlパラメータで値を渡すのであれば、セパレータをメタ文字以外にした方が、スマートのような気がします。単純にセパレータで分割して配列に格納できればいいのであれば、セパレータは「あいうえお」でも「かきくけこ」でも、実際のデータと重複さえしなければ何でもいけそうですよね。もっとも膨大なデータベースを処理する場合に、あまり長いセパレータは向きませんが。 参考URL：http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 …
発想を転換されては如何でしょうか？ gif画像形式に拘らず2枚の画像を用意し、タイムライン上で再生させれば良いのでは？
「画像」にはスクリプトは書けませんから、 まずは「画像」を「ボタン」か「スプライト」にする必要があります。 書かれていらっしゃるように、 単にクリックしたら別のページを表示させるだけのようなものでしたら、 「ボタン」にする方が良いと思います。 １.シンボルリストを右クリック→アイテムを追加→ファイル追加で 　 用意した「画像」をシンボルリストに追加 ２.シンボルリストを右クリック→アイテムを追加→ボタン追加で 　 通常時(必須)に、用意した「画像」を指定して「OK」をクリック ３.「ボタン」をレイヤーに追加 ５.「ボタン」配置したレイヤーのキーフレームを選択 ６.右下の「スクリプトの編集」ボタンをクリック ７.「スクリプトエディタ」に以下のコードを記入する on(release){ getURL("リンク先のURL"); } こんな感じで作成します。 任意のサイトのページを開くと言っても、色々な開き方があります。 次のページが参考になるかもしれません。 「Suzuka 基礎・基本 getURL」 http://suzupara.iinaa.net/kiso081.html --- --- --- また、サイトのページを開くくらいのことでしたら、 ActionScriptが必ずしも必要というわけではありません。 「Suzukaでリンクボタンを作る」 http://allabout.co.jp/gs/flash/closeup/CU2007020 … 「Suzuka講座-3 - suzuka Wiki」 http://wikiwiki.jp/suzuka/?Suzuka%B9%D6%BA%C2%2F3 上の２サイトに書いてありますように、 「簡易スクリプトエディタ」に「URLを取得」という項目がありますから、 そこで URL を指定するだけでもリンクボタンは作成できます。
サーバーのデータファイルの許容範囲は超えていませんか？ サーバーによっては2MB以上のファイルはNG、ファイルの種類は～～はNGなど 負担がかからないように制限を設けている場合があります。 それ以外で考えると、FLVはあくまで動画の１ファイルなので、プレイヤー の設定がされていない可能性があります。 SWFかなにかに埋め込まなければいけないと思うので、 お持ちであればFlashにFLVをいれてプレイヤーと一緒に吐き出したり http://phpspot.org/blog/archives/2006/07/flvflas … こういった、外部FLVが再生できるFLVプレイヤーをHTML内に設置してやる必要があると思います。
> バージョンの10に対応するにはどうしたらよいでしょうか バージョン10 とは FlashPlayer10 のことだと思いますが， FlashPlayer10 以前の問題で7でも変ですよ。 と言いますか， FlashPlayer10 と それ未満の問題は一切含まれないと思います。 スクリプトを１行ずつ見ていけば良いのです。 ========================================== // 「↑」はバージョンが　WIN 10,0,12,36 であった場合の例 version = getVersion(); // ↑変数 version = "WIN 10,0,12,36" version = version.split(" "); // ↑配列 version = ["WIN","10,0,12,36"] userAgent = version[0]; // ↑変数 userAgent = "WIN" version = version[1].split(","); // ↑配列 version = [10,0,12,36] majorVer = Number(version.split(" ")[1].split(",")[3]); // ↑変数 majorVer // 　= 配列version を " " で分割した2番目要素を // 　　さらに "," で分割した4番目の要素 // （？？？何コレ意味不明。） ========================================== ここまでで意味不明状態に突入しますから， これ以上先には進めなくなります。 それと， 変数であったはずの version が，突如 配列version に切り替わったりするため， ますます混乱するのだと思います。 次のように変更すればできると思います。 ========================================== // 「↑」はバージョンが　WIN 10,0,12,36 であった場合の例 version = getVersion(); // ↑変数 version = "WIN 10,0,12,36" versionArr = version.split(" "); // ↑配列 versionArr = ["WIN","10,0,12,36"] userAgent = versionArr[0]; // ↑変数 userAgent = "WIN" versionArr = versionArr[1].split(","); // ↑配列 versionArr = [10,0,12,36] // 配列の要素を結合して文字列を得る version = versionArr.join(","); // ↑変数 version = "10,0,12,36" // 配列の最初の要素を削除してその要素を得る majorVer = versionArr.shift(); // ↑変数 majorVer = "10" // 残った配列の要素を結合して文字列を得る minorVer = versionArr.join(","); // ↑変数 minorVer = "0,22,0" _root.flaVer.text = "userAgent="+userAgent+" / version="+version+"\n"; _root.flaVer.text += "majorVer="+majorVer+" / minorVer="+minorVer; _root.flaVer.autoSize = "left"; if (Number(majorVer)>=7) { this.gotoAndPlay("urlRead"); } else { this.gotoAndStop("non"); } ========================================== 最初の行 　version = getVersion(); 　// ↑変数 version = "WIN 10,0,12,36" ここですでに， 「WIN 10,0,12,36」 まで，ちゃんと得られているのですよ。 この文字列 「WIN 10,0,12,36」 を，配列を使って操作して， 「WIN」 と 「10」 と 「10,0,12,36」 と 「0,12,36」 をバラバラに取りだしているというだけです。 　
アクションスクリプトを使っていると思います。 http://www.geocities.jp/dr0p4u/how2/doc_load.html http://itpro.nikkeibp.co.jp/article/COLUMN/20061 … が参考になると思います。
本題に入る前に確認です。 書かれていらしゃるスクリプトですが， 最初からして間違っていませんか？ つまり，両方ともメインの直下に置いた場合であっても，おかしいと思いますよ。 > 正確には > --------------------------------------- > if(/ply.x > this.x+20 && /ply.x < this.x-20 > /ply.y > this.y+20 && /ply.x < this.x-20){ > --------------------------------------- こう↑ではなくて， 正確には --------------------------------------- if(/ply.x < this.x+20 && /ply.x > this.x-20 && /ply.y < this.y+20 && /ply.y > this.y-20){ --------------------------------------- こう↑ではないかと推測します。 （ply.x < this.x-20 が2回も出てきています。） 上のように書きまちがえていらっしゃるものとして先に話しを進めます。 Flashのインスタンスの座標は親を基準にしたローカルな座標です。 _root の直下にあるインスタンスであればキャンバスの左上を基準にした座標です。 _root の直下にあるインスタンスの，さらにその中にあるインスタンスでしたら， _root の直下にあるインスタンスの基準点を基準とした座標です。 階層構造は次のような感じですよね。 　メイン(_root) 　　├ プレイヤーキャラクタ(ply) 　　└ スプライト1（フィールド） 　　　　　　└ スプライト2（障害物） つまり， プレイヤーキャラクタ(ply) の座標は，メイン(_root) の基準点に対する座標です。 一方， スプライト2（障害物） の座標は，スプライト1（フィールド）の基準点に対する座標です。 同じ _root を基準にした座標を考ようとする場合， スプライト2（障害物） の座標は，スプライト1（フィールド）の座標を足した座標になります。 図示すると次のような感じです。 　├───40px───┤■■■←プレイヤーキャラクタ 　□□□□□□□□□□□□□□□□□←メイン x=0 　　　　　　　　　　　　　↑↑↑ 　メインに対するプレイヤーキャラクタの座標は 40px 　├─20px─┤├10px┤回回回回←スプライト2 　├─20px─┤圏圏圏圏圏圏圏圏圏←スプライト1 　□□□□□□□□□□□□□□□□□←メイン x=0 　　　　　　　　　　　　　↑↑↑ 　　メインに対するスプライト2の座標は 20px＋10px 　　つまり　親の座標＋自分の座標　になる。 スクリプトですが， 本当は書かれていらしゃる原型をなるべく尊重して， 親の座標を相対パスで取得したかったのですが， どうも親のパスの書き方がわかりません。 「_parent」 でも 「parent」 でも 「../」 でもないようです。 わからないので， 親である スプライト1（フィールド） にインスタンス名を付けることにします。 スプライト1（フィールド） に， 「field」 というインスタンス名を付けた場合， if文のスクリプトは次のようになります。 ---------------------------------------- if(/ply.x < this.x+/field.x +20 && /ply.x> this.x+/field.x -20 && /ply.y < this.y+/field.y +20 && /ply.y > this.y+/field.y -20){ ----------------------------------------
#1です。 片方向の制御ですが以下のように変更すればループできると思います。 ●旧 if (_global.gb_onoff == 0) {//変数gb_onoffが0の場合、 this._x += 1;//ｘ軸方向に１進む } ●新 if (_global.gb_onoff == 0){ for (var i = 1; i<=menu_num; i++) { obj_array[i]._x += 1; if (obj_array[i]._x > 800){ obj_array[i]._x = obj_array[i]._x - 800 * menu_num; } } }
＃１ です。緊急報告！！！ > Flash MXで無理ならソフトの購入も検討しなくてはならないかも > しれませんが（正直懐が痛いので避けたいですけど＾＾） 今日 11月11日，とうとう FlashCS4 が出てしまいました！ http://www.adobe.com/jp/products/flash/ FlashMXからのアップグレードは CS3 までです。 FlashMXの正規版を持っていらっしゃったら， Flash CS3 Professional までは 2万数千円で アップグレードできました。 しかし...， 時すでに遅しかもしれません。 Flash CS4 Professional は，新規購入となってしまいます。 Adobe本家のネット販売はもうダメです。 店頭の在庫品 Flash CS3 Professional でしたらアップグレードできるかもしれません。 そういう瀬戸際の行動はしたことがないのでわかりませんが， もしアップグレードする予定でしたら， なるべく早く行動に出る方が良いと思います。 「CS4発売決定！アップグレードできる最後のチャンス！」 http://www.multi-bits.com/dat/adobe/web1.html ちなみに， 私は上記サイトなどの回し者ではございませんよ。 CS4 は 12月初旬になると勝手に予想していて， まさか今日とは思わなかったので，＃１で，質問者さんにも勧告しなかっただけです。
シンボルに 「menu」 という識別子を付けたムービークリップがあって， その中に 「jpg_mc」 というムービークリップを作成されていますよね。 その 「jpg_mc」 の作成工程に問題があると思います。 たとえば， 10px×10px の塗りを描いて， その塗りをムービークリップに変換し， その後，400px×300px に拡大させたとかです。 ロードするムービークリップを拡大させるとその中にロードされるものも拡大されていまします。 もし 400px×300px 「jpg_mc」 を作成したいのでしたら，上のようにするのではなくて， 400px×300px の塗りを描いて， その塗りをムービークリップに変換しなければなりません。 そこら辺がアヤシイと思います。
"PHPを更新"という行為が、ブラウザでPHPファイルを指定して更新ボタンを 押しているのであれば、そのような理解で大体あっています。 PHP単体をテストするのであれば、以下のようなhtmlから呼び出してあげる 必要があります。 <form metod="POST" action="PHP.php"> <input type="text" name="num"> </form>
Adobeのサイトでエラーコードなどで検索しましたか？ http://support.adobe.co.jp/faq/faq/qadoc.sv?2344 …
私は AS3 初心者どころか，全く作成したことのない者ですが， だいたいの意味はわかります。 ＃１ の方の回答の一部分について補足です。 > ちなみに > function onTextChange(e:Event){ > ↑テキストが変わった時にe:Eventを行え。e:Eventの中身は以下の｛｝の中。 ここは違います。 ここは質問で書かれていらっしゃるとおり， > //テキスト変更時に実行する変数を定義 > function onTextChange(e:Event){ が正解です。 決して， > テキストが変わった時にe:Eventを行え。 > e:Eventの中身は以下の｛｝の中。 ではなくて， // テキスト変更時に実行する変数を定義 // (実行時にはイベントリスナーから 引数e を受け取る ) function onTextChange(e:Event){ というような意味です。 「value_txt」 は単なる TextField であって， 何某かのイベントを受け取る機能などは備えていません。 ※AS2までは 　 TextFieldクラスの中にイベントハンドラまで入っていましたから 　 TextField自体がイベントを受け取る機能も備えていました。 　 しかし，AS3では備えていません。 function onTextChange(e:Event){ }　では { } 内の動作をするように関数として定義してあるだけです。 純粋に単に定義してあるだけです。 ほっておけば実行されることはありませんし， 「value_txt」 に対する関数であるというような関連付けもどこにもされていません。 単なる関数「onTextChange」です。 一番最後の行， //テキスト変更時のイベントを登録する value_txt.addEventListener(Event.CHANGE,onTextChange); ここで「value_txt」 に対するイベントリスナーを追加することによってはじめて， 「value_txt」 に CHANGE というイベントが発生したときに， 単なる関数「onTextChange」が実行されるようになります。 ただし， 書かれていらっしゃるものの場合， e:Event は意味を成しません。 使わないけど一応書いてあるだけです。 「onTextChange」の実行時，引数 e にはイベントが入って来ます。 このイベントeに対するターゲットが e.target などによって，取得するようなことができるので， 関数実行時に，何に対するイベントが発生したのかがわかります。 これによって， イベントeに対するターゲットが関数に絡んでした場合でも， 複数のもの（value1_txt，value2_txt，value3_txt，… など）に対して， 同じ関数を使い回しするようなことが可能になります。 つまり， 関数は関数で，何に対する関数でもない「onTextChange」を定義することによって， その関数を利用するときに， 対象物を決めることが可能になります。
FLASHの異常が何かはわかりませんが… wmode=transparentを指定することによりFlashの背景を透明にすることが できます。 不安定でいろいろバグがあった記憶があります。 例 http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 …
ANo.1です。 ソースには以下誤記がありますが、転記ミスでしょうか？ 誤) funjction loop → 正) function loop 誤) addChild(Loader); → 正) addChild(loader); 提示されたソースは、誤記を直せば下名の環境(Flash CS3)で問題なく 動作しますので、ご確認ください。 エラーが発生する場合は、本ソース以外に問題があります。
推測ですが、サンプルのURLの注文データはxmlなどで渡していると 思われます。 編集されたデータの各アイテムの配置された画像名, 座標データ, カラー， エフェクト などをxmlデータとして外部プログラム(CGIなど) に渡して、外部プログラム側で注文を受付・課金するのが 簡単だと思われます。
＃１ です。 > ちなみにjavascriptで呼び出すこともできるのですか？？ JavaScript でもできますが，その場合も基本的に同じですよ。 3つの SWF を呼び出す「親」が違うだけです。 ActionScriptはSWF内で使われる言葉ですから，親も子もSWF。 JavaScriptはHTML内で使われる言葉ですから，親がHTML，子がSWFということになります。 どっちにしても「親」があって，その親のスクリプトによって子を変えることには変わりありません。 「アクセスするたびにSWFをランダムに表示させる方法」 http://hfm-kenchan.com/Lesson/log_qa/D0601303.htm 「JavaScriptでFLASHファイルを切り替えるには - 教えて！goo」 http://oshiete1.goo.ne.jp/qa2144613.html JavaScriptも Math.floor(Math.random()*○) です。 SWFをHTMLに表示させるタグがややこしいので， JavaScriptの方がActionScriptよりも大変です。 ブラウザ依存のことなど，込み入った話も含めると， FlashカテゴリよりJavaScriptカテゴリで質問された方が良いとは思います。
ANo.2です。 確認してみましたが、こちらでは問題なく日本語表記できました。 (もう一度ダウンロードしたファイルからやり直してみましたが 問題は発生しませんでした。) うまく表示されない場合は、スクリプトに trace などを入れて System.useCodepage や xmlから取り込んだの値を確認して みてください。
【まえた】さんのパソこらむというＨＰで綺麗な表で展開してくださっています。 http://www.koganet.ne.jp/~maezawa/pc/colplus.html
> 「this」ってどんな場面で使えばいいんでしょうか？ this が示すものが ActionScript3.0 と 2.0以下とでは違うと聞きますから， それぞれの使い方も変わるとは思いますが， 私は AS3 のことはよくわかりませんので 2.0以下 の例ということで。 ◎ this を使用しなければならない例 新規ドキュメントを作成して， フレーム1 に次のスクリプトをコピペし， 「制御」→「ムービープレビュー」。 -------------------------------------- for (i=0; i<=4; i++) { this.createTextField("_txt"+i, i, 10, 10+i*30, 0, 0); this["_txt"+i].text = "ココをクリック！"; this["_txt"+i].autoSize = true; this["_txt"+i].onSetFocus = function() { //↓★ this を使用しなければならない this.text = "クリック完了"; }; } -------------------------------------- 　//↓★ this を使用しなければならない 　this.text = "クリック完了"; の部分は， 　this["_txt"+i].text = "クリック完了"; でも， 　_root["_txt"+i].text = "クリック完了"; でも 　_parent["_txt"+i].text = "クリック完了"; でも無事に動作しません。 this であるべきです。 現象は少し変わりますが仮に次のようにしても結局同じです。 やはり this であるべきです。 -------------------------------------- for (i=0; i<=4; i++) { var TF = _root.createTextField("_txt"+i, i, 10, 10+i*30, 0, 0); TF.text = "ココをクリック！"; TF.autoSize = true; TF.onSetFocus = function() { //↓★ this を使用しなければならない this.text = "クリック完了"; }; } -------------------------------------- 一方，逆の場合もあります。 つまり this が使えない場合もあります。 ◎ this を使用できない例 message=abcdefg というデータをテキストエディタで用意して， 任意のフォルダに， 「data.txt」 というファイル名で保存します。 そのフォルダ内にFlashの新規ドキュメントを保存し， フレーム1 に次のスクリプトをコピペし， 「制御」→「ムービープレビュー」。 -------------------------------------- // _root に インスタンス名_txt のテキストフィールドを作成 _root.createTextField("_txt", 0, 20, 30, 0, 0); // テキストフィールドを自動サイズにする _txt.autoSize = true; // --- // LV という LoadVarsインスタンスを作成 var LV = new LoadVars(); // ロード完了時の動作 LV.onLoad = function() { // ↓★this の使用は不可 _txt.text = LV.message; }; LV.load("data.txt"); -------------------------------------- 　// ↓★this の使用は不可 　_txt.text = LV.message; の部分は， 　this._txt.text = LV.message; でも 　this._parent._txt.text = LV.message; でも無事に動作しません。 this は使えません。 一方 _root は使えますから， 　_root._txt.text = LV.message; は大丈夫です。 上の this でなければならない例と， 下の this は使用できない例の２例を書きました。 もしかしたら，なぜそうなのかよくわからないかもしれません。 しかし良く考えたり，調べると， なぜ上のような現象が起こるのかがわかります。 簡単に触りだけの理由を書くと， 上の例は 「i が変動するから」 です。 下の例は 「LoadVarsインスタンス はオブジェクトではあってもムービークリップではないから」 です。 this を使ったときの格好というよりも， 使うときは this が何を指すのかを常に意識して使った方が良いです。 this を使わなければならない場合は当然使いますし， どっちでも良い場合は理論上どちらが相応しいかで決めます。 どちらが相応しいかは周りのスクリプトによって決まる場合も多々あります。
モーショントゥイーンの頭は勝手にキーフレームになっていますが 最後は自分で設定する必要があります。 アルファを100％にしたいフレーム位置でキーフレームを設定すればOKです。
PHPの指定をURLを完全に記述すれば可能です。 例) http://www.hogehoge.com/target.php 但し、swfのあるサーバとCGIのあるサーバが異なるドメインに ある場合は、以下現象が起こります。(クロスドメインの問題) http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … 以下に対処の方法が載っていますので参照ください。 http://gihyo.jp/dev/serial/01/web20sec/0004
すみませんがソースは見てません。 生成と削除は以下のようなソースで可能だと思いますが いかがですか？ (FLASH環境が手元にないので動作確認はしていません) 生成 Num = 0; //ビーズ(beadsMC)の複製を作成 _root.duplicateMovieClip(beadsMC,"beadsMC"+Num,Num); Num++; 削除 for( var i=0 ; i < Num ; i++ ){ //ゴミ箱(gomiMC)とビーズ(beadsMC0～)との衝突判定 if( gomiMC.hitTest( this[ "beadsMC" + i ] ) == true ){ //衝突時は削除 this[ "beadsMC" + i ].removeMovieclip(); Num--; } }
XMLでリストを作って、そこからURLを読み込めばいいと思いますよ。
ASのバージョン、テンプレートがどのような形で作られているか見ている訳ではありませんので、一概にはなんとも言えませんが テンプレートファイル.flaが存在し、尚且つメインフレームに直接アクションスクリプトが記述されている場合 sq.width = sq.height = sq.scaleX = sq.scaleY = という記述がある可能性があります。そこの数値を変更して下さい。 解決しない場合 独自のカスタムクラスが定義されていて、そこからコンストラクタを呼び出して、プロパティを設定している可能性もあります。
簡単なのは、URLの移動はHTML側にJavascriptの関数を作り FLASH側からは、その関数を呼び出す形を取ることです。 FLASH作成のS/Wについては、どのようなことがしたいかと スキル次第ではないでしょうか？ 何でもできるものであれば Adobe Flash CS3 Professional となります。
まず使っているASのバージョンに左右される為、必ずASのバージョンを記述した方がいいと思いますよ。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as3/key_bo …
一瞬だけタイヤの絵のないフレームが表示されているのだと思われます。
flashにマウスポインタの移動を遅くする機能は用意されていないと思うので mc[pointer]←ポインターのムービークリップ Mouse.hide(); pointer.addEventListener(Event.ENTER_FRAME , pointerMove); function pointerMove(e :Event) :void { 　pointer.x += (mouseX - box.x) / 40; 　pointer.y += (mouseY - box.y) / 40; } 擬似的にポインターのMCを関数で追わせる形にして体感速度を遅くするのはどうでしょうか？
URLに行き、見てきました。 自分も最初はCloseと書いてあるだけだったので、見れないのかと思いましたが、しばらく待っているとフレームが現れてムービーが流れました。 つまりムービーの読み込み中だったようです。 もしすぐにcloseを押してしまっているのであれば少し待ってみてはいかがですか？ それでもダメなら本当に技術的な問題のようですね。 回答になっていなくてすいません。 ちなみに自分はFlashPlayer１０です。
英語の” return ”には、「返す」という他に「元の場所に戻る」「戻す」といった意味もあります。 プログラミングの本では ActionScript に限らず、return 文は往々にして「値を返す」と説明されていますが、英語の return と同様に、「値を返す」だけでなく「元に戻る」という機能もあります。 コンピュータのプログラムは、たくさんの命令がメモリの中に格納されていて、命令は並んでいる順番に実行されていきます。 関数は関連する複数の命令をひとかたまりにしたもので、やはりメモリ内に格納されますが、メインのプログラムとは別の場所に分けて格納されます。 関数を呼び出すと、もとのプログラムの流れから一旦外れ、関数が格納されているところから順番に命令を読み取り、実行されるようになります。 そして、関数が終了した時には、再びもとのプログラムの流れに「戻る」のです。 関数は本流から一旦離れて支流に寄り道するようなものですから、用が済んだら本流に戻らなければなりません。 return 文を入れると、その場で呼び出し元である本流の方に戻ります。 この機能を利用して、関数を最後まで実行しなくてもいい場合に、return 文により関数の処理を任意の箇所で打ち切ることができます。 例えば、引数で指定したものを探し出して加工する、という関数があるとしましょう。 探すものが見付かったのなら関数内で次の加工処理に取りかかるのですが、なかった場合はやることがありません。 この例では、探しものが見当たらないと分かった時点で、return 文により関数を打ち切ることができます。 これは無駄な処理をせずに済むばかりでなく、問題のある引数が渡されてきた時、そのまま処理を続けると困るので関数を中断させたい場合などにも使える方法です。 関数の冒頭で引数をチェックし、何か問題があると分かったら、その時点で return 文で戻ってしまえば、問題含みのまま処理を続けて重大な障害や深刻なバグに進展するようなこともなくなります。 *********************************** 関数から呼び出し元に戻る際に、何かの値を１つだけ持ち帰ることができます。 これが解説書でもしばしば説明されている、return 文の「値を返す」機能です。 関数から持って帰ってくる値を「戻り値」といいます。 ActionScript の文法では、function 文の終わり（最後の” } ”）までが関数と見なされ、return 文がなくても関数が終了して自動的にもとのスクリプトの流れに戻っていきます。 関数の終端に達して自動的に戻った場合、関数から持ち帰る値は何もありません。 return 文を使って戻ると、何かの値を持ち帰ることができます。 もちろん、持ち帰りたい値がなければ、return 文を使っていても何も持たずに戻ることもできます。 先述のように関数の途中で return 文で戻る場合でも、値を持ち帰ることができます。 先の例でいうと、引数で指示されたものを探索した結果、 　・探しものが見付からない時は、加工処理に移らず、-1 を持って帰る（ return で -1 を返す） 　・探しものはあったが加工に失敗した場合は、加工処理を途中で打ち切り、0 を持って帰る（ return で 0 を返す） 　・探しものが見付かり、加工処理も無事に終了したら、成功の証として 1 を持って帰る（ return で 1 を返す） ・・・というに設計したとします。 すると、関数からの戻り値を見ることで、処理が正常に行われたのか、それとも失敗して打ち切られたのか、失敗したのなら原因は何かを判断できるようになります。 また、失敗した時には return 文により途中で処理が打ち切られるのですから、余計な処理を続けたり、問題があって危険な状態のまま突っ走ってしまうようなこともなくなります。 なお、return 文で持っていける値は”１つだけ”です。 複数の値を持ち帰りたい時は、Object 型の変数にまとめるなどの工夫が必要です。 *********************************** ところで、ActionScript 1.0 や 2.0 でよく見かける 　○○.onRelease = function() ・・・ というような書き方があります。 ” function ”とあるからには関数を定義しているわけですが、この関数の中に return 文、特に、値を返す目的での return 文はあまり見かけないと思います。 ActionScript 3.0 では名前のある関数を定義し、addEventListener メソッドで登録する形式に変わりましたが、登録する関数の中に return 文はまずないでしょう。 なぜでしょうか？ return 文には、「呼び出し元に戻る」「戻る際に値を１つだけ持ち帰る」という、２つの機能がありました。 持ち帰った値は、関数の呼び出し元に受け取る権利があります。 ActionScript は”イベント駆動型”という考え方を採用しています。 これは、ボタンが押される・マウスが操作されるなど、ムービー再生中に起こる様々な出来事（イベント）を監視しているプログラムが、ユーザーの組んだスクリプトとは別に裏方で動いており、イベントが発生した時に予めイベントハンドラに登録されている関数を呼び出してくれる仕組みのことです。 イベントが起きた時に呼び出される関数の呼び出し元は、イベント処理を実際に担当しているプログラムです。 従って、これらの関数からの戻り値を受け取る権利があるのも、このプログラムということになります。 イベント発生時に呼び出される関数を呼び出すのが自分ではないために、ユーザーはその戻り値を受け取ることができません。 つまり、値を返す関数にしたところで返ってきた値を参照できないので、イベントにより呼び出される関数には return 文を入れてもあまり意味がないのです。 自作した関数や ActionScript で用意されている関数・各クラスのメソッドを自分のスクリプトの中で呼び出す時は、呼び出し元は自分になります。 ですから、関数から返ってくる値を好きなように利用することができます。 ----------------------------------------------------------- ActionScript はイベントを利用した処理が多くを占めます。 イベント発生時に呼び出される関数からは戻り値を受け取れないために、作る関数に return 文を入れることが少なく、だから「 return 文はどんな時、何のために使う？？」と疑問に思うのではないでしょうか。 何かの仕事をしてその結果を返してくれたり、成功 / 失敗などの状況に応じて返ってくる値や作業の結果が変わる関数やメソッドは全て、return 文を利用しています。 自分ではあまり使う機会がなくても、return 文は見えないところでたくさん活躍しているのです。 イベント処理ではない関数を自作する時にも、上手く使えば安全で堅牢な設計の関数になります。 いろいろな使い方を研究してみてください。
> 自分がみたところ、FlashPlayer7の > 普及率が非常に多いように > 思います。 多いようには思いませんが，かなりな人が使っていることは確かです。 というか， FlashPlayer7 を使っている人が多いのではなくて， FlashPlayer7 用SWFの普及率が非常に多いです。 MacOS9 とかだと FlashPlayer7 が限界ですし， Windows95 だと FlashPlayer6 が限界です。 そんなこともあります。 パーセンテージ的には FlashPlayer7 を使っている人は小数なのです。 そういうことではなくて， たとえば日に1000人の閲覧者があるサイトだと， 1％変わると10人の人の見える見えないが変わります。 5％変わると50人です。 つまり5％でも多くの人に対応しておかなければ50人の人に， その企業を不快に感じる可能性が出てきます。 また１日50人の人に対しての代替電話対応などをしなければならない場合も出てきます。 イメージ的損失と人件費の損失も大きくなります。 私は市町村など公的機関のFlashなども作りますが， これも同じで５％変わると５％の市民を無視したサイトになってしまいます。 当然，評判は悪くなります。 対応も増えます→税金の無駄遣いにつながります。 そんなことを考えるのでしたら，最初からFlashのバージョンは下げて作ったおいた方が良いです。 > 多くのサイトのFLASH画像は > 見ることが出来ます。 > これらは、AS3を使っていないのでしょうか。 使うわけ無いでしょう（今現在ですよ）。 個人の趣味サイトや可能性への挑戦サイトや研究サイトや単なるイメージメッセージのようなサイトなどでは当然使っても良いのですが， 汎用的で実用的でなければならないものには使えません， 企業が大きくなればなるほど使えません。 > AS1,AS2,AS3を使い分ける、という作業を > やっているようには思えません やってませんやってません。 するなら最初からノンフラッシュのページを代替で作るくらいです。 目標は FlashPlayer6 です。 それではどうしてもできない部分があれば FlashPlayer7 です。 FlashPlayer6 と 7 は 閲覧者から見ても，作る側から見ても結局同じようなものしか作ることができませんが， 7では外部ASファイルでクラスが共有できます。つまりAS2クラスファイルが使用できます。 大規模なものになると FlashPlayer7 の方が作りやすいです。 見た目は同じようなものしかできませんが， FlashPlayer7 用 SWF が多いのはそのためです。 私はビジュアル的なFlashの作成が多いです。 企業HPの普通のFlash。 FlashPlayer7 と FlashPlayer8 ではできることがぜんぜん違うのですよ。 フィルタ効果とか画像演算とかが飛躍的に向上しました。 たとえば， FlashPlayer8 では １枚の写真を用意して， その写真をピントがぼけた状態からピントがあった状態にするアニメーションを作成することは簡単です。 写真に大きくブラーをかけてそのブラーの度合を低くしていけば良いだけですから。 でも，まだそのようなことは企業のサイトではしません。 FlashPlayer7 で同様のことをする場合は， ピントの合った写真とピントのぼけた写真をPhotoshopで作って， その２枚をFlashに読み込ませて， ピントがぼけた写真の上にピントが合った写真を重ねて配置し， 上のピントが合った写真の透明度を完全透明から完全不透明に変えます。 かなり手間な上，ファイル容量も大きくなりますが， できるだけ低いバージョンで閲覧できるように最初からそういう作業で作成していきます。 FlashPlayer7 と FlashPlayer8 では， 実際のFlash作成に入る前から，下準備などの作業行程が違うということです。 バージョンを上げるのは簡単です。 いかに低いバージョンでも閲覧できるようにするかが大切です。 ですから，今現在私の目標はFlashPlayer6です。 （個人的には本当は上げたくてしょうがないのですが，我慢我慢です。）
過去はFlashPlayerからHTTPヘッダ情報を改変して送信できる脆弱性が含まれていましたが、最新のバージョンでは修正されていて偽装はできないはずです。 http://d.hatena.ne.jp/harupu/20061107 http://www.itmedia.co.jp/enterprise/articles/070 …
以下のようなスクリプトではいかがでしょうか？ import flash.display.MovieClip; import flash.events.MouseEvent; for (var i=1; i<4; i++) { this["btn"+i].addEventListener("click", over); } function over(eventObject:MouseEvent):void { trace(eventObject.type, eventObject.target.name); }
動作環境がないので確認できてませんが‥ 多分 clearInterval でクリアした後に再度 setInterval で指定しないと setInterval(test,1000+Math.floor(Math.random()*500)); は思われる様な 動作しないと思います。 それよりもsetIntervalは固定して以下のようなのは如何でしょう function f(msg) { 　n++; 　if (n >= maxCount) { 　　　//動作させる処理 　　　maxCount = 10 + Math.floor(Math.random() * 5); 　　　n = 0; 　} } var n = 0; var maxCount = 10 + Math.floor(Math.random() * 5); var timer = setInterval(f, 100);
ANo.1です。 ブラウザがIEであれば >下のツールバーに「実行しましたがページでエラーが出ました」と表示 されたときに、その部分をダブルクリックする詳しいエラー内容が 表示されると思いますのでご確認ください。 (Javascriptのエラーが出ていると思いますので該当部分を確認ください) 判らないときは、エラー内容を提示いただければ、お力になれると思います。
ヒット領域同士に十分な隙間がないとどうしてもそうなります。 対処法としては、以下の方法は？ １、メインタイムラインの写真を配置したフレームを数フレームにし、フレームで止める。 ２、写真サイズよりヒット領域を小さくする。（これだけではマウスの動きが異常に早い場合はマウスが「（１）と地と（２）」の「地」の部分を感知してくれません） ３、全ての写真のヒット領域を囲むように透明ボタンをつくり、全ての写真のレイヤーの上位に配置。MouseOver時に1フレーム目に戻させる。
２辺から角度を求めるには内積を使います 三角を以下のように３点として、p0の角度(θ）を求めたいとします 　　　p0 　　　／＼ 　　／　　＼ 　／　　　　＼ p1￣￣￣￣￣￣p2 cos(θ)=(p1-p0)・(p2-p0)/(p1-p0の長さ)/(p2-p0の長さ) ※p1-p0の計算結果はベクトルです ※p2-p0の計算結果はベクトルです ※・は内積を求める意味です ※p1-p0、p2-p0のベクトルを正規化（長さ１にする事）すれば前述の式は 　cos(θ)=(p1-p0)・(p2-p0) 　と非常に簡単になります 　これを使えば 　θ=acos(p1-p0)・(p2-p0) 　p1-p0=>q、p2-p0=>rとして 　θ=acos(q.x*r.x + q.y*r.y) ※acosはアークコサインの意味 ※acosで求めた結果はラジアンなので 180/3.141592をかければデグリーになります
同じようなことで悩んだ記憶があるのですが、思い出せませんorz 参考情報だけで申し訳ございませんが以下のサイトが参考になると 思います。 http://gihyo.jp/dev/serial/01/adobe-apollo/0009? … http://www.ochanoma-design.com/archives/category …
ANo.1です。 補足です。 AIRの古いサンプルを動かす場合は 以下にAPIの変更点などが書かれていますので参照ください。 http://gihyo.jp/dev/serial/01/adobe-apollo/0014? … 　　　　　　　　　　　　　　　　　　　(中段の APIの変更点) http://www.adobe.com/jp/newsletters/edge/decembe … (AIR Beta 3 でのコードの変更点)
～概略～ あるスプライト 内の フレーム1 とフレーム2に、それぞれ 「green.pdr のボタン」 と 「red.pdr のボタン」 を配置し、 そのスプライト内のフレームを　1⇔2　と切り替えれば良いと思います。 ～詳細～ 「ファイル」→「プロジェクトのプロパティ」の[SWFバージョン]で、 [SWF4] にチェックが入っているものとします。 また、 「green.pdr」 と 「red.pdr」 はすでに作成してあって、 シンボルリスト内に追加（登録）してあるものとします。 シンボルリストのアイテム欄を右クリックし、 「アイテムを追加」→「ボタン追加」でボタンを追加します。 このとき、 [通常時(必須)] の項目には 「green.pdr」 のみを指定します。 再び、シンボルリストのアイテム欄を右クリックし、 「アイテムを追加」→「ボタン追加」でボタンを追加します。 このとき、 [通常時(必須)] の項目には 「red.pdr」 のみを指定します。 また、シンボルリストのアイテム欄を右クリックし、 「アイテムを追加」→「スプライト追加」でスプライトを追加します。 このとき、 [サイズ] の [幅」 と [高さ] は、 「green.pdr」 や 「red.pdr」 のサイズと合わせておくほうが扱い易いと思います。 （基本的にはサイズは任意です。デフォルト指定されるキャンバスのサイズでもかまわないとは思います。） そのシンボルリスト内に新規で作成したスプライトを選択して その上の欄の 「編集」 ボタンをクリックし、スプライト内タイムラインの編集に入ります。 シンボルリストで、「green.pdrを指定したボタン」を選択し、 「右クリック」→「レイヤーに追加」でスプライト内のフレーム1に「green.pdrを指定したボタン」を配置します。 その 「green.pdrを指定したボタン」 のレイヤーの フレーム2 を選択し、 シンボルリストで、今度は 「red.pdrを指定したボタン」を選択し、 「右クリック」→「レイヤーに追加」でスプライト内のフレーム2に「red.pdrを指定したボタン」を配置します。 ここまでの状態で、 スプライト内のタイムラインの フレーム1 には 「green.pdrを指定したボタン」だけ があって、 スプライト内のタイムラインの フレーム2 には 「red.pdrを指定したボタン」だけ があるはずです。 上側のレイヤー（「red.pdrを指定したボタン」のレイヤー）のフレーム1を選択し(つまり何もないフレームを選択し)、 そのレイヤー名の部分を「右クリック」→「アクションレイヤーの挿入」で、 [フレームアクション]レイヤーの キーフレームである フレーム1 を作成します。 その[フレームアクション]レイヤーの フレーム1 を選択し、 Suzukaソフトの画面の右下にある 「スクリプトを編集」 ボタンをクリックし、 [スクリプトエディタ] を表示させ、そこに stop(); と書きます。 これでスプライトは勝手にループ再生しなくなります。 次に フレーム1 の 「green.pdrを指定したボタン」 を選択し、 画面の右下にある 「スクリプトを編集」 ボタンをクリックし、 [スクリプトエディタ] を表示させ、そこに on(press){ gotoFrame(1); } と書きます。 これで、この 「green.pdrを指定したボタン」 を押したとき、 このスプライト内のフレームが フレーム2 に行って停止します。 この gotoFrame は少し変わっていて、 gotoFrame(0); だと フレーム1 に gotoFrame(1); だと フレーム2 に gotoFrame(2); だと フレーム3 に 　…　　　　　　　　　　… gotoFrame(n); だと フレーム(n+1) に進んで停止します。 ですから、 逆に行きたいフレームを n とするなら、 gotoFrame(n-1); を書けば良いということになります。 　gotoAndStop(n) = gotoFrame(n-1) という関係です。 以上でスプライト内のタイムラインの編集は終わりですから、 画面左上のスプライト名の部分（[スプライト1(ID：○)] のようになっているピンク色の部分）をダブルクリックし、 メインのタイムラインの編集に戻ります。 メインのタイムラインの編集に戻りましたら、 シンボルリストで今作成したスプライトを選択し、 「レイヤーに追加」でメインのタイムラインに追加します。 この辺で一度、 「ウィンドウ」→「プレビュー」などでボタンの動作確認をしていた方が良いです。 上に書いた内容がちゃんとできていましたら、 プレビューしたとき、 キャンバス上のスプライトには 「green.pdr」 の絵が表示されたままになっていて、 スプライトを押さえると 「red.pdr」 の絵に変わるはずです。 --- --- --- さて次に、別のボタンで「green.pdr」に戻す方法 です。 スプライトを別の外部のボタンなどから操作するには、 スプライトのインスタンス名が必要です。 上で配置したスプライトのあるレイヤーの、レイヤー名の部分をダブルクリックして、 [レイヤーのプロパティ]パネルを表示させ、 ２つ目の項目 [インスタンス名] の欄でインスタンス名を付けます。 インスタンス名はアルファベットから始まる半角の文字を使えばたいてい何でも良いです。 ここでは、 green red sprite （緑赤スプライト）の略のような意味で、 「GRsprite」 というインスタンス名にでもしておきましょうか。 「別のボタン」は適当に（任意で）作成し、 同じくメインのタイムラインのレイヤーに追加し、 キャンバス上に見えるように配置します。 そのキャンバス上の「別のボタン」を選択し、 画面の右下にある 「スクリプトを編集」 ボタンをクリックし、 [スクリプトエディタ] を表示させ、そこに on(press){ tellTarget("/GRsprite"){ gotoFrame(0); }; } と書きます。 tellTarget("/GRsprite") は、 「_root にある GRsprite に命令」という意味です。 「/」が先頭に付くとそれは _root（メインのタイムライン）を指します。 したがって、 「/GRsprite」 は _root（メインのタイムライン） にある 「GRsprite」 という根のインスタンスということになります。 その他のターゲットパス表記もHTMLのファイルパスの表記とほぼ同じです。 以上で、 　スプライト「GRsprite」 をプレスしたとき、 　そのスプライトの絵が 「red.pdr」 に変わり、 　「別のボタン」をクリックしたとき、 　スプライト「GRsprite」 の絵が 「green.pdr」 に変わる。 というものができます。 ホント、SWF4 は大変ですね......。 Adobe の FlashLite1.0 や 1.0 でも普通音をあげて泣きを見るのが落ちですが， Suzuka や ParaFla の SWF4 はもっと大変です（参考資料などもほとんどありませんし）。
Flash/FlexBuilder 両方とも経験がありますが、 Flash経験者であれば、基本的に一人でさくっと作るようなものの場合、Flashでの開発が一番やりやすいはずです。ほとんど新しいことを意識することなくともAirアプリ制作することができます。 ただし、デザイナーと開発者を完全に分離させて作業をするような場合や、開発者が複数人で同時に開発を進めるような場合、Flex Builderなどを使用した方が進めやすいかもしれません。また、Flexの豊富なコンポーネント類も使用できるので、それらの恩恵を受けるアプリの場合、開発が容易になるかもしれません。Flash開発と比較した場合、個人的な意見では、MXML言語を習得するコストやデザインの自由度の低さを考えると、Flashを習得している人間が個人で開発するケースではメリットは少ないかもしれません。 Flex Builderを使用しないMXMLベースの開発に関しては、単純にビジュアルでの確認作業やコンポーネントの配置が面倒なだけです。メリットは無料で開発でき、ツールの習得の手間がかからないことなので、ツールが揃っている状況であればツールを使いましょう。 FlashによるAir開発参考サイトです。 http://www.adobe.com/jp/newsletters/edge/septemb … http://gihyo.jp/dev/serial/01/adobe-apollo/0009
１の方が言ってますがXMLでよいのでは？ ただし、ファイルに書き出すなんてことはしないで 直接phpを実行（実際は該当するurlを呼ぶ) その結果をXMLで返してもらい、 それをパースして使えばファイル使わないので楽です
ご参考までに。 参考URL：http://www.fumiononaka.com/Sample/F-site/ActionS …
AIRアプリケーションを作るなら。 HTMLLoader使えば、HTMLの読込み・表示はできます。 AIRはMacのSafariなどで使われている、 WebKitという描画エンジンを持っています。 そのため、普通に外部のWEBサイトをAIR内で表示することはできます。 http://livedocs.adobe.com/flex/3_jp/langref/inde … Flashの代わりにSWF出力するだけなら、無理でしょう。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/air/html_l …
Actionscript2.0で作成することを前提に書いています。 円を範囲指定する方法は２通りあると思います。 ○マスクを用いる方法 雪を降らすアニメーションのムービークリップに 円形のマスクをかける方法です。 ○スクリプトの方法 スクリプトで円を範囲指定するには三角関数のsin、cosを用います。 例えば、雪のムービークリップ(雪MC)を、設定した円の範囲に 配置するには以下のような式を記述します。 ※雪MCは雪一粒です 雪MC._x = Math.cos(θ)*r 雪MC._y = Math.sin(θ)*r θは角度です(0～360の値が入ります) rは円の半径になります この「θ」と「r」の値をランダムにし、各雪MCを複製していけば円の範囲内に収まります。 アニメーションは雪MC内で作成すればいいと思います。 あと横揺れはガイドレイヤーレイヤーを使って、 波線のパスに沿ってオブジェクトが動くようにすればいいと思います。 参考URL：http://www.procreo.jp/tutorial03.html,http://www …
> 早速『分解』を2度行ったら解決しました。 分解しなくても， テキストの種類を「静止テキスト」にして， 「_ゴシック」や「_等幅」や「_明朝」など，前にアンダースコアのない普通のフォントを選べば回転できますよ。 > ちなみに『ベクター』とはどういう意味なのでしょうか。 ベクターとは，別の発音をするとベクトルです。 ベクトルとは向きと大きさを持つ数で表されたデータです（代数幾何とか線形代数とかのアレです）。 その向きと大きさで数的に表した画像がベクトル画像です。 一方， JPEG や GIF などは向きと大きさのような数式で表された画像ではなく， 点点点点点…　の点（ドットまたはピクセル）ごとの色を持った点々の集まりのデータです。 一応圧縮はされていますが基本的には点々のデータです。 ベクトル画像は，矩形なら矩形，円なら円という数式のようなデータを画像化したものです。 Flash や Illustrator や Inkscape や Wordのオートシェイプ などの画像がベクトル画像です。 円を描いていくら拡大しても円は円ですからエッジがギザギザになるようなことはありません。 MSペイント や PhotoShop などなど（こちらの方がソフトが多い多すぎる...）の画像は，ビットマップ画像です。 一見円に見える画像でも単なる点の集まりですから， 基本的には拡大するとガタガタになります。 ソフトでカバーしたとしても，ガタガタのエッジにピンぼけさせる程度のことしかできません。 Flash でテキストを２回分解すると， Flash で言うところのシェイプになるのです。 シェイプとは文字通り形です。つまりはベクトルです。 ベクトルデータは先述の通り回転も縮小も拡大も自由にできます。 一方，テキストデータは， ビットマップ画像でもなければベクタ（ベクトル）画像でもありません。 単なる 「"テ キ ス ト" の参照データ」 （Midiみたいなものです。Midiは楽譜で音源は別です。） です。 単なる 「"テ キ ス ト" の参照データ」 は Flash 内で回転できません。 「静止テキスト」の， 「_ゴシック」や「_等幅」や「_明朝」など，前にアンダースコアのない普通のフォントの場合は， その文字のアウトラインデータ（文字の絵としてのベクトルデータ）が Flash 内に埋め込まれます。 ですから回転できます（ベクトル画像ですから）。 テキストではなく，フォント自体は，TrueTypeフォントであると，本体はベクトル画像です。 ベクトル画像であるから，何ポイントの文字を打っても，曲線は滑らかなのです。 決してギザギザにはなりません。 テキストデータは，PC内にあるフォント画像への参照データです。 テキストデータ自体には形も何もありません。 「何番の文字」という番号指定データです。 Flash でテキストを２回分解すると テキストの参照元からフォントのベクトルデータが呼び出されてFlash内でシェイプになります。 だから回転できます。
書かれていらしゃるページから，次のようにたどると， LoadVarsオブジェクトを使った外部テキストファイルの読込み http://www.fumiononaka.com/TechNotes/Flash/FN030 … 　↓ URL エンコーディング: テキストファイルからの特殊文字の読み込み http://www.adobe.com/jp/support/flash/ts/documen … 「URL エンコーディング」という言葉が出てきます。 「付録D URLエンコーディング(URLエンコード または URLエスケープ)」 http://www.kinet.or.jp/hiromin/cgi_introduction/ … > D.2.3 URLエンコードを規定したRFC2396(旧RFC1738) > プラスは空白を置換するための特殊な用途で使用しているので、予約文字になります。 つまり， 外部からテキストデータを受信する場合は， いったんURLエンコードされた文字列としてそのデータを受け取ります（だから日本語文字も受け取れる）が， それをFlash内でデコードするときに + は " " にデコードされてしまうのだと思います。
>PHP等でPrintした場合などは、FlashへHTMLのテキストデータをブラウザでなくFlashへ返しているものと思うのですが これは勘違いです、単に相手の出力をFlashが受けるのか ブラウザが受けるのかです さて、自由にデータを返却することを考えると xmlで返答したらいかがでしょうか？ Flash(AS3)側でXMLをパースする必要はありますが、 自由にデータを渡せますよ
MovieClipは、1つのFALSHのように作ることができます。 MovieClipを作成してそのMovieClipのactionscriptに参考にされた スクリプトを記述してみてください。 MovieClipで動作するようになれば、タイムラインのどこでもライブラリから呼び出すことができます。 詳しくは、ヘルプなどを参照してみてください
まず、写真1をムービークリップに変換して、インスタンス名をつけます。 ※　下記のスクリプトでは[content]としました。 写真1をダブルクリックして、残りの写真をネストします。 ボタンを3つ作り全てムービークリップに変換、同様にインスタンス名を付けます。 ※　下記のスクリプトでは[btn1 , btn2 , btn3]としました。 スクリプト var ma :Array = [移動させたいX座標 , 移動させたいX座標 , 移動させたいX座標]; var cnt :Number; btn.onPress = function() { 　cnt = 0; 　onEnterFrame = mover; } btn2.onPress = function() { 　cnt = 1; 　onEnterFrame = mover; } btn3.onPress = function() { 　cnt = 2; 　onEnterFrame = mover; } function mover() { 　content._x += (ma[cnt] - content._x) / 8; }
テキストが埋め込みになっている可能性があります。 プロパティーの中をビットマップテキストになっているかどうか 御確認ください。
？？？？ もう少し詳しく説明しないと、アドバイスは受けれないと思いますが。 htmlでの表示ですか？Flashでの表示ですか？
AとBを呼び出すことのできるCを作成して、AとBは常にCの中で再生させる方法はどうでしょうか？ CはAを再生するボタンとBを再生するボタンを持ち A再生ボタンを押した時 AをロードしていなければAをロード開始 BをロードしていなければBをロード開始 そしてAがロード完了していれば再生を開始する（Bのロード状況は問わない） B再生ボタンを押した時 BをロードしていなければBをロード開始 そしてBがロード完了していれば再生を開始する（Aのロード状況は問わない） ロードしたA, Bは、CにDisplayObject型の変数を用意して保持すればいいです。
短い動画のループでしたら、無理にFLＶを使わずにSWFに変換してから、フレームで動画を垂れ流しにした方が効率がいいですよ。
質問内容が、いまひとつ理解できないのですが そんなに大きなFLASH（察するところムービー）なんですか？ 私もシンプルなムービーを公開していましたが、２分でも 100ｋbにいかなかったのですが。 50MB程度ならフリーでもありますが、そういうサーバでは いかがですか？
Adobeのillustratorがあるなら、そちらで文字を描いて、FlashCSに読み込む際にベクター画像扱いにすればいいかと思います。
このブログが参考になるかと思います。 ちなみにAS3.0で作成されているようです。 http://blog.cyber-media.co.jp/jp.php?title=as3_0 … クラスをコピーして インスタンスを作成するだけのようです。
オンマウスした時にTweenするイベントを登録すればいいのですが、まずプログラムの勉強をした方が良いと思います。
私の過去の回答ですが。 「QNo.4115400 文字がランダムに変化し、正しい文字列にするには？ 」 http://okwave.jp/qa4115400.html
ご希望の内容はFLASHでも実現できます。 (他の方法でもできます。) 少し勉強して作成されてみては如何でしょうか？ 作成された上で、こうしたけどできないとの質問でなければ 回答はなかなか戴けないと思いますよ。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
こちら様のサイトの「ゆっくり近づくマウスカーソルを作りたい」の記事を参考に onClipEvent (enterFrame) { 　var d = 0.15; 　_x += (_root._xmouse - _x) * d; } _root._xmouseを貴方が止めたいX座標に置き換えます。 しかしながらこの記述では、テストした瞬間に対象が動いてしまいますので、「～を押したら」という記述を追加します。 例えば動かしたい対象をcontent01とした場合 content01.onPress = function() { 　this.onEnterFrame = function() 　{ 　　var d = 0.15; 　　content01._x +=(止めたいX座標 - content01._x) / d; 　} } これで、content01を押した瞬間に任意の指定したX座標まで移動できます。 後は、新規レイヤーを各contentの個数分生成して配置し、上記のスクリプトを実行させていきます。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as/mouse.h …
古いActionScriptで言うところの eval関数の事かな？ だとしても現在使えないので 代理手段を探さなくてはいけませんね 方法は何個かあると思いますが、 確か、Objectで似たようなアクセスができたように思います var object:Object = new Object; var name:String = "str_"; var i:int = 1; var string:String = "Hoge"; o[name + i] = string; trace(o[name + i]); trace(o.str_1); ・・・Arrayでもできるかな？ 机上論ですので、通らなかったら 真剣に考えます・・・w
ご質問は結局 　「ActionScript3からActionScript2に移りたい」 ということではなくて， 　「ActionScript1の勉強はActionScript2の役に立つのか？」 ということですよね？ ActionScript3 がそれ以前のものと違いすぎるだけです。 一方， ActionScript1 と ActionScript2 との間には境界なんてあってないようなものです。 関係式に表すと， 　AS1≒AS2 ≠AS3 もしくは 　AS1≦AS2 ≠AS3 のような感じです。 他のものに喩えると 　英文字A～W≦英文字A～Z ≠ギリシャ文字 のようなものです。 英文字（アルファベット）A～Z まで覚えるのでしたら， 英文字A～W まで覚えることも含まれます。 > これはActionScript2を学びたい者には買っても意味がないのでしょうか？ 意味はありすぎると思いますよ。 そこからちょいちょいと足せば ActionScript2 になります。
私が書くことはつまらないことですが， ＃１ ＃２ の方の書かれてらっしゃることを補足します。 > ソフト購入＋本で習得するには難しい世界なのでしょうか？ ソフト購入＋本で習得できない方が， スクールに通って修得できるはずはありません。 --- 私 と A君 の対談 --- A君　徳川家康 って知ってる？ 私　　知ってる知ってる！ A君　何した人？ 私　　たしか...江戸幕府開いたスゴイ人 A君　じゃあ，何年に生まれた人？ 私　　… ??? ? ??? ? A君　じゃあ，徳川家康の残した有名な言葉は？ 私　　… ??? ? ??? ? A君　じゃあ...，いつ亡くなったの？ 私　　… ??? ? ??? ? A君　じゃあ......，最初のお嫁さんの名前は？ 私　　… ??? ? ??? ? A君　結局君は何も知らないんじゃないか！！！ 　　　何をもって「知っている」などと嘘をつくんだ！ --------------------- そんなものです。 私は，小学校６年間，中学校３年間，高校３年間，大学一般教養２年くらい？ の間で，何らかの形で日本史を習い続けていたはずですが， 徳川家康 について身につけたものなんて結局何もありません。 徳川家康 について知りたいのなら，学校ではなく当然独学でしょう。 徳川家康 について文献などで調べて独学ができない人は，徳川家康について何一つ語ることなどできません。 と言いましても， 上と違うことは， Flash など Web系 のスクールであれば， そのスクールや教員がそれなりのコネクションを持っているはずです（持っていなければ価値なし）。 それ以上のことは特に言う必要もないと思います。
「根本的な作りを触ることなく、簡単に解決できる方法」かどうかはどのような作りになっているかに依るので何ともいえませんが、3つほど選択肢を挙げてみます。 1. 「SWFAddress」などのライブラリを使用して予め各階層にアドレスをつけておく。(Javascriptとの連携) 2． 店舗ページ(HTML)からFlashページに戻る際にURLに引数を渡し、Flashで値を受け取って表示を変更する。 3. SharedObjectを使用し、最後に見た状態をローカルに保存しておく。地図を読み込む際に最後に表示した状態に変更する。 現在は１の方法で実現するのが一般的ですが、作り方によっては根本から作りを見直す必要があります。他の選択肢も、それなりに変更の必要が出てくると思いますが、どの程度の作業になるかはどのような作りになっているかがわからないので判断できません。 ただ、このような仕様は最初から念頭に入れて設計しておくべき事柄ですので、後からなんとかしようとしても困難なケースが多いです。
申し訳ありません。suji-様のご質問を熟読せず返答してしまった節があります。　 ケース3のマウスホイールの機能を切るに関してですが、わたしの場合自作のスクロールパネルだったので、切ることが可能でした。コンポーネントをご利用に当たっては解り兼ねます。ご了承下さい。
その， > サーバ上にあるイメージファイルとテキストファイル が，アップしたSWFと違うドメインにあるからではないでしょうか？ クロスドメインでも loadMovie までは大丈夫です（ただしロードするだけの機能限定）。 しかし， loadVariables や LoadVars.load や XML.load など， 外部ドメインのテキスト情報は取得できません。 検索「Flash クロスドメイン」 http://www.google.co.jp/search?hl=ja&q=Flash+%E3 …
もう少し簡単に。^^; [skip]と[replay]はムービークリップですよね。 １フレーム目に「top」426フレーム目に「end」と半角英数でフレームラベルを付けてください。そして、426フレーム目のフレームに this.stop(); とアクションをつけます。（必ず半角英数で） 次にボタンを配置したレイヤーで１フレーム目の[skip]を選択。 on (press, release) { _root.gotoAndStop("end"); } とムービークリップアクションをつけます。 次に426フレーム目の[replay]を選択。 on (press, release) { _root.gotoAndPlay("top"); } とムービークリップアクションをつけます。 上記の場合、インスタンス名をどちらも不要です。 ご参考まで。
こんにちは。 【ノートに付箋をペタっと貼る】 というのは 【ノートのある部分に付箋紙を移動すると吸着する】 と僕は読み取りました。 _droptargetを使うのはいかがでしょう。 詳しくは参考URLを・・・。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as/mouse.h …
貴方が仰っていることは多分、こちらで解決出来る筈です。 参考URL：http://www.procreo.jp/tutorial01.html
スクリプト、拝見させて頂きました。 シークバー以前にビデオが再生されましたか？ 問題点ですが import mx.video.*;の宣言がある事。(あっても良いのですが必要ないです。) 再生する動画が1だけですがArrayに格納している事。(これもスクリプトとしてはエラーでは無いですが、必要ないです。) 通常、動画再生に必要ないリスナー用オブジェクトが生成されている事。 （宣言しても問題ではありませんが、このプログラムのケースでは有効ではないです）。 スクリプトの中間にaddEventListenerの表記がある事。 スクリプトの文末にonRelaseが使われている事。 VideoPlay();という関数が使われている事。(こちらも間違いではありませんが function VideoPlay()という形でユーザー関数が定義されていません)。 他にも色々問題点があるようですが、何か参考書籍を購入されてご覧になった方が良いですね。 冷たい言い方ですが、現状では厳しいと思いますよ。
Web カメラの映像のことで、よろしいでしょうか？ ローカルにつないだ Web カメラから入力された映像を Flash 内に表示する方法でしたら、以前、紹介したことがありますので、よろしければご参照ください。＃４で回答しております。 Flash MX 2004 時代の古い話の上にネットワーク上の Web カメラを制御する方法でもないのですが、Flash でカメラの映像を扱う話ということで、ご参考までに。 　・flashにウェブカメラを埋め込むにはどうすればよいのでしょうか。 　　http://okwave.jp/qa1790502.html なお、「 Flash Communication Server 」は、現在は「 Flash Media Server 」という名称に変わっているそうです。
何か難しいことをしているように見えます。 シンプルに考えましょう。 //貼り付けたい写真の総数 picNum = ???;//xmlから取り出す //初期座標（最初の左上の座標） X_INIT = ???;//好きな位置に決める Y_INIT = ???;//好きな位置に決める //写真をおける領域の幅と高さ SCREEN_WIDTH = ???;//好きに決める //写真と写真の横の間隔 sh = 30; //現在の座標 px = X_INIT; py = Y_INIT; for(i = 0 ; i < picNum ; i++){ // 空のムービークリップ p_mc0～ノード数 を作成 pic = _root.createEmptyMovieClip("p_mc"+i,i); //picに写真を突っ込む //写真の位置を決める pic._x = px; pic._y = py; //写真の幅 picWidth = ???;//xmlから取り出す //----現在位置の更新処理 //現在のx座標に、今取り出した画像の幅と間隔分足す x += picWidth + sh; //表示領域の幅を上回っていたら一段下ろす if(x > X_INIT + SCREEN_WIDTH){ x = X_INIT;//x座標は初期位置 y = ???;//写真の高さ } //---------------------- //次の写真へ～ }
申し訳ありません。下記に誤りがありましたので修正させて頂きます。 var percentNo :Number = info.bytesLoaded / info.bytesTotal; 　　　　　　　　　　　　　　　↓ var percentNo :Number = bInfo.bytesLoaded / bInfo.bytesTotal; です。失礼しました。
追記 : onRollOut した場合も同様にsetIntervalをクリアして下さい。
もしかしたら、出来るかもしれませんが基本的にはflashでスクリプトを施してからブラウザ上で再生という流れになります。 ご自身がflashを操作出来る環境であることが必須です。 因みに文末の 自分のサイトで組み込むのとyoutubeから引っ張ってくるのはどっちが軽いのでしょうか？ の質問ですが、自分のサーバーに上げた方が早いのは確実だと思われます。 もしflashをお持ちであるならば、ご連絡下さい。 ファイル名を書くだけで再生出来る様、スクリプトを書きますので。
No.1です もちろん、リサイズできるコンテンツだとしても リサイズしたくないシンボルを拡大することもできます
付けることは可能ですが、ソースが長くなりますので、ご自身で試行錯誤してみて下さい。
外部SWFコンテンツを読み込む方法としては、参考URLを参照ください。 質問されるときは、Flashのバージョン、ActionScriptのバージョンの記述と詳しい条件などを書いていただけると回答が付き易いようですよ。 参考URL：http://support.adobe.co.jp/faq/faq/qadoc.sv?2314 …
文章で説明しようかともおもいましたが、こちら様のサイトが的確だと判断しましたのでサイトURLをUPさせて頂きました。 補足ですが 最初にサイズを決めて作成しますよね？ その際に、あのようなサイトはどういうサイズ決めをしているのでしょうか？ という質問に対してですが、どのようなディスプレイサイズにも対応させる為、関数にウィンドウをリサイズしたら画面一杯に表示するよう一まとめにスクリプトを記述しておいて、サイトを開いた瞬間に関数を一度実行し、フルスクリーンを実現させています。 以降、観覧者が任意のサイズにウィンドウをリサイズするのに合わせて、上記に記述した関数を延々と実行するという流れじゃないでしょうか。 参考URL：http://www.project-nya.jp/modules/weblog/details …
手順1 :　ステージ上にインスタンスを設置します。(MovieClip ボタンなど) 設置した対象物を選択した状態で右クリック。[シンボルを変換]を選択 → OK　 ショートカットキーは F8 インスタンスを選択した状態で[プロパティパネル]から[<インスタンス名>]に任意を名前を付けます。 ※名前の付け方にはルールがありますが、他のTipsサイト又は書籍等から調べて下さい。 手順2 : タイムライン上で任意のフレーム数に[キーフレーム]を打ちます。 手順3 : アクションスクリプトを書きます。 AS2.0の場合 手順1で付けたインスタンス名(例 : btn , mc).onPress = function { gotoAndStop(); ()の中には移動させたいフレーム数を書きます。例 : 1 2 3 4 5 ....等。 } AS3.0の場合 手順1で付けたインスタンス名.addEventListener(MouseEvent.CLICK , 任意の関数名); function 任意の関数名(任意の引数 : MouseEvent) :void { gotoAndStop(); ()の中には移動させたいフレーム数を書きます。　　例 : 1 2 3 4 5 ....等。 } でいける筈です。　頑張って下さい。
インスタンスの基準点を変更するということでしょうか？ 　例えばシンボルをステージ上に配置して、インスタンスに変更。 その際に基準点を右上に設定し、インスタンス名をmainとします。 　インスタンスmainをダブルクリックして再度中身をインスタンスに変更。 インスタンス名をnestとし、右上を基準点にします。 ネストされたインスタンスnestの基準点を手動で中心に合わせます。 スクリプトで onEnterFrame = function { 　main._rotation += 5; } とした場合と onEnterFrame = function() { 　main.nest._rotation += 5; } とした場合では 回転の仕方がかわってきます。
まず、FlashのHTMLの表現能力はかなり低いので （TextAreaなどではTable等の表現が難しい) 解析・分解して表示することになるかと思います。 もし、そのHTMLがXMLとしても正しく解釈可能な体裁ならば XMLとしてパースするのが近道だとおもいます。 CGIの出力形式をXMLに変えてみるのも大した手間ではありません。 分解がうまくいけば、 addChildなどで行数分追加し、表示すればよいでしょう
プロジェクタ形式であれば fscommand("fullscreen", "true"); を指定すると全画面表示になります。 HTML内のswfからの指定であれば、リンク先のサイトを参考にされてはいかがでしょうか？ 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as/stage.h …
私も１さんと同じ意見です。 loadMovieを使っているのでしょうか。 参考URL：http://www.barque.jp/tips.html?num=2
マスクと読み込んだ画像をくるむシンボルをドラッグさせる必要があります。 たぶん、今は読み込んだ画像に対してドラッグが効いているのではないでしょうか？
お試しならば、試用版を使ってみてはいかがでしょうか？ 個人的にはフリーで利用できるSWF制作ソフトは、それなりの事しかできないと思うのですよ。
そのパスワードに「かな文字」を使わない場合の方法ですが… textbox.restrict = "A-Za-z"; と言スクリプトで入力制限をかけてはどうでしょうか？
一般的なのはデバイスフォントにする・・・というのはもちろんご存じの上の質問ですよね。 どのような使い方をされるのかわかりませんが、ある程度決まった文字しか使われないのであればスクリプトを作って静止テキストで文字を作ってしまうとか、英数字だけの固定入力部分があれば欧文フォントだけ埋め込むのであればかなり軽いですが。。。 ちょっと現実的ではなさそうですね。すいません^^
そうですね…。　まず、用語を覚えることから初めては如何でしょうか？　シンボル、インスタンス、リファレンス....etc ↑ （アクションスクリプトを早く覚えたい余り、省略していませんか？） 次に３～４行で簡潔する単純なスクリプトを何度も反芻します。 ↑ (いきなり機能的な物を作ろうとせず、感覚を掴んで下さい) 最初からピースをはめようと努力するのではなく、自分の持っていないピースを掻き集めることの方が大事です。頑張ってください。
Flashの問題ではなくてスタイルシートの問題じゃないでしょうか。 同じ大きさの画像をFlashと同じ位置に貼り付けてみてきちんと表示されるかどうか試してみてはどうでしょうか。
こんな感じらしいです。 FLASH-JP.COM - フォーラム 「MovieClipあるいはSpriteのルートからのパスを調べるには」 http://www.flash-jp.com/modules/newbb/viewtopic. … 誰からもツッコミが入ってないので，路線的にはこのような感じにする（しなければならない）のではないでしょうか。
サイト内のページ移動を全てFlashのボタンにしたうえで， 条件分岐の消去法で行くとある程度できるかもしれません。 そのFlashを設置したHTMLに便宜上「A.html」， そのFlash自体に「A.swf」という名を付けたとします。 「A.html」へのアクセスには次のようなものが考えられます。 　１　お気に入りなどショートカットからのアクセス 　２　他のサイトからのリンクアクセス 　３　他のサイトからの「戻る」アクセス 　４　他のサイトからの「進む」アクセス 　５　「A.html」のあるサイト内からのリンクアクセス 　６　「A.html」のあるサイト内からの「戻る」アクセス 　７　「A.html」のあるサイト内からの「進む」アクセス １　お気に入りなどショートカットからのアクセス 　　referer（JavaScriptで取得） なし ２　他のサイトからのリンクアクセス 　　referer あり 他サイト ３　他のサイトからの「戻る」アクセス 　　referer あり 他サイト ４　他のサイトからの「進む」アクセス 　　referer あり 他サイト ５　「A.html」のあるサイト内からのリンクアクセス 　　referer あり 自サイト （Flashボタンのrefererは取れない） 　　SharedObject でクリック検知可 ６　「A.html」のあるサイト内からの「戻る」アクセス 　　referer あり 自サイト ７　「A.html」のあるサイト内からの「進む」アクセス 　　referer あり 自サイト 「A.html」のあるサイト内からのリンクアクセスの場合， ページ移動用のボタンをFlashで作成しておけば， そのボタンを押して他のページに移動した場合， SharedObject（共有オブジェクト）に固有の値を残せます。 例えば「B.html」にある「B.swf」のボタンでしたら， click="B" 例えば「C.html」にある「C.swf」のボタンでしたら， click="C" などなど… また「A.html」から他のページに行くときは， click="A" です。 ですから，第一分岐で， SharedObject参照で click の値として "A" 以外を判定すれば， ５　「A.html」のあるサイト内からのリンクアクセス が他のものと区別できます。 ただし， 「B.html」や「C.html」などのページから他のページを経由したり， 一旦ブラウザを閉じたりするとその "B" や "C" は残ることになりますから， ある範囲の時間内（１秒とか内）で保存された "B" や "C" であれば，"A" 以外であると判断させるような必要があります。 第二分岐で， referer あり/なし を判定すれば， １　お気に入りなどショートカットからのアクセス がは他のものと区別できます。 第三分岐で， referer ありで，それが 他サイト であるのか自サイトであるのかを判定すれば， ２　他のサイトからのリンクアクセス ３　他のサイトからの「戻る」アクセス ４　他のサイトからの「進む」アクセス 　　　------------- ６　「A.html」のあるサイト内からの「戻る」アクセス ７　「A.html」のあるサイト内からの「進む」アクセス ２・３・４ と ６・７ が区別できます。 ここまでをまとめます。 　　　↓↓↓ 　時間内に保存された SharedObject の click が "A" 以外であって 　（実際は保存されていない場合も "A" に入ります）， 　referer が 自サイト内ページ である場合， 　　６　「A.html」のあるサイト内からの「戻る」アクセス 　　７　「A.html」のあるサイト内からの「進む」アクセス 　のどちらかである。 ここまで求められます。 自サイト内からの「戻る」ボタンと「進む」ボタンによるアクセスの区別はつきませんが， ここまでならなんとか四苦八苦すれば不可能ではないと思います。 実際にどういうコードにすれば良いかはわかりません。 JavaScript も登場しますし，それとの連携も必要です。 また， サイト内の移動ボタンをすべてFlashボタンにするのも，良いこと？？？ とも思います。 何にしても，ブラウザの「戻る」ボタンの検知など， HTML でも JS でも基本的に不可能です。 Flash を利用すると， それらの機能にプラスして少しだけ絞れるようになるというだけの案です。
mc_stage がステージ内のどの座標を占めているかを調べ、その範囲内にキラキラを出現させてはいかがでしょう。 あるムービークリップが占める座標は、幅・高さと _x ・ _y をもとに自分で算出することも可能ではありますが、それよりも、MovieClip クラス（ Flash MX 以前はオブジェクト）が持っている” getBounds ”というメソッドで簡単に取得できます。 このメソッドで分かるものとは、あるムービークリップが占めている空間の、Ｘ座標とＹ座標のそれぞれ最小値と最大値です。 細かいことを抜きにして簡単に言いますと、選択ツールでムービークリップを選択した時に表示される四角形のマーカーの、四隅の座標が判明するということです。 これらの座標の範囲内で乱数を作成すれば、特定のムービークリップの上にだけキラキラを出現させることができます。 なお、Flash Player 8 からは” getRect ”といって、getBounds と似たような機能のメソッドも利用できるようになりました。 getBounds との違いは、大きさの計測に線の幅を含むかどうかです。 線の幅も含んだ座標を返してくる getBounds に対し、線を含まない座標を返す getRect の戻り値は、線の分だけ値が小さくなります。 今回はさしあたって、古いバージョンの Flash Player でも使える getBounds を使用した作例をご紹介します。 ------------------------------------------------------------ ステージに、ムービークリップ” mc_stage ”があるとします。 この上にだけキラキラのムービークリップ” Fwks ”の複製をランダムに配置するスクリプトは、大体、次のようになります。 このスクリプトは、メインのタイムラインのフレームに記述してください。 mc_stage が占める座標を取得する部分を追加した点と、キラキラの出現範囲の求め方を変更したことを除けば、ご提示のスクリプトと同じです。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /**********************************************************/ 　//mc_stageが占める座標空間の情報を取得 　//基準にする座標系はステージ（＝_root） 　bounds_obj = new Object(); 　bounds_obj = mc_stage.getBounds( _root ); 　//キラキラの出現範囲 　x_min = bounds_obj.xMin; 　x_max = bounds_obj.xMax; 　y_min = bounds_obj.yMin; 　y_max = bounds_obj.yMax; 　//指定の範囲内にキラキラを出現させる 　level = 1; 　this.onEnterFrame = function() { 　　if (Math.random()*10>9) { 　　　level++; 　　　newname = "Fwks"+level; 　　　Fwks.duplicateMovieClip(newname, level); 　　　//----------------　この部分を変更　---------------- 　　　//this[newname]._x = Math.random()*sw; 　　　//this[newname]._y = Math.random()*sh; 　　　this[ newname ]._x = Math.floor( Math.random() * ( x_max - x_min + 1 ) ) + x_min; 　　　this[ newname ]._y = Math.floor( Math.random() * ( y_max - y_min + 1 ) ) + y_min; 　　　//----------------　変更ここまで　---------------- 　　} 　　if (level>8) { 　　　this.onEnterFrame = undifined; 　　} 　}; /**********************************************************/ 冒頭の bounds_obj = mc_stage.getBounds( _root ); で、mc_stage がステージ上で占めている座標の情報が、変数 bounds_obj に入ります。 getBounds が返してくる値はＸおよびＹ座標の最小・最大と、値が４つあるため、汎用型である Object 型の変数を作って受け取ります。 受け取った４つの値を識別する xMin や yMax などの名前は、getBounds の中で予め決められています。 言うなれば、値を受け取るための入れ物を１つ渡すだけで、getBounds の方で仕切りを作り、値を分けて返してくれるようなものです。 getBounds から受け取った値をそれぞれ見るには、渡した入れ物の名前と仕切りの名前の２つが必要です。 先のスクリプトでは、渡した入れ物の名前は” bounds_obj ”ですから、例えばＸ座標の最小値を見る時は 　x_min = bounds_obj.xMin; というように書きます。 mc_stage が占める座標を取得したら、これらをもとにキラキラの出現位置をランダムで決めます。 つまり、基本的には、キラキラのＸ座標は mc_stage が占めるＸ座標の最小から最大値まで、Ｙ座標も同様に mc_stage が占めるＹ座標の最小から最大値の範囲で決めればいい、ということになります。 ただし、これだけですと、mc_stage の範囲ギリギリにキラキラが出現する可能性もあります。 mc_stage の端スレスレの位置に出現した場合は、キラキラの端が欠けたり、はみ出して見えることになります。 上記のスクリプトでは省略していますが、実際には、mc_stage の範囲の他にキラキラの大きさも考慮して出現範囲を決めてください。 ある範囲内の乱数を作る方法は、Flash のテクニカルノートに説明があります。 よろしければご参考になさってください。 　・ Adobe サポートデータベース： 　　 Math.random() でランダムな整数を取得する方法 　　http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 …
データなどがないので何にも検証していませんが。 単純に 「data.xml」 がロードされる前に textarea2.text=abc[0]; //(2) を実行しているので， 配列 abc は空のままであるため (2)のabc には何も格納されないだけだと思います。 textarea1.text=abc[0]; //(1) の方は， myXML.onLoad =function (){ } 内で実行されます。 つまり， myXML.onLoad（=myXML に何かがロードされた）時に実行されます。 ですから，配列 abc に何かのデータが入るので， textarea1.text には何かが表示されるのだと思います。 単純に，こうすれば良いだけだと思いますが↓。 abc = XPathAPI.selectNodeList(this.firstChild, XPathString); textarea1.text=abc[0]; //(1) textarea2.text=abc[0]; //(2) } ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ // myXML に何かがロードされたときに 動作A を実行 myXML.onLoad = function(){ 　　動作A(); } 　コレ↑ と コレ↓ は同じようなことです。 // myButton がクリックされたときに 動作A を実行 myButton.onRelease = function(){ 　　動作A(); } 上は， XML がロードされたときにはじめて実行する動作を定義しているだけで， XMLがロードされない限り実行されません（ロード失敗でも実行されますが）。 いつXMLがロードされるかなど知りません。 回線の状況やファイル容量などによって全く変わります。 とにかくXMLがロードされたときにはじめて 動作A が実行されます。 下も， ボタンがクリックされたときにはじめて実行する動作を定義しているだけで， ボタンがクリックされない限り実行されません。 いつボタンがクリックされるかなど知りません。 Flashを閲覧した人のボタンの存在認識やクリックしたい気分によって全く変わります。 とにかくボタンがクリックされたときにはじめて 動作A が実行されます。 長く書きましたが， 結局 ＃１ の方の書かれていらっしゃることと結論は同じです。
「きちんと書きこめている」という定義も難しいですが それを、PerlかFlashのどちらが検知したいのかがわかりませんが、 1.Flashがパラメタを送信し、レスポンスを待つ 2.Perlがパラメタを受信する 3.Perlがパラメタを処理する 3-1.Perlでエラー（正しくない）が発生した -> エラーを意味するレスポンス 3-2.Perlで処理を正しく完了した -> 成功を意味するレスポンス 4.Flashがレスポンスを受け取る 5.レスポンスに応じて処理 といった感じがよくあるFlash通信です どこでつまづいているか明示してくだされば もしかしたら、何か提示できるかもしれません
＃１ です。 > >「再生終了」など待たずに，たとえば 10秒 ごとに， > 淡々と「次のSWF」「次のSWF」とロードしていくようにするかです。 > > こちらのやり方も教えていただけませんか？ Flashのバージョンなどを確認していませんでした。 ご質問のスクリプトが Flash5 で使用できるスクリプトであったため， 私が ＃１ で書いたスクリプトも Flash5 で使用できるものにしてあります。 10秒 ごとなどに何かを実行させる場合， Flash5 では普通，getTimer() 関数を使用します。 getTimer() はムービーが開始されてから， その関数が実行されるまでの経過時間を， ミリ秒単位で取得できる関数です。 １秒は1000ミリ秒です。 10秒であれば10000ミリ秒になります。 これを使うと次のようになります。 ------------------------------------------ // このムービークリップが表示されたときに実行 onClipEvent (load) { // 外部ファイル名データを入れる配列を作成 fileArr = new Array(); // 配列の要素に外部SWFファイル名を登録 (変える) fileArr[0] = "aaa.swf"; fileArr[1] = "bbb.swf"; fileArr[2] = "ccc.swf"; fileArr[3] = "ddd.swf"; fileArr[4] = "eee.swf"; // // カウント用の変数 cnt の初期化 cnt = 0; // 配列の cnt 要素のSWF を mc にロード mc.loadMovie(fileArr[cnt]); // ムービーが開始されてからの時間（ミリ秒）を取得 time1 = getTimer(); } // // １フレーム進む時間毎に随時実行 onClipEvent (enterFrame) { // ムービーが開始されてからの時間（ミリ秒）を取得 time2 = getTimer(); // time1 と time2 の差が 10000ミリ秒 以上になれば if (time2-time1>=10000) { // ムービーが開始されてからの時間（ミリ秒）を再取得 time1 = getTimer(); // // もし cnt の値が 配列の要素数-1 未満であれば if (cnt<fileArr.length-1) { // cnt に 1 を加算 cnt++; } else { // それ以外は cnt を 0 に戻す cnt = 0; } // 配列の cnt 要素のSWF を mc にロード mc.loadMovie(fileArr[cnt]); // } } ------------------------------------------ Flash MX 以上（FlashPlayer6 以上） になると， setInterval が使えます。 場合によってはこちらの方が便利かもしれません。 参考までに。 参考URL：http://www.google.co.jp/search?hl=ja&q=setInterv …
＃３の方の補足。 もし，アニメーションをムービークリップ内に作成してしまっていた場合です。 01 ActionScript 3.0を使ってみよう - 「Adobe Flash CS3 Professional ActionScript 3.0」 http://www.fumiononaka.com/Sample/F-site/ActionS … 　　　～引用～ > ●シンボルとインスタンスのタイプ > 　シンボルには、[ムービークリップ]と[ボタン]、 > 　それに[グラフィック]の3つの[タイプ]があります(図01-003)。 　　　～中略～ > 　[ライブラリ]から[ムービークリップ]シンボルをステージに > 　ドラッグ&ドロップすれば、 > 　[ムービークリップ]インスタンスが配置されます。 > 　同様に、[ボタン]シンボルをドラッグ&ドロップすると、 > 　[ボタン]インスタンスができます。 > 　しかし、これらインスタンスの[タイプ]は、 > 　プロパティインスペクタで変更することが可能です(図01-004)。 > 　シンボルの[タイプ]が何であっても、Flashムービー上のふるまいは > 　インスタンスの[タイプ]によって決まります。 　　 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 「FLASH学習・技法　シンボル」　 ［ (￣ー+￣)ニヤリ ］ http://www17.ocn.ne.jp/~wolves/SCHOOL/lecG/lecG2 … 　　　～引用～ > シンボルの変更 > >　すでに作ったシンボルの形の変更や > タイムラインの編集をする場合、 > ドキュメント上にあるシンボルをダブルクリックします。 　　　～中略～ > ※２ もうすでにタイムライン上にあるインスタンスには反映されません 　　　　~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ というわけで， グラフィックシンボル に変更するではなく， プロパティインスペクタで "インスタンスのタイプ" を グラフィック に変更して， 併せてメインタイムラインのフレーム数をインスタンス内のフレーム数に変更。 だと思います。 そしてさらに， プロパティインスペクタで「ループ」または「一回再生」を選ぶ必要があります。 ※ あと，ご質問の最初から気になるのですが。 作成した GIF の動きは， ブラウザ（IEなど）など， "ちゃんとアニメーションGIFが動くソフト" で閲覧されていらっしゃいますか？ MSペイント とか 普通の画像ビューア とか，フォトレタッチツールで閲覧しても普通は静止画ですよ。 （静止画閲覧・作成・編集ソフトなので当然です。） ※あと...， これを書くと話がさらにややこしくなるので書きたくはないのですが， 「ムービーの書き出し」 では， ムービークリップインスタンス内の動きは GIF アニメになりません。 しかし， パブリッシュ設定で GIF イメージ にチェックを入れて 「GIF」タブから「アニメーション」「ループ」などにチェックを入れておいた上で， メインタイムラインのフレーム数をインスタンス内のフレーム数以上にしておくと， ムービークリップ内の動きも GIF アニメになると思います。 ↑最後のコレはややこしければ無視してください。
＃１です。 それは、失礼しました。 参考URLをあげておきます。 参考URL：http://www.tku.ac.jp/~densan/local/flashplayer/f …
ActionScript3.0 がわからない者（検証できないので回答したくない者）ですみません。 ActionScript2.0 では普通次のようにします。 Arrayクラス や Stringクラス は AS3 も 2 も基本的に同じだったと思います。 ご質問の本題は，読み込み方法ではなく，文字列データの操作です。 ロードと文字列データ操作は全く別ですから， とりあえず切り離して考えた方が良いです。 下記スクリプトは， 外部ファイルをロードして str に文字列を取得できたところからの続きです。 -------------------------------------------- //　　…上は略… var str : String = url_loader.data; // str を改行コードで分割して配列にする var tmp:Array = str.split("\n"); // データ用配列を作成（後に二次元配列になります） var arr:Array = new Array(); // 配列 tmp のエレメント数分 ループ for (var i:Number = 0; i<tmp.length; i++) { arr.push(tmp[i].split("\t")); } // … 検証 … trace("arr[0][0] = "+arr[0][0]); trace("arr[0][1] = "+arr[0][1]); trace("\n … … 略… … \n"); trace("arr[1][2] = "+arr[1][2]); -------------------------------------------- 改行コードを一応 \n としていますが， これはデータを作成するソフトによって変わります。 \r\n の場合もありますし \r の場合もあります。 TAB は \t で良いと思います。 ActionScript2.0 では， 数は Number しかないので 　// 配列 tmp のエレメント数分 ループ 　for (var i:Number = 0; i<tmp.length; i++) { としていますが， ActionScript3.0 では 　// 配列 tmp のエレメント数分 ループ 　for (var i:int = 0; i<tmp.length; i++) { になると思います。 その他，細かい部分が違う可能性もありますが， 大筋は上のように 配列に格納してしまう方法 でできると思います。
＞普通にソースを覗いてみても見当たりません。 <iframe>等で呼び出している場合はFlashだと気づきにくいし、 JavaScriptでFlash埋め込みのソースが書き出されている場合はソースを眺めるだけでは分かりません。 ＞何か特殊なソフトが必要なんでしょうか？ 私の場合は特にソフトなしでも、メモ帳（テキストエディタ）だけあれば読めますので、 特殊なソフトはいらないと思います。 楽にはなるかもしれませんし、JavaScriptを読む自信が無かったりするのであれば、 ソフトを探したほうがいいでしょうね。
> いざブラウザに埋め込んで再生をすると、読み込んで > くれていないのか、表示されません。 「ブラウザに埋め込んだ」 のではなくて， 「HTML に埋め込んでブラウザで開いた」 のではないでしょうか？ ファイルの階層構造が以下の場合， 　任意のフォルダ 　　├○○.html （○○.swf を埋め込んだ） 　　├○○.swf ←ココに 0123.swf や start.swf をロード 　　├ 0123.swf 　　└ start.swf この場合は， 　_root.mado.loadMovie("0123.swf"); や 　_root.mado.loadMovie("start.swf"); で， ○○.swf の _root にあるムービークリップ mado にそれぞれがロードされます。 しかし， ファイルの階層構造が以下の場合， 　任意のフォルダ 　　├○○.html （○○.swf を埋め込んだ） 　　└ flash（フォルダ） 　　　　├○○.swf ←ココに 0123.swf や start.swf をロード 　　　　├ 0123.swf 　　　　└ start.swf この場合は， 　_root.mado.loadMovie("0123.swf"); や 　_root.mado.loadMovie("start.swf"); では， ○○.swf の _root にあるムービークリップ mado にそれぞれがロードされません。 この場合は， 　_root.mado.loadMovie("flash/0123.swf"); や 　_root.mado.loadMovie("flash/start.swf"); とするべきです。 loadMovie は，ブラウザに対するリクエストです。 ○○.html をブラウザで開いている場合， ブラウザが存在する場所（表示しているもの）は ○○.html です。 したがって， ○○.html から見たファイルパスを書かねばなりません。
>ネットワークが故障していてエラーを出しても、 >ファイルが存在しなくてエラーを出しても、 >同じ扱いになるんですよね？ 返ってくるIOErrorEvent.textの値でエラーの種類を判断することは可能です。 ファイルが存在しない場合は、"Error #2035: URL が見つかりません。"と返ってくるはずです。 参考URLにランタイムエラーがまとめてありますので、参考にしてみてください。ここに記載されている以外のエラーをFlashで取得しようとしても不可能です。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
めくれるように見えればいいのですから、 パラパラ漫画のようにフレームに書けばいいと思うのですが。 コマを細かくすればなめらかですし、おおざっぱにすればおおざっぱになりますが・・・。 私が作るならとりあえず3フレームぐらい作って見てはいかがですか？ 四角形を変形させてるだけだとおもいますが・・。
単純な話で， FlashPlayer7 は ActionScript3 をサポートしていないからでは？ ActionScript3 とか 2 とかいう問題ではなく， FlashPlayer7 で再生させるためには FlashPlayer7 対応で全てを作成しないと...。 （FlashPlayer7 に限らず全バージョンに対して言えることですが。） > この２つで、何か違いが > あるのでしょうか。 > （HTMLで表示する場合は、 > 問題ありません。Player単独で > 再生する場合です）。 ブラウザのFlashPlayerのバージョンが9なだけでしょう。 おそらく，それだけのことだと思います。
単純な話で、フレームに戻る度にbgm.play()が実行されているので、 1フレーム目にはBGMを再生するスクリプトのみを記述し、 それ以降でフレームの遷移を行うようにすればよいのではないでしょうか。
実際に企業サイト制作の仕事に関わっている者です。Flashとはほぼ関係のない質問ですが、現場では実際にどのような手順で制作されるか、また、制作している人間はどのような技術を身につけているのかを簡単に説明しようと思います。 まず、そのサイトのレイアウトがどのように実現されているか、というのはFlash以外はHTMLのソースを見ればほぼ把握できます。それを見て理解できない部分がありましたら、自分で調べて解決していく、というのが基本的にWEBを学習していく上で欠かせないことです。 基本的にはHTMLとCSSの理解があればサイトの構造は作成できますが、例に挙げられた企業サイトレベルのクオリティとなると、それ以外にJavascriptやActionscriptのスキルが必要になります。OSやブラウザごとの見え方の違いなども知識として持っていなければなりません。当然、すべて一人で制作するとなると情報設計や視覚的なデザインのスキルも身につけていなければなりません。サーバー側の基本的な知識も不可欠でしょう。 とはいえ、これらすべてを高いクオリティでこなせる人間はプロの現場でも早々いるものではありません。例に挙げられたような大企業のサイトは基本的には分業になります。 制作する企業によって兼任していたり、さらに細かく分かれていたりと様々ですが、およそ以下のような分業になります。 1．与えられた情報をもとにサイトの基本構造を構築する人間 2．それをPhotoShopなどを使用してデザインに落とし込む人間 3．さらにそれをHTML、CSS、Javascriptなどのコードを記述してHTMLとしてレイアウトを仕上げていく人間 4．Flashを作成する人間 ここでの質問は上記工程の3に該当しますが、これは基本的なCSSを学習してから、実際のページではどのように制作しているかソースを見てみるのが最善の策です。 どのようなツールを使用するかは人それぞれですが、Dreamweaverを使用せずに自分に合ったHTMLエディタなどを使用して記述している人が多いようです。 もし仕事としてのスキルを身につけるのであれば、広く浅く一通りすべてのスキルを身につけてから、さらに自分の興味の向いたスキルを中心的に伸ばしてみるとよいです。がんばってください。
解答NO.1です。 すいません。ちょっと勘違いしてました。 プログラミング（ActionScript）での爆破のやり方を聞いているのですよね？ 下記のURLからサンプル→第8章sample-b53シューティングゲームが参考になるのではと思います。ファイルをダウンロードする事ができます。 http://hfm-kenchan.com/xbook/index.htm 参考URL：http://hfm-kenchan.com/xbook/index.htm
このコード自体には特に問題はありません。 何もエラーが出力されないようでしたら、読み込んだswfファイルでどのような処理をしているかが問題だと思います。 まずは読み込む先のSWFの内容を極力シンプルにした状態で試して、原因を特定してみることをお勧めします。
具体的なスクリプトが公開されていないため、どこに引っかかっていらっしゃるのかが分かりかねますが、 ＞クリックしたら消えるスクリプトだと、＊動画が再生されずに消えてしまいます。 という文面から、 mcをクリックした時にremoveMovieClipメソッドを呼んでいるのかなーっと予想しています。 例えば一つのやりかたとして、 クリックしたときは、シャボン玉の割れるムービー再生だけを呼ぶことにして、シャボン玉が割れるムービーの最終フレームにremoveMovieClipメソッドを記述すれば良いのかなーっと思います。 とりあえずソースをアップするのが手っ取り早いと思います。
私はSQL関係は触った事が無く、かつ開発環境もFLEXでは無いので 参考意見程度にしてください。 エラーを見てみると "onCreate1は引数は0個と指定されているのに1つの引数が渡されました" となっていると思います。 ※2の時、onCreate1が実行されるのは stmt.addEventListener(SQLEvent.RESULT, closure); このイベントリスナーが実行される時だと思います。 私はSQLEventはテストできないので仮にMouseEventに置き換えます。 stage.addEventListener(MouseEvent.CLICK, closure); この際、closureつまりonCreate1にはMouseEventが渡されるので、 function onCreate1(event:MouseEvent):void { } とevent引数を指定します。 これで引数の数が合うのでエラーにはならないかと思います。 ただ、※1の function() :void{Alert.show("テーブルmeiboを作成しました"); } にも引数は指定されていませんが、こちらはエラーになりません。 無名関数は引数を受け取らなくて良いのかなんなのか・・・私はわかりませんでした。 もし、解るようでしたら教えて頂けると助かります。 最終的に私が質問してしますような形とになってしまいましたが、 お役に立てれば幸いです。
本の購入も良いですが、Flash MXの場合は「Flashレッスン」とういチュートリアル機能がFlash自身についています。 私はそれとヘルプを使用して、Flashを覚えました。 また、Flashを使う上で大きな分岐になるのがAction Scriptを使用するかどうかです。 Action ScriptはFlashの上で使うプログラム言語のようなものですが、本格的なものを作ろうとした場合は避けて通れないものでしょう。 その場合のおススメ書籍は 「Flash Action Script 逆引き大全500」です。 普通はいきなり逆引き辞典をおススメするのは抵抗がありますが、基礎から書かれていて、やりたいことベースで機能を覚えていけるので「とりあえず動くものを作りたい」場合には最適です。
＃１ の方とほぼ同意見で，前半が少し違います。 というかご質問が２つに取れます。 > ムービークリップから等しい距離の位置にムービークリップを配置したい と言うことでしたら， 三角形の外心（外接円の中心）を求めることになると思います。 これには，次の URL の式を使わせてもらうことにします。 「メモ-別記5」 http://www.h6.dion.ne.jp/~jpe02_tn/ki-5.html > １　外接円の中心座標を求める計算式 >　 Ａ1＝２（Ｘ2－Ｘ1） >　 Ｂ1＝２（Ｙ2－Ｙ1） >　 Ｃ1＝Ｘ1^2－Ｘ2^2＋Ｙ1^2－Ｙ2^2 >　 Ａ2＝２（Ｘ3－Ｘ1） >　 Ｂ2＝２（Ｙ3－Ｙ1） >　 Ｃ2＝Ｘ1^2－Ｘ3^2＋Ｙ1^2－Ｙ3^2 >　 Ｘ＝（Ｂ1Ｃ2－Ｂ2Ｃ1）/（Ａ1Ｂ2－Ａ2Ｂ1） >　 Ｙ＝（Ｃ1Ａ2－Ｃ2Ａ1）/（Ａ1Ｂ2－Ａ2Ｂ1） これを， ＭＣ４ のスクリプトに直すと次のようになります。 ------------------------------------ onClipEvent (enterFrame) { A1 = 2*(_root.MC2._x-_root.MC1._x); B1 = 2*(_root.MC2._y-_root.MC1._y); C1 = _root.MC1._x*_root.MC1._x-_root.MC2._x*_root.MC2._x+_root.MC1._y*_root.MC1._y-_root.MC2._y*_root.MC2._y; A2 = 2*(_root.MC3._x-_root.MC1._x); B2 = 2*(_root.MC3._y-_root.MC1._y); C2 = _root.MC1._x*_root.MC1._x-_root.MC3._x*_root.MC3._x+_root.MC1._y*_root.MC1._y-_root.MC3._y*_root.MC3._y; X = (B1*C2-B2*C1)/(A1*B2-A2*B1); Y = (C1*A2-C2*A1)/(A1*B2-A2*B1); _x += (X-_x)/5; _y += (Y-_y)/5; } ------------------------------------ > ＭＣ４はＭＣ１、ＭＣ２、ＭＣ３を三角形とした際の重心点上 ということでしたら，式は全く変わります。 また上のURLの式を使わせてもらうことにします。 > ２　重心の座標を求める計算式 >　　Ｘ＝（Ｘ1＋Ｘ2＋Ｘ3）/３ >　　Ｙ＝（Ｙ1＋Ｙ2＋Ｙ3）/３ これを， ＭＣ４ のスクリプトに直すと次のようになります。 ------------------------------------ onClipEvent (enterFrame) { X = (_root.MC1._x+_root.MC2._x+_root.MC3._x)/3; Y = (_root.MC1._y+_root.MC2._y+_root.MC3._y)/3; _x += (X-_x)/5; _y += (Y-_y)/5; } ------------------------------------
　 function gotowebpage() :void { navigateToURL(new URLReques("http://www.yahoo.co.jp/index.html")); } これは　function ←　独自の関数を生成しますという意味 gotowebpage ←　という名前に決めました。 ()←　引数を設定する為の器 : void ←　値を返しませんという意味 {関数の中身}; という流れになります。 では何故関数の必要性があるのか？という疑問が生じると思われますが、それは{}の中のプログラムをほぼ同時に実行するという意味合いになります。 例えば、ボタンをクリックしたときに音を鳴らし且つ、あるページにリンクさせたいとしたとき関数を指定すれば同時に実行してくれます。 それではまず function gotowebpage() :void { navigateToURL(new URLReques("http://www.yahoo.co.jp/index.html")); } これを書いてみて下さい。 書き終えたらパブリッシュしてみてください。 何も起こらない筈です。 次に function gotowebpage() :void { navigateToURL(new URLReques("http://www.yahoo.co.jp/index.html")); } gotowebpage(); ←これを書き加えて下さい。 ここまで書いたらパブリッシュ。 今度はパブリッシュした瞬間にyahooへ移動した筈です。 お分かりいただけましたでしょうか？　つまり貴方が独自に作った関数[gotowebpage]を参照している訳です。
それでどうなるかはプログラマ自身が決めることなんですが... 初心者が言語仕様だけを追っかけると、 おっしゃるような本末転倒な疑問に陥ってしまいます。 問い合わせに対して結果がほしい という場合に戻り値を使用するのですが、 そもそも、AS3で何をしたいか...という目的がなければ ピンと来ないのは仕方ないです。 たとえば、仮に「時刻」を得るFunctionを考えてみましょう function get_time_desu():String{ var now:Date = new Date(); return "現在、" + now + "です。" } これは、「現在、[時刻]です。」というString型を返してくれます もっと複雑に日本語表記にする機能も追加して良いでしょう。 そして、このFunctionは何度でも利用でき、 長いプログラムのどこで何度呼び出しても同じ結果が得られるでしょう。 このような「オブジェクト指向」の良いところは 再利用性とメンテナンス性だとも言えますし、 複雑な結果をひとまとまりにして、簡単に呼び出せる事です。 その結果を一定時間ごとにTextFieldで表示すれば「時計」になります。 サーバに送信して利用してもよいでしょう。 使いどころは、目的によるでしょう。 なにわともあれ、 何か作ってみることをお勧めします。 「計算機」などがよくスタディとされます。
・パラパラ漫画のように、１フレームずつ画像が変わるものをグループ化して、それをトゥイーンで動かすことができるのでしょうか？ ムービーシンボルを作成して、そのシンボルの中で1フレームずつ画像が変わる物を作ってトゥイーンで動かしたらどうでしょうか？ ・さらに、そのトゥイーンをかけた画像を、フェードアウトさせることもできるのでしょうか？ できます。トゥィーンで外に出すか、アルファで透明にしては、いかがでしょうか？ 分かりづらい説明ですみません。
マスクを回転させることで実現できます
正確な原因は特定できませんが、 おそらくFlashの背景をHTML上の設定で透明にしているためかと思います。 Flashから書き出す場合は、HTMLの書き出し設定で[透明表示]以外を選択します。 HTMLを直接編集する場合は、wmodeパラメータを定義しないように削ってみてください。 もし上記の方法を試しても表示されないようでしたら、HTMLに原因があるかと思います。
可能ですが実現するには初心者にとっては敷居が高いです。 シェイプトゥイーンような効果だけをとってもいくつか方法があるかと思いますが、２通りあげてみます。 1.スクリプトだけで実装する方法 アルファベット２６文字それぞれにアウトラインのデータを配列に保持しておき、テキスト入力の結果によって変化させる。 2.タイムラインですべてのパターンを作成する方法 アルファベット26文字それぞれに26通りの変化のパターンをタイムラインで676通り作成し、テキスト入力の結果によってgotoAndPlay()で飛ばす。 ちなみに、シェイプトゥイーンのようなモーフィングではなく、 変化の方法を変更することで難易度はずっと下がる場合があります。 ＞入力して出た結果を保存して貯めていくということはできるのでしょうか？ 「入力して出た結果」というのは上記で出力されたアニメーションのことだと思いますが、結果が再生される仕組みをお考えでしたら、入力したテキストのデータさえサーバ側に保持していれば結果は再現できますので、出力結果自体を保存する必要はないはずです。
こんにちは。 Flash初心者なので、少しでも参考になれば嬉しいです。 ヒントが欲しいとの事なので、具体的な方法は書かないようにします。 配列を使ってみてはどうでしょう。 考えとしては、問題用の配列「Ｑ」、問題数をカウントする変数「Ｃ」、YESをカウントする変数「Ｙ」、NOをカウントする変数「Ｎ」作ります。 最初は回答していない状態なので、"変数はそれぞれ０"からスタートします。 まず、配列ＱのＣ番目を呼び出します。 ＹＥＳボタンを押されたらＹに１を足す。 ＮＯボタンを押されたらＮに１を足す。 *Ｃに１を足して次の問題を表示します。 ＹＥＳボタンを押されたらＹに１を足す。 ＮＯボタンを押されたらＮに１を足す・・・（*を繰り返し） ・・・問題数が配列の数と同じになったらＹとＮの数値によって、フレームに飛ばします。
何のためにそれ（ベクトルのas）を使ってそんなに複雑な方法をするのかや， どんな感じにしたいのかがよくわかりませんが， もっと単純に，普通によくあるように， 一般的な算数で考えて， 次のようにすれば良いのではないでしょうか？ （ベクトルのasは使いません。） ＝＝＝例１＝＝＝＝＝＝＝＝＝ MCA と MCB のスクリプトはそのままで， MCC 自体に書くスクリプトを次のようにします。 ---------------------------------------------------- onClipEvent (enterFrame){ this._x += ((_root.MCA._x+_root.MCB._x)/2 - this._x)/5; this._y += ((_root.MCA._y+_root.MCB._y)/2 - this._y)/5; } ---------------------------------------------------- ＝＝＝例2＝＝＝＝＝＝＝＝＝ MCA と MCB のスクリプトはそのままで， MCC 自体に書くスクリプトを次のようにします。 ---------------------------------------------------- onClipEvent (load){ this._x = (_root.MCA._x+_root.MCB._x)/2; this._y = (_root.MCA._y+_root.MCB._y)/2; } - onClipEvent (mouseMove){ this._x = (_root.MCA._x+_root.MCB._x)/2; this._y = (_root.MCA._y+_root.MCB._y)/2; updateAfterEvent(); } ---------------------------------------------------- 例1 がゆっくり中心に近づくパターンで， 例2 がマウスの動きに即反応するパターンです。
もうひとつ思ったのですが、フレームレートを上げてみては どうでしょうか？ Flashの作業画面下にある「フレームレート」の数値を大きく すると（例えば24や30）、1秒間に表示されるコマ数が増えま すので、その分画像が滑らかに表示されます。 その分、モーショントゥイーンのフレームの長さを長くしない と、あっという間に再生が終わってしまいます。
paraflaではそうなってしまうんですね。 失礼致しました。
package Q4322233A { import flash.display.Sprite; import flash.text.TextField; public class Main extends Sprite { public function Main():void { //実験環境:Flex 3 SDK + FlashDevelop 3.0.0 Beta 9 + Windows XP SP3 //FlashDevelopのインストールやフォントその他の設定は済ませておくこと。 //なぜかFlashDevelopではtrace関数を実行してもoutputに出力がなされず //その後いくつかのサイトを回って方法を試すもうまくいかなかったので， //flash.display.SpriteにTextFieldを追加して，そこに出力している。 var textfield:TextField = new TextField(); textfield.multiline = true; textfield.width = 2000; addChild(textfield); //http://www.23ch.info/test/read.cgi/swf/1194838207/ //91: //ActionScript3で二点ほど質問をさせてください。 //2) XMLクラスに対してString形式のXPathでアクセスするにはどうしたらいいでしょうか？ //94: //2)E4Xが標準だからそっち覚える。どうしてもxpathじゃなきゃまずいなら3.0使わずに2.0のmx.xpath.XPathAPIでどうぞ。 //himajin100000:このE4Xのリテラル，気持ち悪くて嫌いだ。 //使っているFlashDevelop 3.0.0 Beta 9だと，リテラルとコメントの開始が区別できてなくて色分けがおかしい //思想的に好きなのはRSS 1.0なのでサンプルとして取り上げる。 //RSS 0.9x,RSS 2.0,Atomは取り上げない。 //教えてgooはダブルクオートの前後にZERO WIDTH SPACEを埋め込むため，(俺の方で回避不能) //この回答のコードを直接貼り付けても動作しない。該当する文字を置換で置き換えてから使うなり，自分で手打ちするなりしてくれ。 var doc:XML = <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/"> <channel rdf:about="http://www.xml.com/xml/news.rss"> <title>XML.com</title> <link>http://xml.com/pub</link> <description> XML.com features a rich mix of information and services for the XML community. </description> <image rdf:resource="http://xml.com/universal/images/xml_tiny.gif" /> <items> <rdf:Seq> <rdf:li rdf:resource="http://xml.com/pub/2000/08/09/xslt/xslt.html" /> <rdf:li rdf:resource="http://xml.com/pub/2000/08/09/rdfdb/index.html" /> </rdf:Seq> </items> <textinput rdf:resource="http://search.xml.com" /> </channel> <image rdf:about="http://xml.com/universal/images/xml_tiny.gif"> <title>XML.com</title> <link>http://www.xml.com</link> <url>http://xml.com/universal/images/xml_tiny.gif</url> </image> <item rdf:about="http://xml.com/pub/2000/08/09/xslt/xslt.html"> <title>Processing Inclusions with XSLT</title> <link>http://xml.com/pub/2000/08/09/xslt/xslt.html</li … <description> Processing document inclusions with general XML tools can be problematic. This article proposes a way of preserving inclusion information through SAX-based processing. </description> </item> <item rdf:about="http://xml.com/pub/2000/08/09/rdfdb/index.html"> <title>Putting RDF to Work</title> <link>http://xml.com/pub/2000/08/09/rdfdb/index.html</ … <description> Tool and API support for the Resource Description Framework is slowly coming of age. Edd Dumbill takes a look at RDFDB, one of the most exciting new RDF toolkits. </description> </item> <textinput rdf:about="http://search.xml.com"> <title>Search XML.com</title> <description>Search XML.com's XML collection</description> <name>s</name> <link>http://search.xml.com</link> </textinput> </rdf:RDF> //最後にセミコロンは要らない。 var rdf:Namespace = new Namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#"); var rss:Namespace = new Namespace("http://purl.org/rss/1.0/"); //XMLを理解してないと，(どの要素がどの名前空間に属するかとか)右辺がかけないような気がする。 //これは，まぁE4Xじゃなくても同じだけど //その説明は一切しないので勉強して欲しい。 var itemList:XMLList = doc.rss::item; //表示内容 //Processing Inclusions with XSLT:http://xml.com/pub/2000/08/09/xslt/xslt.html //Putting RDF to Work:http://xml.com/pub/2000/08/09/rdfdb/index.html for each(var item:XML in itemList) { textfield.appendText(item.rss::title + ":" + item.rss::link + "\n"); } //後は出力内容に応じてどうぞ。 } } }
gotoAndPlay() と _root.gotoAndPlay() みたいな前にパスのついたものとは， は同じであるように見えて実は全然違うものです。 gotoAndPlay() は gotoAndPlay関数で， _root.gotoAndPlay() はムービークリップクラスの gotoAndPlayメソッドです。 gotoAndPlay関数 のみ， gotoAndPlay(フレーム数); gotoAndPlay("フレームラベル"); gotoAndPlay("シーン名", フレーム数); の３つができます。 一方， MovieClip.gotoAndPlayメソッドの方は MovieClip.gotoAndPlay(フレーム数); MovieClip.gotoAndPlay("フレームラベル"); しかできません。 対処法などその他詳細は次のページを参考にしてみてください。 「gotoAndPlay/gotoAndStopでシーンの移動ができない」 http://www.fumiononaka.com/TechNotes/Flash/FN020 … ～引用～ > 3. フレームラベルを使いましょう 　…中略… > MovieClipのメソッドでは、「シーン」が指定できないという難点はあります。 > しかし、これもフレームラベルを活用することにより、対応は可能です。 > gotoAndPlay("シーン 1", 5)とする替わりに、 > フレームラベルをつけてthis.gotoAndPlay("Scene1_Start") > とすればよいからです。
えーとですねぇ、 簡単にいうと手品です。 決してフォーカスがボタンに当たっているのではありません。 最初の画面（フレーム1）で、 　「EZナビ」　　　　「データ」　「カレンダー」 　「ツール」　　　　『機能』　 「アラーム」 　「マイメニュー」　「カメラ」　 「スマートモード」 という９つのボタンがあるのですが、 これはボタンではなく単なる画像です。 それで、 まず真ん中の 『機能』 という画像（ボタンではなく画像）がデカくなった状態のようすが ステージ上のフレーム1に出没するのです。 その状態に見えないボタンを作成して、 そのボタンに次のように書いてあります。 ----------------------------------- on (keyPress "<Enter>") { fscommand("Launch", "M"); } on (keyPress "<Up>") { gotoAndPlay("data"); } on (keyPress "<Down>") { gotoAndPlay("camera"); } on (keyPress "<Left>") { gotoAndPlay("tool"); } on (keyPress "<Right>") { gotoAndPlay("alarm"); } ----------------------------------- 最初の on (keyPress "<Enter>") { fscommand("Launch", "M"); } はとりあえず無視してください。 重要なのは、 それ以下の部分です。 on (keyPress "<Up>") { ↑アップキーを押したとき gotoAndPlay("data"); ↑「data」というラベル名の付いたフレームにジャンプ } その 「data」というラベル名の付いたフレームには、 　「EZナビ」　　　　『データ』　「カレンダー」 　「ツール」　　　　「機能」　 「アラーム」 　「マイメニュー」　「カメラ」　 「スマートモード」 のうち、『データ』がデカくなった絵が用意されています。 手品がわかりますでしょうか？ 「EZナビ」だけデカくなったフレーム 「データ」だけデカくなったフレーム 「カレンダー」だけデカくなったフレーム 「ツール」だけデカくなったフレーム 「機能」だけデカくなったフレーム 「アラーム」だけデカくなったフレーム 「マイメニュー」だけデカくなったフレーム 「カメラ」だけデカくなったフレーム 「スマートモード」だけデカくなったフレーム があって、 たとえば左上の　「EZナビ」　だけがデカくなった画像のフレームには、 隠しボタンがあって、 上とはまた別のスクリプト ----------------------------------- on (keyPress "<Enter>") { fscommand( "Launch" , "core/eznaviwalk" ); } on (keyPress "<Up>") { gotoAndPlay("smartm"); } on (keyPress "<Down>") { gotoAndPlay("tool"); } on (keyPress "<Left>") { gotoAndPlay("smartm"); } on (keyPress "<Right>") { gotoAndPlay("data"); } ----------------------------------- が書いてあります。 「EZナビ」 の下は 「ツール（tool）」 ですよね。 「EZナビ」 の右は 「データ（data）」 ですよね。 「EZナビ」 の左はありませんがこの場合は 「マイニュー（mymenu）」 だけが拡大したフレームにに行くようにしてあります。 なお最初にとりあえず無視しておくと書いた fscommand( "Launch" , "○○" ); は、ココのページに解説されています。 メモ帳（ParaFla! の解説サイトです。Suzukaでも役立つことが多いです。） http://nuko.info/memo/#mob03 >▲ CA機(au)アイコン用ラウンチコマンド >　auのCASIO機で使えそうなコマンド。 >　W31CAでのみ確認。 　～中略～ >■機能設定 >　fscommand("Launch", "M"); 上のサイトとは関係なしで、 「某Suzukaの解説サイト」 でも、 妙な手品みたいなもの（虫眼鏡 とか ドットモーフィング とかとか...） がいくつか解説されていますよね。 実際 Flash の根本ってそんなものですよ。 「手品をどのように考えて作るか」 「つまり工夫」 が１つの大きなポイントです。 またそこが Flash をする醍醐味です。 手品を考えてその通りに作ることができれば、他人が「おっ！」と思うことができます。
画面が切り替わるというと こういったものでしょうか？ http://www.condo.fromc.jp/flash/memo/index.html ここの【スクロールメニュー１ 】が近いと思います。 ぜんぜん違ってたらすみません＾＾； 上記はアクションスクリプトが 割とまとめられて書かれているので（1フレーム目に） 初心者の方には難しいかもしれませんが参考までに。 ちなみに作り方は何通りもありますので 色々研究してみてください☆
◎LoadVarsの方法 ・ファイル構造 　任意のフォルダ 　　　　├ ○○.html 　　　　├ ○○.swf 　　　　├ gaibu.txt 　　　　└ photo(フォルダ) 　　　　　　　├p1.jpg 　　　　　　　├p2.jpg 　　　　　　　 … 略 … ・「gaibu.txt」 の内容 （改行無しの１行） ------------ Max=6 ------------ ・ムービーの構造 スクリプト自体に手を入れると， スクリプト全体や構造の作り直しになりかねないので， フレーム1 から出没するムービークリップなどを， 全て フレーム2 以降にずらして， 空白キーフレームだけになったフレーム1に次のように書くのが簡単ではないかと思います。 ----------------------------------------- // フレーム1 でストップ stop(); // LoadVarsクラスのインスタンス myLV を作成 myLV = new LoadVars(); // myLV に外部データをロードしたときの動作定義 myLV.onLoad = function() { // _root をフレーム2に進めて停止 _root.gotoAndStop(2); }; // 外部データ gaibu.txt をロード myLV.load("gaibu.txt"); ----------------------------------------- そして， ムービークリップのスクリプトの Max = 6; の部分だけを次のように書き替えます。 ------------------------ onClipEvent (load) { Max = 6; Sec = 6; … 略 … ------------------------ 　↓書き替え↓ ------------------------ onClipEvent (load) { Max = Number(_root.myLV.Max); Sec = 6; … 略 … ------------------------ ◎FlashVarsの方法 ・ファイル構造 　任意のフォルダ 　　　　├ ○○.html 　　　　├ ○○.swf 　　　　└ photo(フォルダ) 　　　　　　　├p1.jpg 　　　　　　　├p2.jpg 　　　　　　　 … 略 … ・ムービーの構造 これは現在のままのムービーの状態でできます。 つまり全てをフレーム2以降にずらす必要はありません。 ムービークリップのスクリプトの Max = 6; の部分だけを次のように書き替えます。 ------------------------ onClipEvent (load) { Max = 6; Sec = 6; … 略 … ------------------------ 　↓書き替え↓ ------------------------ onClipEvent (load) { Max = Number(_root.Max); Sec = 6; … 略 … ------------------------ そして，「○○.html」 と 「○○.swf」 をパブリッシュして， 「○○.html」 の <object>～</object> 間に次の <param> を書き加えます。 <param name="FlashVars" value="Max=6"> <embed> も使用されていましたら， そちらも次のように FlashVars="Max=6" を書き加えます。 <embed src="○○.swf" quality="high" … 　　↓付け加え↓ <embed src="○○.swf" FlashVars="Max=6" quality="high" … なお， SWF を JavaScriptファイル（.js） で貼り付けている場合は， この FlashVarsの方法 は使いにくいと思います。 また 使用されている JavaScript によってやり方は変わりますので， その辺までは回答できません。
＃１です。 ActionScript 3.0 は詳しくないので、ActionScript 2.0 の ComboBox コンポーネントを使用した作例でよろしければ、ご参考までに。 例題として、次のような構成・仕様の作品を考えます。 　・フレーム１：各種初期設定を行うフレーム。 　・フレーム２：最初に表示するトップページ。 　・フレーム３以降： 　　　２つのコンボボックスの選択に応じて表示される。 　　　フレームラベルは a1 ～ c3 （ a ～ c ＋各 1 ～ 3 の番号で、計９フレーム）。 　・コンボボックスは常に表示されていて、どのフレームからでも操作できる。 　・どちらかのコンボボックスで何か選択されたら、その時に対応するフレームに移動する。 　　（例えば、” a ”と” 1 ”が選ばれている状態で” b ”を選ぶと、その時に” b1 ”のフレームに移動する仕様です） 制作中の作品にいきなり組み込むのも難しいかと思います。 「新規作成」で次のようなムービーを作成して検証してみてください。 パブリッシュの設定は、Flash Player 7 以降、ActionScript 2.0 です。 レイヤーを３つ、作成します。 　●レイヤー１：スクリプトとフレームラベルのレイヤー 　　　空白のキーフレームを 11 個、作成します。 　　　フレーム２に” top_page ”、フレーム３以降は a1 ・ a2 ・ a3 ・ b1 ・・・ c3 という命名規則で 　　　フレームラベルを付けてください。 　　　フレーム１には後述のスクリプトを書きます。 　●レイヤー２：コンボボックスのレイヤー 　　　フレーム１に ComboBox コンポーネントのインスタンスを２つ配置し、それぞれにインスタンス名を付けます。 　　　ここでは仮に、アルファベットを選ぶコンボボックスに” category ”、数字を選ぶ方に” num ”と付けたとします。 　　　フレーム 11 にフレームを挿入し、フレーム１と同じ内容をフレーム 11 まで繰り返すようにします。 　●レイヤー３：コンテンツのレイヤー 　　　フレーム１は空白にします。 　　　フレーム２以降は、フレームを移動したことが分かるように何か絵や字を描いてください。 　　　TOP や a1 など、フレームラベルと同様のテキストを書いておくと分かりやすいと思います。 以上で準備は完了です。 次はスクリプトを書きます。 ************************************** ２つのコンボボックスの選択結果を合わせて、対応するフレームラベルのフレームに移動するスクリプトは、次のようになります。 このスクリプトは、レイヤー１のフレーム１に記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください。このまま使うとシンタックスエラーになります） 　////////////////////////////////////////////////////////// 　//初期設定 　////////////////////////////////////////////////////////// 　//移動先のフレームラベルを作成するための作業用の配列変数 　//コンボボックスの選択に応じて、 　//[0]にカテゴリー名（a～c）、[1]に番号（1～3）が入る 　//初期値として”a1”を設定しておく 　label_temp = new Array(); 　label_temp = [ "a" , "1" ]; 　////////////////////////////////////////////////////////// 　//カテゴリーのコンボボックスのセットアップ 　////////////////////////////////////////////////////////// 　//表示するデータの準備 　category_data = new Array(); 　category_data = 　[ 　　{ label : "Ａ" , data : "a" } , 　　{ label : "Ｂ" , data : "b" } , 　　{ label : "Ｃ" , data : "c" } 　]; 　//コンボボックスに表示 　category.dataProvider = category_data; 　//最初に選択されているものを”なし”にする 　category.selectedIndex = undefined; 　//何かが選択された時のイベント処理 　obj_c = new Object(); 　obj_c.change = function( info:Object ):Void 　{ 　　var category_name:String; 　　//選択されている項目に設定されている隠しデータの値を取得 　　category_name = info.target.selectedItem.data; 　　//取得した値を、作業用配列変数の[0]に記録 　　label_temp[ 0 ] = category_name; 　　//作業用配列変数の[0]と[1]を連結して指定のフレームに移動 　　gotoAndStop( label_temp.join( "" ) ); 　}; 　//リスナーオブジェクトを登録 　category.addEventListener( "change" , obj_c ); 　////////////////////////////////////////////////////////// 　//番号のコンボボックスのセットアップ 　////////////////////////////////////////////////////////// 　//表示するデータの準備 　num_data = new Array(); 　num_data = 　[ 　　{ label : "壱" , data : "1" } , 　　{ label : "弐" , data : "2" } , 　　{ label : "参" , data : "3" } 　]; 　//コンボボックスに表示 　num.dataProvider = num_data; 　//最初に選択されているものを”なし”にする 　num.selectedIndex = undefined; 　//何かが選択された時のイベント処理 　obj_n = new Object(); 　obj_n.change = function( info:Object ):Void 　{ 　　var jump_no:String; 　　//選択されている項目に設定されている隠しデータの値を取得 　　jump_no = info.target.selectedItem.data; 　　//取得した値を、作業用配列変数の[1]に記録 　　label_temp[ 1 ] = jump_no; 　　//作業用配列変数の[0]と[1]を連結して指定のフレームに移動 　　gotoAndStop( label_temp.join( "" ) ); 　}; 　//リスナーオブジェクトを登録 　num.addEventListener( "change" , obj_n ); 　////////////////////////////////////////////////////////// 　//最初のページに移動 　////////////////////////////////////////////////////////// 　gotoAndStop( "top_page" ); /**********************************************************/ 「ムービープレビュー」で動作を確認してみてください。 問題がなければ、２つのコンボボックスにそれぞれ、”Ａ”と”壱”という項目が表示されている状態になります。 コンボボックスらしきものは表示されているが、中身がなく真っ白になっている場合は、ComboBox コンポーネントのインスタンス名をご確認ください。 アルファベットを選ぶコンボボックスのインスタンス名は” category ”、数字を選ぶ方は” num ”です。大文字と小文字・全角と半角の誤り、不要なスペースや文字の混入などにもご注意ください。 最初は、フレーム２（フレームラベル” top_page ”）のトップページが表示されます。 どちらかのコンボボックスを操作すると、２つのコンボボックスの選択に応じたフレームに移動します。 例えば、アルファベットのコンボボックスで”Ｃ”、数字のコンボボックスで”弐”を選ぶと、” c2 ”のフレームに移動します。 この状態でアルファベットのコンボボックスで”Ａ”を選ぶと、数字と合わせて” a2 ”のフレームに移動します。 この作例では省略していますが、よろしければ、トップページに戻るボタンを追加して、トップページである”top_page”のフレーム（フレーム２）に戻れるように改良してみてください。 初期化を実行しているフレーム１に戻らないため、前に選択したコンボボックスの状態はそのまま維持されます。 ************************************** 紙面の都合上、スクリプトや ComboBox コンポーネントの使い方を１つ１つ説明できません。 スクリプトの詳細はコメントをご参考になさってください。 基本的な考え方は＃１で説明しました通りです。 まず、作業用の配列変数として” label_temp ”という配列変数を用意します。 アルファベットのコンボボックスで選択された情報を label_temp[ 0 ] に、数字のコンボボックスで選択された情報を label_temp[ 1 ] に入れます。 ここでいう情報とは、画面に表示されない隠しデータのことです。つまり、アルファベットのコンボボックスでは a ～ c 、数字のコンボボックスでは 1 ～ 3 のいずれかになります。 最終的にはこの２つを label_temp.join( "" ); でつなぎ合わせて、移動先になるフレームラベルを作成します。 コンボボックスで選択した通りに移動しない・特定のフレームにだけ移動できない場合は、フレームラベルに誤りがないかどうかを確認してみてください。 コンボボックスにより移動するフレームには、小文字の a ・ b ・ c に 1 ～ 3 の数字（いずれも半角）を組み合わせたフレームラベルを付けます。 ------------------------------------------------------------ ComboBox コンポーネントは、ムービーに簡単にドロップダウン式のメニューを組み込めるようにと提供されている、既製の部品のようなものです。 メニューに何を表示して、どの項目が選ばれた時に何をするかは作品によって違うのが当たり前ですから、この部分はムービーの作者に作成させる設計になっています。 その手助けのために、メニューに表示する内容を設定したり、現在選ばれている項目の情報を取得する手段などが、コンポーネントの機能として提供されています。 これらのものを利用して目指す通りの動作を実現させるところが、腕の見せ所です。 ComboBox コンポーネントの基本的な使い方・説明は割愛させていただきました。 コンポーネントには様々な制御・設定方法が用意されています。今回使った方法や、解説サイト・解説書で説明されている方法だけが唯一の正解というわけではありません。 いろいろ試して、ComboBox コンポーネントの特性や扱い方を研究してみてください。 作品の完成に向けて何か参考になるところがあれば、幸いです。 長くなってすみませんでした。
以下、新規ファイルでひとまず試してから応用してね。 まず_rootに30フレームのムービークリップを作って下さい。 モーショントゥイーンさせておくと分かりやすいかもよ。 それを右に２つ複製し、それぞれA・B・Cと名付けます。 A・B・Cを下に複製し、D・E・Fと名付けます。 _root上に6つのムービークリップがある事を確認して、 _rootのフレームに以下を記述。 //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - M_ARY = [A, B, C]; B_ARY = [D, E, F]; for (var i = 0; i < M_ARY.length; i++) { M_ARY[i].stop(); B_ARY[i].stop(); B_ARY[i].MC = M_ARY[i]; M_ARY[i].onEnterFrame = function() { if (this.FLG != 1) { this.gotoAndStop(this._currentframe - 1); } else { this.gotoAndStop(this._currentframe + 1); } }; B_ARY[i].onRelease = function() { for (var i = 0; i < _root.M_ARY.length; i++) { _root.M_ARY[i].FLG = 0; } this.MC.FLG = 1; }; } //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FLVPlaybackコンポーネントで、スキン（再生ボタン等をまとめたパネル）を使用していませんか？ スキンの swf ファイルが指定されている場合は、スクリプトで指定したボタンが無視されます。 スキンを無効にするには、FLVPlayback のコンポーネントが持っている「 skin 」パラメータに”なし”を指定します。 設定の方法は No.2562723 の回答の中ほどで説明しておりますので、よろしければご参考になさってください。 ---------------------------------------------------------- muteButton プロパティに設定するものは、正確にはミュートボタンとして使うムービークリップの”参照”です。 スクリプトを書いたタイムラインとは違うタイムラインにミュートボタンを配置した場合（ミュートボタンを他のムービークリップの中に入れた場合など）は、ターゲットパスの誤りにご注意ください。 似たような話で、インスタンス名と muteButton プロパティに指定した名前が違っているといった、些細な間違いの可能性もあります。 trace アクション 　trace( top_movie.muteButton ); を実行した時に” undefined ”と表示されるようであれば、ミュートボタンの指定に問題があります。 ターゲットパスやインスタンス名に誤りがないかどうかも、合わせてご確認ください。
＃１ です。 > 上記にしてありますが、実際にアップするとプリローダーが現れてくれません。 > 修正点はどの辺りにありますでしょうか？ スクリプトは大変な状態です。 しかし，大変な状態なのはわかっていて， あえてそのままのスクリプトを記述（コピペ）し， 実際に重めのファイルを作成して試してみましたけど画像はちゃんと上に上がりましたよ。 プリローダとしては成り立っていませんが， ロードする割合に対しては「png_mc」が上がることは上がります。 その上がり方は良いか悪いかは私が判断するところではないので別にして， 「png_mc」が上がることだけは問題なしだと思います。 スクリプトは大変な状態なのは置いておいて， プリローダーが現れない原因ですが， これは様々なことが考えられますので特定できませんし， 考えられる以外に原因があるのかもしれません。 ファイル容量はちゃんと重い物を作成しましたか？ 回線速度によるので何とも言えませんが， 100KB とか 200KB とか，そんな軽いファイル（SWF）だと， 0.1秒くらいでロードされてしまうかもしれませんよ。 アップロードした SWF のキャッシュは１回閲覧する度に消していますか？ たとえ 10MB くらいのファイル（SWF）を作成したとしても， ２回目の閲覧以降，ブラウザはキャッシュを参照しますから， キャッシュを消さないと一瞬でロード完了してしまいますよ。 ActionScriptの修正点よりもまず， そもそも， 画像をアップロードして実験するところが間違っているように思います。 プリローダを試す場合は，アップロードするのではなく， 作成したドキュメントを開いた状態で， 「制御」→「ムービープレビュー」 これでムービーがプレビューできますから， そのムービープレビューの画面で 「表示」→「プロファイラ」 にチェックを入れて， 「表示」→「ダウンロードのシミュレート」 にチェックを入れます。 これでダウンロード状況がシミュレーションできます。 回線の設定を変更する場合は， 「表示」→「ダウンロードの設定」 で， 既存の設定回線から選択するか自分で回線状況を作成するかします。 アップロード後の動作確認も必要ですが， プリローダに関しては，アップロードしてしまうと動作確認ができない（しにくい）と思います。 ＝＝＝本題とはあまり関係のない補足＝＝＝＝＝＝＝＝ 「png_mc」 が上に上がるのとは関連しないことも含めて， 補足のスクリプトに注釈行を入れてみました。 画像が上がる部分ではなくそれ以外の部分で， どこが間違っているか，よく観察して考えてみてください。 なお，インデントに全角空白文字を使用しているため， このままのコピペでは使用できません。 ///////////////////////////////////////////////////////// // １フレーム進む時間ごとに毎回毎回実行 _root.onEnterFrame = function():Void { 　　// 全フレーム数 と ロードされたフレーム数 が等しいとき 　　if (_totalframes == _framesloaded) { 　　　　// フレームラベル 「2」 に進めて再生（★フレームラベル？） 　　　　gotoAndPlay("2"); 　　} 　　// 変数 total に ムービーの全バイト数を取得 　　total = _root.getBytesTotal(); 　　// 変数 loaded に ムービーのロードされたバイト数を取得 　　loaded = _root.getBytesLoaded(); 　　// 変数 percent にロードされたパーセント（整数）を取得 　　percent = Math.floor(loaded/total*100); 　　// 変数 time にムービー開始からの秒を取得（★意味不明） 　　time = Math.floor(getTimer()/1000); 　　// 「png_mc」 の y 座標を 　　// ロードされたパーセンテージ×2ずつ下から上げる 　　_root.png_mc._y = 200-percent*2; 　　// 表示を即更新（★全く意味なし） 　　updateAfterEvent(); }; // 再生停止 stop(); ///////////////////////////////////////////////////////// 間違っていると推測される部分や， 間違ってはいないけれど，あまり相応しくないと思った部分などを書き替えてみました。 （繰り返しますが，書き替えても 「png_mc」 が 　正常に上に上がるというわけではありません。 　 「png_mc」 以外の部分の書き替えです。） 全角空白文字インデントは付けていませんのでコピペできます。 /////////////////////////////////////////////////////// // 再生停止（☆まず先に stop() です） stop(); // １フレーム進む時間ごとに毎回毎回実行 _root.onEnterFrame = function():Void { // 変数 total に ムービーの全バイト数を取得 total = _root.getBytesTotal(); // 変数 loaded に ムービーのロードされたバイト数を取得 loaded = _root.getBytesLoaded(); // 変数 percent にロードされたパーセントを取得 percent = Math.floor(loaded/total*100); // 変数 time にムービー開始からの秒を取得 // （★ 意味不明ですが残しました） time = Math.floor(getTimer()/1000); // 「png_mc」 の y 座標を // ロードされたパーセンテージ×2ずつ下から上げる _root.png_mc._y = 200-percent*2; // ロードされたバイト数 が 全バイト数 以上になれば if (loaded>=total) { // フレーム2 に進めて再生（☆フレーム2でしょう？） gotoAndPlay(2); // この onEnterFrame を削除（☆☆絶対必要） delete _root.onEnterFrame; } }; /////////////////////////////////////////////////////// 最後の， 　　// この onEnterFrame を削除（☆☆絶対必要） 　　delete _root.onEnterFrame; に関してですが，これを入れないと ， 　　// フレーム2 に進めて再生（☆フレーム2でしょう？） 　　gotoAndPlay(2); これが１フレーム進む時間ごとに毎回毎回実行され続けます。 つまり フレーム2 に行きつづけるため，次のフレーム（フレーム3 以降）に進めなくなります。 それと最初のスクリプトの途中の， 　　// 表示を即更新（★全く意味なし） 　　updateAfterEvent(); ですが， Flash は基本的に自動で１フレーム進む時間ごとに毎回毎回表示を更新しています。 だからアニメーションするのです。 もしこれが必要であるとするなら，全てのフレームに書く必要が出てきます。 updateAfterEvent() は１フレーム進む時間と時間との間に変化が起こるときに使う物で， その場合でも普通は必要ありませんし使いません。 あえて「表示を更新したいときのみ」に使います。 たとえば， マウスをダラーーーーっとドラッグしたとき， マウスの座標は１フレーム進む時間とは関係なく変更されます。 代替カーソルなどを使った場合で，１フレーム進む時間ごとに表示更新すると， なんとなくカーソルの動きが遅く感じたりカクカクして（飛び飛びで）動くように見えることがあります。 「１フレーム進む時間とは関係無しで何かが起こる場合で， 　なおかつ 　その微妙なタイミングで起こる何かに即表示を対応させる場合」 そういうときに使う物です。 ＝＝＝別件＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ とにかく， 当たり前ですがプリローダは回線によってその動きが大きく変わります。 またキャッシュに残る残らないによっても全く動きが変わります。 回線や状況によってなるべく変えたくない場合は， 次のページを参考にしてみてください。 「QNo.4071675 ローディングバーをゆっくりみせる方法」 http://okwave.jp/qa4071675.html
カレンダー作りの難しさや手間など全体を 1000 だとすると， ご質問されている部分の手間や難しさは 1 くらいになります。 ココで説明できるのもその 1 くらいですから，質問としては良いのですが， その先ができるのかどうかはわかりません。 > どのようなアクションスプリクトで、 > どのように書いたらいいのかわからないので、 たっくさんあります。 結局，思った場所に思った画像を表示させればいいだけです。 思いついたものだけを，大きく分類しても次のようなものがあります。 ・タイムラインを動かす 　→gotoAndStop() ・ムービークリップのタイムラインを動かす 　→MovieClip.gotoAndStop() ・画像入りムービークリップの表示・非表示を変える 　→MovieClip._visible プロパティ ・画像入りムービークリップの不透明度を変える 　→MovieClip._alpha プロパティ ・JPEGなどを外部からロードする 　→loadMovie() or MovieClip.loadMovie() ・同じくJPEGなどを外部からロードする 　→MovieClipLoader.loadClip() ・ライブラリからムービークリップを呼びだす 　→MovieClip.attachMovie() ・ライブラリからビットマップイメージを呼びだす 　→MovieClip.attachBitmap() ・全ての画像入りムービークリップをスライドさせる 　→MovieClip._x or MovieClip._y を変える ・HTMLレンダリングしたテキストフィールドに画像を表示 　→TextFleld.htmlText = "<img>○○</img>"; ・ScrollPaneコンポーネントに画像を表示させる 　→ScrollPane クラス 　…　などなど　… とりあえずカレンダーに限らず Flash で一般的によく使われて， これくらいはできておかなければならない， 　・ムービークリップのタイムラインを動かす 　　→MovieClip.gotoAndStop(); の方法はいかがでしょうか？ 新規ドキュメント（FLA）を作成し， 「0」の絵または写真などを用意して， ムービークリップに変換します。 そのムービークリップをダブルクリックするなどして， そのムービークリップ内の編集に入り， 　フレーム1 に 「0」 の絵 　フレーム2 に 「1」 の絵 　フレーム3 に 「2」 の絵 　フレーム4 に 「3」 の絵 　　　…　　　　　… 　フレーム5 に 「9」 の絵 という 10フレーム のムービークリップを作成します。 　ムービークリップ内のタイムライン（レイヤー） 　レイヤー　・・・|●|●|●|●|●|●|●|●|●|●| 　　　　　　　　　 ０ １ …　　…　　…　　…　９　 ここまでできましたら， ステージ上の何も無い所をダブルクリックするなどして， シーン1 など メインムービー（_root） の編集に戻ります。 そして， 上で作成したムービークリップ（「0」の絵だけが見えているはず）を選択して， コピー＆ペースト で ４つ と ２つ の合計６個を横に並べます。 　　「0」　　「0」　　　「0」　　　「0」　　　　　　「0」　　　「0」 各ムービークリップを１つずつ選択して， ステージ下などにあるプロパティインスペクタでインスタンス名を付けます。 インスタンス名は何でも良いのですが， たとえば 左から順に「y_mc0」 ，「y_mc1」 ，「y_mc2」 ，「y_mc3」 と 「m_mc0」 ，「m_mc1」　というインスタンス名を付けることにします。 　　「0」　　「0」　　　「0」　　　「0」　　　　　　「0」　　　「0」 　y_mc0　y_mc1　y_mc2　y_mc3　　　　　m_mc0　m_mc1 そして， メインタイムライン（_root）にレイヤーを１つ追加して， 追加したレイヤーのフレーム1の空白キーフレームに次のようなスクリプトを書きます。 ----------------------------------------------- // Dateオブジェクト myDate を作成 myDate = new Date(); // 変数 myY に年を取得 myY = myDate.getFullYear(); // 変数 myM に月（0～11）に1を足した数を取得 myM = myDate.getMonth()+1; // 年のムービークリップをそれぞれのフレームに進めて停止 for (i=0; i<=3; i++) { this["y_mc"+i].gotoAndStop(Number(String(myY).substr(i, 1))+1); } // m_mc0 をその月の下2桁目のフレームに進めて停止 this.m_mc0.gotoAndStop(Number(("0"+myM).substr(-2, 1))+1); // m_mc1 をその月の下1桁目のフレームに進めて停止 this.m_mc1.gotoAndStop(Number(("0"+myM).substr(-1, 1))+1); ----------------------------------------------- ご質問では， Flash や ActionScript のバージョンを書かれていませんね。 上のスクリプトは， Flash 5 以上で使用できるスクリプトです。 ActionScriptのバージョンは 1.0 です。 ○○.gotoAndStop(Number(String(myY).substr(i, 1))+1); などがわからない場合は中から順に考えてみてください。 String(myY) 　→ 数 2008 を，文字列 "2008" にする。 String(myY).substr(i, 1) 　→ 文字列 "2008" から i 番の文字を1文字取ってくる 　　（文字列番号は 0 が 1文字目です。） 　　（"2008" では 0番が2，1番が0，2番0，3番が8 です。） Number(String(myY).substr(i, 1)) 　→ 文字列 "2008" の i 番文字を数値に変換 　　（"2" を 2，"0" を 0， "0" を 0， "8" を 8 に変換） Number(String(myY).substr(i, 1))+1 　→ 文字列 "2008" の i 番文字を数値に変換したものに1を足す 　　（ムービークリップのフレーム1は0の絵，フレーム2はの絵1，…ですよね。） gotoAndStop(Number(String(myY).substr(i, 1))+1) 　→ 文字列 "2008" の i 番文字を数値に変換したものに 　　　1を足したフレームに gotoAndStop() 年に関しては，for文を使用していますが， 大した行数ではないので， 次のように１文字につき，１行ずつ書いても良いです。 ------------------------------------------------- // 年のムービークリップをそれぞれのフレームに進めて停止 for (i=0; i<=3; i++) { this["y_mc"+i].gotoAndStop(Number(String(myY).substr(i, 1))+1); } ------------------------------------------------- 　　↓同じ意味↓ ------------------------------------------------- // 年のムービークリップをそれぞれのフレームに進めて停止 this.y_mc0.gotoAndStop(Number(String(myY).substr(0, 1))+1); this.y_mc1.gotoAndStop(Number(String(myY).substr(1, 1))+1); this.y_mc2.gotoAndStop(Number(String(myY).substr(2, 1))+1); this.y_mc3.gotoAndStop(Number(String(myY).substr(3, 1))+1); ------------------------------------------------- 月の２文字も同様に考えれば良いと思います。 ///////////////////////////////////////////////////////// 上に書いた方法についても少しだけ触れておきます。 ・タイムラインを動かす 　→gotoAndStop() これでは， 2008年09月 フレーム 2008年10月 フレーム 2008年11月 フレーム 2008年12月 フレーム 2009年01月 フレーム 　…　　　… と用意しなければならないため，ちょっと（かなり）大変です。 また場合によっては不可能な状況になりますから， これよりは上の MovieClip.gotoAndStop() の方が良いと思います。 ・画像入りムービークリップの表示・非表示を変える 　→MovieClip._visible プロパティ これは， 「0」から「9」という10個のムービークリップ（各ムービークリップ内は1フレームのみ）を用意して， それを重ねて配置し， 該当年や月のムービークリップだけを表示させるという方法です。 その他も，結局同じような感じで考えて行けばできます。 この年や月の数字画像を表示することよりも， カレンダー本体の方が難しいですよ。 また，ココでは説明できないと思います。
すみません，＃２（＃１）です。 ＃２ のスクリプトはデータが Dat = "1,1,1\n2,3,6\n4,4,16\n9,9,81"; であるから動作するだけでした。 このデータは，ハッシュの最初のキーが複数かぶっていないデータです。 普通はかぶると思うので， 親オブジェクト h の 子オブジェクト ○ が存在しないときに限って h.○ = new Object(); をしないとダメでした。 この処理を入れておかないと， 前に作成した h.○ が次に作成した h.○ によって消えてしまいます。 したがって， ＃２で書いたスクリプトを次のように訂正します。 -------------------------------------------------- // 何某かのデータ Dat がだあったとする(\nは改行コード) Dat = "1,1,1\n1,8,8\n4,4,16\n9,9,81"; // オブジェクト h を作成 h = new Object(); // データを改行コードで split した配列 Arr を作成 Arr = Dat.split("\n"); // Arr の要素数分ループ for (i=0; i<Arr.length; i++) { // h[Arr[i].split(",")[0]] が 存在しない場合 if (!h[Arr[i].split(",")[0]]) { // オブジェクト h[○] を作成 (○は 1，1，4，9 が入る） h[Arr[i].split(",")[0]] = new Object(); } h[Arr[i].split(",")[0]][Arr[i].split(",")[1]] = Arr[i].split(",")[2]; } // ---検証--------------- trace("h[1][1]="+h[1][1]); trace("h[1][8]="+h[1][8]); trace("h[4][4]="+h[4][4]); trace("h[9][9]="+h[9][9]); --------------------------------------------------
すいません。一部、文章が変でした。訂正。 つまり角なり湾曲調整のアームがアンカーポイントが必要な状況では ない限り、アンカーポイントは作成されないような仕組になってます。 ↓ つまり角なり湾曲調整のアーム等、アンカーポイントが必要な状況では ない限り、アンカーポイントは作成されないような仕組になってます。
同じレイヤーに違うオビジェクトを1フレームづつ配置したいということでしょうか？ 何故そんな必要がるのかわかりませんが（レイヤーの数は書き出すファイルのサイズには影響しませんから、違うオブジェクトは違うレイヤーが望ましいのです）上記の方法は、 >同じレイヤー上にある複数のオブジェクトを一つずつ、レイヤーに配置する時は「レイヤーに配分」 した後、フレームを1つづつずらし「フレームのコピー」をして元のレイヤーに「フレームのペースト」をします。
＃１ の方と同意見で，＃１ の方のURLをみていませんが...。 たいていの言語やソフトでそんな感じの現象は起こりますよ。 107.1-106=1.09999999999999 　10倍する。 　→ 1071-1060=11 　　　10で割る 　　　→ 11/10 = 1.1 こんな感じにすれば良いのでは？
なるほど、ご心配なく。　そういったケースの場合 [onSoundComplete]関数が便利です。 関数の役割としては、サウンドが再生し終ったら　～　という機能で 音が完了した段階でyahooにリンクしたい場合↓ var s :Sound = new Sound(); s.loadSound("鳴らしたいSE.mp3" , true); s.onSoundComplete = link; function link() { getURL("http://www.yahoo.co.jp/index.html"); } わずかこれだけです。 備考 : sはお好みのキーワードでＯＫです。　例えば sn , snd sound linkというキーワードもお好みでＯＫです。 Point : 外部から音を取得しているので、swfとmp3は同じ場所に保存して下さい。
以前に ParaFla! を使われていたか何かで， ParaFla! の仕様を引きずっていませんか？ Suzuka は Adobe Flash 同様で配置した物の深度などは設定しません。 深度 は ActionScript のムービークリップクラスの depth プロパティで出てくるくらいです。 ａｂｃの画像を手前からｂｃａのように表示する場合は、 aを置いたレイヤーをcのレイヤーよりも下にドラッグすれば良いだけですよ。
一応は次のようにすれば良いとは思います。 //////////////////////////////////////////////////////////////// var this_d = new Date(); today_date.text = (this_d.getMonth()+1)+"/"+this_d.getDate(); // this_d から今日の年月日を取得 var today_y = this_d.getFullYear(); var today_m = this_d.getMonth(); var today_d = this_d.getDate(); // 20日前のDateオブジェクトの作成 var past_20d = new Date(today_y, today_m, today_d-20); // テキストフィールド past_20date に 20日前の 月/日 を表示 past_20date.text = (past_20d.getMonth()+1)+"/"+past_20d.getDate(); // 25日前のDateオブジェクトの作成 var past_25d = new Date(today_y, today_m, today_d-25); // テキストフィールド past_25date に 25日前の 月/日 を表示 past_25date.text = (past_25d.getMonth()+1)+"/"+past_25d.getDate(); // １ヶ月前のDateオブジェクトの作成？？？ var past_1m = new Date(today_y, today_m-1, today_d); // テキストフィールド past_1month に １ヶ月前の 月/日 を表示？？？ past_1month.text = (past_1m.getMonth()+1)+"/"+past_1m.getDate(); //////////////////////////////////////////////////////////////// ○日前というのは良いのですが， １ヶ月前 というのがわかりません。 ActionScript 的にわからないのではなくて， １ヶ月前とは何なのか という定義がわかりません。 これを書いて実行した日付は 9/4 です。 したがって上の１ヶ月前のスクリプトでは 8/4 が表示されるので問題はありませんが， 例えば 3/30 に実行すると， 2/30 は存在しないので， おそらく 3/1 もしくは 3/2 が表示されてしまうと思います。 １ヶ月前ではなくて，30日前だと， 上の 20日前 や 25日前 のようにすれば良いので簡単ですが。 「Flashドキュメンテーション ActionScript 2.0 リファレンスガイド Date コンストラクタ」 http://livedocs.adobe.com/flash/8_jp/main/000021 … （Date オブジェクトの作成方法がいくつか書かれています。）
ご参考までに。 参考URL：http://www.vectorkid.com/tutorials.html
？？？ Flash ではないでしょう？（見ている場所が違っていればすみません。） JavaScript の Lightbox2 だと思います。 Google検索 「Lightbox2」 http://www.google.co.jp/search?hl=ja&q=Lightbox2 … ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ なお， これに近いJavaScript と Flash とを組み合わせるやり方を書かれているサイト（ページ）もあります。 「レイヤーを使用したFull Flash」 http://f-site.org/articles/2006/09/09042615.html しかし，何にしても本来 Flash とは関係がないものです。
SWFファイルライブラリにインポートされているのですか。 状況がよくわかりませんが...（普通あまりそういうことはしない）。 > SWFファイルのみを > クリックした時にイベントを発生することは不可能でしょうか。 これは ＃１ にも書きましたよ。 結局ボタンにしたいのですから， on(release) など on() イベントハンドラ か， そのイベントハンドラメソッド版 ○○.onRelease = function() {} を使えば良いのです。 まず， そのステージ上に配置したSWF（というか中身が壊れたMC）にインスタンス名を付けます。 たとえば 「swf_mc」 と付けたとします。 その場合その「swf_mc」が存在する _root の フレーム に書くスクリプトは次のようになります。 _root.swf_mc.onPress = function() { _root.m01._visible = true; _root.m01.stop(); }; 上では onPress を使いましたが，これはマウスダウンに近いからです。 通常は onPress ではなく，上にも（＃１にも）書いた，onRelease を使います。
#1です。 すみません。私、検証せずでした。^^; ８でも「グリットに吸着」を行っても、少し左上になりますね。（８００％に拡大しても同様）逆に吸着を全てはずしてなら、かなりいい線にいきます。（なぜでしょう？） >しかし、このオプションを有効にしても「ペンツール」を選択した時点で、オプション欄には何も表示されなくなります。 これは表示されていませんが、「全てに描画で有効になる」オプションです。８では「表示」「吸着」から解除できるようになりましたが。
サンプルがあるので差し上げたいのは山々なのですが、お渡し出来る環境がないのでテキスト回答のみ失礼します。 >上の部分に呼び出すには別のファイルか何かが必要なのですか？ 別ファイルが必ずしも必要なわけではありません。 FLASH内部で解決することも出来ます。 しかし、表示させる写真などが多いのであれば話は別です。 外部にイメージを格納するフォルダを作成し、そちらから読み込んだ方が効率が良いと思います。 今回はFLASH内部で解決する方法を書きます。 あくまでもエフェクトがなく、ボタンにロールオーバーさせると上部に配置された画像が、指定画像に切り替わるというのが達成課題とします。 -------------------------------------- 【全体の流れ】 ボタンにロールオーバー・アウトすると、 2種類の画像の_visible値が切り替わるという仕組みを作成します。 -------------------------------------- 1）まず必要なパーツを揃えます。 ボタン、画像2種（元画像と切替え後の画像）を用意。 各MCの名前は任意で決めてください。 ここでは仮に以下とします。 ・ボタンmc　→　btn_test ・元画像mc　→　mc_sample01 ・切替え画像mc → mc_sample02 2)btn_test、mc_sample01をステージに配置 （※mc_sample02はステージに配置しません） mc_sample01のインスタンス名をつける（任意） ここでは仮に、「sample01」とします。 3）mc_sample02をリンケージする （リンケージの設定方法は以下参照） http://www.1art.jp/flash/le/lessona/lessona.htm ここでは仮に、「sample02」とします。 4）1フレーム目に以下のアクションスクリプトを記述 //リンケージされたMCをステージに配置 a_MC = "newsample"; _root.attachMovie("sample02",a_MC,1); _root[a_MC]._x= 265;//mc_sample01と同じx座標値を入力 _root[a_MC]._y= 138;//mc_sample01と同じy座標値を入力 _root[a_MC]._visible = false; 5）btn_testに以下のスクリプトを記述 on(rollOver){ _root.sample01._visible = false; _root[a_MC]._visible = true; } on(rollOut){ _root.sample01._visible = true; _root[a_MC]._visible = false; } 以上。 FLASHは実現させたい動作によって作成方法は様々です。 より細かく実現したい内容を書いて投稿することをお勧めします。
ActionScript3かもしれませんが（未確認） 参考にどうぞ http://www.trick7.com/blog/2006/07/05-160520.php http://www.trick7.com/blog/2006/07/10-124628.php
MovieClipオブジェクトの 「_name プロパティ」 で取得できるでしょう。 　_root 　　└foo(スプライト（MovieClip）) 　　　　└var(スプライト：これ自体に下記スクリプトを書く) --------------------------- onClipEvent(load){ trace(this); trace(this._name); } --------------------------- 　↓トレースウィンドウに出力される結果↓ ------------------- _level0.foo.var var ------------------- 　
root（_root）及び，ムービークリップ のフレームは 1 から始まります。 したがって， ムービークリップ内の フレーム1～101，つまり 100 フレーム分のアニメーションを用意して， そのムービークリップを，root（_root）の フレーム1 に配置し， ロードされたパーセンテージ（整数）分 gotoAndStop() させれば良いと思います。 私は AS3 はわかりませんし， またどのようなスクリプトでローディング画面を作成しようとされているのかもわかりませんから， これ以上の回答は無理です。 とにかく， 100フレームあるムービークリップを作成して， そのムービークリップにインスタンス名を付けて， 　そのムービークリップ.gotoAndStop( ロードされたパーセンテージ ); のように動かせば良いと思います。
何かよくわかりませんが，ここが変ですよ↓。 > 6 　　　　　　　　　if(_root.maxgover >= 3){ > 7 　　　　　　　　　　　　gotoAndStop("元気_ＯＨ"); > 8　　　　　　　　　　} > 9 　　　　　　　　　gotoAndStop("元気_MAX超え"); もし _root の変数 maxgover が 3 以上である場合， "元気_ＯＨ" というフレームラベルの付いたフレームに進みますが， 問題なのはその後です。 > 9 　　　　　　　　　gotoAndStop("元気_MAX超え"); これで， _root の変数 maxgover が 3 以上であってもなくても， "元気_MAX超え" というフレームラベルの付いたフレームに進みます。 つまり， > 6 　　　　　　　　　if(_root.maxgover >= 3){ > 7 　　　　　　　　　　　　gotoAndStop("元気_ＯＨ"); > 8　　　　　　　　　　} という分岐は無意味です。 ボタンをプレスしたときに， > 3 　　　　　　if(_root.genki >= 100){ という条件を満たしていれば， どんな状況でも gotoAndStop("元気_MAX超え");　が動作します。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ◎条件1：マウスでボタンなどをプレスしたとき on(press){ 　　◎条件2：なおかつ， _root の変数 genki が 99 以上で 　　_root.genki >= 99 　　　　◎条件3：なおかつ，_root の変数 genki が 100 以上で 　　　　_root.genki >= 100 　　　　　　◎条件4：なおかつ，_root の変数 maxgover が 3 以上で 　　　　　　_root.maxgover >= 3 　　　　　　　　↓元気_ＯＨ フレームに進む 　　　　　　　　gotoAndStop("元気_ＯＨ"); 　　　　◎条件3：_root の変数 genki が 100 以上であればどんな状況でも 　　　　↓元気_MAX超え フレームに進む 　　　　gotoAndStop("元気_MAX超え");
b01 と b02 は独立して動くのですから， それぞれ独立したタイムラインが必要です。 つまりそれぞれを別々のムービークリップに入れる必要があります。 _root 　　├p01（親ムービークリップ01） 　　│　└b01（p01内をモーショントゥイーンなどで動くボタン） 　　├m01（表示/非表示 が変わるムービークリップ） 　　├p02（親ムービークリップ02） 　　│　└b02（p02内をモーショントゥイーンなどで動くボタン） 　　└m02（表示/非表示 が変わるムービークリップ） 【b01】…（_root.p01.b01） on (release) { _root.m01._visible = true; _root.m01.stop(); _root.p01.stop(); } 【m01】 onClipEvent (load) { this._visible = false; } on (release) { _root.m01._visible = false; _root.p01.play(); } 【b02】…（_root.p02.b02） on (release) { _root.m02._visible = true; _root.m02.stop(); _root.p02.stop(); } 【m02】 onClipEvent (load) { this._visible = false; } on (release) { _root.m02._visible = false; _root.p02.play(); } ※ちなみに， 　 _root.m01.stop();　とか _root.m02.stop(); 　 と書かれていらっしゃるスクリプトは 　 正しいのか正しくないのか私は判断できません。 　 元のスクリプトに書かれていらっしゃって， 　 特に問題なく動くようなのでそのまま残しているだけです。
結局，_root（シーン 1 などメインのタイムライン ）の再生によって b01 は動いているのでしょう？ 　_root 　　├b01（モーショントゥイーンなどで動くボタン） 　　└m02（表示/非表示 が変わるムービークリップ） 　・ _root の再生を play() → b01 は動く 　・ _root の再生を stop() → b01 は止まる b01 に関しては，ただ単にこれだけのことだと思います。 したがって， 【m02】のスクリプトの最後の行， _root.b01.play(); これを絶対パス付きで， _root.play(); または相対パス付きで， _parent.play(); のどちらかに変更すれば b01 は動き出すと思います。 ターゲットパス http://homepage3.nifty.com/ginga-b/MX/targetpath …
説明・・・うまくできる自信ないですが＾＾； 不足と感じれば遠慮なく補足要求してください。 説明のためnum = 10;は定数で書かせていただきました。 for(i = 0;i < 10;i++){ set("array" add i,i);//array0=0;array1=1;array2=・・・のループ処理 } for(i=0;i<20;i++){//とりあえず20回ループ。iの値そのものに意味は無い a=random(10);b=random(10);//シャッフル用乱数を生成。シャッフルされないこともあるかも c=set("array" add a);//変数cに配列a番目の数値を保持（コピー） set("array" add a,eval("array" add b));//配列a番目にb番目の数値を上書き set("array" add b,c);//配列a番目とb番目が重複するので、保持しておいたcを代入。 } for(i = 0;i < 10;i++){ trace(eval("array" add i));//動作確認 } 初期段階ではarrayは[0,1,2,3,4,5,6,7,8,9]のようになっています。 20回の処理の中では以下のようなことが行われています。 下記数値は array[a] ,array[b] ,c　の順 1,2, 　　乱数a,bが1,2だったとして（array1,array2について処理） 1,2,1　　cにarray1（"array" add a）の値を保持 2,2,1　　array1にはarray2の値が入り、array1とarray2は重複 2,1,1　　元のarray1の値である、cをarray2に代入することで、重複を戻す→結果的にarray1とarray2が入れ替わる 続けて２回目のループ。arrayは、[0,2,1,3,4,5,6,7,8,9]から開始 2,3, 　　乱数が1,3だった場合（array1,array3について処理） 2,3,2 3,3,2 3,2,2　　この時点でのarrayは、[0,3,2,1,4,5,6,7,8,9] これが20回繰り返されるとある程度シャッフルされます。（たぶん十分）
#1です。 ●テキストの表示 文字.onLoad = function(Seikou) { if (Seikou) { _root.パーツ_txt.text = this.パーツ1; の部分で if (Seikou) { _root.パーツ_txt.html = true; _root.パーツ_txt.htmlText = this.パーツ1; と変更してみてください。 ただし、何度も同じファイルで書き直しをしていると何故かうまく作動しなくなることがあります。その場合はフレームをコピーしてもう1度新しいファイルでスクリプトを打つとうまくいく場合がありますよ。
ご質問で書かれていらっしゃる， ──────────────────── stop(); clearInterval(stopID); var mov_stop = 4000; ～ 以下略 ～ ──────────────────── の stop(); 以外を消して， つまり， ──────────────── stop(); ──────────────── これだけにして， そのフレームにある ボタンB に， 普通に次のように書けば良いだけなのではないでしょうか。 ──────────────────── on (release) { getURL("http://www.URL"); } on (rollOut) { gotoAndPlay( stop(); を書いた次のフレーム ); } ────────────────────
=== 前置き === 縦横無尽 と言いますか， ボタンのクリックによって動きを変えるということをしなければ， いわゆる イージング や カスタムイージング 付きの モーショントゥイーン ですよね。 昔からあるオーソドックスで自然な Flash の動きです。 ボタンさえなければ動きだけはスクリプトは要りません。 モーショントゥイーン自体より動きを創造するほうが難しいとは思いますが， これくらいの動きはモーショントゥイーンで楽々に作成できるものとして続けます。 問題は動き自体よりボタンクリックです。 常に前に前に進ませる （常に play() play() させる）だけのボタンでしたら，これも楽々です。 ボタンにバック（後に後退）があるところにちょっと頭をひねる必要があります。 １つ考えられる方法は， 各状態から「前進」と「後退」のアニメーションを作成して， ボタンから gotoAndPlay() させる方法です。 決して不可能ではありませんが，普通はしませんね。 もう１つ考えられる方法は， 「後退」させるときは逆再生を使うことです。 「ロールアウトで逆戻りするアニメーション」 http://www.fumiononaka.com/TechNotes/Flash/FN030 … この辺（逆再生を使う辺り）でできれば，それで良いのではないでしょうか？ === 本題 === 結局，モーショントゥイーンで作成出来るかどうかがネックです。 モーショントゥイーン自体よりも動きの創造がネックです。 上の 逆再生 の方法でできるとは思いますが， ご質問のサイトは，おそらく モーショントゥイーン の AS 版， Tween クラスを使用していると思います。 第21回　Tweenクラスを使えばインスタンスを簡単に動かせる http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … 第22回 Tweenクラスのさらに便利な使い方：ITpro http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … ご質問のサイトはで，Tweenクラス（またはその拡張クラスなど）を使用しているので， ActionScriptActionScriptしていない自然な動き（モーショントゥイーンに近い動き）になっているのだと思います。
＃１ です。 > 「スタート」をクリックするとゲームの始めから、 > 「ロード」をクリックすると前にセーブした状態から、プレイ出来るというものです そこをどうすれば，そうなるようにさせるのかを考えなければならないでしょう？ SharedObject 以前の問題です。 たとえば「あ」というデータを保存したら， どうやって「あ」からプレイさせるのでしょうか？ 「あ」の状態なんて私には（musasabi00さんにも）わからないと思います。 「あ」ではなく「2008」でも同じです。 つまり， 「状態をセーブさせる方法」と， 「セーブしたものから状態を復元するしくみ」をまず作らないと， SharedObject に何かをセーブしても何にも動作しないでしょう。 SharedObject 以前にそこを考えて，具体的にどうしたいのかを書かないと誰もわかりません。 SharedObject は，単に「あ」や「2008」などのデータを残すだけのものです。
おそらく，こんな感じがしたいのでしょうね.。 index.swf の _root のフレームに書くスクリプト例↓ ----------------------------------- myLV = new LoadVars(); myLV.onLoad = function(OKdesu) { if (OKdesu) { loadMovie(myLV.myData1+".swf", gamen); } }; myLV.load("data.txt"); -----------------------------------
No.1です。 個人的にはSuzukaの方が使いやすいような気がしますが、一度どちらも使ってみて自分に合う方を選んだほうが良いと思います。 ↓のはおまけです。 参考URL：http://suzupara.iinaa.net/
大前提で知っておかなければならないのは，バージョン です。 Flash のバージョンもそうですが，もっと大切なのは 「FlashLite」 のバージョンです。 FlashLite とは簡単に言うと 「携帯用FlashPlayer」 のことです。 FlashLite1.0…単体で時計の作成は無理 FlashLite1.1…FScommand2 で時刻を取得 FlashLite2.0以上…Dateクラス で時刻を取得 > PCにサンプルとして掲載したときも、 > 時計が現在時刻を表示するようにするにはどうしたらよいのでしょうか？ Dateクラスを使用して，FlashLite2.0以上用のFlash（SWFファイル）を作成すれば両方表示できます。 FlashLite1.1用のFScommand2はPCのFlashPlayerには通用しません。 もし，FlashLite1.1用のFlashを作成した場合は， それとは別に PC 閲覧用の時計を作るべきだと思います。 > PCで携帯待受のFLASHを投稿される方の作品を見ますが > 時計が動いている作品と動いていない作品があります。 > この辺の違いはどういう違いなのでしょうか？ おそらく，FlashLite1.1用と2.0用以上のFlashの違いではないでしょうか。
>ソースの解析などを完全に防ぐ方法はあるのでしょうか？ ありません。Flash に限らず、どんなプログラムも完全に解析を防ぐことは本質的にできません。 解析されたところで実害はほとんどないでしょうから、気にしないのが吉です。 >また大手のFLASHで作成されているゲームなどのソースも見れるという事になるのでしょうか？ そうです。ただし、あくまで swf から ActionScript コードを生成するということであって、 もともとのソースコードとまったく同一ではありません。
方法はたくさんあります。 ---方法例１--- 内部を２フレームにしたスプライトを作成し， そのスプライト内のフレーム１には何も置かず， フレーム2 にリンク先の説明を用意して， イベントに追加してインスタンス名を付けておく。 そして，ボタンにロールオーバーしたとき， スプライトのインスタンス名.gotoAndStop(2); でフレーム2に進めて止める。 ---方法例２--- ボタンにロールオーバーしたとき， 別の場所に，リンク先の説明を書いたスプライトを attachMovie でシンボルから出没させる ---方法例３--- リンク先の説明を書いたスプライトを別の場所に配置し， 不透明度（アルファ）が0（透明）にしておいて， ボタンにロールオーバーしたとき， 不透明度（アルファ）を100（不透明）にする。 　…などなどなど..書ききれない… ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 上に書いた方法とは全く別で， 　ボタンにロールオーバーしたとき， 　別の場所に配置したテキストフィールドに説明を表示する。 という方法はいかがでしょうか？ テキストフィールドに文字を表示させる方法が使えるようになると， 他にも色々，これこそ無数のことに利用できると思います。 ファイルリスト右クリックで， 「アイテムを追加」→「テキスト」でテキストフィールドを追加します。 そのとき， 「ファイルのプロパティ」パネルが出てくると思いますが， 表示させるテキストの欄は空欄にしておきます。 文字の色は黒など適当な見える色にしておきます。 フォントは「_ゴシック」とか「_等幅」とか 前にアンダースコアの付いたデバイスフォントをしていしておきます。 自動サイズのチェックを取って， 幅 と 高さ を たとえば 100 と 50 のように適当に設定します。 そして最重要ポイント。変数名 を付けます。 この説明では message　という変数名を付けることにしておきます。 あと好みで　□枠線　にチェックを入れ， □複数行　にもチェックを入れておきます。 そうして作成した（ファイルリストに追加した）テキストフィールドを， ボタンと同じフレームのイベントに追加します。 場所（座標）はボタンとは違う場所にします。 一方，ボタンは， 右クリック→プロパティで「イベントのプロパティ」パネルを表示させて， アクションの設定で アクション を ＜スクリプト＞ にして， 「スクリプトを編集」ボタンをクリックし， スクリプトエディタに， -------------------------------------- on(rollOver){ _root.message = "こんにちは！"; } - on(rollOut,releaseOutside){ _root.message = ""; } --------------------------------------- と書きます。 そして 「適用（A）」 ボタンをクリックして，イベントプロパティパネルを閉じます。 あとは， プレビュー などで動作確認ができると思います。
そういうものです。 FlashPlayer（8以上）の仕様で，万が一，ローカルの情報が外部に自動的に漏れることがないように考慮されたのセキュリティです。 普通はそのようなことは仕組まれていない SWF なので心配する必要は全くありません。 しかし，意図的にそう仕組んだ SWF をローカルで再生させると， ローカルの情報（例えばユーザ名）などがバレることがあります。 それは，Macromedia（現在Adobe）でも責任は負えないので， とりあえず，どんな SWF であっても外部通信ができないようにしてあります。 セキュリティをPCのユーザが解除することは簡単です。 次のページの パネル で， その SWF ，もしくは SWF が入ったフォルダ，もしくは SWF があるドライブのセキュリティを解除すれば良いだけです。 「Flash Player ヘルプ[グローバルセキュリティ設定] パネル」 http://www.macromedia.com/support/documentation/ … 　○常に許可 にチェックを入れて， 「編集」→「追加」 で SWF ，もしくは SWF が入ったフォルダ，もしくは SWF があるドライブを追加すればOKです。 PC のユーザーが設定するのは簡単ですが， SWF をダウンロードなどしてもらった相手のセキュリティをいじることはできません。 もし，SWF を配布する場合があれば， 上の [グローバルセキュリティ設定] パネル というものがあって， そこで設定する必要があることなどを伝える必要があります。
＃１ です。 > もっと複雑に、花びらの枚数の多くして > 渦巻状に、中心から外側に弧を描いて増えてゆくものを > 最終的に作りたいなあと思うんですが。。 それだと 「何でもアリ」 で 「オールマイティー」 な MovieClip.gotoAndStop()　でしょう。 これが一番です。 　ムービークリップ内のフレーム1＝花びら0枚の絵 　ムービークリップ内のフレーム2＝花びら1枚の絵 　ムービークリップ内のフレーム3＝花びら2枚の絵 　ムービークリップ内のフレーム4＝花びら3枚の絵 　　　　　…　　　　　　　　　　　　　　　　… 　ムービークリップ内のフレームn＝花びらn+1枚の絵 花びらの色も配置も自由です。 こういうムービークリップを用意しておいて， 　ポイント数が 0 のとき ムービークリップを gotoAndStop(1) 　ポイント数が 1 のとき ムービークリップを gotoAndStop(2) 　ポイント数が 2 のとき ムービークリップを gotoAndStop(3) 　ポイント数が 3 のとき ムービークリップを gotoAndStop(4) 　　　　　…　　　　　　　　　　　　　　　　　　　… 　ポイント数が n のとき ムービークリップを gotoAndStop(n+1) ということをすれば良いだけです。 このムービークリップに 「hana_mc」 というインスタンス名を付けたとするなら， ---------------------------------------------- // ポイント値の初期化 var point:Number = 0; // 「hana_mc」 をストップ hana_mc.stop(); // up_btn をクリックしたときの動作 up_btn.onRelease = function():Void { // ポイントを 1 加算 point++; // 「hana_mc」 をポイントに応じたフレームに進める hana_mc.gotoAndStop(point+1); }; ---------------------------------------------- =============================================== 意味が通じれば何でもいいので， どうでも良いことですが少し気になったので...。 > パラメーターは、FLASH用語でまた違った意味になるんですね Flash 用語ではなく一般用語ですよ。 http://www.google.co.jp/search?hl=ja&q=%E3%83%91 … 視覚的パラメータも意味がわかりません...。
マウスカーソルがステージ外に出た場合、 ステージ外に出る直前の座標値が保持されたままその値は変わらなくなるため、 ActionScript2.0 以下の Mouseクラス などでは、普通は検知できません。 しかし、 ボタン もしくは ムービークリップ の、 on(rollOut) または ○○.onRollOut=function(){} を使用すると 検知することができます。 他のコミュニティで、すみませんが↓。 「なぜなにGAC-二つのMCの距離が近づくとアニメーションをスタートする」 http://www.gac.jp/article/index.php?stats=questi … ※→「回答003のリンク先のサンプル」 上のサンプルでは、 背景（haikei）はムービークリップになっていて、 　_root.haikei.onRollOut = function() { 　　　　mouse_flag = false; 　　　　kao._x = -1000; 　}; で、マウスがステージ外にあるときは、 フラグをfalseにして代替カーソル（顔：kao）を非表示にしています。 面倒ですが、ムービー全体をこのことを基準にして作成する必要があります。 つまり、普通にボタンなどの配置はできません。 もしボタンなどを配置する場合は、 このステージ外検知用ムービークリップのロールアウトを常に意識して作成＆コーディングする必要があります。 --------- ActionScript3.0 になると、 Mouse クラス の Event.MOUSE_LEAVE というものが使えるらしく、 これでマウスがステージ外へ出たことを検知できるようです（私は未検証）。 「Mouse - ActionScript 3.0 コンポーネントリファレンスガイド」 http://livedocs.adobe.com/flash/9.0_jp/ActionScr … > ６.タイプが MOUSE_LEAVE の 4 番目のイベントリスナーが、関連する >　 mouseLeaveHandler() メソッドと共に追加されます。このメソッドは、 >　 ポインタがステージを離れると呼び出され、 > 　mouseOutHandler() に新しい mouseMove リスナーオブジェクトを渡します。 > 　これにより、ポインタが実質的に削除されるため、 >　 ポインタがステージ上に残ることはありません。
#1です。 ごめんなさい！解除方法、ありました。^^; すぐ前の質問で、BlurFiltanさんがこたえていましたので・・・ http://oshiete1.goo.ne.jp/qa4272103.html
よくわかりませんが， 「Dreamweaver バイナリ アスキー SWF」 などと検索してみてください。 Google検索「Dreamweaver バイナリ アスキー SWF」 http://www.google.co.jp/search?hl=ja&q=Dreamweav … （なぜか OKWave系 (教えて!goo など) がかなりヒットしてしましますが...。） ひょっとしたら何か見つかるかもしれません。
外部テキストファイルを用意して、そこにファイル名を記載して、そのファイル名を読み込むということで良いと思います。 JPEGファイルは、普通の非プログレッシブJPEGファイルは、Flash Player 6以上、プログレッシブJPEGファイルやPNGファイルなどはFlash Player 8からのサポートとなります。ご注意ください。 特に設定がなければ非プログレッシブJPEGになるのでそれを利用してください。 例：swfと同じディレクトリにアップする filename.txt picture1="august_01.jpg"&picture2="august_02.jpg"&picture3="august_03.jpg"&bgm="august_bgm.mp3" ↑一行で書いてください。 8月ということでファイル名をaugustにしていますが、自分で決めてください。 また、時によって枚数が変化する場合はさらに工夫が必要です。 &maisuu=3として、読み込みスクリプトも工夫が要ります。 スクリプト例 //変数読み込み var addressload_lv:LoadVars = new LoadVars(); addressload_lv.onLoad = function(ok:Boolean) { if (ok) { // ファイル名 picture01=addressload_lv.picture1 picture02=addressload_lv.picture2 picture03=addressload_lv.picture3 bgmfile=addressload_lv.bgm gotoAndStop("soundload"); } else { errorname="変数読み込みエラー" gotoAndPlay("error"); } }; addressload_lv.load("filename.txt"); ＜soundloadフレーム＞ //サウンド読み込み _global.sound001_load = false; var bgm_sound:Sound = new Sound(); //読み込み終了時の処理 bgm_sound.onLoad = function(success:Boolean) { if (success) { trace("Sound Loaded"); _global.sound001_load = true; } else { errorname="BGM読み込みエラー" gotoAndPlay("error"); } }; bgm_sound.loadSound(bgmfile, false); ＜再生に・・・＞ bgm_sound.start(); 過去に作ったものの使い回しなのでおかしい部分があるかもしれません。 外部JPEGファイル読み込みはしたことがないのですが、 サウンド読み込みのスクリプトの bgm_soundをpicture0?にして bgm_sound.loadSound(bgmfile, false);を loadMovie(picture01,001_img); に書き換えたら動作すると思います。 後半が適当な解答になってしまいましたが、ヘルプを見たりしたら完成するのではないかと思います。
おかしいですね。 なぜないのでしょうか？ とりあえずは、テキスト や スプライト をレイヤーに追加します。 そして、キャンバス上の テキスト や スプライト を選択した状態で、 右パネル の 右の方にある、 　□エフェクト 　[　編集　] となっている部分の [　編集　] ボタンをクリックします。 すると エフェクト編集 のパネルが出てきますから、 　○ 登場　○ 消失　○ 繰り返し となっている部分で ○ 繰り返し にチェックを入れます。 すると、 ◎ SWF6 設定では、 ○ 繰り返し　の右の　[　　　　　　　　▼] となっている部分の、 ▼ をクリックすると、 　[SWF6]バウンドし続ける 　[SWF6]回転し続ける 　[SWF6]振動 から動きを選ぶことができます。 もっともこれを選べるのは、 　Suzukaを解凍したフォルダ 　　　└effect 　　　　　└loop 　　　　　　　└[SWF6]バウンドし続ける.csfz が存在する場合です。 この 「[SWF6]バウンドし続ける.csfz」 ファイルを 誤って消してしまっていた場合は選択できません。 Suzukaの本体 ZIP を再解凍するなどして、 loop フォルダ内に 「[SWF6]バウンドし続ける.csfz」 を入れておく必要があります。
#1です。 う～ん。元々作りたいものが、よくわかりません。かなり憶測で書いています。^^; >ボタン1～3にアクションの指示が必要なのでしょうか？？ プルダウンメニューとしては、ボタン自体には要りません。 タイムラインに指示が要ります。何も指示がない場合、タイムラインは延々ループして「アニメーションを繰り返しているように」見えます。 プルダウンメニューとしたいならば、最終フレームにキーフレームをつくり、止める必要があります。 ただ、お書きのスクリプトが1フレーム目に「フレームアクション」で書かれているだけならば、最後のフレームで止まらず1フレーム目に戻って止まります。アニメーションは繰り返されないはずですが。
ウインドウメニューからムービーエクスプローラーを開いてください。 そこで、SlideFrame_1と検索してください。 検索結果の中から特にgetURLで間違って入力されていないかチェックしてください。 gotoandplay()等だけなら問題ありません。 [SlideFrame_1]と変数に代入している場合は、その変数が間違って使われていないかも確かめてください。
＃１ です。 すみません，＃１ のままだと止まりませんね。 また，ターゲットパスが変ですね。 var i:Number = 0; var listener:Object = new Object(); listener.onLoadInit = function() { if(i<9){ i++; loader.loadClip("hoge.jpg", _root['image'+i].img); } }; var loader:MovieClipLoader = new MovieClipLoader(); loader.addListener(listener); loader.loadClip("hoge.jpg", this.image0.img);
参考URLに質問と同じようなシステムを持つ「レイアウト作成システム」がリンクします。 http://www.dango-itimi.com/blog/archives/2005/00 … 上のサイトで書かれているとおり、BitmapData.getPixelを使うと、サーバーに負荷がかかり 「高負荷のPHPやCGIを動作させているユーザーは利用を停止」と規約に書かれているようなサーバーなら、利用をおすすめしません。 参考URLはColdFusionというソフトを使っているみたいですが、なかなか手の届かない価格です。 http://www.adobe.com/jp/products/coldfusion/ Flash8(AS2.0)までしか使ったことがないので詳しく回答できませんが、 http://onegame.bona.jp/paint/ の「保存機能」を見たら参考になることがかいてあると思います。 参考URL：http://playon.jp/mm/print/
別のSWFファイルの容量が分かりませんが、インターネットの場合はISDNで接続している方の気持ちも考えていく必要があります。 FTTH接続で、容量も少ないのであれば回避する方法もあるのかもしれませんが、読み込み中のメッセージを表示させる必要があると思います。 読み込み中の画面といっても、○○％読み込み中とかプログレスバーが出てきたりしなくても良いと思います。 このスクリプトでは、3フレーム目に飛んでいるようですが、 そのフレームに「読み込み中」とか文字を書いておくだけで良いと思います。 読み込み状態とは関係なくてもアニメーションがあった方がよいかもしれません。
一般的に　オールflashでは　メインとなるswfから各コンテンツのｓｗｆを読み込む方法を取ります。メインに各ボタンを配置して　ボタンが押されたらswfを読むということです。　テキストも変更修正が出来るようにXML形式とします。中で表示させる画像も　そとおきとして　xmlで指定して読み込む というのが一般的かと思います　共通部品はリンケージとして読み込んでおくと　全体が軽く仕上がります。　flash1本で作ってるサイトもありますが みなさん　分割ですよ。flashは更新性が悪いと言われますが　作り方によっては　不可能ではないです。　頑張ってください。
Premiere CS3は使ったことがないのでよく分かりませんが、 参考URLから「書き出しの基本」を見てみると、通常の書き出しコマンドではなくて、Adobe Media Encoderという項目があるそうです。 探してみたらPremiere CS3から直接MPEG2ファイルを作成できます。 なお、容量を問わずAVIファイルなら、DVDオーサリングソフトで直接取りこむことができて、焼くときに変換してくれます。 ソフトによって異なるのでそのあたりはご確認ください。 参考URL：http://help.adobe.com/ja_JP/PremierePro/3.0/WSB4 …
こんにちは。 ＣＳＳのインポートについてですが、口頭でうまく伝える自信が無いので参考ＵＲＬを探しました。 ここで直接書けず、すみません。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as/import. …
＃１ です。 > 実は、duplicateMovieClipで作ったムービークリップでして、 > ムービークリップを入れ子にする事ができないようなので、 > （オーサリングツールはPalafra! Actionscriptは1.0相応） > この様な質問をしました。 ParaFla! をお使いのような最重要事項は先に書いていただかないと困ります。 次に duplicateMovieClip です。 そして，最初の質問です。 > ムービークリップを入れ子にする事ができないようなので、 できますよ。 もっとも ParaFla! の場合は，スプライトの入れ子ということになりますが。 絵などをスプライトの中に入れて， そのスプライトを別のスプライトに入れれば良いだけです。 　_root 　　　└ 親スプライト 　　　　　　└子スプライト 　　　　　　　　　　└画像など それで， 子スプライトに例えば，「my_mc0」 などというインスタンス名を付けて， 親スプライトのフレーム1などのアクションで， 次のような感じのことを書けば良いのです。 for(i=1; i<=5; i++){ this.my_mc0.duplicateMovieClip("my_mc"+i,i); this["my_mc"+i]._x = i*30; trace(this["my_mc"+i]); } ただし上のスクリプトは正常に動作しますが， 数値や並べ方などは私が適当に書いたデタラメです。 この 親スプライトの基準点が，ステージ中央になるように配置すれば良いのです。 そうすれば， 親スプライトをズームさせるだけで（どうやってズームさせるのかは知りませんが）， > 各ムービークリップがスクリーン中央を中心にズームさせたいです。 ということができます。 こんな感じです 　　　　　　　　子　子　子　子　子　┐親の中 　　　　　　　　■　■　■　■　■　┘ 　　　　　　　　　　↓ズーム↓ 　　■■　　■■　　■■　　■■　　■■ 　　■■　　■■　　■■　　■■　　■■ ただ， 以上はだいたいのスクリプトとおおまかな作業内容の流れを書いただけです。 親ムービークリップ内の基準点の位置に， 拡大させたい部分を duplicateMovieClip で配置するのは， 作成したいものによってスクリプトはまるで違いますから， この辺を作成したいものによって調節していったり，計算しないと，思い通りには表示されないと思います。 ご質問などを書かれていらっしゃる雰囲気からして， おそらくこれは無理ではないかと推測されますが， 試行錯誤してやれば，決して不可能ではないことだと思います。 たくさんのことを追いかけても何もできないまま終わるだけです。 duplicateMovieClip はとりあえず書かずに， 親スプライト内に子スプライトを手動で４つくらい配置して， その親スプライトをズームさせてみるころからしていくのが良いのではないかと思います。 話は＃１の最初に戻ります。 どうやってズームさせるのかは知りませんが（私の決める所ではない）， 親スプライトをズームさせれば，基準点を中心にズームするはずですよ。 基準点をステージ（キャンバス）中央に配置すれば， ステージ中央を基準に拡大します。
保存させるのはヤメましょう。 保存させないために、作られているのでは ないでしょうか！？
>マップＭＣはｍの初期値０から１ずつ減算した深度にし、 >当たり判定ＭＣはｎの初期値０から１ずつ加算した深度にしてある為、 >マップＭＣが前に出ると言うのは無いはずです・・・。 深度はMCごとにもっているので _root.map.attachMovieで指定する深度と _root.wall.attachMovieで指定する深度は関係ありません 問題は親MCである_root.mapと_root.wallの深度です。 ですので、#1の補足に書かれた >//この前の行で空ＭＣを製作しました。 の部分で例えば、 _root.createEmptyMovieClip("map", 2); _root.createEmptyMovieClip("wall", 1); のように書いていると、_root.mapが手前に来て_root.wallが後ろに隠れてしまいます。 私が思いつく原因はこのくらいです。一応検証用に使ったASを載せておきます 「chip」と「alpha」のリンケージ識別子が設定してあれば、 メインタイムラインにコピペすれば動きます。 //----------------------------------- //↓「map」MCと名前がかぶってしまうのでちょっと変えました var mapA = new Array(); // var d = 0; for (var x = 0; x<30; x++) { mapA[x] = new Array(); for (var y = 0; y<30; y++) { d++; mapA[x][y] = d; } } _root.createEmptyMovieClip("map", 1); _root.createEmptyMovieClip("wall", 2); // n = 0; m = 0; for (a=0; a<mapA.length; a++) { for (b=0; b<mapA[0].length; b++) { n++; //マップ用ＭＣにチップを配置してゆく create = _root.map.attachMovie("chip", "chip"+a+"_"+b, n); create.gotoAndStop(mapA[a][b]); create._x = create._width*b; create._y = create._height*a; //もし、マスの数値が５０以上なら、当たり判定ＭＣにチップを //(50フレーム以上には通行不能のチップを置いています) if (mapA[a][b]>50) { m++; create2 = _root.wall.attachMovie("alpha", "alpha"+a+"_"+b, m); create2._x = create._width*b; create2._y = create._height*a; } } } //----------------------------------- あと、これは今回の件に関係ありませんが深度をマイナスにすると removeMovieClipできなくなります。
http://oshiete1.goo.ne.jp/qa3601505.html #2 後半に出したBugzillaのバグ,今考えるとあまり関係なかったような気がしないでもない
これで動きます。 でももっと上手な書き方があるような気がします。 私も知りたい・・・ import fl.controls.Button; var btn_names_array:Array = new Array("1", "2", "3", "4", "5"); var btn_max:int = btn_names_array.length; var aButton:Object = {}; for (i=0; i<btn_max; i++) { var btnTmp:Button = new Button(); aButton[i] = btnTmp; addChild(aButton[i]); aButton[i].label = btn_names_array[i]; aButton[i].toggle = true; aButton[i].emphasized = true; aButton[i].move(10, 10+30+i*40); var format:TextFormat = new TextFormat(); format.size = 15; aButton[i].setStyle("textFormat", format); aButton[i].addEventListener(MouseEvent.CLICK, clickHandler); } function clickHandler(event:MouseEvent):void { trace("Event type "+event.target.label+":" + event.type); }
＃１です。 > Flash間のみのPOST送信(swf表示)は不可能なんでしょうか？ はい？ ご質問内容とずれてますよ。 混乱しているか、話を変えたかしてませんか？ 複数（２つ）SWF は 複数（２つ）HTML に貼ってあるのでしょう？ だから、HTML に値を送ってHTMLを開かねばなりませんよね。 したがって、ご質問に書かれていらっしゃるように、 JavaScript を経由しなければ、受信側にデータが届きません。 　SWF→ブラウザ→HTML→JavaScript→SWF わかりますか？ 他の物を経由する以上、そこで送受信が行われるわけです。 ぜんぜん、「Flash間のみのPOST送信」 ではありません。 問題は JavaScript と言うことになります。 ですから、 JavaScript で POST が受信できるかどうかと言うのが問題です。 JavaScript の専門ではないのでわかりませんが、 そもそもそういうことはできないのではないかと思います。 QNo.2517418 受信データ取得 http://okwave.jp/qa2517418.html JavaScript で POST 受信できなければ、Flash に届きようがないので POST 受信などできません。 それ以前になぜ、 ブラウザ経由で 自分自信→自分自身 で POST 送信しなければならないのか、 根本的にわかりませんが。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > Flash間のみのPOST送信 を、今実際にサーバにアップして初めてやってみました。 普通はこんなことしません。 10年くらいFlashに携わっていますが、 したことも、しようと思ったこともありませんでした。 また、そのような質問にも初めて出会いました。 　任意のフォルダ 　　　├ a.html 　　　├ a.swf 　　　└ b.swf 「b.swf」 内 _root のフレーム1には、 「my_data」 という "変数名" のダイナミックテキストを用意しておきます。 「a.swf」 内 _root のフレーム1には、 「_btn」 という インスタンス名 のボタンを用意しておきます。 そして、そのフレーム1に次のように書きます。 --------------------------------- my_data = "abcdefg"; _btn.onRelease = function() { getURL("b.swf", "_self", "POST"); }; --------------------------------- わかりますですしょうか。 これだと、 「Flash間のみのPOST送信」 になるのです（成功すればですが）。 間に HTML は介しません。 上の 3ファイル をサーバ上にアップして動作確認。 　結果 　　↓ 　[i] ページを表示できません でした。 つまり、 送られないどころか、そんな SWF は存在しないことになってしまいました。 --------------------------------- my_data = "abcdefg"; _btn.onRelease = function() { getURL("b.swf", "_self", "GET"); }; --------------------------------- と書いた場合は、 「b.swf」 に [abcdefg] が表示されました。 ２つのサーバで検証しましたが同じ結果だったので、 おそらくどこでやっても同じだと思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ Flash どうしは、普通、loadMovie ですから、 ファイル内データのやりとりです。 別ファイルでありながらムービークリップ間ということになります。 そんなとこでは当然、GET も POST も存在しません。 非常に変わった場合が、 ＃１ で書きました SharedObject（要は Cookie みたいなものですよ）です。 もう１つが、 ２窓同時開きの SWF 間通信、LocalConnection です。 「LocalConnection」 http://www.google.co.jp/search?hl=ja&q=LocalConn … > 本件は依頼者に「POST送信で」と依頼されています。 「ローカル間の通信に、GET や POST のようなサーバ通信のようなものを出さないでくれ～（笑）。」 です。
こんにちは、マヒマヒです。 お粗末な回答になってしまうかもしれませんが、実際大手の有名サイトでも、インタラクティブ再生の場合、HTMLに埋め込まずに直接swfファイルを指定しているサイトが結構ありますよ。 こだわりもなく、セキュリティ面を重要としていないサイトなのであれば、直接swfファイルを開かせてもよいのでは？
現在は(A)　haikei(親)--pictLdr1(子)　となっています。 これを(B)　haikei(親)--空のSpriteまたはMovieClip(子)--pictLdr1(孫) とする事で、haikeiは動かなくなります。 スクリプトにはpictLdr1の親をstartDragしなさいと記述してあります。 (A)の場合pictLdr1の親はhaikeiなのでhaikeiごと動きます。 (B)の場合pictLdr1の親は空のSpriteなのでpictLdr1だけが動いてるように見えます。 もっとスマートなやり方があるのかもしれませんが、これで動きます。 var pictLdr1:Loader = new Loader(); var pictURL1:String = "test.png"; var pictURLReq1:URLRequest = new URLRequest(pictURL1); pictLdr1.load(pictURLReq1); var hoge:Sprite = new Sprite();///////////// haikei.addChild(hoge);///////////// hoge.addChild(pictLdr1);///////////// pictLdr1.x = 10; pictLdr1.y = 10; pictLdr1.addEventListener(MouseEvent.MOUSE_DOWN, pickup); pictLdr1.addEventListener(MouseEvent.MOUSE_UP, place); function pickup( event:MouseEvent ):void { event.target.parent.startDrag(); } function place( event:MouseEvent ):void { event.target.parent.stopDrag( ); }
なかなかご質問から実現したいことを読み取るのが難しいですが... （ブラウザの新規ウインドウを開いてURLに遷移する...とも読み取れますし、Flashでオリジナルブラウザを作りたい...とも読めます） ■前者だとしたら... navigateToURL(AS3) ■勘ぐって後者だとして... 1.ブラウザ上で動作するHTMLパーサという意味では 解析できるタグが限定的ではありますが テキスト系コンポーネントでHTMLを有効にすれば HTMLのパースは可能です 2.ローカルで動作するブラウザだとして、 flash（swf）を広義にとらえて、FlexBuilderで開発可能です。 FlexのHTMLコンポーネントでオリジナルブラウザを作る事ができます。
その，当初制作したFLASHを 読み込もうとされた FLASH読み込みソフト で， index.swf または，p001PlQs.swf（月曜日のFLASH）などを， 曜日に応じてロードする SWF を作成すれば簡単ではないでしょうか。 たとえば， その FLASH読み込みソフト で 「dummy.swf」 を作成します。 作成するステージの大きさ（ムービーのサイズ）は， 825×320に設定しておきます。 　index.html 　_srcフォルダ 　　├sc765フォルダ 　　　　├Site0003フォルダ 　　　　　　├ dummy.swf　←ココに配置 　　　　　　├index.html 　　　　　　├index.xml 　　　　　　├index.swf 　　　　　　├p001PlQs.swf（←月曜日のFLASH） てっぺんの 「index.html」 のHTMLの記述部分 <!-- idflash("_src/sc765/Site0003/dummy.swf","825","320","#ffffff"); //--> 「index.swf」をURLクエリパラメータ付きでロードする例 dummy.swf の最初のフレームにActionScriptを記述 ----------------------------------------- // Dateオブジェクト today を作成 var today = new Date(); // 曜日から番号を取得（この場合 日=1，月=2，…，土=7） var num = today.getDay()+1; // _root（メインのタイムライン） に SWF をロード _root.loadMovie("_src/sc765/Site0003/index.swf?_startPage="+num); ----------------------------------------- コメント行を除くとたった３行です（実は１行にもなります。） その FLASH読み込みソフト で， 上記のようなActionScriptが使えなければ， フリーのFlash作成ソフト，「ParaFla!」 や 「Suzuka」 を使えば良いと思います。 Flash を操作するには Flash が一番向いていると思います。 Flash を作成するのに Flash から逃げようとするのでややこしいだけのような気もしますよ。
とりあえず階層構造は次のようになっています。 少なくともこの構造が理解できてイメージできないとわからないと思います。 　_root 　　├ p_mc0（ムービークリップ） 　　│　　└_btn（ボタン） 　　├ p_mc1（ムービークリップ） 　　│　　└_btn（ボタン） 　　├ p_mc2（ムービークリップ） 　　│　　└_btn（ボタン） 　　├ p_mc3（ムービークリップ） 　　│　　└_btn（ボタン） 　　└ p_mc4（ムービークリップ） 　　　　　└_btn（ボタン） > １．// 選択番号 p の初期化　 > 　p = 0; > 　の意味。 p は変数名です。 p ではなくて hoge とか piyo とかでもかまいません。 一応 photo の頭文字 p を使ってみただけです。 この _root の変数 p の値は 0～4 で変動します。 その p の値によって，動くエンジン部分の動向を変えています。 その動くエンジン部分がこの部分です↓。 　～ i=1～4 でループする for文内 ～ 　// 各 p_mc1～p_mc(n-1) の動き 　_root["p_mc"+i].onEnterFrame = function() { 　　　// _root の p の値によって目標座標を変える 　　　if (_root.p<this.p) { 　　　　　this._x += (m+w-r*(n-this.p)-this._x)*s; 　　　} else { 　　　　　this._x += (m+r*this.p-this._x)*s; 　　　} 　}; つまり， ムービークリップp_mc1～p_mc4は， _root の p の値が 0～4 のうちどれであったとしても， ずっと目標座標に向けて近付き続けます。 _root の p の値によって目標座標が変わるので， 近付き続ける座標が変わるというしくみです。 // 選択番号 p の初期化　 p = 0; をしておかないと，p は undefined です。 p が undefined であると上のエンジンが正常に動作しません。 また p の値を 0 ではなく他の数にしておくと， ムービークリップp_mc0 が見えている状態に整列しません。 したがって， p = 0; が必要になります。 ※ただし絶対にこれが必要なのは 　 FlashPlayer7（FlashMX2004)以上のSWFの場合です。 　 FlashPlayer6以下のSWFでは 　 初期化をしていない変数の値は， 　 自動的に ""(空白文字)，もしくは 0 と判断されますから， 　 上の場合 p = 0 と書かなくても自動的にそうなります。 > ２．// 各 p_mc? にローカルな変数 p の値を設定 > 　　_root["p_mc"+i].p = i; > 　　の記述の意味。 これは書かれていらっしゃる通り， ムービークリップ p_mc0～p_mc4 内の変数 p を i と同じ値にしています。 　_root 　　├ p_mc0 ← 変数p=0 　　│　　└_btn 　　├ p_mc1 ← 変数p=1 　　│　　└_btn 　　├ p_mc2 ← 変数p=2 　　│　　└_btn 　　├ p_mc3 ← 変数p=3 　　│　　└_btn 　　└ p_mc4 ← 変数p=4 　　　　　└_btn ということです。 > ３．// 親の p の値を _root の p に代入 > 　_root.p = this._parent.p; > 　の記述の意味。 各ボタン_btn のロールオーバー時の動作ですよね。 各ボタン_btn の親 は p_mc0～p_mc4 のうちいずれかです。 仮に p_mc2 内の _btn にロールオーバーしたときは， その親の p の値 2 を _root の p に代入するということになります。 　_root　変数p=2　←───┐ 　　├ p_mc0 ← 変数p=0　　│ 　　│　　└_btn　　　　　　　　│ 　　├ p_mc1 ← 変数p=1　　│ 　　│　　└_btn　　　　　　　　│ 　　├ p_mc2 ← 変数p=2 ─┘ 　　│　　└_btn ←★ロールオーバー 　　├ p_mc3 ← 変数p=3 　　│　　└_btn 　　└ p_mc4 ← 変数p=4 　　　　　└_btn これで _root の変数p の値が 2 になるので， 上に書いたエンジン部分の各p_mc0～p_mc4の動く目標座標が変わります。 ※---注意-------------------------- ボタン自体に on (rollOver) { _root.p = this._parent.p; } と書いた場合， この this はそのボタンのあるムービークリップになります。 (例)　_root ←this._parent 　　　　└p_mc0 ←this 　　　　　　　└_btn 一方， ボタン.onRollOver = function() { _root.p = this._parent.p; }; と書いた場合， この this はそのボタン自体になります。 (例)　_root ←this._parent._parent 　　　　└p_mc0 ←this._parent 　　　　　　　└_btn ←this 書き方によって this は変わります。 this が何なのかわからなくなった場合は， trace(this); を書いて「制御」→「ムービープレビュー」 で確かめてみると良いと思います。 ----------------------------------- > 一つのソースの中に絶対パスと相対パスを混ぜて書いてよいのか 「悪い」とは何処にも書いていないと思います。 また理論も合っているので良いのではないでしょうかね。 何も考えずにごちゃ混ぜにするとややこしいので確かに混ぜない方が良いです。 「for文を使って各ボタン_btn の動作定義をしている」 というところがポイントです。 for文を使う以上，右辺は this._parent.p のように相対パスでないと書けないでしょう。 どうやって絶対パスで表します？？？ 実際は四苦八苦すると _root.p_mc○.p のような意味になるように書けますが， それは無駄な努力です。 したがって， 普通に考えると右辺は this._parent.p のような相対パスに決定してしまいます。 変えるとしたら左辺でしょうね。 気になるようでしたら， _root.p = this._parent.p; ではなく， this._parent._parent.p = this._parent.p; に統一しても良いと思います。 しかし， this._parent._parent って何？ と，わかりにくくなりませんか？ 混乱を防ぐために _root.p にしています。 何も考えずに混ぜているのではなくて， 上のように考えた上で，絶対パスと相対パスを混ぜているので， かまわないと思います。 > ４．for (i=1; i<n; i++) { > 　// 各 p_mc1～p_mc(n-1) の動き > 　_root["p_mc"+i].onEnterFrame = function() { > 　// _root の p の値によって目標座標を変える > 　if (_root.p<this.p) { > 　this._x += (m+w-r*(n-this.p)-this._x)*s; > 　} else { > 　this._x += (m+r*this.p-this._x)*s; これが上にも書いた主要エンジン部分です。 実際に数値を代入して考えてみるとわかると思います。 for文の i が仮に 1 であったとします。 そのときは次のようになります。 　// 各 p_mc1の動き 　_root.p_mc1.onEnterFrame = function() { 　　　// _root の p の値によって目標座標を変える 　　　if (_root.p<this.p) { 　　　　　this._x += (m+w-r*(n-this.p)-this._x)*s; 　　　} else { 　　　　　this._x += (m+r*this.p-this._x)*s; 　　　} 　}; p_mc1 の p は 1 です。 また各変数は次のように設定してあります。 // 表示枠の 横幅 を設定（変更可） w = 600; // 表示枠の 左側余白 を設定（変更可） m = 10; // 表示枚数(p_mc? の個数)の設定（変更可） n = 5; // 狭いときに見えている範囲を設定（変更可） r = 80; // 動く速さの設定（変更可） s = 1/5; したがって次のようになります。 　// 各 p_mc1の動き 　_root.p_mc1.onEnterFrame = function() { 　　　// _root の p の値によって目標座標を変える 　　　if (_root.p<1) { 　　　　　this._x += (10+600-80*(5-1)-this._x)*1/5; 　　　} else { 　　　　　this._x += (10+80*1-this._x)*1/5; 　　　} 　}; 実際はこの↑ように数値を直接記入してもかまいません。 作成の最初の段階ではまずこのような感じで作成したと思います。 しかしこのままだと， 何処の数字をどう変えれば思い通りに動かせるのか使う方がわかりにくいです。 また，触りすぎて壊してしまう可能性もあります。 何処を変えれば何が変わるのかをわかりやすくするために， w　m　n　r　s という変数を別に上に用意して，その変数の意味を書いています。 上の式をさらに計算します。 　// 各 p_mc1の動き 　_root.p_mc1.onEnterFrame = function() { 　　　// _root の p の値によって目標座標を変える 　　　if (_root.p<1) { 　　　　　this._x += (290-this._x)/5; 　　　} else { 　　　　　this._x += (90-this._x)/5; 　　　} 　}; したがって， p_mc1 の x座標は， _root の p の値が 1 未満であるとき（0 のとき） 　　→290 に 1/5 ずつ近づく _root の p の値が 1 以上であるとき 　　→90 に 1/5 ずつ近づく ということになります。 MovieClip.onEnterFrame = function() { }　は， ムービークリップクラスのイベントハンドラメソッドのうちの１つで， { } 内が１フレーム進む時間ごとに毎回実行されます。 「+=」 は， 加算後代入演算子です。 this._x += (290-this._x)/5; の場合は， this._x = this._x+(290-this._x)/5; と同じ意味です。 仮に this._x が最初 0 であったとします。 onEnterFrame = function() { } の { } 内１回目の実行で， this._x = 0+(290-0)/5; 　→ this._x =59　になります。 onEnterFrame = function() { } の { } 内２回目以降の実行で， ２回目：this._x = 104.4 ３回目：this._x = 141.52 ４回目：this._x = 171.216 ５回目：this._x = 194.9728 ６回目：this._x = 213.97824 ７回目：this._x = 229.182592 ８回目：this._x = 241.3460736 　… 略 … と 290 に向けて前の座標から 1/5 の割合ずつ近づき続けます。 もし _root の p が 1 以上であると， this._x = 90 に向けて近づき続けます。 > _root.p = this._parent.p; の意味が分かっていないので、 > if (_root.p<this.p) の記述についても理解できていません。 なんとなく逆です。 またこの回答で書いた内容も下に書いた物ほど先に作成しています。 考えとしては _root.p の出没は念頭に置いていますが， 実際に詰めて作成して行くのは下の方が先です。 ◎ 簡単な例 ステージ上に直径２ｃｍくらいの塗り入りの丸を描きます。 そしてムービークリップに変換して， 「my_mc」 というインスタンス名を付けます。 そして_rootのフレームに次のように書きます。 ---------------------------------- // my_mc内の変数 num の初期化 my_mc.num = 20; // my_mc をクリックしたときの動作 my_mc.onRelease = function() { this.num += 50; }; // １フレーム進む時間ごとに毎回実行する動作 my_mc.onEnterFrame = function() { this._x += (this.num-this._x)/5; }; ---------------------------------- そしてパブリッシュ。 my_mc をクリックすると num が 50 ずつ加算されるので， 目標座標が右へ右へと動き，my_mc が右へ右へと動きます。 この辺から脹らませて行って上のような仕組みを作成します。 ですから作成上 _root.p の登場はずっと後になります。
目的のサイトかどうかは分かりませんが、Adobe　BridgeCS3（私の場合はCS3で確認）をインストールされて、「BRIDGE　HOME」から「Fｌ」アイコンをクリックして、Flashのチュートリアルから、参考になる手順を再生すれば、見ることが出来るはずです。
いや、Flashとか関係なく、普通に英和で調べれば。 Maxは最大値、Minが最小値、SpanはMax-Minだと思うけど。
どうやら、Firefoxでは、IE(Trident)とは違うHTML解析が使われていて、https:// から始まるものや、Scriptが動かなかったり、一部見れないページがあるようです。 これは、自信ないですが、IEではTridentという、解析システムが使われていて、FirefoxではGeckoだったと思います。 Geckoのほうが、ページの表示は、若干早いようです。 個人的にブラウザは、解析システムの切り替えができる、Lunascapeがいいと思います。 けっきょく、タグはあっていると思います。 firefoxでブラウジングすると、いろいろ見れないページがあります。
>なぜ３で駄目で２で動くのか等さっぱりわかりません。 バージョンCS３でしたか・・・・はははは。 アクションスクリプト2.0と3.0では全然物が違います。 ですから、あなたが書かれたスクリプトは2.0のもので３．０では通じません。参考URLの「表01-001■ActionScript 1.0/2.0からActionScript 3.0へのプロパティ名変更の例」だけでも、ずいぶん違います。 もし、今後ＦLAＳＨで質問される場合はバージョン表記されることをお勧めします。^^; 参考URL：http://www.fumiononaka.com/Sample/F-site/ActionS …
サイン・コサインが難解な数学というレベルかどうかは微妙ですが 必要・興味にかられてチクチク独学でやっているうちに ああ、これがあの時のサイン・コサインか、と気付いたりしましたね。 個人的にはサンプルコードをちゃんと読み解いて利用することが大切だと思います。 本は網羅的に習熟するには向いているのかもしれませんが 無駄な時間を使ってしまう事がおおいので 必要なテクニックを必要な時に、その実現方法を探した方が効率がいいように思います。 あるASでの程度数学（多分幾何学だとおもう）にこなれてきたら、物理的な動きの課題に取り組むことになるでしょう。 また、同時に負荷やメモリ等といったチューニングの世界になるかもしれません。 また、世の中には思いつくことは既に実現されている事も多く、ゼロから開発するのは馬鹿だという考え方もできます。 簡単にソレを実現するライブラリが配布されているかもしれません。 余計なお世話ですが... とりあえず、がっつり取り組んでみて やはり自分には無理だと感じるならば 無理に欠点を補填するのではなく、自分の得意を伸ばすべきです。 ソレができる人に依頼（アドバイスを受けたり）したほうが良い場合が、お客様にも会社にとっても良い結果になる事が多いように思います。
> フラッシュ内に、画像をlightboxで開く えっ？？？　無理でしょう。 「HTML 内に フラッシュを lightbox で開く」 でしたらできると思いますが。 「レイヤーを使用したFull Flash」 http://f-site.org/articles/2006/09/09042615.html もしくは ＃１ の方の書かれていらっしゃるように 「フラッシュから画像をLightBoxで開くようにする」 とかの間違いではないでしょうか？ Flash 内で LightBox など JavaScript を実行するのは不可能ですが， それ以前に， そもそも Flash 内に LightBox など複雑なものは元から必要ありません。 ボタンをクリックしたら， gotoAndPlay() とか gotoAndStop() など（など方法は無数）で， LightBox のような何かを表示させれば良いだけです。 もっともっと自由に色々なことができるのが Flash です。 それがなかなか難しい HTML であるからこそ LightBox のようなものがあるのです。
scale="exactfit" をわざわざ書くから，そういうようになるのでしょう？ 書いてある通りになっているだけです。 scale="exactfit" を消してしまうか，もしくは， scale="noBorder" に書き替えると横伸びはしません。 scale="exactfit" を消すと，Flashが伸縮してFlash全体がウィンドウ内に表示されます。 つまり縦と横のうち長い方が優先です。 scale="noBorder" にすると，Flashが伸縮してFlashの外が表示されないように表示されます。 つまり縦と横のうち短い方が優先です。 HTML のサイトではありませんが， Flash の表示に関しての解説ページです。 Flashゲーム講座＆ASサンプル集【Flash の画面表示について】 http://hakuhin.hp.infoseek.co.jp/main/as/stage.h … もし上記の様な方法をとってもまだ変で， それ以上詳細に色々したい場合は， 「何をどうしたいのか」をまず明白にしてご質問されなければわかりません。 あと， 上は HTML の話ですから Flash のバージョンはあまり関わらない場合が多いですが， もし Flash を操作する場合は， Flash のバージョン や パブリッシュしたいSWFのFlashPlayerのバージョン や ActionScript のバージョンがないと， 答えるに答えられない場合も多々あります。
簡単に書くと， 丸「0」 に 横線「-」 を足して 「θ」 みたいなのを描かれたということでしょうね。 「θ」が全部塗りつぶされてしまう原因は３つほど考えられます。 ◎１つ目 「0」 と 「-」 の間に隙間があると「-」を境界にして別々に塗れません。 隙間があると，隙間から塗りが漏れます。 いったん，「0」 を完璧に切るように， はみ出るまで線を長めに引いて「-θ-」， あとからはみ出た部分をカットして塗るなど， 完璧に閉じるように絵を描くか， もしくは， バケツツールを選択して，ツールパネルの一番下の左の， 「隙間の大きさボタン」（丸の上が切れたボタン）をクリックして， 「中くらいの隙間を閉じる」や「大きい隙間を閉じる」にチェックをしてバケツツールで塗ると， ある程度の隙間があっても，塗りが隙間から漏れません。 ただし， この「中くらいの隙間を閉じる」や「大きい隙間を閉じる」にチェックをした場合， Flashが図形をファジーにしか見なくなりますから， 詳細な箇所（コーナーなど細い空間）にまで塗りが行き渡らなくなるのが欠点です。 ◎２つ目 「0」 と 「-」 が別レイヤーにあると「-」を境界にして別々に塗れません。 違うレイヤーにあるものは，違うオブジェクトです。 「0」 と 「-」 を同じレイヤーに描く必要があります。 ◎３つ目 「0」 と 「-」 が別の描画オブジェクトであると「-」を境界にして別々に塗れません。 「鉛筆ツール」や「線ツール」を選択した状態で， ツールパネルの一番下の左の「オブジェクトの描画ボタン」（レンズのようなボタン）を押した状態にして線を描くと， 線を引くたびに線ごとに別々の描画オブジェクトとして描かれます。 この， 「オブジェクトの描画ボタン」を押した状態にして「0」 と 「-」 を描くと， 「0」 と 「-」 とは別物として扱われますから 「0」 が全て塗りつぶされてしまします。 「オブジェクトの描画ボタン」を押さない状態にして「0」 と 「-」 を描くか， もしくは， 「オブジェクトの描画ボタン」を押した状態にして「0」 と 「-」 を描いてから， その２つを選択して「修正」→「分解」などで分解してからバケツツールで塗る必要があります。 ３つほど書いてみましたが， ３つの場合のどれかという意味ではありません。 ３つのうち２つに該当しているかもしれませんし， ３つのうち全てに該当している可能性もあります。 また， 「0」 と 「-」 とを別々のグループとして描いているとか， 別々のインスタンスとして配置しているとか， 他の可能性も考えられます。 何にしても， 「オブジェクトの描画ボタン」を押さない状態にして， レイヤーも勝手に増やさないようにして， 「-」 を 「0」 と 交差させるように長く描くと， 「-」 を 境界に 「θ」 の上下が塗り分けられます。 つまり，何にも考えなくて描くと普通に上下が塗り分けられます。 何かを考えて余計な操作をすると，塗り分けられなくなる場合が出てきます。
ここではサンプルなどを提示できませんし， 提示できたとしても私には ParaFla! でサンプルを作成する能力もありませんからヒントだけのようなものです。 ボタン機能（ on(rollOver){} などの on(○○){} ）が上下に重なると， 下のボタン機能（ on(○○){} ）は機能しません。 Flashの仕様です。 このことは便利にはたらくことが多いです。 しかし， たまにはご質問されているように邪魔になる場合もあります。 スプライトを親子の入れ子にして， 親スプライトにも on(○○){} を書いて， 子スプライトにも on(○○){} を書いた場合， 親スプライトの on(○○){} が優先されます。 スプライトは入れ物なので， 外側（親側）の入れ物ほど優先されます。 on(○○){} が上下に重なった場合と同じことになります。 したがって， > 子メニューに触れても大きくならないし > URLも取得できませんでした。 という状態になります。 目指していらっしゃるご質問のサイトのメニューを よーーーく，観察してみてください。 観察するポイントは "カーソルの形" です。 最初に表示されている縦にならんだ親ボタン（スプライト）にカーソルを乗せたとき， ハンドカーソル（指カーソル）に変わりません。 これは何を意味しているのかというと， このスプライトには on(○○){} を設定していないということです。 その後に出てくる子ボタン（スプライト）にカーソルを乗せたときは， ハンドカーソル（指カーソル）に変わります。 これは何を意味しているのかと言うと， ボタンに設定したインスタンスであるか， もしくは on(○○){} を設定したスプライトということになります。 ですから， 親スプライトにカーソルを乗せたり放したりするのを， on(○○){} で検知して動作させるのではなく， 親スプライトとカーソルとが接触したかどうかを判断させて， 親スプライトとカーソルとが接触していたなら， そのスプライトを gotoAndStop(○○) させるような仕組みが必要となります。 一般的にはこれには hitTest を使います。 FN0308001 onハンドラを使わずにロールオーバー-ロールアウトを検出する http://www.fumiononaka.com/TechNotes/Flash/FN030 … Flashゲーム講座＆ASサンプル集【当たり判定について】 　→点とインスタンスとで当たり判定を取る http://hakuhin.hp.infoseek.co.jp/main/as/hittest … 以上， > 子メニューに触れても大きくならないし > URLも取得できませんでした。 に関して，そうなる理由と，対処法のヒントだけという回答です。
＃１ です。 書き忘れていたのですが，＃１で書いたのは最低条件です。 startDrag() を使用すると， ２つのムービークリップを同じ条件で動かすことができないので， startDrag() を使用している場合は， 少なくとも，それをやめなければならないということを書いたのです。 他の条件も合わせなければならないのは当然のことですし， 他の条件を合わせるということ自体も，まだ最低条件です。 この回答は長いですが， 結局，内容はずっと下↓の方にある 「★解決策案」 だけです。 ごちゃごちゃ書いたことは単にその理由などですから， 不要であると思われる場合は適当に読み飛ばしてください。 厳密で，普通の場合は考えなくて良い話を書きます。 少々ややこしいのですごくシンプルな例で書きます。 「A_mc」 と 「B_mc」 という２つのムービークリップがあったとします。 「A_mc」 が下レイヤーで 「B_mc」 が上レイヤーであるとします。 　レイヤー　・・・|●| ← B_mc 　レイヤー　・・・|●| ← A_mc 下レイヤーの 「A_mc」 には次のようなスクリプトを書いたとしておきます。 onClipEvent(mouseMove){ this._x = _parent._xmouse; this._y = _parent._ymouse; } そして，上レイヤーの 「B_mc」 には次のように書きます。 onClipEvent (mouseMove) { this._x = _parent.A_mc._x; this._y = _parent.A_mc._y; } これで， onClipEvent (mouseMove) { ～ } という条件も一致していますから， 「A_mc」 はマウスの動きにピッタリくっついて動き， 「B_mc」 は 「A_mc」 にピッタリくっついて動くように思えます。 ところがドッコイ，そうはなりません。 なぜかと言うと，上レイヤーの 「B_mc」 のスクリプトが先に実行されるからです。 　マウスの座標が 5 に動く 　　→ 「B_mc」 の座標が 「A_mc」 と同じ座標になる 　　→ 「A_mc」 の座標が 5 になる 　マウスの座標が 10 に動く 　　→ 「B_mc」 の座標が 「A_mc」 と同じ 5 になる 　　→ 「A_mc」 の座標が 10 になる 　マウスの座標が 50 に動く 　　→ 「B_mc」 の座標が 「A_mc」 と同じ 10 になる 　　→ 「A_mc」 の座標が 50 になる 　…　… 続く …　… 「B_mc」 の方がスクリプトの実行が早いため，過去の「A_mc」の座標を参照します。 したがって，ワンテンポ遅れて動くことになります。 上のままのスクリプトを使う場合（そのままを使う場合です）， 上レイヤーの 「B_mc」 のスクリプト方が後で実行されなければなりません。 そうなればうまく行きます。 　マウスの座標が 5 に動く 　　→ 「A_mc」 の座標が 5 になる 　　→ 「B_mc」 の座標が 「A_mc」 と同じ 5 になる 　マウスの座標が 10 に動く 　　→ 「A_mc」 の座標が 10 になる 　　→ 「B_mc」 の座標が 「A_mc」 と同じ 10 になる 　マウスの座標が 50 に動く 　　→ 「A_mc」 の座標が 50 になる 　　→ 「B_mc」 の座標が 「A_mc」 と同じ 50 になる こうなるようにするためにはどうすれば良いかと言うと，パブリッシュ設定を変えます。 「ファイル」→「パブリッシュ設定」 で 「パブリッシュ設定」パネルが開きます。 そのパネルで 「Flash」 タブ を選択して， 上から ２番目 辺りにある，ダウンロードの順序 を 　ダウンロードの順序(L)：[上から下へ　　ｖ] のように変更します。 デフォルトでは 下から上へ です。 これで， 描画オブジェクトは上レイヤーから順にロードされます。 しかし逆に， 下のレイヤーのムービークリップに書いた onClipEvent (mouseMove) { ～ } が先に実行されるようになります。 この順は例えば次のようにすれば確かめられます， メインのタイムライン（_root） を ２つのレイヤーにして， 各レイヤーに違うムービークリップを配置し， 各フレームやムービークリップ自体に次のように書きます。 ＝＝＝ ---上のレイヤーのフレーム1--- trace("レイヤー上_フレーム1"); ---上のレイヤーのムービークリップ自体--- onClipEvent (initialize) { trace("レイヤー上.MC_onClipEvent (initialize)"); } onClipEvent (load) { trace("レイヤー上.MC_onClipEvent(load)"); } onClipEvent (enterFrame) { trace("レイヤー上.MC_onClipEvent(enterFrame)"); } onClipEvent (mouseMove) { trace("レイヤー上.MC_onClipEvent(mouseMove)"); } ---上のレイヤーのムービークリップ内フレーム1--- trace("レイヤー上.MC_フレーム1"); ＝＝＝ ---下のレイヤーのフレーム1--- trace("レイヤー下_フレーム1"); ---下のレイヤーのムービークリップ自体--- onClipEvent (initialize) { trace("レイヤー下.MC_onClipEvent (initialize)"); } onClipEvent (load) { trace("レイヤー下.MC_onClipEvent(load)"); } onClipEvent (enterFrame) { trace("レイヤー下.MC_onClipEvent(enterFrame)"); } onClipEvent (mouseMove) { trace("レイヤー下.MC_onClipEvent(mouseMove)"); } ---下のレイヤーのムービークリップ内フレーム1--- trace("レイヤー下.MC_フレーム1"); ＝＝＝ そして，ダウンロードの順序を変えて， 「制御」→「ムービープレビュー」します。 すると次のような出力結果が得られます。 ◎ ダウンロードの順序＝下から上 の場合 レイヤー下.MC_onClipEvent (initialize) レイヤー上.MC_onClipEvent (initialize) レイヤー上_フレーム1 レイヤー下_フレーム1 レイヤー下.MC_onClipEvent(load) レイヤー下.MC_フレーム1 レイヤー上.MC_onClipEvent(load) レイヤー上.MC_フレーム1 レイヤー上.MC_onClipEvent(enterFrame) レイヤー下.MC_onClipEvent(enterFrame) レイヤー上.MC_onClipEvent(mouseMove) レイヤー下.MC_onClipEvent(mouseMove) ◎ ダウンロードの順序＝上から下 の場合 レイヤー上.MC_onClipEvent (initialize) レイヤー下.MC_onClipEvent (initialize) レイヤー上_フレーム1 レイヤー下_フレーム1 レイヤー上.MC_onClipEvent(load) レイヤー上.MC_フレーム1 レイヤー下.MC_onClipEvent(load) レイヤー下.MC_フレーム1 レイヤー下.MC_onClipEvent(enterFrame) レイヤー上.MC_onClipEvent(enterFrame) レイヤー下.MC_onClipEvent(mouseMove) レイヤー上.MC_onClipEvent(mouseMove) ダウンロードの順序を変えると， ムービークリップに書いたスクリプトの個々のセット実行順が逆になる感じです。 以上， そうなる理由や現象や確認方法を長々と説明しましたが，結局， ★解決策案 　２つのムービークリップとも， 　onClipEvent (mouseMove) { ～ } 　で行くならそれで統一させる。 　そしてパブリッシュ設定で， 　ダウンロードの順序(L)：[上から下へ　　ｖ] 　にする。 という２点だけです。 　-　-　-　-　-　-　-　-　-　-　-　-　-　-　-　-　-　-　-　- 本来，このようなことは考えなくて良いことです。 ヘルプにも載っていませんし，本などにも普通は載っていない事項だと思います。 ２つのムービークリップを動かすために， ２つの onClipEvent (mouseMove) { ～ } を使う上， 厳密な座標追従を求めていらしゃるため， このようなことを考えなければならないのです。 つまり， 最初から１つの onClipEvent (mouseMove) { ～ } で動くように書く， もしくは， ＃１で書きましたように，２つのムービークリップは独立してマウス追従させれば良いだけです。 しかし， 補足（お礼）で書こうとされたその長く複雑なスクリプトを， １つの onClipEvent (mouseMove) { ～ } にまとめたり， ２つを独立させてマウス追従させるようにカスタマイズするのはちょっと無理かもしれないと思いましたので， 上のような 「ダウンロードの順序」 を 「上から下へ」 にするという方法を書かせていただきました。
>swfなどのFlashコンテンツに外部から手動でビットマップ画像を入力してFlash内で表示させたりする事は可能でしょうか？ 「手動」の意味が判りかねますが・・・・ 多分、アルバム写真などのように「SWFの外部にある画像を読み込んで表示させる」ということだと思いますが・・・・ それならば可能です。 参考URLに「フォトアルバム」の無料サイトをあげておきます。 >他のアプリケーションと連携を図る事 も、可能です。ただし、かなりの知識が要りますね。 参考URL：http://flash-bucks.com/flash/album/index.html
多分ですが、 書き出しが出来ていないのでしょう。 考えられる原因は色々ありますが、大体の場合、読み込んだ画像ファイルが重すぎて、PCのスペックに負荷がかかり過ぎ、動作不良を起こしていることが多いです。 元の画像を、画像編集ソフトでサイズダウンするか、解析度を下げてから読み込んでみてはいかがでしょうか？（初心者でなければ「アクションスクリプトで画像を外部から読み込む」よいう手もありますが）^^; 参考URL：http://flash-bucks.com/flash/album/index.html
LoadMovie関数を使ってみてはどうですか？ 参考URL 三つのファイルをa.swf,b.swf,c.swfとすると a.swfの最終フレームで loadMovie("b.swf", _root); b.swfの最終フレームで loadMovie("c.swf", _root); と入力します。 なお、最後のSWFファイルから最初に自動で戻りたい場合は c.swfの最終フレームで loadMovie("a.swf", _root); とします。 ボタンを設置して、 on (release) { loadMovie("a.swf", _root); } のようにしたら、b.swf再生中にa.swfに戻ったりすることができます。 Flash 8 / ActionScript 2.0までしか使ったことがないのですが、最新のAS3でも正しく動作すると思います。 参考URL：http://livedocs.adobe.com/flash/9.0_jp/main/0000 …
＃１ です。 すみません。 まず訂正を先にさせていただきます。 // もし hr が 10 で なおかつ flag が true でなければ if (hr == 19 && !flag) { 　　↓訂正↓ // もし hr が 10 で なおかつ flag が true でなければ if (hr == 10 && !flag) { です。 本当に 19 時前後（＃１書き込み前後）で実験していたので， 19 にしたままでした。 --------------------------------------------- > 今日は10時15分に10秒のＭＣが流れ、 > 次の日は10時35分にＭＣが流れ、 > その次の日は10時49分に…と10時から11時の間、 > ランダムで一日に一回ＭＣが流れるようにしたいのです。 なんとなくわかったような気がします。 > 分かりますでしょうか？ わかりません。 というか無理ではないかと思います。 ずっと（何日も何日も）動かし続けるものなのでしょうか？ それでしたら可能かもしれません。 10 時台 以外になったらあるフラグAを false にして， 10 時台 になったらあるフラグAを true にしてすぐにそのフラグAを false にすると同時に， AAA = random(60); で 0 ～ 59 までのうちいずれかの整数を AAA に代入しておきます。 そして， ＃１ で書いたように， // 変数 flagB の初期値を false にする flagB = false; // もし hr が 10 で なおかつ minがAAA で flagB が true でなければ if (hr == 10 && min==AAA && !flagB) { // _root の my_mc に命令 tellTarget ("/my_mc") { // 再生しろ play(); } // そして flagB を true にする flagB = true; } ということをすれば良いのですが， ずっと（何日も何日も）動かし続けるものではないのでしょう？ ずっと動かし続けるものではない場合，10時台 にアクセスするたびに AAA = random(60); が実行されてその都度ランダムが変わります。 今日は何回目のアクセスなのかを調べて， １回目のアクセスであったなら， そのときだけ AAA = random(60); を求めておいてそれを何処かにとっておいて， 10時台 になればその取って置いた値を参照すればなんとかできるかもしれません。 つまり， JavaScript の Cookie や ActionScript の SharedObject や サーバ上の PHP など， Flash とは別の場所に値を格納しておく場所が必要になります。 携帯では Cookie どころか JavaScript も使えません。 FlashLite1.1 では SharedObject も使えません。 サーバ上 の PHP にアクセスするには必ず１クリックが必要ですし， この辺りになってくると 携帯アクセサリ の域を出たシステムになってきます。 つまり Flash 単体では無理な話になります。 要は，ランダム が無理なのではなくて， その日に決めた値を１つに固定するのが無理です。 無理でなくするようにゴリ押しすると， かなり難アリで PHP などの使用になってしまいます。
音楽のみのswfを読み込んで再生を制御するためには、多分通常の ・ムービークリップの読み込み ・読み込みの監視 ・再生の制御 を行うことでできると思います。 CS3でactionscript2で新規作成し、コンポーネントからMediaPlayBackを使えば1分以内にお望みのものが出来ますが、MP3でした。swfという前提を見落としていたために、こんな中途半端なアドバイスになりました。 すいません。
実際に試してないのでなんともてきとうですが。 画像の入っているムービークリップのインスタンス名をphoto_mcとする photo_mcの基点を「ど真ん中」とする テキストフィールドのインスタンス名をmsg_textとする テキストを画像の上においてみて場所を指定する。 msg_text._x = photo_mc._x; これで画像の上におかれるが中心より右にずれるので、 テキストフィールドの半分の長さ左にずらす msg_text._x = photo_mc._x - ( msg_text._width / 2 ); 試してませんが多分このくらいの泥臭さだと思います。 ちなみにParaFla使ったことないのでわかりません。 ActionScript2 で勝手に考えてます。 すいません
１を書いた者です。 Flashでないスライドショー たとえばWindowsであればWindowsムービーメーカー、Windowsフォトストーリーで作れます。 普通の動画編集ソフト(ユーリドビデオスタジオやプレミアなど）でも、画像を読み込み、トランシジョンやフィルター、エフェクトなど使えば普通にスライドショーにできます。 それからオンライン上で効果をつけてスライドショーを作って、タグを発行してくれるサイトもあります。 http://www.slide.com/ http://www.bubbleshare.com/
＃１ です。 > また、お時間のあるときにでも > flash5で作れるアナログ時計のスクリプトを > 教えて頂ければ幸いです。 ・Flash 5 では Date オブジェクトを使う ・Flash 5 では onClipEvent(enterFrame) という強い味方がある ・アナログ時計は回転させる 　↓ということから↓ Google検索 「onClipEvent(enterFrame) Date _rotation」 http://www.google.co.jp/search?hl=ja&q=onClipEve … _rotation の 前に付いている 「_」アンダースコア を取ると なぜか，Suzuka や Parafla! の時計の作り方が１番上くらいにヒットします。 Google検索 「onClipEvent(enterFrame) Date rotation」 http://www.google.co.jp/search?hl=ja&q=onClipEve … プログラムの検索は簡単です。 特に ActionScript のようなメジャーな言語はそこらじゅうに氾濫してますから， 上のように検索するとたくさん出てきます。 秒針だけがまわるというような簡単なもので良いので作成してみて， 携帯で動くかどうかを試されてはいかがでしょうか。 また， 動いても動かなくても Suzuka や ParaFla! のサイトも上に書いていますから， そのサンプルを使わせてもらえば，SWF4 時計がすぐに作成できるようにも思います。
＃６ です。 > _root.dispTime.text = h+":"+m+":"+s; > をvarから始まる形に変えるべきなのでしょうか。 それはしようにもできないでしょう。 var はその階層内で変数やオブジェクトを宣言するときに使う物です。 あえてするとするなら，あまり意味はありませんが， var dispTime:TextField; のようにテキストフィールド を テキストフィールドインスタンス として _root に宣言する場合でしょうか。 しかし，現物のテキストフィールドは手動で作成してあるのであまり使いません。 使うべきなのは（使うべきものでもありませんが，ActionScript2.0 に忠実に従った場合使うとするなら）， テキストフィールド の部分ではなくて，その前の now_date h や m や s だと思います。 now_date h m s は全体を通すと何のことかわかりますが，単独では何のことやらわかりません。 凝りたいとするなら，ここまでするかもしれません（あまりここまではしません）。 var dispTime:TextField; _root.onEnterFrame = function():Void { var now_date:Date = new Date(); var h:Number = now_date.getHours(); var m:Number = now_date.getMinutes(); var s:Number = now_date.getSeconds(); _root.dispTime.text = String(h)+":"+String(m)+":"+String(s); }; _root.onEnterFrame();
> ParaFlaでは:（コロン）が通用しないのでしょうか。 :（コロン）が通用しないと言うより， ActionScript2.0 以上が使えません。 ParaFla! で使えるのは基本的にActionScript1.0のみです。 （SWF4構文もActionScript1.0と呼ぶとするなら， "完全に" ActionScript1.0 のみ ということになります。 SWF4構文をActionScript1.0としないとするなら， "基本的に" ActionScript1.0 のみ ということになります。） :（コロン）は ActionScript2.0構文 の厳密な型指定と呼ばれるもので， 変数やオブジェクトの 型 を宣言する物です。 ちなみに ActionScript1.0 とか 2.0 とか言うのは文法です。 使用できる関数やメソッド（つまり単語）の使用範囲を示すものではありません。 ActionScript2.0の:（コロン）は， 現実問題，あってもなくてもどっちでも良い物ですから， その部分を削除して， var send_lv = new LoadVars(); にしても何の問題も起こりません。 厳密な型指定 をしておくと， 宣言した型以外のものが変数やオブジェクトに代入されようとしたり， 宣言した型のものが違う型のものとして使用された場合， "Adobe Flash では"，エラーが出ます。 それで，スクリプトの書き間違えや，変数やオブジェクトの誤使用を防ぐことができます。 つまり， バグ取り に便利であったり，スクリプトを書く本人の自覚につながるもので， 型 でエラーを出すようなしくみがないソフトであれば， :（コロン） はあてもなくても普通は大勢に影響しません。 > ParaFlaのActionSciptからcgiを呼び出す > （http通信）するにはどうしたらよいでしょうか？ これは色々なケースがあるので一概には言えません。 LoadVars.sendAndLoad()　のようなすごいものを使う場合もありますし， LoadVars.load()　だけでも十分な場合も多々あります。 getURL()　でもできます。 loadVariables()　でもできます。 書かれていらっしゃる， 「loadVars.sendAndLoad()メソッド。データ送受信」 のページのものでも :（コロン）以降 さえ取れば使用できると思います。
その特定のPCにデバッグプレイヤーを入れてみてはどうですか？ 参考URL：http://www.adobe.com/support/flashplayer/downloa …
例えばフレーム1などムービーの最初の画面にテキストフィールドを用意します。 テキストフィールド用意の仕方は， 左のツールパネルから 「A」 となっているテキストツールのボタンを押した状態にして， ステージ下のプロパティインスペクタの左の方から， 　[テキスト入力　ｖ] を選択し，プロパティインスペクタの中央上の辺りで， フォントの種類を， [_等幅] や [_ゴシック] や [_明朝] のような前にアンダースコアの入ったデバイスフォントを指定し， その右で，文字のポイント数を適当に見やすい数値に設定し， さらにその右で，フォントの色を見やすい色に設定します。 その他の設定は適当で良いですが， テキストフィールドだとわかりやすくするために， その下にある， 　[単一行　ｖ]　Ab　<>　□ この □ (テキストの周囲にボーダーを表示) ボタンを押した状態にして， ステージ上を適当にドラッグします。 これでテキスト入力用のテキストフィールドが用意できます。 上のようにしてテキスト入力のテキストフィールドを作成しましたら， ステージ下のプロパティインスペクタの左の中段， 　[　<インスタンス名>　] とグレー文字になっている部分で， そのテキストフィールドにインスタンス名を付けます。 インスタンス名は半角英数文字とアンダースコア (_)とドル記号 ($) を使用し， 最初の文字を半角英字かアンダースコア (_)かドル記号 ($)にしていたらたいてい何でもかまいません。 この説明では， input_txt というインスタンス名を付けることにしておきます。 そのテキストフィールド・インスタンス名「input_txt」の右横や下などに， 次の画面などに移動させるための 「スタート」ボタンもしくは「OK」ボタンを，ボタンシンボルのインスタンスで用意します。 ボタンの作成方法などは，図示ができないここでは説明しにくいので， お持ちの本やネット上のボタンの作成方法を参考にしてボタンを作成してください。 「ボタンを理解しよう！」 http://www.1art.jp/flash2/chapter/8/8.htm など。 ボタンインスタンスを作成できましたら， そのボタンを選択して，アクションパネルを表示させます。 そして次のようなスクリプト（例です）を書きます。 ---------------------------------------- // このボタンがクリックされたときに実行 on (release) { // 変数 user_name に input_txt の文字列を代入 user_name = input_txt.text; // 再生開始（たとえばの例） play(); } ---------------------------------------- これで， 変数「user_name」の値に「input_txt」に入力された文字列が代入されますから， テキストフィールド「input_txt」が消えても， 変数「user_name」を呼びだすことで色々と使うことができます。 ///////////////////////////////////////////////////////// 簡単な１つの例です。 _root（シーン1 などメインムービーのタイムライン） を 10フレーム にしたとします。 上のテキストフィールドとボタンを フレーム1 だけに置いておいて， それとは別のレイヤーを作成して ActionScript 専用のレイヤーにすると勝手に決めておきます。 その ActionScript 用のレイヤーの フレーム1 に， stop(); を書いてムービーを停止させておきます。 フレーム10にもキーフレームを作成して， そこに 「output_txt」 というインスタンス名のちょっと横長めのテキストフィールドを作成ます。 そして， ActionScript 用のレイヤーの フレーム10 に次のように書きます。 ---------------------------------------- stop(); output_txt.text = "ラッキー！"+user_name+"さんおめでとう。"; ---------------------------------------- タイムラインを図示すると次のような感じになるということです。 （ズレていると思いますが...） 　--- _root のタイムライン --------------------- 　　　　　　　　　　　　１　　　　　　　　10 　□　レイヤー　・・・|○　　　　　　[]|○| ←ActionScript 　□　レイヤー　・・・|●|○　　　 　[]|●| ←テキストフィールドなど 　---------------------------------------- そして，SWFをパブリッシュし， すぐに表示されるテキストフィールドに 「hisako1986」　と入力し， ボタンをクリックすると，フレーム10 のテキストフィールドには， 　[ラッキー！hisako1986さんおめでとう。　] が表示されます。 ※'86年は... 私が大学に入学した年だったかもしれません...。 　Flash など影も形もなくて PC98 や 88 にフロッピー突っこんでたかも。 　「近似圧縮したベクトルデータを画像としてモニタに表示させるんだ！」 　とか言ってプログラムを研究していた友だちがいて， 　作ったプログラムを20分くらい走らせて 　ベクトル線だけの絵をモニタに表示させてました。 　必死でプログラム作って20分もかけて表示させた絵は， 　出来損ないアヒルのガーコの輪郭線だけみたいなもの(涙)。 　「ベクトル画像なんか実用にならないな。」　と思ってましたが， 　あれよあれよと技術やPC能力が向上して10年後。 　'96年 初代 Flash が誕生。 　ベクトル画像がアニメーションするまでになりました。スゴイ。 　勝手な昔話すみません m(_ _"m)ペコリ。 　
＃１です。 > それ以外の階層ですと、絶対パスで指定しても > 外部ファイルは読み込まれませんでした。 > なぜなんでしょうね。 なぜなんでしょうねと言うか...， その下になぜか HTML のタグを書かれていらっしゃいますが， 一応 ＃１ で書いたことは理解できましたでしょうか？ Movable type のタグなどに付いては一切触れていません。 私が＃１で書いたのは HTML のタグのURLのことではなく， 共有オブジェクトを呼び出す方のFlashの， リンケージプロパティの， 「□ ランタイム共有用に読み込み」 のURLのことです。 ＃１で私が書いたことをもっと具体的に書きますよ。 外部ファイル の ライブラリ アセット の利用は， 一種の loadMovie みたいなものです。 SWF に 外部SWF を SWFごとロードするのが loadMovie， SWFに 外部SWF の ライブラリ中のシンボルをロードするのが ライブラリ アセット の読み込みです。 実際には loadMovie でのオブジェクトの扱われ方と， ライブラリ アセット の読み込みオブジェクトとは扱われ方が違う部分がありますから， 決して loadMovie と ライブラリアセットの読み込み は同じではありません。 しかし， 大括りで言うと，外部 SWF をロードするので同じようなものです。 その外部 SWF をロードするときのファイルパスが， 読み込む側の SWF からのパスではなく， 読み込む側の SWF を貼り付けた HTML からのパスになります。 例えばファイルの階層構造が次のようになっていたとします。 　任意のフォルダ 　　　├ main.html (aaa.swf を貼り付ける) 　　　└ flash (フォルダ) 　　　　　　├ aaa.swf (bbb.swfのアセットをロード) 　　　　　　└ bbb.swf (アセットを提供するソースSWF) 「aaa.swf」から「bbb.swf」のアセットを使用するとします。 「aaa.swf」＝ターゲット，「bbb.swf」＝ソース ということです。 その 「aaa.swf」 は１つ上の階層の 「main.html」 に表示されるものとします。 この場合， 「aaa.swf」のライブラリのシンボルのリンケージプロパティから ランタイム共有用に読み込むURLは， [ bbb.swf ] ではなく [ flash/bbb.swf ] になります。 SWFからのパスではなく，それを表示させているHTMLからのパスになるからです。 しかし，これ↑は一般的なサイトだから言えることです。 Movable type の場合は一般的なサイトと違って， あちこちに同じようなページができます。 ですから， [ flash/bbb.swf ] のように相対パスを定めることができません。 しかたがないので， [ http:// ～～/○○/flash/bbb.swf ] のような絶対パスを指定する必要があります。 （絶対パスにするとアップしない限り動作検証ができないことが難点ですが。) ということを ＃１ で書いたのです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > ほとんど問題なく読み込まれてるのですが、 > 幾つかのリンケージされたボタンがなぜか機能してません これは，上のこととは 全く別件 ですね。 問題は切り分けて考えてください。 この件は大きく分けて２つの質問内容にとることができます。 １ アセットを提供する側のボタンに設定したスクリプトが動作しない ２ アセットを読み込む側のボタンに設定したスクリプトが動作しない １ アセットを提供する側のボタンに設定したスクリプトが動作しない これは当然です。 on (release) { gotoAndPlay(2); } や， そのボタン.onRelease = function(){ gotoAndPlay(2); }; これらは， "インスタンス" に対して直接書いたり， "インスタンス" に対しフレームなどで定義するものです。 "シンボル" に対しては直接書いたり，フレームなどで定義することはできません。 ライブラリの "シンボル" を共有するのが ライブラリ アセット ですから， アセットを提供する側のボタンに設定したスクリプトが動作しないのは当然です。 ２ アセットを読み込む側のボタンに設定したスクリプトが動作しない 実際にやってみましたが， アセットを読み込む側のボタンに on (release) { gotoAndPlay(2); } などを書いてみても動作しませんね。 こういう階層にかかわるものでなく，もっと単純に， trace("あああ"); でも動作しません。 ボタンの共有はしたことがなかったので初めて気づきました。 ムービークリップの共有であれば， on (release) { ○○ } は動作します。 原因などはわかりません。 しかし，ボタンにインスタンス名を付けて， そのボタン.onRelease = function(){ gotoAndPlay(2); }; などは動作しましたよ。 このようにボタンに対して何かの動作を定義すればうまく行くと思います。
＃１です。 「オーバー」と「ダウン」のキーフレームにあるテキストも、選択可能な状態（” Ab ”ボタンが有効になっている、もしくは種類が”テキスト入力”に設定されている）になっていませんでしょうか？ ボタンシンボルは、マウスカーソルを合わせると「オーバー」のフレームに切り替わり、カーソルを外すと「アップ」のフレームに戻ります。 文字の部分にカーソルを合わせた時、「オーバー」のフレームにあるテキストフィールドが選択可能になっていると、文字の部分がヒット領域ではなくなるために、何もしていなくてもカーソルがボタンから外れたものと見なされて「アップ」のフレームに戻ってしまいます。 しかし、「アップ」のフレームでは文字の部分がヒット領域になっていますから、「アップ」に戻った途端に再び「オーバー」のフレームに切り替わります。 つまり、文字の部分にカーソルがある間は「アップ」と「オーバー」のフレームが勝手に交互に切り替わり続け、結果的に文字がせわしなく点滅して見えることになります。 ちなみに、文字以外の部分は「オーバー」や「ダウン」のフレームでも変わらずにヒット領域として認識されるので、この現象は起こりません。 現状では「ダウン」のフレームはなかなか表示されないと思いますが、「ダウン」についても同様です。 「オーバー」と「ダウン」のフレームにあるテキストの設定を、確認してみてください。 ----------------------------------------------------------- テキストにリンクを設定する方法は２つあります。 １つは、「プロパティ」パネルにある” URL リンク”（パネルの下端にある、鎖のアイコンが付いている項目）に、表示したいページの URL を記述する方法です。 この方法は、文字の線がない余白の部分を含めたテキストフィールド全体がボタンのようになるため、わざわざボタンシンボルにしなくてもテキストを使ったリンクを簡単に作成できる利点があります。 ただし、マウスカーソルが重なった時に色を変えたり効果音を鳴らすなど、よく見かける Flash らしい演出は何もできません。 もう１つは今回の作品のように、ボタンシンボルのキーフレームにテキストを入れて、”文字が書かれているボタン”という形にする方法です。 ボタンシンボルでは様々な演出ができますが、リンクボタンにするには、プロパティで設定するのではなく ActionScript を使います。 文字以外の部分は正常にリンクになっているのでしたら、ボタンをリンクにするスクリプトについてはとりあえず問題がないかと思います。 ただ、ボタンシンボル内のテキストフィールドにリンクが設定されている（鎖のアイコンの項目に URL が記述されている）と、スクリプトによるリンクが上手くいかなかったり、「オーバー」や「ダウン」のフレームに切り替わらなくなることがあります。 ムービーやシンボルの編集画面で、文字の下に点線の下線が表示される時は、そのテキストフィールドにはリンクが設定されています。 「アップ」「オーバー」「ダウン」全てのテキストの設定を見て、どれか１つでもリンクボタンになっているようでしたら、「プロパティ」パネルにある URL の記述を削除してください。
できません。 FlashMX2004を使ってFlashMX形式に保存し直すことはできます。
http://popura.s6.xrea.com/flash_script.html このサイトの ・カーソルの変更 というところにサンプルがあります。 シンプルで解りやすいかと思います。 参考URL：http://popura.s6.xrea.com/flash_script.html
どちらもオススメできない。 DREAMWEAVERはHTML編集をするもので FLASHはページ内の<object>ないし<embed>の中身を作るものだから。 PHPの用途から近いのはDREAMWEAVERで概略的にHTMLを吐いてそれをPHPでどうこうするものを作る事じゃないかな。
情報ウィンドウなどに統合させてサイズを強引に変更するか、 [ウィンドウ]→[ワークスペース]→[デフォルト]でヘルプウィンドウのサイズを初期化してみてはいかがですか?
CS3 は使用していないので，実際にできるかどうか， また， 下に書くことの操作方法が若干違っているかもしれませんが， できるであろうと推測される方法を書きます。 MC_A のアルファを 0 にする（変化させる）とともに， MC_A を選択して下のプロパティパネルの「フィルタ」タブを選択し， ＋ボタンをクリックして「カラー調節」を選択。 明度 や コントラスト や 彩度 などの数値はさわらずそのままの状態（0のままの状態）で， つまり， フィルタをかけると思いきや，実際にはフィルタの数値などは変えないという状態で， パブリッシュすると文字にもアルファがかかると思います。 （数値は変えなくても良いという意味で，変えてもかまいません。 数値は変えても変えなくてもどちらでも良いのでフィルタをかけるということが肝心です。） 結局， FlashPlayer 中に埋め込まれていない文字（デバイスフォント）は， FlashPlayer中に画像データ（イメージ）として存在しません。 デバイス（PCなどの機械）のフォントデータを参照してFlashPlayer上に表示させているだけです。 FlashPlayer中に画像データ（イメージ）として存在しないものにアルファのような処理ができないようです。 しかし， なにがしかのフィルタをかけると， > データを特定の方法でフィルタするアルゴリズムを使用して > オブジェクトのイメージデータを渡すことから、フィルタと呼ばれます。 （↑ヘルプより引用） ということで， 埋め込まれていないフォントデータに特定の方法でフィルタするアルゴリズムが適用されて， フォントデータがイメージデータとしてFlashPlayer内に残るようです。 内部のアルゴリズムの詳しい所まではわかりませんが， とにかくフィルタをかけるとデバイスのフォントがFlashPlayer中で画像データとして存在するようになるのでアルファがかかるようです。
（以下 MX2008 ではなく MX2004 だと解釈して回答します。） > 最上段のムービークリップに隠れて見えない > 他のムービークリップやボタンのリンクが出来て > しまいます（指ポインタが出る） これには色々な対処法があります。 一般的には下に隠れて見えないボタンの enabled プロパティ（ボタン能力プロパティ） を false にするのが普通かもしれません。 仮に， 下に隠れて見えないボタンが _root にあって， インスタンス名が 「_btn0」～「_btn2」 であったとすると， 最上段のムービークリップを出没させるとともにそのタイミングで， _root._btn0.enabled = false; _root._btn1.enabled = false; _root._btn2.enabled = false; を実行させるとか， 上のスクリプトの書き方を変えて， // 変数 i を 0～2 で変動させながらループ for (i=0; i<=2; i++) { // ボタン _btn0～1 のボタン能力をfalse(無効)にする _root["_btn"+i].enabled = false; } にするとかです。 ボタンが完全に隠れて見えないのでしたら見えなくて良いわけですから， enabled （ボタン能力）だけをfalseにするのではなくて， _visible プロパティ（可視プロパティ)をfalse(不可視）にしても良いと思います。 _root._btn0._visible = false; _root._btn1._visible = false; _root._btn2._visible = false; または， // 変数 i を 0～2 で変動させながらループ for (i=0; i<=2; i++) { // ボタン _btn0～1 の可視不可視をfalse(不可視)にする _root["_btn"+i]._visible = false; } などです。 また，ご質問の意図とは違うと思いますが， 単に「指ポインタが出る」ことだけが困る場合は， _root._btn0.useHandCursor = false; _root._btn1.useHandCursor = false; _root._btn2.useHandCursor = false; のように useHandCursor プロパティを false にすることによって， ハンドカーソル になるのだけを阻止する方法もあります。 ただし， これは ハンドカーソル にならないだけでボタンのスクリプトは機能します。 ご質問で意図するものとは違うと思いますが参考までにという意味で書きました。 ※これは例えば隠しリンクボタン（例：脱出ゲーム）などに使用したり， 　on(rollOut) を単に検知したいだけのときなどに使うものです。 最初に 「これには色々な対処法があります。」 と書きましたが， 上のように考えるとその方法はバリエーションまで含めるとたくさん見つかると思います。 　拡大地図のムービークリップを表示させるタイミングで， 　_root をフレーム2に gootoAndStop(2) させて， 　そのフレーム2には， 　隠れて見えなくなるボタンを配置しないようにする。 　拡大地図のムービークリップを表示させるタイミングで， 　隠れて見えなくなるボタンの座標を， 　_root._btn0._x = -100000; 　のようなとんでもない座標に移動させる。 　隠れて見えなくなるボタンをムービークリップに入れて， 　拡大地図のムービークリップを表示させるタイミングで， 　見えなくなるボタン入りムービークリップごと 　removeMovieClip(ムービークリップ削除)をする。 　(※だだしその前に深度0以上にしておく必要あり。) 　拡大地図のムービークリップの一番下のレイヤーに 　透明な大きなボタンでも作成する。 　(上にあるボタンほど優先で下のボタンが効かなくなる性質を利用) 　(ただしデメリットは拡大地図上で常に指ポインタが出ること) 　(不恰好で原始的な方法のようだが使用されている物はよく見る) 　などなど…。 方法やそのバリエーションはたくさんありますが， その場に応じて対処法は変えます。 ////////////////////////////////////////////////////////// 最初に書きました， 　「下に隠れて見えないボタンの 　enabled プロパティ（ボタン能力プロパティ） を false にする」 という方法の具体的な例を書きます。 ムービーの フレーム1 の階層構造が次のような感じになっているとします。 以降の MC はムービークリップの略です。 また enlarged_map_mc や _btn0 や congested_area_mc は ボタンやMCそれぞれのインスタンス名です。 　_root 　　├ enlarged_map_mc（拡大地図MC） 　　│　　├ _btn0（ボタン） 　　│　　├ _btn1（ボタン） 　　│　　├ _btn2（ボタン） 　　│　　├ _btn3（ボタン） 　　│　　└ ---地図などの画像--- 　　│ 　　├ congested_area_mc(密集地域MC) 　　│ (↑密集地域上に配置する透明な塗りなどのボタンかMC) 　　│ (↑つまり拡大地図を表示させるためのボタンまたはMC) 　　│ 　　├ _btn0（ボタン） 　　├ _btn1（ボタン） 　　├ _btn2（ボタン） 　　└ ---地図などの画像--- _root の フレーム1 に書くスクリプト例↓。 ------------------------------------------ // 拡大地図MCの可視プロパティをfalse(不可視)にしておく _root.enlarged_map_mc._visible = false; // 密集地域MC をクリックしたときの動作を定義 _root.congested_area_mc.onRelease = function() { // // 拡大地図MCの可視プロパティをtrue(可視)にする _root.enlarged_map_mc._visible = true; // // 変数 i を 0～2 で変動させながらループ for (i=0; i<=2; i++) { // ボタン _btn0～1 のボタン能力をfalse(無効)にする _root["_btn"+i].enabled = false; } // // この(密集地域MCの)ボタン能力をfalse(無効)にする this.enabled = false; }; // 変数 i を 0～3 で変動させながらループ for (i=0; i<=3; i++) { // // 拡大地図MC内の _btn0～3 をクリックしたときの動作を定義 _root.enlarged_map_mc["_btn"+i].onRelease = function() { // // 変数 i を 0～2 で変動させながらループ for (i=0; i<=2; i++) { // ボタン _btn0～1 のボタン能力をtrue(有効)にする _root["_btn"+i].enabled = true; } // // 密集地域MCのボタン能力をtrue(有効)にする _root.congested_area_mc.enabled = true; // // 親(拡大地図MC)の可視プロパティをfalse(不可視)にする this._parent._visible = false; }; } ------------------------------------------ 　
あまり自信なしですが、 gotoAndPlay(6)はボタンに対してのメソッドなんじゃないでしょうか。 つまりボタンを押すと「ボタンの6フレーム目に行って再生せよ」と命令している気がします。 詳細なムービークリップの構造がわからないのでなんともいえないですが、 MC.gotoAndPlay(6 )とかそんな感じのことをやってみてはいかがでしょう？ てきとうですいません。
＃１です。 > Internet Explorerから > install_flash_player_active_x.exeを実行しましたが、 Internet Explorerから EXE を実行してはダメでしょう。 install_flash_player_active_x.exe を PCのローカルディスクにダウンロード＆保存して， その EXE をダブルクリックで実行するなどしないと， Flash Player に限らずたいていの場合途中で何かのセキュリティにとって阻まれることが多いですし， なおかつ FlashPlayer は IE のプラグインなのですから， サイトにも書いている通り，IE を終了させてからインストールすべきだと思います。 その前にアンインストールするときもそうです。 PlashPlayer が動作していた場合，FlashPlayer がアンインストールできませんから， すなわち，IE を閉じておく必要があります。 解決するかどうかはわかりませんが， 以上，思ったことをそのまま書いてみました。
こんにちは。マヒマヒです。 どんなオブジェクトなのか分からないので動作を確認してませんが、一度これを試してみてはどうでしょうか？ on (release) { getURL("http://www.test.com", "_blank", "GET"); } これでうまくいかないならまた返信します。。
ご希望のものとは微妙に違うかもしれませんが＾＾； http://www.condo.fromc.jp/flash/memo/index.html こちらのスライド式メニューなんていかがでしょう？ おそらくonReleaseをonRollOverに変換して 少しいじれば同じものが作れると思います。 asは1.0でも2.0でもいけます。 3.0でもいけると思いますが 当方はわかりません＾＾； 上記サンプルはおそらく1.0です。
おそらく、onEnterFrame か onClipEvent(enterFrame) を利用し、Date オブジェクトで時刻を常時取得して表示していると思います。 Date オブジェクトでは秒も一緒に分かるはずですから、例えば秒が偶数だった時にはコロン（” ： ”）のムービークリップを非表示にし、奇数の時だけ表示する、としてはいかがでしょう。 偶数か奇数かは、秒を 2 で除算した余りを見ると分かります。 スクリプトでは、% 演算子で剰余を求めることができます。 お使いの Flash のバージョンや、表示する部分をどのように作っていらっしゃるかがよく分かりませんので、さしあたって、次のような構成のムービークリップシンボルのインスタンスがステージにあるものとして考えます。 　時計のムービークリップ 　　├ 時間を表示するテキストフィールド 　　├ 分を表示するテキストフィールド 　　└ コロンのムービークリップ（インスタンス名” colon_clip ”） 偶数秒の時にコロンを非表示に、奇数秒の時にコロンを表示するスクリプトは、大体、次のようになります。 このスクリプトは、時計のムービークリップの”インスタンスに”記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） /********************************************************/ 　onClipEvent(enterFrame) 　{ 　　//現在の時刻を取得 　　now_time = new Date(); 　　//時間と分および秒を取得 　　hour = now_time.getHours(); 　　minute = now_time.getMinutes(); 　　sec = now_time.getSeconds(); 　　//時刻を表示 　　/* 　　　Flash Player 6 以上の場合は、 　　　ここに時刻をダイナミックテキストに出力するスクリプトを書く 　　*/ 　　//秒が偶数の時にコロンを非表示に、奇数の時に表示する 　　colon_clip._visible = Boolean( sec % 2 ); 　} /********************************************************/ 上記のスクリプトでは、変数 hour と minute に時間と分が入ります。 Flash Player 5 でパブリッシュする場合は、テキストフィールドに表示する変数にこれらの変数を指定して表示してください。 Flash Player 6 以降は、テキストフィールドを制御する TextField オブジェクトが持っている” text ”というプロパティを書き換えることでテキストフィールドに表示する内容を変更します。 例えば変数 hour の値を表示するには、テキストフィールドにインスタンス名を付けて、 　インスタンス名.text = hour; というように書きます。 Flash Player 5 と同様にテキストフィールドに変数名を指定しても問題なく動作しますが、TextField オブジェクトが登場した Flash Player 6 以降は、変数名を指定して表示する方法は非推奨になりました。 ********************************** 細かい表示については作品に合わせて対応していただくとして、考え方のポイントは、秒を取得し、これが偶数か奇数かによってコロンのムービークリップの表示・非表示を切り替えることです。 上記のスクリプトでは、 　//秒が偶数の時にコロンを非表示に、奇数の時に表示する 　colon_clip._visible = Boolean( sec % 2 ); ↑この部分が、今回の肝になります。 取得した秒は、変数 sec に入ります。 sec % 2 で偶数か奇数かを判断し、この結果を Boolean というアクションでブール値（ true または false ）に変換して、ムービークリップの表示 / 非表示を決める _visible プロパティに設定します。 sec % 2 の計算結果は、sec の値が偶数の時は 0 、奇数ならば 1 です。 つまり、sec の値を同時に表示してみると分かりますが、秒が奇数の時にだけコロンのムービークリップ” colon_clip ”が表示されます。 実際はフレームレートの関係で微妙にズレることがありますけれど、人間の目では分からない程度です。 作例とは逆に、偶数の時に表示・奇数の時に非表示にしたい場合は 　colon_clip._visible = ! Boolean( sec % 2 ); このように変更してください。 今回の本題ではないので詳しく触れませんが。 変数の値を表示したりコロンのムービークリップに指示を出す時は、ターゲットパスの誤りにご注意ください。
●Pingの大き目の画像を読み込んでから縮小する。 （１５０％以上のサイズがいいでしょう。） ●jpgで傾いた画像を読み込んで分解、選択ツールオプションの 自動選択で背景を選択。境界は消しゴムで慎重に削除 完成したものをライブラリに登録。（こちらも大きな画像で作業） 作業にはペンタブレットがあると、よりなめらかな画像が出来ます。 四隅がギザギザというのは確認できませんでしたが 私がやるとすればこのどちらかだと思います。 フラッシュでは拡大表示で作業しているのでは？ １００％サイズで確認してみるといがいと荒れてないと思いますよ。 完成したデータ見る人は１００％で見るのですからそれでＯＫでは？
kurobon619さんがお持ちの環境で何ができるのか把握できないので （Flashの開発環境のバージョンが分かりませんので） Adobe社の開発環境がインストール済みでかつ、 Actionscript3.0開発者向けの回答になってしまいますが、 http://theflashblog.com/?p=293 からダウンロードできるflaファイルが参考になるかと思います 基本的にはActionscript3.0の3Dライブラリ「Papervision3d」を利用する物です 参考URL：http://theflashblog.com/?p=293
NO1追加 失礼しました。 （2）の次に「Creative Suite 3 各種ベータ版（Photoshop CS3 ベータなど）がインストールされている場合、アンインストーラを使用してベータ版をアンインストールする必要があります。」を削除漏れでした。 （7）と（2）を入れ替えた際にミスしました。 ＜インターネットをしてもいないのに『次のアプリケーションを終了してください』とインターネットエクスプローラーが表示され、インストールができません＞とあるため、インターネットエクスプローラーが関係がある可能性と思い順番を変えたためです。申し訳けありません。
No1さんのとおり ＭＳＰゴシックとなっているところを「_等幅」フォントに切り替えると良いと思います。 (フォント一覧の上の方にあります。) なお、質問にある「ＭＳＰゴシック」を選んでレンダリング方法が 「デバイスフォントの使用」という設定は、 プレイヤー側にも同じフォントが入っていないと意味がありません。 携帯には多数のフォントを入れることができません。そこで「_等幅」といった設定を使うのです。 参考：「フォントのアウトラインおよびデバイスフォントについて」 参考URL：http://livedocs.macromedia.com/flash/8_jp/main/0 …
例えば， _root に複数のボタンやムービークリップがあったとして， _root 階層にあるもの全ての enabled プロパティを false にすれば それらのボタン機能が無効になります。 逆に true に戻せばボタン機能が有効になります。 ボタンに書くスクリプト例 ----------------------------- on (release) { // _root の comment_mc を再生(単なる例:実際は何でも良い) _root.comment_mc.play(); // _root にあるものを走査 for (target in _root) { // 走査したものの enabled を false にする _root[target].enabled = false; } } ----------------------------- 内部がアニメーションするムービークリップ（コメント）の 最終フレームのキーフレームに書くスクリプト例 ----------------------------- for (target in _root) { _root[target].enabled = true; } ----------------------------- 　
********************だけ表示したい場合は下記のようにしてください。 for (var str:String in myVars) { name_str.appendText(myVars[str]); }
全く同じと思われる風に（コピペ）作ってみましたが、きちんと動きました。 ボタンインスタンスのつづりや、本当にボタンに名前が付いているか確認をしたほうがいいかもしれません。なぜなら私もよくおかしーなーと思っていたら、結局インスタンス名を入れ忘れていることが多いからです。
各社差を無くそうと設計してますが、残念ながら違いはでます。 キャリア毎、さらには同じキャリアでも機種毎にも違いがあるものもあります。 具体的な内容については、機種仕様書を参照し、機種依存内容を確認する必要があります。
＃１です。 > １．赤い矢印の背景透過gifをｐｈｏｔｏｓｈｏｐＣＳで作成しました。 それは想定外のことでした。 普通はそんなことしないと思いますし、 書かれないとわかるものでもありません。 また、 "Flash の背景が透明にならない" のではなくて、 "読み込んだGIFの背景が透明にならない" だけですね。 他もやってみましたが、 GIFだけがならないのではなくて、 PNGでも他でも、ビットマップ画像を読み込んだ場合、 そのビットマップ画像の透過は FlashのGIFパブリッシュ時には有効にならないようです。 アルファについてはどうしようもありません。 GIFは元から半透明をサポートしたファイルではないので、 　半透明赤い色→濃い赤い色と変化する矢印 はできません。 　薄い赤い色→濃い赤い色と変化する矢印 などになります。 背景透明に関しては、解決策は２つほどあります。 １ GIFを使わずFlashで絵（矢印）を描く ２ GIFを分解して矢印の輪郭を手動トレースする １ GIFを使わずFlashで絵（矢印）を描く これはそのままですね。 Flashで矢印を書いてしまえば良いだけということです。 「GIFを作成してそれを読み込んでGIFをパブリッシュする」 というFlashらしからぬ妙なことをする前に、 普通は誰でも先に考え付く方法だと思います。 ２ GIFを分解して矢印の輪郭を手動トレースする 読み込んだGIFを選択して （シンボル化してあったらそのシンボルの中のGIFを選択して）、 [修正]→[分解]します。 これで、 「四角いシェイプの塗りの色が読み込んだGIFになったもの」 ができます。 これは正確には「四角いシェイプ（四角いベクトル画像）」です。 四角いシェイプの、塗りの色が通常の赤や黄ではなくGIF画像塗りになったものです。 [修正]→[分解]で、ビットマップ画像（GIFなど）がベクトル画像になるのではありませんよ。 ビットマップ画像をベクトル画像にするには、 ビットマップ画像を選択→[修正]→[ビットマップのトレース] です。 [修正]→[分解]では、ビットマップ画像がベクトル画像になるのではなく、 ベクトル画像（四角）の塗りの色がビットマップ画像(GIF)になるだけです。 仮に矢印が左斜め上向きの矢印であったとします。 　　 赫は赤色部分のつもり 　　 ↓ 　赫赫赫赫赫赫赫赫□□ 　赫赫赫赫赫赫赫□□□ 　赫赫赫赫赫赫□□□□ 　赫赫赫赫赫□□□□□ 　赫赫赫赫赫赫□□□□ 　赫赫赫□赫赫赫□□□ 　赫赫□□□赫赫赫□□ 　赫□□□□□赫赫赫□ 　□□□□□□□赫赫赫 　□□□□□□□□赫赫 　　↑ 　　□は透明部分のつもり GIFを[修正]→[分解]したものの、 赫と透明の間の輪郭に線ツールで線を引きます 　赫赫赫赫赫赫赫赫■□ 　赫赫赫赫赫赫赫■□□ 　赫赫赫赫赫赫■□□□ 　赫赫赫赫赫■□□□□ 　赫赫赫赫赫赫■□□□ 　赫赫赫■赫赫赫■□□ 　赫赫■□■赫赫赫■□ 　赫■□□□■赫赫赫■ 　■□□□□□■赫赫赫 　□□□□□□□■赫赫 　　 ■は線のつもり↑ Flash は面(塗り)に違う色の面(塗り)を重ねて面を切ることやくり抜くことができます。 また 線で面を切ることも、線で線を切ることもできます。 「赫」と「□」との間に面を区切るような線を引けば、 「赫」の部分と「□」の部分を切りわけることができます。 ベクタ（ドロー）画像の作成ソフトでありながら、 こういうビットマップ画像を作成するソフト的な、 自由奔放で手軽な描画方法ができるところが、 Flash愛用イラストレーターから支持される理由のうちの１つになっています。 （あと、かなり昔のバージョン（Flashの前身スマートスケッチから）ペンタブ対応である点も支持される理由の１つです。） この切りわけた透明部分を選択して、「Delete」キーなどで削除します。 　赫赫赫赫赫赫赫赫■× 　赫赫赫赫赫赫赫■×× 　赫赫赫赫赫赫■××× 　赫赫赫赫赫■×××× 　赫赫赫赫赫赫■××× 　赫赫赫■赫赫赫■×× 　赫赫■×■赫赫赫■× 　赫■×××■赫赫赫■ 　■×××××■赫赫赫 　×××××××■赫赫 　　　↑ 　　透明部分を選択＆削除 最後に線を消せば、 赤い塗りの部分だけか残った矢印形シェイプになります。 　赫赫赫赫赫赫赫赫×× 　赫赫赫赫赫赫赫××× 　赫赫赫赫赫赫×××× 　赫赫赫赫赫××××× 　赫赫赫赫赫赫×××× 　赫赫赫×赫赫赫××× 　赫赫×××赫赫赫×× 　赫×××××赫赫赫× 　×××××××赫赫赫 　××××××××赫赫 これでパブリッシュします。 ※しかし、 　 この ２ の手動トレースの方法を使うぐらいでしたら、 　 最初から １ のFlashで矢印を描く方法を取った方が 　 楽にできるとは思います。 ※[修正]→[ビットマップのトレース] は 　 別の用途で使うものですし、 　 綺麗に行かせるためには結構苦労します。 　 [修正]→[ビットマップのトレース] を苦辛して 　 何度も設定し直してベクトル化するくらいでしたら 　 上の ２ の手動トレースの方法の方が 　 早くで楽にできると思います。 　 （この [ビットマップのトレース] も 　　昔のバージョンFlash3くらいからある機能です。） Flashは、 元は 「超ペイント感覚ドローソフト」 と銘打って販売されたドロー画像作成ソフトです。 後に、 その描いたドロー画像をアニメーションさせるソフトになって、Flashの登場となります。 そしてムービークリップとかが出てきて、 変数や外部と通信するスクリプトが導入されて、 マルチメディアコンテンツや様々なデバイスをサポートするようになって現在に至ります。 今は総合デパートのようなソフトですが、Flashの本業は老舗のお絵かきソフトです。 GIFを他のソフトで作成するくらいでしたら、 よろしければ最初から Flash で色々描いてみてはいかがでしょうか。 ものすごくドロー画が描きやすいソフトだと思います。 ※Flash MX から、 　 Flashの根幹であるお絵描き機能が軽視されたのか 　 デフォルトのステージの面積がやたら小さくなりました。 　 しかし Flash 5 まではステージの広いこと広いこと， 　 「絵描く以外に何するん？」 という感じのソフトでした。 　 左に細い縦長のお絵描きツールパネルがあって 　 上に横長のタイムラインがあるだけで他はステージ。 　 MX 以降はステージの面積が小さいので 　 描きにくいかもしれませんが 　 他のパネルを隠すなどして、 　 ステージを広げれば広くはなります。 　 （旧スマートスケッチの魂はそのスペースに存在します。）
会員のパラメタ付URL...セキュリティ的に怖いですね
携帯用Flashと書かれましても FlashLite のバージョンがわかりません。 バージョンによって答えは変わると思います(この場合も完璧に変わります)。 on(keyPress"<enter>") を使われていらっしゃるところから見て， 勝手に，FlashLite1.0 または 1.1 のご質問だと決めて， その FlashLite1.0 または 1.1 用SWFをパブリッシュする場合を中心に書きます。 それと， >※ ○○○は３桁の数字がランダムで入ります。 これも， 本当に3桁のランダムな数でよろしいのでしょうか。 よくわからないので，３つの場合について回答します。 ========================================== ◎ 本当に3桁のランダムな数を代入する場合 本当に3桁のランダムな数は， 100以上 999未満 の数になるので， random関数 を使って， ボタンのスクリプトを次のようにすれば良いと思います。 ---------------------------------- on (keyPress "<Enter>") { getURL("http://●●●?rmd=" add (100+random(900))); } ---------------------------------- random関数 と Mathクラスのrandomメソッドとは違います。 例えば， random(5) は 0～4 の５つの整数からランダムな値を返します。 今の(FlashLite2.0以上の)ActionScriptでは Math.floor(Math.random()*5) と同じ意味になります。 random(10) （今の Math.floor(Math.random()*10) ） だと 0～9 の10個の整数からランダムな値を返します。 したがって， 10 + random(10) （今の 10+Math.floor(Math.random()*10) ） では 10～19 の10個の整数からランダムな値を返します。 つまり， 100+random(900) （今の 100+Math.floor(Math.random()*900) ） だと 100～999 の900個の整数からランダムな値を返すことになります。 add は 文字列連結演算子です。 1 + 5 は 6 になりますが， 1 add 5 は "15" になります。 数値加算演算子 と 文字列連結演算子 が分かれているのは結構便利なことが多いです。 今の ActionScript では， 数値加算も文字列連結も区別無く，同じ 「+」 しかないので不便な場合も少しあります。 ========================================== ◎ ランダムな3つの数字を代入する場合 上のものは3桁の数ですから「12」や「5」や「0」などは含みません。 「012」や「005」や「000」など，そういうものも含む場合です。 この場合， ボタンのスクリプトを次のようにすれば良いと思います。 ---------------------------------- on (keyPress "<Enter>") { rand = random(1000); if (rand<=9) { rand = "00" add rand; } else if (rand<=99) { rand = "0" add rand; } getURL("http://●●●?rmd=" add rand); } ---------------------------------- ========================================== ◎ 3桁のランダムな数が選択肢になっている場合 この場合は，例えば， 「007」と「110」と「119」と「777」と「999」という3桁の数があったとして， この中から ランダムにどれかを代入 する場合です。 まず， ボタンが存在するフレーム（_root の フレーム1 など）に， 次のような， 「文字列+連番」の変数名とその値のデータを用意しておきます。 ----------------- para0 = "007"; para1 = "110"; para2 = "119"; para3 = "777"; para4 = "999"; ----------------- そして random関数 で，上の場合 0～4 のランダムな数を取得して， eval関数 でその変数にアクセスするのが一般的です。 ------------------------------------- on (keyPress "<Enter>") { getURL("http://●●●?rmd=" add eval("para" add random(5))); } ------------------------------------- eval関数は今でも（FlashLite2.0以上でも）使えますが，あまり使いません。 また，eval云々の前に， 変数をダラダラ並べるより配列を使うと思います。 さらに， Enter キーが押されることとは全く無関係なボタンを作成するという変なこともないと思います。 これらのことを考えると， 今の(FlashLite2.0以上の)ActionScriptでは， ボタンを作成せずにフレームに次のように書くと思います。 ------------------------------------- // 配列 para の作成 var para:Array = new Array(); para[0] = "007"; para[1] = "110"; para[2] = "119"; para[3] = "777"; para[4] = "999"; // キー監視用にオブジェクトを作成 var myListener:Object = new Object(); // 何かキーが押されたときの動作を定義 myListener.onKeyDown = function() { // もし押されたキーが Enter であれば if (Key.getCode() == Key.ENTER) { trace("http://●●●?rmd="+para[Math.floor(Math.random()*5)]); } }; // オブジェクトをKeyクラスのリスナーとして登録 Key.addListener(myListener); -------------------------------------- ※注意 このスクリプトの場合， FlashLite2.0 以上用のSWFをパブリッシュする設定にするだけでなく， ActionScriptのバージョンも 2.0 に指定してパブリッシュする必要があります。 まだ「場合」が出てきそうな気もしますが， FlashLite1.0 または 1.1 を中心に， FlashLite2.0以上の場合をまじえながら， ３つの場合を回答してみました。 　
var Add:Array = []; Add[1] = "http://address1.php"; Add[2] = "http://address2.php"; Add[3] = "http://address3.php"; Add[4] = "http://address4.php"; Add[5] = "http://address5.php"; function onClickButton(e:MouseEvent) :void { var selectURL:URLRequest = new URLRequest(Add[e.target.name.split("button")[1]]); navigateToURL(selectURL,"_self"); } for (var i:int=1;i<6;i++) { this["button"+i].addEventListener(MouseEvent.CLICK, onClickButton); }
話が込み入ってますね。 話が 完全にグチャグチャに見えます...（グチャグチャです）。 ご質問を２等分すると， 半分は結構まともに普通の疑問で， 個人的に私がさっき回答した質問， 「AS2 for文内のfunctionがうまくいきません」 http://okwave.jp/qa4160937.html と同じです。 "for文実行のとき" に変数 i は， 0→1→2→3→…→99 と変動します。 したがって for文実行終了後に i は 99 になっています。 …時間は流れ… それからしばらくして（プログラムの流れから言うとずっと後に）， ボタンがクリックされます。 そのとき，i は当然 99 ですから， どのボタンをクリックしても， _root.myhoge = _root.hoge[i]; つまり， _root.myhoge = _root.hoge[99]; が実行されます。 for (var i:Number = 0; i <= 99; i++) { _root["a"+i].onRelease = function() { _root.myhoge = _root.hoge[i]; }; } 　↓変更↓ for (var i:Number = 0; i <= 99; i++) { _root["a"+i].i = i; _root["a"+i].onRelease = function() { _root.myhoge = _root.hoge[this.i]; }; } のようにすると対処できると思います。 しかし… ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > 変数に配列の値を代入することに失敗してしまいます。 　↑全然違うことですよ↓ > ダイナミックテキストの変数名を　myhoge　にする。 なぜダイナミックテキストの変数名を変えなければならないのかもわかりませんし， そもそもダイナミックテキストに変数名を付けること自体がFlashで非推奨なことです。 ダイナミックテキストに変数名を付けるのは， Flash5 までのことで，FlashMX以降はンスタンス名を付けます。 そして， そのインスタンス名のテキストフィールドに対して， 　テキストフィールドインスタンス名.text = ○○; のようにして， テキストフィールドに何某かの文字列などを表示させるのです。 したがって， 上のスクリプトを書き替えた場合， 「myhoge」 というインスタンス名をテキストフィールドに付けて， _root["a"+i].onRelease = function() { _root.myhoge = _root.hoge[this.i]; }; 　↓変更↓ _root["a"+i].onRelease = function() { _root.myhoge.text = _root.hoge[this.i]; }; とするのです。 ～・～・～・～・～・～・～・～・～・～・～ 仮に（超仮り的で想像も付かない変な場合）， テキストフィールドの変数名を変えることがあるかもしれませんが， その場合もテキストフィールドにインスタンス名は必要です。 そして， そのテキストフィールドインスタンスに対して， variable (TextField.variable プロパティ) を与えます。 http://livedocs.adobe.com/flash/8_jp/main/000027 … すると， そのテキストフィールドインスタンスの変数名を変える（与える）ことができます。 その場合，とりあえず， 「myhoge」 というインスタンス名をテキストフィールドに付けて， _root["a"+i].onRelease = function() { _root.myhoge = _root.hoge[this.i]; }; 　↓変更↓ _root["a"+i].onRelease = function() { _root.myhoge.variable = _root.hoge[this.i]; }; とすれば良いわけですが...が...ががが....， しかし！ かなり変なのがわかりますか？ もし上記のようにすると， テキストフィールドの "変数名" が， 「０番のボタンを押したときのテキスト」 となるのですよ。 そんな変数名は付けてはいけません。 というわけで，最初にもどって， 話が 完全にグチャグチャに見えます...（グチャグチャです）。 ◎参考URL 「テキストフィールドのインスタンス名と変数名について」 http://livedocs.adobe.com/flash/9.0_jp/main/0000 … > プロパティインスペクタの [変数] テキストボックスで、 > 変数名をダイナミックテキストフィールドや > テキスト入力フィールドに割り当てることができます。 > これによって、変数に値を割り当てることができます。 > これは、旧バージョンの Flash Player (Flash Player 4 など) 用の > アプリケーションを作成するときに使用する可能性のある > 非推奨の機能です。 　~~~~~~~~~~~~~~~ > それよりも新しいプレーヤーを対象にするときは、 > インスタンス名と ActionScript を使用して、 　~~~~~~~~~~~~~~ > テキストフィールドのテキストをターゲットにする必要があります。
３.０が扱えないので確認出来ませんでしたが、 .x → ._x では駄目ですか？ 見当違いでしたら御免なさい。
＃１です。 >上から順番に実行される、とばかり思っていました。 上から順番に実行されますよ。 それは間違いありません。 ただ， "ロード完了" は， サーバにお伺いを立てて， ファイルがあるかないかをとりあえず探してもらって， あったならそのデータをローカルに送信してもらって， 電話回線や光やケーブルTVやそんなものを使ってデータを受け取って， 全データがとどいて "ロード完了" です。 そういう手続きやデータ送信の後に， LoadVars.onLoad が「データを受け取ったので function() を実行する！」 と動作するのです。 それだけのことです。 というか， それを監視してくれるような機能を持った便利なクラスが，LoadVarsクラスです。 外部ファイルをロードする場合， Flash は Flash だけで成り立っているわけではない。 ということを認識するのが大切です。 PHP をご使用ならなおさらです。 ファイルがあるかないかのお伺いを立てるのではなくて， サーバにデータの生成まで頼むのですから， もっと "ロード完了" は遅くなります。 そういう動向を踏まえた上での LoadVars です。 > var menu_num:Number = 5; > と宣言すれば話は単純なのですが、 > この5という数値の部分を外部テキストによって可変させる、 > という方法を考えています。 簡単にするには， 書かれていらっしゃるスクリプト， 　var vars = new LoadVars(); 　vars.load("num.txt"); 　　…以下略… の上に stop(); をかけます。 　stop(); 　var vars = new LoadVars(); 　vars.load("num.txt"); 　　…以下略… そして， ロード完了後，次のフレームに進ませれば良いですね。 　vars.onLoad = function(num){ 　　　if(num){ 　　　　　　aaa = vars.str; 　　　　　　msg_txt.text=aaa; 　　　　　　gotoAndStop(次のフレーム); 　　　} 　} そしてその次のフレームで， var menu_num:Number = Number(vars.str); を宣言すれば， 次のフレームに行ったときには， 絶対に外部テキストはロード完了していることになりますから， 宣言が可能になります。
これ・・・ 普通に難しくないFLASHですよ。 超長いFLASHなだけです。 一区切りのフラッシュ終わったら、 フレームで伸ばして、 右下にはアクションスクリプトでリンク貼って 所々にリンク貼って終了です。 アニメーションがメインなので、気合いで出来るはずです。 ループはstop使わなければOKです。
現状を活かすのでしたら、次のように考えてはいかがでしょう。 重複しないランダムな並びを得るには、配列変数を使うと簡単です。 配列変数に目的の数値や何かの値を入れてシャッフルすれば、重複のないランダムな並びになります。 今回の件で言いますと、配列変数にフレームの番号（ 2 ～ 10 ）かムービークリップの番号（ 1 ～ 9 ）を入れてランダムに並べ替えると、重複することなくランダムに再生できる順序が決まります。 あとは、この順序に従ってフレームを再生していきます。 配列変数に書かれている通りに再生するには、配列変数の位置（インデックス）を管理する変数を１つ作り、ムービークリップの再生が終了するたびにこの変数の値を + 1 しながら配列変数から値を取得して、gotoAndStop でフレームを移動します。 この変数の値が配列変数の要素数の最後に達したら、ランダム再生の終了、と判断することができます。 配列変数でランダムな並びを作成する処理（フレームの再生順番を決める処理）は最初の１度だけでいいのですが、次に再生するフレームに移動したり、ランダム再生が全て終了したかどうかの判定などはムービークリップの再生が終了するたびに行わなければなりません。 メインのタイムラインのフレーム１でこれらの処理を全て済ませる場合は、変数が未定義だった時に返ってくる” undefined ”という値を利用して、最初の１度だけ行う処理と繰り返し行う処理に分けることができます。 もっとも、スクリプトを２フレームに分け、フレーム１に最初の１度だけ実行したいスクリプト、フレーム２にランダム再生が終了するまで繰り返すスクリプトを記述し、ムービークリップからはフレーム２に戻るようにする方法もあります。 今回はとりあえず、これまでにできあがっている部分を活かすということで、フレーム１で全てを済ませる作例をご紹介します。 ---------------------------------------------------------- スクリプトの一例です。 メインのタイムラインのフレーム 2 ～ 10 にムービークリップがあり、これらのムービークリップの最後のフレームに _root.gotoAndStop( 1 ); が書かれているとします。 フレーム 2 ～ 10 を重複なくランダムに再生し、最後にフレーム 11 に移動するスクリプトは、大体、次のようになります。 このスクリプトは、メインのタイムラインのフレーム 1 に設定してください。 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください。このまま使うとシンタックスエラーになります） /********************************************************/ 　/************** ランダム再生の最初に１度だけ行う処理 **************/ 　if( tbl_ref == undefined ) 　{ 　　//フレーム番号のテーブル 　　frame_tbl = new Array(); 　　//テーブルの参照位置を保持 　　tbl_ref = 0; 　　//ランダム再生するフレームの総数とシャッフルの回数 　　frames = 9; 　　shuffle = 30; 　　//テーブルにフレームの番号を格納 　　//スクリプトのフレーム(＝このフレーム)の分だけずらして格納しておく 　　for( i = 1 ; i <= frames ; i++ ) 　　{ 　　　frame_tbl[ i - 1 ] = i + 1; 　　} 　　//テーブル内の値を指定の回数だけシャッフル 　　for( i = 0 ; i < shuffle ; i++ ) 　　{ 　　　//要素を２つ、ランダムに選ぶ 　　　index1 = Math.floor( Math.random() * frame_tbl.length ); 　　　index2 = Math.floor( Math.random() * frame_tbl.length ); 　　　//２つの値を入れ替える 　　　temp = frame_tbl[ index1 ]; 　　　frame_tbl[ index1 ] = frame_tbl[ index2 ]; 　　　frame_tbl[ index2 ] = temp; 　　} 　　//最初のムービークリップがあるフレームを再生 　　gotoAndStop( frame_tbl[ 0 ] ); 　} 　/************** ２回目以降の処理 **************/ 　else 　{ 　　//テーブルの参照位置を更新 　　tbl_ref++; 　　//終了判定：次に再生するムービークリップはあるか？ 　　//ある場合はそのフレームに移動 　　if( tbl_ref < frame_tbl.length ) 　　{ 　　　gotoAndStop( frame_tbl[ tbl_ref ] ); 　　} 　　//ない場合は先のアニメに進んで終了 　　else 　　{ 　　　delete tbl_ref; 　　　gotoAndPlay( 11 ); 　　} 　} /********************************************************/ 再生順番を決める処理や配列変数のインデックス番号を管理する変数の初期化などは、undefined を利用して、ランダム再生の前に１度だけ行います。 どの変数を判断に使ってもいいのですが、上記のスクリプトではとりあえず、配列変数のインデックス番号を管理する変数” tbl_ref ”が未定義だった場合にこれらの初期化を行っています。 １件のムービークリップの再生が終了してフレーム 1 に戻ってきた場合は、変数 tbl_ref が既に定義されているため if 文の条件は不成立で、else 以下の処理（次のフレームの再生と終了判定）が行われるようになります。 なお、全てのムービークリップの再生が終了した時には、delete アクションで変数 tbl_ref を削除しています。 これにより、例えばフレーム 11 から続くアニメの最後からリプレイボタンなどで最初に戻れるような作品でも、変数 tbl_ref が undefined になるので、再度ランダムな再生順序を作成するなどの初期化処理が実行されます。 ある決まった順序や法則をもとにデータを並べて表を見るように使うデータ構造を、”テーブル”といいます。 今回はフレームの番号（ 2 ～ 10 ）をテーブルにし、予めランダムな順序に並べ替えたものを見ながら順番に再生していくことで、フレーム 2 ～ 10 までを重複することなくランダムに再生します。 配列変数内の値をランダムに並べ替えるにはいろいろな方法がありますが、上記のスクリプトでは簡単なところで、配列変数の要素をランダムに２つ選び出して入れ替える、という処理を数回繰り返す方法を使っています。 入れ替える回数は、変数” shuffle ”の値を書き換えていただくと変更できます。 回数を多くするほどいいというわけでもありませんが、過不足があるようでしたら適宜変更してください。 ---------------------------------------------------------- ちなみに、いくつかのムービークリップをランダムに再生した後で先に進むには、１つのフレームにムービークリップを全て配置しておく方法もあります。 基本的には、今再生するものだけを表示して残りは非表示にし、再生が終了するたびに表示するものを取り換えていきます。 １つのムービークリップの再生が終了したかどうかは、再生されているフレームを管理している _currentframe プロパティと、ムービークリップの総フレーム数を保持する _totalframes プロパティを比較することで検出できます。 配列変数を使ってランダムに再生する順序を作成する点は同じですが、この方法の場合は、テーブルにムービークリップの参照を入れておくと便利です。 機会がありましたら、こちらの作例も研究してみてください。
まず， 推測されるそうなる原因と理由です。 ムービープレビューはプレビューであって，実際はどうでも良い物ですが， ムービープレビューでなく， 本当にパブリッシュしてブラウザで閲覧してもおそらく同じ現象になるのではないかと思います。 「『テキスト』が『テキストデータ』としてFlash 内に存在する場合」 はそうなります。 「『テキスト』が『テキストデータ』としてFlash 内に存在する場合」 とは，どういう場合かと言うと， テキストが "静止テキスト" であるのに， フォントの名前の前に 「_ 」 が付いているデバイスフォントを使用している場合です。 デバイスフォントの具体例は 「_明朝」「_ゴシック」「_等幅」 など前に「_ 」 が付いているフォントのことです。 また， テキストが "テキスト入力" や "ダイナミックテキスト" になっている場合も， 通常はそうなります。 結局，Flash の単純なアルファとは， 「テキストデータ」 にアルファをかけるのではなく， 「画像（この場合シェイプ(いわゆるベクタ)）データ」 にアルファをかけるのです。 テキストが "静止テキスト" であって， なおかつデバイスフォントを使用していない場合は， SWF にパブリッシュする時点で， 「テキストデータ」 は 「画像（この場合シェイプ）データ」 になります。 したがって， エンドユーザはそのフォントを持っていなくても， Flash の静止テキストは普通文字化けもしませんしレイアウトも壊れません。 パブリッシュの時点で画像化されるのですから， 文字化けが起こらないのは当然のことですし，閲覧環境によって文字の大きさが変わることはないのも当然のことです。 しかし， "静止テキスト" であるのに，デバイスフォントを使用している場合は， エンドユーザのPCにあるフォントデータを参照してFlash上に表示させます。 このフォントデータは「画像（この場合シェイプ）データ」 ではないのでアルファなどはかかりません。 また， テキストが "テキスト入力" や "ダイナミックテキスト" になっている場合， そのテキストはどうなるのか（どう入力されるのか）はわかりませんから， パブリッシュの時点で 「画像（この場合シェイプ）データ」 に変換するのは無理です。 したがって通常はアルファはかかりません。 以上が，そうなる原因とその理由です。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 次に対処法ですが。 テキストが "静止テキスト" である場合は， デバイスフォントを使用せずに， 「MS明朝」とか「HGP平成ゴシック」とか「Osaka」とか「ヒラギノ」とかの普通のフォントを使用するのがベターだと思います。 それで解決する場合は，以下は関係ありません。 もし， テキストが "テキスト入力" や "ダイナミックテキスト" にしなければならない場合， 解決策の１つは普通のフォントにして，そのフォントを埋め込むことです。 テキストを選択して， 下の「プロパティインスペクタ」からテキストを普通のフォントにして， [埋め込み...] ボタンをクリックして，指定したエリア内のフォントを埋め込みます。 こうすると， 「テキストデータ」 は SWF 内に「画像（この場合シェイプ）データ」 として埋め込まれます。 しかし， アルファベットや数字くらいでしたら大した容量にはなりませんが， 「日本語（すべて）」などを選んだ場合は， そのフォントデータのアウトラインデータ（画像データ）が全て埋め込まれますから， それだけで（他に何も用意しないテキストフィールド１つだけで）， 数MB の SWF になってしまうことはありえます（というかたいていそうなる）。 ですから， 日本語を表示するような場合や，日本語を入力させる場合は使わないのが普通です。 ただ， 埋め込まれていないフォントでも， フォントにAS（ASは必須）でマスクをかけて（setMask）， そのマスクにアルファをかけると文字にアルファがかかりますから， そういう方法で対処するのも１つの方法です。 Google 検索例： 「setMask ダイナミックテキスト」 http://www.google.co.jp/search?hl=ja&q=setMask+% … また，BitmapData クラスを使用して， テキストデータを一旦 BitMap 画像に変換して， その 「画像（Bitmap）データ」 にアルファをかけるという手段でもできます。 Google 検索例： 「BitmapData フォント」 http://www.google.co.jp/search?hl=ja&q=BitmapDat … そういう難しい（というかまわりくどくて厄介）な方法を使うと， フォントを埋め込まない場合でもアルファをかけることは可能です。
＃１です。 ＃１で回答したスクリプトは，"単なる一例" ですよ。 本題は 　テキストフィールドをオートサイズにしておけば 　テキストフィールドの幅を検知できるのでそれを使えば良いでしょう。 ということだけです。 また， 　テキストフィールドをオートサイズにしておけば 　それを包むムービークリップの幅でも検知できますよ。 と付け足しているだけです。 > ロールオーバーした場合のみ流れて、 > ロールアウトすると初期状態の場所に戻るという動きの実現は、 > 現状教えていただいたところから、簡単に実現可能でしょうか。 > 申し訳ありませんが、御回答いただければ幸いです。 まず， ロールオーバーするもの（ボタンやムービークリップ）が必要ではないでしょうか？ というかロールオーバーするものはすでに用意されているはずです。 テキストフィールドが動くのですから， テキストフィールドにロールオーバーしたりロールアウトしたときに何か動作させるわけではないでしょう？ もしそういうことをしていたら， テキストフィールドが逃げてロールオーバーしにくいです。 ですから テキストフィールド以外の何かロールオーバーするものにロールオーバーしたとき， 例えば，何かの変数（フラグ）を true とかにして， そのフラグが true の時だけ， // １フレーム進む時間ごとに随時実行 this.onEnterFrame = function() { }; 内が実行されるようにすればできます。 こんな形↓。 // １フレーム進む時間ごとに随時実行 this.onEnterFrame = function() { 　　// 何かのフラグがtrueの時だけ ○○ を実行 　　　　if(何かのフラグ){ 　　　　　　○○ 　　　　} }; そして その何かからロールアウトしたとき， テキストフィールドのx座標を 0 か何かにすれば良いと思います。 この上で書いたも，はたとえばの一例です。 ロールオーバーしたときに， 　// １フレーム進む時間ごとに随時実行 　this.onEnterFrame = function() {}; 自体を定義して， ロールアウトしたときに， 　delete this.onEnterFrame; などをしてもかまわないと思います。 それに， this.onEnterFrame で動かすこと自体も単なる例です。 たとえばモーショントゥイーンで動かしても良いわけです。 モーショントゥイーンで動かして， 　// ★ もしテキストフィールドの右端座標が 0 以下であれば 　if (_txt._x<=0-_txt._width) { 　　　// ★ テキストフィールドを右に移動 　　　_txt._x = Stage.width; 　} ではなくて， 　// ★ もしテキストフィールドの右端座標が 0 以下であれば 　if (_txt._x<=0-_txt._width) { 　　　// ★ 最初のフレームに戻す 　　　this.gotoAndPlay(1); 　} のようにしても良いわけです。 関係ある場所は ★ を付けた部分で， その他は一度動かさないと現実的実体の説明ができないので， ActionScript のみで説明しただけです。 ※ココでは自分のサイトなどにリンクできません。 　 つまり「こうすればいい」などのデータを提示できないのです。 　 ActionScriptだけで説明しているのは， 　 サンプルを作成できないココでの苦肉の伝達方法です。
ほとんど同じ動きのflashを説明した書籍があります。 『Flash ActionScript Handbook 4th edition』大塚勝三　著 SoftBank Creative のセクション5-2は必ず参考になると思います。 参考URL：http://www.sbcr.jp/books/products/detail.asp?sku …
私は絵チャットの管理を行っており 同様の質問を多数受けましたので、ネット上を調べたのですが、 めぼしい情報がありませんでした・・・。 自分でいろいろ試した結果、 FlashPlayer Ver 9.0.124.0 のみで発生するようです。 とりあえず Ver 9.0.115.0 へダウングレードすれば回避できました。 公式に過去のインストーラのアーカイブがあります。 そちらを利用すると良いでしょう。。 手順に関しては参考URL以下にメモしてあります。
ParaFla! は それ系 の機能(テキストエフェクト)が発達していますから， 元からたくさんのエフェクトも入っていますし， それ以外でもの方がオリジナルのエフェクトを作成されています。 また某２ｃｈ掲示板などが主催となっている「ParaFla!感謝祭」なるものがあるのですが， その感謝祭でも「プレイベント:テキストエフェクト」という部門？まであります。 ファイルをほじくらないでも， 視覚的な参考にはなるかもしれません。 「ParaFla!でFlash作成（仮）[ 別館 ]」　より テキストエフェクト http://paracore.hp.infoseek.co.jp/effect_dl.html 「区立ぱらふら予備校」　より テキストエフェクト集 http://www.geocities.jp/dr0p4u/how2/te/ 「くだらないページ」　より Akiエフェクトパック http://www.geocities.jp/akkii/tools/effectpac.html 「Para.com」　より てきすとえふぇくと http://www.geocities.jp/syun_k765/texte/ 「ごんべのFlash畑」　より http://www1.atpages.jp/gonbe1/ →テキストエフェクト の項目 「ぬこちゅーさん」　より ■ParaFla用テキストエフェクト http://nuko.info/tool/txtefct/ ちなみに私は ParaFla! の回し者ではなく， Flash（Adobe Flash のこと） でも簡単にテキストエフェクトが簡単に作成できれば良いのにと切に望む者です。 元から入っているタイムラインエフェクトはAdobeが用意した既製品ですからあまり使いたくありません。 またタイムラインエフェクトは自作できる機能ですが，自作しようと思うとむっちゃ難しいです（JSFLとかが必要）。
> フラッシュが再生されると同時にリンク先に飛んでしまいます。 　↑この２件は一見矛盾して見えますが...↓ > リンク先のURLも合っているはずなのですが、 > 「ページがありません」と表示されてしまいます。 また， 「二兎追う者一兎をも獲ず」＆「虻蜂取らず」です。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ まず一件目。 > フラッシュが再生されると同時にリンク先に飛んでしまいます。 getURL ("URL", "_blank"); がフレームに書かれてある可能性が超高いです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ２件目。 > on (release) { >　　getURL ("URL", "_blank"); > } > で貼っているので合っていると思うのですが・・・。 合っているかどうか回答者が判断することはできませんよね。 というか， "URL" と 「"」 で区切られているとそれは 「URL」 という文字列です。 「URL」 という文字列だと当然普通は無事にジャンプしないでしょう。 また，URL は変数であったとしても， 回答者は変数 URL にどんな値が入っているかもわかりませんし， 仮に無事何かの URL が入っていたとしても， そこに目的のページが実際に存在するかどうかは確かめられません。 一度， その getURL ("URL", "_blank"); の 意味不明（変数なのか文字列なのか意味不明）な URL をブラウザで直接開いてみてください。 そしたら，その意味不明な URL が存在するかどうかがわかるでしょう。 その意味不明な URL が存在するのでしたら， getURL ("URL", "_blank"); 　のパスの間違えだと考えられます。 その意味不明な URL が存在しないのでしたら， いわずもがな，そんなファイルは存在しないのでしょう。
どういう方向性で勉強されている（習われている？）のかわかりませんから回答しにくい面もありますが， 一応， onイベントハンドラを使用されている という雰囲気を壊さないように考えてみました。 -------------------------------------- onClipEvent (load) { // ゆっくりになる度合を設定 slowdown = 9/10; // 動く割合の変数 movement の初期化 movement = 1; // プレスされたかどうかのフラグの初期化 press_flag = false; } on (press) { this.startDrag(); // プレスされたかどうかのフラグをtrueにする press_flag = true; // 座標をpos_x1とpos_y1に記録 pos_x1 = this._x; pos_y1 = this._y; } on (release, releaseOutside) { this.stopDrag(); // プレスされたかどうかのフラグをfalseにする press_flag = false; // 動く割合の変数 movement の初期化 movement = 1; } onClipEvent (enterFrame) { if (press_flag) { // 前に記録しておいた座標を違う変数に代入 pos_x2 = pos_x1; pos_y2 = pos_y1; // あらたに今の座標を記録 pos_x1 = this._x; pos_y1 = this._y; } else { // movement を slowdown の割合で少なくする movement *= slowdown; // 記録の差分座標ずつ動かす（減速させながら） this._x += (pos_x1-pos_x2)*movement; this._y += (pos_y1-pos_y2)*movement; } } ------------------------------------- onイベントハンドラが使用できるようになった， Flash MX 以上で使用可能なスクリプトです。 ActionScriptのバージョンは1.0です。
スミマセン。 動作検証などしていたら補足していただいたことに対する回答がすっかり遅れてしましました。 http://okwave.jp/qa4145944.html http://oshiete1.goo.ne.jp/qa4145944.html の＃１です。 以下は， このご質問（今ご覧になっている QNo.4150064 ActionScript2.0での座標 の質問）の， ＃１の回答者の方の回答と書き方が違うだけでほぼ同じなので， ＃１の回答者の方の回答と合わせて参考にしてみてください。 ～～～～～～～～～～～～～～～～～～～～～ 新規ドキュメントでも何でも良いので， 次のスクリプトをフレーム1にコピペして「ムービープレビュー」や「ムービーのデバッグ」してみます。 ------------------------------------ // マウス座標表示用テキストフィールドの作成 var t0:TextField = _root.createTextField("x_txt", _root.getNextHighestDepth(), 10, 10, 60, 20); var t1:TextField = _root.createTextField("y_txt", _root.getNextHighestDepth(), 10, 40, 60, 20); // // テキストフィールドの設定 for (var i:Number = 0; i<=1; i++) { _root["t"+i].border = true; _root["t"+i].background = true; _root["t"+i].backgroundColor = 0xD7D7D7; } // // １フレーム進む時間毎に毎回マウス座標を表示 _root.onEnterFrame = function():Void { t0.text = "X:"+_root._xmouse; t1.text = "Y:"+_root._ymouse; }; ------------------------------------ Windows環境（WindowsXP），Flash8 では， 少なくともDebug Player ウィンドウの場所によって値が相対的に変わるということも， _root._xmouse も _root._ymouse もマイナスになることもありません。 ただし，わざとウィンドウの大きさを変更すると マウスポインタの位置によってはマイナスの値にはなりますが， これは，ステージの左上よりもさらに上や左が表示されるからです。 ステージいっぱいに何色かの色で塗りを作成すればわかりやすくなります。 ------------------------------------ // ステージ全体を枠線付き薄青で塗る _root.beginFill(0xCCFFFF, 100); _root.lineStyle(0, 0xA0A0A0, 100); _root.moveTo(0, 0); _root.lineTo(Stage.width, 0); _root.lineTo(Stage.width, Stage.height); _root.lineTo(0, Stage.height); _root.lineTo(0, 0); _root.endFill(); // // マウス座標表示用テキストフィールドの作成 var t0:TextField = _root.createTextField("x_txt", _root.getNextHighestDepth(), 10, 10, 60, 20); var t1:TextField = _root.createTextField("y_txt", _root.getNextHighestDepth(), 10, 40, 60, 20); // // テキストフィールドの設定 for (var i:Number = 0; i<=1; i++) { _root["t"+i].border = true; _root["t"+i].background = true; _root["t"+i].backgroundColor = 0xD7D7D7; } // // １フレーム進む時間毎に毎回マウス座標を表示 _root.onEnterFrame = function():Void { t0.text = "X:"+_root._xmouse; t1.text = "Y:"+_root._ymouse; }; ------------------------------------ ただ，Windows版 Flash と Mac版 Flash とでは， ムービープレビュー時のマウス検知の動向が違うとは聞いたことがあります。 と言いますか， Mac版 Flash でのムービープレビュー が， HTML に貼り付けたときのマウス検知などの結果と違うそうです。 だから Mac版 だと一度 SWF と HTML をパブリッシュしてみて， その HTML をブラウザで見てみないとわからないこともあるらしいです。 Windows版でも当然そのようなことはありますが（FlashVarsとかの動向など）， マウスの座標やステージ外に出たとか出ないとかの検知に関しては， ムービープレビューもブラウザ閲覧も変わりません。 Mac Windows に関わらず， XP と Vista での違いや Flash8 とそれ以外との違いなど， 仕様の違いが関係しているのかもしれません。 　　
Flash Player の各バージョン必要なシステム条件 をお確かめください。 Flash FlashPlayer 9 http://www.adobe.com/jp/products/flashplayer/pro … Flash FlashPlayer 8 http://www.adobe.com/jp/products/flashplayer/pro … Flash FlashPlayer 7 http://www.adobe.com/jp/products/flashplayer/pro …
例えば雰囲気はこんな感じでしょうか。 　学校教育法 …SWFファイル(＝_root) 　　　第１章 総　則 …フレーム1 MC「syousai1」 　　　第２章 義務教育 …フレーム2 MC「syousai2」 　　　第３章 幼稚園 …フレーム3 MC「syousai3」 　　　第４章 小学校 …フレーム4 MC「syousai4」 　　　第５章 中学校 …フレーム5 MC「syousai5」 　　　第６章 高等学校 …フレーム6 MC「syousai6」 　　　　　第50条 …MC「syousai6」のフレーム1 　　　　　第51条 …MC「syousai6」のフレーム2 　　　　　第52条 …MC「syousai6」のフレーム3 　　　　　第53条 …MC「syousai6」のフレーム4 　　　　　第54条 …MC「syousai6」のフレーム5 　　　　　第55条 …MC「syousai6」のフレーム6 　　　　　第56条 …MC「syousai6」のフレーム7 　　　　　第57条 …MC「syousai6」のフレーム8 　　　　　第58条 …MC「syousai6」のフレーム9 　　　　　　 … 　　　　　第62条 　　　第７章 中等教育学校 …フレーム7 MC「syousai7」 　　　第８章 特別支援教育 …フレーム8 MC「syousai8」 　　　第９章 大　学 …フレーム9 MC「syousai9」 　　　　　第83条 …MC「syousai9」のフレーム1 　　　　　第84条 …MC「syousai9」のフレーム2 　　　　　　 … 　　　　　第114条 したいことの雰囲気。 学校教育法 第９章 第84条 のある一文から， 学校教育法 第６章 第58条 にリンクしたい。 　　↓↓↓ _rootのフレーム9にある MC「syousai9」のフレーム2のボタンから， _rootのフレーム6にある MC「syousai6」のフレーム9にジャンプしたい。 Flash ではあまりそういうことをしないので， そう言った問題は普通起こりませんが， 説明書や法規などの書籍やしおりみたいなものを Flash で作成しようとすると， たしかにそのような問題は起こり得ますね。 単純に考えるならば， _rootのフレーム9にあるMC「syousai9」のフレーム2のボタンには次のように書けば良いのです。 on (release) { this._parent.gotoAndStop(6); this._parent.syousai6.gotoAndStop(9); } まず， this._parent つまり _root に gotoAndStop(6) 命令を出して， 次にそのフレーム6にある「syousai6」に gotoAndStop(9) 命令を出す。 ここまでは普通に考えられるようになった方が良いと思います。 gotoAndStop 命令を与えるオブジェクトは２つです。 ですから少なくとも２文必要です。 ところがこのままではうまく行きません。 ボタンをクリックしたときに， 　this._parent.gotoAndStop(6); が実行されて _root はフレーム6でストップしますが， そのとき，ボタンがあるムービークリップ階層 は存在しません。 したがって， 　this._parent.syousai6.gotoAndStop(9); は実行はされません。 人間と一緒で， 「命令をする物」 と 「命令を聞く物」 が同時に存在しないと普通は動作しません。 一般的な Flash では普通， 「命令をする物」 と 「命令を聞く物」 は同時に存在するのです。 これはあえて同時に存在するように作るのではなく， 何にも考えなくても勝手にそうなります（人間がそう作ってしまう）。 ゲームでもアニメでもユーザーインターフェイスでも。 ゲームでもアニメでもユーザーインターフェイスでもないような， Flashらしからぬものを作成しようとされている上， なおかつ１つのタイムラインはなく ムービークリップを文書フォルダ代わりに使用しているという特殊な状況を作成されたため， 普通は有り得ない問題が起こってしまうのだと思います。 苦肉の回避策（例）です。 _rootのフレーム9にあるMC「syousai9」のフレーム2のボタンには次のように書きます。 -------------------------------- on (release) { this._parent.frame_num = 9; this._parent.gotoAndStop(6); } -------------------------------- 意味は， ボタンをクリックしたとき， this._parent つまり _root の 変数frame_num に 9 を代入。 this._parent つまり _root を フレーム6 で停止。 ということです。 そして _root のフレーム6のキーフレームに次のように書きます。 -------------------------------- if (frame_num != undefined) { this.syousai6.gotoAndStop(frame_num); } -------------------------------- 意味は， もし変数 frame_num というものが存在したら， インスタンス名syousai6 を フレームframe_num で停止。 ということです。 これで， ボタンから指定された番号 frame_num のフレームで， syousai6 がストップするという仕組みになります。 「命令をする物」 と 「命令を聞く物」 が同時に存在しますね。 ボタン（ボタンがあるムービークリップ階層）から this._parent.gotoAndStop(6); の命令を受けるのは _root です。 _root から　this.syousai6.gotoAndStop(frame_num);　の命令を受けるのは syousai6 です。 ボタンがあるムービークリップ階層 と _root は同時に存在しますし， _root と syousai6 も同時に存在します。 ※ムービークリップを文書フォルダ代わりに使用すると， 　 もし印刷をする場合，かなり手間になりますよ。 　 フレーム移動どころではない手間です。
>>違うページに移動しても再度読み込みをすることなく前のページと同じ位置からフラッシュを再生させたいのです。 ページ遷移した時点で違うページに移るわけですから、無理じゃないでしょうか？ページ毎でswfは再読み込みせざるを得ないですし、仮にパラメータを渡して同じフレームから再生できたとしても遷移の間、無音の時間が必ずありますし。ユーザーのマシンスペックや接続環境にもよりますね。 URLの遷移がどうしても必要なら、あまりいい方法ではないですが、ページをフレームで切れば問題ないですね。又はポップアップ的な小窓に音声再生用のflashを置いておけば、遷移しても曲は流れ続ますよ。又は、思い切ってm3uというファイルを用意してクリックするとユーザーのローカルアプリで再生してもらうようにするとか。 URLの遷移が必要なければ、FlashからFlash以外の部分をCSSレイヤーで制御するのが一番スマートではないでしょうか？
> どういったスクリプトを書けばいいかわかりません。 場合によってはスクリプトなど要りません。 ボタンの 「オーバー」 フレームに説明文を用意すれば良いだけです。 第17回　ボタンの仕組みを利用しよう：ITpro http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … 　→図1：ボタンを使ったムービー 　　列車に乗っている各人にカーソルを合わせると 　　吹き出し（セリフ）が出てきます。 　→図8：ポップアップサンプル 　　円グラフの項目にカーソルを合わせると 　　別エリアに文字が表示されます スクリプトを使うにしても使わないにしても， Flash を少しずつでも良いので理解して， 「その理解した部分が何かに使えないものか？」 と思案することが大切です。 スクリプトを使うとした場合でも， 例えば gotoAndPlay() を１つ覚えたとします。 この一つでも無限に様々なことができます。 肝心なのはスクリプトをたくさん覚えることではなく， たとえば gotoAndPlay() をどう使うかというアイデアを出すところです。
>起動するフォームの場所によっては、 第一にこれがわからないのですよ。 フォームって何ですか？ フォームは何かと言うより，フォームは Flash 内にも作成できますし， HTML内にも作成できますし， まったくそれ以外にも作成できます。 HTML ですか？ そしたら HTML （HTML＆JavaScriptなど）で処理するべきではないでしょうか？ >ステージに依存しない座標を取得する方法はありますでしょうか。 では何に依存する座標なのでしょうか？ 北緯とか東経に依存するの座標でしたら，PCを離れてGPSか何かで取得するべきでしょう。 モニタに依存する座標でしたら，VBS とか JS とか（Macは何か知りません）になるでしょうし， HTMLページに依存する座標でしたら JavaScript あたりが妥当ではないかと思います。 太陽に依存する座標でしたら知りません。 ActionScriptは， Flash表示エリア内でのみ通じるスクリプトです（当たり前ですが）。 ですからFlashの ステージ を基準にするのでしたらステージの左上座標が基準になります。
コチラのサイトで、flaがダウンロードできるようになっています。 実際にどのような記述でやっているのか是非見てみては如何でしょうか？ http://www.geocities.com/daigo.geo/flash/
わかりません。 今のところそういう話は聞いたことがありませんし， 実際にやってみても 『を』 は表示されます。 ---外部XML例 「xxx.xml」----------------- <?xml version="1.0" encoding="UTF-8"?> <sample>わゐうゑを</sample> ------------------------------------- 「xxx.xml」と同階層のFlashのステージ上に 「myTXT」というインスタンス名のダイナミックテキストを配置し， フレームに次のようなスクリプトを記入してパブリッシュ。 --- 「xxx.xml」と同階層のFlashフレーム1------ // XMLインスタンスの作成 var myXML = new XML(); // 余分な空白などを削除 myXML.ignoreWhite = true; // XMLロード時の動作定義 myXML.onLoad = function() { // _root.myTXT にXMLを表示 _root.myTXT.text = this.firstChild.firstChild.nodeValue; }; // 外部XML を XMLインスタンスにロード myXML.load("xxx.xml"); ------------------------------------- (※ActionScript1.0，FlashMX(FlashPlayer6)以上) 「わゐうゑを」 すべてが表示されます。 フォントを埋め込まないのでしたら， 『MS UI Gothic』 よりも 『_ゴシック』 や 『_等幅』 など， 前に 『_』 の付いたデバイスフォントを選択する方が良いですが， 今回それはどうでも良いとして， 『_ゴシック』 でも 『MS UI Gothic』 でも，「わゐうゑを」 は表示されます。 「わゐうゑを」 の場合， テキストフィールドが小さくて４文字分の幅しかなければ 「わゐうゑ」 になってしまいますが， そういうことではないのですよね。 　肉　斬らして骨　斬る 　毒　もって毒　制す 　罪　憎んで人　憎まず と，これらのように 『を』 だけがスッポリ抜けるのでしょうか？ 質問者さんのPCのフォントファイル （msgothic.ttc ？） が壊れているくらいしか考え付きませんが...。
すみません＃１です。 スクリプトの最後の１行を書き間違えました。 this._y += (myX-this._y)*speed; 　　　　　↓変更↓ this._y += (myY-this._y)*speed;
意図的にメモリ上から完全に消し去る事はできません。 参考URL：http://oshiete1.goo.ne.jp/qa3808297.html
アニメーションの最後のフレームに gotoAndStop() しているだけだと思います。 方法的には無数に色々なことが考えられますから， 実際はぜんぜん別の方法を使っているのかもしれませんが， フツーに見れば， アニメーションが一通り終わったフレームにジャンプしているだけに見えます。 ボタン（ボタン機能を持つムービークリップ）に， 直接次のように書くか， on(release){ _root.gotoAndStop(最後のフレーム番号); } または， ボタン（ムービークリップ）にインスタンス名を付けて， そのインスタンスが存在するフレームに次のように書くか， ボタンのインスタンス名.onRelease = function(){ _root.gotoAndStop(最後のフレーム番号); }; これで最終フレームに飛びます。 そんな感じだと思います。 「gotoAndStop();とgotoAndplay();を覚えよう。」 http://www.1art.jp/flash/le/lesson14/lesson14.htm 「onイベントハンドラ」 http://1art.jp/flash/le/lesson16/lesson16.htm
MovieClip(root).hoge(); ではなく下記でした。失礼しました。 MovieClip(stage.getChildAt(0)).hoge();
XMLから "5/10" は取得できているものとして回答します。 実際はもっと短絡できますが， 順を追ってコーディングすると次のようにすればできます。 myNumStr = "5/10"; myNumStrArr = myNumStr.split("/"); myNum = Number(myNumStrArr[0])/Number(myNumStrArr[1]); myNumPercent = myNum*100; trace(myNumPercent + "%");
<script type="text/javascript"> AC_FL_RunContent( 'codebase',・・・・・'movie','images/flash/kouzan' ); //end AC code この部分にもbgcolorの指定が必要です。 下記に変更 AC_FL_RunContent( 'codebase',・・・・・'movie','images/flash/kouzan','bgcolor','#000000'); //end AC code
こんにちは FLASHアニメーションを、DVD化することは可能ですが、高い性能のパソコンと、手間がかかります。 FLASH自体は、動画とは少し違うので、直接変換はできません。まず、キャプチャする必要があります。 ソフトでは、「カハマルカの瞳」や「AmaRecCo」というソフトが有名です。 そのソフトを使って、FLASHをキャプチャーしてできたファイルを、DVDの形式（MPEG2or1）に変換して、焼きます。 キャプチャとは、連続でFLASHなどの動画を撮影して、撮影した画像ファイルをくっつけて動画にすることです。パラパラ漫画を想像いただけるとわかりやすいと思います。 当然、1秒に30回くらいの頻度で撮るわけですから、高い性能のパソコンが必要です。 もちろん、FLASHアニメの制作者の著作権を侵害しないようにしてください。
traceで確認出来ないでしょうか？ trace("処理前：" + _root.zoomPic); //処理前の_root.zoomPicの確認 _root.zoomPic = 2 trace("処理後：" + _root.zoomPic); //処理後の_root.zoomPicの確認 で、処理前と処理後の内容が確認出来ます。 仮に 処理前：undefined と出た場合、オブジェクトやプロパティの指定に誤りがあります。 traceで細かく確認してみましょう。
個人的な意見ですが参考までに おそらくtkmojoさんは色々試されていると思います。 スクリプトをステージに書く。 ボタンをムービークリップで作るなど。 個人的には色々な書き方を知っていれば あとはCaseByCaseで書いていけばよいのではないでしょうか？ 一緒に作業する人、引き継ぐ人に合わせる。 2.0的な書き方になれた人ならボタンを使う構築にするとか。 これから3.0的な書き方に少しでも近づけたい と言うならステージのみに書いていくとか。 （厳密には3.0は書き方が違いますが） >でもMCに書いていると、MCが多くなった時にスクリプトを探すのが大変ではないでしょうか？ ご存知かもしれませんが こちらに関してはアクションパネルの左側に インスタンス一覧が出ます。 そこでインスタンスをクリックすると mcに書かれているスクリプトを見れるので便利です。 逆の場合もインスタンス名が<>つきで表示されますよ。 >ボタンでないと出来ない事などはあるのでしょうか？ こちらに関しては私の知る限りではないと思うのですが。。。 まとめますと今の書き方でいいと思います。 ちなみに私も同じ書き方です。
ここのサイトが分かりやすいですよ。 「フェードアウトの繰り返し」「パスに沿って移動」 などを応用すればやりたいことが可能だと思いますよ。 http://www2.netwave.or.jp/~light/index.html
３時間くらい唸って考えましたし， わかる範囲内で同様のようなものを作成したみましたが， 結局何を書かれていらっしゃるのかさっぱり理解できませんでした。 ムービーの構造どころかルールさえわかりません。 >ゲットした４つの玉（アイテム）を壁の穴に当てはめる >という動作が見事出来ました スクリプトを見る上では，「穴にあてはめる」=「その穴に順に置いた玉が順次移動する」という部分は全くみつかりません。移動はぜんぜんしていないように見えますよ。 --- --- --- --- --- --- 玉のムービークリップのスクリプトの最後の行， > itemNum = false;} これは _root.itemNum = false;} の間違いではないでしょうか？ また 書かれていらっしゃる玉のスクリプトはおそらく， 「aka1」に書かれたものだと思いますが， １つしか例がないので， 「aka2」ではどこをどのように変えるのか， また 「ao1」ではどこをどのように変えるのか， という規則性がいまひとつわかりません。 一応 「aka2」 は次のようになるのではないかとは推測しました。 on (release) { _root.aka2._visible = false; _root.item2._alpha = 100; _root.komento = "赤い玉をはずした"; _root.itemNum = false; } 「ao1」 は次のようになるのではないかとは推測しました。 on (release) { _root.ao1._visible = false; _root.item1._alpha = 100; _root.komento = "青い玉をはずした"; _root.itemNum = false; } 一応推測はしましたが， 実際はどう変えるべきなのかわかりません。 --- --- --- --- --- --- 最難関が ， if (_root.item == "about1") など _root.item です。 _root.item にどこで about1 という値を代入しているのでしょうか？ わかりません。 また，アイコン（item？) などというものも突如出没していて， 玉 と 穴 と アイコン（item？) の関係がぜんぜんつかめません。 --- --- --- --- --- --- 根本的に，もっとわからないのは， ４個の穴に玉を当てはめるのに，なぜ玉が16個もあるかです。 16個あるにしても， 「赤」「青」「黄」「緑」「紫」「茶」「橙」…のように全く違う玉があるのなら理解ができます。 しかし４個で済むところを同じ色の玉を４つずつ用意している意味がわかりません。 たとえば 「赤」「青」「黄」「緑」　という順が正解であるとする場合， 「aka1」「ao4」「kiiro4」「midori3」 でも 「aka2」「ao1」「kiiro2」「midori2」 でも， 「aka4」「ao4」「kiiro1」「midori1」 でも， 　　…　　　…　　　略　　…　　… これら全てが正解なのでしょうか？ もしそうだとするなら， それらすべてが正解であるという判定をしなければなりませんよ。 だからそこを工夫する必要があると思います。 --- --- --- --- --- --- あと気になった点を少し。 例えば 「ao1」「ao2」「ao3」「ao4」と連続でクリックした場合， 現状では「青」が全部消えてしまいますよ。 これでいいのでしょうか？ >「玉レイヤー」と「壁の穴レイヤー」を階層に分け スクリプトを見る限り階層に分けているようには見えませんよ。 階層とはオブジェクトの階層構造のことを指します。 Flashの場合はムービークリップが１つの階層です。 ムービークリップの中にムービークリップを入れたりした場合に， 親階層とか子階層とか言います。 _root がそもそも１つの階層です。 「玉レイヤー」と「壁の穴レイヤー」の階層分けを本当にすると次のようにするということです（例）。 　_root 　　├玉用ムービークリップ 　　│　　├aka1 　　│　　├aka2 　　│　　├aka3 　　│　　　…略… 　　│　　└midori4 　　└穴用ムービークリップ 　　　　　├穴1ムービークリップ 　　　　　├穴2ムービークリップ 　　　　　├穴3ムービークリップ 　　　　　└穴4ムービークリップ --- --- --- --- --- --- ★結局★ 自分の中で日本語で明白にルールがあればそれをコーディングすれば良いだけです。 この日本語↑とは純粋日本語ではなくインスタンス名などの固有名称は含む意味での日本語です。 ご質問の文やスクリプトからは， 「何がどうなれば良いのか（何がどうなればゲームクリアなのか)」 がさっぱりわからないので， こちらも根掘り葉掘りと細部を聞いているだけです。 補足してくださっても， 結局わからない可能性が多いので，その場合補足説明する労力は無駄になりますが， それでもかまわない場合は，補足説明してください。 一番良いのは， 上で私が書いた様々な疑問に１つずつ答えてくださってもかまいませんが， それより 「何がどうなったときゲームクリアなのか」 を補足説明していただく方が良いです。 「何がどうなったときゲームクリアなのか」 をご自分の中で明白にすると， 補足説明するまでもなく，ひょっとしたら自己解決するかもしれませんよ。 ☆ちなみに☆ 私が　http://oshiete1.goo.ne.jp/qa4121602.html　で書いたのは， _root の上レイヤーに玉ムービークリップ「aka」「ao」「kiiro」「midori」 があったとして， _root の下レイヤーに穴ムービークリップ「ana1」「ana2」「ana3」「ana4」があったとして， 　「ana1 に aka が入る」 　　「ana2 に ao が入る」 　　　「ana3 に kiiro が入る」 　　　　「ana4 に midori が入る」 これが正解の順序であるとした場合， 次のようにすればいいのではないかというような意味です。 ------------------------------------ // このムービークリップ（またはボタン）を放したとき on (release) { // 赤が穴1と接触 なおかつ 青が穴2と接触 なおかつ // 黄が穴3と接触 なおかつ 緑が穴4と接触 していたら if (_root.aka.hitTest(_root.ana1) && _root.ao.hitTest(_root.ana2) && _root.kiiro.hitTest(_root.ana3) && _root.midori.hitTest(_root.ana4)) { // 完了！を出力(実際は何か他の動作を書く) trace("完了！"); } } ------------------------------------ 　// このムービークリップ（またはボタン）を放したとき の 「このムービークリップ」 とは， 「ana1」「ana2」「ana3」「ana4」でも良いですし， 「aka」「ao」「kiiro」「midori」 でも良いです。 何でも良いのです。 穴をクリックして玉を持ってくる形式でしたら，各穴に書くことになると思います。 各玉に ------------------------- // このムービークリップを押したとき on (press) { // ドラッグ開始 this.startDrag(); } // このムービークリップを放したとき on (release, releaseOutside) { // ドラッグ終了 this.stopDrag(); } ------------------------- のように書いて， 穴に玉をドラック移動させる形式でしたら， 　// ドラッグ終了 　this.stopDrag(); のあとくらいに if文 を書くことになると思います。 また，穴でも玉でもない別の「判定！」ボタンなどを作成して， そこに hitTest 判定文を書いても良いでしょう。 そういう単純な意味です。
ご質問は２つですか？ ------------------------------------- > 故かページ(1)のクリアキー判定まで行われてしまい、 delete でイベントリスナーのメソッドは削除できると思います（多分）。 フレーム2 に行ったときとか，その前で。 delete Key_object.onKeyDown; 「イベントハンドラメソッドはdeleteで消せ!」 http://f-site.org/articles/2004/05/22140833.html ------------------------------------ > 「ページ(2)でのクリアキー判定の方はイベントリスナーを使わずにキー判定を実装して」 これは古来からある方法（Flash1くらいからある方法）で， 何でも良いのでボタン（ボタンシンボルのインスタンス）を作成して， そのボタン自体に， on (keyPress "<Delete>") { // 何かの処理 } のように書けばできます。 ボタンが見えて困る場合は透明な塗りをボタンにするとか， ボタンのアルファを 0 にするとか， ステージ外の見えない場所にボタンを置くとか， 背景画像の下のレイヤーにボタンを隠すとかとかとか… そんな方法で誤魔化します。 昔（というかつい最近まで，というか携帯などは今でも），キーの判定は， キークラスは使用せずに， ボタンの on (keyPress) ハンドラで取っていました（います）。
Flash や ActionScript のバージョンもわからない上， どうやって点灯させているのかがわからないので，どうやって消灯させるのかもわかりません。 点灯させる方法など無数にあります。 その他状況がわかりません。 わかりませんがフラグを用いればたいていの場合うまく行くと思いますよ。 仮にフラグの変数名を flag だとしたおくと， flag = false; というように， まず flag の値を false などにしておいて（別にtrueでも良いです）， アイテム（ボタン）を押したとき， // もし flag が true であれば if(flag){ 　　ココに消灯させるスクリプト; 　　// flag を false に戻す 　　flag = false; }else{ 　　ココに点灯させるスクリプト; 　　// flag を true にする 　　flag = true; } のようにすればたいていできます。
参考ですが わざわざPHPをコネコネするのがメンドクサイ場合は YahooPipes等も良い手段ではあります ご存知ではあると思いますが crossdomain.xml が設置できるならばそもそもこういう難儀は発生しないですね
http://xxxxxx/test.swf?hoge=1111 のGET変数hogeを受け取りたい場合、下記のActionScriptを使います。 var paramObj:Object = LoaderInfo(loaderInfo).parameters; var str:String = paramObj["hoge"];
構造物の作成を， ココのようなテキストでしか回答できないところでは， 説明がほとんどできないので， ちゃんと回答はできませんがアドバイス程度のものとして回答します。 > ゲットした4つの色違いの玉を、壁の穴に当てはめて、 > 並び順が正解なら脱出。。！ 「玉を、壁の穴に当てはめる」という部分の意味がよくわかりません。 玉をドラッグして所定の位置にドロップ（つまりドラッグ＆ドロップ）するということでしょうか？ 壁の穴をクリックしたら，その穴に順に置いた玉が順次移動するということでしようか？ 他にボタンがあって「赤1」ボタンをクリックすると赤玉が1の穴に移動するということでしょうか？ 色々な意味にとれるのでよくわかりません。 しかし， 「並び順が正解なら脱出。。！」の判定をするタイミングは， 上の壁に当てはめる３つ場合のすべてが， 何かから「マウスアップしたとき」です。 つまり玉なり穴なり他のボタンを 「クリックしたとき」 ということになります。 したがって，判定をするタイミングは， on(release){}　もしくは， ○○.onRelease = function(){};　もしくは， onClipEvent(mouseUp){}　もしくは， ○○.onMouseUp = function() {}. のうちのどれかが 適当なイベントハンドラになると思います。 enterFrame系は，１フレーム進む時間ごとに毎回毎回実行されますから， 壁の穴に当てはまったかどうかを「ずっと随時監視し続ける」ということになり， 凄く無駄な処理を繰り返すことになります。 できなくは無いと思いますが， こういう場合はできるだけ避けた方が良いです。 こういう無駄をしているとゲームがだんだん重くなってきます。 ちなみに， > onclip movie(EnterFlame)と そのようなスクリプトはありませんよ。 onClipEvent(enterFrame)　もしくは ○○.onEnterFrame　だと思います。 -------------------- １つの案ですが， 壁の穴の部分もムービークリップで作成して， 玉もムービークリップで作成して， on(release){}　もしくは， ○○.onRelease = function(){};　あたりで， hitTest判定をするのが良いのではないかと思います。 Flashゲーム講座＆ASサンプル集【当たり判定について】 http://hakuhin.hp.infoseek.co.jp/main/as/hittest … ↑サンプルでは， 説明のために随時当たり判定をとっていますが， これは説明をわかりやすくするためです。 シューティングゲームなどで， 弾と敵機の当たり判定を取る場合， 随時当たり判定をしなければならない場合もありますが， このご質問の場合は，おそらく随時当たり判定をする必要はなく， 「何かをクリックしたとき」のみに当たり判定すれば良いと思います。
CSFファイルだけでは訂正できないので、使った画像やテキストなどを一緒にzipなどに圧縮してUPしていただければもう一度回答します。
Flashでは不可能ですね。Flash単体では他のアプリケーションに対する起動等、アクセスが許されていないからです。 あくまでFlash Player内で完結する物を作るためのソフトですから。 PC内のファイルへのアクセスも、原則禁止です。 ファイル構成が簡単なテキストファイル等なら、アクセス権もありますが、あくまで数値やテキストデータの書き込み、読み込み程度です。 これは全てFlash Playerでの話です。 AIRならばローカルファイルへのアクセスが限定的に出来ますが、メディアプレイヤーは確か対象外です。mpegファイルを叩いてメディアプレイヤー起動と言う流れは難しいですね。 FLVファイル単体のフルスクリーン表示は出来ませんが、SWF自体をフルスクリーン表示させる事は出来ますよ。 FLVプレイヤーを作成し、そのファイル自体をフルスクリーン表示させ、読み込んで再生する事で対応出来ますが、FLVファイルを高画質で用意する必要があります。 参考サイトを出しておきますね 参考URL：http://level0.cuppy.co.jp/2008/03/flash_5.php
> マスクを使用して塗りをシェイプするなど色々やってみたのですが 塗りをシェイプする という意味がわかりませんが， 塗りをシェイプトゥイーンさせる のでしたら間違いだと思います。 本当のところはどうしているのか，よくはわかりませんが， 矢印（顔をなでるときにミュオーンと伸びる弧状矢印ですよね？）にマスク（シンボル化したマスク）をかけて マスクをモーショントゥイーンで動かしていると思います。 もしくはケシコミ（ケシコミとはパラパラマンガの作成技法の１つ）です。 でも，ケシコミしなくても（パラパラマンガをしなくても），なんとかマスクのモーショントゥイーンでできる範囲です。 ミュオーン矢印の出し方ではありませんが， 色々なマスクのモーショントゥイーン例 http://www.mdn.co.jp/content/view/3352/111/ http://www.tokiwa.ac.jp/~shio/el/flash/mask.htm これだと確実にできます↓。 F-site | ケシコミ http://f-site.org/articles/2005/12/05231617.html → ムービーを見る 直接関係はありませんが， ASでする場合らしいです↓。 F-site | 1kBでここまで動かせる！！ASで動かすケシコミ http://f-site.org/articles/2006/10/14061621.html
どこがわからないのかが疑問である質問ですが。 まず，eval などを使わなくても次のようにすればできますよね。 for (i=0; i<=100; i++) { obj = _root.attachMovie("XXX", "mc"+i, i); //MCの作成 obj._x = table_x[i]; //X軸の値の格納テーブル obj._y = table_y[i]; //Y軸の値の格納テーブル obj.onMouseUp = function() { trace("OK"); }; } しかし onMouseUp を使うと， すべてのムービークリップが一斉に反応して大変なことになってしまいますから， 普通は onMouseUp ではなくて onRelease だと思います obj.onMouseUp = function() { trace("OK"); }; 　　　　↓変更では？↓ obj.onRelease = function() { trace("OK"); }; ここからが本題ですが， > 『eval("_root.mc"+i)』を利用して同じような構文は削除したいのですが 単にこのようにすれば良いだけではないでしょうか↓？ for (i=0; i<=100; i++) { eval("_root.mc"+i).onRelease = function() { trace("OK"); }; } しかし，これはあまり使われません。 ＃１ の方の書かれていらっしゃるように， for (i=0; i<=100; i++) { _root["mc"+i].onRelease = function() { trace("OK"); }; } のようにするのが普通です。 eval というスクリプトを使うことさえわかれば， ヘルプを検索するとこのようなことはわかると思いますよ。 普通は eval さえわからないので調べようがなくて同様の質問をされている場合が多いです。 またそれであれば質問する意味も理解できます。 しかしなぜ 「『eval("_root.mc"+i)』を利用して…」 までわかっていて， 上のことができないのかがよくわかりません。 --------------------------------- なお， eval や 配列アクセス演算子 をわかっていても， trace("OK"); ではなく， trace(ムービークリップごとに違うことば); を出力させたい場合は，ひょっとしたら困ることがあるかもしれません。 そのような場合はこのようにすれば対処できます↓。 // ことばの値の格納テーブル table_kotoba = ["あ", "い", "う", "え", "お", "か", "き", "…"]; for (i=0; i<=100; i++) { // 動的に変動するMC内の変数に各ことばを代入 _root["mc"+i].kotoba = table_kotoba[i]; _root["mc"+i].onRelease = function() { trace(this.kotoba); }; }
> エラーメッセージが表示されます。 エラーメッセージが表示されるのは、どのタイミングでしょうか? サイトが表示された瞬間か、リンクボタンをクリックした瞬間か。 > FTPされたサイトをみるとエラーがでます。 データの読込が完全に終わっていない部分にアクセスしようとすると、この手のエラーが出る事があります。ローカルでは読込を考慮する必要がないのでFTPでアップロード後にバグが出る事があります。 > しかしこの表示は全員に出るわけでなく今のところ私だけでして、 flash playerのバージョンの影響による可能性が高いと追います。 flash playerには通常のバージョンと、開発者向けのdebugバージョンがあります。debugバージョンの場合はscriptに問題があるとエラーを表示してくれます。通常バージョンの方は表示されない・・・はずです。flash cs3をインストールするとdebugバージョンがインストールされる・・・はずです。 もう少し詳しい状況がわかれば、さらにアドバイスできるかもしれません。
私の環境で見ると異常（異様）に重いページですが， 次の URL のページには RandText.as という as を置いてくれています。 「テキストくるくるライブラリ - pandajustice.jp」 http://www.pandajustice.jp/2007/12/post-1.html あと， 次のURLにも似たようなものがあります。 ワンランク上のテクニックを学びたい人のFlash Creative Technique ～Flashクリエイティブ・テクニック～ http://www.mdn.co.jp/webcre/Flash/Vol29/ →　>> サンプルを見る 　　で出てくる Flash の GAME ボタンをクリックしたときがそれに近い。
AS3でYoutubeを再生する事もできますし Flash版GooleMapAPIも公開されています
存在しないでしょう。 書かれていらっしゃるように on(press) ←書いたムービークリップをマウスで押したとき の間違いか onClipEvent (mouseDown) ←どこでも良いのでマウスを押したとき の間違いでしょう。 既存の onClipEvent は， おそらく次の11個しかないと思います。 onClipEvent (load) onClipEvent (enterFrame) onClipEvent (unload) onClipEvent (mouseDown) onClipEvent (mouseUp) onClipEvent (mouseMove) onClipEvent (keyDown) onClipEvent (keyUp) onClipEvent (data) onClipEvent (initialize) onClipEvent (construct) （最後の２つはヘルプなどにも載っていない特殊なものです。）
フレームに書いてはダメだったと思いますよ。 　フレームに書く ＝ 自動ロード ということになりますから， 外部通信がエンドユーザの意志に従わないことになります。 必ずボタンを選択してクリックするか，キーを押すか， つまりたとえば， on (keyPress "1") { loadVariablesNum("a.txt", 0); } のような感じにしないとダメだと思います。 getURL も load○○ も。
＃１です。 最初のご質問， > XMLを使ってスライドショーを作成した外部SWFを > メインのSWFに読み込ませたいのですが、うまくいかなくて困っています。 と， > このスライドショーを親SWFの中にあるムービークリップの中に入れる > （作成する）必要がでてきてしまいました。 は同じ事のように思えますが...（同じ対処法でできる）。 某mixiなど（"など" は悪い意味ではありません）と， マルチポスト（"マルチポスト" は悪い意味です）などしているのでだんだん混乱しているだけではありませんか？ 聖徳太子ではないのですから。
　まずは、Flash Prayerをダウンロードしてあるのはわかるけれど、 インストールしてあるのだろうか。 レクサスのWebサイトだけれど画面上にある横長のバナー広告のような画像のことですよね？ 　レクサス以外の場所などで表示されない場所はみられませんか。 使っているWebブラウザはInternet Explorerでしょうが、 そのバージョンなども気になるし、 ほかには統合セキュリティソフトなども使っていると思うけど何を入れてあるのだろう。 　あちこちの設定もそうだけれどセキュリティソフトが表示の邪魔をしていることも考えられるかな。 一時的にセキュリティを止めてみて動作を確かめてみてもいいんじゃない。 できることは試してみて、不明な点は補足されておくとわかる方から回答をいただけると思う。 　しかし、今朝、投稿された質問には回答は付かなかったのだろうか。 質問文に不明な点が目立ちますと、投稿を敬遠されてしまうかも知れません。 とはいっても、不得手な事柄ですと質問文に何を列挙すれば良いのかも迷うところかも知れません。 お節介でしかないかも知れないけれど、これに懲りることなく頑張ってほしい。
> 一般的にFlashサイトというのは > ロード画面のswfと、サイト内容のswfを別に作っているのでしょうか？ 知りませんが私の見た感じ， SWFのフレーム1などに「NowLoading...」のようなものを入れているのがほとんどだと思います。 ８：２ ～ ９：１ くらいのような気がします（気がするだけですが）。 > ロード画面をサイト内容のswfに組み込んでしまうと > 読み込みが遅くなるという記事を見た覚えがあるのですが > その原理がイマイチ解りません。 読み込みが遅くなるということはないでしょう。 と言うか，やたら容量のデカイ「NowLoading...」を付けるとその分当然遅くはなりますが， １～３KBくらいの 「NowLoading...」 でしたら，その分が重くなるだけで体感的にはそんなに変わらないと思います。 「NowLoading...」 を本編SWFのフレーム1などに組み込むと， 読み込みが遅くなるのではなくて， 「NowLoading...」 が表示されるのがおそくなることは多々あると思います。 基本的に FlashPlayer は， そのフレームに存在するべきオブジェクトなどが存在しないとそのフレームを表示しないようにできています。 たとえば， フレームに stop() などを何も書かなかった場合， FlashPlayer は フレーム1→2→3→4 と自動再生します。 ただし，仮に フレーム3 にやたら重い画像を置いた場合，フレーム2 でストップして待ちます。 そして フレーム3 がロードされ次第 フレーム3 を表示させます。 それは フレーム3 に限らず フレーム1 でも同じです。 フレーム1 に存在するべきオブジェクトなどが存在しないと， フレーム1 を表示させずに真っ白の画面を表示させます。 つまり，フレーム1 の容量が重い場合， 「NowLoading...」 すら表示されないまま真っ白で止まっています。 フレーム1 の容量は他のフレームに比べて重くなりやすいです。 たとえば， アニメーションの最初から最後まで同じ背景画像を置きたい場合， 当然 フレーム1 に置くということになります。 つまりアニメーションの最初から最後まで全フレーム用の背景画像の容量がフレーム1にのしかかるということになります。 また，音（サウンド）をフレームに配置した場合， その音は普通，タイムラインの再生とともに徐々にロードされますが， 音をスクリプトで制御するような場合は， 音シンボルのリンケージ設定で，フレーム1 に音を配置（書き出し）するような設定にしないとデフォルトではうまく行きません。 また，ゲームなどでキャラクターをライブラリからステージに呼び出す場合も同じくです。 これは，対処法はあるのですが， 対処法を取らないデフォルトの基本仕様では， とにかく フレーム1 に（見えない）ムービークリップや音シンボルをスタンバイさせておく必要があります。 そうなると，フレーム1 だけで SWF全体の９割以上を占めてしまうということもあり得ます。 つまり， 「NowLoading...」 は 90％ を越えてから表示されて，それまでは真っ白。 という現象が起こることもあります。 > 読み込みが遅くなるという記事… は正確には，表示が遅くなるのではないでしょうか。 表示がおそくなることでしたら十分あり得ます。 したがってこれを対処する１つの方法として， > 「ロード画面のswfにサイト内容のswfを読み込む」のと という方法も考えられます。 なおこちらの方法のデメリットは，作成が面倒くさいということですね。 また，複数ファイルになるので持ち運びや移動に気を使う必要も出てくると思います。 一般的には， 「NowLoading...」 をロード専用 SWF を用意するのは， 本当にその SWF が再生専用（テレビみたいなもの（単なる表示用の箱））で， その中にたくさんの違うコンテンツ SWF を表示させるようなときに使うと思います。 違うコンテンツ（番組）ごとに 「NowLoading...」 を用意するよりも， ロード専用SWF（テレビ）に 「NowLoading...」 を入れておくと１つの 「NowLoading...」 で済みますよね。 また， １つのロード専用 SWF に， 同時にたくさんのコンテンツを表示させるときにも使うことが多いと思います。 この場合，同時表示するたくさんのコンテンツ とは JPEG だったりすることも原因すると思います。 JPEG は単なる画像であって，JPEGの中には 「NowLoading...」 は用意できません。 したがって１枚１枚の外部JPEGに対して 「NowLoading...」 を付けるのは SWF の役目となります。
＃２です。 ぜんぜん 変更 になっていませんでした。 ＃２ で書きたかったのは， --------------------------------- > var se01:Sound = new Sound(); 　↓変更↓ var se01:Sound = new Sound(this); でうまく行くのではないかと思いますが。 --------------------------------- です。
Suzuka を起動させて、上のメニューバーにある、 「ツール(T)」→「オプション(O)」 でオプションパネルが出てきますが、 このパネルに右の方にある「パブリッシュ設定」の部分で 　□SWFファイルを圧縮する にはチェックが入っていますよね。 入っていなければチェックを入れてください。 チェックを入れて「SWFファイルの生成」をすると圧縮された SWF が書き出されます。 画質を落とさない場合は、 これ以上圧縮は不可能だと思った方が良いと思います。 ビットマップ画像（JPEGやGIFやBMP）の数を減らして、 なるべく Inkscape の SVG や Paradraw の PDR ベクトルファイルを使用するようにすると、 かなり軽くはなると思いますが、 そういう方法をご質問されているのではありませんよね。 作成技法ではなく圧縮ですよね。 そうすると、それ以上の圧縮は無理だと考えた方が良いと思います。 また、たいていの場合、 同じ物を作成するにしても、Adobe Flash より Suzuka の方が軽く SWF を作成できます。 なぜだかわかりませんが不思議とSuzukaの方が軽いことが多いです。 サーバの１ファイル５MB制限などに引っかかっているのであれば、 単純に SWF ファイルを分割して子SWFをいくつか作成して、 その子SWFを親SWFから loadMovie するのがごく普通の一般的な方法だと思います。 ここ↓にも書いていますが、これが普通の方法だと思います。 「オーサリングにおける Flash の限界について」 　～引用～ > 数～数十メガバイトの Flash ファイルを作成した場合に、 > オーサリング時、またはプロジェクタや SWF ファイルを書き出す場合、 > 処理にとても負荷がかかります。 > このようなファイルを作成したとき、 > Flash または作成したプロジェクタがクラッシュする、 > オーサリング時の動作が遅くなる、Flash ファイルが壊れてしまう、 > 再生がとても遅い、プロジェクタまたは SWF ファイルを > パブリッシュできない等、 > 予想できないトラブルが発生する場合があります。 ↑そもそも数MBのSWFを作成すること自体が危険だと書かれていますね。 　～さらに引用～ > 万が一、16000 フレーム以上必要になるのであれば、 > 16000 フレーム以下にムービーを分割してそれらを > Load Movie でリンクして対処します。 フレーム数だけについて分割を書かれていますが、その他も同じです。 ファイル容量やなどでも限界に達した場合、 SWFを分割して作成し loadMovie もしくは MovieClipLoader.loadClip するのが普通だと思います。
aaa._visible = false; ↓ this._parent[aaa]._visible = false; 上記のように書き換えてください。 私がテスト用に作ったものでは、これで動きました。 test_btnやtest_mc1の位置関係によっては this._parent[aaa]ではなくて _root[aaa]やthis._parent._parent[aaa]としないと動かない場合もあります。
http://nikeplus.nike.com/nikeplus/ SWFAddressで検索すると色々見つかるかと思います。
改行を表す隠し文字” ¶ ”のことだと思います。 「アクション」パネルで「隠し文字」の表示が有効になっている場合、改行の入っている場所に表示されるようになります。 「アクション」パネルのタイトルバーの右端に、”：≡”というようなマークのボタンがあります。 クリックすると、そのパネルに関するメニューが開きます。 「隠し文字」の項目にチェックが入っているかと思いますので、クリックしてこのチェックを外してみてください。
書かれていらっしゃる URL のものは UIコンポーネント を使っていると思います。 おそらく Flash MX の コンポーネント を使っていて， その コンポーネントチェックボックス の絵柄を自分で描き替えているのだと推測できます。 「CheckBox コンポーネント」 とか 「mx.controls.CheckBox」 などと お持ちのヘルプやネットで検索してみると，使い方などが出てくると思いますよ。 ただし，ネット検索の場合は要注意です。 お持ちの Flash のバージョンを書かれていらっしゃいませんが， 基本的にコンポーネントはそのバージョンのものしか使用できませんし， 仕様やスクリプトもバージョンによって異なります。 またActionScriptのバージョンも決まっています。 　Flash MX コンポーネント…AS1.0 　Flash MX 2004 ＆ Flash 8 コンポーネント…ASt2.0 　Flash CS3 Professional コンポーネント…AS3.0 Flash MX 2004 と Flash8 のコンポーネントはほぼ同じ仕様です。 Flash CS3 Professional のコンポーネントは デフォルトでは，ActionScript3.0 用のコンポーネントが出てきますが， 新規ドキュメントを作成するときに ActionScript2.0 を選択すると， Flash MX 2004 と Flash8 などのような ActionScript2.0 コンポーネントが使用できます。 ※UIコンポーネント という名ではありませんが， 　 Flash 4 と 5 でも，既存のチェックボックスはあります。 　 Flash 4 では「ライブラリ」→「ボタン-高度」に入っています。 　 Flash をリッチインターネットクライアント(RIA)としての地位を 　 確立させる構想はすでにこの頃からあったのだと思います。 　 Flash 5 では スマートクリップ(なんとなくFlash1のずっと先祖 　 スマートスケッチ を連想させる名だと思う) として存在します。 　 ただし，それぞれの仕様は全く異なります。 ネットで検索した物が， 作成されているもののバージョンと違っている場合は， 動かないことも当然ありますし，暴走することなどもあり得ます。 ヘルプの場合は，キッチリ読めば大丈夫だと思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ しかし， 書かれていらっしゃるような機能のチェックボックスくらいでしたら最初から自作しても簡単です。 チェックボックス自体をムービークリップで自作して， ムービークリップをクリックしたときに， 「無チェック」⇔「チェック」 の絵柄を切り替えるとともに， 金額計算などをさせれば良いだけです。 たとえば， 「無チェック」状態の四角い塗り入りの絵でも描いて， ムービークリップに変換し， そのムービークリップ内を２フレームにして， フレーム２に「チェック」状態の塗り入りの絵を置きます。 つまり， 　ムービークリップ内のフレーム1…無チェックの絵 　ムービークリップ内のフレーム2…チェック状態の絵 ということです。 ドキュメントの編集に戻って， 作成したムービークリップを選択して例えばコピペで ３つ にします。 そしてそれぞれ３つのチェックボックスムービークリップにインスタンス名を付けます。 この説明では例えば 「myCB0」，「myCB1」，「myCB2」 と付けることにしておきます。 そして計算結果表示用のダイナミックテキストを用意して， 例えば 「my_txt0」 というインスタンス名(変数名ではない)を付けます。 そして， メインムービーのフレームに次のように書けば， それなりに動作するチェックボックスムービークリップができます。 ----------------------------------------- // syoukei0(小計0) の初期値を設定 syoukei0 = 0; // 変数 i が 0，1，2 でループ for (i=0; i<=2; i++) { // myCB0～2 を停止 this["myCB"+i].stop(); // myCB0～2 のフラグを false にしておく this["myCB"+0].flag = false; } // --- myCB0 クリック時の動作を定義 --- this.myCB0.onRelease = function() { // もし myCB0 のフラグが true でなければ if (!this.flag) { // myCB0 をフレーム2で停止(チェック状態) this.gotoAndStop(2); // syoukei0 に 3500 を加算 syoukei0 += 3500; } else { // もし myCB0 のフラグが true であれば // myCB0 をフレーム1で停止(無チェック状態) this.gotoAndStop(1); // syoukei0 から 3500 を減算 syoukei0 -= 3500; } // myCB0 の flag の true・false を切り替える this.flag = !this.flag; // テキストフィールド my_txt0 に syoukei0 を表示 my_txt0.text = syoukei0; }; // --- myCB1 クリック時の動作を定義 --- this.myCB1.onRelease = function() { // もし myCB1 のフラグが true でなければ if (!this.flag) { // myCB1 をフレーム2で停止(チェック状態) this.gotoAndStop(2); // syoukei0 に 700 を加算 syoukei0 += 700; } else { // もし myCB1 のフラグが true であれば // myCB1 をフレーム1で停止(無チェック状態) this.gotoAndStop(1); // syoukei0 から 700 を減算 syoukei0 -= 700; } // myCB0 の flag の true・false を切り替える this.flag = !this.flag; // テキストフィールド my_txt0 に syoukei0 を表示 my_txt0.text = syoukei0; }; // --- myCB2 クリック時の動作を定義 --- this.myCB2.onRelease = function() { // もし myCB2 のフラグが true でなければ if (!this.flag) { // myCB1 をフレーム2で停止(チェック状態) this.gotoAndStop(2); // syoukei0 に 2000 を加算 syoukei0 += 2000; } else { // もし myCB2 のフラグが true であれば // myCB1 をフレーム1で停止(無チェック状態) this.gotoAndStop(1); // syoukei0 から 2000 を減算 syoukei0 -= 2000; } // myCB0 の flag の true・false を切り替える this.flag = !this.flag; // テキストフィールド my_txt0 に syoukei0 を表示 my_txt0.text = syoukei0; }; ----------------------------------------- ただし， 上のスクリプトは Flash MX 以上（FlashMX，MX2004，8，CS3）で使用できる， ActionScript1.0 のスクリプトです。 CS3 をご使用の場合はパブリッシュ設定で ActionScript2.0 以下の SWF をパブリッシュさせる設定にしなければ動きません（エラーになります）。 スクリプトは長いですが， 長い分，１つ１つのチェックボックスに対して各々の指示を書いているので， じっくり読めば何が書いてあって，変えたい場合はどこを変えればいいかがわかると思います。 ここまで作るのには Flash や ActionScript の能力や知識が(ほんの少しだけ)必要ですが， ここから先の応用は，Flashの能力や知識とは関係がありません。 こんな感じで着実に考えて行けば良いだけです。
そもそもFlashで作成したものを動画にしようと思ったことがほとんどありませんし， iMovie などというものも使ったことがありません。 iMovie で検索すると， iMovie（OKWave） http://okwave.jp/search.php3?search_type=word&kw … iMovie（教えて!goo） http://oshiete.goo.ne.jp/search/search.php?statu … 両者とも Macintosh カテゴリばかり出てきますから， 根本的には Macintosh カテゴリの質問かもしれませんよ。 > Flashで作ったものをIMovieに入れることってできるのでしょうか？ SWF（普通のFlashコンテンツファイル）だったらおそらく無理だと思いますよ。 Flashで作成するSWFは動画ではありませんから。 Flashは「動画を取り込む」ということはしますが， 「動画を作成する」というソフトではありません。 しかしながら，「オマケ」機能として一応SWF以外の動画ファイルを書き出すことができますよね。 Mac でしたら 「Quictimeムービー」 に書き出すと， iMovie に取り込めるのではないかと思います（思うだけですが多分できます）。 ［228643］動画として書き出す際の注意点 http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 … > 作っていく上で注意するのはFlashとIMovieの > 画像サイズを合わせるくらいで大丈夫でしょうか？ 逆に何故合わせる必要があるのでしょうか？ iMovie で作成する動画の画面ピッタリに Flash で作成した動画を表示させるのでしたらその方が良いとは思いますが， たとえばFlashで「カエル君キャラ」みたいなものを作成して， 動画の横で「ゲコゲコ」させるのでしたらそもそも合わせる必要はないと思います。 また， iMovie 作成の動画の中で Flash作成動画 を動かすために，わざわざ iMovie を使うのでしょう？ そうでしたら，その動かしたいもののサイズにすべきでしょう。 サイズよりはフレームレートの方が大切だと思います。 30fps の動画を作成するのでしたら Flash作成動画も 30fps にしないと変になると思います。 あと動画は動画であって，Flashコンテンツではないので，ActionScript の使用は無意味だと思います。 ごちゃごちゃ書きましたが， とにかくFlash側から言えることは， Flashの「オマケ」機能を使って 「Quictimeムービー」 あたりに動画を書き出すと，iMovie に取り込めると思います。 そのくらいです。 それ以外は場合によって変わりますし，iMovie の操作方法などは Macintosh カテゴリの方が良いとは思います。
モーフィング とはどのようなレベルのことを書かれていらっしゃるのでしょうか？ シェイプトゥイーンのように A という文字の形が B という文字の形に変形されるようなビットマップ画像のモーフィングでしたら無理ですよ。 つまり モナリザ は ダ・ヴィンチ にはなりません。 A という形が写った写真をユラユラと揺らせたり，変形させたりというのをモーフィングというのでしたら， それは BitmapData クラスなどを使用すればできるものもあります。 つまり モナリザ を ブス にすることは可能です。 A は A であって B にはなりません。 BitmapData クラスなどを使用すれば A を（あくまでもAを土台とした画像を）変形することはできます。 場合によっては，平面的な絵を奥行きのある絵に変えることもできます。 しかし A は A です。 なぜ Flash にビットマップのモーフィングを求めていらっしゃるのかよくわかりませんが， もし A が B になるようなモーフィングを求めていらっしゃるのでしたら， 最初からそういうビットマップ（JPEGなど）加工用のモーフィング作成ソフトで， JPEGパラパラマンガみたいなものを作成するか，動画を作成して，Flash に埋め込めば良いだけだと思いますが。 Flash は JPEG などの加工ソフトではありません。 モーフィング作成ソフトとかはけっこうありますよ↓ http://www.google.co.jp/search?hl=ja&q=%E3%83%A2 … > BitmapDataクラスの欠点 動作が重くなることが多いですからなるべく使わない方が良いです。 小さなものに使うのならたいてい問題ないと思います。 また，少なくとも FlashPlayer8 が必要です。MacOS9 や Windows95 では見えません。
＃１です。 大変遅くなりました。 >ちなみに他のレイヤーが選択されたとき、 >前の選択されたレイヤーのカウントを >０にする事なんてできるのでしょうか？？ ＃１ で書くのを忘れていたのですが， レイヤーの選択などそもそもできません。 ドラッグしているのはムービークリップです。 this.startDrag(); と this.stopDrag(); の this はボタンが配置してあるムービークリップです。 また， // 変数 count の値を 0 にしておく count = 0; の変数 count が格納されている場所もムービークリップです。 決してレイヤーではありません。 レイヤーをドラッグしているなどと思うといつまで経っても解決しないと思います。 ですから， たとえばドラッグするムービークリップが２つあるのでしたら， それぞれにインスタンス名を付けます。 インスタンス名は，ムービークリップを選択した状態で下の（Flash5以外はステージの下側にある）「プロパティインスペクタ」で命名します。 たとえば 「dragMC1」 と 「dragMC2」 というインスタンス名を付けます。 そして， 「dragMC1」ムービークリップ内のボタンには， // ボタンを押したとき on(press){ // 「dragMC2」内の変数 count を 0 にする _root.dragMC2.count = 0; } などというスクリプトを付け足すと （付け足すのは _root.dragMC2.count = 0; だけですよ）， _root にある dragMC2 内の変数 count の値が 0 になります。 「dragMC2」ムービークリップ内のボタンでしたら， _root.dragMC1.count = 0; を付け足すということになります。 ・レイヤーは選択もドラッグもできない。 ・ムービークリップにはインスタンス名を付けてその中の変数を他のボタンから変える ということです。
> _xmouse、_ymouse でマウス座標を得られますが それは省略した書き方です。 本当は this._xmouse や this._ymouse です。 省略をするからわからなくなるのだと思います。 _alpha = 50; と書いても何の _alpha（不透明度） を 50 にするのかわかりませんよね。 my_mc._alpha = 50; だと，my_mc の _alpha（不透明度） を 50 にする とわかります。 それと同じです。 _xmouse とは ムービークリップ(またはボタン)の _xmouse プロパティです。 同じく， _ymouse とは ムービークリップ(またはボタン)の _ymouse プロパティです。 ActionScript2.0 らしく書くと， MovieClipクラスの _xmouseプロパティ，_ymouseプロパティ です。 もっと詳細に書くと， _xmouse や _ymouse は，ムービークリップ(またはボタン)の基準点から見た座標です。 例えば， _xmouse というスクリプトをA というムービークリップに書いたのでしたら， A というムービークリップの基準点を (0 , 0) とした座標が取得できます。 ムービークリップに依存しない絶対座標を取得したいのでしたら， _root._xmouse や _root._ymouse と書けば， ステージ左上が基準となった座標が取得できます。 _root も広義のムービークリップの一種です。 _root の基準点はステージの左上のコーナーです。
Flashの末尾にアドレスのフレームを追加すればいいのでは？
Flash や ActionScript とは関係なく， 日常生活でするようなことを考えれば良いだけだと思いますよ。 　　体調によって走る速さがコロコロ変わる A君 と， 　　いつも一定速度で走る B君 がいたとします。 　　その A君 と B君 を競争させて 　　遅い方の走る距離を記録としていけば， 　　やたら突っ走る記録にはなりません。 　　また，遅い方がゴールするということは， 　　２人ともゴールしているということになります。 A君 と B君 でどっちが速いかを比べるメソッドなど知らなくても if文 で比較して分岐すれば良いのです。 （下の例では if文 ではなく，Math.min で遅い方の数値を取りだしていますが。） ステージ上に _root の フレーム1 だけに存在する横長の塗りの長方形を描いて （長さや高さは適当）， その塗りをムービークリップに変換して （変換するとき基準点は左にしておく）， そのムービークリップに次のように書けば突っ走らないローディングバーができます。 ------------------------------------------- // このムービークリップが表示されたとき onClipEvent (load) { // 親（_root） を停止 _parent.stop(); // このムービークリップの_xscaleを0にしておく this._xscale = 0; // 変数 cnt の初期化 （←一定速度で走る B君） cnt = 0; } // 毎フレーム進む時間ごとに実行 onClipEvent (enterFrame) { // // 変数 total に 親（_root） の総バイト数を代入 total = _parent.getBytesTotal(); // 変数 loaded に 親（_root） のロード済みバイト数を代入 loaded = _parent.getBytesLoaded(); // ロードパーセントを算出 （←走る速さが変わる A君） percent = Math.floor(loaded/total*100); // // 一方 変数 cnt に 5 ずつ加算 （←一定速度で走る B君） cnt += 5; // // _xscale を cnt と percent を比べた小さい方の値にする this._xscale = Math.min(cnt, percent); // // もし this._xscale が 100 以上になれば if (this._xscale>=100) { // 親（_root） を再生 _parent.play(); } } ------------------------------------------- 　
flaでなくてFLVではないでしょうか
はい。使えると思います。 CS3.0でAS2.0を使用する方法は以下のURLを参照下さい。 http://itpro.nikkeibp.co.jp/article/COLUMN/20070 …
>Flashでビットマップ画像のモーフィングは不可能とよく目にするのですが、 > どういった感じに実現できないのでしょうか？ やってみればわかるでしょう。 ぜんぜんモーフィング（シェイプトゥイーン）しません。 シェイプとは形です。 画像がシェイプになっているその時点ですでにベクトルデータになっているものです。 つまり...， 代数幾何 や 線形代数 をやっていないと今ひとつわからないかもしれませんが， ベクトルデータとは長さと方向を持つ線形（矢印のような）データで， つまり数式（行列）などで表せるデータです。 一方，ビットマップデータとは， (x，y) として， (0，0)の色は赤紫 (0，1)の色も赤紫 (0，2)の色は黄 (1，3)の色は黄緑 　…　… (1，0)の色は赤 (1，1)の色は赤紫 (1，2)の色は青 (1，3)の色は青緑 　…　… (2，0)の色は青 (2，1)の色も青 (2，2)の色は黄緑 (2，3)の色は緑 　…　… 　～　～ となっているデータ（ドットデータ）のことで数式では表せません。 表せたとしても，その数式の方がすごいファイル容量になるデータです。 つまり数式で表せないので， PCが次の形（シェイプ）を計算できないのです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ ステージ上に ビットマップ画像 を読み込んで， その ビットマップ画像 を選択した状態で， 「修正」→「ビットマップ」→「ビットマップのトレース」辺りで， ビットマップ画像がシェイプ（ベクトル画像）に変換できると思います。 そのシェイプに変換した画像でしたら， 理論上シェイプトゥイーンはできるはずですよ。 ただし， 人間の見た目で，まともなモーフィングができているとは思えない事態になるとは思いますが...。
Flashのバージョンにもよると思いますが、 Flash MXでFlash Lite用のファイルを作成する場合、Flash Lite対応アップデータ「FlashLiteInstall_ja.exe」をダウンロード。インストール。 Flash MXを立ち上げると、パブリッシュ：Flash Player6ボタンをクリックする。 バージョンの変更：Flash Player4に変更 Flash CS3を使用している場合は、 上記と同じところを選んであげると、Flash Liteを選択できます。
＃１です。 > <?xml version="1.0" encoding="utf-8"?> > <file> > <fileNode name="1" x="20" y="20" text_a="店名(1)" text_b="店舗詳細(1)" /> > <fileNode name="2" x="40" y="40" text_a="店名(2)" text_b="店舗詳細(2)" /> > <fileNode name="3" x="60" y="60" text_a="店名(3)" text_b="店舗詳細(3)" /> > </file> > > という形にしたいのですが、 ということですが， データを取ってくる取り方（変数の名指しのしかた）が違うだけのことで， LoadVars も XML もほとんど同じですよ。 XML データに 「mcdata.xml」 という名前を付けて任意のフォルダに保存し， そのフォルダにFlashの新規ドキュメントを作成して， 次のようなスクリプトをフレーム1に書いて， 「制御」→「ムービープレビュー」すると，XML内のデータの取得のしかた（呼び方）がわかると思います。 --------------------------------------------------- // XML インスタンスを作成 myXML = new XML(); // ★これが加わることがLoadVarsと違うくらい // XML 内の余分な空白や改行を無視する設定にする myXML.ignoreWhite = true; // XMLがロードされたときに実行する関数の定義 myXML.onLoad = function(XMLOK) { // XML のロードが成功すれば if (XMLOK) { // XML探査用関数 probeXML ↓ を実行させます probeXML(); } else { trace("XMLファイルのロード失敗"); } }; // 外部XMLファイル「mcdata.xml」をロード myXML.load("mcdata.xml"); //---XML内探査関数の定義--- function probeXML() { trace("●myXML＝"+myXML); trace("●myXML.firstChild＝"+myXML.firstChild); trace("●myXML.firstChild.childNodes.length(データ数)＝"+myXML.firstChild.childNodes.length); trace("●myXML.firstChild.childNodes[0]＝"+myXML.firstChild.childNodes[0]); trace("●myXML.firstChild.childNodes[0].attributes.name＝"+myXML.firstChild.childNodes[0].attributes.name); trace("●myXML.firstChild.childNodes[0].attributes.text_a＝"+myXML.firstChild.childNodes[0].attributes.text_a); } --------------------------------------------------- やたら横長ですが。 つまり， 書かれていらっしゃる XML の構造は， 次のようになっている（次のような名前で呼べる）ということです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ <?xml version="1.0" encoding="utf-8"?> <file> ←firstChild 　　<fileNode name="1" ～略～ (1)" /> ←firstChild.childNodes[0] 　　　　　　　　　↑firstChild.childNodes[0].attributes.name 　　<fileNode name="2" ～略～ (2)" /> ←firstChild.childNodes[1] 　　<fileNode name="3" ～略～ (3)" /> ←firstChild.childNodes[2] </file> ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 　　
・一番初めのフレームにボタンを置きます。 ・ボタンに on(release){ gotoAndPlay(2); } と書きます。 ・一番最後のフレームに gotoAndPlay(2); と書きます。 でループされます。 もしわからないことがあったらまた書き込んでください。 どんなゲーム作ってんですか？おもしろいやつができるといいですね。
私が知らないだけなのか、そのような関数は無いみたいです。 ですので、発想を変えて、スペースの個数ではなくてスペースで区切った配列の個数を調べてみたいと思います。 ActionScriptって正規表現なるものが無いみたいで、ちょっと回りくどいやり方ですが、 １．全文を改行で区切り、スペースで連結し、単語間をスペース文字のみで統一。 ２．split(" ")で実際に区切る。 ３．できた配列を並べ替え、スペースが連続していたと思われるだけ個数を減らす。 １と３は必要なければいりません。 zenbun="This is sample.\r\nWhat a fat rat that rat is!\r\n\r\n end"; trace(zenbun); word=zenbun.split("\r\n").join(" ").split(" "); words=word.length; trace("配列の要素数："+words); word.sort(); for(i=0;i<=words;i++){if(word[i]!=""){break;}words--;} trace("処理後要素数："+words); 例文として空行があったり、スペースが２つ続いたりと、面倒なものを作りましたが、 そんな変な文章を扱うことは無いというのなら簡略化していいと思います。 例文の内容は気にしないでくださいｗ
締め切ります。
http://www.google.co.jp/search?q=FLASH%20%E3%82% … とりあえず、そんな感じの単語で検索してみたけど・・・
質問を絞ってください。 また実際作ってみて躓いたところを具体的に教えてください。 下にあるリンク先は有名なFlashゲーム制作の参考ページです。 拝むといいかもしれません。非常にすばらしいページだと思います。 ちなみに私は足を向けて寝たことはありません。 参考URL：http://hakuhin.hp.infoseek.co.jp/main/as.html
FlahはHTMLタグを一部サポートしていますが 上記のようなタグの表現は難しいと思います。 しかしながら、同じ機能のインターフェイスを実装することは可能です 個人的にはこのような案件の場合にはFlexを使用します
外部テキスト，内部テキストに関係なく， ActionScript でテキストフィールドに文字を代入すると文字間隔の設定は無視されますね。 たとえば， my_txt.text = "Macromedia Flash MX 2004"; これでもダメです。 Flashのバージョンを書かれていらっしゃいませんが （AS2 をご使用ということからでは FlashMX2004 以上 までしかわかりません）， Flash 8 以降（要 FlashPlayer8以降用 SWF をパブリッシュ）でしたら， TextFormatクラス の letterSpacing プロパティ を使えばできます。 ---------------------------------------- System.useCodepage = true; // ★TextFormatクラスのインスタンス myTF を作成 var myTF:TextFormat = new TextFormat(); // ★文字間スペースの量を 10 に設定 myTF.letterSpacing = 10; var my_lv:LoadVars = new LoadVars(); my_lv.onLoad = function(success:Boolean) { if (success) { my_txt.text = my_lv.textContent; // ★テキストフィールドに myTF を適用 my_txt.setTextFormat(myTF); } else { trace("Error loading/parsing LoadVars."); } }; my_lv.load("myExternalText.txt"); ---------------------------------------- TextFormatクラス自体は FlashMXからでも使用可能です。 letterSpacing プロパティ を使うに Flash 8 以降が必要です。 Flash MX 2004 (FlasjPlayer7)以前はこれは使えません。 また良い方法は知りません。 ちなみに， スタイルシートを適用させるとできるかもしれないと思ってやってみましたが， これも FlashPlayer8 以上にパブリッシュする場合しかうまく行かないようです。 ---------------------------------------- System.useCodepage = true; // ★ TextField.StyleSheetクラスファイルの読み込み import TextField.StyleSheet; // ★TextField.StyleSheetクラスのインスタンス mySS を作成 var mySS:TextField.StyleSheet = new StyleSheet(); // ★スタイルのセット mySS.setStyle("p", {letterSpacing:'10'}); // ★テキストフィールドにスタイルを適用 my_txt.styleSheet = mySS; var my_lv:LoadVars = new LoadVars(); my_lv.onLoad = function(success:Boolean) { if (success) { // ★ pタグ の中にテキストを入れる my_txt.htmlText = "<p>"+my_lv.textContent+"</p>"; } else { trace("Error loading/parsing LoadVars."); } }; my_lv.load("myExternalText.txt"); ---------------------------------------- その他， 　文字の数だけ for文ループなどで createTextField() して， 　それぞれのテキストフィールドの間隔（_x座標）を操作する。 などという方法もなくはありませんが，あまり良い方法とは言えませんね。
＞経路での盗聴対策にSSLを勉強せねば。 SSLは通信内容の暗号化ではありますが、通信先を隠蔽できるものでは無いのでご注意ください。 ＞Crypt(暗号化)した認証に加え、mp3のあるURLを定期的に変える必要があるということでしょうか？ うーん... これ、どうやって説明しようかと思案して途中でやめちゃったんですが... 例えば https://hoge/movie.php?id=h6vZJf1fdmJJJKkie64 とかでmp3ファイルが帰ってくる仕様だとします （拡張子はヘッダで指定できれば必要ないように思います） この引数部分...[h6vZJf1fdmJJJKkie64]が ユーザ毎×アクセス毎×動画毎に変動すれば、 あてずっぽうにしても、盗み見は困難になるということです 方法としては 認証時にチケットを発行し、サーバとクライアントで共有します （チケットはセッションIDでもかまわないのかもしれません） ユーザID+ユーザPwd+動画ファイル名 の連結をチケットをSeedにして暗号化した結果が 仮に[h6vZJf1fdmJJJKkie64]だとします サーバ側ではチケットで復元して、 ユーザチェック、ファイルをリレーする といった感じでしょうか。 短時間で、考えてみたので穴があるかもしれませんが 例えば趣向は違いますが、Flickrの認証&画像取得APIなどは なるほど、と感心した覚えがあります。 どこまでやるか、という事に尽きますが どちらかというとサーバ側のセキュリティや 不正アクセスの監査等もかなりかなり重要で効果的だと思います。 じゃあ、私ならどうするか、ですが認証サーバは頑張って作るにしろ、 まず、Flashから呼び出し可能で動画配信サーバで盗み見が難しいサービスを探してみます。 このへんの勉強って、徒労に終わったり、頑張っても報われなかったり、専門家にはかなわなかったりしますからねぇ...
推測中の推測で申し訳ございませんが。 イラストレーターの線が問題になることが多いようです。 私の場合はFLASH８で制作して問題が起こり、MXで保存しなおすと解決しました。 参考になればと思う限りの次第であります。
こんにちは！ ＞this._y = Math.sin(rad)*10+yy; の部分で風船をy方向振動させてるのですね！ でしたら"10"を変数(仮にa)に書き換えます。そうすると this._y = Math.sin(rad)*a+yy; となりますね！これでロールオーバー時にaの数値をいじることで 停止したりできます。 aについて例えば、 onClipEvent(onload){　//aの初期値 　a=10; } onClipEvent(onRollOver){　//ロールオーバー時に振動停止 　a=0; } onClipEvent(onRollOut){ //ロールアウト時に振動再開 　a=10; } を追記してやります。 停止を滑らかにしたい場合はaをフレーム毎にマイナスして下さい。
＞背景を黒にしているのですが どこの背景でしょうか？ htmlとFlashの両方に背景を設定できていますか？ ＞一瞬、白くピカっと光ります swfを読み込むまではhtmlでの背景色が、 Flashの背景色のデータを読み込んでからFlashが再生可能になるまでの間は Flashに設定した背景色が表示されます。 擬似的に背景をつけた場合（色をつけたものを背景に表示するなど）は初期設定の白が見えるかもしれません。 htmlとFlashの間で背景色を統一するといいと思います。 ＩＥ７では起きなかったですが、どんなときもとりあえず白を表示するブラウザがあるのかもしれません。
レイヤーの構成が 　レイヤー 　【フォルダ】 　　　├ムービークリップ 　　　└ムービークリップ ↑このようになっているムービークリップがステージにいくつかあり、それぞれのムービークリップ内のフォルダごと表示・非表示を切り替える、という話ではないかと思ったので＃３の作例をご紹介したのですが。 そうではなく、メインのタイムライン（ムービー）のレイヤー構成が 　【フォルダＡ】 　　　├ムービークリップ《Ａ》 　　　└ムービークリップ《Ｘ》 　【フォルダＢ】 　　　├ムービークリップ《Ｂ》 　　　└ムービークリップ《Ｙ》 このようになっていて、【フォルダＡ】や【フォルダＢ】に含まれるレイヤーごと表示・非表示を切り替えたいとのことでしょうか？ ＃３にも書きましたように、レイヤーはムービーの制作時に作業をしやすくするものであって、スクリプトでは操作できません。 スクリプトで表示・非表示を切り替えたり、移動や拡大などの変形を加えたい時はムービークリップを利用します。 例えば、【フォルダＡ】に含まれるレイヤーの表示を操作したいのであれば、【フォルダＡ】と同じ内容のムービークリップシンボルを作ります。 ムービークリップもメインのタイムラインと同様に、レイヤーを利用することができます。 メインのタイムラインにあるレイヤーフォルダの内容を１つの独立したムービークリップシンボルにまとめ、メインのタイムラインにはこれのインスタンスを置いてスクリプトで制御することが、最も確実ではないかと思います。 シンボルを複製して簡単に・・・というわけにはいきませんが、フレームのコピーと複数フレームの編集機能を使うと少しはラクにシンボルに移すことができます。 １つのレイヤーフォルダの内容を１つのシンボルにしてインスタンスをステージで扱うのであれば、ステージには３つのムービークリップが並んでいるだけの話になりますから、＃１の要領で表示を切り替えられるようになります。 ------------------------------------------------------------- 表示を切り替えたいレイヤーフォルダのレイヤーに登場するものが全てムービークリップだとすると、enterFrame イベントでラジオボタンの選択状況を監視して表示を切り替えることもできます。 これは、次のように考えます。 今後登場する予定のムービークリップも含めて、操作するムービークリップの名前を全て配列変数に登録しておきます。 enterFrame イベントを利用してラジオボタンの選択状況を常時監視し、選択されたボタンに応じて、この配列変数を見ながらムービークリップの _visible プロパティを書き換えます。 ActionScript では、存在しないムービークリップに対して指示を出しても何も起こりません。 まあ、こういうことをアテにする作り方は安全・確実とは言えないのですが、１つの方法としてご紹介します。 ただし、フレームレート分の１秒ごとに全ムービークリップの _visible プロパティを書き換える処理が必ず行われるために、対象となるムービークリップの数が多いと処理が重くなる可能性もあります。 トゥイーンを利用しているムービークリップは、同じ名前を付けておくとキーフレームが変わっても同じインスタンスと見なされますが、１つでも名前を間違えると違うものとして扱われますのでご注意ください。 ************************ ActionScript では、”参照”といって、ムービークリップなどのインスタンスや変数・関数が格納されているメモリ上の場所を表す情報を扱うことができます。 例えば、ref という変数にムービークリップ clip の参照を入れておくと、 　clip._visible = true; と 　ref._visible = true; は同じ意味になります。 参照を変数に代入するには、その時点で、対象となるムービークリップなどが存在していなければなりません。 今回はスクリプトが実行される時点ではまだステージに登場していないムービークリップも扱いたいのですが、ステージにないムービークリップの参照を代入すると、undefined （未定義）という値が記録されてしまいます。 しかし、ActionScript には文字列を参照に変換できる機能があります。 この機能を利用して、配列変数にはムービークリップの名前を入れておき、必要な時に参照に変換して使うことにします。 メインのタイムラインに、複数のレイヤーをまとめたフォルダＡ～Ｃがあるとします。 これらのフォルダにはとりあえず、それぞれレイヤーが２つずつあって、そのレイヤーにはそれぞれ 　【フォルダＡ】 　　　├ clip_a 　　　└ mc1 　【フォルダＢ】 　　　├ clip_b 　　　└ mc2 　【フォルダＣ】 　　　├ clip_c 　　　└ mc3 というムービークリップが配置されているとします。 今回は配列変数を見ながら総当たりで操作しますので、ムービークリップの名前に規則性がなかったり、レイヤー内の途中のフレームから名前が変わるなどの状況にも対応できます。 ただし、各キーフレームに登場するムービークリップ全てにインスタンス名が付いていることと、配列変数に登録忘れがないことが条件です。 ラジオボタンの data パラメータには、どのフォルダを操作するのかの手がかりを入れます。 とりあえず、フォルダＡを表示するボタンに” a ”、フォルダＢに” b ”、フォルダＣに” c ”、そして全部表示するボタンには” all ”の文字列を入れるとします。 スクリプトは、ラジオボタンと表示するムービークリップがあるタイムラインのフレームに記述してください。 （↓各行頭に全角のスペースが入っています。コピーする際はご注意ください） /***********************************************************/ 　//表示・非表示を切り替える全ムービークリップの名前のリスト 　clip_list = new Array(); 　clip_list = 　[ 　　"clip_a" , "mc1" , 　　"clip_b" , "mc2" , 　　"clip_c" , "mc3" 　]; 　//全てのムービークリップを表示または非表示にする関数 　//引数　visible_mode：true（全て表示）またはfalse（全て非表示） 　function All_OnOff( visible_mode:Boolean ) 　{ 　　var i , temp; 　　//リストに含まれる全てのムービークリップの_visibleプロパティを書き換える 　　for( i = 0; i < clip_list.length; i++ ) 　　{ 　　　//リスト内の名前をムービークリップの参照に変換 　　　temp = this[ clip_list[ i ] ]; 　　　//_visibleプロパティを指定の値に書き換える 　　　temp._visible = visible_mode; 　　} 　} 　//ラジオボタンの選択状況を監視する処理 　this.onEnterFrame = function() 　{ 　　var sel_data; 　　//現在、選択されているラジオボタンに設定されている値を取得 　　sel_data = radioGroup.selection.data; 　　//選択されているボタンに応じてムービークリップの表示・非表示を切り替える 　　//全表示(sel_data = "all")以外は、一旦全てを非表示にしてから該当するものだけ表示 　　switch( sel_data ) 　　{ 　　　//レイヤーフォルダＡを表示 　　　case "a": 　　　　All_OnOff( false ); 　　　　this.clip_a._visible = true; 　　　　this.mc1._visible = true; 　　　　break; 　　　//レイヤーフォルダＢを表示 　　　case "b": 　　　　All_OnOff( false ); 　　　　this.clip_b._visible = true; 　　　　this.mc2._visible = true; 　　　　break; 　　　//レイヤーフォルダＣを表示 　　　case "c": 　　　　All_OnOff( false ); 　　　　this.clip_c._visible = true; 　　　　this.mc3._visible = true; 　　　　break; 　　　//全レイヤーフォルダを表示 　　　case "all": 　　　　All_OnOff( true ); 　　　　break; 　　} 　}; /***********************************************************/ 上記のスクリプトでは、冒頭にある配列変数 clip_list でムービークリップの名前を管理しています。 例えば、フォルダＣには clip_c ・ mc3 ・ mc_z の３種類が登場する、というような場合は 　clip_list = 　[ 　　"clip_a" , "mc1" , 　　"clip_b" , "mc2" , 　　"clip_c" , "mc3" , "mc_z" 　]; このように変更し、フォルダＣのを表示する処理である、switch 文の case "c": の部分に 　this.mc_z._visible = true; を追加していただくと対応できます。 ある特定のフレームに登場するムービークリップだけ表示が残ったり、非表示のまま戻らなかったりする場合は、配列変数に登録した名前とインスタンスの名前が一致しているか・インスタンス名の付け忘れがないかどうかを確認してみてください。 ------------------------------------------------------------- 各キーフレームに存在するムービークリップ全てにインスタンス名を付け、更にその名前を配列変数の中に記述するとなると、大変な手間になる上に、間違いや不慮のトラブルが起こりやすくなります。 また、スクリプトで制御できない描画オブジェクトやグラフィックシンボルなどは、どうやっても表示を切り替えることができません。 複雑な構成の作品であるほど、苦労した割には実りの少ないと感じる、本当に応急的な方法です。 やはり、レイヤーフォルダの内容をシンボルに移して、１つのムービークリップとして扱えるようにする方法が、簡単かつ確実だと思います。 別のタイムラインにあるフレームをシンボル内にコピーすると、位置がズレて調整が少々面倒ですが、ムービークリップにまとめているのであれば、スクリプトで操作できない描画オブジェクトなどが含まれていても簡単に表示・非表示を切り替えられます。 後から面倒な手間をかけなくても済むにように、いくつかのオブジェクトを同時に操作したいものは最初から１つのムービークリップ内にまとめておくことが得策です。 Flash Professional 8 をお使いでしたら、これと似たような発想で作る、フォームアプリケーションやスライドプレゼンテーションがあります。 フォームアプリケーションのフォームは１つのムービークリップになっていて、この中に自分のムービークリップや絵などを挿入し、フォームを重ね合わせて作品を作っていきます。 興味がありましたら、研究してみてください。
縮小を 50％ で固定するスクリプト on (release) { _root.screen._xscale -= 20; _root.screen._yscale -= 20; // もし scale が 50 以下になれば if (_root.screen._xscale<=50) { // scale を 50 で固定 _root.screen._xscale = 50; _root.screen._yscale = 50; } } 拡大縮小を元に戻すスクリプト on (release) { _root.screen._xscale = 100; _root.screen._yscale = 100; } 論理的に普通に考えれば良いだけです。 play stop gotoAndPlay gotoAndStop などはフレーム移動のスクリプトで， フレームによってモーショントゥイーンなどで拡大縮小させる場合に限って有効かもしれませんが， それ以外は通常サイズとフレームは全く関係ありません。 関係のないことを複雑に考えるとダメです。
こんにちは。 僕も昔Flashがある程度使えた感じでした。 でも、phpを利用すれば flashサイト内にアクセスカウンターやBBSを作る事ができます。 従来より更に、統一され、オリジナルの高いサイトが完成して、見てくれる人も喜んでくれましたよ。 カウンターもBBSも借りれば済む話なのですが、デザインを追及したかった僕にとって,phpは必要不可欠な物です。 当時参考にしたサイトが今も残っていたのでURLを貼っておきますね♪ 段階を踏んだ説明で分かりやすいと思います。 参考URL：http://park18.wakwak.com/~little-box/actionscrip …
> ナイアガラのみをswfで再生させている時は、あまり気にならなかったのですが、 そうですか。 CPUは色々なのでその辺は色々だと思います。 私は最初から，気になって気になって... という状態でした。 特に＃１の方は， 「一応ロースペックなPCでも動作確認済み」とは書いていますが， CPU500MHzくらいではほぼ限界です。 すでにカクカクになっているのを，耐えられる限界までのスクリプトにしています。 CPU200MHz以下だと１コマ（１フレーム）１秒くらいになるかもしれません。 > ASでグラフィックを動かしている場合に > もう少しスムーズに動かす方法はないでしょうか？ 無駄（PC的に大きな処理）を省くことです。 それも 「描画処理の無駄」 です。 いちばんの無駄は拡大です。 あと，ランダムのゆらぎも省略させた方が良いかもしれません。 本当はアルファやブラーや加算を使うともっと面白いことはできるのですが， その辺は使わないようにかなり気を使ってはいるのです。 つまりアルファやブラーや加算という無駄は書いている状態ですでに省略しているのです。 その辺(拡大させないくらい)が AS で動きを軽くする限界でしょう。 すごい AS を使えば使うほど，良い物はできるのですが， 理想と現実は違うのでいかに誤魔化すかという部分ですね。 というか，AS 以前に根本をどうするかを考える部分が大切です。 AS以外になると， ベクトルデータはモニタ上に描画するだけでかなりなCPUを使いますから， アルファ抜きビットマップ画像を用意して， それをムービークリップに変換して attachMovie する方が良いです。 質問者さんが再度質問（補足）されているように， ActionScriptでベクタデータを描画するより，attachMovie した方が良いのです。 しかし AS のみで至急ということなので， 色々説明するのは時間がかかると思い， ＃１ では苦肉の策で全てASで回答しているだけです。 attachMovie するのでしたら， ベクタよりもビットマップの方が良いです。 つまりだんだん AS などというものから離れて行くのです。 （結局 AS は１つの手段であって， 　肝心なのは工夫と発想と地道な作業です。 　ASなんてどうでもいいものだと私は思います。 　ASより良いものがあれば当然そちらを選ぶべきです。) 上で書いたように， ◎拡大をさせない ◎ビットマップ画像を使う というのでしたら，最初から方向は変わります。 ランダムな位置に火の粉が描いてある大きな画像を上下に連結して， 無限ループさせればものすごくCPUの負担は軽減されます（1/100～1/1000くらいになる）。 つまり，次のような火の粉（あ～と）の画像を用意します。 　あ　　　い　う　　　　　え　　　　お 　　　か　き　　　く　　　け　　こ 　さ　し　　　す　　　せ　　　　　　そ 　　　　　た　ち　つ　　　　て　と これを縦に二重連結します。 　あ　　　い　う　　　　　え　　　　お 　　　か　き　　　く　　　け　　こ 　さ　し　　　す　　　せ　　　　　　そ 　　　　　た　ち　つ　　　　て　と 　あ　　　い　う　　　　　え　　　　お 　　　か　き　　　く　　　け　　こ 　さ　し　　　す　　　せ　　　　　　そ 　　　　　た　ち　つ　　　　て　と これを折り返すように ActionScript で動かすと無限ループな火の粉ができます。 わかりにくいかもしれませんがこんな感じです↓。 Green Village http://acchan.s55.xrea.com/flash.html →スクロールメニュー （FLASH4） 　 http://acchan.s55.xrea.com/flash/scroll_menu/scr … これだと， onEnterFrame で動かす画像は１つで済みます。 火の粉が見える上下の限界でマスクをかけても良いですし， 四角くくり抜いたシェイプの下レイヤーに火の粉を置いても良いです。 （マスクは使わない方がCPCの負担は少なくなります。） 上に書いたことはモーショントゥイーンは使っていません。 基本的にASで動かしています。 しかし，ぜんぜん違う発想のものです。 実は，私は最初こちらの方法を考えていたのですが， これは決して「至急」な方法ではない（ASだけでちゃらちゃらと誤魔化せるものではない）。 全てASでするのならいっそのこと， 火の粉の動きはバラバラの方が良いかもしれないので，バラバラのMCにしよう。 バラバラだったら大きさも変えられるなあ。 もっと色々したいけどCPUを考えるとこの辺が限界かなぁ。 などと考えて前回の回答を書いたのです。 「何を優先するか」 によって方法は変わります。 またASもぜんぜん違う物に変わります。 色々考えてやってみるのが一番だと思います。
flr はActionScript部分が抽出された単なるテキストファイルでしょう？ そんなものがあっても普通は何もできませんよ。 ソフトのあるなしの問題ではなく，ActionScript は Flash を構成する部分のごく一部の部品です。 テキストファイルならメモ帳でも作成できます。 【例1】 gotoAndPlay(5); （５フレーム目にジャンプして再生） というActionScriptがあったとしも， フレーム5（５コマ目） が SWF になければジャンプすることもできませんし， 仮に フレーム5 を存在させたとしても（どうやってするのかは知りません）， フレーム5 に何も配置されていなば何も表示されないだけです。 【例2】 _root.my_mc.loadMovie("gazou.jpg"); (myMC というインスタンス名のムービークリップに gazou.jpg をロード) 仮に gazou.jpg を外部に用意しても， myMC というムービークリップが SWF 内に作成されていなければ何にもロードされません。 「ASのみで，全て作成したようなもの（そんなの普通はありませんが）」でしたら， SWFにできますよ。 ParaFla! とか Suzuka とかで（ただし両者とも ActionScript1.0 まで）。 Vista では不完全ながら使えることは使えるらしいです。 私が回答したもの数例ですが↓。 「QNo.4037708 Flashでレーダーチャート」 http://okwave.jp/qa4037708.html →＃１ のActionScript 「QNo.4033403 mcのドラッグ操作について」 http://okwave.jp/qa4033403.html 「QNo.3453699 二次元配列」 http://okwave.jp/qa3453699.html →＃６ で 「ライツアウト」というゲームをActionScriptだけで作成しています。 こういう極例外的なものであれば， ParaFla! とか Suzuka とかで，フレーム1 のアクションとしてコピペすれば， それらしいものができます。 ActionScript で描画しただけのものですから，当然複雑な絵は出てきません。 普通はこういうものは存在しません。 テキストだけでしか説明できないココだからこそ， あえてそういうものを書いているだけです。
音楽の再生速度が変わっているというパターンでは？ Flashを作ったソフトと現在のFlashプレイヤーに互換性が無く 正しい再生速度が認識されないため音楽が変わったように聞こえるということはありませんでしょうか？ 後は、Flashファイルにつけた曲が NET上の音声ファイルをダウンロードして再生する形式で それが挿し換わっているだけというパターンも考えられますね FlashMakerはよく知りませんが、ネット上のストリーム音楽の再生くらいはできるんじゃないかな？
プログラムをコピーして調べてみたところ getURL("​http://www.1art.jp/le.htm");​の行がおかしいようです。 目に見えないごみが入っているのかな？ 打ちかえると動きましたよ。 on (release) { //getURL("​http://www.1art.jp/le.htm"); getURL("http://www.1art.jp/le.htm"); }
コードに書かれたこのメッセージ以外にライセンスに関わる記述がないとすれば、個人的な見解としては（つまり、もし私が判断しろと言われたなら）一見白に近そうなグレーだと思います。もうちょっと具体的に言うとリスクを負いたくなければこのままでは使えないし使わないということです。 「オープンソース」という言葉自体に商用利用の可能性を一義的に裏付ける意味はありません。様々な解釈が存在すると考えるのが妥当です。何らかのライセンス条件が提示されてはじめて判断することができます。 このコメントに書かれている文言の有効性も微妙ですが、仮に有効だとしても"free"とはどういう意味なのか（無料という意味か、著作権の放棄という意味か、気分の問題か）、"use"とは何をすることを指しているのか（プログラムの実行か、ソースコードの再利用か）が定義されていませんので「ソースコードの商用利用」の可能性は判断できないというのが私の考えです。 ただ、これを使うことで十分にメリットがあると思うのなら「このままでは」使えないものを使えるようにするアクションを起こします。最初の一歩は作者に連絡することでしょう。商用利用の可否と共にライセンス条件の確認をします。また、このコードがほかの（別のライセンスで保護されている）ソースコードを流用していないかどうかも確認します。 そうした手間をかけても見合うコードであるのなら（使えるようにした上で）使いますし、そうでなければ使わないで別の方法で同様の機能を調達します。 このソースコードのコメント以外に何かライセンス条件を示すものがあればもちろんそれに従います。（その場合、そのライセンスとコードが対応付いているという客観的な解釈ができる必要はあります。）
例えば 「東北」＆「北関東」ボタン と 「駅から５分以内」＆「駐車場あり」 だけに着目したとします。 それぞれのボタンをクリック時に次のような URL にジャンプします。 東北→無選択 http://studio-navi.jp/cgi-bin/search.cgi?mokutek … 東北→駅から５分以内 http://studio-navi.jp/cgi-bin/search.cgi?mokutek … 東北→駐車場あり http://studio-navi.jp/cgi-bin/search.cgi?mokutek … 北関東→駅から５分以内 http://studio-navi.jp/cgi-bin/search.cgi?mokutek … 北関東→駐車場あり http://studio-navi.jp/cgi-bin/search.cgi?mokutek … これは共通です（共通の文字列です）。 http://studio-navi.jp/cgi-bin/search.cgi? その後， 駅から５分以内であれば　mokuteki=parking 駐車場ありであれば　mokuteki=parking という文字列が引っ付いて， その後， 東北であれば　&area=tohoku 北関東であれば　&area=kitakanto という文字列が引っ付くだけです。 ただそれだけのことなので，次のスクリプトのようにすればできます↓。 ※ 何も用意する物はありません。 　　フレーム1にコピペして HTML と SWF をパブリッシュするだけです。 ※ ただし， 　　v1 = "Ｈttp://studi … の Ｈ は h に変更してください。 　　(ココの自動リンク機能で目に見えない文字が入ってしまうため) ================================================== // ---以下しばらくは単なるボタン作成の下準備 ------ // 東北ボタン(MC)を作成（本当は手動で作成＆配置） this.createEmptyMovieClip("touhoku_mc", 1); this.touhoku_mc.createTextField("my_txt", 0, 0, 0, 0, 0); this.touhoku_mc._x = 50; this.touhoku_mc._y = 50; this.touhoku_mc.my_txt.autoSize = true; this.touhoku_mc.my_txt.background = true; this.touhoku_mc.my_txt.backgroundColor = 0x00FF00; this.touhoku_mc.my_txt.html = true; this.touhoku_mc.my_txt.htmlText = "<font size='40'> 東 北 </font>"; // 北関東ボタン(MC)を作成（本当は手動で作成＆配置） this.createEmptyMovieClip("kitakanto_mc", 2); this.kitakanto_mc.createTextField("my_txt", 0, 0, 0, 0, 0); this.kitakanto_mc._x = 50; this.kitakanto_mc._y = 120; this.kitakanto_mc.my_txt.autoSize = true; this.kitakanto_mc.my_txt.background = true; this.kitakanto_mc.my_txt.backgroundColor = 0x00FF00; this.kitakanto_mc.my_txt.html = true; this.kitakanto_mc.my_txt.htmlText = "<font size='40'>北関東</font>"; // 駅から５分以内ボタン(MC)を作成（本当は手動で作成＆配置） this.createEmptyMovieClip("station_mc", 3); this.station_mc.createTextField("my_txt", 0, 0, 0, 0, 0); this.station_mc._x = 220; this.station_mc._y = 50; this.station_mc.my_txt.autoSize = true; this.station_mc.my_txt.background = true; this.station_mc.my_txt.backgroundColor = 0xCCCCCC; this.station_mc.my_txt.html = true; this.station_mc.my_txt.htmlText = "<font size='20'>駅から５分以内</font>"; // 駐車場ありボタン(MC)を作成（本当は手動で作成＆配置） this.createEmptyMovieClip("parking_mc", 4); this.parking_mc.createTextField("my_txt", 0, 0, 0, 0, 0); this.parking_mc._x = 220; this.parking_mc._y = 95; this.parking_mc.my_txt.autoSize = true; this.parking_mc.my_txt.background = true; this.parking_mc.my_txt.backgroundColor = 0xCCCCCC; this.parking_mc.my_txt.html = true; this.parking_mc.my_txt.htmlText = "<font size='20'> 駐車場あり </font>"; // 検索するボタン(MC)を作成（本当は手動で作成＆配置） this.createEmptyMovieClip("kensaku_mc", 5); this.kensaku_mc.createTextField("my_txt", 0, 0, 0, 0, 0); this.kensaku_mc._x = 220; this.kensaku_mc._y = 140; this.kensaku_mc.my_txt.autoSize = true; this.kensaku_mc.my_txt.background = true; this.kensaku_mc.my_txt.backgroundColor = 0xCCFFFF; this.kensaku_mc.my_txt.html = true; this.kensaku_mc.my_txt.htmlText = "<font size='20'> ○検索する </font>"; // ---以上単なるボタン作成の下準備（本来不要・関係なし） ----------- // 変数 v1・v2・v3 に初期値を設定 （※ Ｈttp→http に変更） v1 = "Ｈttp://studio-navi.jp/cgi-bin/search.cgi?"; v2 = "mokuteki=all"; v3 = "&area=all"; // 東北ボタンをクリックしたときの動作を定義 this.touhoku_mc.onRelease = function() { v3 = "&area=tohoku"; }; // 北関東ボタンをクリックしたときの動作を定義 this.kitakanto_mc.onRelease = function() { v3 = "&area=kitakanto"; }; // 駅から５分以内ボタンをクリックしたときの動作を定義 this.station_mc.onRelease = function() { v2 = "mokuteki=station"; }; // 駐車場ありボタンをクリックしたときの動作を定義 this.parking_mc.onRelease = function() { v2 = "mokuteki=parking"; }; // 検索するボタンをクリックしたときの動作を定義 this.kensaku_mc.onRelease = function() { getURL(v1+v2+v3); }; ================================================== ここは簡単です。 単に文字列の足し算です。 それよりビジュアル面の演出の方がずっと難しい（というか面倒だ）と思いますよ。 地図ボタンを トグルボタン のようなボタンに自作するとか...。
コンパイルはFlashだけの特権ではありません。 SDKが公開されており、コマンドが流せるならば自動コンパイルは可能です。 コマンドをキックするswfを作成する必要があるかもしれません。 プロジェクタ形式ならば比較的簡単でしょう。 ただやっぱり、ちょっと知識が必要かもしれません。 参考URL：http://www.atmarkit.co.jp/fwcr/rensai2/as3_01/as …
補足 将来的な話ですが、AdobeがFlaの仕様をOpen化したようですので、 今後、サードパーティ製Flash作製ソフトはFla対応してくるかもしれませんね
まず、1つお聞きしたいのですが、「教えてgooとは？」とはどこですか？ URLをはっつけてください。みてみたいの。 とりあえず、それから考えたいと思います。
すみません、根本的な間違い（？）に気づいてませんでした。 ＣＧＩにデータを渡す方法なんですが、 load()は関数名のとおりロード、読み込むという動作のみです。 ですから、ファイル名に?をつけて強引に値を渡すのは普通のやり方ではないようです。 送る＆受けるの動作は sendAndLoad() を使うのが一般的でしょう。 こいつの説明は長いと思うので省略します。調べると簡単に見つかりますので。 ローカルでError opening URLのエラーが出てだめだった理由は ＞ファイル名が"test.cgi?319"などとなってしまうので のような感じで、 C:\test.cgi?vars　→　ＮＧ（?もファイル名の文字として扱われたのかも） file://C:/test.cgi?vars　→　ＯＫ の違いだったのではないでしょうか。（ここはどうしようもありませんが） ＞ですがやはりローカルホストでは動作しません。 ＣＧＩへのアクセスは問題ないみたいですね。 ローカルとサーバでＣＧＩの動作が違うのでしょうか・・・ ＣＧＩのみをブラウザで起動したときにもちゃんと動いてますかね？ それとも、perl（かどうか知りませんが）のパスがサーバとローカルで違うとかでは？ #!/usr/local/bin/perl　と　#!/usr/local/perl とか ＞キャッシュを利用してしまうと前回のデータがまた表示する為にリロードする意味で…と考えたりしたのですが…そういう事でしょうか？ そんな感じでしょう。 ?が付いていてると、それによって処理が変わるわけですから、 キャッシュがあっても新しい処理結果を得るためにリロードせざるを得ないといった感じです。
とりあえず， スクリプト１ の各行に註釈日本語を入れると次のようになります。 --------------------------------------- // このムービークリップが表示されたとき onClipEvent (load) { // ↓間違いですよね？？？ // this.x_rotation = 0; // このムービークリップの回転を0度にする this._rotation = 0; // 変数 d の値を -1 にする d = 1; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // 回転を d(1) ° 加算する this._rotation = _rotation += d; // もし 90° 以上 または 0° 以下になれば if (this._rotation>=90 || this._rotation<=0) { // 変数 d の正負 を逆にする d = -d; } } --------------------------------------- スクリプト２ の各行に註釈日本語を入れると次のようになります。 --------------------------------------- // このムービークリップが表示されたとき onClipEvent (load) { // ↓間違いですよね？？？ // this.x_rotation = 0; // このムービークリップの回転を 0°にする this._rotation = 0; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // このムービークリップの回転を 1°加算して // その角度にこのムービークリップの回転を合わせる this._rotation = _rotation += 1; // もしこのムービークリップの回転が 90°以上になれば if (this._rotation>=90) { // このムービークリップの回転を -1°にする this._rotation = -1; } } --------------------------------------- 本題とはあまり関係がありませんが， すごく気になる点があるのでまずそこから。 　// このムービークリップの回転を 1°加算して 　// その角度にこのムービークリップの回転を合わせる 　this._rotation = _rotation += 1; という妙な書き方は普通しません。 　太郎君の出席番号を15にして， 　太郎君の出席番号を太郎君の出席番号にする。 これは別に間違いではありませんが， 太郎君の出席番号を２回も15にする意味は普通ありません。 とにかくそこはどうでも良いです。 その書き方は変であっても， １フレーム進む時間ごとに 1°ずつ時計回りに回転することには違いありません。 とにかく１フレーム進む時間ごとに 1°ずつ時計回りに回転して， そして， 　// もしこのムービークリップの回転が 90°以上になれば 　if (this._rotation>=90) { 　　　// このムービークリップの回転を -1°にする 　　　this._rotation = -1; 　} これで 90°回転したとき，回転は -1°になります。 > スクリプト２では、90度に達した後いきなり0度に戻ってしまいます。 正確に書き替えるとこういうことです↓。 →スクリプト２では、90度に達したときいきなり-1度になってしまします。 さらに厳密に書くと，90度になった瞬間-1度になるので90度の状態は見えません。 →スクリプト２では、89度に達したあと-1度になってしまします。 ということになります。 スクリプト２の各フレーム時間毎の角度↓ (＃１の方の書かれていらっしゃる通りです。) 　　　　0→1→2→…→89(→90表示されずに即↓) 　-1→0→1→2→…→89(→90表示されずに即↓) 　-1→0→1→2→…→89(→90表示されずに即↓) 　　　　　…　　　　　　…　　　　　　… つまり，スクリプト２ではダメと言うのではなく， スクリプトに書いてあるそのままの通りに実行されているだけです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > なぜdを使うのか、 dを使うとシンプルで簡単だからでしょうね。 簡単で確実なものが良いです。 他の方法も考えてみましたが複雑になるだけですし， また，どの方法を使っても，どこかで変数は必要になると思います。 回転速度 d を変数にせずに， 1 や -1 を直接回転角度に代入する方法例１↓。 ----------------------------------- // このムービークリップが表示されたとき onClipEvent (load) { // フラグである変数 flag を true にする flag = true; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // もし flag の値が true であれば if (flag) { // このムービークリップの回転を 1°加算 this._rotation += 1; } else { // flag が true でなければ // このムービークリップの回転を 1°減算 this._rotation -= 1; } // もし このムービークリップの回転が 90°以上 // もしくは 0°以下になれば if (this._rotation>=90 || this._rotation<=0) { // flag の true と false を逆転させる flag = !flag; } } ----------------------------------- 回転速度 d を変数にせずに， 1 や -1 を直接回転角度に代入する方法例２↓。 ----------------------------------- // このムービークリップが表示されたとき onClipEvent (load) { // 回転角度をメモしておく変数 memo の初期化 memo = 0; } // １フレーム進む時間ごとに毎回実行 onClipEvent (enterFrame) { // もし今の回転が memo 以上であれば if (this._rotation>=memo) { // このムービークリップの回転を 1°加算 this._rotation += 1; // もし今の回転が memo 以下であれば } else if (this._rotation<memo) { // このムービークリップの回転を 1°減算 this._rotation -= 1; } // もし このムービークリップの回転が 90°以上になれば if (this._rotation>=90) { // このムービークリップの回転角度+1 を memo に代入 memo = this._rotation+1; // もし このムービークリップの回転が 0°以下になれば } else if (this._rotation<=0) { // このムービークリップの回転角度+1 を memo に代入 memo = this._rotation-1; } } ----------------------------------- 「何を複雑で危ないこと(不確実なこと)してるの？！」 という感じです。 書いてはみましたがこういう方法は使わない方が良いです。 特に 直接回転角度に代入する方法例２ はダメです。 やはり 書かれていらっしゃるようなものの場合 は， スクリプト１のように， 回転角度を変数にした d のようなものを使った方が良いと思います。
＃１～３ です。 すみません。私の取り間違いでした。 「言う端から発言内容をコロコロ変える人なのだろうか？？？」 「何時間もかけて作ったものをコロコロ変えられては困る...」 と思ってしまっていたのです。 本当にすみません。 > （３）のような多角形ではなく、 > （２）のような多角形が希望とお伝えしたかったのです。 つまりこんな感じですよね↓（多分）。 　□□□□□□□□□ 　□□□■■■□□□ 　□□■□□□■□□ 　□■□□□□□■□ 　□■□□□□□■□ 　□□■□□□■□□ 　□□□■■■□□□ 　□□□□□□□□□ 　４角形の場合…左回りに全体を 1/8 回転させる 　５角形の場合…左回りに全体を 1/10 回転させる 　６角形の場合…左回りに全体を 1/12 回転させる 　７角形の場合…左回りに全体を 1/14 回転させる 　４角形の場合…左回りに全体を 1/16 回転させる 　　　～　　　　　　　　　　　　　～ と言うことですから， レーダーチャート全体を 左回りに 1/(タイトル個数×２) 回転させるということになりますね。 全体の点を全部回転させることになるので， 次のようになります。 ------------------------------------------------------- // タイトル用配列 titleArr の作成(タイトル数可変) titleArr = new Array(); titleArr[0] = "タイトルA"; titleArr[1] = "タイトルB"; titleArr[2] = "タイトルC"; titleArr[3] = "タイトルD"; titleArr[4] = "タイトルE"; titleArr[5] = "タイトルF"; titleArr[6] = "タイトルG"; titleArr[7] = "タイトルH"; // 見出し用配列 indexArr の作成(データ配列のデータ数と等しくする) indexArr = new Array(); indexArr[0] = "見出し１"; indexArr[1] = "見出し２"; // データ用配列 dataArr の作成(２次元配列) dataArr = new Array(); // データ(配列)を用意（データ数・要素数共に可変） dataArr[0] = [4, 2, 2, 4, 3, 5, 1, 2]; dataArr[1] = [2, 3, 5, 1, 3, 2, 4, 4]; // 最高値の設定 max = 5; // 半径(中心から最高値までの長さ)の設定 long = 150; // 中心のx座標，y座標 の設定 c_x = 200; c_y = 220; // --------- 以上がデータの用意と設定 --------- // 深度カウント用変数 c の初期化 c = 0; // TextFormatクラスのインスタンス TF1 を作成 TF1 = new TextFormat(); TF1.color = 0x000000; TF1.size = 14; TF1.bold = true; // タイトル軸の描画とタイトル名の配置 this.lineStyle(1, 0x006600, 100); for (i=0; i<titleArr.length; i++) { c++; // 角度(ラジアン)の算出 rad = -Math.PI/2+2*Math.PI/titleArr.length*i-Math.PI/titleArr.length; // タイトル軸の描画 this.moveTo(0+c_x, 0+c_y); this.lineTo(Math.cos(rad)*long+c_x, Math.sin(rad)*long+c_y); // タイトル軸の先にテキストフィールドを作成 this.createTextField("title_"+i, c, Math.cos(rad)*long+c_x, Math.sin(rad)*long+c_y, 0, 0); // 文字列に合わせて自動サイズに調節 this["title_"+i].autoSize = true; // テキストフィールドにタイトル名を代入 this["title_"+i].text = titleArr[i]; // テキストフィールドにテキストフォーマット TF1 を適用 this["title_"+i].setTextFormat(TF1); // テキストフィールドの x座標 の微調整 this["title_"+i]._x -= this["title_"+i]._width/2; // テキストフィールドの y座標 の微調整 if (this["title_"+i]._y<=c_y) { this["title_"+i]._y -= this["title_"+i]._height+10; } else { this["title_"+i]._y += 15; } } // 外枠線の描画 this.lineStyle(0, 0xCCCCCC, 100); // 角度(ラジアン)の算出 rad = -Math.PI/2-Math.PI/titleArr.length; // 線の描画 this.moveTo(Math.cos(rad)*long+c_x, Math.sin(rad)*long+c_y); for (i=1; i<titleArr.length; i++) { // 角度(ラジアン)の算出 rad = -Math.PI/2+2*Math.PI/titleArr.length*i-Math.PI/titleArr.length; // 線の描画 this.lineTo(Math.cos(rad)*long+c_x, Math.sin(rad)*long+c_y); } // 角度(ラジアン)の算出 rad = -Math.PI/2-Math.PI/titleArr.length; this.lineTo(Math.cos(rad)*long+c_x, Math.sin(rad)*long+c_y); // グラフの作成 for (i=0; i<dataArr.length; i++) { // ランダム色の作成 colR = ("0"+Math.floor(Math.random()*129).toString(16)).substr(-2, 2); colG = ("0"+Math.floor(Math.random()*129).toString(16)).substr(-2, 2); colB = ("0"+Math.floor(Math.random()*129).toString(16)).substr(-2, 2); col = "0x"+colR+colG+colB; // // TextFormatクラスのインスタンス TF2 を作成 TF2 = new TextFormat(); TF2.color = col; TF2.size = 12; TF2.bold = true; // // グラフの線と塗りの描画 this.beginFill(Number(col), 20); this.lineStyle(1, col, 100); // 角度(ラジアン)の算出 rad = -Math.PI/2-Math.PI/dataArr[i].length; lng = long*dataArr[i][0]/max; this.moveTo(Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y); c++; // グラフの先にテキストフィールドを作成 this.createTextField("data_"+i+"_"+0, c, Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y, 0, 0); this["data_"+i+"_"+0].autoSize = true; this["data_"+i+"_"+0].text = dataArr[i][0]; // テキストフィールドにテキストフォーマット TF2 を適用 this["data_"+i+"_"+0].setTextFormat(TF2); // テキストフィールドの x座標 の微調整 this["data_"+i+"_"+0]._x -= this["data_"+i+"_"+0]._width/2; // for (j=1; j<dataArr[i].length; j++) { c++; // 角度(ラジアン)の算出 rad = -Math.PI/2+2*Math.PI/dataArr[i].length*j-Math.PI/titleArr.length; // 線と塗りの描画 lng = long*dataArr[i][j]/max; this.lineTo(Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y); // グラフの先にテキストフィールドを作成 this.createTextField("data_"+i+"_"+j, c, Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y, 0, 0); this["data_"+i+"_"+j].autoSize = true; this["data_"+i+"_"+j].text = dataArr[i][j]; // テキストフィールドにテキストフォーマット TF2 を適用 this["data_"+i+"_"+j].setTextFormat(TF2); // テキストフィールドの x座標 の微調整 this["data_"+i+"_"+j]._x -= this["data_"+i+"_"+j]._width/2; } // 角度(ラジアン)の算出 rad = -Math.PI/2-Math.PI/dataArr[i].length; lng = long*dataArr[i][0]/max; this.lineTo(Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y); this.endFill(); // c++; // 見出しテキストフィールドを作成 this.createTextField("index_"+i, c, c_x, c_y-long-60+i*15, 0, 0); this["index_"+i].autoSize = true; this["index_"+i].text = indexArr[i]; // テキストフィールドにテキストフォーマット TF2 を適用 this["index_"+i].setTextFormat(TF2); //見出しの線の描画 this.lineStyle(1, 0x999999, 100); this.moveTo(this["index_"+i]._x, this["index_"+i]._y+this["index_"+i]._height/2); // 角度(ラジアン)の算出 rad = -Math.PI/2-Math.PI/dataArr[i].length; lng = long*dataArr[i][0]/max; this.lineTo(Math.cos(rad)*lng+c_x, Math.sin(rad)*lng+c_y); this.lineTo(this["index_"+i]._x, this["index_"+i]._y+this["index_"+i]._height/2); } ------------------------------------------------------- 全体を書き替えたので，書き換るだけで１時間以上かかってしまい， その時間がなかなか取れなかったので，お返事が遅くなってしまいました。 私の勘違いと，返事の遅れの両方でお詫びいたします。 オールActionScriptなので， ちょっと変える（カスタマイズする）のでも大変ですよ...。 　
1フレーム目で画像を読み込んでおき 2フレーム目でNow Loadingをしてみては。
loadMovieなど（loadVariables，LoadVars.load，MovieClipLoader.loadClip，…）は，ブラウザに対するリクエストです。 したがってloadMovieなどでロードするファイルパスは， そのブラウザが開いているページ，つまりHTMLからのパスになります。 例をいくつか書いておきます。 ◎任意のフォルダ 　　├ 読み込む.swfを表示する.html 　　├ 読み込む.swf 　　└ 読み込まれる.swf 　→読み込む.swf には 　　 ○○.loadMovie("読み込まれる.swf"); ◎任意のフォルダ 　　├ 読み込む.swfを表示する.html 　　├ 読み込む.swf 　　└ ファイルフォルダ 　　　　　└ 読み込まれる.swf 　→読み込む.swf には 　　 ○○.loadMovie("ファイルフォルダ/読み込まれる.swf"); ◎任意のフォルダ 　　├ 読み込む.swfを表示する.html 　　└ ファイルフォルダ 　　　　　├ 読み込む.swf 　　　　　└ 読み込まれる.swf 　→読み込む.swf には 　　 ○○.loadMovie("ファイルフォルダ/読み込まれる.swf"); ◎任意のフォルダ 　　├ ファイルフォルダA 　　│　└ 読み込む.swfを表示する.html 　　└ ファイルフォルダB 　　　　　├ 読み込む.swf 　　　　　└ 読み込まれる.swf 　→読み込む.swf には 　　 ○○.loadMovie("../ファイルフォルダB/読み込まれる.swf");
> 写真mcを右ドラッグをすると写真mcが左にスライドする そういうものをあまり見かけたことがありませんが， こんな感じ↓でしょうか。 新規ドキュメント（ActionScript2.0）を作成して， 次のように書いて(コピペして)， パブリッシュ(AS2.0 FlashPlayer8 以上)などをするだけで 一応のサンプルはできます。 ////////////////////////////////////////////////////// // ---仮にスクリプトでMC「p_mc」を作成するだけです------ // 実際は写真をMCに変換してもOKです var _mc:MovieClip = this.createEmptyMovieClip("p_mc", 0); _mc._x = Stage.width/2; _mc._y = Stage.height/2; _mc.beginFill(0x0099FF); _mc.moveTo(-Stage.width/6, -Stage.height/6); _mc.lineTo(Stage.width/6, -Stage.height/6); _mc.lineTo(Stage.width/6, Stage.height/6); _mc.lineTo(-Stage.width/6, Stage.height/6); _mc.endFill(); // -------------------------------------------- // p_mc をマウスで押したときの動作を定義 p_mc.onPress = function() { // そのときのマウスの座標を記録 this.mou_x = _root._xmouse; // そのときのこのMCの座標を記録 this.my_x = this._x; // --- // マウスが動いたときの動作を定義 this.onMouseMove = function() { // マウスが動いた分だけ逆向きに移動 this._x = this.my_x+this.mou_x-_root._xmouse; // 移動の制限（不要であれば削除） if (this._x>Stage.width-this._width/2) { this._x = Stage.width-this._width/2; } else if (this._x<this._width/2) { this._x = this._width/2; } // 即更新 updateAfterEvent(); }; // --- }; // p_mc からマウスを放したときの動作を定義 p_mc.onRelease = function() { // マウスが動いたときの動作定義を削除 delete this.onMouseMove; }; // p_mc を外で放したときの動作を定義 p_mc.onReleaseOutside = p_mc.onRelease; ////////////////////////////////////////////////////// ちなみに...， > 写真mcを右ドラッグをすると写真mcが左にスライドする というのとはちょっと違いますが， こんな感じ↓のでしたらよく見ますね。 ///////////////////////////////////////////////////////// // ---仮にスクリプトでMC「p_mc」を作成するだけです------ // 実際は写真をMCに変換してもOKです var _mc:MovieClip = this.createEmptyMovieClip("p_mc", 0); _mc._x = Stage.width/2; _mc._y = Stage.height/2; _mc.beginFill(0x0099FF); _mc.moveTo(-Stage.width/6, -Stage.height/6); _mc.lineTo(Stage.width/6, -Stage.height/6); _mc.lineTo(Stage.width/6, Stage.height/6); _mc.lineTo(-Stage.width/6, Stage.height/6); _mc.endFill(); // ---仮にスクリプトでテキストフィールドを作成するだけです--- var _txt:TextField = this.createTextField("c_txt", 1, 0, 0, 0, 0); _txt.autoSize = true; _txt.selectable = false; _txt.text = ""; // -------------------------------------------- // 最高速度の設定 var spd:Number = 20; // p_mc をマウスで押したときの動作を定義 p_mc.onPress = function() { // そのときのマウスの座標を記録 this.mou_x = _root._xmouse; // マウスを消す Mouse.hide(); // --- // １フレーム進むごとに随時実行する関数を定義 this.onEnterFrame = function() { // 代用マウスの表示と座標指定 if (this.mou_x>_root._xmouse+2) { c_txt.text = "←◎))"; } else if (this.mou_x<_root._xmouse-2) { c_txt.text = "((◎→"; } else { c_txt.text = "((◎))"; } c_txt._x = _root._xmouse-c_txt._width/2; c_txt._y = _root._ymouse-c_txt._height/2; // // マウスが動いた量を算出して5で割る this.idou = (_root._xmouse-this.mou_x)/5; // 上限を ±spd 内に押さえる if (this.idou>spd || this.idou<-spd) { this.idou = spd*this.idou/Math.abs(this.idou); } // マウスが動いた分だけ逆向きに移動 this._x -= this.idou; // 移動の制限（不要であれば削除） if (this._x>Stage.width-this._width/2) { this._x = Stage.width-this._width/2; } else if (this._x<this._width/2) { this._x = this._width/2; } }; // --- }; // p_mc からマウスを放したときの動作を定義 p_mc.onRelease = function() { // １フレーム進むごとに随時実行する関数を削除 delete this.onEnterFrame; // マウスを出す Mouse.show(); // 代用マウスを消す c_txt.text = ""; }; // p_mc を外で放したときの動作を定義 p_mc.onReleaseOutside = p_mc.onRelease; /////////////////////////////////////////////////////////
＃１ です。 補足です。 > ある1点(中心になるMC)を中心に > 左下、右下(少しずつ角度が違うもの)を降らせたい という場合でしたら， その 中心になるMC と，火の粉MC の位置関係を求めて， その向きに動かすようにしなければなりません。 等速落下運動（空気抵抗が大きい場合は等速落下になる）でしたら， y座標移動量は固定（等速）で， x座標移動量をそのy座標移動量と中心になるMCとの位置関係から算出することになると思います。 この場合は角度などを求める必要はないので三角関数などは登場しません。 考え方は中学校低学年の数学くらいが要りますが， 式自体は小学校中学年レベルの算数でできます。 onClipEvent (enterFrame) などを書くMCと同じ階層に， 中心になるMC を置いたとして， そのMCに「center_mc」というインスタンス名を付けたとします。 　_root（_rootなどの階層） 　　├ onClipEvent (enterFrame) などを書くMC 　　├ …上と同じものを複数配置可能… 　　└ …　　〃　　… その場合， onClipEvent (enterFrame) などを書くMCのスクリプトは次のようになります。 ただし， onClipEvent (enterFrame) などを書くMCを， 「center_mc」より下（y座標が大きい位置）に置いた場合です。 //////////////////////////////////////////////////////// onClipEvent (load) { // 等速落下するスピードを設定 speed = 5; // y に対する x の割合 ratio_x を算出 ratio_x = (_x-_parent.center_mc._x)/(_y-_parent.center_mc._y); } onClipEvent (enterFrame) { _x += speed*ratio_x; _y += speed; } //////////////////////////////////////////////////////// なお，上記スクリプトの 　// y に対する x の割合 ratio_x を算出 　ratio_x = (_x-_parent.center_mc._x)/(_y-_parent.center_mc._y); の部分は次の図のように考えると出てきますよね。 ┏━━ステージ━━━━━━━━━ ┃「center_mc」 ┃　　●(x1，y1) ┃　　│ ┃　　│←x2-x1 ┃　　│ ┃　　│　　　　「スクリプトを書くMC」 ┃　　└────▲(x2，y2) ┃　　　　　↑y2-y1 ┗━━━━━━━━━━━━━━ y変位に対するx変位＝(x2-x1)/(y2-y1) ただ， 等速落下運動するほど空気抵抗が大きい場合は， 当然x軸方向にもかなりの空気抵抗があるはずなので， x軸方向移動量も徐々に下げる方がよりリアルには見えるとは思います。 (つまり 枝垂れ[しだれ]モドキ。) ////////////////////////////////////////////////////// onClipEvent (load) { // 等速落下するスピードを設定 speed = 5; // 空気抵抗を設定 resistance = 9/10; // y に対する x の割合を算出 ratio_x = (_x-_parent.center_mc._x)/(_y-_parent.center_mc._y); } onClipEvent (enterFrame) { _x += speed*ratio_x; _y += speed; ratio_x *= resistance; } //////////////////////////////////////////////////////
まあこんな感じでしょうか? Flashのモノによっては完全に全部印刷できない場合もあります。 参考URL：http://www.adobe.com/jp/support/flash/ts/documen …
この回答（とも言えないもの）は， 削除されるということを前提で，まっとうな回答を書きます。 > 元から教え方も悪く… たしかに教え方も悪いのかもしれませんがそれどころではありません。 > ソフトは焼いてくれるらしいので大丈夫ですが問題は使い方なんです。 大丈夫ではありません。言語道断です。 というか焼いても普通は使えないと思います。 普通ではないことをするとひょっとしたら使えるかもしれませんが。 しかし焼いて配布する時点で犯罪行為にほぼ等しいと思いますよ。 悪いことは言いません。 即刻，その専門学校をやめた方が良いです。 また正規の専門学でその専門学校生なら，アカデミック（エデュケーション）版が格安で手に入ります。
フリーソフトの一例と， そのフリーソフトでのご質問にあるようなものを作成するための参考サイトをご紹介しておきます。 ただし Windows です。 それもできれば XP 以下の方が良いです（Vistaは現在バージョンでは正式対応ではないので）。 フリーソフト： Suzuka http://www.cty-net.ne.jp/~uzgensho/ 参考サイト： フリーのFlash作成ソフトSuzukaによる、スライドショー作成チュートリアル - ダイズバタケ http://www.towofu.net/blog/2006/08/flashsuzuka.h … なお 上のチュートリアルに至るまでにインストール方法などで困った場合， また 上のチュートリアルより，より高度なことがしたい場合などは， Suzuka Wiki の FAQ や リンク のページを参考にしてみてください。 FrontPage - Suzuka Wiki http://www.wikihouse.com/suzuka/index.php
カスタムクラスについては私も詳しくありませんので， 詳細を説明したり，その他不適切な部分があるとしてもその指摘まではできませんが， ご質問の件まででしたら原因と一応の解決策例は回答できます。 うまく行かない原因は大きく２つありますが， 結局２つとも 「パス(ターゲットパスの方)」 がそもそもの原因です。 また２つとも， 　_root.move_mc.onEnterFrame = function(){ 　　　this._x += (this.rangePro - this._x)/this.speedPro; 　} この部分が原因の発端になっています。 以下のスクリプトでは，全ての traceアクション は省略します。 ◎ 原因１と対処法 上に引用した部分の関数全体を書くと次のようになっています。 public function moving(){ _root.move_mc.onEnterFrame = function(){ this._x += (this.rangePro - this._x)/this.speedPro; } } この this.rangePro と this.speedPro の指す this は， _root.move_mc です。 　○○.onEnterFrame = function(){ 　　　～ 様々なステートメント ～ 　}; のように書いた場合， 様々なステートメント 内で使用されるthisは，通常 ○○ になります。 これはあくまでも 「通常」 であって，「いつも必ず」 という意味ではありません。 this が何なのかわからなくなった場合は， trace(this); でその都度 this を調べてみると良いと思います。 ※具体的には， 　 trace(this.speedPro); をする前に 　 trace(this); をした方が良いということです。 　 ( もし trace(this); をしていたら，わざわざここで， 　　この質問をするには至らなかったかもしれませんよ。) したがって， ここまでで public function moving(){…} を修正すると次のようになります。 public function moving() { _root.move_mc.speedPro = speedPro; _root.move_mc.rangePro = rangePro; _root.move_mc.onEnterFrame = function() { this._x += (this.rangePro-this._x)/this.speedPro; }; } これで， _root.move_mc 内に speedPro と rangePro がセットされるので， this.rangePro と this.speedPro で， rangePro と speedPro の値を取得できます。 ただし，ここを修正しても move_mc をクリックしたときは正常に動作しません。 FLA のフレームに次のように書いた場合は上のままで実行されます。 var move1:Move = new Move(5,100); move1.onclick(); move1.moving(); 以下では元通り move1.moving(); を付けない状態での説明に戻ります。 ◎ 原因２と対処法 原因その２は次の部分にあります。 public function onclick(){ 　　_root.move_mc.onRelease = moving; } これは， _root.move_mc.onRelease に関数 moving を設定（代入） という意味です。 上で修正済みのスクリプトを使うと， つまり，FLAファイルに次のように書くのと同じことになります。 _root.move_mc.onRelease = function(){ 　　_root.move_mc.speedPro = speedPro; 　　_root.move_mc.rangePro = rangePro; 　　_root.move_mc.onEnterFrame = function() { 　　　　this._x += (this.rangePro-this._x)/this.speedPro; 　　}; }; 当然， FLAファイルのタイムライン直下には speedPro も rangePro も定義されていないので， 　_root.move_mc.speedPro = undefined; 　_root.move_mc.rangePro = undefined; 　_root.move_mc.onEnterFrame = function() { 　　　this._x += (undefined-this._x)/undefined; 　}; となってしまいます。 speedPro も rangePro もタイムライン直下にあるのではなく， Moveクラスのインスタンス move1 にあります。 したがって， public function moving(){…} は次のように修正する必要が出てきます。 public function moving() { _root.move_mc.onEnterFrame = function() { this._x += (_root.move1.rangePro-this._x)/_root.move1.speedPro; }; } これで，move1 内の speedPro と rangePro が参照できます。 しかしこれでは， Moveクラスのインスタンス名を必ず move1 にしなければならないという制限ができてしまいますから 汎用的なクラスファイルとして使い物になりません。 汎用的に使えるようにするには， public function onclick() {…} も加えて， 次のように修正した方が使いやすくなると思います。 public function moving() { _root.move_mc.onEnterFrame = function() { this._x += (this.rangePro-this._x)/this.speedPro; }; } public function onclick() { _root.move_mc.speedPro = speedPro; _root.move_mc.rangePro = rangePro; _root.move_mc.onRelease = moving; } 説明が長くなりましたが， 結局，この回答の結論はこの↑10行だけです。 と言いますか...， 根本原因は public function moving() にあるのですが， 修正すべきは public function onclick() の方だということです。 また上の 10行 のようにしておくと， さらに，次のように使いやすくすることも可能になります。 ■インスタンス生成＆メソッドへアクセス var move1:Move = new Move(5,100); move1.onclick(_root.move_mc); ■asファイル 　～ 省略 ～ public function onclick(target_mc:MovieClip) { target_mc.speedPro = speedPro; target_mc.rangePro = rangePro; target_mc.onRelease = moving; }
＃１です。 サイトはどこかも解りませんが、Flash Playerが必要なサイトでしたら、どこでもインストールするようにメッセージが出るはずですが。 なお、IEのツール→アドオンの管理で、Shockwave Flash Object（ActiveXコントロール）は有効になっていますか？ そこくらいしか思い付きません。
こういう回答は禁止事項になるかもしれませんが、、、 私も同じ状況で困っておりますので、情報を追加させてください。 私は、同じサーバ内でしたら、ターゲット指定の有る無しや種類に関わらず、飛ぶことができます。 絶対パスでも、相対パスでも飛ぶことができます。 しかし、別サーバへはadiosalmさんと同じく、"_blank"以外では飛びません。 パブリッシュのバージョンを変えても同じでした。 私の環境も同じです。 ・バージョン→flash pro8 ・OS→XP sp2 ・ブラウザ→IE7 しかし、もう一つの環境、win2000 sp4であれば、何も問題なく飛びます。 xp sp2でも、safari・firefoxにブラウザを変えると問題なく飛びます。
＃１です。 > 色線ではなくMCを使いたい場合はどの部分に > MCを読み込むASを入れればよいのでしょうか？ 色線ではなく，あえて言うならば色面（色塗り）です。 線は入れずに小さな二等辺三角形の塗りを作成しています。 MCを使う場合は，いちいち火の粉をASで書く必要もありませんし， 空（カラ）のMCを作成する部分をライブラリのMCを呼び出す文に変えれば良いと思います。 　// 火の粉を作成 　this.createEmptyMovieClip("spark"+c, c); 　　　↓変更↓ 　// ライブラリのリンケージ識別子 spark のMCを呼び出す 　this.attachMovie("spark","spark"+c, c); MCを作成した時点で，ライブラリにはムービークリップシンボルが入るはずです。 ステージ上に用意したムービークリップは削除して， ライブラリの火の粉ムービークリップシンボルを右クリックするなどして， 「リンケージ」で「リンケージプロパティ」のパネルを出し， 　□ActionScriptに書き出し 　と 　□最初のフレームに書き出し にチェックを入れます。 すると 識別子 の部分に文字が打てるようになりますから， そこで 識別子 を付けます。 この例では spark という識別子を付けておいたとします。 この識別子はシンボルの名前になりますから， この名前でステージ上にムービークリップを呼び出します。 > 現在水面に映り込んでいる火の粉を表示させない場合 ですから，下側を消せば良いので， 次のようにだいぶんシンプルになります。 -------------------------------------------- // 滝の上端下端の y 座標を設定 top_y = 38.5; bot_y = 140; // 滝の左右両端の x 座標を設定 lef_x = 10; rig_x = Stage.width-10; // 火の粉が落ちるスピードを設定 spd = 4; // 火の粉の本数を設定 fal_n = 24; // 火の粉の本数が増える間隔の設定 ｉｎｔ = 850; // 火の粉が伸びる速さを設定 grow = 12; // --- 以上が設定 ------------------ // 各火の粉の x 座標を算出 xArr = new Array(); for (i=0; i<fal_n; i++) { xArr[i] = Math.round(lef_x+i*(rig_x-lef_x)/(fal_n-1)); } // ---背景を描画--- this.beginFill(0x000000); this.moveTo(0, 0); this.lineTo(Stage.width, 0); this.lineTo(Stage.width, Stage.height); this.lineTo(0, Stage.height); this.endFill(); // カウント数 c と frm の初期化 c = 0; frm = 0; // 1フレーム進む毎に随時実行（火の粉を作成する) this.onEnterFrame = function() { frm++; // frm が 3 で割りきれたときのみ if (frm%3 == 0) { // x 方向のループ文 for (i=0; i<fal_n; i++) { // 火の粉が出没する中央の制限 if (i<=lef_n || i>=rig_n) { // ライブラリのリンケージ識別子 spark のMCを呼び出す this.attachMovie("spark","spark"+c, c); this["spark"+c]._x = xArr[i]; this["spark"+c]._y = top_y; // 火の粉が落ちる関数を定義 this["spark"+c].onEnterFrame = function() { // 落下速度のゆらぎ（※勝手に入れただけです） this._y -= Math.random()*2; this._y += spd; this._yscale += grow; if (this._y>bot_y) { this.removeMovieClip(); } }; if (c>10000) { c = 0; } else { c++; } } } } }; // 念のための重複防止(ループ再生時など） if (IDflag == undefined) { IDflag = true; // 滝の左右の番号を初期化 lef_n = 0; rig_n = fal_n-1; // 一定間隔で左右の番号を増減させる ID = setInterval(function () { // 滝の左右の番号を１ずつ増減 lef_n++; rig_n--; if (lef_n>=fal_n/2) { clearInterval(ID); } }, ｉｎｔ); } --------------------------------------------
「FlashCS3のActionScript3に関して」 というタイトルを読んで， 内容も見ずにパスしてました（スミマセン）。 > CS3のActionScript3.0だけでは実現の出来ないような、 > 高度なアニメーションの表現には何かございませんでしょうか? はい？？？ CS3のActionScript3.0だけでは実現の出来ないことだらけです。 できることを挙げる方が簡単なのでは？ 実現できているのがごく一部でしょう。 Photoshop のような高度なビットマップ画像装飾すらできません。 例えば モナリザ がモーフィングで ダビンチ には変わりません。 3D もできることなんかごく一部です。 先に 3D ソフトで動画を作ってその動画を FlashPlayer で再生することはできますが， それ以上のことは普通できないか，できてもすごく限られたものだけだと思います。 また，パラパラマンガ も ActionScript3.0 ではとうてい無理です。 人間の力技が入ればできますが ActionScript3.0 みたいなものではどうしようもありません。 描いたものならある程度アニメが作成できても，俳優を好きなように動かせません。 …などなどできないことがありすぎです。 ごく一部出来る機能を使って，「おっ！」と思わせているだけで， 現実問題，何もできていないに等しいです。 ですから， 使う側(私も含めて)がより良い知恵や手品を考えたり， いまでも力技で勝負するわけですし， またソフトも進化しているのです。 これからもどんどん進化すると思います。 それに期待しています。 もし進化しなければそれで終わりです。すぐに他のソフトに抜かされますよ。
「getURL javascript:void」 http://www.google.co.jp/search?hl=ja&q=getURL+ja … 「getURL javascript:void OKWave」 http://www.google.co.jp/search?hl=ja&q=getURL+ja … この辺りで検索していただくと参考サイトもしくはページが見つかると思います。
>何かしらのデータファイルがあり、 >そのデータを読み込んで表示するものを取得したい ネットワークアクセスを除外したくてしかも >更新を考え >ユーザーがデータ編集や追加、削除はできない物とする >データをいじられては困る を実現するには ・更新情報をファイルとしてエンドユーザ側で触る形で保存しなければならない 　非インターネットによる方法で一旦保存して 　目的PCに(主に物理的孤立媒体を介して)転送できなければならない ・更新情報(のみ)で既存情報を「上書き」できなければならない という状況になるんだけど これの障害となるのが >>ローカル資源へのアクセス手段がFLASH単体では提供されていない よってこれを可能にできるであろう仕掛けを持つのは FLASH vs AIR としたら前回答(上記抜粋部分)の理由によりAIR一択。 じゃない？
パソコンのスペックが低い場合、大きな画像を動かそうとするとカクカクする場合があります。 それ以外に、フレームレートが低いとカクカクします。 フレームレートを変更できる場所があるので、その数値を高くして下さい。 （高くすると要求されるスペックは高くなりますので、ご注意ください。） 参照URLはフレームレートについての説明です。 参考URL：http://ja.wikipedia.org/wiki/%E3%83%95%E3%83%AC% …
「ムービープレビュー」で動作を確認していませんでしょうか？ 「ムービープレビュー」では、POST を指定しても GET で送信されてしまいます。 LoadVars.send メソッドのヘルプですが、 　・Flash CS3 ドキュメンテーション： LoadVars.send 　　http://livedocs.adobe.com/flash/9.0_jp/main/wwhe … ↑この中ほどに、 　> Flash のテスト環境では、常に GET メソッドを使用します。POST メソッドを使ってテストする場合は、ブラウザ内で使用してください。 という説明があります。 CGI や JavaScript などと連携する作品は、スクリプトに誤りがなくても「ムービープレビュー」では正常に動かないことがあります。面倒でも swf ファイルを表示する HTML ファイルを作成し、ブラウザで動作を確認してみてください。 通信回線を介して外部と通信する作品の場合はオフラインになっているせいで上手くいかないこともあるので、オンライン環境で確認すると万全だと思います。　
普通にできますよ。 カラーパレットの右が切れているからできないのではないでしょうか？ カラーパレットの右側が見えていなくて， そこの色が変更できないから片方の色を無色にすることができないのではないかと思います。 もしカラーパレットの右が見えていなくて表示させるには， ライブラリパネル や カラーパレットパネルが縦に並んでいる部分と， タイムライン＆ステージの部分の境界を左にドラッグして， カラーパレットの右側を完全に出すと良いです。 しかし中にはこれができない環境もあります。 その場合は， カラーパレットの右上 　||▼カラーパレット となっている部分の || あたりを選択して， ステージ側にドラッグしてカラーパレットを独立させれば右側が見えると思います。 あとはカラーパレットのカラーミキサーのタブを選択して， 　タイプ：[線状　　] などにして， 片方の鉛筆マークを選択。 　アルファ[0％　　] にすればできますよね。
横幅変更無しで全体を下に下げれば良いわけですよね。 慣れないと少し難しいかもしれませんが， タイムラインの下側（ステージ-タイムラインの間のタイムライン側）に， オニオンスキンマーカーのボタンと複数フレーム編集のボタンがありますから， それらを操作してアニメーション全体を選択して下にずらせば良いと思います。 第15回　アニメーション作成の手抜きテクニック 複数フレームをまとめて編集する http://itpro.nikkeibp.co.jp/article/COLUMN/20060 … ncc クリエイターポータルサイト - これで解決！Tips集 Tips:アニメーション全てを移動したい。 http://www.n-c-c.org/modules/plzXoo/index.php?ac …
http://www.google.co.jp/search?q=%E3%82%AA%E3%82 … とてもこの回答欄で解説しきれる量じゃないよ。 まずはactionscriptでクリックした場所にコマを置くというのを実現できるようにしたらどうかな
作成手順は， 　１ ムービークリップに外部画像をロード表示させてみる 　２ 月を取得してみる 　３ 月によってロードする外部画像を変える という感じで段階を経て１つずつを確実に作成するのが良いと思います。 書かれていらっしゃるページからは 「wel12.zip」 をダウンロードできます。 ちょうど良いので説明にはこれを使わせてもらいます。 また肝腎の Flash のバージョンを書かれていらっしゃいませんので， できるだけバージョンを下げた Macromedia(現Adobe) Flash5，ActionScript1.0 でできる範囲で書きます。 １ ムービークリップに外部画像をロード表示させてみる 「wel12.zip」 を任意の場所に保存し解凍すると次のようなファイル群が出てきます。 　wel12[フォルダ] 　　├ wel12.swf 　　├ その他のファイル 　　└img[フォルダ] 　　　　├ photo1.jpg 　　　　├ photo2.jpg 　　　　├ photo3.jpg 　　　　├ 　…略… 　　　　└ photo12.jpg photo1.jpg ～ photo12.jpg は，横400px×縦300px ですから， まずFlashを起動させて新規ドキュメントを作成し， ムービーのサイズ（ステージのサイズ）を，幅400px・高さ300px に設定して， wel12[フォルダ] に，「任意の名前.fla」 で保存します。 ステージ上に 20px×20px くらいの色の付いた四角の塗りを描きます。 （大きさは厳密ではなくて 5px×5px でも 100px×100px でも適当で良いです。） その四角い塗りを選択して， 「修正」→「シンボルに変換」（バージョンによっては「挿入」→「シンボルに変換」）で， ムービークリップに変換します。 このムービークリップに変換するときに「基準点(R)」の位置に気をつけておきます。 この例では 左上 にチェックを入れて「OK」し，基準点が左上のムービークリップを作成します。 本当は基準点はどこでも良いので，絶対に左上にしなければならないことはありません。 何も考えないのではなくて 「基準点に気を付ける」 ということが大切です。 外部画像やムービーをロードするとき， 外部画像やムービーの左上のコーナーが，基準点の位置に来るようにロードされます。 したがって， 上で作成した四角い塗りのムービークリップをステージの左上のコーナーにピッタリ付く位置に配置します。 　基準点が左上のムービークリップ 　 ↓ 　 ■□□□□□□□□ 　 □□□□□□□□□ 　 □□□□□□□□□ 　 □□□□□□□□□ 　└----ステージ----┘ 次にこのムービークリップを選択して， 下のプロパティインスペクタなどからインスタンス名を付けます。 この説明では， 「gazou_mc」というインスタンス名を付けることにしておきます。 この「gazou_mc」に外部画像をロード表示させれば良いわけです。 外部画像のロードには ActionScript が必要です。 ActionScript 専用レイヤー（と言っても普通のレイヤー）を挿入して， その ActionScript レイヤーの フレーム1 の空白キーフレームに次のようなスクリプトを書きます。 -------------------------------------- // 「gazou_mc」 に imgフォルダ の 「photo1.jpg」 をロード gazou_mc.loadMovie("img/photo1.jpg"); -------------------------------------- そして， 「制御」→「ムービープレビュー」してみると， ステージいっぱいに「photo1.jpg」が表示されると思います。 なお， お使いの Flash のバージョンが Flash CS3 Professional でしたら， デフォルトでは ActionScript3.0 の SWF をパブリッシュする設定になっていると思います。 その場合はうまく動作しないと思いますから， 「ファイル」→「パブリッシュ設定」で，ActionScriptのバージョンを 2.0 とか 1.0 にしてムービープレビューしてください。 ここまでできましたら， 弟１段階 「ムービークリップに外部画像をロード表示させてみる」 は完成です。 ２ 月を取得してみる 月や時刻などが取得できるのが Flash 5 以上です。 これには， 　Dateオブジェクト を作成して 　そのオブジェクトから 月 の番号を取りだす。 という順序のActionScriptをコーディングします。 上で作成したFLAファイルのフレーム1のスクリプトを次のように書き替えます。 -------------------------------------- // Date(日付)オブジェクト myDate の作成 myDate = new Date(); // myDate から月の番号を取得して変数 M に代入 M = myDate.getMonth(); // 試しに M を出力表示させてみる trace(M); // 「gazou_mc」 に imgフォルダ の 「photo1.jpg」 をロード gazou_mc.loadMovie("img/photo1.jpg"); -------------------------------------- 書き替えるというより， 「photo1.jpg」 をロードするスクリプトの上に， 月を取得する３行（註釈含めて６行）のスクリプトを付け足すということです。 これで「制御」→「ムービープレビュー」してみます。 すると今（2008年５月）だと，「4」が出力窓に表示されると思います。 「4」が出力されるのが正常です。 月の番号は，１月が0，２月が1，３月が2，…，12月が11 です。 したがって，今（2008年５月）だと，「4」 が出力されることになります。 ここまでできましたら， 弟２段階 「月を取得してみる」 は完成です。 ３ 月によってロードする外部画像を変える 上で得た 0～11 の数字を使って，ロードするJPEGを変えれば， 月によって表示させる画像を変えることができます。 img[フォルダ] には，「photo1.jpg」，「photo2.jpg」，…，「photo12.jpg」 が入っていますが， このファイル名は適当に付けてあるのではなくて， 月によってロードする外部画像を変えやすいようにそういうファイル名にしてあるのです。 関連性はわかると思います。 得た月番号が0のとき…「photo1.jpg」を表示 得た月番号が1のとき…「photo2.jpg」を表示 　　～ 略 ～ 得た月番号が11のとき…「photo12.jpg」を表示 つまり， 得た月番号が X のとき…「photo (X+1) .jpg」を表示 となります。 というわけで， 上で書いたスクリプトをさらに書き替えます。 -------------------------------------- // Date(日付)オブジェクト myDate の作成 myDate = new Date(); // myDate から月の番号を取得して変数 M に代入 M = myDate.getMonth(); // 「gazou_mc」 に imgフォルダ の 「photo(M+1).jpg」 をロード gazou_mc.loadMovie("img/photo"+(M+1)+".jpg"); -------------------------------------- これで「制御」→「ムービープレビュー」してみます。 すると今（2008年５月）だと， 「photo5.jpg」（ベットがある部屋の写真）がステージいっぱいに表示されると思います。 ここまででしたら， スクリプト的には３行だけでできるということになります。 また何でしたら， 変数Mなどを使わずに，直接月番号を代入してもかまいません。 このようにした場合，２行（註釈含めて４行）で済みます。 // Date(日付)オブジェクト myDate の作成 myDate = new Date(); // 「gazou_mc」 に imgフォルダ の 「photo(月番号+1).jpg」 をロード gazou_mc.loadMovie("img/photo"+(myDate.getMonth()+1)+".jpg"); この辺はどちらでも良いと思います。 これで， 弟３段階 「月によってロードする外部画像を変える」 は一応完成です。 パチパチゞ(^o^ゝ)≡(/^ー^)/"""パチパチ ここまででしたら，大したことはなく簡単と言えば簡単だと思います。 JPEGの用意などを考えると大変かもしれませんが， スクリプトや構造的には少なくともアナログ時計やデジタル時計を作るより簡単だと思います。 またこの辺くらいまででしたら， テキスト（文字）でしか回答できないココでも説明は可能です。 なお Flash や JavaScript で取得する年月日や時刻は， 閲覧しているPCの時刻を取得しています。 Windows だと， モニタ画面の右下に表示されている時刻をダブルクリックしたり， 「スタート」→「コントロールパネル」→「日付と時刻」をダブルクリックしたりすると， 「日付と時刻のプロパティ」が出てきて，年月日や時刻を変えられると思いますから， ここで「月」を色々変えてみては「制御」→「ムービープレビュー」を繰り返すと， すべての月の写真が表示できるかどうかの検証ができます。 ----------------------- これに限らず， 「要素を切りわけて部品にする」 　　　↓ 「１つずつの要素を確実に動作させる」 　　　↓ 「要素部品を組み合わせる」 これが大切です。 またこれを繰り返して色んなものを作成して行くこと自体が一番の勉強（実力アップ）になります。
基本的に Flash（FLA） 内の画像は JPEG 圧縮して SWF 内に出力されます。 このときの画質は， 大ざっぱにはパブリッシュ設定で， Flash タブを選択して，JPEG画質(Q) で設定できます。 しかしシンボルの画質設定の方が優先されますから， そこで画質が固定になっているとパブリッシュ設定では変更できません。 またパブリッシュ設定でできるのは「全体のビットマップ画像の画質」ですからあまり使えません。 「ライブラリパネル」を表示させて， 「ライブラリパネル」が出ていない場合は，「ウィンドウ」→「ライブラリ」などでライブラリパネルを出没させて， その「ライブラリ」で画質を落としたくない画像（種類がビットマップになっているはず）を選択して， 「右クリック」→「プロパティ」などによって「ビットマッププロパティ」パネルを表示させ， 　□読み込んだ JPEG データを使用する のチェックをはずして， 　画質(Q)：[　　　] を 100に近い値に変更してみてください。 100に近いほど画質は良くなりますがファイル容量は増えます。 「ネット上に置いてある。」「アニメーションさせる。」 ということを念頭に置いて， 妥協点を探って調節するのがベターだと思います。 この「ビットマッププロパティ」パネルでの設定が最優先されますから， その他の項目も色々さわってみると， JPEG 画質を調節するよりも「美しく」＆「軽い」ものが作成できるかもしれません。
状況がいまひとつわかりませんが， > 肝は、ボタンを押すことによって音楽が最初に戻るのではなく、 > 流れはそのままで 再生 とか 停止 とかは考えずに 再生 しっぱなしで， ボリュームを変えるしかないのでは？ Google検索「Sound.setVolume」 http://www.google.co.jp/search?hl=ja&q=Sound.set …
(2)で変換する際に、変換プログラムから「何分ぶんのFLVに変換したか」を返させる (3)で再生させる際に、PLV-Playerを埋め込んだタグに、(2)で取得した長さをパラメータとして与える (2)で返す長さは「結果の長さ」を使用する。 例えば、ヘッダに「10分15秒の動画」と書かれているが7分2秒の位置で途切れていて、実際には7分1秒しか変換出来なかった場合は「00:07:01」を返す。 実例として のページ（この動画は8秒ある）のソースには var swfArgs = {"vq": null, "video_id": "UQJonaGNF-E", "l": 8, "sk": "nxZiHitlYKmJvWbw82qoVvDCAakz2-caC", "fmt_map": "", "t": "OEgsToPDskKwHg6GF3Zc5O1Uf75RhQK3", "hl": "en", "plid": "AARNFG0NHd967D69AAAAoAAAAAA"}; と書かれており「"l": 8」とパラメータに書かれている。 同様に3分57秒(237秒)ある動画 http://www.youtube.com/watch?v=eeGV7uxuS2Y には「"l": 237」と書かれている。
setInterval や setTimeout の問題ではなくて， 単にターゲットパスとか階層とかが理解できていないだけではないでしょうか？ 例えば， 「my_mc」 というインスタンス名を付けたムービークリップ（MC）を， シーン1 などのメインのタイムラインつまり _root に配置して， その 「my_mc」 に書かれていらっしゃるようなスクリプトを書いたとします。 ※ ↑要インスタンス名 ---例------------------------ onClipEvent (load) { var id = setTimeout(go, 5000); stop(); function go() { trace("あいうえお"); } } ---------------------------- そして，「制御」→「ムービープレビュー」すると， 当然，５秒後に あいうえお が出力窓に出力されます。 この， var id = setTimeout(go, 5000); によって設定された 「id」 は 「my_mc」 階層に設定されています。 次に， シーン1 などのメインのタイムラインつまり _root に， 適当なボタンを作成して次のように書いたとします。 ---例------------------------ on (release) { clearTimeout(_root.my_mc.id); } ----------------------------- そして，「制御」→「ムービープレビュー」し， ５秒以内にそのボタンをクリックすると何も出力されません。 つまりこれで， _root にある 「my_mc」 内の 「id」 がクリアされます。 「ターゲットパス」 http://homepage3.nifty.com/ginga-b/MX/targetpath … ↑当然ですがsetTimeoutに関しては一切書かれていません。 　setTimeout や gotoAndPlay などにかかわらず。 　Flash 全般にかかわることです。
問題の切り分けがまるでできないのが，作れない第一原因だと思います。 動画は動画，BGMはBGM，ボタンはボタンでしょう。 BGM単品が作成出来ない人が 動画＆BGM＆ボタンなんて無理ですよ。 またBGM１つを取り上げるとしても， とりあえず 再生 ができないと，当然 停止 も 早送り も 巻き戻し もできるはずがありません。 また，そういう細々したことは， 細々した物（ムービークリップ）やActionScriptの集合体で作成するのです。 単品ずつ。確実に。１つ１つ動作確認しながら。 文字しか書けないここで説明することもできませんし， 仮にできても「読解不可能」。 というか， 「読解するのなら自分で作った方が早い」ということになると思います。 （自作できる能力十分ある人でも，読解は不可能かと。） ここでは，図説もできなければサンプルの提示もできません。 次のようなページを参考に BGM の部分を作成されてみてはいかがでしょうか。 Flashゲーム講座＆ASサンプル集【サウンドの制御について】 のページの 「ライブラリにあるサウンドを動的に再生したい」 http://hakuhin.hp.infoseek.co.jp/main/as/sound.h … 「外部にあるサウンドを動的に再生したい(Flash 6 以降)」 http://hakuhin.hp.infoseek.co.jp/main/as/sound.h … 当然，作成したいものとはずれている部分もあります。 しかし， 上のような内容を少なくとも理解しないと作成したいものは作成できないと思います。 ※私は上のサンプルを見て， 　それを理解して作成したことはありません。 　他人の書いていることを理解するくらいなら， 　自作した方がずっと早くて自分の作りたい物が作成できます。 　↑ 　何が書きたいかと言うと， 　自作出来る人であっても， 　他人が作った図説やサンプルを理解することは難しい 　（かなり面倒）だということです。 　自分で構想してヘルプを見て 　１つ１つの部品やASを作成した方が早いかもしれません。 　私はそちらのほうが早くて楽です。
＃１ です。 いつかの方ですね。 その いつかのとき と状況がどのように変わっているかもわかりませんし， そのときの状況自体も単なる推測なのでさっぱりわかりませんが。 > この記述をすると、ちょうどクリアボタン（clear_but）の > 下に重なってしまっている町名mcの箇所が赤く着色され、 > ほかの町名mcも赤く着色されたままの状態でした。 これは， その いつか のとき書いたように， // map_mc 上にボタンがあるときのみ必要 on (press) { _root.map_mc.drag_flg = true; } この方法でクリアできませんか？ hitTest を一時的に殺すためにこれを書いたのですが。 方法は何でも良いですが， クリアボタンを押したとき， とにかく hitTest を殺しておかないと命令が二重にはたらいてしまうと思います（多分。前の状況では。）。
作成されたものがシンプルなタイムラインアニメーションでしたら， 普通に止めたいフレーム（キーフレーム）に stop(); を書けば良いだけだと思います。 「stop();とplay();アクションスクリプト」 http://www.1art.jp/flash2/chapter/13/13.htm その他の場合， たとえば，シンプルなタイムラインアニメーションだとしても， フレームではなくて ３秒後 に stop(); をさせたいとか， ５回再生させたときだけ止めたいとか言う場合でしたら， そういう具体的なことを書いてくださらないと止め方も変わりますから回答はできません。 またタイムラインアニメーションではなく， ActionScript で動かしている物であれば， 動かしているスクリプトがわからないと止め方もわかりません。 また ActionScript で動かしている場合， 普通は動かすスクリプトを作成した人が動いている根幹部分の急所を把握しているはずですから， その急所を突くのが一番だと思います。 動いている急所がそもそもないようなものを作ってしまった場合は， あえて急所を作る必要があると思います。
よくわかりませんが， mp4 の再生には Flash Player9.0.115 以上が必要です。 Firefox （非IE系ブラウザ） の FlashPlayerのバージョンがそれより低いとかではないでしょうか？
あれ？(・_・) 読込みたい連番pngの内、１つだけ指定すると、 「このファイルはシーケンスの一部分です。シーケンスのイメージすべてを読込みますか？」ってFLASHが勝手に聞いてきますよ？ 「はい」って答えると勝手に連番分フレームつくって置いてゆきます。 逆に１つだけ読込みたいのに、いちいち聞いてきて じゃまっくさいと思ってるくらいです。(^-^;
> そのFlashアニメーションは、他でも使うので、 > ここでしたい「特定の処理」をFlashに埋めることは避けたいのです。 > （ただし、上記を実現するために、 > Flash側に何らかの細工が必要な場合、それをすることはいといません。） ここの意味がよくわかりませんが...。 Flash 内の１つ１つの動作をJavaScriptで把握することはできないので， JavaScriptに把握してもらいたいイベントが起こったとき， そのイベントを Flash から JavaScript に変数もしくは関数実行命令を送信すれば良いのではないでしょうか。 例えば， ActionScript の， MovieClipA.alpha = 50; のようなものは決してJavaScriptにはわからないので， MovieClipA.alpha = 50; をすると同時に， hogehoge = "123"; のようなものを送るとかです。 hogehoge = "123"; が送られて来たら， JavaScriptで何か動作をさせれば連動ができますよね。 また，変数を送信するというようなまどろっこしいことはせずに， Flash 内で何かの動作をすると同時に， JavaScript に定義した何某かの関数を ActionScript で実行させても良いです。 Flash から JavaScript に何か値や関数実行命令をくだすには， fscommand() 関数 を使うか， getURL()関数もしくはメソッド を使うか， ExternalInterfaceクラス を使うかが一般的のように思います。 古くから Adobe（Macromedia） が推奨しているのは， fscommand() 関数 です。 しかし，コレはいまひとつ使いにくいです。 JavaScript の関数名などに制約が多いです。 あまり推奨されていませんが， みなさんが古くから多く使われているのが，getURL です。 ブラウザが普通ではない状態になるのが欠点です（HTMLのアニメーションGIFが止まるとか）。 最近使えるようになって， Adobe が推奨しているのが ExternalInterfaceクラス です。 それぞれに JavaScript を付けて検索すると色々な事例が見つかると思います。 http://www.google.co.jp/search?hl=ja&q=fscommand … http://www.google.co.jp/search?hl=ja&q=getURL+Ja … http://www.google.co.jp/search?hl=ja&q=ExternalI …
ウラタダシさん刺激的ですね。 ぼくが知ってるのは中村勇吾のサイトくらいなもんです。 http://www.kanshin.com/keyword/853175 http://yugop.com/ いかがでしょうかね…ぼくはしびれますけど…
ムービークリップならできます。 ボタンＡ も ボタンＢ もムービークリップで作成します。 または， ボタンＡ も ボタンＢ もそれぞれ別のムービークリップの中に入れます。 そして， MovieClip.swapDepths() を使えば深度を入れ替えることができます。 たとえば， _root（メインムービーのステージ上）に２つのムービークリップがあったとします。 一方に「A_mc」，もう一方に「B_mc」というインスタンス名を付けたとしておきます。 　_root 　　├ A_mc 　　└ B_mc --------- 「A_mc」に次のように書くと，「A_mc」にロールオーバーしたとき「B_mc」と深度が入れ替わります。 どっちが上にあるとか下にあるとかは関係なく，とにかく深度が入れ替わります。 on (rollOver) { this.swapDepths(_root.B_mc); } 「B_mc」に次のように書くと，「B_mc」にロールオーバーしたとき「A_mc」と深度が入れ替わります。 これもどっちが上にあるとか下にあるとかは関係なく，とにかく深度が入れ替わります。 on (rollOver) { this.swapDepths(_root.A_mc); } --------- 「A_mc」に次のように書くと，「A_mc」にロールオーバーしたとき深度0と入れ替わります。 これによって「B_mc」より上に表示されます。 on (rollOver) { this.swapDepths(0); } 「B_mc」に次のように書くと，「B_mc」にロールオーバーしたとき深度0と入れ替わります。 これによって「A_mc」より上に表示されます。 on (rollOver) { this.swapDepths(0); } --------- Flash や ActionScript のバージョンを書かれていらっしゃいませんが。 上のようにムービークリップ自体に on() イベントハンドラ を書いて， その中で MovieClip.swapDepths() メソッドが使えるのは， Flash MX 以上で，ActionScript1.0 or 2.0 のみです。 (Flash MX以上とは，MX，MX2004，8，CS3 のことです。) MovieClip.swapDepths() メソッド自体は，Flash 5 でも使用できます。 ただし， on() イベントハンドラ はボタンにしか書けませんから， ムービークリップの中にボタンを入れる必要があります。 また上のスクリプトでは使用しませんでしたが， FlashMX2004以上 では， MovieClip.getNextHighestDepth メソッド で， そのムービークリップがある最高深度のさらに１つ上の深度を得ることができます。 これを使うとムービークリップをその時の最上深度に持っていくようなこともできます。 （getNextHighestDepth は使わなくてもできますけどね，これを使うと簡単にできますということです。) ◎ ちょっと補足　---深度について--- 深度はオブジェクトの上下関係です。 ムービークリップに指定できる深度の範囲は -16384 から 1048575 までの整数です。 深度の数値が大きいものほど，上（手前）に表示されます。 レイヤー上に手動配置したものは， 深度 -16384 ～ -1 までの範囲で， 下から(-16384から)順にだいたい詰めて自動的に深度が割り振られます。 手動では深度 0 以上に何かを配置することはできません。 深度0 ～ 1048575 までの範囲は， ActionScriptによってのみムービークリップなどを配置できます。 したがって， 深度 0 未満の範囲では手動もしくはActionScriptで物を配置でき， 深度 0 以上の範囲は，ActionScriptのみで物を配置できるということになります。 swapDepths の場合は， 深度を入れ替えるのでActionScriptを使用して操作してもかまいませんが， attachMovie() や，createEmptyMovieClip() などによって， 新たに何かをステージ上に配置する場合は， 深度 0 以上に配置するのが原則となっています。 同じ深度に重複してムービークリップなどを配置すると， 前にその深度にあったものの居場所がなくなって消えてしまうからです。 手動で配置したものの深度は自動で割り振られるので， 普通は把握・管理していないはずです。 何も考えずに深度 0 未満に何かを作成すると， あるべきはずものが消えてしまうおそれがあります。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ > レイヤーごと表示順序を変更する方法はあるでしょうか？ FLAファイルであるうちはできます。 しかしSWF にパブリッシュした後は， レイヤーはオブジェクトではないので順序を変えることはできません。 逆ですよ。 レイヤーは深度のようなもので，喩えるなら「標高」です。 太郎君が標高 100m の山の中腹にいて， 花子さんが標高 200m の山の山頂にいたとします。 　　　　　　　花子　標高200…山頂 　　　　　太郎　標高100…中腹 　＿平地 標高0…山麓 太郎君と花子さんの上下を入れ替えたい場合， 標高は変えませんよね。 「山の中腹の標高を 200m にして，山頂の標高を 100m にする。」 いったいそれはどんなことか想像もできませんし， 普通は，そんな妙なことをしようとは考えないと思います。 太郎君と花子さんの上下を入れ替えたいのでしたら， 標高を入れ替えるのではなくて， 太郎君を標高 200m の山頂につれて行って， 花子さんを標高 100m の中腹に戻します。 レイヤーを変えることはできませんが， レイヤーに乗っているものの深度は入れ替えられます。 具体的には， １つのレイヤーに乗っているものをムービークリップで作成して， 最初に書いたように swapDepths すればできます。 もし， １つのレイヤーでモーショントゥイーンを作成しているとすれば， そのモーショントゥイーンごと１つのムービークリップの中に作成してしまうとできます。
根本的には書き方とか文法とかそういう問題ではなくて， gotoAndStop　をかけているムービーがロードされていないから　gotoAndStop できないのです。 この辺は論理では及びません。 ファイル容量はもちろんのこと， ロードするファイルがローカルにあるかないかによっても変わります。 ローカルにあると仮定しても， 中のHDにある場合とメモリスティックにある場合とフロッピーにある場合とではまったくロードする時間が変わります。 ネット上にあるならなおさら， 光の人もいればADSLの人もいればアナログ電話回線の人もいます。 そういうものを キッチリ 動作させたい場合は， MovieClipLoader クラスを使うとか， ロードする SWF にNowLoadingをつけるなどして， 少なくとも目標のフレームがロードされるまで待つ必要があります。
＞普通フラッシュをホームーページに貼り付ける時はHTMLダグで貼り付けるのですか? ホームページを作るのは基本ＨＴＭＬですからそこに貼るのは当然ＨＴＭＬになると思います。 サイズの指定をするためにも。 ＞確かにHTMLのプレビューではちゃんと画面サイズのみ出ています。 ＨＴＭＬのプレビューというのは・・・？Flash作成ソフトのほうですか？ このときのＨＴＭＬソースを作るページのFlash張りたい所にコピーすればいいと思うのですが・・・ （ところでＨＴＭＬソースは編集できますかね？） ＞AC_RunActiveContent.jsをしらべてダウンロードしたのですがやっぱり動きません。 AC_RunActiveContent.jsですかぁ・・・こんなの私知りませんでした。 私のほうでも簡単に調べましたところ、（間違ってるかもしれませんが） 「アクティブコンテンツ対策」とやらのためだそうですが、 「2008年春に解消される」とか書いてありましたし、 私の使っているブラウザＩＥ７ではもうこの問題は確認できませんでした。 だからAC_RunActiveContent.js及びJavaScriptによる出力を使う必要があったのは昔のことと勝手に判断してみます。 だからビルダーのほうのアップデートしてみるとエラー消えるかもしれません。 ＨＴＭＬソースを編集できるようならFlash貼りたい場所にコピーして （）のところを適当な文字に変えて ｈttpをhttpに変えてください。 <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="ｈttp://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" width="（フラッシュの横幅）" height="<<高さ>>" align="middle"> <param name="allowScriptAccess" value="sameDomain" /> <param name="movie" value="（フラッシュのファイル名：*.swfのように）" /> <param name="quality" value="high" /> <embed src="（フラッシュのファイル名）" quality="high" width="（横幅）" height="（縦幅）" align="middle" allowScriptAccess="sameDomain" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" /> </object>
＃７ のお礼に書かれていらっしゃる内容に関しましては， ＃６ で書いているつもりですが...。 > 関数の中で、vars.load(txt);でvarsにテキストをロードしているのなら、 > 何故、vars.st1;の値は、undefinedとなっていて、一回目では、 > 読み込まれていないのかということとか、 だから，ロードに時間がかかるからです。 > vars.load(txt);は単純にvarsに代入されるものではないのなら、 単純に vars に代入されるものです。 > どのタイミングで、代入されているのか等が、聞きたかったのです。 知りません。 それは 「Flashの外部テキスト読み込みについて」 引用URLでも書きましたとおり， 0.001 秒かもしれませんし20分かもしれません。 ローカルにあるかネット上にあるかファイル容量はどうか回線速度はどうなのか， 場合によるので当然わかりません。 わからないから， LoadVars.onLoad で読み込み完了次第「テキストに値を表示させる」という動作をさせているのです。 ユーザーがいつボタンをクリックするかわからないので， onRelease をつかうのと同じです。 ユーザーがいつボタンをクリックするのか知っていれば， onRelease なんて必要ないでしょう。 ２回クリックしたら表示されるのは， １回目のクリックで vars に外部テキストがロード開始されて， しばらく後に（0.001秒とかその辺）ロードが完了します。 ２回目のクリックで， その vars に入った変数をテキストフィールドに表示されているだけでしょう。 同時にこの２回目のクリックで再び外部テキストのロードが開始されます。 このロードはまたしばらく後（0.001秒とかその辺）に完了します。 ロードと表示は別物ですよ。 ロード完了→表示　です。 そうでないと表示できないと何度も書いているでしょう。 人の話を全く聞いていないか，私が遊ばれているかのどちらかに思えます。 ですから根本的に ActionScript とか クラス とかそんなものは関係ないのですって。 「ロードに時間がかかる」 それを理解するだけのことです。
フローティングを出すjavascriptとはどれのことかよくわかりませんが， むらけんさんの有名な これ↓ のことでしょうか？ 「F-site レイヤーを使用したFull Flash」 http://f-site.org/articles/2006/09/09042615.html JavaScript のことはよくわかりません。 以下は， 上のページのものを使って「こうやったらできた」 というだけの方法例です。 まず上のページに行って， 「overLayFlash.js」 と 「test2.fla」 をDLさせていただきます。 そして，本題とはあまり関係がありませんが， 「test2.fla」をFlashで開いて 「test2.swf」 をパブリッシュしておきます。 そして，「overLayFlash.js」の102行目くらいにある， function showFlash(objLink){ 　　　　var file = objLink.href; 　　　　var ver = objLink.ver; という部分を， function showFlash(swf,v){ 　　　　var file = swf; 　　　　var ver = v; のように書き替えます。 ※ この時点で html の「ここをクリック1」などは使えなくなります。 そして， 「ここをクリック1」と同じ役割を果たす「ボタン入りのFlash」を新規作成し， そのFlashのボタンには次のように書いて SWF をパブリッシュします。 on (release) { getURL("javascript:void(showFlash('test2.swf' , '8,0,0,0'));"); } あとは， この SWF が貼り付いた HTML の <head> 内に， <script type="text/javascript" src="overLayFlash.js"></script> を書けば良いだけです。 ただし， この「ボタン入りFlash」で，「test2.swf」を表示させると， 「ボタン入りFlash」の方が上にあるように見えてしまします。 「ボタン入りFlash」を「test2.swf」より下にあるように見せるためには， 「ボタン入りFlash」を表示させるHTMLのダグで， object 内には， <param name="wmode" value="transparent" /> や，embed内には， <embed … wmode="transparent" … を書いて，「ボタン入りFlash」を透明表示させなければなりません。
書かれていらっしゃるものの動きは， 　写真群が上限まで動いたら下に降りる。 　写真群が下限まで動いたら上に上がる。 という繰り返しです。 それを横方向にしたいということですね。 実際のサンプルが提示できれば簡単に説明できるのですが， 文字でしか説明できないココでは作成方法を書くのが難しいです。 また，Flash や ActionScript のバージョンも書かれていらっしゃらないので， さらに具体的回答は難しいですし， 仮に(仮にの話です)サンプルを渡せるとしても， そのサンプルを作成するにはバージョンがわからないと作成できません。 Flash MX 以上(Flash MX，Flash MX 2004，Flash 8 ，Flash CS3 Professinal)をお持ちで， ActionScript 2.0 以下(ただし Flash Lite 1.x を除く) SWF をパブリッシュする場合でしたら， 新規ドキュメント を作成して， 次のスクリプトを フレーム1 にコピペし， 「制御」→「ムービープレビュー」 で "動きだけ" は動作確認ができると思います。 ------------------------------------------ //--- ↓手動で作成する場合は以上不要↓--- // slide_mc というインスタンス名のMCを作成(ASなので 深度0) this.createEmptyMovieClip("slide_mc", 0); // その slide_mcの 基準点を左上として // ステージの幅よりも長く複数の画像を配置 for (i=0; i<=20; i++) { slide_mc.beginFill(Math.floor(Math.random()*16777216), 100); slide_mc.moveTo(100*i, 0); slide_mc.lineTo(100*i+100, 0); slide_mc.lineTo(100*i+100, 70); slide_mc.lineTo(100*i, 70); slide_mc.endFill(); } //--- ↑手動で作成する場合は以上不要↑--- // 動くスピードを設定(適当に変える) speed = 5; // j実際に動かすスピードの変数 spd を用意 spd = speed; // １フレーム進む時間毎に随時実行 slide_mc.onEnterFrame = function() { // slide_mc の x 座標が 0 以下になれば if (this._x>=0) { // slide_mc の x 座標を 0 にする this._x = 0; // 設定したスピードを負にする spd = -speed; // slide_mc の右端がステージの右端に来たら } else if (this._x<=-this._width+Stage.width) { // slide_mc をステージの右端に引っ付ける this._x = -this._width+Stage.width; // 設定したスピードを正にする spd = speed; } // slide_mc を spd ずつ移動させる this._x += spd; }; ------------------------------------------ 上のスクリプトをとりあえずコピペして動作確認してみて， //--- ↑手動で作成する場合は以上不要↑--- と書いてある部分を， スクリプトではなくちゃんと写真を配置するように自作すれば， 動きだけはできると思います。 　
そっくりなサンプルではないですが こちらの本のno.48（p100)のサンプルが参考になりそうです。 http://www.amazon.co.jp/FLASH-%E3%82%A4%E3%83%B3 … 図書館などで内容を確認してから 購入することをお勧めします。
各地名インスタンスをムービークリップで作成して，map_mc の中に入れます。 そして， 地名を地図横にテキストとして羅列させるための 複数行入る縦長のダイナミックテキストを _root に作成します。 仮に上の各地名インスタンス は５つであったとして， 「area1_mc」，「area2_mc」，…，「area5_mc」 というインスタンス名を付けておいたとします。 また， 地名表示用のダイナミックテキストには 「choice_txt」 という "インスタンス名" を付けておいたとします。 階層構造は次のような感じになるということです。 　_root 　　├ choice_txt 　　└ map_mc 　　　　　├ area1_mc 　　　　　├ area2_mc 　　　　　├ area3_mc 　　　　　├ area4_mc 　　　　　└ area5_mc このようにした場合， ご質問で書かれていらっしゃるスクリプトの「※空欄;」部分は， 次のような感じにすれば良いと思います。 if (this.area1_mc.hitTest(_root._xmouse, _root._ymouse, true)) { _root.choice_txt.text += "江戸町\r"; } if (this.area2_mc.hitTest(_root._xmouse, _root._ymouse, true)) { _root.choice_txt.text += "明治町\r"; } if (this.area3_mc.hitTest(_root._xmouse, _root._ymouse, true)) { _root.choice_txt.text += "大正町\r"; } if (this.area4_mc.hitTest(_root._xmouse, _root._ymouse, true)) { _root.choice_txt.text += "昭和町\r"; } if (this.area5_mc.hitTest(_root._xmouse, _root._ymouse, true)) { _root.choice_txt.text += "平成町\r"; } 地名は地名で辻褄が合うように配列などに地名データとして格納しておけば， for文 などループ文の使用でもっとスマートに書けるとは思います。 以上は， そういうスマートな記述方法を説明した回答ではなく， あくまでも，やり方の一例の大筋を回答したものだと思ってください。 ======================================== なお，余談ですし， こういうことを書き出すときりがなくなってしまうのですが， 地名の選択ミスをすることも考えられます。 もし上のようなスクリプトにしたとして， 地名の選択ミスをした場合， その今選択した町名を１つだけ消すボタンを用意するとするならば， そのボタンには次のように書けば良いと思います。 ------------------------------------ // map_mc 上にボタンがあるときのみ必要 on (press) { _root.map_mc.drag_flg = true; } on (release) { txtArr = _root.choice_txt.text.split("\r"); txtArr.pop(); txtArr.pop(); if (txtArr.length == 0) { _root.choice_txt.text = ""; } else { _root.choice_txt.text = txtArr.join("\r")+"\r"; } } ------------------------------------ こういうもの（便利なアプリケーション）を作成しだすと， いろんな機能やいろんな場合が考えられて，たいてい作業が長く長くかかります。がんばってください。
私は Flash 8 まで，それも日本語版しか持っていませんが， ご質問されている辺りの仕様は CS3 でも変わらないと思います。 以下，ご参考までに。 > 「だんだん浮き上がる」「だんだん消えていく」ができません。 正式名称ではありませんが， 「だんだん浮き上がる」「だんだん消えていく」は， フェードイン・フェードアウト(fade in & fade out) と呼ばれています。 日本語サイトだと， そのように検索すれば，そのようなものがたくさん出てきます。 > A.画面右下にある「Symbol 1」(名前を変更しない状態で)を > 右クリックしプロパティを開くが「Alpha」に関する項目が見当たらない それはシンボル（Symbol）を見ているからではないでしょうか。 まず， シンボル(Symbol)とインスタンス(Instance)の区別をしっかり付けた方が良いと思います。 シンボルはライブラリ(library)の中にあるインスタンスのおおもとです。 絵や文字をムービークリップなどにシンボル化して，ステージ(Stage)上にあるものがインスタンスです。 インスタンスはシンボルの複製品です。 移動させるのも（つまりxy座標を変化させるのも）， フェードイン→フェードアウトさせる のも(つまりアルファ(alpha)を変化させるのも) ， 両方とも，このステージ上のインスタンスです。 このご質問では， 「インスタンスの x や y や alpha というプロパティを変化させたい。」 と書かれているのです。 ご自分でされている質問の内容を客観的に正確にとらえてください。 すると混乱は少なくなると思います。 > 2つ目「i」( Now right click on the movie clip～)で > いつも引っかかります。 シンボルに変換する話はその上の iii で完璧に終了しています。 シンボルに変換することはとりあえずどうでも良いので置いておいて， i では次の段階の話がかかれています。 > i Now right click on the movie clip and click on properties… 　ステージ上のムービークリップインスタンスを 　クリック(選択)し，そして その状態でステージの下にある 　プロパティインスペクタをクリック(選択)し … という意味です。 もしステージの下にプロパティインスペクタ(パネル) が表示されていない場合は， 日本語版であれば， 「ウィンドウ(W)」→「プロパティ(P)」→「プロパティ(P)」 もしくは， 「Ctrl」キー ＋ 「F3」キー で出てくると思います。 　ステージ上のインスタンスを選択 　　→そのインスタンスのプロパティを変える これでステージ上に表示されているインスタンスの見かけが変わるのです。 あとは補足。 > 「layer 1(名前を変更しない状態で)」のあるバー(？)から、 > 1フレーム目を左クリックで指定しalphaを0％に、 > そして30フレーム目も同様に左クリックで指定し > alphaを100％に。 ですが、何も変りません。 いったいどこのアルファ(alpha)を変えたのか知りませんが， レイヤー(layer) はオブジェクトでもインスタンスでもなく， インスタンスなどステージ上に配置されたものの "上下関係" です。 そもそもレイヤーのプロパティなど変えられるようになっていませんし， アルファを変えるという意味もわかりません。 仮にレイヤーにアルファがあるとすれば，「常に0 (いつも完全に透明)」 です。 レイヤーには色もないので常に完全に透けて見えています（つまり見ることはできません）。 HTML にも MS Word にも MS Excel にも Adobe Photoshop にもレイヤーという概念は存在しますが， そもそもレイヤーなど見えませんよね。 Flash のレイヤーもこれらのレイヤーと全く同じです。 Flash のレイヤーが他のもののレイヤーと少し違う点は， １つインスタンスをモーショントゥイーン(Motion tween)で動かす場合， もしくは，塗りなどをシェイプトゥイーン(Shape tween)で動かす場合， この２つの場合に限って， そのインスタンスや塗り専用のレイヤーが必要になるということぐらいです。 ActionScript で動かす場合は必要はありません。 Flash のレイヤーはトゥイーン(Tween)を使う場合， セルアニメ(Cel Animetion)でいうところのセル(Cel)の役割も果たします。 セル(Cel)というのは，絵を描くピラピラの透明なセルロイド(Celluloid) のことです。
よくわかりませんが， Flash から画像を抜いているのではなくて， 単にスクリーンショットを撮っているだけなのではないでしょうか？ 例えば撮りたい Flash をブラウザなどで表示させて， 「Alt」キー ＋ 「PrintScreen(Prt Scr)」キーを同時押しして， 何かのソフト（ペイントとかWordとかとか…）を起動させて 「Ctrl」キー ＋ 「V」 で貼り付けているとか。 「PrintScreen(Prt Scr)」キーは， 普通，キーボードの右上の方にあります。
AS1&2 では _focusrect = false; で良いのではないかと思います。 これは MovieClipクラスのプロパティです。 すべてのフォーカス移動を止めたい場合は， _root の フレーム1 などに上のスクリプトを書きます。 AS3 ではクラスが変わったようです。 http://livedocs.adobe.com/flash/9.0_jp/ActionScr …
もしかしたらしっているかもしれないですがここはソースを詳しく説明してくれていますよ。 http://withd.jp/web/tips/020104/2466.html
実際に円弧を描画する drawLine メソッドの冒頭に 　> mc.clear(); という一文がありますよね。 MovieClip クラスの clear メソッドは、ムービークリップ内にある lineTo や curveTo などのメソッド（描画メソッド）で描いた描画オブジェクトを全て消去する命令です。 つまりこの drawLine メソッドは、”今まで描いた線を全て消してから”次の線を描画する設計になっているため、先に描いた円弧を残したまま他の円弧を描画することができません。 従って、１つのムービークリップ内に描画できるのは常に１つの円弧だけ、ということになります。 深度の指定に誤りがあって１つしか表示されないのはよくある話ですが、今回の件は深度の衝突が原因ではないと思います。 解決策は２通り考えられます。 　1) DrawArc.as ファイル内の mc.clear(); を削除、またはコメントにする 　2) new DrawArc の引数に、それぞれ違うムービークリップを指定する 1) は、要するに前に描画した線が clear メソッドにより消されてしまうことが原因なのですから、これをなくすということです。 ただし、古い線がいつまでも残ることになるため、drawLine メソッドを呼び出すたびに余計な線の描画処理も行われ、場合によっては、処理が重くなったり線が汚く見える可能性も考えられます。 2) は、円弧を描画する数だけムービークリップを用意する方法です。 １つのムービークリップにつき１つの円弧しか描けないのなら、必要な分だけムービークリップを用意すれば、いくつでも円弧を同時に表示することができると言えます。 DrawArc クラスでは、new DrawArc の引数で指定されたムービークリップに描画する設計になっています。 クラスのオブジェクトを２つ作っても、new DrawArc に渡す引数が同じでは円弧が１つだけになってしまいますので、それぞれに違うムービークリップを指定します。 ムービークリップはステージに予め配置しておいても構いませんし、createEmptyMovieClip で作成しても構いません。 このクラスで円弧が１種類しか描けない件は深度の衝突が直接の原因ではないと思われますが、createEmptyMovieClip でムービークリップを作成する際は深度の衝突にご注意ください。 １つの円弧につき１つのムービークリップを用意すると、swapDepths メソッドで深度を変更して重ね順を変える演出も作りやすく、クラスファイルを編集する必要もありません。 また、ムービークリップであるということは、グラフ内の特定の項目をクリックして何かを表示するといった機能も簡単に作れますから、2) の方法がオススメです。 ご提示のスクリプトでは、new DrawArc にいずれも this を渡していますが、この部分を例えば、 （↓各行頭に全角のスペースが入っています。コピーする際は、全て半角のスペースかタブに置き換えてください） 　import DrawArc; 　//円弧を描画するムービークリップを作成 　clip1 = this.createEmptyMovieClip( "arc1" , 　this.getNextHighestDepth() ); 　clip2 = this.createEmptyMovieClip( "arc2" , this.getNextHighestDepth() ); 　mc = new DrawArc( clip1 ); 　mc2 = new DrawArc( clip2 );//新しい用 このように、それぞれ違うムービークリップに変更してみてください。 DrawArc.as ファイルを編集しなくても、２つの円弧を同時に表示することができます。 円弧の重なり順はムービークリップの深度の順序に従います。 上記の例では、createEmptyMovieClip でそれぞれの円弧を描くムービークリップを作る際に、黄緑の円弧（ DrawArc オブジェクト” mc2 ”で描画する円弧）が上に重なるように深度を指定していますので、change およびchange2 関数内の swapDepths は不要です。
ちゃんと動きますよ。 > 時間と分はうまく表示できたのですが、 > 秒が止まってしまってます。 それはそう見えるだけで，時間も分も止まっていませんか？ スクリプトのコピペだけでなくちゃんと その1 から読んで，理解してみてください。 携帯待ち受け　Flash時計の作り方　その１ http://mobilef.jugem.jp/?eid=2 > 全体を2フレームにして1フレーム目に > アクションスクリプトを記述したのは、 > 携帯（Flash lite1.1）の場合、 > onClipEvent(EnterFrame)が使えないためです。 > なので常にループさせて時間を取得してます。 > こうしないと最初に時間を読込んだっきり動きません。
あなたがお礼で書かれたコードと、上げたおられるサイトの差は、 >var mvEfcList = "FXX;FZH;FBT;FHL"; が var mvEfcList = "FXX;FLI;FZH;FZV;FPL;"; と「；」が抜けている所ぐらいですね。 （でも、こういったJAVAでｓｗｆが表示できるんですね。へぇ～）
＃１ です。 > ということは、開発者が複数いる場合は、 > 人数分を購入するということですね。 基本的にはそうですが人数にもよるのでわかりません。 ＃１ で書いた最初の URL でも紹介されていますが， Flex Data Services 2 というものもあるそうですよ。 詳細は知りませんがこちらのライセンスは１ライセンス１CPUのようです。 Data Services Departmentalが同時アクセス数100で78万円， Departmental版が78万円、無制限のEnterpriseが260万円らしいです。 そういう大規模なものは直接販売代理店などにコンタクトをとられる方が良いと思います。
> どれもひよこや熊などのイラストを動かしたりする手法 言わんとされている雰囲気はわかります。 しかしそれは， 絵の描き方の基礎 と それを使った動き だと思いますしそれが基礎です。 また，もしそれがちゃんとできるのでしたら， ひよこや熊などをカッコイイ写真に置き換えれば良いだけです。 つまりひよこや熊を 描いて 動かす ことよりも， カッコイイ写真などを動かす方が 描く 手間が少なくなる分， Flashとしては簡単（作成レベルを下げること）になります。 ただし， ひよこや熊を動かしていてもセンスは上がりませんから， その辺のセンスは実際のサイトをたくさん見るとか， 写真雑誌を読むとかWeb雑誌を読むとかして身につけないとならないと思います。 つまりFlashとは離れた書籍などを読んで修行する必要があると思います。 たとえば次のページには， ひよこや熊までにも至らない「ボール」の色々な動かし方が書いてあります。 「モーショントゥイーンと効果」 http://1art.jp/flash2/chapter/3/3.htm →拡大・縮小 　Startボタンを押せばボールが拡大します →明度 　Startボタンを押せばボールが白くなります →着色 　Startボタンを押せばボールの色と位置が変わります →アルファ 　Startボタンを押せばボールの透明度と位置が変わります →詳細 　Startボタンを押せばボールの透明度と色と位置が変わります > １）メニューをクリックすると背景画像がスムーズに切り替わる 上サイトの「アルファ」にある ボール を写真に置き換えればできるでしょう。 ボールでそれができなければ写真でもできません。 ステージ上に置いた（読み込んだ）写真は（描いた絵も同じく）， グラフィックシンボルにもムービークリップシンボルにも変換されていませんから， とりあえずステージ上に置いた写真をグラフィックもしくはムービークリップに変換して， それを動かせば（透明度を変えれば）良いと思います。 もう少し凝ったもので写真を使った説明もあります。 「写真の出し入れ（４）」 http://www.flashiroha.com/motion/p_transfer/phot … 写真を使って説明されてはいますが，結局「ボール」と同じです。 > ２）ローディングを作りたい 「Now Loading Flash」などとGoogleなどで検索してみてください。 http://www.google.co.jp/search?hl=ja&q=Now+Loadi … ものすごくたくさんの Now Loading の作り方や， そのまま使用可能なサンプルが置いてあります。 > ３）中のコンテンツ（テキスト画像のみ）が中のボタンをクリックするとスムーズに切り替わる 「中のコンテンツ」をムービークリップ内に作成し， 上の「アルファ」のような原理でムービークリップ内でスムーズに切り替えるようにして， そのムービークリップにインスタンス名を付けてムービークリップ内のタイムラインを MovieClip.gotoAndPlay(？); させれば良いのではないでしょうか。 その他色々方法はありますが，ボールでも熊でもひよこでも同じです。 > ４）背景がウインドウサイズに合わせて拡大縮小する。 Flash を HTML に貼り付けるとき， px ではなくて ％ で貼り付けると基本的に Flash の中身はすべて拡大縮小します。 もっと色々とカスタマイズしたい場合は，次のような方法もあります。 Flashゲーム講座＆ASサンプル集【表示に関する情報について】 http://hakuhin.hp.infoseek.co.jp/main/as/stage.h … ↑出てくるのは ひよこ や 熊 のようなキャラと格子の背景ですが， この辺も他のものに置き換えて考えれば良いと思います。 そんな感じです。 結局 Flash を動かす動かし方の説明なんて， カッコイイ写真を使っても使わなくてもすることは同じです。 ボールでできれば写真でもできる。 写真でできればボールでもできる。 カッコイイ写真などで誤魔化される説明より， シンプルなものでの説明の方が良いと思いますよ。
まず、nextFrame(*)について... ご察しのように、誤っております。 「次の」フレームに飛ぶ、という命令ですので、引数によりジャンプ先の指定はできません。 では、回答のほうに入ります。 「_root.nextFrame();で指定すると」ということは、 _rootの　1フレーム目にＭＣ０１、2フレーム目にＭＣ０２、・・・ といった感じでしょうか？（違うのであれば以下の文章は読むに値しません） _root.nextFrame();によって次のフレームに飛んだだけでは、 そこにＭＣを最初のフレームの状態で配置されます。 _root.mc##.gotoAndPlay(*);では、 ＭＣ＃＃が現在のフレームで配置されておらず、 存在していないＭＣに対して処理するわけですから、うまくフレームを呼び出せません。 _root.nextFrame(); _root.mc##.gotoAndPlay(*); のように２つ並べるだけでＯＫです。 nextFrameでＭＣ＃＃が配置された状態でそのＭＣに処理できるようになります。 勝手な妄想の世界で喋っていなければよいのですが・・・＾＾；
現在、Flashが再生できる、パソコン、携帯以外の機器というと タッチスクリーンが搭載されている機械がFlashを用いて画面を表示している場合があります。 電車のドアの車載広告などは一般的にはTV局の下請けなどが動画編集ソフトで作っている場合がほとんどで、 形式はMPEGやAviになり、Flashであるものは少ないと思います。 しかし、最近ではタッチスクリーン系の動画広告(デジタルサイネージと言うのですが)も増えてきまして こちらでは、Flash等が組み込まれている場合があります。 テレビのほうは残念ながら、Flashを再生できるという機種はまだ聞いたことがありません。 しかし現在、HTMLブラウザが組み込まれているテレビは多々ありますので、 将来的にはFlashを再生できる機種と言うのは出てくると思われます。 （メーカーの人に予定はあるって聞いたことがあるので、CATV系のIP放送で、ひょっとしたらもう取り入れているところはあるかもしれない）
【書き換え後のスクリプト】 の if ( nParcent == 100) { は 100 に "ちょうど" なるはずはありませんよね。 そういうことです。 if ( nParcent >= 100) { みたいにしてみれば良いのではないでしょうか。
このサイトが参考にならないでしょうか？ http://mobilef.jugem.jp/?eid=3
はじめまして。 onClipEvent (enterFrame) { if (_root._ymouse>150 && _root._ymouse<300) { this._y = _root._ymouse; } } こんな感じでしょうか？
配列に入れていおて、ランダムで入れ替えればいいかと サンプル的にこんな感じ for(i = 0; i < lp;i++){ work[i]=i; } for(i = 0; i < lp;i++){ // シャッフル x=random(lp-2); j=(i+x+1)%lp; //同じ番号にならないように a = work[j]; // 入れ替え work[j]=work[i]; work[i]=a; } ５枚なら上から5個使えばいいかな
はじめまして。 パソコンのスペックにもよるのかもしれませんがファイルサイズで動きが重くなることは無いと思います。(745KBならそれほど大きいともいえないとおもいますし…) スクリプトが複雑で、それが原因で処理が追いつかず重くなることはありますが、写真スライドならそれほど複雑なものでもないように思うので(どんな内容のものか分からないのでもしかするとそれが原因かもしれませんが…。)これが原因とも考えにくいと思います。 もしかすると？と思うことがあるので書いておきます。 私の場合、Flash8を使用していましてWeb Effectは使ったことがないので同じように設定できるかは分かりませんが…。 書き出す(パブリッシュ)時にHTMLのウィンドウモードを『標準』(デフォルト)としていると重くなることがあるようです。 『不透明表示』と変更することで解決しました。 参考になれば幸いです。 全く的外れな回答でしたら無視して下さい。
現在プラグインの不調でリンク先をみることができません（落ちる）。 また，何の動作検証もしていませんが。 結局，ユーザ定義関数 pressB() が実行されると次の写真に移るのですよね。 ですから， ボタンをクリックせずに自動的に pressB() を定期的に実行させれば良いように思います。 setInterval 関数あたりで，定期的に pressB() を実行させれば良いのではないかと思います。 たとえば ５秒 で次の写真に切り替えたいときは， myID = setInterval(pressB, 5000); のようなことを， function loadX(success:Boolean):Void{ 　　if(success == true){ 　　　　// この辺のどこかてきとうな場所 　　} } に書くとかすればできる気がします。 （未検証ですからわかりません）
やっぱり3.0だと思います。 ２と３で割と大きく違うので3.0からいったほうがいいと思います。
> ttp://test.jp/test.php?aaa=1 > というページ内にあるFLASHが、このaaa=1という値を知る方法を教えてください。 これは SWF ではなく PHP(HTML) に aaa=1 を渡しています。 したがって， PHP(HTML) から JavaScript (など(しかない)) 経由で，Flash に aaa=1 を伝える必要があります。 つまり具体的には， SWF を貼り付ける タグ を JavaScript の document.write 辺りで PHP(HTML) に書き込む形で， ○○.swf?aaa=1 を貼り付けるようにするとか，FlashVars を使うとかです。 しかし面倒ですよね。 ですから，普通はそういう遠回りなことはせずに， PHP で ○○.swf?aaa=1 タグ入り HTML を生成するか， FlashVars入り HTML を生成すると思います。 ○○.swf?aaa=1 にしても FlashVars にしても， SWF が表示されたときに，すでに aaa=1 は SWF の _root(メインのタイムライン階層) に送信（配置） されています。
> Adobe Flash Player 9　で作成されたらしい FlashPlayer で Flash(SWF) は作成できません。 Adobe Flash Player は， レコードプレーヤー や 普通の CDプレーヤー のように プレーヤー です。 Adobe Flash Player 9 は， 質問者様のブラウザに入っている FlashPlayerプラグイン のバージョンが 9 なのです。 それが右クリックなどで表示されるだけです。 > 「テキスト」のコピーが出来ません。 Flash のテキストなど普通はコピーできないでしょう？ 逆に コピーできる テキストなんて見たことないですよ（作成すればできますが）。 どこでも良いですが 例えばTOYOTA http://www.toyota.co.jp/ 例えばSONY http://www.sony.co.jp/ ↑どのテキストをとっても，コピーなどできません。 > おそらくセキュリティーが掛かっているのかも知れませんが、 セキュリティがかかっているからコピーできないのか， セキュリティの問題ではなく最初から普通の通りコピーできないのか知りませんが， もし セキュリティがかかっているのなら，ココでそういうことは教えられません。 また セキュリティ のかけかたも様々ですから，回答できるはずもありません。 > テキストをコピー＆ペーストできる方法をご存知ありませんか？ とにかく，普通は コピー＆ペースト なんてできません。 以上，やたら普通（当たり前）の回答です。
ステージの背景に色を付けるのではなくレイヤーの一番下に黒の背景画像（ステージサイズのものまたは、それ以上大きいもの）をおいて、 フレームでこの背景があるところとないところでわけてあげれば、反転したようになると思います。 　ボタンなどで行う場合は、黒の背景画像がおかれていないフレームに飛ばせばいけると思います。 　フレーム１に黒い背景がおかれていてフレーム２に置かれていないとすると 　on(release){ gotoAndStop(2); } 　同じフレームでする場合は、 　on(release){ back1._alpha=0; } back1は、背景画像のインスタンス名 でいかがでしょうか？
おそらくこの件ではないかと思います↓。 「allowScriptAccess のデフォルト動作の変更について（Flash Player 9）」 http://support.adobe.co.jp/faq/faq/qadoc.sv?2334 … > 解決方法 （Solution） > 問題が発生する HTML ページで > allowScriptAccess="always" を指定します。 > HTML ページなしで SWF をホストしているサイトは、 > Flash Player をより低い特権モードで実行させるために > HTML を用意してください。
自分は使ったことはないのですが、 アクションスクリプトにprint関数があります。 Flash自身のフレーム数を指定しての印刷が可能です。 ただ、コレはFlash部分のみの印刷だと思うので、Flash内で「このページを印刷」ボタンインスタンスが押されたら、stop()でフレームを止め、外部javaスクリプトを呼んで、印刷ダイアログを表示させる感じかなあと思います。 http://www.tagindex.com/javascript/page/print.html 頑張ってください。
フラッシュの基本的な作り方さえ知っていればおのずとスライドショーぐらい作れるはずです。 タイムラインに50フレーム毎に画像を入れ替えるだけでスライドショーに見えます。 フェード効果（じわっと画像が変わる）にしたいならレイヤーに分けてトゥイーンにアルファ効果を使います。 クリックで画像を変えたいならアクションスクリプトを使います。 最初がわかれば簡単です。がんばってください。
以下，＃２ の方の補足的回答だと思っていただければよろしいかと思います。 > 各行はsplitで配列に格納したいと思っています。 ここが具体的でなくてよくわかりませんが， 「<>」 を区切り記号として， 　2, 名前, メールアドレス, 画像.jpg, 　1, 名前, メールアドレス, 画像.jpg, というような２次元配列１つを作成するということとして回答します。 -　-　-　-　-　-　- そして外部テキストですが， 回答するにはもう１つ問題点があります。 データを作成するソフトやOSやプログラムや設定によって改行コードは違います。 １つの例として， 　Windows の メモ帳 を用いて 　文字コードShift-JIS（ANSI）で普通に， 　2<>名前<>メールアドレス<>画像.jpg<> 　1<>名前<>メールアドレス<>画像.jpg<> 　というデータを記入して， 　「data.txt」 というファイル名で保存した場合 についてスクリプト例を回答します。 「data.txt」 と同じフォルダにSWFがある場合の， フレームに書くスクリプト↓。 ---------------------------------------- // テキストをShift-JIS として扱う System.useCodepage = true; // LoadVarsクラスのインスタンス myLV を作成 myLV = new LoadVars(); // データを格納する配列 dataArr を作成 dataArr = new Array(); // ロード完了時の動作定義（引数:ロードしたデータ） myLV.onData = function(myData) { // 改行コード区切りで preArr を作成 preArr = myData.split("\r\n"); // preArr の要素数未満でループ for (i=0; i<preArr.length; i++) { // preArr を <>区切りで dataArr のi番要素 に代入 dataArr[i] = preArr[i].split("<>"); } // ---↓出力検証（本題と関係なし）↓--- for (i=0; i<preArr.length; i++) { for (j=0; j<dataArr[0].length+1; j++) { trace("dataArr["+i+"]["+j+"]="+dataArr[i][j]); } trace("------------"); } // ---↑出力検証（本題と関係なし）↑--- }; // 外部テキストのロード myLV.load("data.txt"); ---------------------------------------- 通常， LoadVars.onLoad　でロード完了のタイミングを取得すると思いますが， 上の例では LoadVars.onData　で取得しています。 　LoadVars.onData = function(変数名){ } という形で定義するとその 変数 の値としてロードしたデータ自体が代入されます。 このような方法を使うと， 　変数名=値&変数名=値&変数名=値&… というデータ形式でなくてもロードしたデータを取ってくることが可能になります。 ご質問では， > 外部テキストファイルの読み込みを参考資料などを見ていると、 > 下記のような形式で読み込みを行っているのですが。 と書かれていらっしゃいますが， 読み込み まででしたらどんな形のテキストファイルでも可能です。 たとえば XML でも HTML でも CSV でも SVG でも何でもです。 テキストのロードは何でも可能なのですが， ただ， XML を除くテキストの場合， 　変数名=値&変数名=値&変数名=値&… のような形にしておかなければ， データの値が利用できない (名指しで呼べない) から， そういう形式のデータにしてあるだけです。 上のように LoadVars.onData　を使うと， データ全体は名指しで呼べるようになるので， 変な形のデータでも工夫次第でその後の利用が可能になります。 -　-　-　-　-　-　- Windows メモ帳 の改行コードは \r\n(CR+LF) です。 また，文字コードは変えられますがデフォルトでは Shift-JIS です。 Excel で CSV を保存した場合も \r\n( CR+LF) です。 その他はソフトやそのソフトの設定によって変わります。 Mac の場合はソフトの設定によっては変えられると思いますが， デフォルトでは Shift-JIS で， 基本的に改行コードは \n(LF) だと思います。 その他も場合によって変わります。 -　-　-　-　-　-　- 上のコードを書いて 「制御」→「ムービープレビュー」 してみると， 「出力検証（本題と関係なし）」 によって次のようなものが出力表示されます。 　dataArr[0][0]=2 　dataArr[0][1]=名前 　dataArr[0][2]=メールアドレス 　dataArr[0][3]=画像.jpg 　dataArr[0][4]= 　dataArr[0][5]=undefined 　------------ 　dataArr[1][0]=1 　dataArr[1][1]=名前 　dataArr[1][2]=メールアドレス 　dataArr[1][3]=画像.jpg 　dataArr[1][4]= 　dataArr[1][5]=undefined 　------------ 「<>」 を区切り記号としていますから， 画像.jpgの後にも <> があるため 画像.jpg の後にも "" という要素は存在します。 この点に少し注意してください。 　
とにかくまずは、 何かを検索した場合、URLがどうなっているのかをよく観察することです。 　ｈttp://ｗww.google.co.jp/search?hl=ja&q=○×△ ○×△ が検索ワードになっている部分です。 ですからこの場合は 　getURL("ｈttp://ｗww.google.co.jp/search?hl=ja&q=○×△"); を実行すればそのページにジャンプできますよね。 しかしこれだと ○×△ を検索したときのページに固定でしかジャンプできません。 そこで、○×△の部分を変数にしておきます。 　getURL("ｈttp://ｗww.google.co.jp/search?hl=ja&q=" + 変数); その変数の部分に、検索したい文字列を記入したテキストフィールドを指定すれば良いということになります。 　↓続きはこちらへ↓　 「QNo.2477755 Googleの検索窓をFlashオブジェクト内に設置したい 」 http://oshiete1.goo.ne.jp/qa2477755.html もう少し上のURLを補足しておきますと、 階層は次のようになっている状態での説明です。 　_root 　　├ インスタンス名 「q_txt」 というテキスト入力 　　└ ボタン ←スクリプトを書くボタンインスタンス
_root がずれたからではないでしょうか？ 外部 SWF 単体起動の場合， その _root はその SWF の シーン 1 などメインのタイムラインになりますが， 他の SWF にロードされると _root はそのロードした SWF の シーン 1 などメインのタイムラインになります。 もしそうであるならば対処法は２つで， １つ目は外部 SWF の方に， _root がつく絶対パスを使わずに，すべて this とか this._parent などという 相対パス で書くということです。 もう１つは 外部 SWF の _lockroot を true にすることです。 「Flashドキュメンテーション _lockroot (MovieClip._lockroot プロパティ) 」 http://livedocs.adobe.com/flash/8_jp/main/000024 …
先方の会社の Flash のバージョンを書かれていませんが， 単に先方の会社の Flash のバージョンが 8 以下なのでは？ > 以前に送ってきたflaファイルは問題ありませんでした。 送ってきた fla が CS3 以下のバージョンで作成されたものだと，CS3 では問題なく開けます。 ですから， これでは先方の会社の Flash のバージョンを特定したことにはなりません。 もし先方が Flash 8 をお使いでしたら， fla を保存するときに Flash 8 形式の fla を選択して保存すれば良いと思います。 ただし，AS3 を使用していたりすると，Flash 8 形式の fla は作成できません。 もし先方が Flash MX 2004 以下をお使いでしたら， それに適応した fla は作成できません。 　CS3 作成の fla を 8 形式で保存し， 　その fla を 8 で開いて MX 2004 形式の fla を保存する。 という面倒なことをすればできなくもありませんが， こういうことは普通はしません。 最初から MX 2004 以下で作成すれば良いだけのことです。
「プログラム実行の流れ」は， おおまかには次のようになるようにすれば良いと思います。 （ASコードの行の順ではありません。） 　外部XMLのロード 　　　　↓ 　XMLロード完了次第 　画像をMovieClipLoaderにロードし， 　ムービークリップに表示 　　　　↓ 　画像がロードされ次第 　画像ムービークリップにリンクを設定 この説明では， ファイルはすべて同じフォルダにベタ置きするものとします。 　任意のフォルダ 　　　├ ○○.html 　　　├ ○○.swf 　　　├ data.xml 　　　├ aaa.jpg 　　　├ bbb.jpg 　　　└ ccc.jpg まず XML ですが， 次のような感じで用意すれば良いと思います。 あくまでもサンプル例で，必ずしもこのようにする必要はありません。 ----------------------------------------- <?xml version="1.0" encoding="UTF-8"?> <file> <gazou image="./aaa.jpg">./xxx.html</gazou> <gazou image="./bbb.jpg">./yyy.html</gazou> <gazou image="./ccc.jpg">./zzz.html</gazou> </file> ----------------------------------------- > あらかじめムービークリップをステージ上に配置し とりあえずそこまで作成して， その３つのムービークリップにインスタンス名を付けます。 「load_mc0」，「load_mc1」，「load_mc2」 というインスタンス名を付けたことにしておきます。 そして， 「load_mc0」，「load_mc1」，「load_mc2」 が存在するフレームに次のように書けばできあがりです。 ----------------------------------------- // MovieClipLoaderクラスのインスタンスを作成 var myMCL:MovieClipLoader = new MovieClipLoader(); // ロード監視用インスタンスの作成 var mclListener:Object = new Object(); // ロード対象MC画像表示時 の動作を定義 mclListener.onLoadInit = function(targetMC:MovieClip) { // 変数 n にロード表示したMCの最後の数字を取得 var n:Number = Number(targetMC._name.substr(7, 1)); // ロード表示したMCに lnk という変数を設定 targetMC.lnk = myXML.firstChild.childNodes[n].firstChild.nodeValue; // 検索されたMCクリック時の動作を定義 targetMC.onRelease = function() { getURL(this.lnk, "_blank"); }; }; // mclListenerをmyMCLのリスナーとして登録 myMCL.addListener(mclListener); // - - - - - - - - - - // XML クラスのインスタンスを作成 var myXML:XML = new XML(); // 余分な空白などを削除する設定にする myXML.ignoreWhite = true; // 外部 XML ロード完了時 の動作を定義 myXML.onLoad = function(loadOK) { // ロード成功時 if (loadOK) { for (i=0; i<=2; i++) { // 外部画像のロード myMCL.loadClip(myXML.firstChild.childNodes[i].attributes.image, _root["load_mc"+i]); } } }; // 外部XMLのロード myXML.load("data.xml"); ----------------------------------------- 一見， 最初に書いた 「プログラム実行の流れ」 とは違って見えるかもしれません。 違うというより， まるで でたらめ か，逆順に実行される ように書いているように見えるかもしれません。 しかし最初に書いた 「プログラム実行の流れ」 通りの順にちゃんと実行されます。 決して でたらめ に書いたのでも 逆順に実行される ように書いたのでもありません。 XML がロードされる前に XMLがロードされたときの動作定義 をしておく必要がありますし， 画像をロードする前に 画像がロードされたときの動作定義 をするのが普通です。 また，それ以外の変数やデータやインスタンスも先に準備しておくのが普通です。 したがって，上のようなコード順にするのが妥当となります。 // 変数 n にロード表示したMCの最後の数字を取得 var n:Number = Number(targetMC._name.substr(7, 1)); という 奇妙な部分 がありますが， なぜこのようなものを書いているのかと言うと， MovieClipLoader に一気に画像などをロードした場合， ロードされる順が保証されていないからです。 重い画像は当然遅くロードが完了すると思いますし， その他色々な要因でロードされる画像の順は変わります。 そこで， ロードされた画像用のXMLデータノードのどれに対応しているかを特定するために n を取得しています。 targetMC._name は 「load_mc?」 です。 「?」 は 0～2 のうちいずれかです。 したがって targetMC._name.substr(7, 1) は， ("load_mc?")._name.substr(7, 1)　と同じ意味になります。 これで 「?」 の文字部分が取得できます。 ムービークリップが 「load_mc0」～「load_mc325」 まであるとするなら， var n:Number = Number(targetMC._name.substr(7, 3)); と変更してもらえば良いです。 「load_mc0」～「load_mc????」 と予測が付かない場合は，適当に， var n:Number = Number(targetMC._name.substr(7, 10)); などとしてくださっても問題ありません。 　MovieClipLoader に， 　最初は XML の １つ目のノードの画像をロードし， 　そのロードが完了次第 次のノードの画像をロードし， 　そのロードが完了次第 次のノードの画像をロードする。 というしくみでロードさせるようにすると，この奇妙な部分は不要です。 ただし，この場合， 画像がパラパラに読み込まれて全体のロードには時間が余分にかかります。 また， MovieClipLoader に画像が読み込まれるたびにその数をカウントし， カウントが目標数になったときに初めて， すべての画像MCに for文 で順に getURL を設定するようにしても， この奇妙な部分は不要になります。 ただし，この場合， すべての画像のロードが完了しないとすべての画像MCにリンクがかかりません。 なるべく速く３枚の外部画像をロードし， ロードされる端からリンクを設定するために，この奇妙な部分を使っています。 この辺は時と場合や好みなどで変わります。 またこれ以外にも方法はあります。 １つの技巧的工夫例だと思ってください。 Flash など Web 系で， 他の外部のものをロードするプログラムは， 「常に ロードされる時間 を待って次の動作をさせる」 ということを考慮してプログラムする必要があります。 この辺のロードされる状態が順を追ってイメージできれば簡単にできるのですが， 慣れるまではちょっと難しいかもしれません。 あと上では触れていませんが， 外部データをもとに，そのデータから他の画像などをロードさせる場合， ファイルパスも間違える可能性が高くなるのでファイル階層を変える場合は注意してください。 基本的にすべては SWF からではな HTML からのパスになります。 上の XML に書いた 　<gazou image="./aaa.jpg">./xxx.html</gazou> というファイル（ファイルパス）や， スクリプト中の， 　// 外部XMLのロード 　myXML.load("data.xml"); のパスは，SWFから見たファイルパスではなく HTML から見たファイルパスです。 　任意のフォルダ 　　　├ ○○.html 　　　├ ○○.swf 　　　…　　… ということで作成しているので， SWF からのパスも HTML からのパスも同じになっているだけです。
http://www.adobe.com/jp/support/flash/ts/documen …
書かれていらっしゃるURLがなぜか見れません。 ご質問の感じからして， ビデオとFlashの合成のことだと思います。 Flash 8 が出た頃，けっこう話題になったことです。 その頃は Adobe（MacroMedia）本家サイトでも， 撮影のしかたやそれを使う方法やできたものなどの公開をしていたのですが， 今はどこに消えたのか見つかりませんでした。 まずは ブルーバック とか グリーンバック で動く人物を撮影して， Flash で クロマキー 処理をしているのだと思います。 講演メモ（FLASHでクロマキー処理した映像を使用する） http://www.cmpunch.com/tips/000125.php 　→ … の解説ファイルをアップします。 　　　の 「解説ファイル」が参考になるかも。
＃１ です。 > ムービープレビューではちゃんとなるのですが、 > 書き出すと音が聞こえません。 そうならないのでよくわかりません。 ムービープレビューでもシーンが変わっても再生し続けますし， 書き出した物を Flash Player（スタンドアローン） で開いても生成し続けますし， パブリッシュしたものを IE6 の FlashPlayer9 経由で見てもちゃんと再生されます。 違いと言えば OS は XP の SP2 くらいなものだと思いますが...。
＃１ です。 なぜ，objectタグの SWF ファイルと，embed タグの SWF ファイルが違う物を指しているのでしょうか？ <param name="movie" value="xxx.swf" /> 　↓違う↑ <embed src="img/tin.swf" … Safari は embed 優先なのかもしれません（よくわかりませんが）。 また，なぜずれているのかもわかりません。 HTML と 同階層に 「xxx.swf」 を配置して， Safari 3.1 にて閲覧検証してみましたが， こうすれば閲覧できましたよ↓。 <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="100" height="100" class="ooo"> <param name="allowScriptAccess" value="sameDomain" /> <param name="movie" value="xxx.swf" /> <param name="quality" value="high" /> <embed src="xxx.swf" width="100" height="100" quality="high" allowScriptAccess="sameDomain" type="application/x-shockwave-flash" />
Flash MX 2004ユーザーです。 パブリッシュで書き出されるswfの他に、 書き出し→ムービーの書き出し、で書き出されるaviやwmvもあります。 DVDオーサリングソフトで読める形式ですので、そちらで出力して下さい。 最終的に作成したDVDをプレゼントする時、DVDプレーヤーで見られる形にするならば、DVDの解像度が720x480ですので、 4:3のスタンダード表示ならば、640x480 16:9のワイド表示ならば、854x480 でFlashを作成すれば良いと思います。
> これを2回目からは最終フレームから始まるようにすることは この 『２回目』 の判定を詰めて考えていらっしゃいますか？ 「『２回目』 とはどういうことか...う～ん？？？」 と言う感じで。 SharedObject を使えばできるのですけどね。 『２回目』 を甘く考えていると結構大変ですよ。 また 『２回目』 の考え方によって難易度やスクリプトは変わります。 過去にほとんど同じ（ただし『２回目』に関しては質問段階で詰めて考えられていらっしゃった）質問と回答を覚えていましたのでURLを書いておきます。 教えて！goo より 「QNo.1703563 flash 　トップページ　自動再生防止」 http://oshiete1.goo.ne.jp/qa1703563.html 　　↓その続編↓ OKWave より 「QNo.1814846 (1)loading後再生→(2)すぐにアクセスした場合飛ばす」 http://okwave.jp/qa1814846.html これ以外にもあったと思いますが、同じような感じだったと思います。 あまり難しいことを考えたくない場合は， 「アニメーション入りFlash」と「最終段階で止まったFlash」の２つを作成して、 TOPページ（index.html）には「アニメーション入りFlash」を貼り付ける。 その他のページから元のTOPページに戻るボタンでは， 第二のトップページ（index.htm）に戻すようにして， その第二のトップページ（index.htm）には「最終段階で止まったFlash」を貼り付ける。 という方法が簡単だと思います。 （ただし、ブラウザの 戻る ボタンで戻ったときは index.html の方に戻ってしまいますが。）
ご質問で書かれていらっしゃるスクリプトは，ActionScript3.0 か何かでしょうか？ 意味がわからない部分があります。 （私，AS3 はわかりません。また Flex もわかりません。） Flash8，MX2004 で ActionScript2.0 を使用する場合， DataGridリスナー.cellPress イベント で， itemIndex(行番号) と columnIndex（列番号） を取得するとできます。 --- 例 ----------------------------- var Item1:Object = {Name:"John", Number:"1", Age:"20"}; var Item2:Object = {Name:"Mary", Number:"2", Age:"40"}; var Item3:Object = {Name:"Gamma", Number:"3", Age:"60"}; dg.columnNames = ["Name", "Number", "Age"]; dg.addItem(Item1); dg.addItem(Item2); dg.addItem(Item3); // リスナーオブジェクトの作成 var dgListener:Object = new Object(); dgListener.cellPress = function(evtObj:Object) { trace("行番号(0～) →"+evtObj.itemIndex); trace("列番号(0～) →"+evtObj.columnIndex); }; // リスナーオブジェクトの登録 dg.addEventListener("cellPress", dgListener); ------------------------------------ DataGridリスナー.change では， 対象（イベントオブジェクト）が変わりますから， 行番号 selectedIndex しか取得できません。 DataGridリスナー.click は全く別の用途で使用します。
それはプレーヤーの機能です。 http://www.adobe.com/jp/products/flashpaper/ http://www.sourcenext.com/products/flash_paper/
＃１＆２ です。 > あと、上の状態だと<head>～</head>の間にも、 > タグを入れてもらわないといけなくなります。 ですから......。 それは最初のご質問文にちゃんと答えが書いてあるでしょう。 > これも調べてはいるのですが、、、 ...これも。 調べた結果はすでにちゃんと出てますよ。 それ以上何を調べるのでしょうか？ 最初のご質問 や，＃２のお礼（補足）で書かれていらっしゃる内容 までを調べるのです。 もう調べはついていますから，その時点ですでに答えは出ています。 それ以上は "調べる" のでなく，"使う" のです。 答えが書いてある質問に， その答えをなぜ回答しなければならないのかがわかりませんが...。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝ その他， ＃２のお礼（補足）で書かれていらっしゃる内要についても含めて回答します。 まず，外部 JS ファイル 「aaa.js」 は， なるべく修正を少なくすると，次のようにすれば良いと思います。 ※↓改行は一切無しです。 document.write('<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http:\/\/download.macromedia.com\/pub\/shockwave\/cabs\/flash\/swflash.cab#version=9,0,0,0" width="128" height="53" id="yatter_bunner" align="middle"> <param name="movie" value="http:\/\/●●\/yatter_bunner.swf"> <param name="quality" value="high"> <param name="bgcolor" value="#ffffff"> <embed src="http:\/\/●●\/yatter_bunner.swf" quality="high" bgcolor="#ffffff" width="128" height="53" name="yatter_bunner" align="middle" type="application\/x-shockwave-flash" pluginspage="http:\/\/?www.macromedia.com?\/go\/getflashplayer"> <\/embed> <\/object>'); バナーを貼ってもらうサイトには， バナーを挿入したい場所に次のように書いてもらえば良いと思います。 <script src="http://●●/aaa.js" type="text/javascript"></script> <noscript> <embed src="http://●●/yatter_bunner.swf" quality="high" bgcolor="#ffffff" width="128" height="53" name="yatter_bunner" align="middle" type="application\/x-shockwave-flash" pluginspage="http://www.macromedia.com?/go/getflashplayer"></ … </noscript> embed は嫌われがちですし，JSのみで対応させる場合， バナーを貼ってもらうサイトには， 次の１行のみを書いてもらっても良いと思います。 <script src="http://●●/aaa.js" type="text/javascript"></script> ※ ３つの別サーバを使って検証済みです。 　 ただし，＃１ にも書きました通り， 　 JS や SWF があるのはリンク貼り付けを認めているサーバです。 　 認めていないサーバでも実験しましたが， 　 案の定表示されませんでした。 以上です。 「aaa.js」を使うのでしたら，「AC_RunActiveContent.js」 は使いませんね。 使わない場合，「AC_RunActiveContent.js」に関することは一切書かなくて良いです（書く方がダメです）。
loadMovie関数及びメソッドは， 読み込みこむだけのスクリプトでロードエラーを検知することは基本的にできません。 「ロードエラー」や「ロードの状況」や「ロードされた瞬間」などを検知するには， MovieClipLoader クラスのイベントリスナーを使用します。 「MovieClipLoaderクラスについて」 http://www.fumiononaka.com/TechNotes/Flash/FN050 … MovieClipLoaderクラスのリスナーオブジェクト.onLoadError でロードエラーを検知することができます。
アイコンを右クリック→プロパティ 「全般」タブのプログラム　(今はQuickTimeになってると思います)の右のボタン「変更」をクリック 「ファイルを開くプログラムの選択」ウィンドウが開きます。 そこで元のプログラムを指定してあげれば直ります。 例えば「Internet Explorer」「Firefox」「Flash Player」など。
onハンドラを用いてマウスイベントを感知し、管理すればよいと思います。 on(rollOut){} - ポインタがボタン領域の外側に移動した場合。 on(rollOver){} - マウスポインタがボタン上に移動した場合。 この{}中で、今どのボタンがＯＮになっているか＆他の動作を記述します。
バージョンが新しい(数字が大きい)ほど、出来ることが増えていきます。 1.1で書き出せないのは2.0では利用出来るが、1.1ではできない機能を使っている為です。 (1)その携帯電話が対応しているバージョンを調べる (2)対応しているバージョンで書き直す＆書き出す 最近の機種でしたらFlashLite2.0に対応していると思うので、これがいいかと。 多くの機種に対応させたいなら1.1がお勧めです。 また、Flashはバージョン毎にいくつか書き方のルールに差があります。 どのような不都合か分かりませんが、おそらくパスです。 例えば「_root」を「/:」と表記しなければならなかったり。 他にも　「+」を「add」と表記しなければならなかったりと、結構大変です。 どのバージョンで書き出すかを決めたら、もう変えない方が良いでしょう。
iframeの中にタグを書いても意味がないよ。 iframeには「別のHTMLを埋め込む」という認識でやった方が良いよ。 つまり普通にiframeの中に書かれているHTMLを別のファイルとしてsrcで指定する格好。 勿論そうするとflashを表示するためのタグも書いておかないとならないね
実際にこの辺はフラッシュでオンライン対戦を実現していますね。 ただ、flashだけではないようです。 http://labs.unoh.net/2007/08/post_97.html http://tenhou.net/
絵の描き方は様々です。 必要な知識や手法を全てをここには書ききれないので、参考サイトを参照下さい。 http://www.fmod.jp/ 最も簡単なのは、写真(or既存の絵)にフィルタをかける事です。 「輪郭以外をぼかす」→「パレットナイフ」の流れはよく使います。 これで、リアルな写真を油絵風、水彩画、鉛筆スケッチ風等にすることが出来ます。 フレーム部分の書き方ですが、基礎を学んでからにしましょう。下記サイトで全体の流れを説明しています。 少し方向性が違いますが、使うテクニックは同じなので、参考にして下さい。 http://www.pastime.ne.jp/howto.htm 線を削除して、影などを細かく付けるとリアルな画風になります。 ちなみにこのフレームは光源が定まっていなことから羽の様なパーツを描いて、組み合わせて出来ていると思われます。 難しそうですが、まずはパーツを１つ描いてみましょう。
> _root.urlとtarget=の前に半角スペースを入れようと これは，_root.url と target= との間に半角スペースを入れたいということでしょうか？ それだと，普通はこれでできますよ↓。 _root.hoge = "<a href=" + _root.url + " target=\"_blank\">" + _root.title + "</a><br>"; hoge にはこんな値↓が取得できます。 <a href=○○ target="_blank">○○</a><br> 通常，URLは二重引用符でくくりますから， その方が良い場合は，こんな感じにします↓。 _root.hoge = "<a href=\"" + _root.url + "\" target=\"_blank\">" + _root.title + "</a><br>"; この場合，hoge にはこんな値↓が取得できます。 <a href="○○" target="_blank">○○</a><br> ------------------------------------- > _root.hoge > の中には、_root.url以降が切れて仕舞います。 よくわかりませんが，ひょっとしたら， hogeに入った値を取得や確認する部分に問題があるのではないでしょうか？ つまり， どう使っているのかわかりませんが，使うときに切れてしまうとか。 例えばココ（このサイトのこのページ）だと， 半角を入れたらそこで自動リンク機能が途切れます（例↓）。 http://www.google.co.jp/search?q= school 自動リンク機能をつなげたい場合はこうする必要があります（例↓）。 http://www.google.co.jp/search?q=%20school
＞クリックなどの動作なしで、Flashが表示される度に呼び出せるスクリプトはありますでしょうか？ キーフレーム1番目に「getURL("そのURL");」と書けば出来ます。
ちなみに。。。 プログラムの経験はほとんどありません。の方が 「★3か月」くらいかけてActionScriptを覚える必要が出てきました。 ということですが、これは、 「仕事中(会社教育)」ということですか? 「指導教育あり」「仕事中勉強できる」 なら、なんとか、基本的なことは、習得できると思います。 まさか。。。とは思いますが 「★3か月」で、プログラムの経験なし。。。の方が 「帰宅後、余暇」を利用して「独学」。。。ではないですよね? そんな無謀なことは考えてないと思いますが。。。 もしそうなら、早くて、「半年」。「1年」は必要だと思いますが。。。
Excel（マイクロソフト エクセル）では， 頻繁に「空白セルの削除」とか「重複値の行を削除」などをします。 そんなときは決まって（お決まりの手段として）， 最終行もしくは最終列から，先頭行もしくは先頭列に向かって削除をします。 理由は同じです。 １行目，２行目，３行目… と走査して， もし条件に適合した行があったときその行を削除すれば， １つずつ行が繰り下がって，処理を１行を飛ばしてしまうからです。 つまりずれるのです。 この Excel のお決まり手段と同様にすれば良いと思います。 検証はしていませんが， こんな感じで行けるのではないかと思います↓。 --------------------------------------------- hairetuList.splice(Math.max(sentakuA, sentakuB)-1,1) hairetuList.splice(Math.min(sentakuA, sentakuB)-1,1) --------------------------------------------- Math.max(X, Y) は X と Y を比較し大きい方の値を返します。 Math.min(X, Y) は X と Y を比較し小さい方の値を返します。 大きい方（後の方）の要素を先に削除して， 小さい方（先頭の方）の要素を削除するので， ズレはおこらないと思います。
swfObjectっていうjavascriptを使うと、flashが表示できないときに代替のHTMLが表示できました。 たとえば、 <div id="swf_target"> <div>フラッシュが表示されない場合に出るテキストなどなんでも</div> </div> swfObjectを使うと、普通は"swf_target"にswfが書き出され、だめなときにそのなかみのHTMLが表示されるしくみです。 http://www.trick7.com/blog/2006/06/15-135235.php こういうことですか？ 参考URL：http://www.trick7.com/blog/2006/06/15-135235.php
＃１ です。 > しかしながらこうしても当然？iの最後の数（たとえば4）の > isu4だけが移動するだけでして・・・。 それはそうなるでしょう。 mySharedObject 内の i ，つまり mySharedObject.data.i が 4 であれば 4 で固定です。 mySharedObject.data.i が 4 であると， 次の部分は， for (i=1; i<=mySharedObject.data.i; i++) { _root.MC_print.isu.duplicateMovieClip("isu"+mySharedObject.data.i , i++); } こうなります↓。 for (i=1; i<=4 i++) { _root.MC_print.isu.duplicateMovieClip("isu"+4 , i++); } これだと， "isu"+4 つまり isu4 だけが複製されます。 したがって， _root.MC_print.isu.duplicateMovieClip("isu"+i , i++); こうしないと，順次 i は繰り上がりません。
＃１ です。 > 書き出したものを聞いていると結構、 > ノイズが酷くなったのですが > これもかき消す設定とかがあるのでしょうか？ そういう経験はないのでよくわかりませんね。 ただ，音量が大きいと音割れは起こします。 そんなときは少し音量を絞りますが...。 そのくらいしか思いつきません。
> Titleタグの中身と、設置してあるURLを取得し、 title の中身は比較的簡単に取得できます。 （ただし，HTMLがSWFと同じドメインにある場合です。） QNo.3780251 「HTMLをパースしたい 」 http://okwave.jp/qa3780251.html でも他の方に回答しましたが， 雑多なものが多すぎる(質問の意図がいまいちつかめなかったのでごちゃごちゃ関係ないことを書いている）ので， 自分自身で引用＆変更します。 ---以下変更引用-------------------------------- 「my_flash.swf」 が同じ階層にある 「my_flash.html」 に貼りついているとします。 　　任意のフォルダ 　　　├ my_flash.html （my_flash.swf が貼りついている） 　　　└ my_flash.swf その「my_flash.html」の <title>～</title> 間を， 「my_flash.swf」から抜きだす例です。 Flash で新規ドキュメントを作成し， 「my_flash.fla」 というファイル名で任意のフォルダに保存します。 そして，フレーム1 に次のようなスクリプトを書きます（コピペします）。 ////////////////////////////////////////////////////////// // HTML を Shift-JIS として扱う System.useCodepage = true; // テキストフィールド my_txt を作成 _root.createTextField("my_txt", 0, 20, 20, 350, 30); // myLV という LoadVars クラスのインスタンスを作成 myLV = new LoadVars(); // myLV にデータが読み込まれたときの動作定義 myLV.onData = function(my_dat) { my_txt.text = my_dat.split("<title>")[1].split("</title>")[0]; }; myLV.load("my_flash.html"); ////////////////////////////////////////////////////////// （ActionScript1.0，FlashMX 以上(FlashPlayer6以上) で使用可能） これで SWF と HTML をパブリッシュし， HTML をブラウザで開けば動作確認できます。 ただし HTML のタイトルに日本語が使われている場合は， 文字コードが Shift-JIS の場合での話です。 UTF-8 だと， 　// HTML を Shift-JIS として扱う 　System.useCodepage = true; の部分は不要です。 EUC-JP の場合は普通無理です。 my_txt.text = my_dat.split("<title>")[1].split("</title>")[0]; この行の my_dat.split("<title>")[1].split("</title>")[0]; についてのみ説明します。 これは， my_dat（ロードされたHTML全体）を <title> で２分した配列を作成し， その配列の エレメント1（２分した後側の要素） をさらに </title> で２分した配列を作成し， その配列の エレメント0（２分した前側の要素） を取得するという意味です。 （配列のエレメントは 0 番が最初のエレメントです。） 流れを図示すると次のような感じです。 　…○○○<title>△△△</title>□□□… ←my_dat(HTML) 　　　↓split("<title>") 　…○○○　　|　　△△△</title>□□□… 　　　↓[1] 　△△△</title>□□□… 　　　↓split("</title>") 　△△△　　|　　□□□… 　　　↓[0] 　△△△ これで <title>～</title> 間の △△△ が取りだせます。 ----------------------------------------------------- SWF が設置してある URL の取得は， 簡単なようで結構難しいです。 少なくとも ActionScript では無理で，JavaScript などの力を借りるしかありません。 次のURL２つを参考にしてみてください。 FLASH-JP.COM - フォーラム 「リンクされたURLの引数を変数として受け取る。」 http://www.flash-jp.com/modules/newbb/viewtopic. … シンケツ URLからflashにデータを渡す http://sinketu.heteml.jp/2007/07/urlflash.html
しくみは様々です。無数にあります。 > どのようなアクションスクリプトを書けばいいのでしょうか？ 決まっていません。 簡単にするには次のような方法もあります。 > ・サムネイルが画面下部に横に並んでいる(8~10個くらい) これを _root の上のレイヤーに置くとします。 その下のレイヤーの フレーム1に最初の拡大版写真を配置します。 フレーム2には次の拡大版写真を配置します。 フレーム3には次の次の拡大版写真を配置します。 　　…　　　　　　… フレーム8～10には8～10番目の拡大版写真を配置します。 　レイヤー　・・・・|●/////////////[]| ←サムネイル 　レイヤー　・・・・|●|●|●|………|●| ←拡大画像 サムネイルの各写真をムービークリップかボタンにして， その各ムービークリップかボタンにスクリプトを書きます。 最初の拡大版写真を表示したいボタンには， on(release){ _root.gotoAndStop(1); } 次の拡大版写真を表示したいボタンには， on(release){ _root.gotoAndStop(2); } 次の次の拡大版写真を表示したいボタンには， on(release){ _root.gotoAndStop(3); } 　…　　　… 8～10番目の拡大版写真を表示したいボタンには， on(release){ _root.gotoAndStop(8～10); } _root の フレーム1 には stop(); を書いて停止させておく必要もありますが， 以上のような感じでもできますよね。 写真をフェードインなどで見せたければ， 拡大写真の方もムービークリップの中に入れて， その中で拡大写真を アルファ0→100 のようにしても良いですし。 写真にワイプ効果をかけた登場で見せたければ， 拡大写真の方もムービークリップの中に入れて， その中で拡大写真にワイプ効果をかけても良いですし。 言ってたらきりがありません。 上のような単純なしくみでも，色々なものに発展させることができます。
３つの★はなぜ動いているのでしょうか？ ３つとも同じムービークリップの中に入れているから同じように動くのではないでしょうか？ そうであるのなら， ● も ★ と同じムービークリップの中に入れれば良いだけではないのでしょうか。 そうとしか思えませんが。
スクリプトが一番参考になるんじゃないですかね。 書籍はネットで買うなら口コミ。 本屋でもいいなら実際に色々立ち読みして、自分でこりゃ面白そう！って思ったのを買うのがいいと思いますよ。最初の一冊は。 その後で知りたい情報がウジャウジャ出てくるので、それらについて解説している2冊目を買うのがいいんじゃないでしょうか。 http://www.geocities.jp/n_oooooo_n/index.html まずはこの辺からやるといいんじゃないですかね。
「プログラムの追加と削除」からFLASH及びshockwave関係を削除し、 再度、インストールしてみてはいかがてしょうか。
＃１の方と同じ事なのですが、もう少し細かく書きます。 まず、FLASHの背景は単色表現しかできません。例外は、ＨＴＭＬに張るときに背景を透明指定する場合だけです。 ですから、 １，背景のすぐ上（つまり一番下のレイヤー）に白っぽい○（人物が覆われるぐらいの大きさ）を配置します。（白よりも背景の色に少し近い白がよりベターです） ２，○を反転、「修正」「シェイプ」「ソフトエッジ」を選択。 ３，適当な数値で外側・内側（お好みの方）を設定します。 ４，反転しているオブジェクトを、グラフィックシンボルに変換。 ５，数フレーム先にキーフレームを挿入。 ６，１フレーム目のグラフィックシンボルの「プロパティ」を「カラー」「アルファ」で「０％」に ７，モーショントゥイーンをつけます。 URLはそれをスクリプトで行っているようですが・・・・^^;
＃１です。 SWF１にＳＷＦ２を読み込ませるためには、SWF１を作ったfla ファイルが必要です。また、無料配布されているSWFファイルは、大抵の場合、改変改作までは許可されていないのではないでしょうか？ 違法行為で制作することも出来るかもしれませんが、一から自分で作った方が楽しいですよ。^^; 全て無料のソフトで作る方法は、参考URLサイトがあります。 参考URL：http://suzupara.iinaa.net/
「ワイプ」では・・・
#1です。 えらく難しいスクリプトを使っているのですね。と思ったら、これAS3.0ですね。^^; AS3.0とAS2.0はgetURLがかなり違うみたいですよ。（実際、自分はAS3.0を触ってないので、未検証ですが） 参考URLがお役に立つかも・・・・ 参考URL：http://f-site.org/articles/2006/07/18192707.html
FLVからひとコマ毎に画像がほしいならHugFlashでも可能ですよ。 ヘルプをよく読めばわかると思いますが、VIDEOから画像をとるときは『PICTURE』ではなく、VIDEO設定で『静止画出力』にして、メイン画面のチェックは『VIDEO』にします。 なお、最新版のHugFlash(ver2.5)での設定なので、それ以外のバージョンでは名称が変わってるかもしれません。
座標とか考えずにマスクとかつけちゃえばいいんじゃないでしょうか。 俺はscript書きだ！なんて場合は、条件式を入れちゃえばいいんじゃないですかね。 if (!this.hitText(mc))とか、 if (this._x > maxX || this._x < minX || this._y > maxY || this._y < minY) とかとか。
個人かつ非商用に限られるようですが、フリーソフトです。 参考URL：http://www.forest.impress.co.jp/article/2008/03/ …
> 画像の残像を残しながら切り替わる これは画像が アルファ0→アルファ100 と変化するモーショントゥイーンを "ムービークリップ内" のタイムラインに作成すれば良いですね。 ステージ上に配置した各写真を それぞれのグラフィックシンボルに変換して， さらにムービークリップに変換して， ムービークリップ内のタイムラインで， アルファ0→アルファ100 と変化するモーショントゥイーンを作成するということです。 いわゆる写真のフェードインです。 ムービークリップ内タイムライン 　レイヤー　・・・・|●>------------->|●| 　　　　　　　アルファ0の画像　　　アルファ100の画像 　　　　　　　　　(透明)　　　　　　　　　　(不透明) そしてムービークリップ内の最後のフレームには， stop(); を書いてムービークリップ内がループ再生しないようにしておきます。 写真が５枚あれば， このようなものが５つできるということです。 この５つのムービークリップはぴったり重なるような座標に，ステージ上に配置します。 レイヤーは１つでも５つでもどちらでも良いですが， 作成の都合上は５つのムービークリップを別々のレイヤーに置いた方が良いと思います。 それで上にあるボタン 「agete」「CLASSIC」「SELECTION」「FIRST」「FOR MEN」 などにロールオーバーしたときに， それぞれの目的のムービークリップを， gotoAndPlay(1)　させるとともに　swapDepths()　で一番上の深度に移動させてやれば良いということになります。 「それぞれの目的のムービークリップ」を指定する場合は， それぞれの目的のムービークリップにインスタンス名を付ける必要があります。 例えば， 最初に（「agete」ボタンロールオーバーで）出没させたい写真のムービークリップには， 「MC1」というインスタンス名を付けるとしておきます。 また ２番目，…，５番目 も同様に， 「MC2」，…，「MC5」 というインスタンス名を付けたとしておきます。 「agete」のようなボタンには， ------------------------------------ // ロールオーバーしたとき on (rollOver) { // MC1 を フレーム1 から再生 _root.MC1.gotoAndPlay(1); // MC1 を 最高深度の次の深度にする _root.MC1.swapDepths(_root.getNextHighestDepth()); } ------------------------------------ 「CLASSIC」のようなボタンには， ------------------------------------ // ロールオーバーしたとき on (rollOver) { // MC2 を フレーム1 から再生 _root.MC2.gotoAndPlay(1); // MC2 を 最高深度の次の深度にする _root.MC2.swapDepths(_root.getNextHighestDepth()); } ------------------------------------ のように書いて行けば良いということになります。 基本のベースは上のような形で， 最初の 「MC1」 は最初表示されたとき， フェードインさせたくない場合は， 「MC1」 内のタイムラインのみ， 　レイヤー　・・・・|●|●>------------->|●| 　　　　　　　　　 100 0　　　　　　　　　　　100 のようなモーショントゥイーンを作成して， フレーム1で stop() させて， この 「MC1」 を表示させるボタンのみ， ------------------------------------ // ロールオーバーしたとき on (rollOver) { // MC1 を フレーム2 から再生 _root.MC1.gotoAndPlay(2); // MC1 を 最高深度の次の深度にする _root.MC1.swapDepths(_root.getNextHighestDepth()); } ------------------------------------ のようにしても良いです。 その辺やその他細々したことは自由にバリエーションを考えれば良いと思います。
良くはわかりませんが， 言語で言うならば，ActionScript ではなくて JSFL のような気がします。 言語で言うほど単純なものではありませんが。 Flash MX 2004（PROの方だけだったかも）以上だと， タイムラインエフェクトと言う機能があります。 元から付いているものにはエフェクトの種類が少なくてほとんど使い物になりませんが。 「タイムラインエフェクトの使用について」 http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 … このエフェクトの自作パターンではないかと思います。 何度でも同じパターンを使うのでしたら， タイムラインエフェクトの自作パターンの方が良いのかもしれませんが， 膨大な労力と知識が必要なので， 単品の場合は，１つ１つの文字を別々のシンボルに変換して， モーショントゥイーンなどで動かす方がずっと楽だと思います。 （フリーの Prafla などだと， 　テキストエフェクト と言って，簡単に作成できるので， 　多くの方が色々なエフェクトを自作して配布されていたりします。 　また元から豊富なテキストエフェクトが付いて来ます。 　Adobe Flash も手軽にこれが使えれば良いのになと思います。）
Suzuka で十分（十二分）できますよ。 http://www.cty-net.ne.jp/~uzgensho/ とりあえずの参考になるかと...。 「フリーのFlash作成ソフトSuzukaによる、スライドショー作成チュートリアル」 http://www.towofu.net/mt/archives/2006/08/31_19_ … > アクションは必要なく、あの写真の切りかえをＨＰに歳入したい > と考えています。 それは，質問者さんがアクションが不要と考えるだけで， 止めたりするのには stop(); などのアクション（ActionScript）は要ります。 > ３枚程度切り替え写真をのせ、最後の写真で止まる用にしたいです。 > （最後の写真に文字が加わればベストです） 何でもできますよ。 「フラッシュムービー作成ソフト Suzuka → 画像を読み込む」 http://www16.plala.or.jp/kiitoksia/sanft/suz/suz … 「フラッシュムービー作成ソフト Suzuka → 画像に文字を流す」 http://www16.plala.or.jp/kiitoksia/sanft/suz/suz … 「フラッシュムービー作成ソフト Suzuka → ズーム効果」 http://www16.plala.or.jp/kiitoksia/sanft/suz/suz … 「フラッシュムービー作成ソフト Suzuka → フェイド効果」 http://www16.plala.or.jp/kiitoksia/sanft/suz/suz … さらに発展させて， 「Suzuka 基礎・基本 マスクでトランジション」 http://suzupara.iinaa.net/kiso121.html 「Suzuka 基礎・基本 マスク・グラデーションマスク」 http://suzupara.iinaa.net/kiso111.html （→ 一番下のもの） "何でもできますよ。" というのは「写真があれば」です。 写真がなければデジカメで撮るなどというようなことが必要ですし， その写真を格好良く見せたい場合は， Photoshop など フォトレタッチツール（ソフト）が必要です。 もしそのような写真があれば， Suzuka で十分（十二分）できますということです。
よろしければ 昨日私が回答したものを参考にしてみてください。 QNo.3886641 attachMovieで作成したインスタンスへloadした画像のサイズ変更について http://okwave.jp/qa3886641.html
多分これではないでしょうか。 MoviePen 1.0 参考URL：http://qurage.net/download/flash/moviepen/
> サイズが指定している100*100になりません。 画像ロード後にサイズを 100*100 にしないからです。 書かれていらっしゃるスクリプトは次のようになっています。 　this.attachMovie("img",newName,ID); 　//インスタンスを作成 　　　　　↓実行↓ 　this[newName].loadMovie(ID+".jpg"); 　//作成したインスタンスに画像を読み込む 　　　　　↓実行↓ 　this[newName]._width = 100; 　//画像を読み込んだインスタンスの幅を変更 これを見る限り，ロード後に 幅を 100 にしているように見えます。 しかし実際はロードに時間がかかるため， 　this.attachMovie("img",newName,ID); 　//インスタンスを作成 　　　　　↓実行↓ 　this[newName].loadMovie(ID+".jpg"); 　//作成したインスタンスに画像を読み込む 　　　　　↓実行（ロードが開始されるだけ）↓ 　this[newName]._width = 100; 　//画像を読み込んだインスタンスの幅を変更 　　　　　↓その後↓ 　this[newName] に ID+".jpg" がロードされる となります。 画像がロードされる前に 100*100 に変更すると， 元の 「作成したインスタンス」 の大きさが 100*100 になります。 元の 「作成したインスタンス」 の大きさが 仮に 50*50 であれば， 元の 「作成したインスタンス」 の縦横が２倍の大きさになるということです。 縦横２倍に拡大されたムービークリップに， 外部画像をロードすると外部画像も縦横２倍になってします。 そういうような現象が起きているのです。 Flash 8 をお使いだということですから， ロード待ち処理をさせるには MovieClipLoader クラスのメソッドやイベントリスナーを使う方法をとるのが良いと思います。 スクリプトは次のようになります。 ------------------------------------------ MCL = new MovieClipLoader(); // MovieClipLoaderクラスのインスタンスを作成 MCL.addListener(this); // this(_root) をロード監視オブジェクトとして登録 function onLoadInit(targetMC) { // ロード完了時の動作を定義 targetMC._width = 100; //画像を読み込んだインスタンスの幅を変更 targetMC._height = 100; //画像を読み込んだインスタンスの高さを変更 } for (ID=1; ID<=10; ID++) { //画像を10枚読み込みたいので、for文で回します。 newName = "img"+ID; //作成するインスタンスの名前を設定 this.attachMovie("img", newName, ID); //インスタンスを作成 this[newName]._x = 100*ID; //インスタンスの配置場所(Xのみ)を設定 MCL.loadClip(ID+".jpg", newName); //作成したインスタンスをターゲットとしてMCLに画像を読み込む } ------------------------------------------ MovieClipLoader クラス のスクリプトは， Flash 8 の １つ前のバージョン Flash MX 2004（FlashPlayer7）から使用できます。
コマ落ちとシンボル内のアニメが動かないことは別のことです。 コマ落ちに関してはよくわかりません。 スペックの問題とか，複雑なアニメーションを作成した場合， コマ落ちするかもしれません。 > 「シンボル内でアニメーションを作りトゥイーンで動かす」 外から取り込むシンボルではなくFlashで作成するシンボルには３種類ありますが， このうちムービークリップシンボルのインスタンスではその中のアニメーションがAVIにならないと思います。 グラフィックシンボルのインスタンスなら， その中のアニメーションもAVIになると思います。 普通はしませんが， ムービークリップシンボルでも， そのシンボルをステージ上に配置したとき（インスタンス）， そのインスタンスを選択して， 下のプロパティインスペクタから， 「ボタン」「グラフィック」「ムービークリップ」を選べると思います。 この中から「グラフィック」を選択して， ムービークリップシンボルをグラフィックインスタンスとして配置すれば， おそらくAVIにもアニメーションは書き出されると思います。 本来は， グラフィックインスタンスには，グラフィックシンボルを使うのが普通ですから， 普通はムービークリップシンボルを使わないようにして作成します。 しかし， 作ってしまったものを作り直すのは大変でしょうから， その場合は， ムービークリップシンボルを，グラフィックシンボルとしてステージ上に配置すれば， 確か AVI にも書き出せたと思いますということです。 グラフィックインスタンスとムービークリップインスタンスは， 性質が似ているようで全然違う部分もあるので， グラフィックインスタンスはグラフィックインスタンスで色々使い方を研究してみてください。
auさんのサイトなどでも見かけるパターンですね。 書かれていらっしゃるサイトさんのものもそういうパーターンのものの１種です。 しかし，大手ですから， 市販やフリーのテンプレートは使用しないと思いますし， そんなに難しいものでもないので，Flash 作成を依頼された方の自作でしょう。 同じようなパターンと言っても，各社違いますよ。 また，考え方や作り方は場合によって様々ですから， テンプレートの改良でオリジナルな動きを出すのなら， 自作した方が早いと思います。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ まず， 書かれていらっしゃるサイトのFlashをよく観察します。 左端の Gact さんは動きません。 つまり動きは考えなくて良いわけです。 WaT さんから MEGUMI さんは動きます。 ではどう動くのかをさらに観察します。 WaT さんから MEGUMI さんは， 自分より左の人の三角ボタンにロールオーバーしたとき 右の あるポジション を目標に 右 に動きます。 また， 自分を含めて自分より右の人の三角ボタンにロールオーバーしたとき 左の あるポジション を目標に 左 に動きます。 要は， WaT さんから MEGUMI さんは動きますが， それぞれ左右２つの目標座標があって， 各ボタンのロールオーバーによって， その２つの目標座標のうちどちらかに向けて移動するというだけのことです。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ では，作成方法です。 書かれていらっしゃるページのFlashは Gactさん，Watさん，浅尾さん，中さん，MEGUMIさん の ５人の写真が使われていますから， 実際は何人（何枚）でも良いですが， ５人の写真（５枚の絵）があるとして説明します。 ５枚の横長の写真や絵をムービークリップに変換します。 このとき基準点に気を付けます。 基準点は左上のコーナーに設定して， 各写真などをムービークリップに変換します。 そのムービークリップ内のタイムラインの編集に移って， 写真の上に（上レイヤーなどに）， 三角印 のついた左横のボタンを用意します。 色を変える場合は複数のボタンが要りますが， 色が１色で良い場合などはボタンを１つ作って， それを５つのムービークリップ内の写真の上に置いても良いです。 そのムービークリップ内のボタンには， 全て同じインスタンス名を付けます。 この説明では 「_btn」 というインスタンス名を付けておくことにします。 メインのタイムライン（_root）の編集に戻って， ５つのムービークリップにもインスタンス名を付けます。 左から順に， 「p_mc0」 「p_mc1」 「p_mc2」 「p_mc3」 「p_mc4」 というインスタンス名を付けます。 「p_mc0」 「p_mc1」 「p_mc2」 「p_mc3」 「p_mc4」 は右に行くほど上に表示されるように， また横１列に並べます。 そして， その写真やボタン入りムービークリップの置いてあるレイヤーとは別に， 新規でレイヤーを作成し， そのレイヤーのフレーム1に次のような ActionScript を書きます。 コピペ可能です。 --------------------------------------------- // 表示枠の 横幅 を設定（変更可） w = 600; // 表示枠の 左側余白 を設定（変更可） m = 10; // 表示枚数(p_mc? の個数)の設定（変更可） n = 5; // 狭いときに見えている範囲を設定（変更可） r = 80; // 動く速さの設定（変更可） s = 1/5; //------------------ // 選択番号 p の初期化 p = 0; // 各 p_mc? を初期座標に設置 _root.p_mc._x = m; for (i=1; i<n; i++) { _root["p_mc"+i]._x = m+w-r*(n-i); } for (i=0; i<n; i++) { // 各 p_mc? にローカルな変数 p の値を設定 _root["p_mc"+i].p = i; // 各 p_mc? のボタン _btn ロールオーバー時 _root["p_mc"+i]._btn.onRollOver = function() { // 親の p の値を _root の p に代入 _root.p = this._parent.p; }; } for (i=1; i<n; i++) { // 各 p_mc1～p_mc(n-1) の動き _root["p_mc"+i].onEnterFrame = function() { // _root の p の値によって目標座標を変える if (_root.p<this.p) { this._x += (m+w-r*(n-this.p)-this._x)*s; } else { this._x += (m+r*this.p-this._x)*s; } }; } --------------------------------------------- ※ 一応， 　 ステージのサイズは書かれていらっしゃるページの 　 Flash同様 620px くらいの幅を想定したスクリプトです。 ※ Flash MX 以上で使用可能な ActionScript1.0 です。 結構シンプルでしょう。 これだけのことですからテンプレート屋さんも作りがいがないというか， 使う側もわざわざテンプレート屋さんのものを買う価値なしというか...。 適当に作った方が早いんじゃない？ というような...。 そんな感じです。 枚数やスピードなどは， //----- より上の数値を変えてくださるだけで変えることができます。 しかしそれ以上のカスタマイズは， 作る方が最初から考えるというパターンになるのではないかと思います。 違うページにリンクを設定してありませんが， これはムービークリップ内の写真をボタンに変換するどして， そのボタンに getURL() を書けば良いだけですね。 作りたい物によって，あとは色々変えます。 上のスクリプトで使ったスクリプトに関する参考URL 「繰り返し文 for - FLASHアクションスクリプト入門編」 http://isvalid.jp/actionscriptLab/ASlesson/actio … 「if if else 文 - FLASHアクションスクリプト入門編」 http://isvalid.jp/actionscriptLab/ASlesson/actio … Google検索 「配列アクセス演算子」 http://www.google.co.jp/search?hl=ja&q=%E9%85%8D … Flash CS3 ドキュメンテーション ActionScript 2.0 リファレンスガイド onRollOver (Button.onRollOver ハンドラ) http://livedocs.adobe.com/flash/9.0_jp/main/0000 …
FlashCS3では、背景画像ではなくステージに張り付くだけでしたね。 ちなみに、読み込んだときに、プロパティーにサイズが出てると思いますが。 出てますか?
始めまして。 >テキストファイル(txt)と画像フォルダー(img）の名前は変更不可とのことで、もともとのファイル・フォルダー名のままです。 画像(jpg)ファイルのファイル名指定はなかったのでしょうか？ >プレビューでは問題なく表示されていたので、サーバーへUPしましたが、確認してみると、画像が出てきません。 プレビューとはホームページビルダーのプレビュー機能という意味でしょうか？ サーバーへUPすると画像が出てこないという事ですが、パソコン上(ローカル)でhtmlファイルをブラウザで開いても正常に表示されるということでしょうか？ どちらにしましても指示されたとおりしてもうまくいかないということでしたら、そちらのサイトから配布者に質問するのがベストだと思います。 (swfファイルの中に書かれたスクリプトが見れないので答えようがないです。)
仮に読み込めたとしても， パブリッシュした時点で（パブリッシュできればですが）Flashの限界を超えていますね。 「［228626］オーサリングにおける Flash の限界について」 http://support.adobe.co.jp/faq/faq/qadoc.sv?2286 … > 動くかもしれませんが、 > 数～数十メガバイトのFlash ファイルを作成した場合に、 > オーサリング時、またはプロジェクタや > SWF ファイルを書き出す場合、 > 処理にとても負荷がかかります。 > このようなファイルを作成したとき、 > Flash または作成したプロジェクタがクラッシュする、 　　…略… > 動画のデータ処理にはサウンドや画像以上に > メモリを消費します。 > 読み込むデータは極力サイズを > 小さくするようにしてください。 そんな大きな SWF は見たことがありませんし， SWF は自分自身のファイル容量のメモリを開放しませんので， もしその SWF を見た場合， エンドユーザPCの50MB ものメモリを占有するということになります。 それを考えただけでも危険です。 そのために FLV などが開発されたのですから， 外部 FLV を SWF でロードするのが普通だと思います。 Flash（SWFのこと）は， そもそも 数KB～数百KB で作成するものです。 音を入れた場合，数MBになることもありますが，その辺が普通の限界です。 動画は普通SWFにしません(装飾的にちょろっと入れることならあるかも)。 「外部 FLV ファイルのダイナミック再生」 http://livedocs.adobe.com/flash/9.0_jp/UsingFlas … > つまり、大きなファイルが小さなパーツとして格納され、 > 動的にアクセスされるので、埋め込みのビデオファイルよりも > メモリ消費が少なくなります。
その lorem.txt を見てもさっぱり何のことかわかりませんし， 「新種の勧誘かワンクリック詐偽みたいなもの？」 なんて一瞬思ってしまいましたよ (⌒～⌒) 。 しかし， 「this.createClassObject(mx.controls.UIScrollBar, "my_sb", 20)」 で検索すると書かれていらっしゃる内容がわかったような気がしました。 ダイナミックテキストフィールドにスクロールバーを表示させるのに参考にしたのは， そのテキストファイルの下半分ではなく， ヘルプの UIScrollBar コンポーネント に関するページの下半分ではないでしょうか？ Flashドキュメンテーション (Flash 8 ヘルプ) 「UIScrollBar コンポーネントを使用したアプリケーションの作成」 http://livedocs.adobe.com/flash/8_jp/main/000042 … もしそれを参考にしたのだと， そのスクリプトの上部にもコメントアウトで書いてあるでしょう↓。 　/** 　　必須 : 　　- ライブラリ内の UIScrollBar コンポーネント 　*/ スクリプトを実行させるには， あらかじめ UIScrollBar をステージ上に ドラッグ＆ドロップ などで配置して，その UIScrollBar をステージ上から削除するとか， UIScrollBar を直接ライブラリに ドラッグ＆ドロップ などで入れておくとかして， FLA（SWF）内に用意しておく必要があります。 ヘルプには 「そのライブラリにある UIScrollBar を ActionScript でステージ上に呼びだして配置する」 というスクリプトが書いてあるのです。 スクリプトだけで UIScrollBar は作成できませんよ。 SWFファイルの中に用意しておかないと...。 Flash8 の UIコンポーネントは， 当時 Macromedia の方がムービークリップとActionScriptで作成したものです。 簡単に言うと「特殊なActionScript入りムービークリップの集合体」です。 ライブラリにある普通のムービークリップの場合は， attachMovie() で呼びだしますが， その「特殊なActionScript入りムービークリップの集合体」は， createClassObject() で呼びだします。 その部分が違うだけで， 基本的には同じようなものです。
nodeValue(ノード値) が抜けているのではないでしょうか？ ---例--- 外部 XML 「data.xml」 を用意 ---------------------------------- <?xml version="1.0" encoding="UTF-8"?> <piano> <mod maker="Steinway &amp; Sons">S&amp;S</mod> </piano> ---------------------------------- 「data.xml」と同じ階層の FLA のフレーム1 にコピペ ---------------------------------- for (var i:Number = 0; i<=2; i++) { // _txt0 ～ _txt2 というテキストフィールドを作成 _root.createTextField("_txt"+i, i, 5, 30*i+5, 1, 1); // 枠線を表示 _root["_txt"+i].border = true; // 自動サイズ _root["_txt"+i].autoSize = true; } // XMLインスタンスの作成 var myXML:XML = new XML(); // 余分な空白などを削除 myXML.ignoreWhite = true; // XMLデータロード時の動作定義 myXML.onLoad = function() { var _node:XMLNode = this.firstChild.firstChild; // _txt0 ～ _txt2 に ロードした XMLデータを表示 _txt0.text = _node.attributes.maker; _txt1.text = _node.firstChild.nodeValue; _txt2.text = _node.firstChild; // 念のため出力 trace(_node.attributes.maker); trace(_node.firstChild.nodeValue); trace(_node.firstChild); }; // 外部 XML 「data.xml」 のロード myXML.load("data.xml"); ---------------------------------- 　→ そして「制御」→「ムービープレビュー」 結果： 上のテキストフィールド には 「Steinway & Sons」 が表示され， 中のテキストフィールド には 「S&S」 が表示され， 下のテキストフィールド には 「S&amp;S」 が表示されます。 また出力窓には， Steinway & Sons S&S S&amp;S が出力されます。 手動でテキストフィールドを作成してもても同じ結果です。 ～参考URL（非参考URL）～ Flashドキュメンテーション （Flash8のヘルプ） 「nodeValue (XMLNode.nodeValue プロパティ)」 http://livedocs.adobe.com/flash/8_jp/main/000028 … > firstChild を使用してノードの内容を表示した場合は、 > &amp; エンティティが保持されます。 > しかし、明示的に nodeValue を使用した場合は、 > アンパサンド文字 (&) に変換されます。 ↑※なおこのURL，日本語は良いのですが， 　 該当箇所のサンプルコードは変です。 　 どうみてもXMLデータが変です。 　 オフラインのヘルプも同様に変です。 　 英語版の同じページも変でした。 　（英語版は"出力されない"という指摘がついています。） 調べてみますと１行目はこう↓ではなく， var my_xml:XML = new XML("mortongood&evil"); 実はこう↓したかったようです。 var my_xml = new XML("<login><username>morton</username><password>good&amp;evil</password></login>"); これで無事に以下のものが出力されます。 　using firstChild: 　　 morton 　　 good&amp;evil 　using firstChild.nodeValue: 　　 morton 　　 good&evil ・ActionScript 2.0 リファレンスガイド parentNode (XMLNode.parentNode プロパティ) のページ ・Flash Lite 2.x ActionScript リファレンスガイド nodeValue (XMLNode.nodeValue プロパティ) のページ parentNode (XMLNode.parentNode プロパティ) のページ の各サンプルコードも同じ箇所が変です。 XMLに上のようなデータが入るという答えは， Flash Media Server 英語版のヘルプにありました↓。 Flash Media Server 「XML.nodeValue」 http://livedocs.adobe.com/fms/2/docs/00000825.html （ご質問に回答するより，この件について考えたり突きとめたりする方に労力を使ってしまった...。）
> アクションスクリプト2.0 失礼しました。 読み飛ばしてました。 ASであれば、背景の移動量も計算しなければならないので 大変と思われますが、がんばってください。 大変失礼しました。
Suzuka が原因ではなくて，FlahPlayer の仕様です。 Suzuka の ２ちゃんでも最近議論されていましたが， ２ちゃんではなくちゃんとしたコミュニィ（？）やサイトでもそういうことが検証されています。 [FLASH-JP.COM - フォーラム] http://www.flash-jp.com/modules/newbb/viewtopic. … 　上記URLのリンク元↓ MovieClip._alphaの処理について http://www.fumiononaka.com/TechNotes/Flash/FN050 … Flash に 透過GIF や 透過PNG を使用するのはやめましょうよ...。 そんなもの（特に透過GIF）など存在意味がないでしょう。 Flash は ドロー です。 美しさ，機能，容量 すべて込みで ドローです。
ご参考までに。 参考URL：http://jp.fujitsu.com/accessibility/casestudy/pd …
どちらも見られます。見て感じたことActivXコントロールやスクリプトは「有効」になっていないか。IE7のレベルは「中高」を「中」にさげてみてはどうか、と言うことです。 IE「ツール」「インターネットオプション」「セキュリティ」「レベルのカスタマイズ」「セキュリティの設定」 Administratorで設定したかどうか。 「既定のレベル」「中」でFlash コンテンツを閲覧可能。 カスタムレベルに設定のときは、「署名済み ActiveX コントロールのダウンロード」「Active X コントロールとプラグインの実行」が「有効にする」および「ダイアログを表示する」設定されているか確認します。
http://www.google.co.jp/search?q=flash%20html%20 … 希望の方法が出てれば良いけど・・・
外部XMLをロードさせたり， 動的にテキストフィールドを生成させようとされているような方が， なぜ， > 上のテキストフィールドの下端から一定の距離に生成 する方法がわからないのかが疑問です。 つまり 何がわからないのかがよくわかりませんが， 普通に TextField._height で上のテキストフィールドの下端座標を取得すれば良いのではないでしょうか。 　テキストフィールドの下端 　　= テキストフィールドのｙ座標 + テキストフィールドの高さ ですよね。 Flashドキュメンテーション _height (TextField._height プロパティ) http://livedocs.adobe.com/flash/8_jp/main/000027 … ---------------------------------- 以下はヘルプのサンプルスクリプト的な回答ですが...。 次の例では，テキストフィールドを作成し， 外部XMLファイル「kana.xml」をロードした上で， 「kana.xml」の各ノードにある文を上のテキストフィールドに表示させ， その下 5px の位置に新たなテキストフィールドを作成し， 「はひふへほ 改行 まみむめも」 を表示させます。 「kana.xml」↓ /////////////////////////////////////////// <?xml version="1.0" encoding="UTF-8"?> <akasatana> <gyou>あいうえお</gyou> <gyou>かきくけこ</gyou> <gyou>さしすせそ</gyou> <gyou>たちつてと</gyou> <gyou>なにぬねの</gyou> </akasatana> /////////////////////////////////////////// フレーム1 にコピペするだけのスクリプト↓ /////////////////////////////////////////////////////////////////////// // _txt0 というテキストフィールドを作成 var T0:TextField = _root.createTextField("_txt0", 0, 10, 10, 30, 20); // 枠線を表示 T0.border = true; // 自動サイズ T0.autoSize = true; // XMLインスタンスの作成 var myXML:XML = new XML(); // 余分な空白などを削除 myXML.ignoreWhite = true; // XMLデータロード時の動作定義 myXML.onLoad = function() { // 変数 total に更新データのトータル数を取得 var total:Number = this.childNodes[0].childNodes.length; for (var i:Number = 0; i<total; i++) { T0.text += this.childNodes[0].childNodes[i].firstChild.nodeValue; if (i<total-1) { T0.text += "\n"; } } // _txt1 というテキストフィールドを作成 （★本題はココ↓だけ★） var T1:TextField = _root.createTextField("_txt1", 1, 10, T0._y+T0._height+5, 30, 20); // 枠線を表示 T1.border = true; // 自動サイズ T1.autoSize = true; T1.text = "はひふへほ\nまみむめも"; }; myXML.load("kana.xml"); ///////////////////////////////////////////////////////////////////////
＃１～３ です。 組み合わせるのでしたら 　　こんなの 　□□■□□ 　□□■□□ 　■■□■■ 　□□■□□ 　□□■□□ 　　　　と 　　こんなの　　　　　 こんなの 　□□□□□ 実際は→■ 　□□□□□ 　□□■□□ 　□□□□□ 　□□□□□ を作成すればいいのではないでしょうか。 こんなの ■ の方にはマスクは要りません。 十字塗りとは別のインスタンス名を付けて on(release) のときにボタンの座標のところで表示させれば良いですね。
Parafla か Suzuka でしょう。 この ２つ しか選択の余地はないと思いますよ。 最近こちらでも回答しました。よろしければご参考に。 「QNo.3809265 デジカメ写真を使ってFlash製作について」 http://oshiete1.goo.ne.jp/qa3809265.html
Flex のことはさっぱりわからない者です。 てきとうなつぶやきのようなものとして見てください。 JavaScript の SWFObject（swfobject.js 内で定義） というものは， Flash のバージョンをチェックしたり， Flash の表示タグを外部JSで簡略化するためのもので， ついでに SWFObject.addVariable("変数名", "値"); という文を用意しておくと HTML の FlashVars ができる。 という簡単便利なものなのですね。 書かれていらっしゃる HTML の方の， <script type="text/javascript" src="/js/swfobject.js"></script> の部分の JS へのパス　src="/js/swfobject.js"　が変ですが， ファイル構造が次のようになっている場合 　任意のフォルダ 　　　├ HTML 　　　├ foo.swf 　　　└ js（フォルダ） 　　　　　└ swfobject.js src="./js/swfobject.js"　と訂正すると， HTML 内に 「foo.swf」 が表示されるようになります。 そして，結局，HTML 中の JavaScript， so.addVariable("message", "hogehoge"); によって， 「message="hogehoge"」 という変数と値が 「foo.swf」 の _root 階層に，フレーム1 が始まる前に送信されるわけです。 ここまではわかります。 しかし， ここからがよくわからないのです（Flex を知らないもので。） Flash の場合は， Alertコンポーネント をライブラリ内にシンボルとして追加しておいて， その Flash （FLA）のフレーム1に次のように書いて， パブリッシュ したSWF を， HTML 経由でブラウザで見ると， Alert の中に hogehoge が表示されます。 ----------------------------------- import mx.controls.Alert; var message:String; function saySomething(arg:String):Void { Alert.show(arg); } saySomething(message); ----------------------------------- （ActionScript2.0） 本当は次のようにしても表示されるのですが， ----------------------------------- import mx.controls.Alert; Alert.show(message); ----------------------------------- なるべく似せたつもりです。 void は Void の間違いではないかと思います。 また， oninit()　という物が何かわからないので省略しています。 このくらいのことしかわかりません。
ご質問で一番わからない部分は， > 2）ポインタを重ねる という部分です。 どこにポインタを重ねるのかがよくわかりませんが， 積み木以外にボタンがあって， その積み木以外のボタンにポインタを重ねるということにしておきます。 あと， 積み木のおおよその数がわからないのがイメージしにくいところです。 20個 でも 2000個 でも同様のことは表現できると思いますが， 20個 と 2000個 ではひょっとしたらやり方を変えないとならないかも...， よくわかりませんが。 ----------------------------------- 方法例（方法アイデア例）です。 > 最初と最後の形を指定すれば、 > 組み立ててくれるような都合のよいスクリプトはないでしょうか？ 普通考えられるのは， 最初と最後の形を座標指定することですが， その座標指定自体が大変でしょう。 ですから，この部分は， 実際に最初と最後の積み木の形を手動で配置して， その最初と最後の積み木の座標をPCに記憶させておいて， 後からその座標に近づけるようにすれば良いと思います。 「色ベタの四角」 が仮に 20個 であった場合について説明します。 この 「色ベタの四角」 はムービークリップで作成します。 スクリプトで動かす場合はレイヤーは１つでかまいません。 20個の 「色ベタの四角」ムービークリップ を１つのレイヤーに適当な位置に配置します。 どの 「色ベタの四角」 が，どの名前になっても良いので， 絶対に重複しないように， また， 絶対に欠番がないように， その 「色ベタの四角」 ムービークリップに 「文字列+0からの連番」 というインスタンス名を付けます。 ここでは 「block+0からの連番」 というインスタンス名を付けることにしておきます。 「block0」「block1」「block2」…「block18」「block19」 このようなンスタンス名になります。 そして フレーム1 に， 「ドットが崩れた状態で固まっている」 この状態を作成します。 次に フレーム2 をキーフレームにして， 例えば 「家の形」 の状態を作成します。 次に フレーム3 をキーフレームにして， 例えば 「メールの形」 の状態を作成します。 次に フレーム4 をキーフレームにして， 例えば 「人の形」 の状態を作成します。 形が以上 ３種類 である場合は， このフレーム4までで座標指定の配置作業は終了です。 積み木レイヤーを フレーム5 まで一応伸ばしておいて， 「 2）ポインタを重ねる 」 ボタン用のレイヤーを作成し， そのボタン用レイヤーのフレーム5に 「 2）ポインタを重ねる 」ボタン を作成しておきます。 そして， この 「 2）ポインタを重ねる 」ボタン にインスタンス名を付けます。 この説明では 「arrange_btn」 というインスタンス名を付けることにしておきます。 さらに ActionScript用のレイヤーを１つ作成ます。 そして フレーム1 ～ フレーム5 までをすべて空白キーフレームに変換します。 そして，ActionScript用のレイヤーの フレーム1 には， 次のようなスクリプトを書きます。 ---------------------------------- // 積み木の個数を登録 (※変える) block_n = 20; // 座標記録配列 posArr (３次元配列)を作成 posArr = new Array(); posArr[0] = new Array(); posArr[0][0] = new Array(); posArr[0][1] = new Array(); // 積み木の座標を posArr0 に記録 for (i=0; i<block_n; i++) { // block? の x座標を posArr[0][0] に記録 posArr[0][0][i] = _root["block"+i]._x; // block? の y座標を posArr0[1] に記録 posArr[0][1][i] = _root["block"+i]._y; } ---------------------------------- そして，ActionScript用のレイヤーの フレーム2 には， 次のようなスクリプトを書きます。 ---------------------------------- // 座標記録配列 posArr[1] (２次元要素配列)を作成 posArr[1] = new Array(); posArr[1][0] = new Array(); posArr[1][1] = new Array(); // 積み木の座標を posArr[1] に記録 for (i=0; i<block_n; i++) { // block? の x座標を posArr[1][0] に記録 posArr[1][0][i] = _root["block"+i]._x; // block? の y座標を posArr1[1] に記録 posArr[1][1][i] = _root["block"+i]._y; } ---------------------------------- そして，ActionScript用のレイヤーの フレーム3 には， 次のようなスクリプトを書きます。 ---------------------------------- // 座標記録配列 posArr[2] (２次元要素配列)を作成 posArr[2] = new Array(); posArr[2][0] = new Array(); posArr[2][1] = new Array(); // 積み木の座標を posArr[2] に記録 for (i=0; i<block_n; i++) { // block? の x座標を posArr[2][0] に記録 posArr[2][0][i] = _root["block"+i]._x; // block? の y座標を posArr[2][1] に記録 posArr[2][1][i] = _root["block"+i]._y; } ---------------------------------- そして，ActionScript用のレイヤーの フレーム4 には， パターンはわかると思いますが フレーム2 と 3 の流れと同じく 次のようなスクリプトを書きます。 ---------------------------------- // 座標記録配列 posArr[3] (２次元要素配列)を作成 posArr[3] = new Array(); posArr[3][0] = new Array(); posArr[3][1] = new Array(); // 積み木の座標を posArr[3] に記録 for (i=0; i<block_n; i++) { // block? の x座標を posArr[3][0] に記録 posArr[3][0][i] = _root["block"+i]._x; // block? の y座標を posArr[3][1] に記録 posArr[3][1][i] = _root["block"+i]._y; } ---------------------------------- そして，ActionScript用のレイヤーの フレーム5 には， 次のようなスクリプトを書きます。 ---------------------------------- // このフレームで停止 stop(); // 動くスピードの登録 (※変える) spd = 1/15; // カウント用変数 cnt0 の初期化 cnt0 = 0; // カウント用変数 cnt1 の初期化 cnt1 = 0; // 積み木を初期状態（フレーム1状態）に配置 for (i=0; i<block_n; i++) { // block? の x座標を posArr[0][0][?] にする _root["block"+i]._x = posArr[0][0][i]; // block? の y座標を posArr[0][1][?] にする _root["block"+i]._y = posArr[0][1][i]; } // 1フレーム進む時間毎に随時実行 _root.onEnterFrame = function() { for (i=0; i<block_n; i++) { // 積み木の座標を記録しておいた座標に近付ける _root["block"+i]._x += (posArr[cnt0][0][i]-_root["block"+i]._x)*spd; _root["block"+i]._y += (posArr[cnt0][1][i]-_root["block"+i]._y)*spd; } }; // ボタンにロールオーバーしたときの動作を定義 _root.arrange_btn.onRollOver = function() { // 変数 cnt1 が posArr の要素数-1 未満であれば if (cnt1<posArr.length-1) { // 変数 cnt1 に 1 を加算 cnt1++; } else { // それ以外は 変数 cnt1 を 1 にする cnt1 = 1; } // 変数 cnt0 を cnt1 と同じにする cnt0 = cnt1; }; // ボタンからロールアウトしたときの動作を定義 _root.arrange_btn.onRollOut = function() { // それ以外は 変数 cnt0 を 0 に戻す cnt0 = 0; }; // ボタンからドラッグアウトしても上と同じ _root.arrange_btn.onDragOut = _root.arrange_btn.onRollOut; ---------------------------------- Flash のバージョンを書かれていらっしゃいませんが， 上のスクリプトは Flash MX 以上（MX，MX2004，8，CS3）で使用できます。 ただし ActionScript1.0 なので， CS3 をお持ちの場合は， SWF パブリッシュ設定 で ActionScript2.0 もしくは 1.0 を選んでください。 ActionScript3.0 設定では動作しません。
>１フレーム目でAボタンをおすと ２フレーム目からはBボタンが表示されない というものを作ったのですが、 これをどのように作ったんですか？　それが判らないことには、どうアドバイスしていいのか判りませんよ。^^;
書かれていらっしゃるページの， フェードイン・フェードアウトするものは，Flash ではありませんよ。 またスライドもしていません。 URL の書き間違いということはありませんでしょうか？ 右クリックすれば 「Adobe Flash Player 9 について」 などがでないので Flash でないことはすぐにわかります。 Flash だともっとなめらかに美しく簡単に フェードイン・フェードアウト させられますし， もっと複雑な動きも簡単に作成できます。 Flash ではないので動きがぎこちない上に， フェードイン・フェードアウト という単純なことをするのでも必死なのです。 JavaScript で苦心した作です。 ---------------------------------------- > 写真と文章がフェードイン、フェードアウトを繰り返しながら、 > 最後に固定するようなイメージです。 文（文章を打った静止テキスト）や写真を， グラフィックシンボル（またはムービークリップ）に変換して， そのグラフィックシンボルのインスタンスを アルファ0 ----> アルファ100 ---->アルファ0 のように フェードイン・フェードアウト するモーショントゥイーンを作成すれば良いだけです。 これができなければ， 何もできないということに近いと思いますが...。 誰しも最初は何もできないものですから， できないことは決して悪くはないのですが， そういう初歩段階は，本を買ってやってみるのが一番だと思います。 サイトだと， 初歩的すぎてサイトではあまり件数が見つかりませんよ。 「モーショントゥイーンと効果」 http://1art.jp/flash/le/lesson3/lesson3.htm 「FLASHのお勉強_モーショントウイーン（特1）_写真の出し入れ(1)」 http://www.flashiroha.com/motion/p_transfer/phot … 　↑ここが近いですね。
参照URLは見つけれませんでしたが、↓ここのことでしょうか？ http://www.geocities.jp/flashiroha/script/as20/a … かなり初心者には省略された説明ですね。でも、 >コンポーネントインスペクターウインドウを開いてもチェックを入れる項目は出てこず、 というのは？？？ 「ウィンドウ」「コンポーネントインスペクター」チェックで「コンポーネントインスペクター」が開き「パラメータ」の下部分でスクロールバーでチェック項目が表示されますが・・・・？ （３）以下のインスタンス名の入れ方やコントローラーとの関連付けをしなければ、ボタンはでてきませんよ。
> タイムラインの単位を１コマ/１０秒に変えたり これは フレームレート（１秒間辺りに進むコマ数）を、 0.1fps にしたいということでしょうか？ 0.1fps だと 「１秒間辺りに0.1フレーム進む」 ということですから、 「10秒間辺りに１フレーム進む」 と同じ意味になりますよね。 fps（frame per second） は「ファイル」→「プロジェクトのプロパティ」で設定できます。 試しに 0.1fps の設定で SWFを生成してみましたが...、 どうやら無理のようですね。 フレーム2 くらいで Flash が停止してしまいます。 フレーム1 の時間がどうも挙動不審になりますが、 0.5fps （２秒間辺りに１フレーム進む） だとなんとかできるようにも見えます。 Adobe Flash でも試してみましたが、同様です。 0.5fps 辺りが設定できる最低のフレームレートのようです。 つまり Suzuka の問題ではなく FlashPlayer の仕様です。 （こんな低速なものは、もはやアニメーションとは言えませんが。） ---------------------------- しかし、 フレームレートをそんなに下げるより、 フレームレート は普通の通り 12fps ～ 20fps くらいに設定しておいて、 Suzuka でアクションレイヤーを追加して、 その フレーム1 に次のように書く方が良いと思います。 stop(); myID = setInterval(function () { nextFrame(); }, 10000); 上のスクリプトを書いておくと、 10000ミリ秒＝10秒 ごとに nextFrame(); つまり、 「次のフレームへ行って停止」が実行されます。 例えば、 フレーム1 に A という画像 フレーム2 に B という画像 フレーム3 に C という画像 を用意しておいて上のスクリプトを フレーム1 だけに書いておけば、 Aが10秒間表示された後、Bが10秒間表示され、その後Cが表示されて終わり（そのまま停止）となります。 Suzuka ＆ ParaDraw 講座 セルフタイマー(setInterval setTimeout) http://suzupara.iinaa.net/kiso311.html ---------------------------- フレームレートを変えるのではなくて、 タイムラインの表示目盛りの大きさを変えるのでしたら、 タイムラインの右下のコーナーにある 「⇔」ボタン クリックでスライダーがでてきます。 このスライダーの範囲で目盛り表示調節が可能です。 Adobe Flash の場合は 「最小」「小」「標準」「中」「最大」「プレビュー」「全体プレビュー」からの "選択" しかできません。 また、フレーム単位でしか表示されません（秒単位での表示はありません）。 これだけ↓。 「タイムラインのフレーム表示の変更」 http://livedocs.adobe.com/flash/8_jp/main/000000 … それを考えると、 Suzuka の方が秒単位表示指定ができる上、 キメ細かく大きさ指定ができるので良い（高機能だ）と思います。
こんばんは 以下の市販品などではいかがですか。 ただ、最近はフリーの開発環境も整ってきました。 こればかりは自分で調べる必要があるかと。 参考URL：http://www.pc-koubou.jp/goods/detail.php?ngds_no …
見当違いだったらごめんなさい。 ローカルで見られているのであればスクリプトやパスはあっているということですよね。 アップして見られないのは、おそらくパスが違うということでしょう。 パスがあっていて見られないときは、ブラウザのキャッシュが邪魔しているのではないでしょうか？ 私もたまにあるのです。更新したはずなのに元のままであせってしまうことが・・・。
＃５ です。＃５の追加補足です。 > サイズだとすれば値がだいぶ大きいのですが、 > これは例えばpixels/inch/cmの単位の > どれに相当するのでしょうか。 pixel です。 というか、pixel 以外を設定できても「意味無い」か「嘘」の単位になるでしょう。 「Flash はモニタで見るもの」です。 モニタのサイズや解像度や画面設定によって inch とか cm とか mm は変わるわけですから、 inch とか cm とか mm で指定しても何にも意味無しです。 Flash を印刷する人もほとんどいませんしね。 仮に印刷しても、サイズなんかどうなるかわかったものではありません。 ネット（PC上）で使う単位は、point か pixcel か % くらいです。
かなり有効に防げるんじゃないでしょうか。 フォーム構造を調べるのが面倒くさいですし。 ただし、完全には防げません。 配布型のFlashなどで、全国的に配布などされればスパムの対象になるんじゃないでしょうか？
getURL(centerOpen("url", "blank", 800, 600), ""); ここの url のダブルクォートが不要なんじゃないでしょうか。
[メインタイムライン] function aaa() { trace("ok"); } var testMC:MovieClip = new testMC_L(); stage.addChild(testMC); testMC.bbb = this; [testMC] this.addEventListener(MouseEvent.CLICK , onClick); var bbb:MovieClip; function onClick(event:MouseEvent):void { bbb.aaa(); } 半年ぐらいAS3触ってないのでちょっと強引かもしれませんが これで動くと思います。
ムービークリップ._currentframeでそのムービークリップの現在のフレーム番号がわかります。 if(_root.mc_A._currentframe == 10){ _root.mc_A.play();　//mc_Aのフレームが10だったら続きを再生 } 全てのムービークリップが１フレーム目に戻ったらといのは、各ムービークリップの再生中・停止中のフラグ変数を作って判断すればいいと思います。 b_Xを押したらボタンが消えてしまうと思うので、ボタン押下フラグも必要ですね。 参考URL http://livedocs.adobe.com/flashlite/2_jp/main/ww …
＞今は、ＦＬＡＳＨ　ＰＬＡＹＥＲをアンインストール済みです インストールし直せばいいのでは？
＃１の方も書かれていらしゃいますが、 「あいうえお」が表示されないのは、ActionScript や データ の問題ではありません。 メニューの字体を格好良く綺麗に見せるために、 また、 そのフォントが無いPCでも同じように表示させるために、 ダイナミックテキストにフォントを埋めこんであるのです。 そのフォントも、 　大文字[A,,Z] (27文字) 　小文字[a,,z] (27文字) 　数字[0,,9] (11文字) 　句読点記号[!@#%,,,] (52文字) のみです。 フォントを埋め込むと、 普通はそれ以外の文字がそのダイナミックテキストに表示されなくなります。 ですから 「あいうえお」 が表示されないのです。 上のようになっていることの確認方法です。 「ライブラリ」パネル を見てみて、 （もし 「ライブラリ」 パネルが表示されていない場合は、 　「ウィンドウ」→「ライブラリ」にチェックを入れて、） その 「ライブラリ」 の中の 「MenuBtnMC」 をダブルクリックし、 「MenuBtnMC」 内のタイムラインの編集に移ります。 「MenuBtnMC」 内のタイムラインの レイヤー2 には、 「m_name」 というインスタンス名のダイナミックテキストがありますが、 それを選択して、 下のプロパティインスペクタ（プロパティパネル）を見てみると、 次のようになっていることが確認できると思います。 ////////////////////////////////////////////////////// 　Ａ [Century Gothic] [14　]∨　Ｂ　Ｉ 　[0　]∨　[標準　∨] [カスタムアンチエイリアス　∨]　[埋め込み,,,] ////////////////////////////////////////////////////// この [埋め込み,,,] ボタンをクリックすると、 「文字の埋め込み」パネルが出てくると思います。 このパネルで、 　大文字[A,,Z] (27文字) 　小文字[a,,z] (27文字) 　数字[0,,9] (11文字) 　句読点記号[!@#%,,,] (52文字) がグレーになった選択状態で下の方には、 　文字総数:　114 が表示されていると思います。 この 114文字 が埋め込まれてあるということで、 この 114文字 以外は表示されないということになります。 - - - - - - - - - - - - - - - - - - - - 解決策ですが。 一番の近道は、 埋め込みフォントを指定しないということです。 操作方法としては、 「文字の埋め込み」パネル で「埋め込まない」ボタンをクリックして「ＯＫ」します。 これで、 &menu1=あいうえお& によって 「あいうえお」 も表示されるようになります。 ただし、フォントを埋め込んでいませんから、 カスタムアンチエイリアス もかかりませんし、 Century Gothic が入っていない ＰＣ では違う代替フォントで表示されます。 また Century Gothic には日本語フォントが元から入っていませんから、 Century Gothic が入っている PC でも、 あいうえお は Century Gothic ではない代替フォント、デバイスフォントの「_等幅」あたりで表示されます。 もし、日本語も Century Gothic 同様に、 綺麗な字体でその字体が入っていないPCでも同じように表示させたい場合は、 少なくとも Century Gothic 以外の日本語が入ったフォントを指定して、 [埋め込み,,,] ボタンから日本語文字も埋め込むようにしなければなりません。 しかし、日本語フォントは文字数が莫大にあります。 全てを埋め込むとそれだけで２～３MBくらい以上の SWF になってしまいますから、 普通はそのようなことはしません。 するとしても、 　日本語(かな) (318 文字) を追加することくらいが限度だと思います。 ちなみに、 最初に付いてくる p094.swf は 11.1 KB (11,423 バイト) ですが、 「文字の埋め込み」パネル で「埋め込まない」ボタンをクリックして「ＯＫ」したものをパブリッシュすると、 1.35 KB (1,385 バイト) の p094.swf になりました。 ほぼ　11,423-1,385 ＝ 10,038バイト（約10KB） が、 埋め込まれた 114文字 分のテキストのアウトラインデータの容量です。 日本語を表示させる場合は、オーソドックスに普通通り、 フォントには 「_ゴシック」 や 「_等幅」 など前にアンダースコアの付いたデバイスフォントを指定して、 埋め込みをしない（デバイスフォントの場合はできませんが）という方法を取るのが無難な方法だと思います。 「ライブラリ」 のムービークリップ 「msgWin」 をダブルクリックしてムービークリップ内のタイムラインの編集に入ると、 レイヤー1 に 「msgStr」 というインスタンス名のダイナミックテキストがありますが、 こちらはオーソドックスに 「_ゴシック」 が指定されています。 アンチエイリアスなどはかかっていませんが、日本語フォントも使えます。 こちらが普通の方法です。
＞ローディングの対象は、rootの所を全部変えればよいのでしょうか？ あのサンプルはrootの読み込み度合いを見ているので、そこを変えましょうというだけです。アクションスクリプトにおけるパスの考え方は分かってますか？ パスとして使えるのはインスタンス名ですのでそれを使えば良いのですが、単に_rootをインスタンス名にしてもパスがおかしい事は分かるでしょうか？ 分からない場合にはパスの考え方を学んでみて下さい。 ＞特定のイラストの出し方が分からなくて．．． これについては参考で出したURLには書いてません。 前回の回答で書いたのは、ダミー（依り代）のMCをまず置いて、 あとはそれに対して画像を含んだMC（swf化した独立のファイル）を次々に読み込めば良いという事です。 ファイル名が違うのですから、そもそも特定も何もありません。 Aというボタンを押したらA.swfをダミーMCと入れ替えるという感じです。 その際にA.swfの１フレーム目にローディングをかましておけば質問内容は実現出来ます。
＃１＆２ です。 あのー、 日本語はちゃんと通じていらっしゃいますか？ ＃２では， ロードするならロードするで， 「具体的なデータ形式などを提示して頂かないと具体的な回答はできません。」 と書いているのです。 「ロードする」or「ロードしない」を明記して， ロードする場合はどのようなデータをどのようにロードするのかを書いてもらわないと回答できません。 また， ロードさせないならロードさせないで， > １秒でこれだけ産まれ、亡くなり、トータルはこれだけですよ、 > と目に見える数字 > 厳密な数字でなくて良い とおっしゃる， 「適当な厳密でない数字が出る法則」 を提示していただかないと回答できないでしょう？ 本当にまったくデタラメな私が勝手に作った法則で動く， 「１秒でこれだけ産まれ、亡くなり、トータルの厳密ではない数字」 を表示する方法で良いのでしょうか？ 「全くデタラメの法則にしたがって数字を算出し表示する方法」 でしたら回答できますが↓。 ///////////////////////////////////////////////////////// ◎ デタラメサンプル ・ 勝手なルール (デタラメな法則) 　島の人口が最初 100000 人 であったとします。 　その島では１秒間に ４人±２人 の人が生まれ， 　１秒間に ２人±1人 の人が亡くなります。 新規ドキュメントを作成して， _root の フレーム1 に次のようなスクリプトを書いて（コピペして）， パブリッシュすると，上で書いたデタラメルールのサンプルができます。 ------------------------------------------------ // ステージ上に pop_txt0～2 というインスタンス名の // ダイナミックテキストフィールドを作成 for (i=0; i<=2; i++) { _root.createTextField("pop_txt"+i, i, 10, i*30+10, 150, 22); _root["pop_txt"+i].border = true; } // ---↑手動で作成する場合は以上不要↑--------- // 人口の変数 population の初期値を設定 population = 100000; // 人口を変動させるユーザ定義関数 changeNumber の定義 function changeNumber() { // 生まれる人の人数を ４人±２人 で適当に算出 birth = 2+Math.floor(Math.random()*5); // 死亡する人の人数を ２人±１人 で適当に算出 death = 1+Math.floor(Math.random()*3); // 人口を算出 population += birth-death; // ダイナミックテキスト pop_txt0 に人口を表示 pop_txt0.text = "総人口： "+population+" 人"; // ダイナミックテキスト pop_txt1 に生まれた人口を表示 pop_txt1.text = "生まれた人数： "+birth+" 人"; // ダイナミックテキスト pop_txt2 に死亡した人口を表示 pop_txt2.text = "死亡した人数： "+death+" 人"; } // 最初に 上の関数 changeNumber を実行 changeNumber(); // 1秒(1000ミリ秒)間隔で上の関数 changeNumber を実行 myID = setInterval(changeNumber, 1000); ------------------------------------------------ 意味は，行頭に // が付いた注釈行に書いてある通りです。 デタラメなルール通りに動くようにしたものですから， なぜそのようになるのかの詳細を説明しても意味がないので説明はしません。 とにかく，＃２ で書きましたように， setInterval で 1秒ごとに 何らかの関数を実行させれば良いのではないでしょうか。 以上 ＃２ からほとんど進化していない回答です。 逆に退化している回答かもしれません。 進化したのか退化したのかすら私にはわかりません。 また，動きの内容は違いますが， 　（テキストフィールドの作成） 　　　　　↓ 　変数の初期値を設定 　　　　　↓ 　ユーザ定義関数の定義 　　　　　↓ 　setInterval で1秒ごとにユーザ定義関数を実行 結局これは， ＃１ と同じしくみ（同じ形）のスクリプトに過ぎません。 つまり ＃１ からもほとんど進化していない回答です。 　
へ～～～FLASH5のflaファイルがFLASH8でとりあえずあけれるんですね。ひぇ～～～～～～ 本来、flaファイルを違うバージョンであけると「エラー」になり、私の場合（MXを８）即強制終了になってます。^^; flaの保存で、一つ前のバージョンでは保存できるんですけどね。
lengthプロパティを参照すればよいと思います。 Arrayクラスのlengthプロパティは配列の要素の数をあらわします。 var my_array:Array = new Array(); if (!my_array.length) { // lengthが0のとき真 trace("null"); } else { trace("違う"); }
クロスドメインの問題は， SWF間 もしくは SWF からロードするデータやロードする画像やムービー（SWF）に関するものですよ。 単純に言うと， 「他のサイトのものをSWFの中に表示させたりコントロールできないようにする」 というセキュリティです。 単純にアクセスして見えないのであれば，このことは全く関係ないでしょう。 ここまでは言えます。 --------------------------------------------- これ以上はわかりません。 ・SWFがアップロード出来ていない ・SWFを貼り付けるHTMLからのSWFのパスが間違っている ・SWFを貼り付けるタグに base="." や PARAM NAME="base" など不要なタグが書いてある 　などなどその他色々な要因が考えられます。
ちゃんと検証してみたわけではありませんが， これが変でしょう↓。 dataName = _root["so.data."+animal]; [ ] 配列アクセス演算子は "１つの階層" を表すものになります。 複数の階層をまとめて扱うことはできません。 １つの階層 というよりも . ドット演算子 の中身 という方が正確ですが。 そこが eval関数 との大きな違いです。 dataName = _root.so.data[animal]; でうまく行くのではないでしょうか？
＃１です。 > この文字を画像と一緒に表示したい場合は > どうすればいいでしょうか？ ？？？ 普通に 文字は文字でフェードインフェードアウトさせて， 画像は画像でフェードインフェードアウトさせれば良いだけでは？ ◎ レイヤーの様子 （/// ＝ ピンク[トゥイーン]，lll ＝グレー[固定表示]） 　名称　ｖ 種別　 M ID T [おはよう]　 ｖ テキスト - 1 |//////|lllllllllllllllll|//////| T [○○.jpg」　 ｖ 　画像 　- 2 |//////|lllllllllllllllll|//////|
Windows 98 も古いですが， なんとかサポートの対象にはなっています。 （Windows95 はFlashPlayer7 辺り頃，正式には FlashPlayer8 からは完全サポート外です。） Windows 98 はまだ良いとして， ブラウザは大丈夫でしょうか？↓。 http://www.adobe.com/jp/products/flashplayer/pro …
30fpsのなかに17fpsで動くムービークリップのイメージが良くわからないので、回答されにくいかとおもいます。 アクションスクリプトでムービークリップの再生速度を調整することは出来るかもしれませんが、あまり良い方法ではないようなきがします。 やるとしたら、30秒ごとに1フレーム進むようにするなどの処理をするくらいでしょうか。
出来るかどうかわからないですが。思いついたので。 2点の座標がわかるなら、傾きと切片を出してy=ax+mのかたちにしてはどうでしょう。 それにy=0のとき（上辺）、y=Stage.heightのとき（下辺）を代入すれば、 (x , 0) と　(x2 , Stage.heght)として求められそうですがどうでしょうかね。 真横の場合には少し別の処理をしないといけないかもしれませんが。
すいません言い損ねたのですが全て無料です
onClipEvent (enterFrame) { } の { } 内に， trace(Math.round((Math.sin(radian)+1)*100)); と書くと， これによって 0 ～ 200 の整数が得られますから， これを使えば良いのではないでしょうか。 実際には， this.swapDepths(0); 　　　↓変更↓ this.swapDepths(Math.round((Math.sin(radian)+1)*100)); このようにするということです。 最後の 100 は私が勝手に決めた数字です。適当です。 100 にすると 0 ～ 200 の整数が得られます。 500 にすると 0 ～ 1000 の整数が得られます。 したがって， もし 100 にした場合， 中心の球 は，0～200 の中間の深度100の辺りに常に存在すれば良いわけです。 つまり， 中心の球 もムービークリップに変換して， その 球のムービークリップには次のように書けば良いということになります。 onClipEvent (enterFrame) { this.swapDepths(100); }
カラーオブジェクトを使うとムービークリップの色が変えられます。 例のＵＲＬなら gloveColor = new Color(色を変えたいグローブのムービークリップのパス); gloveColor.setRGB(0x1F2345) //つけたい色を16進で指定 この動作をうまいことボタンとかと結びつけたり、色の部分を工夫すると使いやすくなります。
ファイルの容量もフレーム数も許容範囲内かと思います。 フレームレート50は多少多い気もしますが、それが原因とは考えにくいです。 > 1 2834 2834 > 2 100373 103207 > 3 9266 112473 これを見る限り1フレーム目は重くないかと・・・
master-3rdさんも気付いてらっしゃるようですが、おそらく１つだけしかボタンとして機能しないのは一番上のボタンがかぶさっているせいだと思います。 改善方法はいつくか考えられますが、シンプルにボタン機能と表示させたい画像を別にするのが良いと思います。 透明ボタンを作り、それぞれ左・中・右とならべ、サイズはそれぞれが重ならないように配置します。 それから現状配置している画像（ボタンではなくムービークリップにして）を下のレイヤーに配置します。 ボタンにマウスオーバーしたら、valvalvalさんがおっっしゃっているように 指定の画像以外を不可視にするか、もっと簡単に指定の画像の重なり順を最全面にもってくるようにしてあげれば上手くいくと思いますよ。
私もＡＳ2.0から3.0への移行勉強中なので詳しく説明できませんが、_rootはなくなりまして、そのかわり_rootプロパティとなったようです。 コツとしましては testMCのなかで _root.aaa(); としたいところを まずルートのプロパティをムービークリップオブジェクトとします var rootObj : MovieClip = this.root as MovieClip; それから rootObj.test(); で実行できました。 まとめると [メインタイムライン] function aaa(){ trace("ok") } [testMC] this.addEventListener(MouseEvent.CLICK , onClick) var rootObj:MovieClip = this.root as MovieClip; function onClic(event:MouseEvent):void{ rootObj.test(); } 以上でいかがでしょうか？
_level（レベル）を使うから面倒なことになるのです。 _level を使うのは古いやりかたです。 普通は _level は使わずに，ムービークリップにロードします。 ステージ上の適当な位置に， 小さな四角い塗りでも描いて，その小さな四角い塗りをムービークリップに変換します。 そしてステージ上のその小さな四角いムービークリップにインスタンス名を付けます。 例えば 「load_mc」 というインスタンス名を付けます。 そしてボタンのスクリプトでその 「load_mc」 に外部 SWF をロードさせます。 on (rollOver) { _root.load_mc.loadMovie("../INDEXTEST/face04.swf"); } on (rollOut) { _root.load_mc.unloadMovie(); } on (release) { getURL("../INDEXTEST/face04.html"); } 小さな四角いムービークリップ 「load_mc」 の基準点の場所に， 外部SWFの左上のコーナーが来るようにロードされると思います。 この 「load_mc」 の座標を手動で変えれば， ロードされる場所も簡単に変えられますし， _root.load_mc._x = 200; _root.load_mc._y = 50; などとスクリプトで変更することも可能になります。 またムービークリップにロードすると， 座標どころか上下の関係（レイヤーの選択）も簡単にできます。 最初，小さな塗りが見えてくれては困る場合は， ムービークリップ内の塗りを削除して， 空のムービークリップにしても良いです。
onEnterFrameが複数あれば、その数だけ常にループ動作をしている状態になると思います。 onEnterFrame内にif文があれば、常にif文を動かしている状態ではないでしょうか。 onEnterFrameが一つの方が軽くなります
せっかく配列を使っているのですから， Arrayクラスのメソッドを有効利用してあげれば， 楽にできると思いますよ。 フレームに書いて（コピペして）， 「制御」→「ムービープレビュー」で動作確認してみてください。 ///////////////////////////////////////////////////////////////// myWord = '<a>我が輩は<b kana="ねこ">猫</b>である。</a>'; myArr = myWord.split("<").join("★<").split(">").join(">★").split("★"); myArr.pop(); myArr.shift(); trace(myArr); // →出力 <a>,我が輩は,<b kana="ねこ">,猫,</b>,である。,</a> ///////////////////////////////////////////////////////////////// Flashドキュメンテーション （ヘルプ） ActionScript 2.0 リファレンスガイド > ActionScript クラス > Array http://livedocs.adobe.com/flash/8_jp/main/000019 …
