構造が見えてこないですが素直に読むと (フラグ1='a')*金額1+(フラグ2='a')*金額2+(フラグ3='a')*金額3 もしフラグと金額で更正されてるテーブルなら select sum(金額) from テーブル　where フラグ='a'
MySQLへのアクセスはなにを使ってるの? mysqlクライアント、phpMyAdmin、ODBC経由、 その他なにかプログラム経由? 具体的なSQL文もあわせて提示してください
>>論理削除とは、boolean型のdeleted_atみたいなものをつけて、trueなら、存在する。falseなら、存在しない(物理的には、存在し、中身はNULL)みたいな事。と認識しているのですが、合っているでしょうか？ >>deleteではなく、trueの場合のデータを0か、NULLで上書き→falseにする。 >>という感じで良いでしょうか？また、not nullのフィールドが存在した場合、0を、それ以外はnullを突っ込むという感じですか？ あくまで開発／実装方法のひとつなので断言はできませんが、業界でよく耳にする論理削除の意味とはずれています。 ・論理削除されたデータの中身をあえてNULLにしたりはしません（だいたいは元のまま）。 ・select時やupdate時にwhere句で論理削除済データを除外して、存在しないものとして扱います。 >>そして、insertの場合、idが自動付番の場合で、10番まで存在し、5番までは、true。6以降はfalseの場合、新しい行を追加するとき、6番目に追加、(update)するのですか？それとも、11番目にcreateするのでしょうか？ idが自動付番の場合は11番目に追加することが多いですが、現場によります。
すみませんなんか違う SELECT id FROM sample GROUP BY id HAVING count(distinct type) = 3 とするとユニークなtypeが拾えます
① -- 全件取りたいなら SELECT A.ID FROM sample A WHERE 2 <= (SELECT COUNT(B.ID) FROM sample B WHERE B.ID = A.ID AND B.type IN ('A', 'B') ) -- 1件だけ取りたいなら SELECT A.ID FROM ( SELECT A.ID FROM sample A GROUP BY A.ID ) A WHERE 2 <= (SELECT COUNT(C.ID) FROM sample C WHERE C.ID = A.ID AND C.type IN ('A', 'B') ) ② -- A, B, C以外もあるなら、 B.type IN ('B', 'C')の部分を -- B.type NOT IN ('A')に変えてもいいけど、 -- フルスキャンになると思うので、DやEまであっても、 -- 極力下記の形でIN句の中にDやEも追加する SELECT A.ID FROM sample A WHERE A.type = 'A' AND NOT EXISTS ( SELECT B.ID FROM sample B WHERE B.ID = A.ID AND B.type IN ('B', 'C') ) 先の回答の方法でもできるのでしょうが、HAVING、DISTINCTはデータが大量にあるとコストが高いです。 適切なプライマリーキー、インデックスを生成の上、データ量およびコストをそれぞれ実行計画をもとに確認し、最適なクエリを実装することをおすすめします。 どれが最もパフォーマンスがでるかは、データ量にも依存するので、一概にどういったクエリが正解となるかは難しいところです。
もしかしたらパーティショニングすれば汎用テーブルを共有して 利用する際に役にたつかもしれません。 https://dev.mysql.com/doc/refman/5.6/ja/partitio …
仮にこうします //データ作成 create table tbl (id int not null unique,name varchar(10)); insert into tbl values(1,'山田 太郎'),(2,'山田中 二郎'),(3,'山田山 三郎'),(4,'佐藤 一郎'),(5,'佐藤 次郎'),(6,'鈴木 一朗'),(7,'山田 太郎'); この場合、前二文字が同じの「山田」と「佐藤」を抽出する場合こうなります select * from tbl where substr(name,1,2) in( select substr(name,1,2) as x from tbl group by x having count(*)>1 ); 完全一致の「山田 太郎」のみ抽出したいならこう select * from tbl where name in( select name from tbl group by name having count(*)>1 );
回線の状態、プログラムの内容、データ更新の量などによりますので一概に言えないでしょう。 数件のデータ更新ならおそらく問題ないと思いますが、数十万件の更新だと話にならないとかは十分ありえます。 実際にはやってみるしかない。
何をやっても遅いのか、たまたまそのSQL文が遅いのか 具体性がないのでなんとも言えません。 sshで接続してmysqlクライアントで実行した場合は総じて高速ということなのでしょうか？ 特定のSQL文が遅いのであれば、インデックスの付け方が間違えています 全般的に遅いのであれば、SQL実行前のデータ渡しもしくは SQL実行後のデータの吐き出しが遅いかもしれません そうなると、apacheやらサーバー側の問題なので管理者への問い合わせになると思います
では以下のとおり確認ください。 //とりあえずその期間のデータの全日程をとるためt2テーブルを作る CREATE TABLE t2(d DATE UNIQUE); //プロシージャを設定 DROP PROCEDURE IF EXISTS modify_t2; DELIMITER // CREATE PROCEDURE modify_t2() BEGIN TRUNCATE t2; SELECT @a:=MIN(DATE_FORMAT(created,'%Y-%m-%d')) from t1; SELECT @b:=MAX(DATE_FORMAT(created,'%Y-%m-%d')) from t1; WHILE @a<=@b DO INSERT IGNORE INTO t2 VALUES(@a); SET @a=@a+INTERVAL 1 DAY; END WHILE; END // //プロシージャを呼び出し CALL modify_t2(); ※この時点で2016-07-10~2016-07-18のデータができている //結果表示 SELECT t3.week,COALESCE(t4.count,0) AS count,COALESCE(t4.count,0)/t3.week_count AS AVE,t3.week_count FROM( SELECT DATE_FORMAT(d,'%w') AS week,COUNT(*) AS week_count FROM t2 GROUP BY week ) AS t3 LEFT JOIN ( SELECT DATE_FORMAT(created,'%w') AS week,COUNT(*) AS count FROM t1 GROUP BY week ) AS t4 ON t3.week=t4.week;
考え方はほぼ同じでt2をt1のnameでしぼればよいでしょう SELECT sum(price) as price from t2 where id in ( SELECT max(t2.id) FROM t2 inner join t1 on t2.t1_id=t1.id and t1.name='a' group by t1_id )
使ったことはありませんが、使えそうな気がします。 http://www.vector.co.jp/soft/dl/winnt/business/s …
じゃあブラウザの表示がUTF８じゃないとか どの文字コードなら普通に表示できるのかわかりませんか？
>他のテーブルは成功するのですが、 >一つのテーブルだけが、このエラー ということであればMySQL側のlogにエラーが残っているかと思います なんとも言えませんがアクセス権か何かの問題じゃないでしょうか？
集計した結果が例示の通りということ？ それとも生データ？ 数値の部分に番号という名前がついているということですよね？ select * from テーブル order by 番号 で問題ないですね。 具体的なSQL文を提示してみてください
たぶん テーブルA Date,ConNo,line にして select A.Date, A.ConNo, sum(B.Amt) from A left join B on A.ConNo = B.ConNo and A.line = B.line group by A.Date, A.ConNo とすれば解決
＞つまり、nullはhtml側で何を書いても取得できないということでしょうか。 MySQLの場合文字列の比較は大きく３つあります 完全一致：カラム='文字列' 前方後方一部一致:カラム LIKE '文字列%' (’%文字列%’とか'_文字列_'とかそれらの組み合わせ) 正規表現：カラム RegEXP '文字列' (’.*’とか'.+'とか^や$など組み合わせ) そのどれを使ってもNULLを抜き出すことはできません たとえば「カラム=''」としても、「カラム=NULL」としても合致しません NULLと合致するのはあくまで「カラム is NULL」とか「ISNULL(カラム)」などの関数を利用します もしそのCMSが文字列比較しかできないのであればNULLは抽出できないと思います たいていCMSごとにNULLをチェックする仕組みをもっているような気がしますが マニュアルなど再確認されてみてはいかがでしょうか？
> そこに表れるPCは、ネットワーク上のPCだけであって、 > インターネット上のローカルPCは見えなくて、選択できないのではな > いかと思うのですが > 違いますでしょうか。 違います。 指定できるのはローカルPCまたはLAN上に存在するPCやNASのファイルだけです。 押してみれば分かります。
havingの使い方がおかしい SELECT count(id) FROM s where 1 AND (a/b)*100 BETWEEN 200 AND 500
webサーバー,mysql, PHP、phpＭyadminをインストールしてできる 設定ファイルを編集するときに、文字コードの設定がうまくできていなのでは？
＞PHPの再帰処理によっても似たようなことができた 構造を表示するだけならどちらでもたいして変わらないと思います 集計したり階層の構成を変えたりを考えるとプロシージャで 処理した方がストレスないのかなぁ・・
＞SUBSTR('id',-4,4) SUBSTR(`id`,-4,4) でどうでしょ？ シングルクォートだとidという文字を操作しています
mysqldumpが標準
バージョンやエンジンによるかもしれませんが もともとタイムスタンプは1テーブルに1カラムしか許可されていませんでした いまは複数カラムのタイムスタンプが設定できるようですが defaultにCURRENT_TIMESTAMPを指定できるのは１カラムだけなので 他のカラムにはdefault 0でよいので設定をかいておくとよいでしょう （default値を指定しないとCURRENT_TIMESTAMPを指定しようとするみたい）
補足、プロシージャを使って10のn乗件単位でやるならこうかな （思ったより速くなったけど、まだ改善の余地あり） 一度バルクSQLをつくってから流し込むので あまり長すぎるSQLを書くとオーバーフローする可能性があります。 要素数やレコード長によりますが1000件単位くらいが妥当かなと DROP PROCEDURE IF EXISTS MYPROCEDURE4; DELIMITER // CREATE PROCEDURE MYPROCEDURE4() BEGIN DECLARE a BLOB; DECLARE done INT DEFAULT 0; DECLARE CUR CURSOR FOR SELECT CONCAT('INSERT IGNORE INTO `tbl2` VALUES(' ,GROUP_CONCAT('\'',id,'\',\'',data,'\',\'',val,'\'' separator '),(') ,')') as x FROM `tbl1` GROUP BY TRUNCATE(id,-2);/* PER1=0, PER10=-1, PER100=-2, PER1000=-3*/ DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1; SET group_concat_max_len = 10000000; OPEN CUR; REPEAT FETCH CUR INTO a; IF NOT done THEN SET @sql=a; PREPARE stmt from @sql; EXECUTE stmt; END IF; UNTIL done END REPEAT; CLOSE CUR; END // DELIMITER ; TRUNCATE `tbl2`; CALL MYPROCEDURE4;
max (time)にas maxtimeなどして別名をつけて その名前でorderbyしてください
unionした2行をカッコでくくってfrom句にいれてgroupbyしてみては?
月は月初日を入れておくといいです #1で指摘した通り、入出金のデータだけだと結局その前月からの 繰り越しがわからないので、ダミーで1月に各銀行に10000円ずつ入金しておきます //元データ create table table1(銀行名 varchar(10), 出金 int, 入金 int , 月 date); insert into table1 values('A','0','10000','2016-01-01'),('B','0','10000','2016-01-01'),('B','0','100','2016-02-01'),('A','100','0','2016-02-01'),('B','0','100','2016-02-01'),('A','0','100','2016-02-01'),('A','100','0','2016-03-01'),('B','100','0','2016-03-01'),('B','0','100','2016-03-01'),('A','100','0','2016-03-01'),('B','0','100','2016-04-01'); //第一段階：月毎、銀行名毎の入出金および前繰は以下 select 月,銀行名 ,(select coalesce(-sum(出金)+sum(入金),0) from table1 where 月<t1.月 and 銀行名=t1.銀行名) as 前月繰越 ,sum(出金) as 出金計 ,sum(入金) as 入金計 from table1 as t1 group by 月,銀行名 これに次繰を表示するとこうなる select 月,銀行名,前月繰越,出金計,入金計,前月繰越-出金計+入金計 as 次月繰越 from ( select 月,銀行名 ,(select coalesce(-sum(出金)+sum(入金),0) from table1 where 月<t1.月 and 銀行名=t1.銀行名) as 前月繰越 ,sum(出金) as 出金計 ,sum(入金) as 入金計 from table1 as t1 group by 月,銀行名 ) as sub これのうち、3月のデータをとるので select 月,銀行名,前月繰越,出金計,入金計,前月繰越-出金計+入金計 as 次月繰越 from ( select 月,銀行名 ,(select coalesce(-sum(出金)+sum(入金),0) from table1 where 月<t1.月 and 銀行名=t1.銀行名) as 前月繰越 ,sum(出金) as 出金計 ,sum(入金) as 入金計 from table1 as t1 group by 月,銀行名 ) as sub where 月='2016-03-01' ここで問題、命題では4月のA銀行は入出金データがない 入出金データがない月は前繰も次繰も拾えないので、カレンダーテーブルを 別途つくって処理するなど工夫が必要です
MySQLはマルチテーブルインサートはできないようです。 2行に分けてやるなり、プロシージャで処理するなりしてください ちなみにmysql_query()関数は最新のphpでは廃止されていますので いつまでも使い続けていると、痛い目をみます そろそろPDO（もしくはmysqli_系の関数）にシフトをしたほうがよいですよ http://jp2.php.net/manual/ja/function.mysql-quer …
ほぼ意味不明 画像のタイトルとはなんでしょうか？ ファイル名？なにか任意にタイトルをつけている？ また画像へのアクセスは特定のidを利用する？ かりにmysql上のファイル名を変更した場合、保持したファイル名との 整合性が保たれないため、アクセスできなくなるでしょうね (命題にあるパスの変更ってやつです) 任意のタイトルを変更したいなら好きに変更すればよいでしょう 圧縮については、そもそもmysql関係ないし
＞どのように 12 を取得してwhere句で指定するのか GETで渡しているので$_GETを利用します とりあえずarticle.phpに対してnoを渡さないときの挙動をどうするか決める必要があります。 絞りこみ条件を指定しない場合の挙動は３つあります ・データを表示しない ・全データを表示する 　（すなわち絞り込みをしない） ・該当するデータの内、適当に１データだけ表示する 　（これはあまりお勧めできない） 見た感じPDOを前提としてよいのであれば以下 （とりあえず練習ということでワイルドカード使っているようですが できるだけカラム名は羅列した方がよいです。） <?PHP try{ $dsn = 'mysql:host=localhost; dbname=testdb'; $user = 'root'; $password = 'hogehoge'; $pdo = new PDO($dsn, $user,$password); $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); $sql="SELECT no,title,content FROM post WHERE 1 "; $sql.=" AND no=?"; $datas=array(); $datas[]=isse($_GET["no"])?$_GET["no"]:""; $stmt = $pdo->prepare( $sql); $stmt->execute($datas); $row = $stmt->fetch(PDO::FETCH_ASSOC); print_r($row); }catch(PDOException $e){ die($e->getMessage()); } 絞り込みの方法は原則WHERE 1に対して、絞り込み条件を付加していく 今回のケースだとnoが指定されていない場合でもno=""をチェックするので データが表示されない WHERE 1 AND 条件1 AND 条件2 AND 条件3・・・ もしくは WHERE 0 OR 条件1 OR 条件2 OR 条件3・・・ のどちらかだけど、場合によっては WHERE 1 AND (0 OR 条件1 OR 条件2) AND 条件3・・・ 的なことも必要になる場合があります
if(!is_null($xdays))$query .=" and tb.day='" .$xdays ."'\n"; if(!is_null($xmn))$query .=" and tb.mn = '" .$xmn ."'\n"; if(!is_null($xfp))$query .=" and tb.fp='" .$xfp ."'\n"; if(!is_null($xre))$query .=" and tb.re='" .$xre ."'\n"; $query .=" order by tb.day DESC,tb.jikan\n"; $query .=" limit 0,50"; など、条件を行にわけると、エラーの箇所をより細かく限定できるかもしれません 具体的なエラー行数が表示されるので
理論的にはライブラリを介するよりネイティブなmysqli関数が早いはずですが 現状PDOが短所が少なくベターな選択肢でしょう
一律で次や前を書くことはできないことは理解できてますか？ （例外処理が必要とかきましたよね？） とりあえず、なんのCMSかわかりませんがビミョーな感じ たとえばこんな風にidを抜き出してみては？ CREATE TABLE `m_magazine` ( `magazine_id` int(11) NOT NULL PRIMARY KEY, `url` varchar(256) not null, `magazine_title` varchar(256) not null, `is_deleted` enum('y','n') not null default 'n' ); insert into `m_magazine` values (1,'url1','title1','n') ,(2,'url2','title2','n') ,(4,'url4','title4','n') ,(5,'url5','title5','y') ,(6,'url6','title6','n') ,(7,'url7','title7','n'); 条件： ・idが必ずしも連番とは限らない ・削除フラグが'y'のモノは無視する select (select max(`magazine_id`) from `m_magazine` as t1 where t1.`magazine_id`<t0.`magazine_id` and t1.`is_deleted`='n') as pre_id ,t0.`magazine_id` as `this_id` ,(select min(`magazine_id`) from `m_magazine` as t2 where t2.`magazine_id`>t0.`magazine_id` and t2.`is_deleted`='n') as nxt_id from `m_magazine` as t0 where t0.`is_deleted`='n'; これにurlとタイトルを拡張して select `pre_id`,t4.`url` as `pre_url`,t4.`magazine_title` as `pre_title` ,`this_id`,`this_url`,`this_title` ,`nxt_id`,t5.`url` as `nxt_url`,t5.`magazine_title` as `nxt_title` from ( select (select max(`magazine_id`) from `m_magazine` as t1 where t1.`magazine_id`<t0.`magazine_id` and t1.`is_deleted`='n') as pre_id ,t0.`magazine_id` as `this_id` ,t0.`url` as `this_url` ,t0.`magazine_title` as `this_title` ,(select min(`magazine_id`) from `m_magazine` as t2 where t2.`magazine_id`>t0.`magazine_id` and t2.`is_deleted`='n') as nxt_id from `m_magazine` as t0 where t0.`is_deleted`='n' ) as t3 left join `m_magazine` as t4 on `pre_id`=t4.`magazine_id` left join `m_magazine` as t5 on `nxt_id`=t5.`magazine_id` 仮に自ページのidが4なら、t0のmagazine_idで絞って select `pre_id` ,t4.`url` as `pre_url` ,t4.`magazine_title` as `pre_title` ,`this_id` ,`this_url` ,`this_title` ,`nxt_id` ,t5.`url` as `nxt_url` ,t5.`magazine_title` as `nxt_title` from ( select (select max(`magazine_id`) from `m_magazine` as t1 where t1.`magazine_id`<t0.`magazine_id` and t1.`is_deleted`='n') as pre_id ,t0.`magazine_id` as `this_id` ,t0.`url` as `this_url` ,t0.`magazine_title` as `this_title` ,(select min(`magazine_id`) from `m_magazine` as t2 where t2.`magazine_id`>t0.`magazine_id` and t2.`is_deleted`='n') as nxt_id from `m_magazine` as t0 where t0.`is_deleted`='n' and t0.`magazine_id`=4 ) as t3 left join `m_magazine` as t4 on `pre_id`=t4.`magazine_id` left join `m_magazine` as t5 on `nxt_id`=t5.`magazine_id`
まずMySQL4って一番最悪のバージョンですが本当に大丈夫ですか？ とくにMySQL4.0とMySQL4.1は似たバージョンですが中身はほぼ別物で もし4.0をつかっているなら高速化はかなり難しいと思います。 MySQL4使うくらいならMySQL3.23の方がチューニングしやすいと思います。 MySQL5以降の適当な運用を検討した方がよいと思いますが・・・ ちなみにSQL文的にもUNIONでつないだものを集計するのは相当無理があるように見えます なぜ同じ様な構成のテーブルを冗長に分断してしまったのでしょうか？ 構成がおなじならパーティショニングなどで統合して管理した方がよいのでは？ あとはexplainで様子を見ながらチューニングしていくのが賢明でしょう
syoumiがDATE型、もしくはTIMESTAMP型ならdate_format関数を使って年と月のみの記述に変換することで可能です。 SELECT date_format(syoumi, '%Y-%m') AS syoumi_ym, syouhin,SUM(kosu) AS gokei_kosu,SUM(jyuryo) AS gokei_jyuryo FROM storage GROUP BY syoumi_ym, syouhin なお、結果の最初のカラム名がsyoumiからsyoumi_ym になりますので、ご注意ください。 元のSQLですが、MySQLの設定やバージョンによっては動くかもしれませんが、GROUP BY句は GROUP BY syoumi, syouhin とするのが正しいです。
っていうかauto_incrementのカラムの頭に出力時にCONCATでつければいいだけじゃない？ 桁数をあわせたいなら、最初からidに長さを指定して、unsigned zerofillしておけばよいでしょう create table hoge (id int(10) unsigned zerofill not null auto_increment primary key,data varchar(10)); insert into hoge(data) values ('test1'),('test10'),('test100'); select concat('head',id) as hid,data from hoge;
>userid_2とdate_2というインデックスが残っていました。 ALTER TABLE `extra` DROP INDEX `userid_2` ; ALTER TABLE `extra` DROP INDEX `date_2` ; ですね ＞こういうsql文を覚えるのは何を勉強すればよいでしょうか。 細かい構文を覚える必要はなくて適当なキーワードでぐぐれば引っかかりますよ 基本的にテーブルの属性を見るのは「SHOW」構文で変更するのは「ALTER TABLE」構文です
>大量に増えた場合は非常にsqlを組み立てるのがめんどうになります。 そうでもないと思いますが・・・ create table クロス集計 select 登録日 ,sum(容量='s') as s ,sum(容量='m') as s ,sum(容量='l') as s ,count(*) as 合計 from 収穫 group by 登録日; >見た目にもデータが全く無いのにも関わらずに列見出しとしては存在をしますので。 SQLとはそういうものです、データがないということを集計するのもSQLの仕事ですから ＞この様な方法(この場合は、プログラムでデータが有るのかをチェックしてsqlを組み立てると言う方法) ＞以外にmysqlでのsqlの記述が有るのでしょうか。 ないですね プロシージャでやっても結局データがあるかどうかチェックしてからSQLを組み立てるだけです もしくはデータを全部だした上で、データがない列を削除するかですが、ロジック的には同じことです （むしろ効率はわるい）
>dummyと言うのはたんなるaliasでしょうか。 FROM句にサブクエリを実行するときにはalias名が必要なのはMySQLの仕様です https://dev.mysql.com/doc/refman/5.6/ja/from-cla … 正直dummyでもhogeでもなんでもいいです。 なにか別名がついていればいいという仕様です 実質この場合のalias名は利用されていないし、競合することはありません 気になるならユニークなalias名を指定してください 例) SELET内のサブクエリにaliasは不要、ただし付けないと参照しづらい SELECT (SELECT 1); WHERE句もリレーションしなければalias不要 SELECT 1 FROM (SELECT 1) AS DUMMY WHERE 1=(SELECT 1); FROM句は常にaliasが必要 SELECT * FROM (SELECT 1); →× SELECT * FROM (SELECT 1) AS DUMMY; →○
＞PHPmyadmin で設定 (1)テーブルを開いて構造を選びます。 (2)各カラムの前のチェックボックスあるので必要なものにチェックします (3)テーブルの下にある「ユニーク」というアイコンか文字をクリックします phpMyAdminでやるとインデックス名を任意につけることができません。 インデックス名を変更したいならインデックスを作ったあとで、 インデックスの編集メニューから名称を変更してください
sourceコマンドを叩く形ではなく、mysqlコマンドを叩く際に、sourceコマンドで実行しようとしているファイルを選択すればよいのではないでしょうか。 http://mysql.javarou.com/dat/000845.html また、パスワードは、mysqlコマンドを叩く際のオプションとして指定することができます。 http://www.dbonline.jp/mysql/connect/index3.html perlはよくわかりませんが、perl内でDB接続後のsourceコマンドはサポートされていないようですね。 しかし、perlからバッチファイルの実行はできるようです。 http://q.hatena.ne.jp/1147014058 perlからの実行で一貫して処理させたいのならば、perlからはバッチファイルを実行するようにし、バッチファイル内でmysqlコマンドを、実行したいファイルの指定と合わせて記述して叩く、という方法でうまくいきそうな気がします。
ああ、任意の文字で試すことは出来ない状況でしたか。 しかし問題ありません。ハイフン(あるいはダッシュ?)「―」は0x5CかMS932かどちらの問題かわかりませんでしたが、全角マイナス(Unicode的には全角ハイフンマイナス)「－」なら確実にCP932の問題です。 参考: http://www.m-bsys.com/character-code/java-sjis phpやSQLには詳しくないので具体的な対処法は分かりませんが、(正式な)Shift_JISとCP932が入り混じって使われているのでしょう。
SELECT @@secure_file_priv; で得られたフォルダからアップロードしてみては？ NULLであればmysql設定ファイルで --secure-file-privを設定してみてください
＞SET @sql=CONCAT('update result1 set target1=? where id between ? and ?;'); ＞上記で、?をブレースホルダーと言い、 まぁプレースホルダ自体は比較的一般的なIT用語ですね http://e-words.jp/w/%E3%83%97%E3%83%AC%E3%83%BC% … ＞EXECUTE stmt USING @a,@b,@c; ＞この時に実際の指定をするのがバインドと言う事でしょうか。 私もプロではないので、厳密な用語として正しいかどうかといわれると怪しいですが そういう認識でよいかと思います https://dev.mysql.com/doc/refman/5.6/ja/sql-synt … ＞PREPARE stmt FROM @sql; ＞上記で、指定をするのは概観だけで実際の正確な指定は実行時に指定をする ＞と言う方法の事をここではブレースホルダーの指定と言うのでしょうか。 プリペア（もしくはプリペアド）の処理を指定してるという言い方の方がわかりやすいのでは？ 実行自体はEXECUTEの構文になるので https://dev.mysql.com/doc/refman/5.6/ja/prepare. …
＞動きました。 それはよかった ＞テーブルに書き込みますが、この場合はテーブルには一つしかフィール ＞ドが無いので(と)でフィールドの指定は要らないのでしょうか。 VALUESで指定する引数の個数と、テーブルのカラム数が同じ場合は省略可能です 気持ち悪ければ INSERT IGNORE INTO MYTABLE (`d`) VALUES (@D); としてください ＞この場合のバッククォートを付ける意味は何なんでしょうか。 よくある予約語対策です。 予約語と競合しない場合はバッククォートは不要です テーブルの日付カラムにdateとかつける人もよく見受けられるので カラムだけにでも付けといたほうが気休めにはなります。 本来ならデータベース名やテーブル名にもつけます。 ＞declareと言うのは、procedureの中で使われるローカル変数と言う事でしょうか。 今回はそうなりますね DECLARE自体はその他のカーソルや条件・ハンドラの定義などにつかいます https://dev.mysql.com/doc/refman/5.6/ja/declare. … ＞またbeginとendは複数の行をprocedureの中で記述をする時には必要と言う事でしょうか。 複合ステートメントの構文です https://dev.mysql.com/doc/refman/5.6/ja/begin-en …
＞group byでユニークになっているのですね。 勘違いしてはいけないのは、データが単にユニークなだけで、ユニークな属性は ついていないということです。 もしさらにそのテーブルからリレーションするのであれば、なんらかの 属性はつけた方がよいかもしれません >もう一つ質問ですが。ここで作ったテーブルを別のテーブルを日付でjoin >したいのですが。この時の日付はインデックスの指定が要るのでしょうか。 であれば「create table xt」するときに適正なインデックスをつくっておいた方がよいでしょう。 もちろん後付けでalter tableで追加することもできます
>既にテーブルにデータが >保存されていますのでsumの値を更新してテーブルに保存をしたい テーブルを毎回全レコード対象に更新するのはあまりお勧めしませんが 以下でできないことはない。 ただしホントに必要な処理なのかはよく考えて運用ください //テストデータ create table hoge(id int not null primary key,money int,sum int null); insert into hoge(id,money) values(1,12),(2,20),(3,22); update hoge set sum=(select @a:=@a+money from (select @a:=0) as dummy) order by id;
//元データ create table members(id int not null unique,name varchar(30),index id_name(id,name)); insert into members values(1,'山田'),(2,'鈴木'),(3,'田中'); create table subjects(id int not null primary key,member_id int,subject varchar(30),index member_subject(member_id,subject)); insert into subjects values(1,1,'国語'),(2,1,'数学'),(3,1,'英語'),(4,2,'国語'),(5,2,'英語'),(6,3,'数学'); create table colors(id int not null primary key,member_id int, color varchar(30),index member_color(member_id,color)); insert into colors values(1,1,'赤'),(2,1,'青'),(3,2,'赤'),(4,2,'緑'),(5,3,'赤'); ＞1.指定する教科と色のどれか１つにでも該当 ＞例）国語 英語 青 緑 のどれか１つに該当する名前を検索 SELECT DISTINCT m.id,m.name FROM members as m LEFT JOIN subjects as s on m.id = s.member_id AND s.subject in('国語','英語') LEFT JOIN colors as c on m.id = c.member_id AND c.color in('青','緑') WHERE not(s.member_id is null and c.member_id is null) ＞2.教科はAND 色はOR ＞例）国語と英語の両方に該当し、かつ、青か緑のどれか１つにでも該当する名前を検索 SELECT DISTINCT m.id,m.name FROM members as m LEFT JOIN colors as c on m.id = c.member_id AND c.color in('青','緑') WHERE 1 and not( c.member_id is null) and m.id in( SELECT member_id FROM subjects WHERE subject in('国語','英語') GROUP BY member_id HAVING COUNT(*)=2 ) ＞3.教科はOR 色はAND ＞例）国語と英語のどれか１つにでも該当し、かつ、青と緑の両方に該当する名前を検索 SELECT DISTINCT m.id,m.name FROM members as m LEFT JOIN subjects as s on m.id = s.member_id AND s.subject in('国語','英語') WHERE 1 and not( s.member_id is null) and m.id in( SELECT member_id FROM colors WHERE color in('青','緑') GROUP BY member_id HAVING COUNT(*)=2 ) ＞4.指定する教科と色のすべてを満たす ＞例）国語 英語 青 緑 のすべてを満たす名前を検索 SELECT DISTINCT m.id,m.name FROM members as m WHERE 1 and m.id in( SELECT member_id FROM subjects WHERE subject in('国語','英語') GROUP BY member_id HAVING COUNT(*)=2 ) and m.id in( SELECT member_id FROM colors WHERE color in('青','緑') GROUP BY member_id HAVING COUNT(*)=2 )
このへんでしょうか？ https://dev.mysql.com/doc/refman/5.6/ja/windows- …
explainで検証してみてください 一部インデックスが利いていないですね GOODSテーブルのCLASS_GOODSを捨てて、3カラムでインデックスを貼ってみてはどうでしょう？ ALTER TABLE GOODS DROP INDEX CLASS_GOODS; ALTER TABLE GOODS ADD INDEX ID_CLASS_GOODS(GOODS_ID,CLASS,NAME); それでもインデックスが微妙なので、いくつかパターンを試してみるとよいかもしれません。 試しに集計テーブルをつくってためしてみてください CREATE TABLE SHUKEI (CLASS INT NOT NULL,NAME VARCHAR(1000) NOT NULL,B_NAME VARCHAR(1000) NOT NULL,INDEX BNAME(B_NAME)); 2回目以降は TRUNCATE SHUKEI; //データ投入 INSERT INTO SHUKEI SELECT D.CLASS,D.NAME,B.NAME AS B_NAME FROM RELATION_GOODS AS A INNER JOIN GOODS AS B ON A.GOODS_ID = B.GOODS_ID INNER JOIN RELATION_GOODS AS C ON A.FILE_ID = C.FILE_ID INNER JOIN GOODS AS D ON C.GOODS_ID = D.GOODS_ID; //結果表示 SELECT CLASS,NAME,COUNT(*) AS NUMBER FROM SHUKEI WHERE B_NAME ='商品Ｂ' GROUP BY CLASS,NAME ORDER BY NUMBER DESC
GREATEST()
delete from work where id<= (select * from ( select min(id) from work where mail = "end_of_record" )as sub) ;
>select count(id) from mail; select count(*) from mail; じゃなくて？ ちなみにidはユニークもしくはプライマリなんですよね？ で、あればインデックスも利いているとはおもうのですが・・・ ＞実際の処理は件数を取得するのが目的では無くて、テーブルにレコード ＞が有るのかどうかの確認 select id from mail limit 1; とすれば空かどうかはわかると思います
>先頭がタブであっても 先頭と末尾にダブルクォーテーションは付けてますか？ またタブがないというのは何で確認しているのしょうか？ 見えていないだけであるのかもしれません。
ずいぶん奇妙なデータ管理ですが 例示のデータを利用するならこんな感じ select * from work where id<= (select min(id) from work where mail='end_of_record') 普通は、同じメールであれば同じidを振るとか 一行ごとに分けずにtext形式などで処理するとかじゃない？
page_idごとにユニークなdeviceをカウントしたいのですよね？ いろいろやりようもあるとおもいますが、とりあえずこんな感じ？ select `date`,sum(device='pc') as pc,sum(device='smart') as smart from ( select distinct `date`,`device`,`page_id` from access_recode where `date` between '2016-01-01' and '2016-01-03' ) as sub group by `date`
一応プロシージャでテンポラリのカレンダーを作った例 DROP PROCEDURE IF EXISTS P_TEST; DELIMITER // CREATE PROCEDURE P_TEST(IN s DATE,IN e DATE) BEGIN DECLARE i DATE DEFAULT s; DROP TABLE IF EXISTS TEMP_CALENDAR; CREATE TEMPORARY TABLE TEMP_CALENDAR(`id` int not null primary key auto_increment ,`d` DATE); WHILE i<=e DO INSERT IGNORE INTO TEMP_CALENDAR(`d`) VALUES(i); SET i=i+1; END WHILE; END // DELIMITER ; テーブル CREATE TABLE hoge(`data` INT,`createdate` DATETIME); INSERT INTO hoge VALUES(1,'2016-01-01 01:01:22'),(1,'2016-01-01 08:00:23'),(1,'2016-01-03 09:00:22'); 実行 CALL P_TEST('2016-01-01','2016-01-04'); SELECT c.d,COALESCE(count,0) AS count FROM TEMP_CALENDAR as c LEFT JOIN (SELECT DATE(`createdate`) AS d,COUNT(*) AS count FROM hoge GROUP BY d) as h ON c.d=h.d ;
バージョン管理については一般的に メジャーバージョン、マイナーバージョン、ビルドまたはリビジョン（もしくはその両方）という ３～４つのくくりがあります。 MySQLのメジャーバージョンは5でマイナーバージョンが5(5.5)や7(5.7)ということです。 通常メジャーバージョンはコンセプトや設計方針自体が違うのであるいみ別アプリにちかい バージョンアップになりますが、安定性や仕様の継続性の観点から マイナーバージョンもブランチすることが多いようです たとえばMySQLだと長年安定バージョンとされていた3.23が機能面での拡張要求から 4.0に上がった際、結局方針が固まらず4.1が並行して開発されました。 またさらに発展版の5.0が同じ様な時期にリリースされ、結構混沌としている状況でした。 それぞれマイナーバージョンもこまかい仕様の変更があるので、現行であれば 5.5であれば47、5.6であれば28、5.7であれば10のビルドをつけ 各自はマイナーバージョンごとにバージョンが管理されているということです。 また考え方としてはPHPもほぼ同様です その他あえてcurrentバージョン（現行の最新）とstableバージョン（安定版）を分けて リリースするようなものもあります。
＞This may be due to a blocked port ポートがブロックされているメッセージです。 恐らくファイアーウォールでブロックされているのだと思います。 デフォルトのポートは、3306です。 ウィンドウズのファイアーウォールなら、プログラムでアクセス可能に出来るので「mysqld.exe」に許可権限を与えてあげれば起動すると思います。 ＞ブラウザを立ち上げて「http://localhost/」への接続もできません！。 これは、Apacheの問題です。MySQLとは直接の関係はありません。
＞これって言のは、働いている現役の社会人を対象としている事でしょう ＞か。そこを知りたかったものですから。 非常に単純なロジックだと思いますけどね・・・ 命題）必須項目をかけなければ登録できず、自分は必須項目をクリアできない ・登録にウソを書く→誰もいいとは回答しない→自己責任でウソを書く ・ウソは書きたくない→登録できない→使用しない ２択なので好きなように対応してくださいというのが#1の回答です （質問者さんの命題をみるかぎり他の選択肢は提示されていませんが） それ以上の回答を希望するなら、登録画面中のどこにどうひっかかっているか 具体的に明示しないと回答のしようがないかと・・・
ちなみに簡単なSQL文を実行するプロシージャ DROP PROCEDURE IF EXISTS P_TEST; DELIMITER // CREATE PROCEDURE P_TEST(IN s TEXT) BEGIN SET @sql=s; PREPARE stmt from @sql; EXECUTE stmt; END // DELIMITER ; ここで例えば・・・ CALL P_TEST('SELECT 1 AS X;'); を実行する
>Ａテーブルは集計結果を保持しています。 集計結果からさらに集計ってしてます？ むしろ集計後の集計をしていないならインデックスは不要でつねにデータの垂れ流しですから イメージ的には 膨大なデータがあって→その日参照したいデータだけ朝つくってテーブルに保持→ パターン1)ユーザーは絞り込みや集計せずそのデータを読み出すだけ 解決策：キャッシュもなにも不要で、毎回同じデータを抽出するだけなら ファイルか何に保持しておけば済むでしょう パターン２)あくまでもユーザーは任意の条件で抽出(WHEREやらHAVINGやら) もしくは、集計(SUMやらCOUNT)をおこなう 解決策：検索条件を想定し、Aテーブルに適切なインデックスを設定して、抽出する
＞2の意味は「国語」「理科」という2つの語句で検索しているので2という数字を指定していると理解してよろしいのでしょうか？ ちゃんと説明した方がよかったですね。 ご理解の通り、２科目で検索しているという意味の「2」です。 ついでに「 count(distinct c.name)」でdistinctを使っている理由は 仮にcategoryテーブルで10番目のデータが「10 | 3 |国語」と9番目とかぶるような場合 count(c.name)だけだと数値が3になるからです ユニークなカウントをして数値と合致させる必要があります
ああ、なるほどねぇ・・・ そもそもRDBに「次のレコード」という考え方がないので作業がちょっと難しくなります いただいた例を元に以下 create table mytbl(ymd int,soshi varchar(30),shain varchar(30)); insert into mytbl values('20151211','011東京','010加藤'),('20151210','011東京','010加藤'),('20151210','012埼玉','005佐藤'),('20151203','010大阪','001山田'),('20151203','011東京','002後藤'),('20151203','012埼玉','005佐藤'),('20151203','011東京','009田中'); これを「order by ymd desc, soshi, shain」を前提にランク付けをします。 select ymd, soshi,shain ,(select count(*)+1 from mytbl as t2 where 1 and (t1.ymd<t2.ymd) or (t1.ymd=t2.ymd and t1.soshi>t2.soshi) or (t1.ymd=t2.ymd and t1.soshi=t2.soshi and t1.shain>t2.shain) )as rank from mytbl as t1; //order by rank asc するとランク順に表示される 仮にrank=4のレコード('20151203','010大阪','001山田')について 前のレコードはmeisai.php?rank=3 自分自身はmeisai.php?rank=4 次レコードはmeisai.php?rank=5 meisai.phpではrankを元にhavingで絞り込みをします。 select ymd, soshi,shain ,(select count(*)+1 from mytbl as t2 where 1 and (t1.ymd<t2.ymd) or (t1.ymd=t2.ymd and t1.soshi>t2.soshi) or (t1.ymd=t2.ymd and t1.soshi=t2.soshi and t1.shain>t2.shain) )as rank from mytbl as t1 having rank=? //?のところに$_GET["rank"]でうけとったデータを渡す 毎回おなじロジックでランク付けをだすので viewをつくっておくと楽です create view myview as select ymd, soshi,shain ,(select count(*)+1 from mytbl as t2 where 1 and (t1.ymd<t2.ymd) or (t1.ymd=t2.ymd and t1.soshi>t2.soshi) or (t1.ymd=t2.ymd and t1.soshi=t2.soshi and t1.shain>t2.shain) )as rank from mytbl as t1; リスト表示 select ymd, soshi,shain,rank from myview order by rank asc; viewをつかった絞り込みの場合havingではなくwhere句でいけます select ymd, soshi,shain,rank from myview where rank=4;
再インストール：もう一回インストールをやり直そうぜ。 って事ですよ。
phpmyAdminを使ってから、かなり時間がたっているので間違っているかも知れませんが・・・。 最初に、 #1046 - No database selected このエラーは、「使用するデータベースが選択されていない」というエラーです。 phpmyAdminの「データベース」で新規データベースを作成してから、そのデータベースを選択してからダンプを「インポート」してください。 ※MovableTypeのデータベース名は自由に設定出来るので、元のデータベース名がわかっている場合は同じ名前で新規作成。わからなくても、ダンプにデータベース名の指定がなければ適当な名前でもエラーにならないはずです。 いきなり DROP TABLE IF EXISTS `mt_as_ua_cache` のエラーが出ていますが、これは「もし、`mt_as_ua_cache`テーブルが存在すれば削除」という意味です。 データベース名のエラーが出ていないので、問題ないはずです。 これで、インポート出来ると思うのですが？？？
とりあえずトラブルシューティング https://dev.mysql.com/doc/refman/5.6/ja/windows- … アンインストール以外だとアクセス権の話がこちらにあがっていますね http://dev.classmethod.jp/cloud/aws/trouble-mysq …
MySQL Command Line Clientなどは、my.iniを取り込む仕組みがあります。したがって、[mysql]の設定が有効で、MySQL Command Line Clinetから、show variablesを表示すれば、文字コードの設定が一見、できているかのように見えます。 しかし、my.iniを取り込む仕組みがないアプリ環境では、そういう訳にいかず、[client]の設定が必要になります。 また、実際にデータベースを管理する側に対しては、[mysqld]で文字コードの設定が必要になるのです。
＞テーブルがない場合に使うSQL文が「DUMMY」 ちょっと不親切でしたね、もうしわけない 今回のSQL文はサブクエリを利用したわけですが、 「別名(alias)」をつけないといけないルールなんです。 別名はなんでもよい（よほど変な名前じゃなければ）ので とりあえず今回はDUMMYとしました。 あまり深く考えない方がよいかと思います・・・
where card_id = ? はいわゆるプレースホルダですよね eclipseはよくわからないですがgetRecordsでBindValuesしたりするのでは？
#1ですが、参考までに・・・ 今回のデータが仮にshopとcdの組み合わせのデータだったとして shopのマスター、cdのマスター、shopとcdの組み合わせデータの3テーブルが必要です。 以下サンプルです。 //shopマスター create table master_shop(sid int not null primary key,sname varchar(30)); insert into master_shop values(1,'shop_a'),(2,'shop_b'),(3,'shop_c'),(4,'shop_d'),(5,'shop_e'),(6,'shop_f'),(7,'shop_g'),(8,'shop_h'),(9,'shop_i'),(10,'shop_j'); select * from master_shop; //cdマスター create table master_cd(cid int not null primary key,cnumber int unique ,cname varchar(30) unique); insert into master_cd values(1,11230,'cd_A'),(2,21002,'cd_B'),(3,28003,'cd_C'),(4,28005,'cd_D'),(5,99309,'cd_E'),(6,23003,'cd_F'),(7,11302,'cd_G'),(8,11332,'cd_H'); select * from master_cd; //shop-cdデータ create table data_shop_cd(scid int not null primary key auto_increment,sid int,cid int); insert into data_shop_cd(sid,cid) values(1,1),(2,1),(2,2),(2,3),(2,4),(2,5),(3,1),(3,6),(4,1),(4,6),(4,6),(5,1),(5,3),(6,1),(6,3),(6,4),(7,1),(7,4),(7,2),(7,3),(8,7),(9,7),(9,1),(10,7),(10,1),(10,8) select * from data_shop_cd; //集計表 select sc.sid,s.sname,group_concat(c.cnumber order by sc.scid) as SHOP_CD from data_shop_cd as sc inner join master_shop as s on s.sid=sc.sid inner join master_cd as c on c.cid=sc.cid group by sid; //質問者さん得たいデータはcnumberの昇順のcdマスターデータなので select * from master_cd order by cnumber asc;
logでエラーを確認するのが手っ取り早いとおもいますが・・・ レプリケーションの設定などしていませんよね？
たしかWindows server 2008だとR2以降対応だったような気がしますが その辺大丈夫でしょうか？
#2です。コピペミスでした //表示 select t1.年月,t1.区分,t2.値 from( select date_format(日付,"%Y-%m") as 年月,区分,max(日付) as 日付 from hoge group by 年月,区分 ) as t1 inner join hoge as t2 on t1.日付=t2.日付 and t1.区分=t2.区分;
>素人なので、気づけば汚いデータ構造で、非効率なテーブル 大丈夫、だれが作ってもチューニングは必要 ＞成り行きできなく、あらかじめ ＞SNSを作成するにあたって必要なテーブルをあらかじめ作成しよう アマゾンで「要求定義」と「要件定義」で検索してみてください 基本的な定義書さえかければ、機能を絞り込み、必要なリソースを洗い出すことできます
config.inc.phpの $cfg['Servers'][$i]['user'] = 'root'; $cfg['Servers'][$i]['password'] =　　<--- を確認。
>POSTに対応するカテゴリーを取り出す GROUP_CONCAT というものを見つけたのです いや・・・#1でGROUP_CONCAT提示していますよね？ ＞GROUP_CONCATはGROUP BYと一緒に使ってWHEREをHAVING ちょっと違うかも。この場合集計して抜き出すのではなく結合する際に絞り込むのが妥当。 JOINする際に条件節を追加します。具体的にはこう SELECT p.id as pid,group_concat(c.name) as cname FROM posts as p INNER JOIN categories_posts as cp ON cp.post_id = p.id AND cp.id IN (1,2,3) INNER JOIN categories as c ON cp.category_id = c.id GROUP BY pid; ただし、普通に考えればcategoriesのidで絞り込むことはあっても categories_postsのidで絞り込みをすることはありえない categories_postsはpostsとcategoriesの組み合わせを決めるテーブルなので そのidはprimary keyにあたるユニークを担保するものです。 検索の際にcategories_postsのidを意識することはまずないはずです。
冗長なSQLを書くよりはデータ渡しの工夫はphp側ですべきです たとえばこんなかんじ <form> aaa:<input type="text" name="aaa" value=""><br> bbb:<input type="text" name="bbb" value=""><br> ccc:<input type="text" name="ccc" value=""><br> <input type="submit" value="search"><br> </form> <?PHP $sql="select * from hogehoge where 1"; $aaa=(isset($_GET["aaa"])and $_GET["aaa"]!=="")?$_GET["aaa"]:null; $bbb=(isset($_GET["bbb"])and $_GET["bbb"]!=="")?$_GET["bbb"]:null; $ccc=(isset($_GET["ccc"])and $_GET["ccc"]!=="")?$_GET["ccc"]:null; if(is_null($aaa) and is_null($bbb) and is_null($ccc)){ $sql.=" and 0"; }else{ if(!is_null($aaa)) $sql.=" and `aaa`='$aaa'"; if(!is_null($bbb)) $sql.=" and `bbb`='$bbb'"; if(!is_null($ccc)) $sql.=" and `ccc`='$ccc'"; } print $sql; ?> 実際にはプレースホルダで処理する方が賢明。
とりあえず設定を戻してmysqldを再起動し SHOW CHARACTER SET としてcharsetに「cp932」は表示されますか？
＞values ((select col_a from tb_B),1,1,1,1,1,1,1)みたいな感じ であれば insert ignore into tb_A (col_a,col_b,col_c,col_d,col_e,col_f,col_g,col_h) select col_a,1,1,1,1,1,1 from tb_B; とします
この辺りを読めば何が原因かお分かりになるかと。 http://wpdocs.osdn.jp/Giving_WordPress_Its_Own_D … いずれにしてもpublic_html/index.htmlのリネームまたは削除は、XServerで公開するためには必須です。
>やはり一つのテーブルにしないと難しそうですね。 こうすればいけると思います select a.peerId,a.email,b.roomId from peerslist as a inner join ( select peerId,roomId from rellist where roomId in( select roomId from rellist where peerId in( select peerId from peerslist where email='bbb@gmail.com' ) ) ) as b on a.peerId=b.peerId order by roomId asc; #2の指摘は、できるかどうかを問題にしているではなく、 正規化もせずにテーブルを分割するのは運用上よろしくないという意図です また分割したデータを結局結合して使うなら、分割することによるオーバーヘッドが大きいので 普通は分割しません （#2では便宜上viewを作って対応する方法を書きましたが最初から分割しないのが正解）
どういう仕様にしたいかによるので何とも言えませんが 設問ID、ユーザーID、回答結果の３項目が必要では？ 設問=1に対して、ユーザー=1001が回答1,3,５を持っている場合 1,1001,1 1,1001,3 1,1001,5 となるだけで、何も運用上問題ないかと・・ ただしhtml経由でcheckboxからデータを受け取る場合 未チェックデータは送られてこないので一度 delete from テーブル where 設問ID=1 AND ユーザーID=1001; とクリアしてから insert into テーブル values(1,1001,1),(1,1001,3),(1,1001,5); とデータ投入する必要があります。 （つまり２や4が未チェックであるというデータがおくられてこないため） 基本的にはプログラム側でうまくループ処理を入れればよいでしょう
http://www.goma.pw/article/2015-03-12-0/ http://www.adminweb.jp/xampp/mysql/index2.html などが参考になるとおもいます
>member_no　カラムのデータ自体を修正 であれば普通に update table_abc set member_no=right(member_no,10)
ANDとORを並べると、ANDの論理演算が優先します。 「comment_textが、null か、空っぽで」としたいのなら、 + " AND ((comment_text IS NULL) OR (LENGTH(comment_text) = 0))" としなければなりません。
>food_id = (SELECT MAX(date) FROM food WHERE (food_id = 1) AND (food_name = 'みかん')) が多分おかしい。 date = (SELECT MAX(date) FROM food WHERE (food_id = 1) AND (food_name = 'みかん')) ってことじゃないの？
えらそうに言ってるけど今回もタイプミスがあるよ
＞ということは、ユニークキー以外を更新ということは、 ＞insertもできない理由になってないですよね？ いや、だから１行目に回答してるでしょ？ カンマがないから文法エラーになってます
INSERTでON DUPLICATE KEY UPDATEを指定する http://dev.mysql.com/doc/refman/5.6/ja/insert-on …
#2です。 あなたの質問には今後いっさい回答しないので つい回答してしまわないように、ブロックしてもらえませんか？
これってほぼ前回の応用では？ 考慮しなくてはいけないのは、該当レコードが複数ある場合全て表示するのか、 それともどれか１つだけ抽出するのか、抽出する場合はどういったロジックをつかうのかです。 また過去データが１つもないものは表示しなくてよいのか、nullでも表示したいのかを きめないといけません。 単純に合致するデータをすべて表示し、過去データがない場合は表示しないのであれば こんな感じ //データ create table goods (id int not null primary key auto_increment,pid int,d date); insert into goods(pid,d) values(1,'2015-10-11'),(1,'2015-08-02'),(1,'2015-07-01'),(1,'2015-07-01'),(1,'2014-01-01'),(1,'2015-06-03'),(2,'2015-10-11'),(2,'2015-08-02'),(2,'2015-07-01'),(2,'2015-07-01'),(2,'2014-01-01'),(2,'2015-06-03'),(3,'2014-01-01'),(3,'2014-01-02'),(3,'2014-01-02'),(4,'2015-07-10'),(4,'2015-07-11'); //抽出 select * from goods where (pid,d) in (select pid,max(d)from goods where d < '2015-07-01' group by pid) 注意：pid=3は合致するレコードが２つあります
実は単純そうでちょっとめんどうな命題です。 例示のものだけであればこんな感じ //元データ create table goods (id int not null primary key auto_increment,pid int,d date); insert into goods(pid,d) values(1,'2015-10-11'),(1,'2015-08-02'),(1,'2015-07-01'),(1,'2015-07-01'),(1,'2014-01-01'),(1,'2015-06-03'),(2,'2015-10-11'),(2,'2015-08-02'),(2,'2015-07-01'),(2,'2015-07-01'),(2,'2014-01-01'),(2,'2015-06-03'); //集計1 select g1.* from goods as g1 inner join( select pid,max(d) as d from goods where d < '2015-07-01' group by pid) as g2 on g1.pid=g2.pid and g1.d>=g2.d ところが・・・ データの中に、「指定日より後に（前に）しかデータがない」場合など想定するとちょっと変わってきます。 //データ追加 insert into goods(pid,d) values(3,'2014-01-01'),(3,'2014-01-02'),(4,'2015-07-10'),(4,'2015-07-11'); おなじ集計をかけるとpid=4のデータが抽出されません。 これはサブクエリ select pid,max(d) as d from goods where d < '2015-07-01' group by pid が指定日より過去のデータを持っているpidしか対象としないからです。 これをふまえて以下のようにするとpid=4もひろえます。 //集計2 select g1.* from goods as g1 left join( select pid,max(d) as d from goods where d < @d:='2015-07-01' group by pid) as g2 on g1.pid=g2.pid and g1.d>=g2.d where g2.d is not null or g1.d>=@d
＞サイト上から直接のログは消したものの ＞DBの容量の削減手順や方法が調べても テーブルからデータを削除したけど容量がへらないということ？ データ削除すれば減るはずですけど。 念のためインデックスを再構築して、テーブルの最適化してみては 環境がゆるせばパーティショニングするとか検討してみてもよいかも
> 初歩的な質問＆ざっくりな質問ですが「処理時間を早くする」というのは、「できる限りSQL文を1回で終わらせること」という認識でよいのでしょうか？ 合ってもいますが違ってもいます。 例えば、全然内容の違う10個のSQLを、ネストさせて1つに統合した場合は、トータルで見た時にそれほど早くなりませんが、 データ部のみが異なる同一のSQLで10000回ループするロジックを、1つのSQLに付随する10000個のデータという形にした場合は相当違いが出ます。 早くなるのは、元々パソコン自体が特定の単位毎に情報を処理していることと、SQLが極端なまでに集合演算の仕様に最適化されていることの相乗効果です。 (前者の例では集合10から集合10のまま、後者の例では集合10000から集合1に変化しているため早くなる) で、今回のご質問内容ですと、集合演算を意識した上でなら、SQLで実装してもプログラムで実装しても、SQL実装の方が若干早い程度にとどまると思います。 ただ、SQLで実装すると複雑なネストや演算を避けて通れないデータ構造である気がしたので、 そういうのが得意なプログラム側実装でどうやるのかという視点で考えた上での回答です。 MYSQLでのやり方はよく分からなかったので、そういう意味だとお役になっていない情報かとは思いますが。
ご利用のクライアント環境はどうなっているのでしょう？ (1)MySQLの標準クライアント (2)MySQL WorkbenchやphpMyAdminなど接続用のアプリ (3)phpなどから直接プログラムの一部として実行
例えばこんな感じ //５問用意 create table questions (id int not null primary key,mondai text,kotae text); insert into questions values(1,'aaa','AAA'),(2,'bbb','BBB'),(3,'ccc','CCC'),(4,'ddd','DDD'),(5,'eee','EEE'); //is_correctは正解は1、不正解は0として、１番は3回答中1正解、2番は1回答中1正解、4番は1回答中正解なし、3番5番は回答なし create table question_histories(id int not null primary key auto_increment, questions_id int , is_correct tinyint); insert into question_histories(questions_id,is_correct) values(1,0),(1,0),(1,1),(2,1),(4,0); //集計 select q.id,mondai,seitouritu from questions as q left join(select questions_id,sum(is_correct=1)/count(*) * 100 as seitouritu from question_histories group by questions_id) as h on q.id=h.questions_id nullをどうするか別途調整、0とみなすのか、nullでいいのか、表示さえしないのか・・・
＞monthだけがNULLになってしまいます。 あれ、データの投入とかなにか違うのかな・・・ 以下テストデータでやってもダメでしょうか？ //元データ作成 create table hoge (room int, reservation varchar(10), daytime date); insert into hoge values('1','空き','2015-05-01'),('1','空き','2015-05-02'),('2','予約','2015-05-01'),('2','予約','2015-05-02'),('1','予約','2015-06-01'),('1','空き','2015-06-02'),('2','予約','2015-06-01'),('2','予約','2015-06-02'); //集計 select case when daytime BETWEEN '2015-05-01' AND '2015-05-31' then '2015年05月' when daytime BETWEEN '2015-06-01' AND '2015-06-30' then '2015年06月' end as month ,room,sum(reservation='予約') as reserved from hoge group by month,room
＞本題のuniqueをCCCだけに変更するやり方を教えていただけますか？ 具体的には CREATE TABLE `AAA` ( `id` char(5) NOT NULL PRIMARY KEY ,`BBB` char(3) NOT NULL ,`CCC` varchar(50) NOT NULL ,UNIQUE KEY `UK_AAA` (`BBB`,`CCC`) ); INSERT IGNORE INTO `AAA` VALUES('id001','xxx','test1'),('id002','xxx','test2'),('id003','yyy','test1'),('id004','xxx','test2') とすると、BBBとCCCの組み合わせによって、id004のINSERTが拒否されます その際BBBはxxx、CCCはtest1という同じ値を持っていてもINSERTできていることを理解してください ここで、インデックスUK_AAAを外したとして、 ALTER TABLE `AAA` DROP INDEX `UK_AAA`; あらたにBBBやCCCだけのユニークを作ろうとしても すでにユニークでないデータがあるため処理できません。 ALTER TABLE `AAA` ADD UNIQUE`UK_AAA2`(`BBB`); エラー：Duplicate entry 'xxx' for key 'UK_AAA2' ALTER TABLE `AAA` ADD UNIQUE`UK_AAA3`(`CCC`); エラー：Duplicate entry 'test1' for key 'UK_AAA3' それぞれxxx、test1がダブってるから無理というエラー データ投入後にあとからユニーク属性をつけるのであれば ダブリデータを手動で削除したのち、ALTER TABLE してください ちなみにCCCにダブリデータがあるかどうかのチェックはこんな感じ SELECT `CCC` FROM `AAA` GROUP BY `CCC` HAVING COUNT(*)>1
table3の順序付けとidの指定ができない table1とtable2でidが競合したときになぜtable3ではなぜ青森が1を取得できるか定義が必要。 table3の並び順が適当でidも適当に連番をふればいいならこんな感じ select (select @id:=@id+1 from (select @id:=0) as dummy) as id,area from( select area from table1 union select area from table2 ) as dummy
>これを管理するには2つのテーブルで分けて管理するしかないですか？ むしろこれをどうやって２つに分ける方が難しいのでは？ //テーブル作成・データ投入 create table item(id int unique,サイズ varchar(10),肩幅 double,身幅 double,着丈 double); insert into item values(1,'XS',40,45,59),(2,'S',44,52,65),(3,'M',48,56,70),(4,'L',50,60,75); //表示 select * from item;
普通にできない？ create table hoge (name varchar(10),address varchar(100)); alter table hoge add id int after name; alter table hoge add score int first;
そもそもテーブルの作成なんてそうそう頻繁におこなうものでもないので 一気に作る構文自体あまり意味がないのでは？ べつに対して省略できるわけでもないし・・・ ×CREATE TABLE tb1(c1 int), tb2(c1 int); ○CREATE TABLE tb1(c1 int); CREATE TABLE tb2(c1 int); おなじ構造のテーブルを作るときに心情的に手を抜きたいだけなら LIKE構文がつかえるみたいですが、まぁこれも使って便利なのかどうか・・・・ CREATE TABLE tb1(c1 int); CREATE TABLE tb2 LIKE tb1; どうしてもというならプログラムで処理すればよいのでは？
普通に考えて →プロシージャでは変数名を``で囲める →変数名とカラム名が競合したときは、変数名が優先される →テーブル名.カラム名で参照すればカラム名だと明示されるのでカラム名のまま参照できる という認識でよいのでは？ たとえばプロシージャ内で SELECT `table`.`criteria`,`criteria`,criteria from `db`.`table`; として結果をみると、最初のcriteriaはカラムとして扱われますが残りの２つは 変数を引っ張ってきます
mysqlクライアントをコマンドラインから実行しようとしているという理解でよろしいですか？ またその環境がマストなのでしょうか？ たとえばmysqlクライアントを公式のMySQL Workbenchにするとかどうですか？ http://www-jp.mysql.com/products/workbench/ もちろん、mysqlユーザーであればphpMyAdminあたりを標準的な クライアントツールとして使うのも手かもしれません。 （pmaは実際にはmysqlクライアントというよりサーバー機能の一部みたいな感じですが） また、サーバー側で接続クライアントのhostを制限している場合もあるので ご自身でサーバーの設定をいじれるなら、使用可能hostにWinのIPアドレスを追加してやり ユーザーテーブルを更新してみてください
idと同じ値をp_codeにいれる？ それってp_codeのカラムをつくる必要ないのでは？ また3桁のゼロフィルとは「001」~「999」までということ？ （まぁ桁あふれしたらかってに４桁になるんですけどね）
ちょっとPerlのDBIには疎いのでもうしわけないですが my.cnfなどサーバー側の設定ファイルで明示的にDBの文字コードを設定したり connectする際にオプションでon_connect_do => ['SET NAMES utf8'], したりすることで解消できるかもしれません。
＞全部放り込めば良い それでいいんじゃない？ 正規化については「必要」もしくは「効率的」だからやるものなので みる限り正規化するような項目があるようにも思えませんので。 ただしこれを拡張していく場合、たとえば履歴をどうするかとか カテゴリー分けしたりキーワード検索したいとか、 そういう用途に合わせて正規化した方がよい場合もでてくると思います
10年前の書籍になりますが・・・。 ＞改訂版 図解 ネットワークのしくみ 単行本 – 2005/2 ＞http://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%89 … 　1円か・・・。
＞windows 7 pro　32bit 32bit版ODBCをインストールしましたか？ コントロールパネルから起動せずC:⁄Windows⁄SysWOW32フォルダにある「odbcad32.exe」を起動。 ODBCデータソースアドミニストレーターが表示され32bit版ODBCが設定出来る（とのこと） http://infith.com/system/database/mysql_odbc_win … ＞Winmysqladmin1.4が起動するのですが、赤信号になってしまい、緑信号表示になりません WinMySQLAdmin1.4を起動させるとメモリアクセス違反が起こる場合、タスクマネージャでwinmysqladmin.exeを強制終了すると消える。libmysql.dllというモジュールが犯人らしいがそれ以上不明。 http://satzz.hatenablog.com/entry/20080211/12026 …
テーブルCを更新しないなら、二つを結合したビューを作るのが一番簡単かと create view C(...) as select ... from A union all select ... from B 参考) http://dev.mysql.com/doc/refman/5.6/en/union.html http://dev.mysql.com/doc/refman/5.6/en/create-vi … 更新するなら、素直にテーブルCにデータを移転してA,Bは廃棄でしょう create table C(...) select ... from A insert into C(...) select ... from B drop table A,B 参考) http://dev.mysql.com/doc/refman/5.6/en/create-ta … http://dev.mysql.com/doc/refman/5.6/en/drop-tabl …
http://matome.naver.jp/odai/2138467754754094901 の内容が酷似しているなあ。 まずタスクマネージャーでRegClean Proというのを強制的に終了させる。 コントロールパネルのアンインストールになければSystweak Software社のやつだから プログラムファイルから　Systweak　らしきフォルダを見つけてとりあえず別名に変えとく。 後はCCLEANERとかで自動起動するプログラムをチェックして怪しげな奴は一つ一つ潰していく。
コマンドラインのmysqlクライアントで文字化けしないということは やはりデータの投入は成功しているのでしょうねぇ・・・ 拡張sjisのcp932でしたから、「set names cp932」の実行でしたね mysql_query("set names cp932"); をしてから、それ以降のmysql_query()を実行していますよね？ 一度発行すれば同じセッション内では有効なはずです。 ただこの掲示板でもよく注意されているのでおわかりだと思いますが mysql_系の関数はすでに非推奨状態なので、できるかぎりPDOへ 切り替えていく方が今後のトラブルを最小限に抑えることができると思いますよ
pid-fileを指定できない設定のようなので、該当行をコメントアウトしてみては？
開発DBを本番DBにコピーすることはないと思いますが？ データに関しては本番DBが普通は優先ですよね？ もともと開発DBは本番DBからコピーをもってきますよね？ 開発DBでカラムの拡張などした場合は、それを仕様書として保持しておき 最終的にどうとうの拡張を本番DBに反映させるだけです。 もちろん開発DB上で新たに作成したテーブルなどは ダンプしてもってくればよいと思います
公式だとこの辺？ http://mysql.stu.edu.tw/doc/refman/5.1/ja/show-e … http://mysql.stu.edu.tw/doc/refman/5.1/ja/innodb …
ランキングの考え方 自分より上位に何人いるかをcountしてそれプラス1が自分の順位ということです
>ユニークキーを設定するとその中の１個でも重複があると全部はじかれてしまいます。 uniqueをつけたうえで、insert ignore intoをつかえばよいでしょう //元データ create table hoge(cn varchar(10) not null unique key); insert into hoge values('aaa'),('xxx'),('yyy'); select * from hoge; //重複を含むデータの挿入 insert ignore into hoge values('aaa'),('bbb'),('ccc'); select * from hoge;
こういうのはviewを作ってやると理解がしやすい //元データ create table score(id int,data1 double); insert into score values(1,100),(1,90),(2,40),(2,50),(2,60),(3,70),(4,10),(4,20),(5,60),(5,80); //view作成、確認 create view v_score as select id,avg(data1) as avg from score group by id; select * from v_score; //結果 id avg 1　95 2　50 3　70 4　15 5　70 //viewを利用してランク付け select id,avg,(select count(*)+1 from v_score as a where a.avg>b.avg) as rank from v_score as b order by rank asc,id asc //結果 id avg rank 1　95　1 3　70　2 5　70　2 2　50　4 4　15　5 //viewを排除するために、v_scoreに元のsqlを代入 select id,avg,(select count(*)+1 from (select id,avg(data1) as avg from score group by id) as a where a.avg>b.avg) as rank from (select id,avg(data1) as avg from score group by id) as b order by rank asc,id asc;
なんとも言えませんが とりあえず強制でなんとかしたいのであればmysqldを再起動するのが 手っ取り早いかと。 あとはテーブルで利用されるエンジンのタイプにもよるし プログラムで強制的にロックする仕組みをつかっているかにもよりますが まぁあまりテーブルロックを多用しないように工夫するしか本質的な解決は できないと思います
>>詳しい方、この様な場合はどの様に対処したら良いか教えて下さい。 私はwordpressは詳しくありません。でもＣｅｎｔＯＳは使っていますし、いろんなソフトを導入しています。 そのとき、質問者さんと同様に、うまくいかないことが多いですね。 書籍を見ても、古いバージョンが対象だったり、ネットで参考事例を探すと、それこそ、とても古いバージョンから最新まで、いろいろと混在しています。 また、導入するＯＳが違っていたり、アプリの組み合わせが違っていたりで、すんなりといかないことが多いです。 ブログを探して、質問者さんのように、「うまくいかなかったけど苦労して解決したレポートです」というのが見つかっても、それが古いバージョン対象の話だったりで、がっかりすることがありました。 まずは、エラーメッセージを元に、ネットで同じトラブル事例が無いか探し、それでも解決できなければ、回り道のようですが、付属のソフトのマニュアル（英文？）あるいは、対象のアプリのソースコードを読むのが一番ではないでしょうか？ （私がメールサーバ関係のアプリがうまく動作せず、悩んだとき、ＰＨＰのソースを追いかけて、解決しました。でも、設定ファイルの英文コメントをしっかりと読めば、どうすればいいのか、しっかりと書かれていたのを後で見つけて、くやしい思いをしたものです。）
手っ取り早いのは一度ビューを作ることです。 //準備 create table hoge(id int not null auto_increment primary key,kbn int); insert into hoge(kbn) values(1),(2),(3),(4),(5),(1),(1),(2),(4),(5),(3),(1),(2),(5),(5),(3),(2),(1); //ビューの作成 create view vhoge as select kbn,count(*) as cnt from hoge group by kbn; //集計 select kbn,cnt,(select count(*)+1 from vhoge as v2 where v1.cnt<v2.cnt) as rank from vhoge as v1 order by rank asc; ※もしビューを使いたくないのであればビューに書いたのと同様のSQLをそのまま書きます select kbn,cnt,(select count(*)+1 from (select kbn,count(*) as cnt from hoge group by kbn) as v2 where v1.cnt<v2.cnt) as rank from (select kbn,count(*) as cnt from hoge group by kbn) as v1 order by rank asc
自動生成したIDで別のテーブルと連携するといろいろデータに不整合が 起こりそうな気がしますが・・・ 無理やりやろうと思えば以下参考にしてみてください //テーブル作成 create table players(id int not null auto_increment primary key,name varchar(100),price int,position_id int); create table team(id int not null primary key,team_name varchar(100)); ※仕様 playersテーブルに挿入した際発行されるidをteamのプライマリキーとして データを挿入する。 ただしplayersテーブルのデータを削除したり、抜け番をうめたり特殊なことは 一切無視 //トリガー作成 DROP TRIGGER IF EXISTS players_to_team; DELIMITER // CREATE TRIGGER players_to_team AFTER INSERT ON players FOR EACH ROW BEGIN INSERT IGNORE INTO team SET id= NEW.id,team_name=@team_name; END; // DELIMITER ; //playersにデータを挿入する（ただしteamの名前は別途変数で指定） insert into players (id,name,price,position_id) values((select @team_name:='t1'),'p1',100,1); insert into players (id,name,price,position_id) values((select @team_name:='t2'),'p2',200,0); insert into players (id,name,price,position_id) values((select @team_name:='t3'),'p3',400,1); insert into players (id,name,price,position_id) values((select @team_name:='t4'),'p4',800,0); //確認 select * from players inner join team using(id);
０からはじまる連番を得たいだけならこんな感じ SELECT *,(select @a:=@a+1 from (select @a:=-1) as dummy) as zero from tbl select @a:=-1のところは初期値マイナス１の値を与えておきます
＞複数テーブルだと実行できないように理解しましたが、 そうですね ＞何が問題か教えてください。 そもそもupdate でlimitをすること自体がイレギュラーな処理です where句で厳密に条件を提示するべきですね とはいえ、以下のようにリレーションする部分をあらかじめ処理したうえで その結果をうけて処理するればできないことはなさそうです。 //元データ create table tbl1(id int not null primary key,data int,flag tinyint not null); insert into tbl1(id,data) values(1,11),(2,12),(3,13),(5,15),(6,16); create table tbl2(id int not null primary key,data int,flag tinyint not null); insert into tbl2(id,data) values(1,21),(2,22),(4,24),(5,25); //とりあえず確認 select * from tbl1; →flagはすべて0 //limitしないupdate update tbl1,tbl2 set tbl1.flag=1 where tbl1.id=tbl2.id; //確認 select * from tbl1; →3件flagが1になる //１回クリア update tbl1 set tbl1.flag=0; select * from tbl1; →flagはすべて0 //tbl1のid順で上位1件をupdate update tbl1 set flag=1 where id in (select * from (select tbl1.id from tbl1 inner join tbl2 on tbl1.id=tbl2.id order by tbl1.id asc limit 1) as sub); //確認 select * from tbl1; →1件だけflagが1になる ※サブクエリはlimitを利用できないので一度ダミーで処理をいれる
> １月～12月までのテーブルがあるのですが 一つのテーブルに年月別レコードがあるのなら Whereで最終年月を指定して、年月の昇順のOrderとLimitで2行に絞れば？
> 読み込み専用で無いことが分かりました。 Alt+Enterでプロパティ開いて、読取専用のチェック外し、ＯＫ
//元データ create table tbl(id int,name varchar(20),number int,score int); insert into tbl values(1,'tanaka',358,98),(3,'tanaka',358,23),(4,'tanaka',358,45),(11,'yamada',126,63),(17,'yamada',126,77),(23,'suzuki',274,36),(45,'suzuki',274,16),(59,'suzuki',274,89),(73,'suzuki',274,75),(80,'hanako',89,24); //検索 select * from tbl where number in( select number from (select number from tbl group by number order by min(id) asc limit 2) as sub ) order by id asc; 考え方 select number from tbl group by number order by min(id) asc limit 2 で、idの小さい２人分のnumberを抜き出し そのnumberを持つ全データを抜き出す。 本来であれば select * from tbl where number in( select number from tbl group by number order by min(id) asc limit 2 ) order by id asc; でいければ楽なのですが、通常のサブクエリにlimitが使えないので一度select文でうける
こんばんは。 Ruby や Railsは使用したことはありませんが、MySQLにはお世話になっています。 先ずは下記サイトの「MySQL on Windows (Installer & Tools)」 http://dev.mysql.com/downloads/ を試してみてください。
接続先の mySQL が特に何も設定を変更していない のであれば、以下のページが参考になるかもしれません。 http://immature.01kawa.com/database/phpmyadmin/p …
　Ｎｏ２．補足宛 　ＭｙＳＱＬが、いかに物理ドライブの物理ファイルを「意識しなくてもプログラミング」出来るようにという目的で作られたとはいえ、システムの管理者は物理構造を意識しないと仕事になりません。データを格納しているわけですから、データを格納する場所が必要なのは当然で、その場所は必然的に、ファイルとなります。 　ただ、そのファイル構造が複雑なので、単純なコピー・ペーストではデータベースをコピーすることは出来ませんよというだけの話です。（ちなみに、ちゃんと構造と動きを理解して、必要な手順を踏めば、ファイルのコピーでのデータベースのコピーも有りです。かなり難しいので普通はしません。データベースをコピーするにはもっと簡単で便利な方法がありますから。） 　アクセスでは、データを管理するのはひとつのファイルだけでしたが、ＭｙＳＱＬでは、データベースを管理するために、複数のファイルが絡み合って管理されます。単純なＭｙＩＳＡＭタイプのデータベースでさえ、３つのファイルで構成され、しかも、そのファイルの内容は、グローバルなカタログデータベースとの絡みが存在します。カタログデータベースの存在を考えれば、関係するファイル数はもっと増えると言うことです。 　そのあたりの構造を全部ここに書くのはさすがに無理です。 　リファレンスマニュアルの（例えば、５．１なら日本語マニュアルがあります。ここです。http://mysql.stu.edu.tw/doc/refman/5.1/ja/index. …）2章・４章・13章あたりを熟読してください。直接の答えは、13章にあります。 　ファイルの場所は、デフォルトのインストールのまま設定を変えていなければ、MySQLのインストールフォルダーの中のdata\mysqlとdata\データベース名 あたりでしょう。データベース生成時にもフォルダ指定が出来るので、その場合は、そこになります。 　
>ロックは複数のプロセスから同時にアクセスしないよう トランザクションで処理すればいいだけでは？ innoDBでテーブルロックは普通はあり得ない運用スタイルです
＞例えば、楽天なんかはメールアドレスをログインのキー（ID）にしてますよね？ ＞当然メールアドレスがuniqueになると思うのですが、 ＞その場合オートインクリメントidなどは設けているのでしょうか？ 楽天が実際にどうしているかはわかりませんが、 ログイン名は当然ユニークな属性をつけているはずです。 ただし、ユーザー管理テーブルの場合ログイン名がプライマリーキーになることはまれで (1)ログイン名を変更しようとした場合 (2)ユーザーごとにログイン情報の履歴をとる場合 には、別のidが（裏で）利用されていると考えるのが妥当です。 (1)だと、メールアドレスはさまざまな理由で変更になる場合があります ユーザーIDさえ不変であればメールアドレスを何らかの方法で修正すれば 別のアドレスでも個人情報をひきつげます。 (2)の場合、フラグとからめればログイン名やユーザーIDは単一でユニークである 必要はありません。 ユーザーID＋フラグで複合のユニーク属性をつけると、修正履歴をもつことができます ユーザーに実際に見せたり、ログインに利用したりするのはフラグの特定番号 たとえばフラグ＝0のものは現在のユーザー情報、フラグ＝１～5を履歴、などと定義すれば ユーザー管理の幅が広がります。 もちろん正規化して別テーブルで可変の履歴をとればフラグを使う必要はありません
考えられるのは以下あたりではないでしょうか？ ・phpMyAdminにpmaでログインしていない。 phpMyAdminにはどのユーザでログインしているのですか？ あとは、別のDBを作ってみて同じようにpmaユーザでphpMyAdminにログインしてみて、同現象が起こるか、を確認すると問題の切り分けがしやすいと思います。
表示順変更は、そういうことです、ある階層だけ逆とか、２つの間に入れたいなーとかあっても、元テーブル側のidはどうしても登録順になってしまうから。 連番とか使ってると、置き換えるにも、重なりが生じると、狂ってしまうので、文字列コードとして、ascii順で、中間があるように名前を付けておくなどしてました。経路列挙の方式だったので、あとから、順番変えるときは、そのコード名を被らないように変更して一括置換しました。 ご呈示の閉包テーブルの場合、ご指摘のように、item テーブル側にもう一つカラムをdisplay_idなどの名前で追加して、文字列か、数値で空きのある番号で振るとかとしてunique indexを貼り、 閉包テーブル側は、FOREIGN KEYの連結先をこの表示順制御用カラムに変更すれば、ON UPDATE CASCADE条項により変更が反映されるかと思ったけど、 試してみたら、閉包テーブル側２カラムに対し、item側が同一カラムを参照しているので、片方づつ反映しようとしてエラーが出ますね。 mysqlの日本語マニュアルオンラインは消えちゃったけど、mysql5.1時代のをダウンロードは出来るので、それを読むと、外部キー制約に ON UPDATE CASCADE付けるときのやってはいけないこととして記述されています。ON UPDATE no action だと結局変更できないですし。 削除に関しては問題なく自動削除されるようです。兄弟順は気にしないことにするなら、このままでもいいかとも思うけど。
AWSはともかくデータベースの特性上エクスポートせずに別のデータベースへの移行は ほぼほぼ難しいかと もしリプリケーションできるならとりあえず試してみる価値はあるかも
共通id にauto_increment値は使わない意見に賛成。 その場合でも、トランザクションにしないと、片方のテーブルにのみ挿入できてもう一方は挿入されない事態は発生する。 mysql_(iが付かない)関数群はトランザクション機能の無かった時代の遺物なので（トランザクションもトリガーも未対応）、 mysqliクラスかPDOクラス群を使って下さい。 あと、mysql サーバーのversion が5.1 以降であることと、テーブル作成時に innodb エンジンを指定している必要があります。
＞１を入れる部分で文章みたいなのを入れてみたのですが、できませんでした。 ＞1の部分は数字じゃなきゃできないでしょうか？ はて？以下試してみてください //元データ create table tbl (id int ,data001 varchar(10) null ,data002 varchar(10) null); insert into tbl values(1,'aaa','bbb'),(2,null,'ccc'),(3,'ddd',null),(4,null,null),(5,'',''); //更新 update tbl set data002=if(data001 is not null and data002 is null,'hoge',data002),data001=coalesce(data001,'fuga') where data001 is null or data002 is null; ちなみにnullと''は別なのは理解いただいていますよね？
普通、条件分岐はIFやCASEを使います。 SELECT IF(`総額` / `個数` < 10000,10000,`総額` / `個数`); SELECT CASE WHEN `総額` / `個数` < 10000 THEN 10000 ELSE `総額` / `個数` END; ただ単に「大きいほう」なら SELECT GREATEST(`総額` / `個数`,10000); でも構いません。
この場合はusr_trmでユーザーごとのtrmを確認しないといけないのでは？ select t1.usr_id,t3.name ,group_concat(if(t2.cat_id=1,t1.trm_id,null)) as cat1 ,group_concat(if(t2.cat_id=2,t1.trm_id,null)) as cat2 from usr_trm as t1 inner join trm as t2 on t1.trm_id=t2.trm_id inner join usr as t3 on t1.usr_id=t3.usr_id inner join usr_trm as t4 on t4.usr_id=t1.usr_id and t4.trm_id=3 group by usr_id order by rand() limit 10; ＞総務に所属する人をランダムにn件 便利な機能だとは思いますが、SQLは明確な結果を得るための手段なので 不確実なrand処理を選ぶのは、個人的にはお勧めいたしかねます
おそらくはMySQLの文字エンコードの設定が間違っているだけでしょう。 元のサーバーの文字エンコードは何ですか？ 新しいサーバーの文字コードは元のサーバーと同じですか？ この質問に即答できないようなら、ここに間違いないでしょう。 文字エンコードが変わってしまうと正しく動かないのです。新しいサーバの設定を確認し、元のサーバーの設定と同じ内容にしましょう。
問題は「コーラ」が「コカ・コーラ」と同値かどうかです それによって書き方がだいぶ違います
select t1.usr_id,t3.name ,group_concat(if(cat_id=1,t1.trm_id,null)) as cat1 ,group_concat(if(cat_id=2,t1.trm_id,null)) as cat2 from usr_trm as t1 inner join trm as t2 on t1.trm_id=t2.trm_id inner join usr as t3 on t1.usr_id=t3.usr_id group by usr_id
どうしてもコマンドプロンプトが大好きというなら cmdで開いたコマンドプロンプトの左上のアイコンをクリックして メニューをだし、プロパティー→レイアウトでウィンドウの幅を調整できます ちなみに、コマンドプロンプトからというと以下どちらのパターンでしょうか？ (1)mysqlクライアントでログインしてselectを発行 (2)mysqlにリダイレクトでselectを流し込み結果を標準出力に得ている (1)ならinto outfile構文を使って、(2)であればファイル出力演算子をつかって ファイルに落とし込んでしまえば、好きなエディタで確認できます コマンドプロンプトでなくてもいいならphpMyAdminなどのツールをつかうか odbc経由でアプリで確認するなどGUIな処理の方がより見やすくなると思います
mysqlへのアクセスはどうやっていますか？ →コマンドラインからmysqlコマンドでsqlを流し込んで実行している →コマンドラインからmysqlのクライアントを利用している →phpMyAdminなどを利用している →odbc（ほか）経由でアプリから利用している →phpやperlなどプログラムから所定の手続きを経てデータをとりだしている 文字化けについては利用環境にあわせた照合順序を設定すればよいですが 一度化けた状態でデータが保存されるととりだせない可能性もあります
SELECT 顧客ID,MIN(タイムスタンプ) FROM history GROUP BY 顧客ID ;
＞UPDATEしたときに出てくる ＞UPDATE item SET data1 = "some", data2 = "thing" WHERE id = "1234"; う～んつまりこういうこと？ phpMyAdminでitemテーブルを一度「表示」して、 そのうちの一行の「編集」を選んで修正をした？ その場合は当然、行の編集ですから行をユニークに特定するidの指定があってしかりです これでwhere句を任意にしていしたのであれば 表示されたUPDATE文の欄外にある「編集」を選んで 手動でWHERE句を書き換えればいいでしょう。 もちろん、SQL文をわかっているなら最初からフリーハンドで SQLを記入して実行すればよいような気がします・・・
self joinで無理矢理、table構造を作り替えるとか？ select st.GroupID from ( select * from `key_table` where key='start_date' and Value = '2014-11-05' ) as st inner join ( select * from `key_table` where key='end_date' and (Value > curdate() or Value="") ) as en on st.GroupID = en.GroupID ; 大量行数になると、No1の方の回答のほうが速度は速いと思われる。 GroupID　と　Key カラムで連動unique index が貼ってある前提も必要。 GroupID が同じ行は必ず２行なのでしょうか？start_date の行はあるけど、end_date の行が無い場合は、選ばなくてもよいなら上記でok end_dateの行が未入力で start_date がマッチするものもほしいなら、left join して以下のように select st.GroupID from ( select * from `key_table` where key='start_date' ) as st left join ( select * from `key_table` where key='end_date' ) as en on st.GroupID = en.GroupID where st.Value = curdate() and (en.Value > curdate() or en.Value="" or en.Value is null ) ; 蛇足：日付文字列のカラムは、date 型にしておいたほうが、エラー日付を弾いたり、日数計算に日付処理関数が使えるので便利ですよ。
＞何かおかしなところがございましたらご指摘いただけたらありがたい DBの部分はまぁよいとして、htmlに組み込むところを少し調整した方がよいようです こんな風にしておくと、htmlの部分がぐちゃぐちゃにならずにプログラムとの 親和性があがります とくに例示では$_POSTの中身をそのまま出力していましたが、さすがにNGです <?PHP $value=array(); //想定するデータを初期化しておく $value['name']=""; if(isset($_REQUEST['name'])){ $value['name']=htmlspecialchars($_REQUEST['name'],ENT_QUOTES,'UTF-8'); } $checked=array(); //想定するデータを初期化しておく $checked['team_id']=array(1=>"",2=>"",3=>"",4=>"",5=>""); if(isset($_REQUEST['team_id']) and is_array($_REQUEST['team_id'])){ foreach($_REQUEST['team_id'] as $val){ $checked['team_id'][$val]=" checked"; } } print <<<eof <form> <input type="hidden" name="cmd" value="search" /> <table> <tr> <th class="th_top">選手名</th> <td class="td_top"> <input type="text" name="name" size="30" value="{$value['name']}"> </td> </tr> <tr> <th>チーム名</th> <td> <input type="checkbox" name="team_id[]" value="1"{$checked['team_id'][1]}/>名古屋 <input type="checkbox" name="team_id[]" value="2"{$checked['team_id'][2]}/>徳島 <input type="checkbox" name="team_id[]" value="3"{$checked['team_id'][3]}/>千葉 <input type="checkbox" name="team_id[]" value="4"{$checked['team_id'][4]}/>浦和 <input type="checkbox" name="team_id[]" value="5"{$checked['team_id'][5]}/>磐田<br /> </td> </tr> </table> <p> <input type="submit" value="検索"> <input type="reset" value="リセット"> </p> </form> eof;
基本的にMySQLではFULL OUTER JOINはできませんが、 今回の命題ではそもそもJOINじゃなくてテーブルの統合ですよね？ であればどちらかのテーブルにもう片方を流し込むか、あらたなテーブルをつくって 両方流し込むのが妥当では？ とりあえず統合するキーになるカラムがprimaryもしくはunique属性で処理されている 前提で解説します。 例示のものだとテーブル1（データベースじゃないですよね？）にテーブル2を 流し込みたいと読めるので INSERT IGNORE INTO テーブル1(カラム1,カラム2,・・・・) SELECT カラム1相当のカラム,カラム2相当のカラム,・・・・ FROM テーブル2; ※テーブル2に該当するカラムがないならNULLを指定する とすれば既にテーブル1にあるテーブル2のデータは無視され、テーブル1にないものだけ あらたに挿入されます。 逆にテーブル1に競合データがあってもテーブル2で上書きするなら INSERT ON DUPLICATE KEY UPDATE構文が有効かもしれません。 新規でテーブルをつくるのであれば、CREATE TABLEするさいに有効なユニーク属性を 設定したうえで、テーブル1、テーブル2の順番で流し込めばいいでしょう また無理やりFULL OUTER JOINするなら、キーになる絡むだけUNIONして サブクエリを作っておくかVIEWを用意しておき、そこにテーブル1とテーブル2を LEFT JOINすればよいのでは？
たぶん認識はあってきていると思います ちなみにこの質問はこのまま続くのでしょうか？
mysqlを停止 mysqld_safe --user=mysql --skip-grant-tables & mysqladmin -u root password '新しいパスワード' mysqladmin -h localhost flush-privileges mysqlを開始
データベースのデータ型はあくまでデフォルトの提案値でしかないので テーブルのデータ型がInnoDBと表示されていれば問題ありません。 ちなみにMySQL5.5からテーブル作成時のデフォルトデータ型がInnoDBになったようですね ご利用の環境がMyISAMと表示されているということはそれより前のバージョンなのでしょう。
＞＞質問3.select だから意味があります。 ただの読み込みではなく、「更新のための読み込み」であるということを明示しています。 updateやinsertは更新と決まっています。 ＞BIGIN; UPDATE tb_a SET price = 残高-10000 WHERE id = xxx; INSERT tb_a (price) VALUE (10000) WHERE id = yyy; COMMIT; ですよね？ 合ってます。 ２行だけロックされて他からは読み込めません。 ＞これはつまり、SELECT～FOR UPDATEとは選択のためのクエリーではなく「行ロックします」というクエリーなのですか？ そして上のBIGIN～UPDATE～INSERT～COMMITは以下のように書かないといけないのでしょうか？ BIGIN; SELECT * FROM tb_a WHERE id = xxx FOR UPDATE; SELECT * FROM tb_a WHERE id = yyy FOR UPDATE; UPDATE tb_a SET price = 残高-10000 WHERE id = xxx; INSERT tb_a (price) VALUE (10000) WHERE id = yyy; COMMIT; 読みたいときにselect,更新したいときにupdate、追加したいときにinsertでいいです。 つまり、上２行のselect は不要なのですが、 UPDATE tb_a SET price = 残高-10000 WHERE id = xxx; ここ、残高は先に読んで10000円あるかどうか確認しないといけませんよね。 こういう場合は SELECT 残高 FROM tb_a WHERE id = xxx FOR UPDATE; UPDATE tb_a SET price = 残高-10000 WHERE id = xxx; となります。 他の情報で10000円があることが確認されていればselectは不要になります。
1点補足 utf8_unicode_ciの場合、半角全角の違いや、濁音半濁音の違いなども 吸収してしまうので注意してください。 半角「a」で検索して全角「Ａ」がヒットしたり、 濁音「ば」で検索して「は、ぱ」やカタカナ「ハ、バ、パ」や半角「ハ」が （※この掲示板だと勝手に変換されるので半角にみえませんが） ヒットしたりします。 またLIKEを使うと微妙にヒットする値が違ったりするのも要注意です。
1. http://dreamhost-日本語.com/%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95/wordpress-install/ 2.http://www.atmarkit.co.jp/ait/articles/0106/01/n … 3.https://developers.google.com/speed/pagespeed/in … 4.http://wpdocs.sourceforge.jp/%E7%94%A8%E8%AA%9E% … 一応参考になりそうなサイトを挙げましたが、それだけの情報量で知識の漏れを気にするのであれば本を数冊買ったほうが効率的だと思います。 下記の本で1.~4.まで大体網羅していると思います。 「HTML5&CSS3」 「WordPressデザイン」 「サーバ構築の実際がわかる Apache[実践]運用/管理」
＞if($rows && !empty($_POST['numberSearch'])){ $_POST['numberSearch']が"0"のときemptyで評価すると正となります !emptyですから偽ですね emptyは理論的な空ですから 空文字列""、整数の0、浮動小数点数の0、文字列の"0"、NULL、FALSE、 空の配列array()、変数が宣言されているが値が設定されていない変数 などすべて空とみなします。 http://php.net/manual/ja/function.empty.php ちなみにSQLで参照するのにWHERE句に検索文字を入れない意味がわからない。 また古いmysql_系の関数を使い続けるはデメリットしかないので リプレースを検討してください
＞ちなみに、phpMyAdminのデータがなかったという状態です。 であれば ＞$sql = "INSERT INTO ideamemo_table (color, title, contents, create) VALUES ('$color', '$title', '$contents', '$create');"; で与えている各変数$color,$title,$contents,$createがきちんと入っていないのかも この直後に以下をして確認してみてください print $sql; また、mysql_query($sql, $con);がエラーを吐いているかもしれないので mysql_query($sql, $con) or die(mysql_error()); でエラーを拾うのも手です。 ＞mysqli()関数などを用いた方がいいってことですよね？ mysql_関数から一番移植性が高いのはmysqli_関数の手続き型です。 ただしあくまでもコンパチな機能なので可能であればPDOなど 現時点で標準的な仕様に切り替えた方がよいとおもいます
どこで詰まっているかがよくわかりませんが すでに正規化がされているのですから商品管理テーブルを用意してい 商品ID、商品固有のデータ、ブランドID、性別ID、カテゴリーID、 ブランドサイズID、インタナショナルサイズID を入れていけばよいでしょう。 たとえば売上集計用に販売管理テーブルが必要になった場合一番単純なモデルで 商品ID、数量、金額、日付 などを入れておけばよいです。 ただしご指摘の通り効率的な集計をしたいのであれば販売管理テーブルに それぞれのIDまで埋め込んでインデックスを貼っておけば おそらく数倍～数十倍高速化ができます。
＞１つずつチェックをするのは非常に非効率 (1)ページングする つまり１ページに表示するデータ数を制限する また１ページ当たりの表示数ルはユーザーが任意に選べるようにする （10、50、100くらいの大雑把に） (2)ページごとにすべてチェックする・すべてチェックを外す を選べるようにする (3)データの引き継ぎにはセッションをつかう とすればある程度まとまった単位で処理できるとおもいます ただし、1万件のデータを選んだあと印刷実行というのはミスが頻発しそうです。 選ぶ画面はあくまで選ぶ画面として確定までしてしまい 印刷は確定データをつかって選択画面なしに印刷した方がよいのでは？
join するのにかっこでくくる必要はないのでは？ また正規化するにあたってはleft joinを多用するのはどうかと。 各IDが存在する前提でinner joinでつなぐことをお勧めします それと、PDOを利用するのに「SET NAMES utf8」を発行するのはやめるべき PHPのバージョンにもよりますがdsnで指定するかoptionを設定してください http://php.net/manual/ja/ref.pdo-mysql.connectio …
#3の解釈については問題ないと思いますよ SQL文作成の流れとしては (1)ユーザーテーブル、アイテムテーブルもに存在するジャンルの数を数える select user_id,item_id,count(*) from user_genre as ug inner join item_genre as ig on ug.genre_id=ig.genre_id group by user_id,item_id; (2)ユーザーテーブルのユーザーごとのジャンル数を数える select user_id,count(*) from user_genre group by user_id; (3)この２つを突合し、user_idごとのカウント数が同じものを選ぶ 仮にitem_idが持ってないジャンルをuser_idが持っていた場合は(2)>(1)になる 逆にuser_idに持ってないジャンルをitem_idが持っている場合でも (1)で選別されているので(1)が(2)を超えることはない なお(1)と(2)の付け合わせの際には(1)の集計結果と(2)を比較するので 集計結果を利用して検索をする場合はルール上havingを利用するのが妥当。 もちろん(1)をサブクエリにして(2)とjoinしても同じ結果。
http://www.lancers.jp/work/detail/439177
＞INT(10)に設定されているため、保管数の限界が存在します MySQLのデータ型を誤解しているようです INT(10)は精度ではなく、桁揃えをつかうためのオプションです。 http://dev.mysql.com/doc/refman/5.1/ja/numeric-t … 「この表示幅オプションは、カラムに指定された幅よりも小さい幅の整数値を 表示する際に左側をスペースで埋めるために使用されます。 」 具体的には、属性を「UNSIGNED ZEROFILL」にしたときINT(10)であれば 一桁の数値は左に「0」が9個埋められる・・・という仕様です。 INTはINTとしての精度をもっていますので、桁あふれはほぼ考える必要はありません。 それでもINTが不安なら無駄だとはおもいますがBIGINTを利用してください またオートインクリメント自体、ユニークなコードを発生させる手段にすぎません。 抜け番を埋める行為自体、究極の無駄なので考える必要はありません。 とくにプライマリーキーとして使用している場合は、プライマリーキーが ころころ変わるのではテーブルの管理ができません。絶対にやめるべきです。
mysqldumpのオプションに--default-character-set=ujisを指定するとどうですか？ もともとの作成データベースはeucjpmsのほうがいいようですが。
失礼しました CALLしたプロシージャの結果をOUTを利用せずに使いたいのですね？ プロシージャから他のプロシージャを呼び出すことはできますが 呼び出すプロシージャ内で行っているSELECTは結果ではなく経過でしかないため SELECT文のようにカーソルでは受けられないですね。 書式的にもカーソルはSELECT文しかうけつけません http://dev.mysql.com/doc/refman/5.1/ja/declare-c …
utf8固定なのでできません。 http://dev.mysql.com/doc/refman/5.6/en/server-sy …
無限ループ処理になりそうなので無理だと思います たしょうタイムラグはでますが スケジュール管理用のテーブルをひとつ用意して、 コールしたいイベントが発生したときに管理テーブルのフラグをたて イベントスケジューラでフラグが立っていたらcallしてフラグを消す ・・・的な処理を5分ごとに実行すればある程度目的は達成できるかと どうしても即座に反映したければ、アプリケーション側でCALLする方が 確実ですが。
技術的な話になると微妙ですが結論からいえばサブクエリが問題になることはまずありません じつは今回のSQLも select member_no ,member_name,max(title2) as max_title2 from member inner join rireki on rireki_member_no=member_no where title2 between '2014-09-13' AND '2014-09-19' と書くとわずかに効率的になるのですが、本来のSQLの書き方からいうと じゃっかんズルをしているところがあるのであまりお勧めしません。 いずれにしてもきちんとインデックスを設定しておけば、スピードに大差はないでしょう。 どうしてもカリカリにチューニングをしなくてはいけない場合に 調整項目としてはサブクエリを除外する検討が必要になってくるかもしれません
joinしてlimit指定でdeleteできると楽なのですが、標準のSQLではないようです まぁ普通に考えればプライマリーキーやユニークキーのないテーブルは データを特定過程が煩雑なので通常のSQL文では処理は難しいですね。 つまりはテーブルの作り方が変・・・ということです。 普通は重複してから消すのではなく、重複しないように属性をつけます 無理やりdeleteする方法としては (1)distincでテンポラリにデータを移し、truncateした後戻す (2)プロシージャで消す のどちらかが妥当です
　まず、やっていいこと、いけないこと。から。 ＞これは日付（開催日）で代用しようと思っています。同じ日に2試合は「絶対に」ないので。 　この部分は、極めて正しい対応です。 　でも、 ＞1試合で一方のチームが10点を取ることは「限りなく0に近いので」とりあえず10用意する。 　これは、絶対にやってはいけません。こういう事をやった時に限って、１００年に一度しか無い、11対１５なんてスコアに巡り会うことになります。（迷信のようだというなかれ。マーフィーの法則として知られる法則群の一つです。限りなく０％に近い確率で起こることは、何れ、必ず、そして最悪のタイミングで発生すると言います。） 　さて、全部をテーブル化しようとすると、スペースにも限りが有るので、考え方の一つを紹介しておきます。 　まず、属性がいろいろと出ていますが、その属性が、「何に依存するものなのか？」を考えます。言い換えると、何が決まれば、その属性を特定することが出来るかです。 　例えば、ホームチームの１ゲームの得点で有れば、開催日と開催場所が決まれば、必ず特定できますね。（もし、有るチームの試合に対して「だけ」のデータであれば、開催場所は不要です。） 　この組み合わせで特定できる属性の他の例は、ホーム・アウェイの各チームの監督名とか、主審名とか、１ゲーム全体に関わる属性群となります。 　さて、有るゴールの得点者は、何に依存しているでしょう？開催日と開催場所と、発生時間（試合開始からのタイム）となります。 　さて、こうやって、全部の属性が、何に依存しているかを整理してみましょう。 　こうやって作業していった時に、「開催日と開催場所」とか、「開催日と開催場所と、発生時間」とかいった有る事象を特定するためのキーになる物を主キーとします。 　そして、主キーに依存しているものを全て、テーブルの項目としてテーブル内に格納します。 　（こうすれば、ゴール１・ゴール２・・・・なんて項目にはならないはずです。ある特定の時間に発生するゴールは絶対に１つだからです。） 　考え方によっては、「開催日と開催場所、発生時間」の組で特定できるものが他にもあります。警告や反則の発生です。これも、ゴールと同じテーブルに入れることが出来ます。ただし、この場合は、この時間に何が起こったのかを記録するフィールドがひとつ必要になります。その代わり、ゴールも警告も反則もとにかく、ゲーム中に発生したイベントは全てこのテーブルに格納できます。 　 　ここで注意するのは、どちらのチームで発生したのか（どちらのチームの得点になったか）は、記録の必要はありません。選手名が解れば、各チームの選手リストを登録してあるテーブルから調べられますからね。 　 　むやみにテーブルを増やす必要はありませんが、テーブルを分けるのを怖がってはいけません。事象を特定するためのキーが異なる時は、あっさりとテーブルを分けましょう。 　この作業を、「正規化」と言います。（かなり作業を簡略化しています。ここまでを正しくやれば、第２正規化と言われる部分までの作業が終わるはずです。「ここで注意するのは」の項が見落としなく配慮出来れば、第３正規化まで終わるはずです。普通は、ここまで出来れば、よしとされます。） 　データベースのテーブル設計をする時には、避けて通れない作業ですから、根気よくやってみてください。この作業が正しく出来れば、次にデータベースを使うアプリケーションを作るのが、ぐっと楽になります。 　頑張ってくださいね。
エンジンにもよりますが基本は自動ロックでユーザーが任意におこなう 必要はないものだと考えてよいでしょう。 とくにトランザクション処理すればデータ競合もほぼ問題ならないです。
> ではサーバーを使用するユーザーを増やすことは出来ないのでしょうか レンタルサーバーは複数人が使いますから、自由にユーザを増やすとユーザ名がぶつかる場合もありますから、1契約につき1ユーザの可能性がありますね。 hostingerに問い合わせてみて下さい。
補足 よくよく考えたら更新の際、user_idが変更になる場合は OLD.user_idに対してもアップデートしないといけないですね DROP TRIGGER IF EXISTS TRG_UPDATE_USER_ITEM; DELIMITER // CREATE TRIGGER TRG_UPDATE_USER_ITEM AFTER UPDATE ON user_item FOR EACH ROW BEGIN CALL UPDATE_ITEM_TYPE(NEW.user_id); IF OLD.user_id != NEW.user_id THEN CALL UPDATE_ITEM_TYPE(OLD.user_id); END IF; END; //javascript:void(0); DELIMITER ;
実用にはidとdateの組み合わせがユニークであるという条件が必要ですね 処理的にはこう select * from tbl where (id,date) in (select id,max(date) from tbl group by id);
MySQLと連携するアプリでCSVをSQL文に変換しながら投入すればいいのでは？
よくあるランク付けの方法を応用すればよいでしょう。 まず、id順でitem_idごとにランクをつけます SELECT id,user_id,item_id,( SELECT COUNT(DISTINCT id) +1 FROM user_item AS t2 WHERE 1 AND t1.id > t2.id AND t1.item_id=t2.item_id ) AS rank FROM `user_item` AS t1; これを元に、user_idが1、rankが1のものを抽出します。 なお上記rank項目はHAVING句に移動します SELECT id,user_id,item_id FROM `user_item` AS t1 WHERE user_id=1 HAVING ( SELECT COUNT(DISTINCT id) +1 FROM user_item as t2 WHERE 1 AND t1.id > t2.id AND t1.item_id=t2.item_id )=1;
＞sort列は取得しないようにできますか・・・？ サブクエリにいれてしまえばよいでしょう select id,region,station from( select id,region,null as station,0 as sort from tb1 union select id,region,station1,1 from tb1 where not station1 is null union select id,region,station2,2 from tb1 where not station2 is null union select id,region,station3,3 from tb1 where not station3 is null union select id,region,station4,4 from tb1 where not station4 is null union select id,region,station5,5 from tb1 where not station5 is null ) as sub order by id,sort
まぁ普通日付の範囲を検索するときはbetweenですけどね SELECT * FROM m_nendo WHERE '2014/03/31' between sdate and edate
むしろ全文検索とは何か理解されていないなら FULLTEXT INDEXを設定することはまずないでしょう InnoDBとか対応していないし・・・ 全文検索自体は半角スペースで分かち書きされた文書（一般に英語の長文）の 特定のキーワードに高速にヒットさせるものなので、日本語との相性はわるく そもそもemailの検索としても適切だとはいえないのでこのケースでは 使うことはないでしょう。 慣れるまでは通常インデックスのみの運用で問題ないと思いますし おそらくよほど使いこなす人以外は一生使わない機能の一つだと思いますよ。
中規模の掲示板システムとなれば、Webサーバの冗長化やスケールアウトによる負荷対策と言ったことも考慮しなければいけないのではないでしょうか。 そうなると ・データの一元管理 ・書き込みの競合 と言ったことへの対策としてもDBを利用するメリットがあると思います。
cast してみたら？ insert のときは、カラム型に合わせて、かなり柔軟対処してくれるけど where などでの比較式においては、カラム値の方を文字列変換してから、文字列比較したりすることがあるらしいので（特にdatetime と日付だけの文字列を比較したとき）、今回は文字コードかCOLLATE の関係で、それが発生していると見られます。 その場合、文字列を日付にキャストするといいらしいです。 WHERE day = CAST('2014-8-19' AS DATE) 　この日付文字列の所を、プレースホルダーにすれば、ユーザーから日付入力して貰っても、範囲外でもない限りかなり柔軟に、日付対応できます。 参考 http://matsu.teraren.com/blog/2010/07/27/mysql-d … 「MySQLの日付比較：比較対象のカラムは型を意識しなければならない。」
#2のお礼欄にある例を使えば create table bukken(id int, bukken_name varchar(30), chiiki_id int, address varchar(200), price_min int, price_max int, station varchar(30)); insert into bukken values(1,'名駅MID',1,'愛知県名古屋市中村区則武本通x丁目xx番',40770000,55100000,'名古屋駅'),(2,'プレサン浄心',2,'愛知県名古屋市西区城西x丁目xxxx番x',30800000,40001000,'浄心駅'),(3,'アネシア八事',3,'愛知県名古屋市昭和区高峯町xxx番',50000000,62510000,'八事日赤'); create table fudou_kodawari (fid int not null,kid int not null,unique(fid,kid)); insert into fudou_kodawari values(1,1),(1,2),(1,3),(2,1),(3,2),(3,3),(3,4),(4,3),(5,4),(6,4),(7,1),(8,1),(8,2),(8,4),(9,5),(10,1),(10,4); として、fudou_kodawariに1かつ4を持つfidは8と10になります。 bukkenテーブルにidの8,10がないためヒットするレコードは一つも表示されません。 bukkennテーブルに該当レコードを入れたうえで再チャレンジすればいけると思いますよ SELECT * FROM bukken WHERE id IN (select fid from fudou_kodawari where kid in (1,4) group by fid having count(*)=2); サブクエリ部分の考え方 (1)select fid from fudou_kodawari where kid in (1,4) とすると1か4のレコードが表示される (2)select fid,count(*) from fudou_kodawari where kid in (1,4) group by fid とすると1か4のレコードがfidごとにいくつあるか表示される (3)select fid from fudou_kodawari where kid in (1,4) group by fid having count(*)=2 1か4でカウントされた個数2・・・つまり1かつ4のレコードが抽出される という流れです。 これをbukkenのidに対してINで抽出するわけですが、bukkennはレコードが被ることはないので bukkenに対するDISTINCTは不要です。
＞html上の英語に変換されたデータをどうやったらデータベースに入れられるのでしょうか？ ああ、なるほど元文書はwebで公開されているのですね？ であればなぜ英語版をデータベースに登録しようという考えに至ったのでしょう 単純にhtmlに埋め込んでマルチ言語対応のhttpdで公開するのが妥当では？ またDBにどうしてもデータを入れたいのであればルートからのフルパスで、 ファイル名を指定してそれをキーにテーブルに登録する方法が考えら得ますが ファイル名をキーにしてしまうとなんらかの理由でファイル名を変更しなくては いけないときにはまりそうですね。
とりあえずトリガーつかってみてください http://dev.mysql.com/doc/refman/5.1/ja/create-tr … 基本的にはテーブルごとに、追加・削除・更新のトリガーを それぞれ作っておくとよいでしょう。 ちなみに微妙なのが「ユーザー名」の扱いですね 通常、mysqlのアクセスは管理者、編集者、読者程度のユーザーを設定し それに対して、webアプリなどでアクセスして更新する際に 代理で作業をさせると思います したがって、質問者さんがいうユーザーが、実質上のユーザー（作業者）であるなら そのユーザー名を渡してあげないといけないし、mysql上のユーザー（権限者）であるなら それを取得する必要があります。
マシンBに２つmysqlを立てればいけるんじゃない？ そうでなく１つのmysqlプロセスでやりたいという場合は 理論的に命題がなりたっていないような・・・ A=B、B=CでA!=Cということですよね？
>データーベース設計する際、店舗と通販は別々のテーブルを作成する必要があるのでしょうか？ 出荷元テーブルをつくって出荷元コードに店舗と通販を別コードで登録すればいいでしょう 店舗数と通販数はそれぞれ１つずつですか？ 複数店舗、複数通販サイトを管理するのであれば、出荷元テーブルだけでなく 出荷属性テーブルで、店舗と通販を分けておくと 店舗の合計出荷や通販の合計出荷など属性ごとに集計ができるようになります。 （厳密には分けなくてもいけますが、分けた方がより集計しやすい）
オンライン中は更新途中のファイルが数多く存在します。 更新中にディレクトリーでコピーされたものは整合性がなく、 万が一の時に戻しても整合性エラーでデータベースが立ち上がらなくなります。
う～ん。質問者の意図というか思い（それと質問者のお客さんがやりたい事）というのも分かるんだよね。 回答No.1で名寄せは「駄目」ではなく「可能な限り行うべきではない」という言い方をしたのは、 現実は往々にしてあるんだよね。そういう「お客様からの要望」が。 ○○コード、○○IDという概念自体が分からない、という人も居る。 なので名寄せが不可避な状況もある。 もちろんコード手打ちしてね、合ってたら店舗名が出てくるから、 店の名前がないときはこっちのボタンを押してあらかじめ店を登録してから続けてね、 という説得を試みるのは可能な限り行った方が後々お互い（デベロッパーとユーザー）のために良いとは思うんだけど、 まだ（お客様に見せれるシステムが）出来上がってない段階でお客さんにそれをイメージして納得して貰うのは極めて難しい。 質問者とお客さんがそれぞれ「餅」という言葉を聞いて頭の中で絵を描いてそれについて議論しろっていう事だからね。 で、店舗名寄せ法（毎回店舗名を入力）の場合、当然「マルナカ」と「マル　ナカ」は違うコードが割り当てられる。「株式会社ほげほげ」と「（株）ほげほげ」も同様。 これを後でどうするか（店舗コードを使ってるテーブル全部で片方の店舗コードに一気に書き換え＆消えた店舗コードを店舗マスタから削除）は完全に仕上げておかないと後で大変なことになる。 もっとも、店舗は本当に店舗名を書くだけで特に店舗ごとに集計が要らない、だから上の突合せ処理は要らない、というのだったらこの限りではない、んだけど、それならそもそも店舗を店舗マスター化する必要がない。 こういったタイプの名寄せ法を採用するなら店舗マスター化せずに本当に毎回店舗名を入力させて、後で購入履歴テーブルから似たような店舗名をピックアップして同じ店舗名に統一するという方法もあろう。この場合は本当に店舗名がテーブルの中では単なる関数従属なデータとなるが、システム側で何とかすると考えれば楽っちゃ楽な方法かも知れん。という意味でも店舗を店舗マスターかする必然性がない。 逆に、岐阜県にある「バイクショップみらくる」と熊本県にある「バイクショップみらくる」からの購入をどう分けるかという事についても考えねばならん。 > 実は店舗はユーザーがCSVで100店舗とか、1000店舗とか、一気に挿入できるようにしています。 > もしユーザーAが店舗コードS100～S300を挿入、ユーザーBが同時にS200～S400を挿入した場合、 > S200～S300が被ることになります。 わしはむしろこれが気になった。 ユーザーAとユーザーBで店舗コードがかぶるんが困るんなら 店舗コードの先頭n桁をユーザーIDという定義にすればいいだけだし、 CSVに手で入れたらかぶるやんけーっとユーザーから突っ込まれるのがイヤなら 最初から店舗コードをCSVにいれなければいい。 今回の課題で私が言いたい事は、今まで質問者から得られた情報だと 店舗マスターが単なる名称マスターとしての価値しかないという事だ。 私はそもそも名称マスターなるものは存在意義が無いと考えている。 名称マスターを設けて得られるメリットは、せいぜいDBサイズが若干減るくらいだ。 システムから見たデータベースの使い勝手はほとんど変わらない。 HDD単価が1GB当たり8円という時代にそんな事に腐心するくらいならもっと大事なことを考えようよというのが私の考え方だ。
＞誤差が発生しないようにできないでしょうか？ 質問の意図がわからないのですが、明細単位と総計での消費税誤差の話であれば 根本的な考え方として消費税とはそもそもが誤差がでる仕組みなので 小手先でなにをやっても無駄。会計上も税務上もする明細で調整する必要がない 8%の消費税をまるめるためには25円単位で取引をする必要があり そうでなければ明細単位で丸めて計算し、総額との誤差を「消費税差異」として処理する 消費税差異がプラスであれば雑収入だしマイナスであれば雑損 明細単位であわせたいとか、取引先との違算を調整したいのであれば 値引きやリベートで都度調整する、普通は経理の人がうまくやってくれる 私の解釈がちがいfloor関数に内在するなんらかの数学的な誤差の話であれば 誤差の具体的な例示があれば調べようがあるかも
cd PDO_MYSQL-1.0.2 のあとに phpize で作られます 参考URL：http://pentan.info/php/pdo_mysql_install.html
書式としては col1 = 'A' AND col2 = 'B' AND col3 = 'C' なら WHERE (col1,col2,col3) IN (('A','B','C')) ORならセットで複数指定して WHERE 　(col1,col2,col3) IN ( 　('A','A','A'), 　('B','B','B'), 　('A','B','C') ) という書き方もあるにはあります。パフォーマンスはEXPLAINしてみて。 ご参考まで
ロックを掛けた接続内では、ブロックされないので、ロック状況の取得は出来ないようです。 テスト状況を作るには、２つ以上の接続を作って、一つは、ロックしたままとする必要があるので、コマンドラインクライアントと、xampp(apache)などのhttpサーバー経由しphpでmysql接続とを駆使して、以下のようにしてみると、どのようにロックが行われているかを見ることが出来ます。 [1]. コマンドラインクライアントから、ロックする > lock tables `xx_tbl` write; [2]. phpで、上記ロックしたtableにアクセスするphpプログラム実行 select * from `xx_tbl` 　　しかし、writeロックがかかってるので、待機状態になり、結果は返ってこない 　　とりあえず、このウィンドウはこのままおいて [3]. ブラウザの別ウィンドウまたは別のタブから、以下を発行するphpプログラム実行 show processlist; 　→　３スレッドが返ってくる i: コマンドラインクライアントのスレッド、接続のままさわってなければ、sleep ii: ロックテーブルにアクセス待機中スレッド、Stateカラム に waiting という記述、Infoカラムに、待機中クエリの内容 　　ブロックされたクエリが表示されるだけなので、from 句からロック中のテーブルを推測するしかできない。 iii: show processlist;　を発行したスレッド。Infoカラムにそのクエリ [4]. コマンドラインクライアント で、ロック解除 > unlock tables; 　[2] のウィンドウをそのまま開いていれば、待機終了して、データ取得した結果が表示される。 ということで、ロック中のテーブルへさらに他からアクセスしている時しか、それを関知することはできないようです。
＞Excelのファイルを直接読み込むことができるような機能 SQL文をExcelでざっとつくって、コピペでphpMyAdminに貼りつければ 済む話のような気がしますが・・・
JOIN構文はご存知ですか？ 「同一の商品」ということなので、それぞれのテーブルのgoodsIdが指し示すものが同じものだと思うので以下のクエリではいかがでしょうか？ SELECT sales.goodsId, sales.goodsName, salesSum, retailsalesSum FROM ( SELECT goodsId, goodsName, SUM( quantity ) AS salesSum FROM tbl_sales WHERE salesDate BETWEEN '2014-06-01' AND '2014-06-30' GROUP BY goodsId ) AS sales JOIN ( SELECT goodsId, goodsName, SUM( quantity ) AS retailsalesSum FROM tbl_retailsales WHERE salesDate BETWEEN '2014-06-01' AND '2014-06-30' GROUP BY goodsId ) AS retailsales ON sales.goodsId = retailsales.goodsId
＞ところでこのSQL文をtest.phpに組み込むのでしょうか？ ＞ ＞そしてどのように組み込んだらよいのでしょうか？ プログラムとデザインを分けるようにお伝えしましたが SQLとプログラムも分けて考えてください。 まずはSQL文が動作することを確認する必要があります。 PHPとMySQLを利用しているということはphpMyAdminは運用していますよね？ もししていないようでしたらマストなツールなのでインストールをお勧めします。 なお最終的にはtest.phpで提案したphp相当のものに組み込んで PDOで処理することになると思います。 実際のところ#7,8の内容には絞り込みのデータが書いていないので、 （「where 1」というのは全データを表示するという意味、これにANDで絞り込みの SQL文をつないでいきます） ユーザーから送られてきたデータをもとにどう絞り込みをしたいか仕様を固めてください
yambejpさん来てくれてよかったですね。いつも博雅適切なご回答拝見しています。 さて、ざっと見ですみませんが、こちらが想定していたこだわり条件テーブルは kid | noiyo 1　 |新築 2　 |南向き 3　 |セキュリティ充実 ～ という「定義だけ」のものでした。この場合、bukkenテーブル本体の方には SET型のカラムを作り、 | kids | | 1,3,5,8 | のように該当するkidを(複数可のカンマ区切りで)入れておきます。なのでクエリは単純で SELECT * FROM bukken WHERE (price BETWEEN '1000' AND '3000') AND (address LIKE "%名古屋市西区%" OR address LIKE "%名古屋市東区%" ～) AND ( FIND_IN_SET("2",kids) AND FIND_IN_SET("3",kids) AND FIND_IN_SET("5",kids) ) のような感じで済むはずです。(実際には*ではなくきちんとカラム名を) また、地域は、address欄をLIKEで検索すると別テーブルが不要な反面、遅いですから、物件数や対象地域の範囲により、できれば 市町村コードなど利用すればずっと速くなるかと。 その場合はbukkenテーブルにエリアコードのカラムを作成・挿入しておけば、クエリは (area_code IN (23102,23103,23104)) /* 北区 or 東区 or 西区の例 */ のようになります。 ご参考まで。 http://www.soumu.go.jp/denshijiti/code.html
クラスター
commitしてみては？
select *,datediff(`out`,`in`) diff from office order by diff asc; ○年×日というのはうるう年など勘案すると正確にだすのは工夫が必要なので 日数で表示したほうがよいでしょう
select id,date,max(cost) as cost from tbl where id=129 group by id,date
＞QWERTYテーブルは、5つのカラム(PHOGE,　MHOGE, J, YMO, NDATE)でユニーク として、この5カラムのユニーク属性を利用するならON DUPLICATEで処理だし それ以外でユニーク処理をしたいならテーブルの制限がつかえない以上 SQLを１文でやるのはそこそこ厳しい そもそもPKってのがよくわからないのですが？
１．ほとんど英数字です。説明を付けたい場合はcommentで各カラムに説明を日本語で書きます。 長くSEをやっていますが、日本語のカラム名は過去に一度見ただけですね。 ２．全く関係ありません。 適切にプログラムを書いていればセキュリティー上の問題は発生しません。 逆に英数字だけであってもプログラムに問題があればセキュリティー上の問題が発生します。 ３．英数字を使ってます。 そもそもプログラムを書いているときは、基本的に全て半角文字で入力しますから一々日本語変換をするのは効率が悪すぎます。
自分目線であればそんな感じの管理なんでしょうね さて命題の件は //仮データ create table game(issue varchar(10),h_a varchar(10),h_score int,a_score int,opponent varchar(20)); insert into game values( '●','H','8','9','チームB'),( '○','A','2','8','チームC'),( '●','H','4','9','チームD'),( '○','A','3','4','チームB'),( '●','H','0','1','チームB'),( '△','A','3','3','チームC'),( '△','H','1','1','チームE'); として（集計結果をみるためすこしデータいじってます） (1) select (h_a='H')*h_score + (h_a='A')*a_score as score ,issue,opponent from game order by score desc; (2) select opponent,coalesce(sum(issue='○')/(sum(issue='○')+sum(issue='●')),0) as ratio from game group by opponent order by ratio desc; となります。ポイントは ＞勝率は「勝った試合数÷（勝った試合数+負けた試合数）*100」 とする場合、引き分けしかない相手をどうするかですね いわゆる勝ち点方式のように引き分けも評価対象にしないと 引き分けが多いチームとの力関係が相対評価できないと思います 今回はcoalesce関数で引き分けだけの関係は負けと同等としています また、自分がホームかアウェーかわかっていてそれぞれの点数がわかっているので issueとダブルバインドしている点が気になります。 最初の書き込みでうっかり間違えたとおり、issueによる勝ち負けと 点数によって勝ち負け判断の整合性があわなくなる場合もあり、 何をもって勝ち負けをジャッジするか決めておかないと計算があわなくなります。
まずは仕様をきめるところからですね とくに風俗（？）となると0時マタギがあるでしょうから日付で管理するのは微妙です。 まずはユーザーテーブルで、ユーザーid、ユーザー名ほかユーザー情報を管理 シフトテーブルで、開始日時＋労働時間もしくは開始日時＋終了日時で管理します。 また休憩時間（時刻）の管理までおこなうならそれなり工夫が必要です。 お店の休日にはシフトを入れられないようにしたい場合は、営業カレンダーテーブルも 用意しておくと便利です。 あとは何を検索・集計したいかでテーブルの組み方は微妙にかわってきます。 たとえば ・任意の日時時点で入っているメンバー名をすべて得たい ・メンバーごとの月単位での労働時間を集計したい ・なんらかの売上と絡めて管理したい ・労働時間内の個別の作業内容のスケジュール管理までしたい など・・・
正直保管しておくだけならBLOB系のものでも問題ないでしょう 照合順序は検索や集計をするために必要になるだけなので。 また投入時にURLの整合性をチェックしたいなどあれば ちょっと工夫が必要になります。
4.1ならサブクエリが使えるはず 理論の組み立て (1)商品、月別の件数を用意する。(現クエリ) (2)月別の全件数を用意する。 (3)上記の(1)と(2)を日付で結合する。 SELECT A.nengetsu,A.product,CONCAT(A.ken * 100 / B.zen,'%') hi FROM (SELECT DATE_FORMAT(date,'%Y-%m') AS nengetsu,product,COUNT(product) AS ken FROM test GROUP BY product,nengetsu) A INNER JOIN (SELECT DATE_FORMAT(date,'%Y-%m') AS nengetsu,COUNT(product) AS zen FROM test GROUP BY nengetsu) B ON A.nengetsu=B.nengetsu ORDER BY A.nengetsu,A.product
月ごとに集計するのが決まっているのであれば、できればそれ用のカラムを用意しておくと 集計の効率がたかくなり //集計用カラムを用意しない場合 create table tbl1 (id int not null primary key auto_increment,salesdate date, name varchar(20), price int,index(salesdate,name,price)); insert into tbl1 (salesdate,name,price) values( '2014-05-01','吉田',2400),( '2014-05-01','佐藤',1500),( '2014-05-02','佐藤',3000),( '2014-05-03','佐藤',10000),( '2014-05-04','佐藤',100),( '2014-06-18','佐藤',3000),( '2014-06-30','吉田',1000); //集計 select DATE_FORMAT(salesdate,'%Y%m') as ym,name ,sum(price) as amount from tbl1 group by ym,name; //集計用カラムを用意する場合 create table tbl2 (id int not null primary key auto_increment,salesdate date,ym varchar(6), name varchar(20), price int,index(ym,name,price)); insert into tbl2 (salesdate,name,price) values ( '2014-05-01','吉田','2400'),( '2014-05-01','佐藤','1500'),( '2014-05-02','佐藤','3000'),( '2014-05-03','佐藤','10000'),( '2014-05-04','佐藤','100'),( '2014-06-18','佐藤','3000'),( '2014-06-30','吉田','1000'); update tbl2 set ym=DATE_FORMAT(salesdate,'%Y%m'); //集計 select ym ,name ,sum(price) as amount from tbl2 group by ym,name; それぞれの集計SQLをEXPLAINすると効率の違いがわかると思います
あ・・・$rowsの宣言がされてないですね while($row = $stmt->fetch(PDO::FETCH_ASSOC)){ $rows[]=$row; }; の直前に $rows=array(); としといた方がいいかもしれません。
こんな感じでよくない？ DELETE R_TABLE FROM R_TABLE LEFT JOIN P_Master using(id) WHERE P_Master.id IS NULL
さらっと見た感じMySQLの機能にはなさそうですね。 外部キー制約を相互にかけあうのはメンテナンス的にも問題ありそうなんで 参照キーのところだけ別テーブルにわけるなど運用でカバーした方がよいかも
元のDBに間違ったデータが投入されていないかぎり、エクスポートされたデータは 相応の整合性があるデータだと思われます。 データを確認するためのエディタで、文字コードを何パターンか指定して 開いてみて文字化けのないデータが得られるか確認してみてください。 エディタ上で問題がなくなったら、それをUTF8で保存しなおし、 適当なオプションをつけて新しいDBに読み込めばよいでしょう
複数列というのがちょっと面倒なところですが こんな感じでどうでしょう？ //元データ CREATE TABLE tbl (id int not null primary key,d1 int,d2 int,d3 int,d4 int,d5 int,index(d1,d2,d3,d4,d5)); INSERT INTO tbl VALUES(1,1,2,3,4,2),(2,5,4,3,2,1),(3,4,2,1,5,3),(4,2,4,5,1,1),(5,3,2,1,1,2),(6,1,1,1,5,1),(7,2,3,1,5,1); //集計 SELECT id ,d1,COALESCE((d1=m1),0) as f1 ,d2,COALESCE((d2=m2),0) as f2 ,d3,COALESCE((d3=m3),0) as f3 ,d4,COALESCE((d4=m4),0) as f4 ,d5,COALESCE((d5=m5),0) as f5 FROM tbl LEFT JOIN (SELECT MAX(d1) as m1,MAX(d2) as m2,MAX(d3) as m3,MAX(d4) as m4,MAX(d5) as m5 FROM tbl) as sub ON d1=m1 or d2=m2 or d3=m3 or d4=m4 or d5=m5 ORDER BY id
＞＞あまり最初から詰め込みすぎずに、徐々に条件を付けていった方がいいですよ ＞ということはもっと単純な条件式で大丈夫なのでしょうか？ え～と、そういうことではなく、たくさん条件を最初から書くと どの条件節でエラーになっているかわかりづらくなるということです。 今回の質問であれば「こだわり」の部分が問題だったのですから ほかの上限や下限料金、住所などはばっさりコメントアウトしてまえば エラーの切り分けができるので、どこを直せばいいか絞り込めます。 デバグをするときにはなるべく簡潔な処理まで切り詰めた方がいいということです。 （まぁ複合バグもあるのでケースバイケースですが・・・） ＞LEFT OUTER JOINを変更して ちなみに、こまかく見てないのでなんともいえませんが 今回の例だとLEFT JOINした場合はWHEREやHAVINGの処理をかませないと 絞り込みになっていないかもしれません ＞何もcheckboxや他の項目をチェックしなかったら、全てのホテルが表示されてしまします。 ＞本当はチェックしなかったら、表示されないようにしたいのですが。 通常の絞り込みのロジックはこう WHERE 1 AND 条件1 AND 条件2 ・・・ AND検索なのですべての条件に当てはまるものが絞り込まれます。 条件が何もない場合なにも表示しないなら フラグ管理して、条件句に条件を付加していくときにフラグを立てるようにし フラグが0の際には条件句の最後に「AND 0」を足せばいいでしょう。 $flag=0; $sql="SELECT * FROM tbl WHERE 1 "; if(条件1){ $sql.="AND hoge='hogehoge' "; flag=1; } if(条件2){ $sql.="AND fuga BETWEEN 'xxx' AND 'yyy' "; flag=1; } if(条件3){ $sql.="AND piyo LIKE 'zzz%' "; flag=1; } if($flag==0){ $sql.="AND 0 "; }
#3です PHPへの組み込みについては、今後学習していただくとして 一応SQLのサンプル //ホテルの基本情報 CREATE TABLE t_hotels(id int not null primary key,name varchar(100) not null,price_min int not null,price_max int not null,address varchar(100) not null); INSERT INTO t_hotels VALUES(1,'HOTEL A',5000,10000,'栃木県・・・'), (2,'HOTEL B',5000,12000,'栃木県・・・'), (3,'HOTEL C',6000,9000,'千葉県・・・'), (4,'HOTEL D',5000,10000,'千葉県・・・'), (5,'HOTEL E',4000,5000,'埼玉県・・・'), (6,'HOTEL F',15000,30000,'東京都・・・'), (7,'HOTEL G',12000,40000,'神奈川県・・・'); //こだわり情報 CREATE TABLE t_kodawari_key(id int not null primary key,name varchar(20)); INSERT INTO t_kodawari_key VALUES(1,'温泉'),(2,'ランチ'),(3,' ディナー'); //ホテルごとのこだわり CREATE TABLE t_hotel_kodawari(hid int not null,kid int not null,unique key(hid,kid)); INSERT INTO t_hotel_kodawari VALUES(1,1),(1,2),(1,3),(2,1),(3,2),(3,3),(4,3); //温泉かランチにこだわりがあるところ SELECT hid,t3.name,t3.price_min,t3.price_max,GROUP_CONCAT(t2.name) as kodawari,t3.address FROM t_hotel_kodawari as t1 INNER JOIN t_kodawari_key as t2 ON t1.kid=t2.id AND t1.kid IN (1,2) INNER JOIN t_hotels as t3 ON t3.id=t1.hid GROUP BY hid //温泉かランチかディナーのうち２つ以上にこだわりがあるところ SELECT hid,t3.name,t3.price_min,t3.price_max,GROUP_CONCAT(t2.name) as kodawari,t3.address FROM t_hotel_kodawari as t1 INNER JOIN t_kodawari_key as t2 ON t1.kid=t2.id AND t1.kid IN (1,2,3) INNER JOIN t_hotels as t3 ON t3.id=t1.hid GROUP BY hid HAVING count(*)>=2
＞mysql4.0.25 かなり古いバージョンので、試す環境がないのですが MySQL5系でチェックすると CREATE TABLE `tbl`(`data` VARCHAR(20)) CHARACTER SET `ujis` COLLATE `ujis_japanese_ci` ; INSERT INTO `tbl` VALUES('あいうえお'),('あういおえ'),('おあういえ'),('えあいうお'),('かきくけこ'); と、しておいて SELECT * FROM `tbl` WHERE `data` LIKE BINARY 'あ%'; SELECT * FROM `tbl` WHERE `data` LIKE BINARY '%あ%'; SELECT * FROM `tbl` WHERE `data` LIKE BINARY 'あい%'; SELECT * FROM `tbl` WHERE `data` LIKE BINARY '%あい%'; をそれぞれ実行しても、想定どおりの戻りがあるので特に問題なさそうですね COLLATEについては`ujis_bin`でも問題ないです。 なにか入力みすか勘違いのような気がしますが・・・
＞ご指摘の通りに書き換えましたが、検索できませんでした。 一番高い可能性としては、POSTされたデータのキャラクターコードと DBに格納されたキャラクターコードが異なるということです この手のテストをする場合はキャラクターコードでの差異が出づらい 「英数字のみ」でまずテストをすることをお勧めします。 ここで動作確認ができたら次の段階として日本語検索を試してください プリペアドステートメントについてはphpマニュアルなどご一読ください http://www.php.net//manual/ja/pdo.prepared-state …
＞msであれば、まず遅い部類に入らない認識 運用方法によりますけど、1秒かからない処理なら普通に待てるんじゃないですかねぇ とはいえ、きちんとチェックしながら集計文を推敲すれば数倍～数十倍の 高速化ができるケースもあるので、常にチューニングに手を抜かない姿勢が必要ですね もちろん、運用上1分以上とか、10分以上処理に時間がかかるものもあります。 そういうものは予約型のUIを作るなど仕組みを考えないと、使用者が待ってくれません。 逆に定期的な締め処理的なものをいれると、その処理自体は1時間かかっても、 処理後の集計を高速にできたりするので、定型の集計が多い場合は検討すると よいかもしれません。 また、システム側からも継続的な過負荷がかかる処理を何本も走らせられないので 一定の処理待ちが発生した場合タイムアウト処理が必要になります。 たとえば、1時間返ってこない処理は、もしかしたらそのまま1日返ってこないかもしれない むしろ一生返ってこないかもしれないので、どこかで見切りをつける必要があるでしょう
phpMyAdminでサーバ接続の照合順序および、各テーブルの照合順序を確認し それに合わせたコード指定を、phpから接続するときに指定してやる PDO、mysqli関数のオブジェクト型、手続き型それぞれによって微妙に 指定が違うのでそれぞれの接続方法にあわせた指定が肝要 （接続後に「set names」を発行するのはNGといわれていますので注意）
作業列とか使えば出来ると思いますが。 > 0003　|　犬　猿　狐 「犬　猿　狐」は別のセルなんでしょうか？１つのセルに空白区切りで入力されてるんでしょうか？ 動物種は常に１文字？ １行に入ってる最大の項目数は決まってる？ なんかの条件で、やり方変わります。 -- シート名「Sheet1」のA1からセルごとに項目が入ってて、項目の最大数は９だとして、 Sheet2に、 A1:=OFFSET(Sheet1!$A$1,INT((ROW()-1)/10),0) B1:=MOD(ROW()-1,10) C1:=OFFSET(Sheet1!$A$1,INT((ROW()-1)/10),B1+1) と入力、A～C列を下向きにコピー 0001 | 0 | 犬 0001 | 1 | 猫 0001 | 2 | 0 ～ 0001 | 9 | 0 0002 | 0 | 猿 0002 | 1 | 狐 って具合に並ぶので、全体選択、コピー、値を貼り付け。 C列で並べ替えして「0」を削除。 A列B列で並べ替え。 B列を削除 で処理完了とか。
＞どうすればこれを修正することができるのでしょうか？ 具体的なSQL文がわからないのでなんとも言えませんが おそらくGROUP BYで日付でMAXをとったままの式で金額を抽出しているのでは？ MAXでとった日付をサブクエリとして利用しないと適正なあたいは得られませんね
Bがカラムとして存在しなければいけない理由は何でしょう？ selectするときにifでデータを作るとか、viewでBカラムに相当するデータを動的に生成するとかではダメなのでしょうか。
ごめんなさい、うまく読み取れないのですが SELECTで表示する分には切れずに表示され、CSVにすると途中で切れるということですか？ またセパレータを改行以外の文字でやっても結果はおなじでしょうか？
標準のSQLには配列に対する配慮がほとんどなく、テーブル構造には配列のような繰り返しは持たない方法が一般的です。繰り返しの代わりに必要な分の行を登録します。なので「ID」と「名前」のテーブルを１人に１行と「ID」「フォロアー」のテーブルで繰り返しの分だけ行を登録します。
今回の例ですと 「FROMにテーブルを列記する」のと「LEFT JOIN」で結合するのは、 あきらかにやっていることが違います。 なので処理速度の優劣を考える意味がありません。 もしやるならINNER JOINですね 実際abcdテーブルとhogeテーブルに適切なインデックスが設定されていれば FROMだけで処理してもJOINしても負荷は変わらないはずです。 基本的にはEXPLAIN文でSQL文の効率化を検証することができます。 http://dev.mysql.com/doc/refman/5.1/ja/explain.h … 個人的にはFROMでテーブルの列記よりJOINする方が 依存関係が分かりやすく、またJOIN語のSQL文に対してWHEREで絞り込みを したりできて便利なので使用頻度は多いです。
テーブルの構成と正規化の状況がわからないので微妙ですが こんな感じでは？ SELECT tokuisaki_id ,sum(nyukin*(nyukin_kubun='現金')) AS 現金計 ,sum(nyukin*(nyukin_kubun='振込')) AS 振込計 ,sum(nyukin*(nyukin_kubun='相殺')) AS 相殺計 ,sum(nyukin*(nyukin_kubun='手数料')) AS 手数料計 ,sum(nyukin) AS 合計 FROM nyukin_meisai WHERE AND uriage_bi BETWEEN '2014/05/01' AND '2014/05/31' GROUP BY tokuisaki_id
見直したら一部非効率なところがあったのでちょっと改善するとともに ちょっとだけ解説します //元データ insert into tbl values('ほげ','2014-5-1'),('ほげ','2014-5-2'),('ほげ','2014-5-3'),('ほげ','2014-5-4'),('ふーばー','2014-5-2'),('ふーばー','2014-5-3'),('あああ','2014-5-1'),('あああ','2014-5-3'),('あああ','2014-5-4'),('いいい','2014-5-1'),('ううう','2014-5-10'),('ううう','2014-5-11'),('ううう','2014-5-13'),('ううう','2014-5-14'); ※インデックスを貼ってあります //第一段階 select t1.username ,t1.login_date as d1 ,t2.login_date as d2 ,datediff(t2.login_date,t1.login_date)+1 as diff from tbl as t1 left join tbl as t2 on t1.username=t2.username and t1.login_date <= t2.login_date inner join tbl as t3 on t3.login_date between t1.login_date and t2.login_date and t1.username=t3.username group by username,d1,d2 having count(*)=diff これでusername,login_dateごとに、何日連続しているか得られます。 たとえば「あああ」さんは あああ,2014-05-01,2014-05-01,1 あああ,2014-05-03,2014-05-03,1 あああ,2014-05-03,2014-05-04,2 あああ,2014-05-04,2014-05-04,1 となり、5/1から5/1まで1連続、5/3から5/3まで1連続、5/3から5/4まで2連続、5/4から5/4まで1連続であることがわかります。 考え方次第ですが厳密にいえば1連続データは連続ではないので抽出しないでもいいですが、 これをしておかないと1回しかログインしていない人や、毎日ログインしない人がヒットしません。 すこし無駄なような気がしますが1連続はとっておいて損はないでしょう 今回ほしいのはusernameごとの最大連続日数なので //第二段階 select username,max(diff) as renzoku from ( select t1.username ,t1.login_date as d1 ,t2.login_date as d2 ,datediff(t2.login_date,t1.login_date)+1 as diff from tbl as t1 left join tbl as t2 on t1.username=t2.username and t1.login_date <= t2.login_date inner join tbl as t3 on t3.login_date between t1.login_date and t2.login_date and t1.username=t3.username group by username,d1,d2 having count(*)=diff ) as t4 group by username とすると、結果 username,renzoku あああ,2 いいい,1 ううう,2 ふーばー,2 ほげ,4 となります。元データをみてもらうとわかりますが 「ううう」さんは2連続ログインが2回ありますが、「最大」は2連続となるので 上記データがただしいとわかると思います。 #1さんの抽出だと2連続が2回は4連続だとカウントされてしまいます 最終的に、連続日数ごとの件数が知りたいので //第三段階 select renzoku,count(*) as count from ( select username,max(diff) as renzoku from ( select t1.username ,t1.login_date as d1 ,t2.login_date as d2 ,datediff(t2.login_date,t1.login_date)+1 as diff from tbl as t1 left join tbl as t2 on t1.username=t2.username and t1.login_date <= t2.login_date inner join tbl as t3 on t3.login_date between t1.login_date and t2.login_date and t1.username=t3.username group by username,d1,d2 having count(*)=diff ) as t4 group by username ) as t5 group by renzoku で、命題の解を得ることができます なお、処理的には第一段階ではインデックスがきいていますが 第二、第三段階は結果にたいする集計のためインデックスが利用されません。 ただ、第一段階でほぼデータ抽出が完了しているため、 さほど負荷が問題になることはないと思います
No.1です。 いえいえ、単に結果だけほしいならば、 update baken set bekijyo=POW( 2, umaban ); です。
ああ、なんとなく言いたいことはわかりました。 ログイン時に自動でスクリプトを走らせて、ログアウトしない状態 にしたいってことですね？（たぶん） mysqldセクションのinit-connectで解決するかもしれません。 http://dev.mysql.com/doc/refman/5.1/ja/server-sy …
１．select文の カラムリストに () 付けで、複数行データ定義などと言うことはできません。 union all を使ってください。 ２．まずは、select 文だけ書いてみてエラーのない select 文になれば、insert につないで実行可能です。 No1回答への補足をみると １対１対応させるのは、できてるのですね。 ３． umeta_idカラムが auto_increment だからnull を入れているなら、カラムリストから外しても良いと思います insert into ***_usermeta (user_id,meta_key,meta_value) select tableBid,'***_user_level','0' from dbB.tableB where tableBname <> 'Admin' union all select tableBid,'nickname',tableBname from dbB.tableB where tableBname <> 'Admin' ４． dbB.tableB の一行に対して、５行（以上）作って順番指定したいのですね。 ５行用のデータを union all で繋いで作ったtableを join しましょう。 select b.tableBid as user_id, k.meta_k as meta_key, COALESCE( k.meta_v , b.tableBname ) as meta_value from ( select tableBid, tableBname from dbB.tableB where tableBname <> 'Admin' ) as b cross join ( select 'first_name' as meta_k, '' as meta_v , 1 as order_no union all select 'last_name', '' , 2 union all select 'nickname', null, 3 union all select '***_capabilities','a:1:{s:10:\"subscriber\";b:1;}' , 4 union all select '***_user_level','0' , 5 ) as k order by b.tableBid, k.order_no ; 上記のtable記述順でcross join するなら、order by は無くても、希望の順番にはなりそうですけど、一応いれておきました。 このselect文で、insert したい行が生成できているならば、あとは先頭にinsert 用の構文(3で提示の１行目)を繋げばよいでしょう。
>危険はあるのでしょうか ここでいう危険というのはインジェクションのリスクという意味ですよね？ プリペアド処理でリスクヘッジをしているのですから、その点に関しては たぶん大丈夫ですが、きちんと管理しないと割り当てる箇所がずれたりしそうですね
＞PHPadmin これはphpMyAdminのことですか？それとも別の仕組みでしょうか？ （仮にphpMyAdminだとして以下） ＞システム上から確認したときは文字化けが起こっていない ＞PHPadminの画面から確認すると、メールマガジンのデータのみ ＞日本語が文字化けしておりました。 コンソールで表示すると文字化けしないという意味ですか？ phpMyAdminで文字化けしているのであれば、一度データを消して 適切な照合順序を設定の上、再取り込みしてみるとかですかねぇ・・
＞PHPの板に書けば回答くれますか？ ページングの部分に絞って質問をしてもらえれば回答できるかもしれません ページングで必要なのは ・現在のページ番号 ・検索結果のアイテム数 ・１ページに表示するアイテム数 ・現在ページが最初のページかどうか ・現在ページが最後のページかどうか あたりです。 このあたりの情報をまとめればさほど難しくない処理でしょう
＞name欄にヒットしない文字があるときは該当者なし iのついていないmysql関数はすでに利用禁止にちかい状態なので 利用するならもう誰もフォローしてくれない前提で すべて自己解決するしかありません。 ですのでmysql関数の利用を前提の質問は公の掲示板ではしないでください PDOでやるならこんな感じ? <?PHP $dsn = 'mysql:host=localhost; dbname=test'; $pdo = new PDO($dsn,$user,$password); $name=isset($_GET['name'])?$_GET['name']:""; $sql ="select * from tbl where "; $sql.="`氏名` like concat('%',?,'%') "; $sql.="or `住所` like concat('%',?,'%') "; $stmt = $pdo->prepare( $sql); $stmt->execute(array($name,$name)); $count = $stmt->rowCount(); if($count>0){ print "<table border=1>" ; print "<tr>"; print "<th>番号</th>"; print "<th>氏名</th>"; print "<th>住所</th>"; print "</tr>"; while($row = $stmt->fetch(PDO::FETCH_ASSOC)){ print "<tr>"; print htmlspecialchars($row["番号"]); print htmlspecialchars($row["氏名"]); print htmlspecialchars($row["住所"]); print "</tr>"; }; print "</table>" ; }else{ print "no hit!"; } ?>
まず、mysqlの全文検索って標準で日本語通らなかったような気がしますが mroongaなど適当なソフトと組み合わせていますか？ それにしてもramがヒットしないのは微妙ですが 全文検索はヒット率が50%を超えると逆にヒットしないなど いろいろルールがあるみたいなのでマニュアルで確認してみてください
初心者なら、プログラムを書く前に、「設計図」をきちんと作ってはどうでしょうか? そして、全部一度にやろうとしないで、一つ一つ部品を分けてやっていきませんか? まずは ～?page=2 でアクセスしたら 現在 2 頁 <前 次> と表示され、「前」には ～?page=1 「次」には～?page=3 にリンクが張られている、というプログラムを作ってみましょう。 当然、 page=3でアクセスすれば 「前」には ～?page=2 「次」には～?page=4 となるように、です。 あなたが作ろうとしているのは、このプログラムから 「現在 2 頁」と表示する部分を変えただけのものです。 このプログラムができないようでは、あなたが作ろうとしているものなどできません。
＞メール情報をさらにテーブルにして細分化したりしない方向で、そのまま取得できないか はっきりいえば、SQLでやる作業ではない しかしできる・できないという意味ではできるのでできるので一応書いておきます。 しかし、こんなことやってたらRDB上達しないですよ （インデックスは絶対効かないし効率最悪で、データが増えるとすぐいきづまる・・・） //例 select * from TABLE1 where ( TO_USER_NM ,substr(MAIL_TITLE,@pos:=instr(MAIL_TITLE,'『')+1,instr(MAIL_TITLE,'』')-@pos) ,SEND_TIME ) in ( select TO_USER_NM as 顧客 ,substr(MAIL_TITLE,@pos:=instr(MAIL_TITLE,'『')+1,instr(MAIL_TITLE,'』')-@pos) as 商品 ,max(SEND_TIME) from TABLE1 where substr(MAIL_TITLE,instr(MAIL_TITLE,'』')+1,3)='本申込' group by 顧客,商品 ) order by SEND_TIME desc ※ポイント substr(MAIL_TITLE,@pos:=instr(MAIL_TITLE,'『')+1,instr(MAIL_TITLE,'』')-@pos) というのが商品名です
で、print $sqlしてみて文法エラーを確認してほしいんですが $sql .= " limit " . $page * 10 . ", 10" ; と、limitの文字の前後に空白をいれるところから始めてみてください 決して差別をするわけではないですが、念のため教えてほしいのですが 「文字通りの意味しか理解できないコミュニケーション障害」的な ハンデをお持ちの方ではないですよね？ それによって教える表現がだいぶかわってくるので・・・
構造うんぬんではなく、文法エラーのようですね。 echo "<a href = find.php?name=",$name, ", $page_num -1.">" ; の部分、 echo "<a href = find.php?name=". $name . ", $page_num -1.">" ; ではないですか？ " " と　" " など、文字列と文字列を連結するのは　, ではなく　. ですよね。 次の10件の部分も同様かと思います。
こんな感じですかね？ //データ作成 create table tbl(id int,name varchar(10),dt datetime); insert into tbl values(1,'a','2014-04-01 08:00:00'),(1,'b','2014-04-02 08:00:00'),(1,'c','2014-04-03 08:00:00'),(1,'d','2014-05-01 08:00:00'),(2,'e','2014-04-04 08:00:00'),(2,'f','2014-05-02 08:00:00'); →idが1のデータは4つ、内3つのデータが2014年4月の日付 //集計・・・今日が2014年4月である前提でnow()を利用 select count(*) as c1 ,sum(dt between (@d:=date_format(now(),'%Y-%m-01 00:00:00')) and (@d+interval 1 month -interval 1 second)) as c2 from tbl where id=1; ※条件式をsumで集計すると件数がとれます (@d:=date_format(now(),'%Y-%m-01 00:00:00')) というのが、今月1日の、0時0分0秒で '2014-04-01 00:00:00' (@d+interval 1 month -interval 1 second)) というのが、今月1日の1ヶ月後の1秒前で'2014-04-30 23:59:59'
枝番管理も難点は桁がふえたときの問題です 仮に11-30とか出てきたときに文字列でのみ判断すると 11-30には1-3が含まれていますので1-3を抽出しようとして11-30まで ヒットしてしまうことになりかねません ざっと、枝番を別カラムに分けた例をあげておきます。 //テーブル作成 create table tbl (id int not null primary key,顧客 varchar(10),商品a int,商品b int,購入日時 datetime); insert into tbl values (1,'A','2','2','2014-04-23 08:00:00') ,(2,'A','2','1','2014-04-21 08:00:00') ,(3,'B','2','3','2014-04-20 09:00:00') ,(4,'B','2','2','2014-04-18 06:00:00') ,(5,'B','2','1','2014-04-15 05:00:00') ,(6,'A','1','3','2014-04-12 08:00:00') ,(7,'A','1','2','2014-04-10 04:00:00') ,(8,'C','2','2','2014-04-09 05:00:00') ,(9,'C','2','1','2014-04-08 06:00:00') ,(10,'C','1','2','2014-04-07 08:00:00') ,(11,'C','1','1','2014-04-06 05:00:00') ,(12,'A','1','1','2014-04-05 02:00:00') ,(13,'B','1','2','2014-04-04 02:00:00') ,(14,'B','1','1','2014-04-03 01:00:00'); ※実際の運用時にはインデックスなど適宜設定する //集計 select id,顧客,商品a,商品b,購入日時 from tbl where (顧客,商品a,購入日時) in (select 顧客,商品a,max(購入日時) from tblgroup by 顧客,商品a) order by 購入日時 desc; ＞商品に"3"という文字を含むもののみ取得 select id,顧客,商品a,商品b,購入日時 from tbl where (顧客,商品a,購入日時) in (select 顧客,商品a,max(購入日時) from tbl group by 顧客,商品a) and (商品a=3 or 商品b=3) order by 購入日時 desc ※3を含むというのが「13」や「30」まで含むかどうかで いろいろやりかたに工夫が必要になります
すくなくとも「echo $err」の位置は変 if(empty($err)){ ・・・・ } の外側もしくは、elseなどで処理しないと 「もし空なら」のブロックの中で表示しようとしても 空かヒットしないかのどっちらかでしょ それと、しつこいようですがINSERTは「IGNORE」で行わないと エラーになるので思った処理にならないかもしれませんよ
PRIMARY KEY (id) FOREIGN KEY (from_id) の間にカンマが必要では？
コンピュータが「ここおかしいんじゃね？」ってご丁寧に行番号までつけてエラーメッセージを出してくれてるわけです。 英語がわからないならGoogle翻訳に頼っても構いません。 エラーの内容を理解する努力をしましょう。 それをするつもりがないならプログラミングは諦めてください。 <html> <body> <?php $pdo = new PDO("mysql:dbname=db_test;host=localhost", "root", "admin"); if($st->rowCount()>0){ //←PC「$stが何なのかわからないからrowCount()もわからない」 if ($_POST['ID'] != '' && $_POST['NAME'] != '' && $_POST['ADDR'] != ''){ (以下略) ちなみに、「重複チェック→未入力チェック→登録」という流れで書いていますが、 「未入力チェック→重複チェック→登録」の順にした方がいいかと思います。
条件が何も書いていないので妄想になりますが、 create table tbl_c select a.code2, a.name, min(b.point) as point from tbl_a a left join tbl_b b on(a.code1 = b.code1) group by code2, name; こういうことでしょうか？
＞COOK_KIOKU_TBLのCOOK_NAMEとCOOK_TBLのCOOK_NAMEと一致するレコードは頭の方 というのであればCOOK_KIOKU_TBLに順位を確定させるためのソートキーが必要 それぞれidをふるとするとこんな感じかな？ create table COOK_TBL(cid int not null primary key auto_increment,COOK_NAME varchar(10)); insert into COOK_TBL(COOK_NAME) values('パスタ'),('パスタ'),('グラタン'),('オムライス'),('グラタン'),('カレー'); create table ZAIRYO_TBL(zid int not null primary key auto_increment,COOK_NAME varchar(10),ZAIRYO_NAME varchar(10)); insert into ZAIRYO_TBL(COOK_NAME,ZAIRYO_NAME) values('グラタン','鶏肉'),('オムライス','卵'),('オムライス','玉ねぎ'),('パスタ','卵'),('パスタ','麺'); create table COOK_KIOKU_TBL(kid int not null primary key auto_increment,COOK_NAME varchar(10)); insert into COOK_KIOKU_TBL (COOK_NAME) values('オムライス'),('グラタン'); //表示 SELECT DISTINCT k.kid,c.COOK_NAME FROM COOK_TBL as c INNER JOIN ZAIRYO_TBL as z ON c.COOK_NAME=z.COOK_NAME LEFT JOIN COOK_KIOKU_TBL as k ON c.COOK_NAME=k.COOK_NAME ORDER BY COALESCE(k.kid,9999); →kidがnullになる場合は適当に大きなデータにしておく（手抜き） →kid以外のソートが設定されていないので、ソート順は必ずしも一意にならない
OSは何を利用している前提でしょう？ サーバー上のコンソールでしょうか？ クライアントからsshなりでログインしているのでしょうか？
\のかわりに/を用いてみてください。
＞自分はまずSQLを投げる前に空のチェックをすればいいんですか？ 考え方は4つ (1)POSTを受け取って、SQLに投げる前にチェックできるタイミングがある 空だったり想定した値でない場合には前の画面にもどす いわゆる「バリデート」処理 (2)送られてくる前にjavascriptなどでチェックする、これもUIの基本。 ただしjavascriptのチェックはあくまでもおまけなので javascriptでチェックをかけたとしても必ずサーバー側で二重チェック しないといけない (3)事前処理をせずにSQLにまかせる あらかじめ空文字をいれたデータを登録しておき自動ではじかれるようにするなど 運用でカバー (4)チェックしない 前述したとおり、結局機械的なチェックをしてもそれが「正解」かどうかは 別のはなし。一生懸命チェックしても結局むだならしなくてもいいという 考えもある。 どれをとるかは、あなたしだい 通常は(1)、(2)をベースに行い、(3)や(4)は例外処理がおおくなるので あまりお勧めできません。
max_sp_recursion_depthで設定するみたいです http://dev.mysql.com/doc/refman/5.1/ja/server-sy … ただあまり再帰処理はしない方がいいと思いますけどね・・・
insert ignore into でデータを投入して、 php側でaffected_rows()やrowCount()で作用した行数を数え 0だった場合にメッセージをだせばいいのでは？
＞dataカラムにカンマ区切りのデータを保存している いや、SQLでそれはあり得ない・・・ こうしてみて //テストデータ create table tbl(id int not null auto_increment primary key,groupid int,data int); insert into tbl(groupid,data) values(1,1),(1,2),(1,3),(2,1),(2,2),(2,10),(3,1),(3,2),(3,3),(3,10); //カンマ区切り表示 select groupid,group_concat(data order by data) as datas from tbl group by groupid; //data単位で集計 select data,count(*) as count from tbl group by data;
＞10数件のインデックスを張ったテーブルは普通に運用できるものなのでしょうか……？ ＞または、「Using filesort」は大きな問題ではないと考えたほうがよいのでしょうか？ インデックスを貼るとデータの追加、削除のスピードは落ちます。 よって検索と更新、どちらを頻繁にするかということも関連してきます。 私が持っているデータで言えば、２０年前のアメリカ某大手の大型コンピュータで １万件をソートして５０秒というのがありました。 顧客が電話で問い合わせてくるものに対してデータを表示するソフトでしたので、 ５０秒は待てないと言われました。 問い合わせのパターンを絞ってもらってインデックスを１０個作成して検索したら３秒になりました。 サーバーの処理能力にもかかってきますが、１億件を考えるとテストで打ち込んでも タイムアウトするか、しばらくそのサーバーを専有してしまうかもしれません。 （他のすべての処理を止めかねない）
select * from tbl t1 where t1.no = (select max(t2.no) from tbl t2 where t1.id = t2.id) MySQLもバージョンによって使えるsqlが異なりますのでバージョンは明記しましょう。 where (id,no) in・・・が使えるならANo.1の方のsqlのほうがいいと思いますが、 古いバージョンはこちらしかだめだったかと。 さらに古いバージョンはこちらもだめだったりしますが。
top.phpのGETパラメータに、「id」が存在しないようですが。 <form>～</form>の間に送るべき値、例えば echo "<input type=\"hidden\" value=\"$row['番号']\">"; などがありません。 URLで、koushin_input.phpの後ろにGETパラメータありますか？ これだと、koushin_input.phpの $id=(isset($_GET["id"]))?((int) $_GET["id"]):0; この部分は、必ず0になると思われます。 もしなら echo "<form action=koushin_input.php method=get>"; を echo "<form action=koushin_input.php?id=$row['番号'] method=get>"; としてもいいかもしれません。 当然、限定的な環境下での利用方法になりますが。 で、データが削除されたのではなく、番号=0が純粋に 存在しないから発生しているのではないでしょうか。
>>削除ボタンを押しても削除できないので質問しました どういう仕組でどういう流れで削除するのかは誰が決めてるんですか？ また、その仕組流れを理解できてますか？ 上記できないようでしたら、 「キーを回しても車が動きません。なんでですか？」 という質問と同レベルです。 エンジンは壊れてないの？そもそもエンジン付いてるの？燃料は入ってるの？タイヤは？道路は？ もう少しわかない場所、動かない場所をまず自分で切り分けましょう・・・・
mysql> LOAD DATA INFILE "T01Prefecture.csv" -> INTO TABLE T01Prefecture FIELDS TERMINATED BY "," -> LINES TERMINATED BY "\r\n"; Query OK, 1 row affected, 1 warning (0.11 sec) Records: 1 Deleted: 0 Skipped: 0 Warnings: 1 mysql> select * from t01prefecture; +---------+-----------+ | pref_cd | pref_name | +---------+-----------+ | 1 | 北海道 2 | +---------+-----------+ をみると、 -> LINES TERMINATED BY "\r\n"; CR(0x0D)+LF(0x0A)という改行になっていないので、 １行目のpref_nameは、 「 北海道 2 」という値が入っているのがわかります。 入力元のファイルをバイナリエディタで調べてみましょう。 改行が0Dだけなら\rで、0Aだけなら\nで指定するとうまくいくはず。 バイナリエディタの例 BZ エディタ http://www.forest.impress.co.jp/library/software … 他。
流れ的にはこんな感じでどうでしょう？ (1)テンポラリテーブルに未出力のデータidをはきだす (2)テンポラリに合致するデータをcsvに出力する (3)出力後テンポラリを元にデータテーブルのoutputカラムをアップデートする
同じtestテーブルで管理しているなら複合インデックスで十分では？ explainで検証しながらやってみるしかないでしょう bが「ほぼユニーク」であるならbで先行して 絞り込みをしてサブクエリをつかって処理する手もないことはないかと。 できれば「ほぼユニーク」をなんらかの形で「ユニーク」に絞り込む 方法を考えた方がいいかもしれませんね
こうなるとおそらくもう釣りだと思うんだけど一応かいときます もし釣りじゃなければ何か参考書でもかって基礎から学習したほうがいいと思います。 <table border='1'> <tr> <th>番号</th> <th>氏名</th> <th>住所</th> </tr> <?PHP $id=(isset($_GET["id"]))?((int) $_GET["id"]):0; $con=mysqli_connect("localhost","root","password","db_test"); $result = mysqli_query($con,"SELECT `番号`,`氏名`,`住所` FROM tbl_test where `番号`={$id}"); while($row = mysqli_fetch_array($result,MYSLQI_ASSOC)){ print "<tr>"; print "<td>".htmlspecialchars($row["番号"])."</td>"; print "<td>".htmlspecialchars($row["氏名"])."</td>"; print "<td>".htmlspecialchars($row["住所"])."</td>"; print "</tr>"; eof; } ?> </table> 前回は<tr>の位置がまちがってました。 ちなみに、削除するときは DELETE FROM tbl_test where `番号`={$id} で削除することになります
ちなみにこんな感じ create table hogehoge ( test1 char(11) DEFAULT NULL, test2 char(3) DEFAULT NULL, test3 int DEFAULT NULL, test4 char(5) DEFAULT NULL, test5 int DEFAULT NULL, test6 double DEFAULT NULL, test7 double DEFAULT NULL, test8 int DEFAULT NULL ); create temporary table tmp (data char(41)); insert into tmp values ('011010000000009　　　　　043.052927141.3446931') ,('011000000000009　　　　　043.059576141.3581841') ,('011010010000009　　　　　043.036466141.3242842') ,('011010010010009　　　　　043.038999141.3229683') ,('0110100A0020009　　　　　043.037663141.3252133') ,('0110100E0030009　　　　　043.037048141.3238143'); //ここをload処理にする？ insert into hogehoge select mid(data,1,11) ,mid(data,12,3) ,mid(data,15,1) ,mid(data,16,5) ,mid(data,21,1) ,mid(data,22,9) ,mid(data,31,10) ,mid(data,41,1) from tmp; //表示 select * from hogehoge;
MySQLから削除するのは難しいのでは？ 実行するトリガーとなるプログラム側で処理するのがよろしいかと。 コマンドラインであればシェルやバッチで、プログラム的にであれば phpなどで・・・
my.cnfなど設定ファイルで調整してください
そもそもLIKEでマッチさせようというなら最初から わけずにつなげておけばいいのでは？ 完全一致をねらうならカラムをわけても悪いとはいわないですが よほどローカルな区分けでなにかを管理しない限り 番地まで一致するような集計が必要になるとは思えませんが？ （たとえば番地ごとにある電柱の数を集計するとかそのレベル・・・） 都道府県、市区町村、それ以下の３くくり位がちょうどいいかと
画像などバイナリデータをDBにおくのはあまり効率的だと言えません。 検索や集計ができるわけでもないので 適当なidを数値でもって、ファイルとしておいておき、DBにはそのIDに ひもづくデータをを格納しておくくらいで十分だとおもいますが。
mysqlマニュアルではgeospatial featureと総称されるようです。この章全部参照するのが一番かな。あんまり利用者がいないのか、日本語訳はされていない。 http://dev.mysql.com/doc/refman/5.1/ja/spatial-e … http://dev.mysql.com/doc/refman/5.1/ja/opengis-g … 次の章あたりから、実際の例文が出てくる。カラムタイプは geometry になるらしい。 http://dev.mysql.com/doc/refman/5.1/ja/creating- …
単純にifで場合分けするだけでしょうね、以下例 //元データ create table tbl (id int not null auto_increment primary key,data varchar(30),flg tinyint not null); insert into tbl(id,data) values(1,'a'),(2,'b'),(3,'c'); select * from tbl; id,data,flg 1,a,0 2,b,0 3,c,0 //id=4,dataを'x'を挿入 insert into tbl (id,data) values(4,@data:='x') on duplicate key update data=if(flg=0,@data,data); select * from tbl; id,data,flg 1,a,0 2,b,0 3,c,0 4,x,0 //id=4のdataを'y'に更新、ただしflgが0の場合→flgは0なので更新 insert into tbl (id,data) values(4,@data:='y') on duplicate key update data=if(flg=0,@data,data); select * from tbl; id,data,flg 1,a,0 2,b,0 3,c,0 4,y,0 //id=4のdataを'z'に更新、ただしflgが1の場合→flgは0なので更新されない insert into tbl (id,data) values(4,@data:='z') on duplicate key update data=if(flg=1,@data,data); select * from tbl; id,data,flg 1,a,0 2,b,0 3,c,0 4,y,0
普通考えれば、記事IDには所有者がいて所有者IDでひもづいており 所有者もしくは管理者以外が特定の記事を編集することはできないですよね ＞「◯◯のアカウントで投稿された◯◯番の記事を削除する」 というロジックはないです 条件を二重定義しなくても記事番号だけ指定すれば済みます 「○○番の記事を削除する」だけ指定して WHERE 記事ID = 消したい記事ID AND 所有者ID = 私のID となるなので、該当するレコードの記事IDと所有者IDが合致しなければ ヒットしないでしょう
そもそもUPDATEをEXPLAINする必要があるかどうかはおいとくとして （一般的な環境ではエラーになる？） SELECTは単純にレコードをズバリ指定できればconstになりますが、 UPDATEは1レコードだけみればよいのではなくインデックスやユニークなどの 属性も含めて処理するからrangeになるのではないかと勝手に思っています そういうものだと思うしかないような・・・
基本的にroot - localhostの組み合わせだけで問題ないはず ３つ有効なユーザーがあるのであればそれぞれがパスワードを持っているのは仕様。 あとは同じパスワードにするか、別のにするかは運用次第。
こういうのは条件と数値の積をとってsumするのが普通です //元データ create table tbl(name varchar(10),point int,d date); insert into tbl values('A',1,'2014-01-01'),('B',2,'2014-01-01'),('C',3,'2014-01-01'),('A',1,'2014-02-01'),('B',3,'2014-02-01'),('C',2,'2014-02-01'),('A',2,'2014-03-01'),('B',4,'2014-03-01'),('C',3,'2014-03-01'); //集計 select name ,sum(point*(d between '2014-01-01' and '2014-01-31')) as `point(2014/1)` ,sum(point*(d between '2014-02-01' and '2014-02-28')) as `point(2014/2)` ,sum(point*(d between '2014-03-01' and '2014-03-31')) as `point(2014/3)` from tbl group by name:
＞ただの利用者 として、権限がどこまであるかによりますが ビューを作れるならそれが一番はやそうですね あとはどこに何が入っているか特定できないなら unionなどで処理することになりそうです
単純にunionでidの一覧をつくって それぞれをleft joinすればいいような気がしますが select t1.id,coalesce(t3.name,t2.name) as name from (SELECT id FROM hoge UNION SELECT id FROM test) as t1 left join hoge as t2 on t1.id=t2.id left join test as t3 on t1.id=t3.id
こういうのは本来日付がずらーっとならんだカレンダーテーブルをつくって それにinsert していくのが普通 また曜日は月曜日=0とした0～6（WEEKDAY関数）もしくは日曜日=1とした1～7 (DAYOFWEEK)が扱いやすい かりにこんな処理にすると //元データ create table staff(uid int,uname varchar(20)); insert into staff values(1,'田中'); create table sch1(uid int,start_time time,end_time time,d date,flg tinyint) ; insert into sch1 values(1,'9:00','22:30','2014-03-17',1),(1,'9:00','13:00','2014-03-18',1),(1,'9:00','20:00','2014-03-19',1); create table sch2(uid int,start_time time,end_time time,dateW int,unique(uid,dateW)); insert into sch2 values(1,'9:00','22:30',0),(1,'10:00','11:30',1),(1,'13:00','15:30',3); カレンダーテーブルがない場合はテンポラリで無理やりつくる こんな感じで3/17、18、20、21をそれぞれとると 3/17は両方ヒット、3/18は日付でヒット、3/20は曜日でヒットし 3/21はヒットしないことがわかる。 create temporary table sch3 select '2014-03-17' as d; select * from sch3 left join sch1 on sch3.d=sch1.d left join sch2 on weekday(sch3.d)=sch2.dateW; create temporary table sch3 select '2014-03-19' as d; select * from sch3 left join sch1 on sch3.d=sch1.d left join sch2 on weekday(sch3.d)=sch2.dateW; create temporary table sch3 select '2014-03-20' as d; select * from sch3 left join sch1 on sch3.d=sch1.d left join sch2 on weekday(sch3.d)=sch2.dateW; create temporary table sch3 select '2014-03-21' as d; select * from sch3 left join sch1 on sch3.d=sch1.d left join sch2 on weekday(sch3.d)=sch2.dateW; これをまとめて、こんな感じ create temporary table sch3 select '2014-03-17' as d; select coalesce(sch1.start_time,sch2.start_time) as s ,coalesce(sch1.end_time,sch2.end_time) as e from sch3 left join sch1 on sch3.d=sch1.d left join sch2 on weekday(sch3.d)=sch2.dateW; いちいちテンポラリテーブルを作るのが面倒であれば最初に書いた通り 10年分くらいので日付を並べたカレンダーを最初につくっておいて where カレンダ.d='指定日' 的な処理をすればいい 仮に10年分日付つくっても所詮3600件程度、100年分作っても3万ちょいなので 対して重い処理にはならない
文法エラーで悩んだときはマニュアルで構文を確認しましょう。 http://dev.mysql.com/doc/refman/5.1-olh/ja/delet … DELETEの複合テーブル構文は 　DELETE [LOW_PRIORITY] [QUICK] [IGNORE] 　　tbl_name[.*] [, tbl_name[.*]] ... ←DELETEとFROMの間にテーブル名が必要 　　FROM table_references 　　[WHERE where_condition] となっていますので、 　DELETE a 　FROM piyo AS a 　LEFT JOIN hoge AS c ON a.hoge_id = c.hoge_id 　WHERE c.x_id = 13 と書けばいいかと。
//元データ create table hoge(id int not null primary key,kbn int,name varchar(10),score int,flg tinyint,d date); insert into hoge values(1,1,'a',100,1,'2014-03-10'),(2,1,'b',90,1,'2014-03-11'),(3,1,'c',80,1,'2014-03-12'),(4,1,'d',90,1,'2014-03-13'),(5,1,'e',80,1,'2014-03-10'),(6,1,'f',80,1,'2014-03-11'),(7,2,'g',0,1,'2014-03-12'),(8,2,'h',100,0,'2014-03-13'),(9,2,'i',100,1,'2014-03-10'),(10,2,'j',100,1,'2014-03-11'),(11,2,'k',100,1,'2014-03-12'),(12,2,'l',100,1,'2014-03-13'),(13,3,'m',100,1,'2014-03-10'),(14,3,'n',100,1,'2014-03-11'); とりあえず検索条件がかぶるので一度 (1)(2)をつかってビューを作ります。 //view作成 create view v_hoge as select * from hoge where d between curdate() - interval 1 week and curdate() + interval 1 week and flg = 1; //結果 select * ,(select count(*)+1 from v_hoge as v2 where v1.kbn=v2.kbn and v1.score<v2.score) as rank1 from v_hoge as v1 where kbn in (select kbn from v_hoge group by kbn having count(*)>=5) having (select count(*)+1 from v_hoge as v2 where v1.kbn=v2.kbn and (v1.score<v2.score or v1.score=v2.score and v1.d>v2.d) ) <=5 order by kbn asc,rank1 asc; (1)は「何の」一週間以内なのか不明。たぶん今日の？ また一週間とは前も先もあるので命題が中途半端 (4)と(6)のフォーマットはsql側でやらずに出力側のプログラムでやるべき （キャストや結合が無駄なため） (5)はkbnごとに日付がユニークでないと順位が決定できない (7)は意味不明 ５個データがないのに5位ってどういうこと？しかもkbnまでnullじゃ何を示しているか？
#1さんの通りですが 効率は変わりませんがこの場合はbetweenの方がよいかもしれません select user_id from tbl_a group by user_id having count(*) between 2 and 5;
＞ユニークな値(10桁ほどの英数文字列)を持ったデータを、DBに大量に登録したい といっているのに ＞1件ずつユニークかのチェック しているのはなぜですか？ 元データはユニークである保証がない、つまり 「ユニークな値を期待したデータ」でしかないということですか？ とりあえずデータを取り込むテーブルのユニークな値を保持するカラムに unique属性(プライマリキーを含む)を設定するところからですね 一つ一つのデータのユニークをプログラム的に検証するのは 無駄が多いのでお勧めできません それと、ユニークではないデータ（ダブったデータ）が来た時には 無視するか、上書きするかを決めないといけません。 無視する場合は、INSERT IGNORE INTO 構文 上書きする場合は、INSERT ON DUPLICATE KEY UPDATE 構文 を利用します。 http://dev.mysql.com/doc/refman/5.1/ja/insert.html http://dev.mysql.com/doc/refman/5.1/ja/insert-on … 場合によっては元データがCSV形式であればLOAD DATA INFILE構文 がつかえるかもしれません http://dev.mysql.com/doc/refman/5.1/ja/load-data … 元データを所定のルールで補完しながらデータを投入するのでしたら やはりINSERT構文が基本です 総合的に考えるとPDOなどの互換性をもった仕組みを利用すると 多少の環境の変化にも対応できるとおもうのでお得です またPHP+MySQLの場合はmysqliという仕組みが用意されていて オブジェクト型・手続き型というアプローチの仕方があります。 それぞれ特性がありますので、やり方は多少ためしてみてから 決めた方がよいですが、一般にオブジェクト型の方が好まれるようです。 ちなみにmysql関数（iがつかないタイプ）を利用した解説書がまだ 販売していたりしますが、内容が古いので参考にしないほうがいいでしょう データの持ち方についてはRDBの原則として正規化をしていると思いますので それに合わせてデータ投入方法を考えないといけません 一度正規化について詳しく勉強したほうがいいかもしれませんね
こんな感じでは？ //元データ create table WK(ID int not null primary key, POSTID int, DATA varchar(20), FLAG tinyint); insert into WK values(1,1,'aaaa',0),(2,1,'bbbb',0),(3,1,'cccc',0),(4,1,'dddd',0),(5,5,'eeee',0),(6,5,'ffff',0),(7,5,'gggg',0),(8,4,'hhhh',0),(9,4,'iiii',0),(10,4,'jjjj',0); //アップデート update WK as t0 inner join (select ID from WK as t1 where (select count(*) +1 from WK AS t2 WHERE t2.ID < t1.ID and t2.POSTID=t1.POSTID) >2) as t3 on t0.ID=t3.ID set FLAG=1 where t3.ID is not null; //表示 select * from WK; ※考え方 POSTIDごとにID順でランクをつけ、そのランクが2より大きいもののIDをつかって アップデートする。
select count(*) as cnt, point from tbl group by point order by cnt desc
>starttimeが2番目に大きいもの ちょっと特殊になりますがこんな感じ select * from tbl where (juchuu,keisiki) in (select juchuu,t2.keisiki from tbl as t2 inner join (select starttime,keisiki from tbl where keisiki=7745 order by starttime desc limit 1,1) as t3 on t2.starttime=t3.starttime and t2.keisiki=t3.keisiki) ここでlimit 1,1の前の「1」が2番目に大きいという意味 つまりn番目に大きいものを含むはlimit n-1,1とする 1番大きいのはlimit 0,1でもいいが、maxを使った方がらく keisikiごとに同じstarttimeがあるとは想定していません 同じものがある場合はさらに順位をつけるロジックが必要になるので
select a.* from a left join b on substring(a.url,8)=b.id where a.url REGEXP '^/color/.*' where substring(a.url,1,7)='/color/' 抽出条件はurlが'/color/'で始まるもの where句はどちらも同じ意味になりますので、 どちらかを使って下さい。 結合条件はa.urlの8文字目以降とb.idが 一致するものです。
これでよくない？ select t1.*,if(isnull(t2.mysequence),0,1) as myflg from mymagazine as t1 left join (select distinct mysequence from mymagazine order by mysequence desc limit 3) as t2 on t1.mysequence=t2.mysequence
一応、0月0日 は許容されています。 年は４桁指定で 2014-00-00 , 2013-03-00 のようになるべく省略せず指定すべきではありますが。マニュアルみるとinsert時の年月日指定フォーマットは、結構柔軟に対処されます。 where 文で比較するときは、そのような日付は、2014-00-00　であれば2013前年より後で、2014-01-01より前と解釈されます。 http://dev.mysql.com/doc/refman/5.1/ja/date-and- … 「SQL モード」でも許容されるかが変わるので、ご注意ください 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/date-and- …
２つのテーブルの相関関係がいまいちわからない なぜ２つに分けているか？ それぞれがどういうデータをもっていて どう表示したいのか簡単な例示はできますか？
＞show table status;がありました。しかしこれでは、データが本当にそのストレージエンジンを使って格納されているかどうかがわかりません。 ごめん意味がわからない これで表示されるengineがそのテーブルのエンジンですが ＞一覧表示か検索で 何を一覧表示するの？
仮に 「aaatestbbb」はヒットして「aaa[[test]]bbb」はヒットしないとして 「aaatestbbb[[test]]ccc」はどうするのでしょうか？ ヒットしなくていいなら where not カラム like '%[[test]]%' and カラム like '%test%' みたいな感じ どちらにしても前方後方一致はインデックス対象外なので スピードは期待できませんが
＞直近の1ヶ月に誕生日を迎える の定義次第ですね ・今月と誕生月が一緒の場合、今日の日付が誕生日の日付より小さい ・来月と誕生月が一緒の場合、今日の日付が誕生日の日付と同じか大きい ということでよければ、こんな感じ？ （過去１カ月も取りたいとなるともうちょい工夫が必要） //元データ create table office (birth date,name varchar(20)); insert into office values('1960-03-02','山田'),('1970-03-15','菊池'),('1980-03-22','田中'); //今日が2014-02-10の場合 SELECT office.* from office where month(@d:='2014-02-10')=month(birth) and day(@d)<day(birth) or month(@d)+1=month(birth) and day(@d)>=day(birth) order by birth asc; →山田 //今日が2014-02-28の場合 SELECT office.* from office where month(@d:='2014-02-10')=month(birth) and day(@d)<day(birth) or month(@d)+1=month(birth) and day(@d)>=day(birth) order by birth asc; →山田、菊池、田中 //今日が2014-03-02の場合 SELECT office.* from office where month(@d:='2014-02-10')=month(birth) and day(@d)<day(birth) or month(@d)+1=month(birth) and day(@d)>=day(birth) order by birth asc; →菊池、田中 //今日を調整しない SELECT office.* from office where month(@d:=curdate())=month(birth) and day(@d)<day(birth) or month(@d)+1=month(birth) and day(@d)>=day(birth) order by birth asc;
あ、以上・以下ではなくより大きい・より小さい（未満）のときは 1足したり1引いたりして調整してください
「2得点以上5得点未満の試合」はhome_scoreとaway_scoreの両カラムがという事でしょうか。 それとも自チームが「2得点以上5得点未満の試合」という事でしょうか。 両カラムならば select * from gamedata where home_score >= 2 and home_score < 5 and away_score >= 2 and away_score < 5; 自チームという事なら select * from gamedata where (h_a = 'H' and home_score >= 2 and home_score < 5) or (h_a = 'A' and away_score >= 2 and away_score < 5);
えーと、こんな感じでどうですか？ //元データ create table mytable (myCode int not null auto_increment primary key,val varchar(20)); insert into mytable(val) values('a'),('b'),('c'),('d'),('e'),('f'),('g'),('h'),('i'); //最新6件にフラグをつける select t1.*,if(isnull(t2.myCode),0,1 ) as flg from mytable as t1 left join (select myCode from mytable order by myCode desc limit 6) as t2 on t1.myCode=t2.myCode
とりあえずデータベースを作る権限はなさそうですね？ CREATE DATABASEを削除すると同時に すでに作られているデータベースを使用することを宣言してください USE すでに作られたDB; CREATE TABLE ・・・ またすでに同名のTABLEが存在する場合はまたエラーがでますので CREATE TABLE IF NOT EXISTS などの構文を使うか、そのテーブルを削除してからインポートしてください （テーブルの削除はリスクがありますので自己責任でお願いします）
＞共用サーバー系ではトリガーが使えないのは普通なのでしょうか…？ super権限ってのはいわゆるrootユーザーみたいなのですから いろんな意味で難しいのかもしれませんね 極端な権限譲与するとレンタルサーバーのまた貸しみたいなことも できちゃいますしね また高負荷がかかりそうな機能もあまり許諾してもらえないと思います いずれにしろトリガー自体はそれほど重要な機能ではないので サービス側が「プログラムで対応しろ」というのであれば それが限界なのだと考えるしかないと思います
　一つだけ、絶対にテーブルを分けておかなければいけないパターンがあります。 　一人の会員が、二つ以上のブログを持てる場合です。 　この場合、memberテーブルと、blog詳細テーブルが一対多の関係となるため、二つのテーブルが必要です。 　ブログは、金輪際、一人につき一つだと主張するのであれば、blog詳細テーブルのnoフィールドは不用です。 　memberテーブル　blog詳細テーブル共に、同じnoを使用することとして、主キーはどちらのテーブルでもnoとなり、結合するフィールドも当然noとなります。 　後者の場合において、テーブルを一つにするか二つにするかですが、・・・ 　もし、セキュリティーを考えてというのが動機であれば、テーブルは一つで良いです。 　その代わり、テーブルに対してでは無く、フィールドに対してアクセス権限を設定します。 　当然、このようにセキュリティーを強化する場合、ブログを表示するためのプログラムと、会員情報をも扱うプログラムは、別々のＩＤでデータベースにアクセスすることになります。会員情報を扱うＩＤにはテーブル全体に対する権限を許可して、ブログを表示するＩＤには、ブログ情報のフィールドのみにアクセス許可を与えておくわけです。 　ブログを扱うプログラムは、どうあがいても、会員情報にアクセスすることは出来ません。 　同じＩＤでデータベースにアクセスするのであれば、テーブルをいくつに分けようが、セキュリティーは強化されません。 　さて、不正侵入を考えます。ルートが破られれば、何をどうやっても漏洩の阻止は不可能です。 　アクセスするためのＩＤを分けてあれば、最悪、ブログ情報用のＩＤに関しては破られても、会員情報へのアクセスは出来ません。漏洩するのは、ブログ情報だけです。会員情報が破られたら、テーブルを分けていようが同じテーブルだろうが一緒のことで、全データが漏洩します。 　また、データの保全という意味では、どうせ、データベースが壊れたら、テーブルをいくつに分けていようがデータベース丸ごと壊れますから、一緒のこと。　 　となると、検討するのは、どちらの方が保守管理が楽になるかです。 　もう一つの検討課題は、テーブルを分けると、会員情報全体を集約する時に、テーブルの結合が余計に発生します。 　また、テーブルを分けた時には、memberテーブルにある会員にのみ、blog詳細テーブルの情報を作るように、整合性を保証する必要があります。普通は、テーブル定義の時に、参照性制約を定義して保証するのですが、ＭｙＳＱＬでは、ファイル形式の選択によって、之が出来るかどうかが変わるところには注意が必要です。 　後は、動機と環境によりますね。 　シンプルさを考えるなら（当然、保守性はシンプルなのが一番です。）、わたしなら、１テーブルにします。
普通にできると思いますが、varcharなどは可読性のあるデータの方がよいので 改行みたいなものはむしろはじいた方がいいと思いますが
limit ? offset ? に数値を入れるときだけは、必ず、bindValueでPDO::PARAM_INT　の型指定必須です。 ここだけは、 "1" と入れると、syntax error になるので。 それ以外の所では、既に回答があるように、暗黙の型変換があるので、ほぼ、PDO::PARAM_STRで問題ありません。
わざわざキーワードと例文の組み合わせをつくらなくても 例文だけあげてあれば全文検索でマッチさせることはできそうですね むしろそうではないならthisやwearsもマッチするので bigとshoesだけ抜き出すロジックが必要です また複数形や三単現やら微調整はどうするのでしょうか？ shoesはshoeとwearsとwearを同一とみなすならなにか調整が必要
windows8でXAMPPを利用しています。 ただ、XAMPPのサイトから落としてきたわけではなくeclipseのサイトからPHPバージョンの最新版をダウンロードしてそれに付属しているXAMPPを利用しています。
せっかくなので軽く書いてみましょう まず元になるデータを羅列します （元テーブル） ID,英単語ID,英単語,意味ID,意味,分類ID,分類,品詞ID,品詞,難易度 1,1,eye,1,目玉,1,物体,1,名詞,2 2,1,eye,1,目玉,2,体,1,名詞,2 3,1,eye,2,視力,3,能力,1,名詞,2 4,2,hand,3,手,1,物体,1,名詞,3 5,2,hand,3,手,2,体,1,名詞,3 6,2,hand,4,拍手,4,行為,1,名詞,4 これを正規化します （正規化後） 英単語テーブル 英単語ID,英単語 1,eye 2,hand 意味テーブル 意味ID,意味 1,目玉 2,視力 3,手 4,拍手 英単語_意味テーブル 英単語ID,意味ID 1,1 1,2 2,3 2,4 分類テーブル 分類ID,分類,品詞ID 1,物体,1 2,体,1 3,能力,1 4,行為,1 意味-分類テーブル 意味ID,分類ID 1,1 1,2 2,3 3,1 3,2 4,4 品詞テーブル 品詞ID,品詞 1,名詞 これをSQLで書くと CREATE TABLE `英単語テーブル`(`英単語ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`英単語` VARCHAR(50),UNIQUE KEY(`英単語`)); CREATE TABLE `意味テーブル`(`意味ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`意味` VARCHAR(200),`分類ID` INT,`難易度` INT,UNIQUE KEY(`意味`)); CREATE TABLE `英単語_意味テーブル`(`英単語_意味ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`英単語ID` INT,`意味ID` INT,UNIQUE KEY(`英単語ID`,`意味ID`)); CREATE TABLE `分類テーブル`(`分類ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`分類` VARCHAR(200),`品詞ID` INT,UNIQUE KEY(`分類`)); CREATE TABLE `意味_分類テーブル`(`意味_分類ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`意味ID` INT,`分類ID` INT,UNIQUE KEY(`意味ID`,`分類ID`)); CREATE TABLE `品詞テーブル`(`品詞ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,`品詞` VARCHAR(20),UNIQUE KEY(`品詞`)); //データの追加 SET @a='eye',@b='目玉',@c='物体',@d='名詞',@e=2; INSERT IGNORE INTO `品詞テーブル`(`品詞`) VALUES(@d); INSERT IGNORE INTO `分類テーブル`(`分類`,`品詞ID`) SELECT @c,`品詞ID` FROM `品詞テーブル` WHERE `品詞`=@d; INSERT IGNORE INTO `意味テーブル`(`意味`,`分類ID`,`難易度`) SELECT @b,`分類ID`,@e FROM `分類テーブル` WHERE `分類`=@c; INSERT IGNORE INTO `意味_分類テーブル`(`意味ID`,`分類ID`) VALUES((SELECT `意味ID` FROM `意味テーブル` WHERE `意味`=@b),(SELECT `分類ID` FROM `分類テーブル` WHERE `分類`=@c)); INSERT IGNORE INTO `英単語テーブル`(`英単語`) VALUES(@a); INSERT IGNORE INTO `英単語_意味テーブル`(`英単語ID`,`意味ID`) VALUES((SELECT `英単語ID` FROM `英単語テーブル` WHERE `英単語`=@a),(SELECT `意味ID` FROM `意味テーブル` WHERE `意味`=@b)); 最初のset行を SET @a='eye',@b='目玉',@c='体',@d='名詞',@e=2; SET @a='eye',@b='視力',@c='能力',@d='名詞',@e=2; SET @a='hand',@b='手',@c='物体',@d='名詞',@e=3; SET @a='hand',@b='手',@c='体',@d='名詞',@e=3; SET @a='hand',@b='拍手',@c='行為',@d='名詞',@e=4; SET @a='cat',@b='猫',@c='動物',@d='名詞',@e=1; SET @a='cat',@b='連結する',@c='動作',@d='動詞',@e=5; のようにして順次INSERT を繰り返します。 場合によってはプロシージャやファンクションにしてもいいでしょう。 結果表示はこんなかんじ SELECT T1.`英単語ID`,T1.`英単語`,T2.`意味ID`,T3.`意味`,T4.`分類ID`,T5.`分類`,T5.`品詞ID`,T6.`品詞`,T3.`難易度` FROM `英単語テーブル` AS T1 INNER JOIN `英単語_意味テーブル` AS T2 ON T1.`英単語ID`=T2.`英単語ID` INNER JOIN `意味テーブル` AS T3 ON T2.`意味ID`=T3.`意味ID` INNER JOIN `意味_分類テーブル` AS T4 ON T3.`意味ID`=T4.`意味ID` INNER JOIN `分類テーブル` AS T5 ON T4.`分類ID`=T5.`分類ID` INNER JOIN `品詞テーブル` AS T6 ON T5.`品詞ID`=T6.`品詞ID` ORDER BY `英単語ID`,`意味ID`,`分類ID`,`品詞ID`;
詳しく検証していませんが、単にダブりを表示しないだけなら SELECT DISTINCT カラム FROM テーブル で十分かと
単にphpMyAdmin上の文字化けだけなら $cfg['DefaultLang'] $cfg['DefaultConnectionCollation'] $cfg['DefaultCharset'] あたりの設定を調整してみてはいかがですか？
古い人間なので現状にあっていなかも知れませんが経験より。 このシステムはオンラインで、月次にバッチでメンテが出来るような環境であると想定しました。また、DBMSの物理的なキャッシュなどは考慮していません。 (1)削除フラグを使う この目的は「消しちゃったけど戻したい」が主たる目的です。この条件でなければ、また、大量の削除でなければ、オンラインでのdeleteでも良いと思います。レコードが減る分、バックアップが楽になります。 (2)カラムに入っている内容を削除する nullか空白でupdateするということですよね。インデックスにレコードが残るという観点ではメリットはないでしょう。検索において、削除されたレコードは取得されないので関係ないと思います。 (3)オンラインでの削除 deleteすることによってレコードが減ればそれだけインデックスが軽くなり(なれば)検索は早くなる可能性があります。ただし、これは非常に稀です。 (4)性能 「削除フラグを使う」でdeleteで良いと書きましたが実は「削除フラグ」という考え方は正しいかも知れません。 インデックスが張られているでしょうからこれらも更新の対象になります。 昔(10年前)では、I/Oは大体10ms/1件といった感じです。これは、update、delete、insert、インデックス更新が該当します。 例えば、3個のインデックスがあるテーブルで考えてみます。「削除フラグ」を使う場合、削除されたレコードを読み込まないために、すべてのインデックスに削除フラグが関連するはずです。 削除フラグを立てて他の列を空白等でupdateする場合、 [1]select　for　update　;1行確定 [2]update　;1行更新 [3]インデックス更新　;インデックス1 [4]インデックス更新　;インデックス2 [5]インデックス更新　;インデックス3 の5回のI/Oが発生します。約50msかかる計算です。 また、deleteでは、 [1]select　for　update　;1行確定 [2]delete　;1行削除 [3]インデックス更新　;インデックス1 [4]インデックス更新　;インデックス2 [5]インデックス更新　;インデックス3 の5回のI/Oが発生します。約50msかかる計算です。 オンラインでの性能面から見るとどちらも同じようになります。 結局はインデックス更新にも引っ張られますので、オンラインでの処理ではどちらでも良いということになります。 オンライン以外の性能ではdeleteした方がレコード少なくなるだけメリットが有るように感じます(レコードは少ないに越したことな無いです)。 長々と書きましたが、私はユーザ要件によって削除フラグを使うか否かを決めていました。 間違えた削除を戻す必要がないならdeleteで良いと思います。 メンテについてですが、容量に応じて色々な方法が考えられます。 件数が多くなるようでしたらファイルに吐き出して、削除レコードを削除し、LOADERで入れ込むことも考えられます。 MySQLはロックリソースが必要でしょうから(詳しく知りません)、想定件数で仕組みを考えるべきと考えます。
質問1： 　BOOLEAN型(TRUE/FLASE型)があるDBの場合はこれを 　使ったほうが良いですが、mysql には無いので数値で代替 　するしかありません。 　0 の意味を忘れないように (0 は削除・未削除のどっちだっ 　け？とならないように) 注意してください。 質問2： 　検索は速くなりません。しかも登録 (INSERT/UPDATE) が 　遅くなるので付けないほうがマシです。 　 　何故 検索が速くならないのか、何故 登録が遅くなるのかに 　ついては、きちんとインデックスの仕組みを学習してください。 　良いシステムを作るには、きちんと仕組みを知ることが必須 　です。 質問3： 　たいていの場合は SQL のほうが速いでしょう。 　DB関連の処理は『なるべくまとめて処理する』『不要なデータ 　は取得しない』ことが処理速度アップの基本です。
別回答があるとおり、やってできないことはありませんが 連番でデータをつける意味はあるのでしょうか？ データを削除した場合結局抜け番が発生して連番状態はくずれます。 連番を前提に設計をすると思わぬ落とし穴があるかもしれません。 通常データの投入順をみるだけならauto_incrementされたカラムを みればいいので、c1,c2の組み合わせを取ることは無駄だと思います
　・where句をつけると、当然、where内の条件を解決しないといけませんので、統計情報のみで答えを返すことが出来ません。基本的には、テーブルを見に行くことになります。ただし、where sure_id=5において、該当のテーブルのsure_id列にインデックスがついていれば、インデックススキャンのみで終わる可能性が高いです。 　・count(*)とcount(name)の間で、早い遅いはありません。が、この二つ、ｎｕｌｌの扱いにおいて関数の意味が違うので注意してください。普通は、この意味で使い分けをします。 　count関数は、基本的に、nullを数えません。 　count(*)だと、全列nullの行のみが数えない対象となります。 　しかし、count(name)とすると、name列がnullのデータは数えてもらえなくなります。 　name列にnullが入らなければ、count(*)とcount(name)は等価ですが、nullが許されると意味が違うというです。
teratermを利用しているなら、サーバー上にファイルを作っておいて ファイルメニューのSSH SCPで簡易的なダウンロードができます
1レコードにどのくらいの容量があるかにもよりますが csvを一度テンポラリに保存して 重複チェックなどはテーブル同士のリレーションでおこない エラーのものはエラーテーブルに吐きだして削除し 残ったテンポラリのテーブルを結合しながら他のユーザーテーブルなどに 吐きだしていくとそれなりに速くなると思います
単にためておいて要求に応じて表示だけすればいいのであれば TEXTやBLOBあたりになるでしょう 容量が多いのであればLONG系の拡張が必要です。 また保管された内容から文字列の検索が必要な場合は char、varcharなど検索性の高い型が必要ですが、容量には制限があります 全文検索を想定する場合はデータ型だけでなくエンジンの選定に注意が必要です
こんなかんじ //元データ create table tbl (日付 date,入出金 int); insert into tbl values('2014-02-04',1000000),('2014-02-10',-100000),('2014-02-25',+200000),('2014-02-27',-10000); //集計 select t1.日付,sum(t2.入出金) as 残高 from tbl as t1 inner join tbl as t2 on t1.日付>=t2.日付 group by 日付;
ざっと調べてみました どうやらphpMyAdminのバージョンによる仕様のようですね 一度idカラムを削除し、phpMyAdminの構造タブから 1個のカラムを追加する（追加位置は先頭？適当に）として実行し 名前をid、データ型をintとし、nullにチェックをせず、 A_I（オートインクリメント）にチェックをいれた上で保存してください （たぶんその時点で主キー属性がついていると思います）
ちなみにこんな感じ？ $sql="・・・"; $temp=array(); $datas=array(); foreach ($conn->query($sql) as $row) { $data=Array ("商品ID" =>$row["商品ID"],"重量" =>$row["重量"]); if(!in_array($data,$temp)) $temp[]=$data; $key=array_search($data,$temp); $datas[$key]["色"][$row["色"]]=array("価格"=>$row["価格"]); } print_r($datas);
MySQLじゃないからじゃないでしょうか？ MySQL Server Expressなんて聞いたことが無いのですがSQLServerExpressの間違いじゃないでしょうか？ もちろんそれもMySQLではないのですが・・・
user_custom_tableに対して (relational_id,custom_name)にユニークにするか (relational_id,custom_name,custom_value)にユニークにするかで若干書き方が違います 仮に、データ管理がしやすい前者だとすると （所定のユーザーが一つの同名のカスタム名を複数もてないとする） 先にカスタムテーブルで条件を抽出した上でユーザーテーブルの 抽出条件とすればいいでしょう SELECT user_table.* FROM user_table where user_table in (select relational_id from user_custom_table WHERE 0 or (custom_name = 'CompanyAddress' and custom_value LIKE '東京都%') or (custom_name = 'Birthday' and custom_value < '2001/1/1') or (custom_name = 'CompanyName' and custom_value LIKE '%○○%') group by relational_id having count(*)=3 //custom_nameを連結した数 )
select 姓,名,年齢 from テーブル名 INTO OUTFILE "ファイル名.csv" fields terminated by ','; のようにselect文の列名指定を使えばいいのでは？ 詳細は参考URLを 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/select.html
本質的にidというのはレコードを特定するためのものなので インデックスが利いていれば基本的にスピードの差はほぼでないでしょう ＞apple → 0 ＞orange → 1 ＞banana → 2 実務上idに意味のある単語などを用いることは危険です。 appleとしたものの実はgreen appleだったりする場合もあるでしょう idを意味のない数字でもっておけばあとからいくらでも修正が利きます ＞phpMyAdminなどでレコード表を確認した場合、何のidかわかりにくいです リレーションの設定で外部キー制約をつけておけば、所定のコードをクリックして リンク先へ飛ぶことができますよ （仮に上記の例であれば0をクリックしたときappleのデータを表示させられる） ちなみにidに0を利用するのはお勧めできません 1以上の整数を利用してください （他のプログラムとの組み合わせの際,0は特別な意味を持つケースが多いため、 たとえばfalseだったりnullだったり,空文字だったりする）
テーブルをまたがったインデックスは貼れないのでその辺の問題でしょうか 本質的には同じテーブルで管理するしか解決方法はないかもしれません 地道にexplainでチェックしながらindexの利き具合をテストしてみてください
入力フォームは送信前に確認画面をだすはずです 確認画面で表示されたのものと保存されるものが異なれば明らかにバグです きちんとやるなら確認画面時点でデータの整合性をとるべきです
＞プライマリーキーはつけといたほうがいいでしょうか？ 普通付けますが、必須ではないです。 ＞プライマリーキーがないとプライマリーキー以外のカラムをselectするとき遅くなるのでしょうか？ それは関係ありません。 ＞プライマリーキーのカラム名はid以外でもいいですか？ もちろんOKです。 ＞phpmyadminからindexを他のカラムにつけた場合はそのカラムにindexつけた後に追加された行も自動的にindexがついていますか？ indexは、カラムや複数カラムに付く物です。行の挿入削除変更でindexは自動的に更新されます。
rollupするとよいです select ym,sum(score) as sumscore from data where code=10020 group by ym with rollup
>「OR検索」が多発するため、索引がうまく使用されず、件数が増えると >すぐに遅くなると思います。 多分その通りと思います。 特に、指定無し（あるいはすべて指定）があるために頭が痛いことになります。 ⇒指定なしの場合もいちいち検索条件に指定するのか、しないのか。 また、名称などのあいまい検索が含まれることも考慮しておいたほうがいいと思います。 例えば店名のあいまい検索など。 >index_merge である程度、効果があるのでしょうか。 条件が多すぎると、期待薄としか思えませんが。 対策としては、 条件検索用テーブル（インデックス付き）と 情報格納用テーブル（プライマリキーのみ）を分けるというのも ひとつの方法かと思います。 例）レストラン レストラン情報テーブル　 レストランＩＤ、レストラン名、ジャンル（和洋中・・・）、地域・・・・ レストラン名検索テーブル レストラン名、レストランＩＤ ジャンル検索テーブル ジャンル、料理種別、レストランＩＤ 地域検索テーブル 地域（必要に応じて複数階層）、レストランＩＤ ・・・ 検索画面 店名：（指定無し） 料理長名：（指定無し） ジャンル：北京料理、上海料理にチェック 料理種別(ジャンルに従属)：ラーメン以外の全部にチェック 都道府県：東京都を選択 市区町村：千代田区、江戸川区にチェック 地域：すべてを選択 営業時間区分：（指定無し） 朝昼夜区分：（指定無し） 客単価：千円未満、二千円未満、三千円未満を選択 ・・・ 検索方法（条件が指定されたところだけinner joinで条件検索用テーブルを追加。） select * from レストラン情報テーブル tx inner join ジャンル検索テーブル t2 on tx.レストランID = t1.レストランID and t2.ジャンル in (北京料理,上海料理) and t2.料理種別 in (・・・) inner join 住所検索テーブル t3 on t3.都道府県 in (東京) and t3.市区町村 in (千代田区,江戸川区) ・・・・ /* inの中の漢字でかいたところは、おのおのに相当するコード */ といった感じ。
はて？おかしいですね サブクエリの部分 select sure_id,max(dt) from bbs group by sure_id だけ実行すると 1 2014-01-04 19:19:45 2 2014-01-12 01:37:03 5 2014-01-04 18:30:47 6 2014-01-03 19:02:26 が返ってきますよね？ であればそれで絞り込んでいるので重複がでるはずがないのですが・・・ （完全にスレッド番号と日時が同じであればダブるのでその場合は distinctするなりする必要はあるかも） なにか特殊な処理を別途施していたりしませんか？
訂正： 先ほどの回答で、>= はすべて、> が正しいです。 追記： 回答後、前の方の回答を再度見てみました。 直前の回答で「補足」としたところに書いた内容から、 where starttime <= reng * 60 and endtime >= (reng + 1) *60 を where starttime < reng * (60 + 1) and endtime > reng *60 にすればいいのじゃないかな？ って感じでしたが、詳細は未確認。
＞MyISAMの違うテーブルに同時アクセスできるのでしょうか？ テーブルが異なればどのエンジンでも同時アクセスは問題ないとおもいます ＞2chのようにスレッド掲示板にしたいのですが、テーブルは2つで作れると考えました（スレッドとレス）スレッド番号でレスをまとめるやり方です ＞このような1つのテーブルでレスをまとめた場合、複数のカラムにindexをつけると将来100万行とかになっても軽快に動きますか? テーブルは1個で管理してもいいかもしれません。 親文書がなければスレッドだと判断できるので ただ古いログはパフォーマンスを下げるだけなので 古いデータや所定の上限数までいったデータをdat落ちさせる仕組みを作った方が よいかもしれませんね
こんな感じです select clm2 from test where clm1 in(2,4,6) group by clm2 having count(distinct clm1)=3
いくつか見えていない要件がありますので以下にサンプル的に書いてみます。 ＜業務の手順＞ (1)お問い合わせフォームまたは電話にてお申込み連絡を承ります。サービスの利用が可能かを確認致します。 ここで基本的な会社の情報をいただきます。メールにて送信。 ↓ (2)メール確認後、ご訪問、電話にてご説明。 弊社担当よりサービスのご案内・利用方法についてご説明させて頂きます。 ↓ (3)クライアントがサービス利用と判断された場合は利用に必要な項目を確認、取得します。 ↓ (4)サービス利用時に登録テーブルを参照（他）を行う。 ＜方法１＞　仮登録も本登録も同一テーブルで管理 登録テーブル　登録区分　0:仮登録/1:本登録/9:本登録しない(退会とかも必要なはずですが) (1)登録テーブルに登録区分0で基本的情報を登録 (2)登録テーブルの情報更新：登録区分0のまま、更新処理。または、登録区分9に変更。 (3)登録テーブルの情報更新：登録区分1に変更。 　このとき未入力データがあってはいけない項目の未入力チェックを行う。 　（プログラムでチェックしないとやりにくい） (4)登録テーブルを参照（登録区分1のみ） ☆仮登録や本登録した件数が増えると、(4)のときの処理が遅くなる。また、管理しにくい。 ⇒本登録したデータだけ別にすると（方法２） ＜方法２＞　本登録したデータは別テーブルで管理 仮登録テーブル　登録区分　0:仮登録/9:本登録しない 本登録テーブル　登録区分　1:本登録(退会とかも必要なはずですが) (1)仮登録テーブルに登録区分0で基本的情報を登録 (2)仮登録テーブルの情報更新：登録区分0のまま、更新処理。または、登録区分9に変更。 (3)仮登録テーブルの情報削除 　　本登録テーブルの情報登録 　このとき未入力データがあってはいけない項目の未入力チェックを行う。 　（本登録テーブルにNot Nullなどの制約を付けるだけでもチェック可能。） (4)本登録テーブルを参照 ☆仮登録件数が増えると、(2)のときの処理が遅くなる。また、管理しにくい。 ⇒本登録しないデータだけ別にすると（方法３） ＜方法３＞　本登録したデータも本登録しないとなったデータも別テーブルで管理 仮登録テーブル　登録区分　0:仮登録 本登録テーブル　登録区分　1:本登録(退会とかも必要なはずですが) 登録取止テーブル　登録区分　9:登録しない ※登録区分は、なくてもいいですが。 (1)仮登録テーブルに登録区分0で基本的情報を登録 (2)仮登録テーブルの情報更新：登録区分0のまま、更新処理。 　または、仮登録テーブルの情報削除＆登録取止テーブルの情報登録 (3)～(4)は同じ ☆過去に仮登録から本登録あるいは、登録しなかった履歴がほしい ⇒登録履歴テーブルを作って仮登録テーブル削除時にコピーを残す等。 ★ポイント 仮登録も登録の一つとして同一テーブルにもたすか、 仮登録はあくまで登録されていない状態として、別テーブルにおいておくか。 また、仮登録のまま放置されているデータをどうするのか？ （一定期間たったら消すとか考えておかないと無駄なデータが溜まります。） また、サーピス利用の終了（退会）や終了後の再加入はどうするのか？
>この商品の価格や在庫数の1年分（365日分）の履歴をデータベースに記録したいのですが、通常はどのような設計になるのでしょうか？ 例えば、 価格： 価格テーブル 商品コード、適用開始日、価格　 （適用終了日はあっても可：通常は次の適用開始日の前日なのであまり持たない） ※価格が取引先によってまちまちな場合は、価格テーブルに取引先コードがはいっていたり・・・。 在庫： あまり、日単位の在庫数を持っているのを見たことがない。 元帳テーブル 商品コード、（在庫場所）、年月、月初在庫数 入出庫テーブル 年月日、（入出庫場所）、商品コード、入出庫数 入庫と出庫別々で持つため最大で２レコード持つ。 ※毎日の在庫は、上記２テーブルより集計。 ★目的によってどういうテーブルを用意するかは変わってきておかしくないので、 例えば、在庫の適正水準算出のために必要な帳票専用のテーブルとして、 年月日、商品コード、在庫数のテーブルがあってもおかしいとは言いませんが、 このテーブルは更新するのが面倒なんです。 ⇒例えば、過去日付の入庫を訂正したら・・・その日以降の全データを修正しないといけません。 注：どこまで管理しているかにもよります。 質問文の内容では、入庫数や出庫数は管理していない、単に一日の終わりに在庫数を入力しているだけ とも考えられます。 これなら、年月日、商品コード、在庫数のテーブルでいいと思われます。 （というより他の持ち方ができない） データベースを分けるかどうかは、どちらでもいいでしょう。 商品属性なので、商品データベースに含めてもいいし、 在庫属性なので、在庫データベースを別に作ってもいいし、 データベースの容量との関係で問題がなければわかりやすいと思うほうでいいでしょう。
そのページがリンクで辿れるか否かが重要です。 url が動的(?queryを使う)、静的(通常path_infoなどでページ切り分けしてる)に関わらず、 検索エンジンに収集してほしいページがトップページからリンクで辿れていれば、そのページ内キーワード（タイトルや<h1>などの強調系タグで括られた単語）で引っかかってくるようになります。 リンクで辿れないページは、収集されませんので、検索に引っかかることはありません。 つまり、form からキーワード入力または、選択して、ボタンをクリックして初めて表示されるページや、JavaScriptを実行後に表示される情報は、検索エンジンに収集されません。
改行は\nですよ
特に違いはありません。そのままで大丈夫です。
商品B－商店３の価格差は 2800 - 2500 なので300になる気がしますが・・・。 それで良いのなら、下記の様なSQLでよろしいかと。 ---------------------------------------- SELECT a.価格 - b.価格 AS 価格差, a.商品ID AS 商品名, a.商店ID AS 商店 FROM 対象テーブル a INNER JOIN 対象テーブル b ON (a.商品ID = b.商品ID AND b.商店ID = '商店１') WHERE a.商店ID <> '商店１' AND a.履歴 = (SELECT MAX(履歴) FROM 対象テーブル c WHERE a.商店ID = c.商店ID AND a.商品ID = c.商品ID) AND b.履歴 = (SELECT MAX(履歴) FROM 対象テーブル d WHERE b.商店ID = d.商店ID AND b.商品ID = d.商品ID) ORDER BY a.価格 - b.価格 DESC; ---------------------------------------- a, b, に対して、それぞれ、商店IDと商品IDが同じものの中で履歴が最大の行だけを抽出しています。 同じ事は EXISTS 句を使っても表現できます。 ---------------------------------------- SELECT a.価格 - b.価格 AS 価格差, a.商品ID AS 商品名, a.商店ID AS 商店 FROM 対象テーブル a INNER JOIN 対象テーブル b ON (a.商品ID = b.商品ID AND b.商店ID = '商店１') WHERE a.商店ID <> '商店１' AND NOT EXISTS (SELECT * FROM 対象テーブル c WHERE a.商店ID = c.商店ID AND a.商品ID = c.商品ID AND a.履歴 < c.履歴) AND NOT EXISTS (SELECT * FROM 対象テーブル d WHERE b.商店ID = d.商店ID AND b.商品ID = d.商品ID AND b.履歴 < d.履歴) ORDER BY a.価格 - b.価格 DESC; ---------------------------------------- こっちは a, b, に対して、それぞれ、商店IDと商品IDが同じでそれより履歴が大きな行が存在しないものだけを抽出しています。 結果として、商店IDと商品IDが同じものの中で履歴が最大の行を取出す事になり、前のSQLと同じ意味になります。 また、サブクエリーで絞り込んでしまい、それを INNER JOIN する方法も有りますね。 ---------------------------------------- SELECT a.価格 - b.価格 AS 価格差, a.商品ID AS 商品名, a.商店ID AS 商店 FROM ( SELECT * FROM 対象テーブル c WHERE 商店ID <> '商店１' AND NOT EXISTS (SELECT * FROM 対象テーブル d WHERE c.商店ID = d.商店ID AND c.商品ID = d.商品ID AND c.履歴 < d.履歴) ) a INNER JOIN ( SELECT * FROM 対象テーブル e WHERE 商店ID = '商店１' AND NOT EXISTS (SELECT * FROM 対象テーブル f WHERE e.商店ID = f.商店ID AND e.商品ID = f.商品ID AND e.履歴 < f.履歴) ) b USING (商品ID) ORDER BY a.価格 - b.価格 DESC; ---------------------------------------- http://gihyo.jp/dev/serial/01/sql_academy2/000901 http://gihyo.jp/dev/serial/01/sql_academy2/000902 http://codezine.jp/article/detail/907
「商品ID」カラムの値が「商品A」や「商品B」で、「商店ID」カラムの値が「商店１」や「商店２」なのでしょうか？ 少し違和感が有りますが、それは置いておいて・・・。 「商店１」以外の行を、同じ商品IDの「商店１」の行と結合して、価格の差を取れば良いかと。 例) ------------------------------------ SELECT a.価格 - b.価格 AS 価格差, a.商品ID AS 商品名, a.商店ID AS 商店 FROM 対象テーブル a INNER JOIN 対象テーブル b ON (a.商品ID = b.商品ID AND b.商店ID = '商店１') WHERE a.商店ID <> '商店１' ORDER BY a.価格 - b.価格 DESC; ---------------------------------------- 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/join.html
＃１ですが間違いありました。セミコロンの前を訂正 select sum(t2.num) from t1, t2, (select t1_id, max(id) as max_id from t2 group by t1_id) t2w where t1.name = 'aaa' and t1.id = t2w.t1_id and t2w.max_id = t2.id ; でした
教科中の順位とその教科のレコード数を1回で取得するなら、下記の様にSELECT句内のサブクエリを一つ追加すれば良いだけです。 ---------------------------------------- SELECT Name, Kyouka, Score, (SELECT COUNT(*) + 1 FROM table1 b WHERE b.Score > a.Score AND a.Kyouka = b.Kyouka) AS rank, (SELECT COUNT(*) FROM table1 c WHERE a.Kyouka = c.Kyouka) AS count FROM table1 a WHERE ID = '10001' ORDER BY Kyouka, Score DESC; ---------------------------------------- また、上記の様に教科をサブクエリ内の結合条件で絞り込んでやると、WHERE句の条件を変えるだけで色々な絞込みが可能です。 例) [国語の全データを取得] ------------- SELECT Name, Kyouka, Score, (SELECT COUNT(*) + 1 FROM table1 b WHERE b.Score > a.Score AND a.Kyouka = b.Kyouka) AS rank, (SELECT COUNT(*) FROM table1 c WHERE a.Kyouka = c.Kyouka) AS count FROM table1 a WHERE Kyouka = '国語' ORDER BY Kyouka, Score DESC; ---------------------------------------- 性能が気になるようでしたら、下記の様にカウントはFROM句内のサブクエリで取得した方がよいかも知れません。 ---------------------------------------- SELECT Name, Kyouka, Score, (SELECT COUNT(*) + 1 FROM table1 b WHERE b.Score > a.Score AND a.Kyouka = b.Kyouka) AS rank, c.count FROM table1 a INNER JOIN (SELECT Kyouka, COUNT(*) AS count FROM table1 GROUP BY Kyouka) c USING(Kyouka) ORDER BY Kyouka, Score DESC; ---------------------------------------- なお、他の方も指摘されている通り、Kyoukaカラムにもインデックスを張ったほうが良いと思います。
Canvasの操作をJavaScriptで行うのであれば、受け渡しデータの形式はCSVかJSONで扱うのがよいと思います。 どちらを採用するかはいずれも長所短所ありますが、 ・CSV：データサイズが小さくなるが、スクリプト処理に手間がかかる。（行分割・項目分割） ・JSON：取得結果をそのままスクリプト上のオブジェクトとして使えるが、データサイズが大きい。 のイメージとなるので用途によりけりと思います。 ※XML形式の選択肢もありますが、JS上では両方の短所を兼ねていると思いますのであえて外しました（私見ですが） なお、 > 作りたいグラフのデータは項目が20あり、個数は1700以上あります。 が 20 * 1700 = 34000 のデータを用いるという意味であれば、 ・グラフ描写にどの程度時間がかかるのか。 ・メモリを大幅に消費しないか。 など、ブラウザ側のパフォーマンスを気にしたほうがよいような気がします。 （この辺りは想像でお話ししていますので、当てはまらない場合は読み流してください）
> 「LibreOffice Base」はAccessと同等のことができるのでしょうか。 そうです。無料で使用できる互換ソフトと思ってもらえたらと思います。 リンクをたどるのが嫌なら"LibreOffice Base マニュアル"で検索するとマニュアルらしいものがすぐ見つかると思いますので、パラパラと見てみたらいかがでしょうか。 ただ、LibreOfficeは有志が無償で作っているものなので、Microsoftがお金をかけて作ったものに比べて不足していることが多々あると思います。そこを何とかごまかして使うか、(プログラミングを勉強して、)その機能を自分で作るかする事ができないなら、おとなしくAccessを買ったほうがよいかもしれません。
SELECT artist, COUNT( distinct event ) as c FROM tb GROUP BY artist ORDER BY c DESC
「まずはマニュアルを参照する」という癖をつけましょう。 http://dev.mysql.com/doc/refman/4.1/ja/numeric-t … > もう 1 つの拡張として、MySQL には、INT(4) のように、 > 型の基本キーワードに続いて整数値の表示幅をかっこ内に指定できるオプションがあります。 > このオプションの表示幅の指定は、カラムに指定された幅より小さい幅を持つ値で表示の左側を埋める目的で使用されますが、 > そのカラムに格納できる値の範囲が制限されたり、そのカラムに指定された幅を超える幅を持つ値の桁数が制限されたりすることはありません。
select * from tbl t1 where count = (select max(count) from tbl t2 where t1.ex_id = t2.ex_id) order by count desc ではどうでしょう？
phpMyAdminとかでファイルの文字コードを変更してCSVインポートすればいいのでは。 http://www.php-seed.net/blog/archives/39
> ・エラーの意味を教えてください あなたが理解したとおり、'2147483647'というエントリーが重複した値を許さないカラムであるhogeに既にあって、それを更に登録しようとしているということだと思います。 > ・「'2147483647'」には何か特別な意味があるのでしょうか？ 32bit 符号付き整数型の最大値ですよね。 hogeに入力される値の初期値や異常値としてINT_MAXを使っていたりしませんか？ その問題が出るテーブルで次を実行したら、なにか表示されませんか？ SELECT * FROM テーブル名 WHERE hoge='2147483647'; とりあえず、修正方法としてはINT_MAXが入った値がなぜRDBに登録されたかを調べ、それが入らないようにエラー表示をするようにコードを変えることでしょうね。
日付毎の個数だけ出ても良く分からない結果になると思うので。 select date,count(distinct station) from table_name where date between '2013-11-01' and '2013-11-30' group by date order by date 私も日付をlike で範囲指定するのはちょっと？です。 dateとなっているけど日付＆時刻が入っていて 最終日のデータがうまくヒットしないなら、 where date >= '2013-11-01' and date < '2013-12-01' とするとか、23:59:59を指定すればいいだけと思うし。 '2013-11-01'も本当は、日付型の書き方があったはずなので、 そうすべきなんですが ・・・調べていないので調べてみてください。 （書き方がわからなければ日付型に変換する関数を調べて書いてもらえるといいと思います。） 日付といいながら、charやvarcharで定義してあるなら、 likeでも、上の書いた表記でもいいと思います。 ・・・なんでこんなことを言うかというと、日付型の項目の場合、インデックスを作っても likeや上記のような記述だと、暗黙の型変換が行われて、インデックスを使ってくれない という困ったことが起きる可能性があるからです。 （一般論で、mySQLについてはしらべてはいないですが。）
> 都道府県47つの場合、各都道府県ごとにcountする形になりますでしょうか？ GROUP BY 句を使えば一度の実行で、データが存在する全ての都道府県のカウントが取得できますよ。 例) SELECT no, COUNT(*) FROM Table GROUP BY no ORDER BY no; http://www.atmarkit.co.jp/ait/articles/0012/22/n … http://dev.mysql.com/doc/refman/5.1/ja/group-by- … なお、パフォーマンスの問題は本番もしくはそれに順ずる環境で実際に測定してみないとハッキリしたことは分からないかと。
PDOってそもそもさくらでは使えるんですよね？
自分のところでは問題なく認識できていると不思議に思って確認したら、！でした。 Visual Web Developerって、無償の「Express」バージョンですよね。 申し訳ありません。 通常版のVisual Studioならば、「サーバエクスプローラ」「データベースエクスプローラ」とも問題なく表示できます。 Connector/Netのバージョン問題は同様じですが。 「データベースエクスプローラ」のようなウィザード系を使用せず（となるとLINQやEntityFramneworkはおろか、「強く型付けされた」DataTable等も使えませんが）、SqlCommandやSqlDataReaderでゴリゴリやるしかないようですね。 http://social.msdn.microsoft.com/Forums/ja-JP/45 … Express系はアドオンが使えないので、Connector/Netよりはるかに強力なDotConnectのようなサードパーティ製品もNG。IDEの恩恵を得るにはProfessionalを導入するのが一番かもしれません。 Devarts Dotconnect for MySQL http://www.devart.com/dotconnect/mysql/
貴方言っている論理名とは http://dev.mysql.com/doc/refman/5.1/ja/create-ta … この中にでてくる論理名ですかね？ ＞MySQLで論理名を取 これは、「表題の通り」ではありません。表題通りというのは、表現としてはよくありません。論理名は、固有名詞ではないので、何を指しているのか、ちゃんと矛盾無く説明しましょう。
No3ですが、他の回答者のために、記述。 http://dev.mysql.com/doc/refman/4.1/ja/mysqldump … http://dev.mysql.com/doc/refman/5.1/ja/mysqldump … などにあるように、MySQLフリーソフト付属のバックアップコマンドで吐き出す、データーをリダイレクトでファイルにする時に、公式サンプルでは（公式HP） shell> mysqldump --opt database > backup-file.sql などど、記述されている。それを質問者が、 ＞Linuxの.sqlを なんて記述してしまうと、何の話をしているのか？　　と言う事になる（リダイレクト自体も理解していないかも）。よく公式だけ覚えて何も考えない社員に多く見られる傾向ですね。質問者のかすかね巧妙は、「mysql:mysql2」と記述した点ですね。これで、何者かやっと分かった程度です。 で、なぜLinuxなどのUNIX系で拡張子が必要ないのに、付けてたかといえば、上記ページに、 「ダンプには、テーブル作成や入力のための SQL ステートメントが含まれます。」 とあります。つまり、俗に言う「SQLファイル」ですね（テーブル構造とデータのダンプ）。拡張子が必要ないのにつける場合は、慣習ですね。 （※備考：　よく、tar コマンドでアーカイブしてファイルに XXXX .tar などtar コマンドでアーカイブした事があとでわかるようにわざわざつけます（UNIX系、Linux系）。付いてなくてもtarコマンドやOSでは何も困りません。ただし、OS側やファイルマネージャー等で紐付けしたらダブルクリックしたら特定ツールが起動するでしょうが。 SQLファイルも同じように慣習として、意味はありませんが、 .sql と拡張子をつける習慣があります。Windowsでも、それを使うソフトが存在しなければ、「不明ファイル」として、Windowsのアイコンが付くはずです） つまり、RDBの構造を（ユーザー作製テーブル等）、他のRDBMSに移植用、バックアップ用にSQLファイルの形で、標準出力に表示するコマンドと言う事になります。中身はプレーンテキストですね。 このコマンドは通常 http://dev.mysql.com/doc/refman/4.1/ja/backup.html にあるようにMySQLのバックアップコマンドですね。 以上ですが、当人に聞いていないので、実際このファイルなのかは不明。
いっそ、ファイルシステムのディレクトリの様なツリー構造と考えてしまって上位のIDを保持するようにしてはどうですか？ 例) テーブル「area」 +----+----------+---------+ |　id　|　name　　　 |　upper_id　| +----+----------+---------+ |　1　|　関東　　　　|　(null)　　| +----+----------+---------+ |　2　|　東京都　　　|　1　　　　 | +----+----------+---------+ |　3　|　渋谷１丁目　|　2　　　　 | +----+----------+---------+ |　4　|　渋谷２丁目　|　2　　　　 | +----+----------+---------+ 構造的には、県の上位に市を設定したり、自分自身のIDを上位IDに設定する事も出来てしまいますから、そこら辺はアプリケーション側で管理する必要が有りますが。 さらに地域の種別を表すコードのカラムを設けて、どの階層かを管理しても良いかも知れません。 参考URL：http://www.geocities.jp/mickindex/database/db_tr …
mysql -u ユーザー名 -p ではどうです? http://dev.mysql.com/doc/refman/5.1/ja/connectin … を読むかぎり、 -u だけ、という指定は無いようです。 私自身はMySQL歴が浅く4のころを知りませんが、もしかしたら、コマンドラインの変更があったかもしれません。 4では「-u:ユーザー指定無し→無効→デフォルトユーザー、-p:パスワード指定無し→パスワード入力」 5では「-u:ユーザー'-p'、-pオプション無し→パスワード入力なし」 といった解釈方法の変更があったのかもしれません
で、httpd.confの120行目はチェックしたのでしょうか？
作り直す気があるならこんな感じ //元データ create table shohin(sid int,sname varchar(30)); insert into shohin values(1,'パソコン'),(2,'洗濯機'),(3,'車'); create table category (cid int,cname varchar(30)); insert into category values('1','OA機器'),('2','家電'),('3','大型'); create table category_shohin (cid int,sid int); insert into category_shohin values(1,1),(2,1),(2,2),(3,2),(3,3); //商品ごとにカテゴリー名を羅列 select s.sid,s.sname,sub.cnames from shohin as s inner join ( select sid,group_concat(cname) as cnames from category as c inner join category_shohin as cs on cs.cid =c.cid group by sid ) as sub on s.sid=sub.sid あとは最終形をどう見せたいかによります
補足 ああsql結果は基本的に配列構造なのでimplode()なりしないと1すら出ません。。
>MyISAM で使っていたsqlをそのまま使ってもトランザクションは利用できないとゆうことでしょうか？ MyISAM自体がトランザクションを利用できないので そのままInnoDBにエンジンを変更してもトランザクションは利用されません。 MyISAM→InnoDB変換後に適切なプロセスを追加してください。
単純にCOUNT関数ではダメなのでしょうか？ SELECT COUNT(*) FROM udon WHERE not abc = '111' limit 5, 10 もしくは質問がそのlimit取得後の後ろの残りレコード数が知りたいというのであれば、一般的には総数を最初にカウントしlimitの開始位置/取得数を考慮差し引きし残りを求めます。
＞valueが「1」かつ「2」のデータを検索する この命題では日本語としてなりたたない なんとなく言いたいことはわかるのだけど条件提示が杜撰すぎ 以下のどれかだと推測します (1)valueが1および2を含むデータをすべて抽出 →仮に別途value=3のデータがあたったらそれも抽出 (2)valueが1および2を含むデータの内、1,2に該当するデータのみ抽出 →仮に別途value=3のデータがあってもむし (3)valueが1および2しかないデータを抽出 →仮に別途value=3のデータがあったら1,2に合致しても抽出しない たぶん(2)なんだろうなぁということで以下 //元データ create table table_a (id int,data varchar(20)); insert into table_a values(1,'a1'),(2,'a2'),(3,'a3'); create table table_b (id int,aid int,value int); insert into table_b values(1,1,1),(2,1,2),(3,1,3),(4,2,1),(5,2,2),(6,3,1),(6,3,3); //単純な表示 SELECT * FROM table_a WHERE table_a.id in (SELECT aid FROM table_b where value in (1,2) group by aid having count(distinct value)=2 ) //table_bの情報も含めた表示 SELECT * FROM table_a INNER JOIN table_b ON table_a.id = table_b.aid and value in (1,2) WHERE table_a.id in (SELECT aid FROM table_b where value in (1,2) group by aid having count(distinct value)=2 )
並び順が替わるというのは、別のtableなどからのデータで、変更するのですよね？、１行２行の入れ替えという物ではなさそうなので、構成を練り直した方が良いようにも見受けるけど、毎回集計しないで、一回集計した順で通常のアクセス時の表示を速くしようとしてるのかな。 であれば、order順定義用カラムは、別table に分けた方がいいのでは？ id と orderだけのtableにしてorder をauto_incrementとしておけば、truncate したあとに、一気に、並べ替えたい順でidだけ流し込めば、orderは、自動的に1から振り直される。 この方がorderとid 以外のデータにはさわらないので、大事なデータが失われる可能性もなくなり、作業時間も短縮するのでは？ 通常表示の部分は、元table と id でjoin して表示順をコントロールすることにはなるけど。
□数字の入力 phpmyadmin の insertやupdateのフォームでは、カンマ「,」が入ってると文字列として解釈されて、数値カラムにおいてはそのようなデータ入力できません。 直接SQL文でinsert文を発行するときは、２個の数値として解釈されてしまいます。ので、結果としてデータ入力時は、カンマ表記は使えません。 出力表示に関しては、format関数を使えば、いかようにもなります。 http://dev.mysql.com/doc/refman/5.1/ja/string-fu … select FORMAT('#,###,###.##' ,`column_name`) from `table_name` □名前の入力 姓と名の間にブランクが入っているときは、全角なら全角ブランクを入れて同じように指定しないと = 比較ではマッチしません。 個別カラムにすれば、それぞれのカラムで = 比較して、andで繋げば、完全一致名を取り出すことが出来ます。 □改行 改行コードを文字として入れることは出来るけど、phpmyadminでは、html表示なので、改行されたようには見えないでしょう。 通常、phpなどなんらかのアプリケーションから、その改行コードに対して、改行表示されるような操作をするので、問題なく改行コードを入れたり取り出したりは出来ます。
仮にこうします monthは月の整数でもつと、年をまたいだ時に大変なので、日付型のデータの方がよいです //元データ create table score (id int not null primary key auto_increment, name varchar(20), score int, month date, increment int not null,unique(name,month)); insert into score(name,score,month) values ('taro',100,'2013-11-01') ,('jiro',200,'2013-11-01') ,('saburo',150,'2013-11-01') ,('hanako',200,'2013-11-01') ,('yosiko',160,'2013-11-01') ,('taro',50,'2013-10-01') ,('jiro',200,'2013-10-01') ,('saburo',250,'2013-10-01') ,('hanako',300,'2013-10-01') ,('yosiko',100,'2013-10-01'); //incrementを求める update score as s1 inner join score as s2 on s1.month + interval 1 month =s2.month and s1.name=s2.name set s2.increment=s2.score-s1.score; where s2.month='2013-11-01' //雑なランク付け select name,increment from score where month='2013-11-01' order by increment desc limit 3; ランク付けは同順位の処理をどうするか考えるとすこし複雑になってきますが 今回はとりあえず表示するだけの簡単な文法を提示しておきます
なるほど・・・ foodを管理するテーブルのidとなるキーであればfood_idで良いと思いますよ もしくは端的にidとするかです。 joinする際に別名を付けて管理すれば混乱は少ないと思います
#2です コピペミスみたいなので再投稿します //データ作成 create table movie(m_id int,m_name varchar(100),m_memo text); insert into movie values(1,'タイタニック','※2000円'),(2,'E.T','※子ども向け'),(3,'007','※R指定'),(4,'アメリ','※女性向け'); create table theater(t_id int, t_name varchar(20)); insert into theater values(1,'バルト9'),(2,'渋谷東急'); create table schedule(t_id int,m_id int,s_date date); insert into schedule values(1,1,'2013-10-16'),(1,2,'2013-10-19'),(2,3,'2013-10-17'),(1,1,'2013-10-17'),(2,3,'2013-10-18'),(2,4,'2013-10-20'),(1,2,'2013-10-18'),(1,1,'2013-10-15'),(2,3,'2013-10-19'); //スケジュール一覧 select t_name,m_name,s_date,m_memo from schedule as s inner join movie as m on s.m_id=m.m_id inner join theater as t on s.t_id=t.t_id; //スケジュール集計 select t_name,m_name,min(s_date) as start,if(count(s_date)=1,null,max(s_date)) as end,m_memo from schedule as s inner join movie as m on s.m_id=m.m_id inner join theater as t on s.t_id=t.t_id group by t_name,m_name;
できないとは言わないけど、普通SQLでそんなデータの持ち方はしません こんな風にしてみて //元データ create table tb(id int,place varchar(20)); insert into tb values(5,'上野'),(6,'銀座'),(6,'東京'),(7,'銀座'),(7,'上野'),(8,'銀座'); //カンマ区切りの表示 select id,group_concat(place) as place from tb group by id; //集計 select place,count(*) as count from tb group by place;
REGEXP を利用しているということは完全一致ではなく部分一致でよいのですよね？ であれば WHERE table1.title REGEXP "りんご|みかん|ばなな" で十分では？
「実際の日付の9日前」でグルーピングすれば済む気もします。 SELECT SUM(金額) FROM　売上テーブル WHERE　日付 BETWEEN '2011-01-01' AND '2011-12-31' --正しくは '2011-01-10' AND '2012-01-09' ? GROUP BY DATE_FORMAT(日付 - INTERVAL 9 DAY, '%Y/%m');
セキュリティ上、ある会員が他の会員の扱っている商品を簡単に見ることができていいのでしょうか？ また、会員というのが商店で、複数の商店の情報を比較しながら買い物する顧客が別にいる、 という話では、 ある会員が他の会員の扱っている商品を簡単に見ることができてはいけないが、 ある顧客は、複数の会員の扱っている商品を簡単に見ることができないとまずいです。 というのも要件の１つにはいるのですが。 A. 1.のDBの中に作る 方法が２通りあって A-1.同一ＤＢで複数テーブルにする。 　複数の会員が扱っている商品をみるのにはいささか不便。 A-2.同一ＤＢの同一テーブルにする。 　この件数から見ると、会員の数×数万～数十万件の商品というレコード数になり、 　ちょっとレスポンスが心配。 　会員の数が少なければレスポンス対策としてあえて、横持ちする手はありますけどね。 　（拡張性や正規化という点から言うと好ましくないですが。） 　例）商品コード,会員1,会員2,会員3,・・・ 　　　会員1が1なら会員1が扱っており、0なら会員1は扱っていない。 B. 各会員のDBを作ってその中に扱いたい商品のテーブルを作る C. 会員DBを作って会員ごとのテーブルを作る BとCの差があまりなくて、 Bのメリットは、サーバを分割しやすいという点と、会員間でデータを見れなくしやすいという点で、 デメリットは、商品を減らしたいときに、全会員のＤＢに接続して、１件ずつ消さなくてはいけない （CならＤＢ接続は１回ですむ。）、サーバを分割しにくい、複数の会員のデータを見るのが面倒 等ですね。 Aは、BやCと違って、サーバを分割なんて難しいし、 会員間でデータを見れなくしにくい（作りこみがいるというだけ）、 一方で、商品を減らすのはすごく簡単。複数の会員のデータを見るのも簡単。 といったところが長短として挙げられます。 どれを重視するかによって答えは変わってくると思います。 （あと用意できるＤＢサーバの性能と。）
正直これだけの情報ではなんとも・・・・。可能性としてはラインターミネーターが\r\nじゃなくて\nなので全部が1行と解釈されて最初の2列だけに反応しているとかかね。 ↓の2つを試してみてその結果を教えてもらえますか。\r\nを\nと\rにそれぞれしたものです。 １． LOAD DATA INFILE "Prefecture.csv" -> INTO TABLE Prefecture FIELDS TERMINATED BY "," -> LINES TERMINATED BY "\n"; ２． LOAD DATA INFILE "Prefecture.csv" -> INTO TABLE Prefecture FIELDS TERMINATED BY "," -> LINES TERMINATED BY "\r";
まずmysql_** 関数を使うべきではないことはともかく ＞mysql_query('SET NAMES UTF-8'); 「UTF-8」→「UTF8」じゃない？
　そこそこの普通のシステムなら、普通に出来る規模かと思います。総枚数２０００枚程度であれば、「普通に考えれば処理できる」規模です。 　MySQLは、普通のパソコンクラスでも、数万～数十万レコード程度なら、充分に扱える程度のシステムです。 　フィールド数の方も、心配する領域としては、やっぱり桁が違います。 　画像を扱うための保存領域の容量だって、２０００枚程度なら、１枚２Ｍバイトとしても、４Ｇバイトほど。今時のハードディスクの保存容量からすればやっぱり桁が違いますね。 　ただし、普通に出来るとは書いたものの、あくまで、私的な領域で使うレベルでの話です。観客数が増えて、１秒あたりのアクセス数が・・・なんてレベルになるなら、やっぱりそれなりの構成と検討が必要です。が、これは、静的な普通のホームページでも同じ事です。
　データベースをリモートでメンテナンスできるようにしようとすると、何らかの方法でMySQLにダイレクトにアクセスできる道を作ることになりますよね。その道を知っている人にとっては、残る関門は、ＩＤとパスワードだけです。別に、人のドメインに直接プログラムをアップロードするまでも無いので、IDとパスワードが漏れちゃったら、大変です。（MySQLでは、ID毎にクライアントのＩＰを制限するのが普通なので、そこまでは普通至らない物ですが。それでも、最大の関門を破ったことに変わりはありません。） 　さて、ルートディレクトリー配下で、スクリプトファイルに対して、クライアントからアクセスした場合は、普通は、スクリプト（例えばＰＨＰ）が実行されるのが普通です。これが正しい姿ですが・・・ 　webサーバーを一から構築した人は、クライアントからアクセスするとブラウザーにスクリプトのソースが表示されて、悲鳴を上げるという体験を、必ず一度はするものです。 　そう。webサーバーのちょっとした設定間違いで、簡単にこんな事故はおこるものなんです。 　さて、このスクリプトのソースにＩＤとパスワードが堂々と書いてあったら？はい。事故＝ＩＤ・パスワードの漏洩発生です。 　というわけで、クライアントからアクセスできる領域のファイルにはＩＤやパスワードは書きたくないものです。 　ですから、まず、ＩＤとパスワードを別のファイルに分けます。 　このファイルを同じ場所においたら、結果は一緒です。このファイル名はちゃんとスクリプトに書いてありますから、そのファイル名をurlにしてもう一度アクセスするだけになってしまいます。 　 　ですから、ルートディレクトリー配下には、このようなファイルは置かないようにするのです。さすがに、相当の間違いをやらかしても、ルートディレクトリー配下意外の場所をweb経由でアクセスできるようになんてことにはなりませんから、大分、安心度が大きくなります。（まぁ、ルートディレクトリーの設定そのものを間違えれば・・・でも、その場合は、別の心配をした方が良いです。被害はデータベースのデータを抜く程度では収まりません。でもサーバーのＯＳレベルで、webサーバーシステムのアクセス権限はルートディレクリー配下に制限することが普通ですから、その意味でも、ルートディレクトリの外は、結構厳重に守られている物です。） 　設定を間違えなくても、webサーバーのシステムにセキュリティーホールがあれば、同じ結果になることはあり得ます。でも、ルートディレクリー以外の所まで平気で見に行けるなんて巨大なホールはそうそう出ませんし、ちゃんと設定していれば、ＯＳの保護も期待できます。 　まぁ、セキュリティーに完璧はありません。少しでも、心配事をひとつずつつぶしていくのが基本です。心配事をひとつつぶす毎にセキュリティーは一段階上がります。
なんとも言えませんが普通にこんな感じでやってみては？ set @str1='01234561',@str2='1'; select (char_length(@str1) - char_length(replace(@str1,@str2,'')))/char_length(@str2) as count;
>□現在、会社が違うレンタルサーバーを一つずつ借りています。・・・ 直接データベースを参照することはできないと思います。Web経由であれば可能です。例えばXMLで受け渡しする方法があります。 まずA社のサイトでデータベースからテーブル一覧を取得し、そのデータをXMLで出力するページを作成します。 B社のサイトはそのページにアクセスし、XMLを解析して一覧を表示します。 >□初心者がデータベースを作成するにはphpMyAdminを使用するのが一番良いでしょうか？・・・ phpMyAdminが一番いいと思います。MySQLのGUIツールでは一番利用者多いと思います。 phpMyAdminもテーブルにデータを入力していくのは簡単ですよ。 >□現在使用しているサーバーはMySQLが5つ使えると書いています。・・・ 可能です。データベースの中に複数テーブルを作るということになります。それが普通です。 野球の情報を管理するデータベースを作り、その中に試合の記録のテーブル、選手のデータのテーブルを作ることになると思います。他にも容量が許すかぎりいくらでもテーブルは作れますよ。 □スマホのサイトも作成しているんですが、PCサイトと同様にデータベースに接続し、一覧表示できるのでしょうか？・・・ できます。phpが動いているのはサーバ側なので関係ないです。
$result = mysql_query(レス一覧取得SQL文); //最後のNo取得 $lastNo = mysql_num_rows($result); while($row = mysql_fetch_assoc($result)){ 表示処理(レスNoを出力場所で$lastNoを出力すればいい) $lastNo--; } ようは最初に最後のNoを取得し、１行表示ごとにマイナスしていけばいいということです。 mysql_queryなどと書いていますが、これは非推奨になっているのであまり使わない方がよいです。 mysqliなどを使いましょう。
order by GREATEST(a,IFNULL(b,a)) desc でもできるようです。 ※IFNULL(b,a) bがNullでなければb、Nullならaを返す。 基本的にはANo.1のかたの方法でいいと思いますが、 他の方法も示しておこうかなと思って書いています。 なお以下は蛇足です。 上のIFNULL同様に、 GREATEST(a, COALESCE(b, -2147483648)) DESC; は、 GREATEST(a, COALESCE(b, a)) DESC; でいいのではないかなと思いました。
素直にその条件／動作のSQLを書けば良いかと。 例) UPDATE table_hoge SET b = a WHERE b IS NULL; 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/update.html
無理、無駄 というか、顧客ごとにテーブルを作っているなら横断的に検索させたら わける意味がなくない？ そんなことするならtableid的なカラムつくるだけで全て解決するし （プログラムの修正が行えないという時点でそういう選択肢はないのでしょうけど）
> XAMPPは、「Webサーバ ⇔ PHP ⇔ MySQL」を一台の > パソコンで構築できるとの認識で間違いないでしょうか！？ はい，間違いないです。 > 「各端末 ⇒ Webサーバ ⇔ PHP ⇔ MySQL」 > その図を、客観的に見た場合、 > ３台のパソコンで構築されているように見れます。 いいえ，次のような表現が一般的に用いられているように， 「１台のサーバ機で，WebサーバとDBサーバとメールサーバが稼働している」 サーバという用語は， ハードウェアを指す場合もありますし（例：サーバ機） ソフトウェアを指す場合もあります（例：Webサーバ）。 Webサーバというソフト単位，PHPというソフト単位，MySQLというソフト単位， が連携しているということを客観的に示しているのであり， それが３台のハードウェアに分かれているかどうかは示していません。 各端末，というのも，正しくはハードウェアではなく， Webブラウザというソフト単位を指しているはずです。 「Webブラウザ，Webサーバ，PHP，MySQL」すべてのソフト単位が１台のPC内にあり， その１台のPCがWebクライアントでもあり，かつ，Webサーバでもある。 というのは，小規模な実習環境においてよく用いられている形態です。
> <meta http-equiv="Content-Type" content="text/html; charset=euc-jp"> > mysql_query("SET NAMES 'utf8'"); そもそも、プログラムは何の文字コードで書かれていて、データベースの文字コードは何になっているんでしょう？ 上記の記述だと、既に文字コードで相違がおこっていますので、うまく日本語が扱えていないのではと思います。 それと、データベース側のフィールドはちゃんと日本語がはいる型（varcharやtext）になっているのでしょうか？ テストされたURLとサンプルコードなど、何か提示があれば回答しやすいかと思います。
and (concat(MyCol1,' ',MyCol2) like '%いちご%' and concat(MyCol1,' ',MyCol2) like '%ソーダ%') とでもすれば手っ取り早いと思いますが。 concat()・・・文字列をつなげます。 http://dev.mysql.com/doc/refman/5.1-olh/ja/strin … 具体的には、 ID　Concat(MyCol1,' ',MyCol2) -------------------------- 1　いちご みかんジュース 2　ぶどう いちごみるく 3　みかん すいかジュース 4　すいか めろんソーダ 5　めろん ぶどうガム となり、「いちご」と「ソーダ」をorでつなげば、1,2,4がでてきます。 （なお、andでつなぐと、質問にかかれた1,2,4でなく、1件もでてこないですが。） なんで、,' ',をいれているかというと、 6 といち ごりら とあると Concat(MyCol1,MyCol2) では、 6 といちごりら となり、「いちご」が見つかってしまうためです。
うーん、いまいち意図がよくわかりませんが こういうことでしょうか？ //元データ create table mytable(year int not null,number int not null); insert into mytable(year,number) values(2005,1),(2005,2),(2005,3),(2008,4),(2008,5),(2008,6),(2008,7),(2008,8),(2010,9),(2011,10),(2011,11),(2011,112); //検索 select year,number,(select if(max(number)=t1.number,1,null) from mytable where year=t1.year) as myflg from mytable as t1
質問としては、新規の書込みがあったスレッドの上位20件を取り出すSQLが知りたい、という事で良いでしょうか？ そうであれば、 bbs_id 毎の最新の time を比較して、その新しい順に並べ、上位20件分の bbs_id を取得すれば良いかと。 SELECT bbs_id, MAX(time) FROM bbs GROUP BY bbs_id ORDER BY MAX(time) DESC LIMIT 20; ※ bbs_id はタイトルごとのIDとなっていますが、タイトル＝スレッドの様なので、スレッドを表す番号と仮定しています。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/select.html
基本はmysqldumpでしょうけど、毎回100万件全てが更新されているとは思えないので ほとんどのデータが前回のままであるなら、差分バックアップでもある程度は 精度は保てるでしょう ただし、レンタルサーバーのmysqlだとCUIでコマンドを実行できないかもしれないので 用意されたツールの範囲でやるしかありません 参考URL：http://www.atmarkit.co.jp/ait/articles/0107/24/n …
＃1ですが、No列が文字型の場合なら大小判定がおかしくなるかも。 No列は数値型として下さい
私が思いついたのは、結合して GROUP BY を使う方法とSELECT句内のサブクエリを使う方法でした。 version 5.5.8 で確認しました。 ■ 結合して GROUP BY を使う方法 SELECT a.id, COUNT(b.A_id) AS count FROM table_a a LEFT OUTER JOIN table_b b ON(a.id = b.A_id) GROUP BY a.id; ■ SELECT句内のスカラサブクエリを使う方法 SELECT id, (SELECT COUNT(*) FROM table_b b WHERE a.id = b.A_id) AS count FROM table_a a; 参考URL：http://gihyo.jp/dev/serial/01/sql_academy2/001003
仕様が微妙ですが、単純に考えればこんな感じ？ select * from tblA left join tblB on tblA.id = tblB.id and tblB.del_flg=0 left join tblC on tblA.id = tblC.id and tblC.del_flg=0 where tblA.del_flg=0 ただし、tblBは複数ある可能性があるため分けるのは妥当かもしれませんが tblCはtblAの機能の一部の方がよいのでは？ すなわち未婚、既婚、以前既婚の状態は排他関係にあるので、複数にならず 既婚カラムで管理すればすっきりするので・・・
> それで、できれば、エクスポートされたデータをそのままエクセル表示させ > エクセル側で修正したいのでお聞きしています ん？　テキストエディターだけでなくエクセルで開いても改行部分がおかしいって事？　詳しい状況求む。 ・テキストエディターで開いたら問題がある。→エクセルで開いた時に問題なければ問題ないでしょう？ ・エクセルで開いたら問題がある。→どういう問題があるか教えてください。 前回の回答でも触れているけど、エクセルはダブルコーテーションでくくられたセルデータ中に改行が含まれていた場合、正しくセル内改行として取り込んでくれる。 数字が入った文字列とかは前ゼロが消えるという問題はあるけど、今回の件には関係ない話だ。
サーバー側でローカルのフォルダを指定しても無意味 一度サーバーに落としたものを拾う仕組みにするか phpMyAdminのエクスポート機能でブラウザの設定による ダウンロード処理をするしかないです
>ご回答では15分区切りのselect文ですが、30分区切りで予定を入れられるように変更したい場合、all_datetime_tblのデータを全件30分毎に作成し、select文のinterval 15 minuteの部分をinterval 30 minuteに変えるだけでよいのでしょうか？ その通りです。 あとjikan_tblのデータも30分間隔に変更してくださいね。 >このように確認時点から少し時間が経過すると10:45～11:00の予定が入れられないことになりますが、対処方法が分からないのでこの対応にしました。 もし、その時間的なずれを、この機能に盛り込んでしまいたいというのであれば、 -------------------------- where concat(each_datetime, ':00') > now() and start_datetime is null -------------------------- を -------------------------- where concat(each_datetime, ':00') > date_add(now(), interval 1 minute) and start_datetime is null -------------------------- とすれば、基準となる時刻を1分うしろにずらすことができます。 別にネガティブな話をしたのではなくて、現実的な対応を考えると、基準となる時刻（確認時刻）が現時刻ジャストでは無理があるんじゃないですか？という意味だったのです。
datetimeバージョンをざっと //元データ create table t_jikan(start datetime,end datetime); insert into t_jikan values('2013-09-27 10:00','2013-09-27 10:15'),('2013-09-27 10:15','2013-09-27 10:30'),('2013-09-27 10:30','2013-09-27 10:45'),('2013-09-27 11:00','2013-09-27 11:15'),('2013-09-27 11:30','2013-09-27 11:40'); //後ろ時間が空いているviewをつくっておく create view v_jikan as select j1.start,j1.end from t_jikan as j1 left join t_jikan as j2 on j1.end=j2.start where j2.start is null; //空き時間一覧 select v1.end as start,min(v2.start) as end from v_jikan as v1 inner join v_jikan as v2 on v1.end < v2.start group by start; //特定時間の直近の空き時間 select v1.end as start,min(v2.start) as end from v_jikan as v1 inner join v_jikan as v2 on v1.end < v2.start where v1.end>='2013-09-27 10:00' group by start order by start limit 1; ここで'2013-09-27 10:00'を '2013-09-27 10:45'や'2013-09-27 10:50'や'2013-09-27 11:50'に 変えると状況がヒットするレコードが変わることがわかる
一例。
#1さんの回答の考え方で良いと思いますが、HAVING句の位置と綴りに間違いが有るようです。HAVING句は GROUP BY句の後に書きます。 SELECT id, SUM(num) FROM teble GROUP BY id HAVING SUM(num) >= 20; また、サブクエリを使っても同様のことは実現できます。 SELECT * FROM (SELECT id, SUM(num) AS sum_num FROM teble GROUP BY id) a WHERE sum_num >= 20; HAVING句を使った方がスマートだとは思いますが。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/select.html
> この1件のデータをインポートをさせた時、サーバ側にある1000件のデータにプラスされて1001件になるでしょうか いえ～すざっつらいと。 > それとも、1000件の上にインポートされたデータがかぶせられて、1000件のデータがなくなり1件になってしまうのでしょうか の～！ ただ、CSVでデータをやりとりするのはお勧めしない。Excelが悪さをする事もあるし。SQLでエクスポートした方が安全かも。 それに、phpMyAdminを使ってるんだったら適当な行を表示してコピーすればいいんじゃない？　行を表示した時にチェックボックス、編集、コピー、削除って出てるでしょ（phpMyAdmin 3.5.7で確認）。そこでコピーを選ぶと、元のデータが全列に入った状態でinsert画面になる。そこでちょこちょこっと値を書き換えて登録した方が楽チンだと思うけどな。
＞NULLは使わない設定にしています 思い込みで否定せずに試してみようよ・・・ NOT NULLの設定した項目にNULLをセットしてやるとクリアになります。 文字列型なら''、数値型なら0 また、デフォルト値にしたいならdefaultを指定してやるのでもかまいません SET gif=default
すでに対策済みかもしれませんが以下チャレンジしてみては？ ・テーブルやカラムの照合順序 ・my.cnfでのinit-connectの誤設定 ・phpでPDOを利用しているのであればnew PDO()する際にcharsetを指定していない ・単に出力されたデータがブラウザで正当に評価されていないだけならheader()やmetaなどで補足する
＞実際のデータでは、処理時間が長く完了しないです。 どのくらいの量のデータを更新しようとしているのかによりますが 集計と違い更新するのですから、量が多ければそれなりに時間がかかりますよ むしろ更新せずに、必要なときだけ和算データを集計した方が効率的かも もしくはデータを投入する際にあらかじめ和算データを設定していくような 運用が必要かも。
ああ、なんとなくわかりました ＞ＮＵＬＬの場所に、aaaaa、bbbbb、cccccを挿入する方法も分からないため、 ということはnullを置き換えてよろしいのでしょうか？ であれば、以下のようなupdateをしてみるとよいかもしれません //元データ create table tbl1(no int,kubun varchar(20) null,flg tinyint null); insert into tbl1 (no,kubun) values(1,'aaaaa'),(2,null),(3,null),(4,null),(5,'bbbbb'),(6,null),(7,'*nozoku'),(8,'ccccc'),(9,null); create table tbl2(no int,komoku varchar(20)); insert into tbl2 values(1,'bbbbb'),(2,'eeeee'); //nullや*で始まる区分を置き換える update tbl1 set kubun=if(kubun is null or kubun like '*%',@a,@a:=kubun) order by no; //tbl2の項目と合致するtbl1のフラグをたてる update tbl1 inner join tbl2 on tbl1.kubun=tbl2.komoku set tbl1.flg=1;
＞xmasデータベースにxmastranテーブルは確かに存在しています。 　えっと・・・入力されたプログラムでやりたいことは、xmasデータベースを作り、その中にxmastranテーブルを作成したいんだと思うんですが、xmastranテーブルが確かに存在していて、何か他に不満な点があるんでしょうか？ 　これで完成のように思うのですが・・・・
nameのケツが「課」か「部」を調べるなら正規表現でしょうね where name regexp '(部|課)$' これを利用してupdateすればよいです //データ作成 create table bumon (name varchar(30)); insert into bumon values('経理課'),('営業部'),('開発部'),('部門開発部'),('RアンドD'); //更新 update bumon set name=left(name,char_length(name)-1) where name regexp '(部|課)$'
No.1さんもおっしゃっているように > 「abc.jpg」が表示されるとは思えませんが 仮に echo "<img src=¥"$name¥">"; だとして、出力結果が <img src="abc.jpg"> となったとしたら、これはこれで正しいと思いますよ。 abc.jpgがその場所にあれば、正しく表示されると思います。 画像そのものを出力したい、つまり （たとえば） /abc.jpg がリクエストされたとき、PHPを実行して画像（バイナリ）を返したい、ということならば、 １．まずそのURLがリクエストされたときPHPが実行されるようにウェブサーバの設定をする ２．（画像そのものがDBに格納されているとして）PHPで先のPDOなどを使って画像を取得する ３．header関数でContent-Typeを指定して（header('Content-type: image/jpeg');） ４．２の画像を出力する という流れになると思います。 画像をDBに格納しておらず、どこかのディレクトリに保存しているなら、 １．そのディレクトリをウェブサーバ経由で外部ネットワークから参照できるようにウェブサーバを設定する 　　またはウェブサーバ経由で外部ネットワークから参照できるディレクトリにその画像を保存する ２．そのディレクトリに対応するURLパスを先のDBに保存する ３．先の$nameが２のURLになっていればOK と思います。ウェブ上から見えないどこかのディレクトリに保存してPHP経由で返してもよいと思います。
　サーバーの種類により、ログイン画面を経由させる時に、クッキー認証を必要としているからではないでしょうか。 　あなたのご覧になられたＵＲＬhttp://php1st.com/435/＜ＰＨＰプログラミングの教科書＞の中に、赤字で説明してありますよ。
いまのままのテーブル構成だと集計にあまり向いていないと思いますが とりあえず動けばいいというならこんな感じでサブクエリにして joinすればいいのでは？ select 年,月,最大値,`datetime` from 米ドルtbl inner join ( select year(`datetime`) as 年, month(`datetime`) as 月, max(usd) as 最大値 from 米ドルtbl group by 年, 月 ) as sub on year(`datetime`)=年 and month(`datetime`)=月 and usd=最大値
SET句で number に既存の値の前に'東京/'を付けたものを設定すれば良いかと。 http://dev.mysql.com/doc/refman/5.1/ja/update.html 文字列連結には CONCAT 関数を使います。 http://dev.mysql.com/doc/refman/5.1/ja/string-fu … 例) ------------------------------------ UPDATE テーブル名 SET number = CONCAT('東京/', number) WHERE area LIKE '%tokyo%';
create table もそうですが、生成したＳＥＬＥＣＴ文を張ってください よっぽどファンタスティックなテーブル設計をしない限り。ＳＥＬＥＣＴ文のほうに 間違いがあるのだと思います。たとえば、JOINする対象を間違えているとか。 取あえず、この文章だけだとo2shgi3eatgeさんがやりたいことはRDB（SQL）が得意とすることなので SQL入門を読んでその通りに作れば、できますよとしか言えません。
そのログに書いてある通りなのでは? 設定とか見直してください
なんらかの削除フラグを立てて、更新後削除フラグのたっているデータを削除するのが妥当 そもそもデータを削除しないで削除フラグがないデータだけ集計対象にするだけでよい気がします
key_buffer_sizeをチューニングしようとされているので、ストレージエンジンは、MyISAMでしょうか？ InnoDBなら、チューニングするパラメータが異なります。 alter tableでテーブルを変更する場合において、 基本的にデータが多いときは、indexの再作成に時間がかかります。 （使用しているハードウェアのスペックに依存しますが） CPU使用率ですが、普段が2%前後で、alter table実行時に50～100%になるのでしょうか？ 教えていただきたいのが、下記の項目です。 ・ハードウェアのスペック ・ストレージエンジン ・テーブルに張っているインデックスの数とインデックスの合計データサイズ(1行あたり）
MySQL の仕様では、GROUP BY した際に一意にならないカラムをSELECT句に指定した場合は、そのグループに属する値のどれかを返します。その中のどれを返すかについては特に基準は有りませんので、不確定です。 詳しくは下記のページを参照して下さい。 http://dev.mysql.com/doc/refman/5.1/ja/group-by- … なお、 null 以外は同じ値になるのでしたら、MAX 関数などを使えばその値が取得できるかと。 例) SELECT address, MAX(title), SUM(count) as SUM FROM ・・・ 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/group-by- …
>　As nameを使う以外に ないのでasを利用してください
苦労されているようでもうひと踏ん張りしてほしいところですが・・・ ＞INDEX a_id(`a_id`) されているのであれば、別解で上げているように select a_id,b_id,hoge from table1 force index(a_id) where a_id IN (・・・) order by updatetime desc limit 0,100 ; の処理で高速化が確認できませんか？
Where じゃなくて、group byじやないですか？ まずはInsertせず、Selectで試験して下さい。 SELECT 'staff',product,SUM(user_volume) FROM user_table Group by 'staff', product ;
ユーザーテーブルとメールマガジンテーブルを別々に設定し ユーザー＝メールマガジンテーブルで管理すればいいでしょう。 たとえば、ユーザー＝鈴木・佐藤・山田がいて、 メールマガジン＝趣味、仕事、自己啓発があったときに 趣味は全員、仕事は鈴木・佐藤、自己啓発は佐藤だけ登録している場合 こんな感じ create table user (uid int,uname varchar(20)); insert into user values(1,'鈴木'),(2,'佐藤'),(3,'山田'); create table mailmagazin (mid int,mname varchar(20)); insert into mailmagazin values(1,'趣味'),(2,'仕事'),(3,'自己啓発'); create table user_mailmagazin (mid int,uid int,unique(mid,uid)); insert into user_mailmagazin values(1,1),(1,2),(1,3),(2,1),(2,2),(3,2); これを、ユーザーごと、メールマガジンごとに表示するとこう //ユーザーごと select u.uid,uname,group_concat(mname) from user as u ,user_mailmagazin as um ,mailmagazin as m where u.uid=um.uid and um.mid=m.mid group by uid; //メールマガジンごと select m.mid,mname,group_concat(uname) from user as u ,user_mailmagazin as um ,mailmagazin as m where u.uid=um.uid and um.mid=m.mid group by mid; あとはたとえば仕事（mid=2）のメールマガジンだけ送るなら select u.uid,uname from user as u ,user_mailmagazin as um where u.uid=um.uid and um.mid=2; のような検索でuidを抽出して処理すればよいでしょう
こういうこと？ （理想の処理結果から「なし」が消えてるロジックがわからないけど） create table hoge (name varchar(20),price int null); insert into hoge(name) values('りんご'),('みかん'),('なし'); update hoge set price=300 where name like '%ん%'; ちなみに前方後方一致は負荷が高いので膨大な処理をする場合はきびしいかも （数万件程度なら余裕だけど・・・）
Apache単体でインストールしたんですか？ 「XAMPPとしてインストールした」とかではありませんか？ もしそうなら、インストール先フォルダにあるUNINSTALL.EXEを実行。 （XAMPPが一式アンインストールされます）
・それしか手立てがない場合には別に構わないでしょう。 ・やりたいことによります。 　また、MySQLのバージョンによってはPHPなどの外部言語ではなく 　MySQL内のストアドプロシージャ、ファンクションでの実装も可能でしょう。 ・適切にインデックスキーなどが設定されている前提で考えると、 　ループ回数が少ない方がスピードが出るのがほとんどです。
以前から全く進んでいないようで残念です ＞CREATE DATABASE xmas; ではなく、以下としてください CREATE DATABASE if not exists xmas; ＞USE xmas; phpMyAdminを利用しているならuse文は利用せずに、左のリストから選んでください ＞CREATE TABLE ・・・ も、「if not exists」で処理してください。 CREATE TABLE if not exists xmastran ( book_id int not null auto_increment, name varchar(30) not null default ' ' , org varchar(50) not null default ' ', addr varchar(80) not null default' ', tel varchar(20) default ' ', mail varchar(40) default ' ', course varchar(30) default ' ', nums integer default 0, PRIMARY KEY (book_id) ) ENGINE=MyISAM DEFAULT CHARSET=utf8; もしくはcreate tableする前に drop table if exists xmastran; として、テーブルを削除しても構いません
＞よくわかりません？ どのへんがわかりませんか？ そもそも、クォーテーション の意味がわからない？ シングルクォートもダブルクォートも、文字列を「囲む」ものですから、必ずペアです。
＞ max の分だけ集計したい 一度最大値を変数にとっておくのが楽かも （テンポラリテーブルは微妙な制限があるので） create temporary table fuga(`int` int); insert into fuga values(0),(1),(2),(3),(4),(5); select @max:=max(`int`) from fuga; //ここで@maxに最大値をとっておく select fuga.int,ifnull(count,0) as count from fuga left join (select `int`,count(*) as count from hoge where `date`='2013-08-13' group by `int`) as sub on sub.int=fuga.int where fuga.int =@max //絞り込み
セミコロンのありなしはともかくとして、ダブルクォーテーションで開始しているわけですから、 最後もダブルクォーテーションで終わらせて、ちゃんと囲まないとダメですよ。 ; UNIX: "/path1:/path2" ; Windows: "\path1;\path2" この行が、UNIX系の場合と、Windows系の場合の記述例です。
普通はUPDATEを使うと思います。 処理時間が問題にならないのであればDELETE,INSERTでも良いとは思いますが、 UPDATEに比べてかなりコストが大きいと思います。
こういうこと？ //元データ create table hoge(address int,nyukai date,id int); insert into hoge values(1,'2013-01-01',201),(1,'2013-01-02',204),(1,'2013-01-03',202),(1,'2011-01-04',203), (2,'2013-02-04',101),(2,'2013-02-02',102),(2,'2013-02-01',103),(2,'2011-02-03',104), (3,'2013-03-01',301),(3,'2013-03-02',302); //表示 SELECT address,nyukai,id FROM hoge WHERE address in(1,2) ORDER BY case address when 1 then 1 when 2 then 2 else 3 end ASC, case address when 1 then nyukai when 2 then id end ASC もとの処理だとnagoyaだろうがnyukaiで一度ソートがかかるためidでソートされません。
手元のパソコンはマックでもウインドウズでもいいのですが、サーバ側でphpmyadminが呼び出せる環境なのでしょうか。だとしたら、そのサーバのＵＲＬのphpmyadminページのログイン画面でユーザー名とパスワードを入力すれば、データベースを作成できる画面になるはずです。 そのあと作成したデータベース名とパスワードをWordPress用のwp-config.phpファイルの所定箇所にあてはめて、サーバへFTPでアップロードします。そして、ＩＥなどのブラウザからそのサーバのＵＲＬのwp-admin/install.php を呼び出せば、サーバー上でインストール動作し、wordpressが呼び出せるようになります。 もし、会社のサーバにapacheもmysqlもphpもまだ設定していないのだったら、以下のサイトを参照し、まずご自身のMacにXAMPPをインストールしてパソコン上のローカルサーバーでのWordpressのインストールと設定の実験をすることをおすすめします。 http://www.apachefriends.org/jp/xampp-macosx.html その上で会社のサーバーを設定し、XAMPPとWordpressを動作できるようにしましょう。当然、外部から無断操作されないようにセキュリティ設定する必要があります。
#2です >そのパターンは無理でした。 なにか読み間違えていると思いますが・・・ もしかしたら5.5でできないのでしょうか？ 以下ためしてみてください。 create table hoge (id int not null,data int null); insert into hoge values(1,100),(2,null),(3,200); alter table hoge modify data int not null; nullだったid=2のdataは0になるはずです
いやだから「タイプミスが3件ありました」と書いたでしょ？ >tel verchar(20 default '', vercharじゃなくvarchar、かっこが閉じてない >PRIMARY KEP (book_id) KEPじゃなくKEY 文法（シンタックス）エラーの原因は大半がタイプミスです
ユーザ毎の、article数とsizeの最大値、sizeの最大のものの登録日時とタイトルが取得したいという事ですよね？ 下記の様なSQLで出来ると思います。(Ver. 5.5.8 で確認) ---------------------------------------- SELECT article_id, user_id, (SELECT COUNT(*) FROM article c WHERE a.user_id = c.user_id) AS count, size AS max_size, insert_unixtime, title FROM article a WHERE NOT EXISTS ( SELECT * FROM article b WHERE a.user_id = b.user_id AND (a.size < b.size OR a.size = b.size AND a.insert_unixtime < b.insert_unixtime) ) ---------------------------------------- WHERE句では、user_id が同じで size が大きいものと同じ size で insert_unixtime が大きいものが無いという条件、つまり、その user_id で最大 size, insert_unixtime のレコードを取得する条件を書いています。
仕様の詰め次第ですね tagとu_idの組み合わせがユニークかどうかでやり方が異なります たとえばu_id=5の人が一度「そば」を登録した後にダブって「そば」を 登録できるかどうかということ 仮にuniqueを前提にすればこんな感じ //元データ create table tags(id int not null primary key auto_increment,tag varchar(30),u_id int,unique (tag,u_id)); insert into tags values(1,'うどん',5),(2,'そば',5),(3,'うどん',2),(4,'ラーメン',2),(5,'そうめん',1),(6,'そば',3); //ユーザーごとにうどんorそばに合致する件数 SELECT u_id, sum(tag in('うどん','そば')) as agr FROM tags GROUP BY u_id ORDER BY agr DESC //うどんかつそばに合致するユーザー SELECT u_id FROM tags GROUP BY u_id having sum(tag in('うどん','そば'))=2
ん～・・・ 複数の店舗と、複数の書籍があって、各お店が最大6点までお勧めの書籍を 指定できるみたいイメージでしょうか？ //元データ create table book(bid int not null primary key,bname varchar(100)); insert book values(1,'A'),(2,'B'),(3,'C'),(4,'D'),(5,'E'),(6,'F'),(7,'G'),(8,'H'); create table shop(sid int not null primary key,sname varchar(100)); insert shop values(1,'X'),(2,'Y'),(3,'Z'); create table osusume(bid int,sid int,unique key(bid,sid)); insert osusume values(1,1),(2,1),(3,1),(4,1),(5,1),(7,1),(1,2),(2,2),(3,2),(5,2),(6,2),(2,3); //各お店のお勧めする書籍数 select o.sid,s.sname,count(*) as count from osusume as o inner join shop as s on s.sid=o.sid group by sid; //'X'(sid=1)がお勧めする書籍ランダムで3点 select o.bid,b.bname from osusume as o inner join book as b on o.bid=b.bid where o.sid=1 order by rand() limit 3 こうするとランダムに３点選ばれます。 もし同じ日に検索した場合同じデータを表示するためには rand()のシード値に日付を指定すればよいでしょう select o.bid,b.bname from osusume as o inner join book as b on o.bid=b.bid where o.sid=1 order by rand(curdate()) limit 3
＞MySQLの特定のカラムの全データを削除 「削除」とはどういう状態を想定しているのでしょうか？ レコードの削除と違いカラムのデータは削除はできません。 特定のデータで埋めるか、デフォルト値に戻すか、nullにするかでしょう。 以下サンプルです create table hoge (id int not null primary key auto_increment ,a1 int null default null ,a2 int null default 0 ,a3 int not null default 0 ,a4 int not null default 100 ,b1 varchar(30) null default null ,b2 varchar(30) null default '' ,b3 varchar(30) not null default '' ,b4 varchar(30) not null default 'xxx' ); 数値型のa1～a4と文字列型のb1～b4にそれぞれnull設定とデフォルト値設定をしたとします。 //テストデータ投入 truncate hoge; insert into hoge(a1,a2,a3,a4,b1,b2,b3,b4) values(1,1,1,1,'a','a','a','a'),(2,2,2,2,'b','b','b','b'),(3,3,3,3,'c','c','c','c'); ここで、「削除」的な処理をするには各カラムにNULLを与えます update hoge set a1=null,a2=null,a3=null,a4=null,b1=null,b2=null,b3=null,b4=null; こうすると、null設定した数値型はnull、null設定していない数値型は0、 null設定した文字列型はnull,null設定していない文字列型は''になっているのが みてとれます。 これではわざわざデフォルト設定しているのが意味がありません デフォルト値に戻したい場合はdefault()関数で処理します。 //データを再設定 truncate hoge; insert into hoge(a1,a2,a3,a4,b1,b2,b3,b4) values(1,1,1,1,'a','a','a','a'),(2,2,2,2,'b','b','b','b'),(3,3,3,3,'c','c','c','c'); //デフォルトとに戻す update hoge set a1=DEFAULT(a1),a2=DEFAULT(a2),a3=DEFAULT(a3),a4=DEFAULT(a4),b1=DEFAULT(b1),b2=DEFAULT(b2),b3=DEFAULT(b3),b4=DEFAULT(b4); こうすればnull設定してあってもデフォルト値が優先になりますし、 0以外の数値デフォルトや''以外の文字列デフォルトへ戻すことも可能です
update テーブル set 危険フラグ=1 where 賞味期限 < now() + interval 24 hour; みたいな感じで
こんなデータの持ち方をすると集計しやすいかと 仮に長野、亀井、坂本、阿部、村田の5人がいて、 長野は亀井と友達、阿部は長野、亀井、坂本と友達、村田はぼっちだとすると //元データ create table user(uid int not null unique ,name varchar(20)); insert into user values(1,'長野'),(2,'亀井'),(3,'坂本'),(4,'阿部'),(5,'村田'); create table friend(id int primary key auto_increment,fid int,uid int,unique(fid,uid)); insert into friend(fid,uid) values(1,1),(1,2),(2,1),(2,4),(3,2),(3,4),(4,3),(4,4); ※friendテーブルのfidは友達二人をつなぐためのリンク用id (1)各自友達が何人いるか集計する select user.uid,name,coalesce(count,0) as count from user left join( select uid,count(*) as count from friend group by uid ) as sub on sub.uid=user.uid order by uid; (2)各自の友達の名前を羅列する select u1.uid,u1.name,friends from user as u1 left join( select f1.uid,group_concat(u2.name) as friends from friend as f1 inner join friend as f2 on f1.fid=f2.fid and not f1.uid=f2.uid inner join user as u2 on f2.uid=u2.uid group by uid ) as sub on u1.uid=sub.uid
バルク処理でupdateまでやってしまうとなると一度テンポラリテーブルを 作った方がよいかも //元データ create table TBL1(id int not null unique key,string varchar(10),count int); insert into TBL1 values(1,'aaa',0),(2,'bbb',3),(3,'ccc',1); create table TBL2(id2 int not null unique key,string2 varchar(10),count2 int); insert into TBL2 values(1,'aaa',0),(2,'bbb',2),(3,'ccc',1); //処理 create temporary table tmp(id3 int,string3 varchar(10),count3 int); insert into tmp values (1,'aaa',3),(2,'bbb',3),(3,'ccc',3),(4,'ddd',3); insert into TBL1 select id3,string3,count3 from tmp left join TBL2 on id3=id2 where count2 is null or count2<1 on duplicate key update count=count3; //テンポラリを使わない場合はunionでデータを羅列？ insert into TBL1 select id3,string3,count3 from (select 1 as id3,'aaa' as string3,3 as count3 union select 2,'bbb',3 union select 3,'ccc',3 union select 4,'ddd',3) as list left join TBL2 on id3=id2 where count2 is null or count2<1 on duplicate key update count=count3;
＞別に勝手に連番 注意する必要があるのはauto_incrementは必ずしも連番を保証する機能ではないこと あくまでも他のレコードと異なることを保証するためだけのものなので 抜け番や飛び番が発生することを理解する必要があります 抜け番が発生しないようにするためにはかなり負荷の高い無駄な処理が必要です どのような運用方法を想定しているかによります。
命題の通りだと ＞C社：1件　重複1件 ではなく、こうじゃない？ C社：1件　重複0件 また、3月のB社への問合せはどうするのでしょうか？ B社：0件　重複1件 とするには「重複」ではないですから、非表示でよいのでしょうか？ 総じてこんなかんじ //元データ create table client(cid int,name varchar(20)); insert into client values(1,'A'),(2,'B'),(3,'C'),(4,'D'); create table ask(mail varchar(50),cid int ,dt datetime); insert into ask values('aaa@aaa.com',1,'2013-02-01-10:00:00'),('aaa@aaa.com',2,'2013-03-01-10:00:00'),('bbb@bbb.com',3,'2013-04-01-10:00:00'),('ccc@ccc.com',4,'2013-04-02-10:00:00'),('aaa@aaa.com',1,'2013-04-03-10:00:00'); //表示 select t1.cid,c.name,count(*) as kensu,( select count(*) from ask as t2 where and t1.cid=t2.cid and dt between '2013-02-01 00:00:00' and '2013-03-31 23:59:59' ) as chohuku from ask as t1 inner join client as c on c.cid=t1.cid where dt between '2013-04-01 00:00:00' and '2013-04-30 23:59:59' group by cid
なんか説明がデータベーステーブルの行と列の考え方が90°狂っているとしか思えないんだが。id と他カラムとの関係が見えない。 group by がないんだけど、 tableごとに全行 group_concat したいだけですか？もしそうならjoin の順番を間違えてますね。 a テーブルからは、h テーブルにも同じid値が存在する行を選択して　全行に group_concat b テーブルも同様 で各一行づつになったサブクエリをjoin であれば、以下 select * from ( select group_concat(c) as c, group_concat(d) as d from a where exists ( select * from h where a.id=h.id ) ) as a1 closs join ( select group_concat(e) as e, group_concat(f) as f from b where exists ( select * from h where b.id=h.id ) ) as b1 ;
$pdo = new PDO("mysql:dbname=men", "root"); $pdo->query("set names utf8;"); // この行を追加する $st = $pdo->query("SELECT * FROM udon"); 取り急ぎの対策といたしましては、 上記のように1行追加してみるといかがでしょうか？？ また下記URLにも同様の現象を解決している事例がございましたので、 つけさせていただきました！ http://blog.machacks.net/2013/06/18/pdo%E3%81%A7 …
あくまで私見ですが参考までに →一般的には(1)が好まれるのではないでしょうか 往々にして選択肢というのはシステムの運用が始まると拡張することがないため １レコードに個別に埋め込むのが感覚的にももっとも適しているため メリット： 特定のレコードに対する有無だけをチェックする場合はもっとも効率的 データ構造が単純なためイメージしやすい （ようはエクセルちっくなデータだと思えばよいので） デメリット： 項目が増えるといちいちカラムを増やさないといけず、多くの選択肢がある 場合は物理的に対応できないなど、スケーラビリティが低い 冗長なもち方のため集計や抽出の際にあまり効率的なSQLをかけない →次に(2)と(3)はほぼ同様のケースであまりSQLライクではありません とくに(3)のような持ち方だとおおよそSQLとしての集計には向きません （例示の(2)はビット処理じゃないですね？1と2がチェックなら3？） メリット： カラム数がへらせる データの拡張が容易 デメリット： とくにインデックスがききにくいため大量のデータ処理にはむかない データに制限をつけにくい →個人的には(4)を使うケースが多いです メリット： 集計が簡単で簡便なSQL文で表現できる 拡張性はたかい デメリット： かならず集計のSQLが必要になるためなれないとSQL文が書きにくい ただし最初に書いた通り、拡張する必要があるかどうかで(1)の方を選ぶことも 多々ありそれはケースバイケースで設計時点で調整します
列Ａの値をインクリメントするようなＵＰＤＡＴＥ文を書いたことはありませんか？ update tbl set a = a + 1; などと同じように、シンプルに考えれば良いですよ。 update tbl set name_en = concat(substr(name_en,comma+1) ,' ',substr(name_en,1,comma-1)) ;
＞ちなみにこれはどれくらいのデータ数までなら問題ないのでしょう？ うーん、経験的にはインデックスさえきちんと貼ってあれば 数万件程度は実用レベルで使えるような気がします。 ちなみに「今年」とか「年齢」という不確かな定義（変化してしまうもの）を 格納しておくのはあまりお勧めできません。 （もちろん4/1時点での年齢など一定の条件がつけば別） 蛇足ですがデータの持ち方としては name,age,yearのような持ち方をしたテーブルを作った方が効率的かも //去年=2012、今年=2013としておけばよい create table user (name varchar(30),age int,year int,unique key(name,year)); insert into user values('taro',21,2012),('jiro',24,2012),('taro',22,2013),('saburo',20,2013); //結果 select name,sum(age*(year=2012)) as lastage,sum(age*(year=2013)) as thisage from user group by name ※だたし、データがない場合はnullではなく0が変えるので注意
>【select distinct カラム名 from テーブル1 union select distinct カラム名 from テーブル2;】 >としても重複を取り除いた後にテーブルを結合してるので結果的に両テーブルの重複した値を取り除くことができず。 いや、できますね むしろunionするならdistinctもいらないです。 //データ作成 create table t1(data int); create table t2(data int); insert into t1 values(1),(2),(2),(3),(3),(4); insert into t2 values(1),(3),(3),(5); //表示 select data from t1 union select data from t2; //重複も表示するならunion all select data from t1 union all select data from t2;
元テーブルのデータに特定の条件をつけるのはwhereで 処理結果からデータに特定の条件をつけるのはhavingで 既述します。 例えば、 （質問文の例） where 従業員職種テーブル.job_id not = 4 とか、 （税額を計算して10000円以上を対象にする） select 売上額 * 税率 as 税額 from table1 having 税額 > 10000 とか。 ※いったん対象にして処理をしてから条件を適用するhavingのほうが処理に時間がかかります。 where でできるのならそちらが望ましいです。 質問のSelect文なら、 select 従業員職種テーブル.worker_id, 従業員テーブル.name, 従業員テーブル.age GROUP_CONCAT(職種テーブル.job_name order by 職種テーブル.job_id) from 従業員職種テーブル left join 従業員テーブル on 従業員職種テーブル.worker_id=従業員テーブル.worker_id left join ot_dow on 従業員職種テーブル.job_id=職種テーブル.job_id where 従業員職種テーブル.job_id not = 4 /* これを追加 */ group by 従業員職種テーブル.worker_id order by 従業員職種テーブル.worker_id とかしてみてください。
＃１です。補足しておきます。 ＯＤＢＣ経由です。 accdb（リンクテーブル） <--ODBC--> MySQL accdb上で、自ファイル内のテーブルとリンクテーブルのクエリを作成する。
＃１、＃２、＃５です。 ＃３さんへの回答の補足を見落としてました。 原因は From にあります。 > left JOIN kashu ON song.kashu_1_ID = kashu.kashu_ID) > left JOIN kashu_yomi ON song.kashu_1_ID = kashu.kashu_ID) ←追加 > left JOIN kashu_yomi ky2 ON song.kashu_2_ID = ky2.kashu_ID) ←追加 ＜結合の方法＞ JOIN ＜テーブル名＞ ON ＜結合列の条件＞ であるべきが ＜結合の方法＞ JOIN ＜列名＞ ON ＜結合列の条件＞ になってる。 これ、kashu_yomi　は１行目の left JOIN kashu ON song.kashu_1_ID = kashu.kashu_ID) で拾えるので２行目は不要。 ３行目はテーブル名を記述するのが正しいので left JOIN kashu ky2 ON song.kashu_2_ID = ky2.kashu_ID) ←追加 です。 ただし、selectを ti2.tie_up as tie_up2 kashu.kashu_yomi, ←追加 ky2.kashu_yomi as kashu_yomi2 ←追加 と変更することも必要。
あ、１です。 新しくレコードを追加するんでしたね＾＾； 先ほどの例だと「今日のメモ」を上書きしてしまっていました。 （名字、名前が既に登録されていたら今日のメモを上書き、 名字、名前が一致しなければレコードを追加するというＳＱＬ文でした） あたらしくレコードを追加するのはINSERT INTOです。 主キーの設定をしなければどんどん追加できますけど、名前と名字がかぶってしまって無駄になってしまいますね。 私ならテーブルの構成はこうします 名簿テーブル ・ＩＤ （主キー） ・名字 ・名前 メモテーブル（主キーなし） ・ＩＤ ・日付 ・メモ メモがあればメモテーブルにどんどんINSERTしていけばいいと思います。 メモの内容の変更はをUPDATEでWHERE句でIDと日付を指定すればいいと思いますー＾＾ｖ
基本的な問題です sales_goods_noはreceiptを含むので文字列 goods_noはPK（プライマリーキー）なので整数です。 整数と文字列はJOIN（結合）出来ません 解決策 (1)receiptを9999とかにしましょう（商品数が多い場合もっと大きくする必要があります） (2)sales_goods_noを整数(int)にします。　エラーがうるさい場合テーブルを作り直してください。 (3)goodsテーブルに goods_no=9999,　goods_name=""というレコードを追加してください それでエラーは出ないはずです 最後に1つ言いたいことがあります。 普通質問するときは、エラー内容をコピペして添付します。最低限のマナーです。 それを怠ると、海外だと無視されることもあります。 日本はエスパーがおおいのでみんなさん的確に類推して答えてくれますが エラー内容がわかればこちらも答えるのが楽になります。 そもそも、エラー内容読みましたか？
　No.2です。 　書き忘れ、補足。 　もし、調べるのであれば、「トランザクション」とか、「分離レベル」などの単語で検索してみてください。この類の話題が、わんさかと引っかかります。 　ちなみに、先の例での正しい処理は、update文一発でやることなんですが・・・話を単純化するためにあえて、処理をselect・計算・updateと分離してあります。あしからず。
SELECT song.song_ID, song_name, song_name_yomi, kashu, ←これ これがkashuテーブルから参照するのかka2エイリアスから参照するのか判断できないから ちなみにmysql_query("・・・") or die(mysql_error())で デバッグするとよいでしょう。 なおmysql_query関数は非推奨なので、そのままの運用だと早晩いきづまりますので 移行を考えてください
カラムの型がVARCHERだからです。 VARCHERは文字列型なので、データを数値ではなく文字列として検索しMAXを探しています。 文字列比較は左側の文字から順番に1文字ずつ比較しますので、1と9では9の方が大きいと判断されます。 従って、9999 と 10001 では 9999 の方が大きいと判断されます。
ANO.2です。 うっかりしてました。 ＞⇒それを避けるためにバッチ処理を使わない設計にするとなると、 ＞ポイント残高テーブルを用意して、１３か月分の項目を用意する。 の部分。月が変わると更新しなきゃいけないのですが、そのために １３か月分の項目に加えて、基準月を用意します。 基準月は、当月利用可能ポイントの当月がいつなのかを示します。 プログラムで読み込んだとき（ポイント照会も含む） 基準月が当月でなければ、１３か月分の項目を順番にシフトして、 基準月を当月にして、更新してしまいます。 その後、画面表示なりの処理をする。 ⇒集計がむちゃくちゃやりにくい構造になるので、やっぱり、 　バッチ処理使ったほうがベターでしょうね。 注：集計ってなに？というと 今全員のポイント残高合計がいくら？ とか、顧客別のポイント一覧とかです。
nullを許諾して、デフォルト値をnullにしてみては
ちょっと違いますが「ビックリマーク」んお対応方法については共通するかと思いますのでURLを参考にしてみてください。 参考URL：http://blog.sou-lab.com/mamppro-phpmyadmin/
## 私はANo1の方の回答のようにスカラー副問い合わせ使ったほうがいい ##（適切なインデックスをつけると確実に処理が早いため）と思っていますけど ## 質問文の以下を素直に反映したSQL文を参考までに記載しておきます。 >やり方としては下記の(1)と(2)の結合ができれば良いと考えております。 select A.商品コード,A.販売個数,A.販売店コード,B.商品コード毎販売個数合計 from (　SELECT　商品コード,　SUM(販売個数) as 販売個数,　販売店コード　FROM　販売テーブル　 　　　　　　　　　　　　　　　　　　　　　GROUP　BY　CONCAT(商品コード,'and',販売店コード) ) as A, ( 　SELECT　商品コード,SUM(販売個数) as 商品コード毎販売個数合計　FROM　販売テーブル　group　by　販売テーブル.商品コード ) as B where A.商品コード = B.商品コード なお、 GROUP　BY　CONCAT(商品コード,'and',販売店コード) は GROUP　BY　商品コード,販売店コード で問題ない というより、商品コード,販売店コードのインデックス作っても早くならないので 後者のほうがいいのでは？ （ファンクションインデックス作るのならいいですが、ファンクションインデックスばかり作ると、 　システム全体としてインデックスの数が増える傾向になり効率悪い。） あ、ひょっとして、 販売店コード　A1　と販売店コード　andA1　を一つにまとめて集計したいということ？ （違うと思うけど）なら、そのままでないとだめです。
## 余計なお世話の話ですが。 MySQLでは、Left Join = Left Outer Join （他のDBでは、Left Join = Left Inner Join が多い） http://dev.mysql.com/doc/refman/4.1/ja/join.html　の 「上の構文リストの最後に挙げた LEFT OUTER JOIN 構文は、単に ODBC との互換性を確保するためのものです。 」 を参照。（古いマニュアルですけど変わってなかったと思います） したがって、ANo.1の方の回答で、 「actionテーブルには行はあるが， resultテーブルにはそれと結合できる行が存在しない」ときも出てきます。 ## 私は、これがあるからLeft Join のように　Inner、Outerを書かないJoinは嫌い！ ## 昔はまった。
　DATETIMEに日付以外の物を入れるとエラーになります。 　でも、これを担保してくれるだけの型でもないですよ。 　少なくとも、私は、2001年12月5日-2001年10月７日は、何日間ですか？なんて計算の為のアルゴリズムをいちいち作りたくはありませんから。 　これだけでも、汎用性のあるちゃんとしたルーチン作るの大変なんですよ。 　ましてや、ある基準日から、２００日後この日付は何日ですか？とか、1999年5月7日10:50の５０００分後はいつですか？なんて質問に答えるルーチンを作るのも嫌ですし、２０１０年６月１０日は何曜日ですか？というのはもっと嫌ですね。 　日付型をちゃんと使えば、ほとんど何も考えずに、上記の質問の全てに答えられます。 　この日付・時刻というやからは、おそらく、あらゆる単位系の中で、一番嫌らしい・ややこしい単位系じゃないかしら。考えてみれば、アナログ時計を読むのも結構難しいことやってますものね。まぁ、もう慣れてるから本能で出来ますけど・・・・（今、小さな娘に時計の読み方を教えるのに四苦八苦しているもので（笑））
dradra33さんはじめまして 結論から言いますと ストアドプロシージャは作成されていますし 実行されているはずです。 ただ内容がSELECT文なので ストアドプロシージャはデータベースから SELECT文の結果を取得して、パソコンメモリ上のどこかに 格納したはずです。でも、それだけです。 その結果をdradra33さんの目で確認するには別の命令が必要になります。 なぜそうなるか、説明しますと、プログラムは最終的な結果だけが重要で その途中経過をいちいち表示するとうざいからです。 (SELECT文をGUIで実行すると表示されるのはそれが最終目的だからです。) ストアドプロシージャの実行を確認するだけなら　INSERTかDELETE文なんかをお勧めします。 途中で消えるのはよくわかりませんね キー操作ミスじゃないんですかね。 別のGUIをつかってみては MySQLWorkbenchとか
>最終更新日 SHOW TABLE STATUSすればUpdate_timeで更新日時を得ることができます ただしエンジンによるのでMyISAMはけますがInnoDBは無理みたいです また、遅延書き込みなどあるので厳密な更新時間は得られないと思います 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/show-tabl …
パッと思いつくのは下記の2つほどですね。 a. 相関サブクエリを使う方法 SELECT * FROM master m WHERE ( SELECT COUNT(DISTINCT hakko) FROM data d WHERE m.kata = d.kata AND m.kyaku = d.kyaku AND hakko IN (201303, 201305) ) >= 2 WHERE句では、一つ一つの master レコードについて、 kata と kyaku が同じで hakko が 201303 か 201305 の data レコードを取り出し、その hakko の値が2種類以上有るかどうか調べています。DISTINCT が付いているのは hakko に同じ値が複数有っても1つと数えるためです。 b. 結合してHAVING句で判定する方法 SELECT m.kata, m.kyaku, m.code FROM master m join data d on m.kata = d.kata and m.kyaku = d.kyaku GROUP BY m.kata, m.kyaku, m.code HAVING SUM(CASE hakko WHEN 201303 THEN 1 ELSE 0 END) >= 1 AND SUM(CASE hakko WHEN 201305 THEN 1 ELSE 0 END) >= 1 master と data を結合したものを master の項目でグループ化し、HAVING句で hakko が 201303 のものと 201305 のものが存在するか判定しています。 性能的には、どちらも今一つかも知れません・・・。 MySQL version 5.5.8 で確認しました。 http://codezine.jp/article/detail/907 http://codezine.jp/article/detail/405?p=2
ケースバイケースですね。 リアルタイムの順位を求めるなら、DBから条件に沿った並べ替えを行ったデータを取得してPHPで処理してやればいいと思います。 週間ランキングのように決まった日に集計を行ってその結果を表示したいのなら、cron等で定期的に集計バッチを実行して集計結果をランキングテーブル等に保存し、その集計結果を表示するといったやり方の方がいいと思います。
たぶんこんな感じを期待しているのだとおもうけど かならずnameがユニークだとは限らないためnameで判断するのは微妙 SELECT count(DISTINCT a.name) as a_count ,count(DISTINCT b.name) as b_count ,count(DISTINCT c.name) as c_count FROM d LEFT JOIN a ON a.id = d.id LEFT JOIN b ON b.id = d.id LEFT JOIN c ON c.id = d.id WHERE d.id = 1
クエリを投げる前にとまっているなら コネクトかセレクトDBをうたがってみては？ $cn = mysql_connect("192.168.*.***", "user", "password") or die(mysql_error()); mysql_select_db("mydatabase",$cn) or die(mysql_error());
5.6の運用はしていないのでテストしていませんが普通auto_incrementのクリアは ALTER TABLE testtb AUTO_INCREMENT = 1 で、よくないですか？
>プライマリーキーがあれば、検索は高速になるのでしょか? プライマリキーはそのレコードを特定するためのカラムなので 他のカラムと連動してインデックスを貼るのは向いていません ユーザー管理テーブルをユーザーID,ユーザー名をとるのであれば ユーザーIDにはプライマリではなくユニーク属性をつけて、 ユーザーIDとユーザー名を合わせたインデックスを貼るほうが効果的です また参照だけで集計がないような更新頻度の少ないテーブルであれば、 トランザクションの必要がないので、データエンジンをMyISAMなどにして 高速化をはかるなど工夫できます
　auto_incremnt属性の付いたカラムの基本的な性質のため、普通は０を使えません。 　というのも、auto_increment属性のカラムは、そのカラムに、０かnullをインサートしようとした時に、自動採番した数値をカラムに代入するからです。 　カラムの値に０を許すと、自動採番の引き金になる０なのか、数値としての０なのかをMySQLが判断することが出来なくなります。 　ＳＱＬモード変数で、NO_AUTO_VALUE_ON_ZEROモードを有効にすると、この挙動が少しだけ変わり、nullをインサートしようとした時のみ自動採番するようになります。この場合は、０もデータとして利用できるようになります。 　が・・・・ 　そもそも、この質問が出る時点で、auto_incrementの使い方が間違った方向に行ってる気配を感じます。 　auto_incrementは、値の数字そのものには全く興味が無いがとりあえず、重複しない値が欲しいという時に使います。自動採番された数字は、連続しているとは「限らない」し、採番する時まで、どんな値になるかも不明です。 　例えば、ある決まった値から、連続したシーケンス番号を発行したい・・・と言う時には、使ってはいけません。欠番が発生する可能性があるからです。例えば、トランザクションＡとＢが同時に実行され、Ａがインサートした後で、Ｂがインサートを行い、その後、Ａがロールバックされたら、Ａの為に発行された数字は、欠番となります。 　この連続が不可欠の例としては、伝票番号があげられます。もし欠番が見つかったら、それは、伝票が行方不明になったという意味であり、監査の時に大騒ぎになります。 　このように、値そのもの（または、値と値の関係）に興味がある場合には、そもそもauto_incrementは使うべきではないとされています。ちゃんと自分で決められた条件を満たすロジックを作成して発行するべきです。 　０がないのが不満だと思った時点で、値の絶対値そのものに興味があると言うことですよね。大概これは、危険な兆候です。
もし本当に >SELECT * としているのであれば、必要カラムを明示的に列記すべき 今回の件であればtie_upテーブルを二重にjoinしていますので名称が競合していませんか？
> #1066 - Not unique table/alias: 'tie_up'と > エラーメッセージが表示されました。 uniqueという英単語の意味が分からなければ英和辞書を参照。 http://eow.alc.co.jp/search?q=unique 今回，tie_upというのは別名(alias)ではなく実表名(table)だったわけですが， > left JOIN tie_up ON song.tie_up_1_ID = tie_up.tie_up_ID) > left JOIN tie_up ON song.tie_up_2_ID = tie_up.tie_up_ID; と同一表を２度 用いたいのであれば，tie_up.tie_up_ID と言われてもそのtie_up表というのは not unique table だから，１度目に登場するtie_up表なのか，２度目に登場するtie_up表なのか，列別名を与えて区別してくれ，と言っているわけです。
>String sql = "select sum(oni) from テーブル名 where ken = '" + ken + "'"; これはoniというカラムを別途参照しているときにエラーがでているのでしょうか？ もしそうであれば String sql = "select sum(oni) as oni from テーブル名 where ken = '" + ken + "'"; などのクエリを投げてみてはどうでしょうか？ そうではなくSQL文をなげた時点でエラーがでているなら、やはりoniというカラムが ないと判断せざるを得ないですが・・・
外部キーが指定してあっても、 実際、SQLで取得する際には、2つのテーブルを結合する必要がありますので、 SELECT `song`.`song_ID`, `song`.`song_name`, `kashu`.`kashu` FROM `song` JOIN `kashu` ON `song`.`kashu_id` = `kashu`.`kashu_id` WHERE `song`.`song_name` LIKE '%%' こちらのような、SQLになるかと思います。
> (1)二つのテーブルの両方に存在するカラムの比較が全くなくても、式自体が > 成り立っていたらOKという事ですか？ > > それとも、 > > (2)最低１つは、（２つのテーブルに存在するカラムの比較）が必要で、 > それ以外はand等で、条件式として成り立つものならなんでもOKという意味ですか？ 実際に実行してみましたか？ 　SELECT * 　FROM Table_A LEFT JOIN Table_B ON 1 = 1 といった書き方も可能ですから、(1)が正解です。
運用方法を厳密にどうしたいかによりますね 基本的にはプライマリキーはインデックスに含めないのが好ましいので a_idをプライマリとせずに、別途auto_incrementのプライマリキーを設定してみては？ つまりa_idを含むインデックスをつくるべきだということです。 （a_idが含まれない場合はrangeですが、含まれればtype=indexを得られます） create table a_mst(pid int not null primary key auto_increment,a_id int not null unique key,a_name varchar(30),a_price int,a_print_flg tinyint); alter table a_mst add index (a_id ,a_price,a_print_flg); insert into a_mst(a_id,a_name,a_price,a_print_flg) values(1,'a1',200,0),(2,'a2',150,0),(3,'a3',100,0),(4,'a4',250,0),(5,'a5',50,0),(6,'a6',150,1),(7,'a7',50,1); //データ抽出 EXPLAIN SELECT a_id,a_price,a_print_flg,b_data FROM a_mst INNER JOIN b_mst ON a_id=b_id WHERE a_price >= 100 AND a_price <= 200 AND a_print_flg = 0; また、a_nameが集計のキーにならないなら、a_idとの間に別途インデックスを作成して 自分自身を結合するか、別テーブルに正規化してしまうことです。 alter table a_mst add index (a_id ,a_name); EXPLAIN SELECT a1.a_id,a2.a_name,a1.a_price,a1.a_print_flg,b_data FROM a_mst as a1 INNER JOIN a_mst as a2 ON a1.a_id=a2.a_id INNER JOIN b_mst ON a1.a_id=b_id WHERE a1.a_price >= 100 AND a1.a_price <= 200 AND a1.a_print_flg = 0; ※どうしてもテーブルをわけたくないなら、出力項目全てに対してインデックスを 貼る必要がでてくるかもしれません。しかしあまり大量のインデックスを貼ると オーバーヘッドが大きく、スピードアップできないかもしれません
> 実際にid15の順位を取得しようとするとエラーが出てだめでしたorz > FROM WHERE id=15 vote a FROM句とWHERE句が混ざってますよ。 ↓では？ FROM vote a WHERE id=15
厳密に測定すれば、2つしかカラムのないテーブルの方が、10カラムのテーブルよりも高速です。 たとえ、残り8カラムのデータすべてがNULLでもRDBMSでのテーブルスキーマの管理コストが余計にかかるためです。 しかし、ほとんどの場合、その他の要因のほうがパフォーマンスに影響を与えると考えられます。無用にテーブルを分割しても結合コストのほうが大きい場面のほうが多いと思います。 ちなみに、RDBではなければよく使うカラムが限られるような局面が多い事に注目して実装化されたのが「カラムベース・データベース」です。 この考え方は最近のMS SQL Serverなどでも取り入れられており、注目する必要があるかもしれません。
＞XAMPPでｍｙｓｑｌ これはphpMyAdminでデータ確認をしたときの文字化けでしょうか？ テーブルやカラムの照合順序は「utf8_unicode_ci」など 適切なものが設定されていますか？
MySQLでDB EngineがINNODBの場合基本として主キーでクラスタ化されて配置されます。主キーを宣言しない場合はMySQLが暗黙の主キーを人工的に設定し、データ配置を行います。 そのため、更新削除がなければ、概ね挿入順にデータを取得することになります。 ですので現在の実装であれば SELECT * FROM ．．． LIMIT 1; で最初に挿入した行を取得できる可能性があります。 しかし、これは実装依存ですし、MySQLの仕様として保証されるものではありません。 将来的に1クエリを並行に実行するようなものになった場合、異なる結果が返されるかもしれません。 「いつも同じ並び順で表示される」ことを基準にするなら、今のうちに「AUTO_INCREMNT」属性の主キーを持ったテーブルを作りINSERTすべきと考えます。 これなら ORDER BY 主キー LIMIT 1; で一番古いレコードを取得出来ます。
SQLの仕様上抜き出される順番はOrder　Byのみにより決定されます。５と１と３のみでその順番に抜き出したいのであれば「order by case id when 5 then 1 when 1 then 2 when 3 then 3 else 4 end」等で対応する以外無いです。
XAMPP 新バージョン 1.8.1の内容 Apache 2.4.3 MySQL 5.5.27 PHP 5.4.7 phpMyAdmin 3.5.2.2 FileZilla FTP Server 0.9.41 Tomcat 7.0.30 (with mod_proxy_ajp as connector) Strawberry Perl 5.16.1.1 Portable XAMPP Control Panel 3.1.0 (from hackattack142) http://www.apachefriends.org/jp/xampp-windows.html とありますように Apache 2.4.3や MySQL 5.5.27も 入っている ワンセットになっているのが、 XAMPPです。 正常に作動しなくなりますので ポート80の番号は、変更しないで下さいとの 注意書きは、読みませんでしたか？ 先ず、ApacheもXAMPPも アンインストールして 再度インストールして下さい。 XAMPPのダウンロード先 外国人女性の写真の下より 下に進みますと XAMPP for Windows 1.8.1, 30.9.2012 Version XAMPP Windows 1.8.1 と青い細い帯が、あります。 こちらからダウンロードして下さい。 http://www.apachefriends.org/en/xampp-windows.html ZIP 後ほどファイルを修正しなければいけませんので 圧縮でダウンロードして下さい。 重要 Cドライブ直下にディレクトリxampp（必ず小文字で名前を付ける）を作りまして そのままインストールして下さい。 ※ディレクトリとは、Excelでいうフォルダの事を プログラミング言語でそう呼びます。 もしよろしけけば 解凍レンジ をお使い下さい。 外部DLLファイルを必要としない解凍、復元専用ツール です。解凍せずに中身を表示し、個別ファイルのドラッグアンドドロップでの取り出しにも 対応しています。 電子レンジの画像のアプリです。 その下の緑のダウンロード をクリックして下さい。 http://freesoft-100.com/review/range.php APACHE FRIENDS が、APACHEやXAMPPを 配布しています。 ダウンロード元 www.apachefriends.org インストール後、デフォルトでは、 C:\Program Files\xampp\htdocs がXAMPPのDocumentRootとなります。 ★重要★ PHP文字化けを解消する方法 XAMPPの php.iniを修正しなければいけません。 (1)事前にデスクトップにテキストエディタの ショートカットを置きます。 用意されていない場合は、 テキストエディタをインストールする (2)・コンピューターの ローカルディスクCを開く ・ XAMPPのディレクトリを開く ・ php.iniをテキストエディタの上に乗せて 開く（メモ帳で開いてはプログラム修正できませんのでいけません。） (3)必ず php.iniファイルの内容をコピーする 間違うと取り返しが、つかなくて インストールし直しになります。 うまくインストール出来ない場合が、 ありますので要注意して下さい。 以下は、Apacheの旧バージョンでも同様です。 ○×行目の違いです。 (4)Apache最新版では、 ★default_charset="UTF-8" 先頭の；セミコロンか#シャープを削除 814行目付近にありますので探して下さい。 ★mbstring.Language=Japanese 先頭の；セミコロンか#シャープを削除 1860行目付近にありますので探して下さい。 ★mbstring.internal_encoding=EUC-JP なども文字コードを mbstring.internal_encoding=UTF-8 に変更します。 先頭の；セミコロンか#シャープを削除 1866行目付近にありますので探して下さい。 最後に ★タイムゾーンの設定をします。 日本に住んでいるので date.timezone=Asia/Tokyo 先頭の；セミコロンか#シャープを削除 1044行目付近にありますので探して下さ い。 変更をファイルの上書き保存をして 完了です。 他にMysqlの一部のファイルも 修正する箇所が、ありますが、 コマンドプロンプトの状況を 見ながらとなりますので 次回にします。 また、不明な点が、ございましたら いつでも私に質問して下さい。 回答いたします。
かなり強引ですがこんな感じ？ //元データ create table hoge (id int,name varchar(20)); insert hoge values(1,'apple'),(1,'banana'),(2,'onion'),(2,'potato'),(2,'carrot'),(2,'radish'),(3,'beef'),(3,'chicken'),(3,'pork'); //集計 select id ,concat(group_concat(name) ,repeat(',NULL',(select max(c) from (select id,count(name) as c from hoge group by id) as sub)-count(name))) as name from hoge group by id; そもそも「NULL」を文字列として使用していいのか怪しいところ また例題のNULLの後ろにカンマがあったりなかったりブレがあるのが気になる ロジック的には、nameの最大件数を拾って、自分の件数との差だけ「,NULL」という 文字をつなげる・・・みたいなかんじ、 ただし思いつきを冗長にかいただけなのでもっと有効な方法があると思います
.>　一応自分でも調べててWHERE句では結合よりも先に条件を記載する方が良いとか書いてました。 >　あと、IN演算子がちょっと問題な演算子ということが。 結合処理については、駆動表の絞り込みが出来るのならそこで件数を絞り込みを行うのは有効です。 しかし、絞り込みでそんなに件数が減らない場合、駆動表・内部表ともにWHERE条件を先に適用させるSQLは結合にINDEXが使えないので逆に遅くなる可能性があります。 ここらあたりはテーブル構造やデータの状況にもよるので一般論はありません。 IN句は意味的にOR条件と等値です。後はRDBMSの実装しだいですが、場合によってせっかくINDEXが使えるような場面でも、IN句の場合全表検索を選択する傾向があるのも事実です。 > WHERE　ＡＡＡ　ＩＮ　（'122','244','366'） のような場合、オプティマイザがどのような実行計画を選択するかは場面によって違うと思いますが、テクニックとしては ( SELECT '122' UNION ALL SELECT '244' UNION ALL SELECT '366' ) AS Q のような副問合せ（インラインビュー）を作り、結合処理に変換することでパフォーマンスが上がる場合もあります（AAAにINDEXがある場合） > GROUP BY ＡＡ．Ａ１ HAVING COUNT(*) >= 0 > といった処理も重くしてしまうのでしょうか？ すみません、この条件の意味がよく分かりません。 「GROUP BY ＡＡ．Ａ１」で「COUNT(*)」が返す値はゼロ以上以外にあるのでしょうか？ （「COUNT(*)>0」ならまだ分かりますが、この場合はEXITS述語を使ったほうがパフォーマンス的に有利な気がします。） この欄だけではSQL全般のセオリーは書ききれません。 http://books.shoeisha.co.jp/book/b104811.html を是非読んでください。
where以降意味がわからないので割愛して、 とりあえず普通にjoinするやりかたはこう select * from timeTpl as t left join booked as b on b.date ='2013-06-05' and ( t.start >= b.startTime and t.start < b.finishTime or t.finish > b.startTime and t.finish <= b.finishTime)
CSVをMySQLに流し込むだけ また、お勧めはしませんが場合によってはMySQLはCSVデータをエンジンに利用できます MySQLにおける検索の仕方などはMySQLの書籍やWEBサイトで 学習してください
＞値を1レコードに詰め込む必要があり30個近く １レコードについて多少カラムが多くてもさほど問題はないでしょう ただ、データの蓄積がすすみテーブルが肥大化したときには シークに時間がかかったりするかも 集計やデータ抽出がメインであればインデックスをきちんと貼っておけば スピードは確保できると思います。
MySQLの戻り値としては当初の表示データのモノがのぞましく 受け取ったプログラム側でテーブルに表示しなおす方がよいと思います どうしてもデータをMySQL側で処理したい場合は group_concatで処理することになると思います
＞今回の私の質問にある、伝票番号毎の合計（入金も含む）を集計する 私の認識が間違っていたら申し訳ないですが それって私の書いた「集計」のSQLだと思うのですがちがいます？
freの受け渡しを配列処理でできれば構文は簡素化できます <input type="text" name="fre[]"> <input type="text" name="fre[]"> <input type="text" name="fre[]"> <?PHP $sql = "SELECT id FROM friend WHERE 1"; $str=""; $fre=isset($_POST["fre"])?$_POST["fre"]:false; foreach((array) $fre as $val){ if(!empty($val)){ //空データの場合処理しない $str.=$str===""?"AND name IN (":","; $str.=$val; } } if($str!="") $str.=")"; $sql.=$str; print_r($sql); ?> nameが完全一致ならlikeで検索する必要はありません
>like '%4%' のような前方後方一致はSQLの不得意分野で基本的にインデックスはきかないため、 なにをやっても高速化は期待できません 遅くても気にしないなら適当なセパレータを使って連結してからlikeを使えば 書式はすっきりします（さらにスピードはおちると思いますが・・・） select * from tb where concat_ws(char(0),bang,name,tuki) like '%4%; ただし、この場合もbang,name,tukiは文字列型のカラムでnullがないことが前提になります そうでない場合は例外処理をいくつかかます必要があるでしょう
パイプ(||)で文字連結をするには事前の設定が必要です。 http://db.just4fun.biz/MySQL/MySQL%E3%81%A7%E3%8 … 事前の設定なしで文字連結を実現できるという理由でconcat関数を使ったのではないでしょうか。
　ＭｙＳＱＬは、さまざまなＯＳにインストールできます。 　ついでに、ＭｙＳＱＬに接続する方法も、実に様々な方法があります。 　というわけで、情報があまりにも不足していて、回答のしようが無いのが本音なんですが・・・ 　まぁ、とりあえず、windowsの何かにインストールして、PHPMyAdminで接続しようとしていると仮定して。 　最初は、つながっていたというのなら、サービスが起動しているかどうか確認してください。 　コントロールパネルの管理ツールの中にあるサービスで（windows　ＸＰ以降ならここにあるはず。これ以前なら、忘れました=^・・;=）、インストールされているサービスが全て列挙されますから、まず、MySQLが登録されているか、起動しているかどうか確認してください。 　もし、ステータスが、停止（起動の字がない。）なら、起動してあげてください。ツールバーからでも、右クリック→プロパティーで出てくるダイアログからでもかまいません。 　ついでに、自動起動をセットしておくとなお良いですね。同じダイアログから設定できます。 　さて、仮定が間違っているなら、質問事項がいくつか。 　１．インストールしたＯＳとバージョン 　２．ＭｙＳＱＬのディストリビューションの種類（どこから、何をダウンロードしましたか？） 　３．インストールの方法。 　４．ＭｙＳＱＬにはどうやって接続しようとしていますか？ 　（５．エラーメッセージは、何に出てきたのですか？まさか、何もないところにいきなりダイアログがでたわけじゃないですよね？） 　以上が補足されれば、きっと回答が出ると思います。
ｍａｘがいいでしょう。 処理時間に問題があればINDEXをつければ瞬時に出てきます。
>３．userのデータが複数あっても、取得するのは新しいものから3件のみ まで考えるとidも比較しなくてはいけないかもしれないですね select * from テーブル as t1 where (select count(*) from テーブル as t2 where t1.user=t2.user and (t1.date<t2.date or t1.date=t2.date and t1.id<t2.id) ) <3 order by (select max(`date`) from テーブル as t3 where t1.user=t3.user) desc ,user ,`date` desc
定義、使用すべてでバッククォート「`」で括れば使用は出来ます。 create table `create` ( dummy int ); ただし、お勧めはしません。ODBCなどで使う場合などがあると破綻するからです。
ごめんなさい、単純にこれでいいかと・・・ UPDATE KOKYAKU_TABLE SET id = 9 WHERE id =0; UPDATE TYUMON_TABLE SET id = 9 WHERE id =0; UPDATE GAZOU_TABLE SET id = 9 WHERE id =0; JOINしてやりたいならまた書きますが、 無難にこれでいいと思います。 質問を読み間違えてたらすいません。
test_masterテーブルの「initial_kana」にINDEXはありますか？ なかったら付けてください。 後、インラインビューの「where test_id is not null」の必要性 が分かりません。 「test_id」にINDEXがあり、しかも内容がほとんどNULLならば、 この段階で絞込むこともあるかもしれませんが、そうでないなら、 FIND_IN_SET関数の判定と二重チェックになると思います。 selectp.product_id as product_id, am.id as id from test_master as am join product as p on am.initial_kana = 'あ' and FIND_IN_SET(am.id, p.test_id)<>0 group by am.id limit 20 offset 0 で試してみてください。
エラーは出てないということなのでしょうけど、動かない状況の詳細をもうちょっと欲しいところです。phpでのwarningすらも表示しない設定になってるような気がする。 でも、みなおすと、pdo の実行順というより、htmlの記述の方に問題有りそう。 </tr> と <tr> の間つまり行間で、文字列出力すると、最近のブラウザは、table の枠の外に表示したりして、どこに何が表示されてるか解らなくなります。場合によっては、出力されたhtmlソースをみて初めてwarning表示に気付く。 <table> 出力前に sql文を発行したなら、その直後で、 errorInfo チェックを行って下さい エラーがなければ、<table>用の文字列を出力していくようにします。 また、最後の閉じタグ</table> がないと、表は全く表示されなくなるブラウザも有りますのでこれも注意して下さい。 まずは、html文法で、どこにどの文字列をはさんでよいのか把握する方が先なのでは？ あと、ごく初歩的ですが、離れたところに記述してるせいで、途中で、$link 変数に別なデータを入れてしまったりなどもあるので、どの変数がどこで使われてるかなどもしっかり把握しておく必要があります。まあ、ちょっとしたタイプミスで意図せずそうなることもあるので、var_dump() でのチェックは有用です。
パスワードを保存するときは、ハッシュ化（復元不可能な暗号化）をしなければなりません。 これはパスワード管理の基本中の基本です。 登録の時に、hash("sha256", $salt . $_POST["pass"]) とかで変換してDBに格納し、認証の時には入力された物を同じ関数でハッシュ化して、格納された値と一致したら認証OKとします。 $saltについては、「ハッシュ ソルト」とかで検索して勉強してください。 セキュリティは難しいように見えますが、基本がわかってしまえば楽です あと、sprintf + mysql_real_escape_string でSQL文を組み立てるのは古いやり方で、 これからプログラミングを学ぶのなら、やめましょう。 mysqliライブラリとかPDOライブラリとかの、prepare等を使ってください。
$name3 = mysql_query("SELECT name FROM hoge2 WHERE id != '".$id."' AND name = '".$name."'"); じゃないでしょうか。
select * from Bテーブル join (SELECT SUBSTRING_INDEX(aカラム, '#', 1 ) as bカラム from Aテーブル) as sub on Bテーブル.id = sub.bカラム; って感じでしょうか。
たとえばこんな感じ create table hoge (id int,url varchar(200)); insert into hoge values (1,'http://www.AAA.com/中略/0109.html'), (2,'http://www.AAA.com/中略/acb.html'), (3,'http://www.AAA.com/中略/0110-1.html'), (4,'http://www.AAA.com/中略/acb1.html'), (5,'http://www.AAA.com/中略/2acb.html'), (6,'http://www.AAA.com/中略/a3cb.html'), (7,'http://www.AAA.com/中略/123/abc.html'), (8,'http://www.AAA.com/中略/123.htm'); select * from hoge where url regexp '/.*[0-9][^/]*\.html$'
select id,case hoge_id when 0 then redult else (select redult from tbl t2 where t2.id=t1.hoge_id) end from tbl t1 order by 1 です。
＞mysql_select_db("db1".$s); mysql_select_db("db1",$s); じゃないの？
GUIではphpmyadminが有名ですが、mysql workbenchもありますね。こちらはクライアントアプリなので接続設定とかちょっと手間ですが。 余計なお世話かもしれませんが、GUIは視覚的に使えて便利なので、いざGUIがない環境でテーブル定義の更新を行う等と言った場合に対応できなくなることがあります。 SQLを理解していればそんなことはないのですが、GUIばかりでSQLを覚えずにいるエンジニアもいますので(本当にいるから困る)、そのようにならないためにもまずはCUIで一通りできるところまで覚えるほうがいいかと思います。
SELECT title, code, name FROM address_book NATURAL JOIN customers; じゃだめなの？
MEMORYエンジンは通常のストレージに保存するよりかなり容量をくいますので ギリギリの容量だと難しいかもしれませんね ssdなどではダメなんでしょうか？
＞mysql_query('SELECT name FROM hoge2 WHERE name=$name'); シングルクォーテーションで囲んでいるので$nameは展開されません また、プリペアド処理ではないので$nameにクォーテーションがないと かりに展開されても文字列はマッチしません せめてこんな感じに mysql_query("SELECT name FROM hoge2 WHERE name='".$name."'");
別カラムでAを保持してインデックスはるだけで済む話 数字の項目についてはAやBと別次元でオートインクリメントすればいいのでは？ アルファベット付きでも付きじゃなくても、ユニークは保証されます オートインクリメントは単にユニークなIDを振るための手段なので 運用方法によっては抜け番だって発生するし連番であることを期待しない方がよい
ちなみに後からuniqueを設定するとしても すでにあるレコードの該当フィールドが「ユニークなデータで埋まっている」 のが前提になります。 2個以上同じデータがある場合は当たり前の話ですがユニーク属性を 後付けすることはできません
http://dev.mysql.com/doc/refman/5.1-olh/ja/date- …
スクリプト側でやってもいいですし、SQLでやりたいのであればgroup byを使うことになるでしょうか。 テーブル構造が提示されていないのでそれ以上のことは何も言えません。
select * from 表A, 表B where 表A.列1 = 表B.列2 and 表A.列3 = 値 と select * from 表A inner join 表B on 表A.列1 = 表B.列2 where 表A.列3 = 値 は同じ結果となります。前者の方が古くからある構文，後者が新しい構文になります。新しいといっても20年は経っていますけれど。 > 普通は、どちらの書き方で書くとか、 > そういうお作法的な暗黙の了解はあるでしょうか？ 旧構文は，結合を指定する要素がfrom句とwhere句に分かれてしまっているのに対して， 新構文では次のように各句の機能が明確ですから，join句の使用をお薦めします。 射影…select * 結合…from 表A inner join 表B on 表A.列1 = 表B.列2 選択…where 表A.列3 = 値 > 書き方によっては「LEFT OUTER JOIN」みたいにも書けるのでしょうか？ 旧構文で外部結合を記述することもできますが，各データベース製品の独自構文になります。標準SQLの規格ではありません。 > 「WHERE」だと3つ以上繋げられない(？)から、奨励されていない、とか そういう制限はありません。
datetime型かdateとtimeを組み合わせないと予約が１回しかできませんね 今回の例だとこんな感じ？ select t.`time` from time1 as t left join booked as b on t.time>=b.time and t.time<b.finish where b.time is null finishの時間が次の予約とかぶるので冗長な書き方になります
>もっと効率の良いテーブル設計 絶対的なデータ量がおおいなら、効率もなにもないのでは？ 5000件のデータというのは5000項目別々でそれらが相関関係をもつのか たんに冗長なデータが5000個登録されるのかによって設計は異なります ご提示の例では何がしたいのかわからないので もう少し具体性をもった質問が良いと思いますよ
phpinfo.phpなど適当な名前で <?PHP phpinfo(); ?> というファイルを保存してアクセスしてみてください mysqlに関するモジュールが表示されないようであればphp側での設定が不十分です OSがよくわからないけど、スキルが伴わないならxamppなどでやる方がよいかと
> ・エントリーに属するすべてのカテゴリーデータを取得するにはどうすれば良いでしょうか？ 構造的にはエントリーテーブルとカテゴリーマスターテーブルは対称になるので、#1で例示したSQLのテーブル名やカラム名をカテゴリー関係に入れ替えるだけで出来ますよ。 SELECT DISTINCT cm.* FROM カテゴリーマスターテーブル cm LEFT OUTER JOIN エントリー所属カテゴリーテーブル ec ON (cm.カテゴリーID = ec.カテゴリーID) WHERE ec.エントリーID = 101 テーブル間の構造が把握できない場合はER図などを書いてみると良いでしょう。 > ・例えば、一旦複数レコードとして取得後、スクリプト側で文字列連結とかして、1カラムのようにして、1レコード表示するのでしょうか？ > ・希望としては、エントリー毎に、属しているすべてのカテゴリー名とかを表示させたいです ？？？ エントリー毎に1行出力して、ひも付く全カテゴリーをその行に含めたいという事でしょうか？ そうだとしたら、GROUP_CONCAT を使えば良いでしょう。 SELECT cm.*, GROUP_CONCAT(et.件名) FROM カテゴリーマスターテーブル cm LEFT OUTER JOIN エントリー所属カテゴリーテーブル ec ON (cm.カテゴリーID = ec.カテゴリーID) RIGHT OUTER JOIN エントリーテーブル et ON (ec.エントリーID = et.エントリーID) GROUP BY cm.カテゴリーID ORDER BY cm.カテゴリーID 複数行が良いのなら、結合してカテゴリーID順にソートすれば良いでしょう。 SELECT cm.*, et.* FROM カテゴリーマスターテーブル cm LEFT OUTER JOIN エントリー所属カテゴリーテーブル ec ON (cm.カテゴリーID = ec.カテゴリーID) RIGHT OUTER JOIN エントリーテーブル et ON (ec.エントリーID = et.エントリーID) ORDER BY cm.カテゴリーID 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/group-by- …
名前が決まるまで事前に用意しておく必要はありませんので、最初はidとnameだけで十分です。
手元に環境がないので試していませんが、 MySQLは正規表現が使えるようなので、それを使うと楽です。 これを試してみてください。 SELECT * FROM テーブル名 WHERE フィールド名 REGEXP '/[0-9]+\\.html$' （「/[1桁以上の数字].html」で終わるものを検索）
select hoge2.* from hoge1,hoge2 where int1=int2 and hoge1.id=hoge2.id てことかな？
http://dev.mysql.com/doc/refman/5.1/ja/adding-an … 書いてある通りそのままやればいいです。
No2の方がおっしゃっているように、postage_price_min　postage_price_max　daibiki_priceは 文字型として処理しているように見受けられます。 もういちど、型のチェックをおねがいします。
MySQLじゃなくてphpの問題でしょう。 (3)は、phpの short_open_tag がoff なのでしょう。 php4 時代は、default on だったけど、php5 になってからは、default off です。 <?php で開始するように書き換えた方が今後も無難だと思います。 (5) は、まだ、$_GET[] を受け取ってないから、変数（または連想配列キー）が存在しないというwarning でしょう。 isset() で存在確認してから使って下さい。 上記は、php version upによるセキュリティ設定改善の結果です。 ネットショップ構築するなら、なおさらセキュリティに気を使って下さい。
複雑なクエリを書けばなんとかなりはしますが、内部で色々やろうとすると混乱するだけになるかと思います。 ストアドプロシージャという機能がありますので、PHPでやるのがいやであれば、そちらで行うことをおすすめします。
文字列「%佐藤%」には両端に引用符を付けて下さい。 SELECT * from `table` where REPLACE(name,'★','') like '%佐藤%' です。
MyISAM エンジンで作成するなら、連動primary key で指定した２番目カラムを int NOT NULL AUTO_INCREMENT　とすれば、１番目のカラム値ごとに、１から順に番号を振ってくれます。 innodb エンジンでは出来ません。 create例 CREATE TABLE `auto_rendo` ( `column1` int(11) NOT NULL DEFAULT '0', `column2` int(11) NOT NULL AUTO_INCREMENT, `memo` varchar(255) DEFAULT NULL, PRIMARY KEY (`column1`,`column2`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8
ここはMySQLの板ですがaccessの質問？ たぶん名前でJOINしてORDER BY するだけだと思いますが
簡単な方法として、INFORMATION_SCHEMAのTABLESテーブルを利用して、 SELECT CONCAT('DROP TABLE ', TABLE_NAME, ';') FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'hoge\_%'; という感じのSQLでテーブル削除用のSQLを作成してはいかがでしょうか。 もしくはストアドプロシージャを作成して動的SQLを実行するか。
> whereで指定した場合id全部取得できるんですね。1つしかできないと勘違いしていました PerlのDBIについての説明にざっと目を通しておくと良いかもしれません。 http://dbi.perl.org/ http://search.cpan.org/~timb/DBI/DBI.pm また、"Perl DBI"で検索すると様々な方の解説記事を見つけられます。公式ドキュメントを読んでもピンと来ない場合は検索してみましょう。 > idでやったことをgroup_idでやればいいのでしょうか？この場合idの意味ってありますか？ちなみにidは登録者番号です 基本的にそういうことです。ただ、登録者番号ならregistrant_idなどと名付けるのでは。 行ごとに固有の番号が振ってあると、その行のデータを指定して取り扱うときになにかと便利だと思います。普通に考えて、データの複数ページにわたる表示、削除や変更をする場合、idがあったほうが楽ではありませんか。 例えば、Webのフォームなどで登録者IDごとにデータの一覧表示をして、削除するものをそこから選ぶ場合、IDさえフォームから送ってもらえると削除するものが一意に決まり、簡単に削除出来ますよね。また、IDで整列して表示すれば複数ページにわたっる表示が必要な場合に簡単に重複なく次のページを表示できます。
MySQLの文字コードと、コマンドプロンプトの表示できる文字コードが異なるからでしょうね そもそもxamppを導入してphpMyAdminが使える環境なのに どうしてもコマンドプロンプトで入力する必要があるのでしょうか？ とりあえず「コマンドプロンプト utf-8」あたりでググればいろいろヒットすると思いますが
`a-test` で試してみてください
マニュアルを読めば、最大何バイトまで入るかがわかります。 http://www.dbonline.jp/mysql/type/index6.html あとは、「あ」 1文字が何バイトかがわかれば計算できますね。 これは使用する文字コードによって子tkなりますが、UTF-8を 使うなら、「あ」1文字は3バイトです。 あとは技術者たるもの、自分で計算してください。
> SELECTの処理が何秒かかったとしても終わってから次のphpの処理にいっているんですか？ はい。待ってくれます。 ただ、所定の時間返ってこないとタイムアウトになり、失敗を返してから次の処理に行きます。 もっと具体的に言うと、同期APIだと待ちます。非同期APIだと待ちません。 いずれの場合でも、意図に反してMySQLが結果を返さないのを無視して実行を進めることはありません。 非同期APIの場合は例えばこんなコードになるみたいです。 http://www.php.net/manual/ja/mysqli.poll.php PDOからは非同期APIは使えないようですが。 http://php.net/manual/ja/mysqlinfo.api.choosing. …
>シェル状態ではどのようなコマンドになるのでしょうか？ sshで接続してから、そのまま mysqldump -u サーバー名 -p データベース名 > testdump.sql で、カレントディレクトリにtestdump.sqlが出力されるんじゃないですかね？
#2の補足です。対戦表風に横に並べたいのなら、下記の様に並べてSELECT句にサブクエリを並べて書けばよいです。 SELECT uid, COALESCE((SELECT SUM(val) FROM zaiko WHERE from_uid = 1 AND to_uid = uid), 0) - COALESCE((SELECT SUM(val) FROM zaiko WHERE to_uid = 1 AND from_uid = uid), 0) AS from_1, COALESCE((SELECT SUM(val) FROM zaiko WHERE from_uid = 2 AND to_uid = uid), 0) - COALESCE((SELECT SUM(val) FROM zaiko WHERE to_uid = 2 AND from_uid = uid), 0) AS from_2, COALESCE((SELECT SUM(val) FROM zaiko WHERE from_uid = 3 AND to_uid = uid), 0) - COALESCE((SELECT SUM(val) FROM zaiko WHERE to_uid = 3 AND from_uid = uid), 0) AS from_3 FROM user ORDER BY uid; (縦横を入替えるには引き算の前と後を入替えます) また、#4さんのSQLは MySQL version 5.5.8 で問題無く動作しました。 下記の様にスカラサブクエリを使っても書けますね。 SELECT u1.uid AS from_uid, u2.uid AS to_uid, COALESCE((SELECT SUM(val) FROM zaiko WHERE from_uid = u1.uid AND to_uid = u2.uid), 0) - COALESCE((SELECT SUM(val) FROM zaiko WHERE to_uid = u1.uid AND from_uid = u2.uid), 0) AS val FROM user u1 INNER JOIN user u2 ORDER BY u1.uid, u2.uid;
>ちなみに(1)のmysqlにログインというのは、 ああ、なるほどズブの・・・ ユーザー名とパスワードなどログイン情報わかっているのでしょうか？ mysqlのコンソールにログインするには mysql -u ユーザー名 -p として、パスワードを入力します。 もしログイン情報がわかっていないなら無理なのであきらめてください ちなみに管理者がセキュリティを少しでもきにしているなら sshでログインするときのユーザー名とパスワードとは異なるものが 設定されていると思います。
>大きくなり過ぎて一括ではエクスポートもできなく では小さいうちはなにでエクスポートできているのでしょうか？ とりあえずphpMyAdminのエクスポートではできない？
goup byが無いから。 SELECT 仕入テーブル.date_y, 仕入テーブル.date_m, 仕入テーブル.id_direct_cost, 勘定項目テーブル.name_cost, SUM(仕入テーブル.price) AS sumcost FROM 仕入テーブル NATURAL JOIN 勘定項目テーブル WHERE 仕入テーブル.date_y="'.$y.'" AND 仕入テーブル.date_m="'.$m.'" AND 仕入テーブル.typecost="direct" AND 仕入テーブル.id_direct_cost=勘定項目テーブル.id_cost group by 仕入テーブル.date_y, 仕入テーブル.date_m, 仕入テーブル.id_direct_cost, 勘定項目テーブル.name_cost では？
＞の構文は、mydb.sql（インポートのためのsqlファイル）内に そうですね、sqlファイルをテキストエディタで開いて データベース名の前に「IF NOT EXISTS」を書きこむことになります なおこのエラーが回避されても ・同じデータベース内に同じテーブル名がある ・同じテーブル内で同じユニークデータがある 場合もどうようのエラーがでると思います。 そもそもバックアップしたデータをリストアするのに別のマシンでやっているのでは ないのですか？ 同じマシンでやる限りデータを戻すときに競合するのは避けられませんね 思い切ってデータベースごと削除してしまった方が分かりやすいかもしれません。
単に「入力待ち」ということですね SQL文はステートメントデリミタが記述されるまでエンターを押しても 実行されません 通常デリミタには「;(セミコロン)」か「\g(円マーク＋ジー)」が使われています たとえば SELECT 1\gSELECT 2（エンター） とすると「SELECT 1」の結果だけ表示されます。 MySQLは入力待ちになりますので、あらためて 「,3\g（エンター）」とすると、「SELECT 2,3」の結果が表示されます
\Qじゃなかったかな
>1行上のcol4-col5 RDBには1行上という考え方はありません。 上下関係を確定するカラムとそのロジックを提示しなければ ご提示の命題を解決する手段はありません。
＞ PARAMETERS [ParaヘッダーID] COUNTER; 下記サイトを見た感じ、「COUNTER」が意味不明のような。 パラメータの型を指定するので、「Long」では。 http://office.microsoft.com/ja-jp/access-help/HP … http://msdn.microsoft.com/ja-jp/library/office/f … あと、クエリもちょいとおかしい感じがするので、まずはAccessのクエリ作成画面を使ったほうが学習しやすいと思います。
最近のバージョンならコレでいけるかと select (select A from テーブル where ID = TBL.ID1) A1 , (select A from テーブル where ID = TBL.ID2) A2 , A1＝A2の比較式 from ( select T1.ID as ID1, MAX(T2.ID) as ID2 from テーブル T1 LEFT JOIN テーブル T2 ON T1.ID > T2.ID group by T1.ID ) TBL ;
mysql の ALTER DATABASE や CREATE DATABASEにおける文字コード設定というのは、これから新規にtableを創るときに、table に文字コードを指定しなかったら、そのdatabaseに設定してあるdefault値を使うと言う意味ですので、既に作成済みのtable に対しては、何も作用を及ぼしません。 作成済みtable内の多バイト文字は、作成時の文字コードのままですので、そのつもりで、取り出さないとかえってプログラム側で文字化けすることになるでしょう。 show create table でcreate 文を表示してみると、table作成時に CHARACTER SETを付けて無くても、作成時のdatabaseに設定されていたCHARACTER SET 指定が追加されているはずです。 それから、iniファイルで変更するのは、サーバー本体のsystem 設定なので、これまた、databaseに対する設定とは別物です。 サーバ、データベース、テーブル、カラムの 4 段階で設定があります、マニュアル参照してください http://dev.mysql.com/doc/refman/5.1/ja/charset-s …
>今はテキストを見ながらのお勉強なので、コマンドプロンプトを使ってみよう では「コマンドプロンプト utf8」でググって自力で環境を整えるしかありません。 もしくはテストするときには日本語を使うのを避けるかのどちらかです
＞データの無い というのが、NULLなのか''なのか0なのか テーブルでどう定義されているのかによるのでは？
こんにちわ。 RPMで導入すれば、基本的にmysqlユーザで立ち上がるはずです。 なお、RPMパッケージを導入するユーザと導入したパッケージの起動ユーザとは基本的に関係はないので、安心してください。 ＃コマンドラインから起動した場合は、起動されたプロセスのオーナーは起動時のユーザになりますが、MySQLのようにデーモンとして利用するプログラムの場合は、起動ユーザに関わらずプロセスのオーナーを設定することができるのが普通です。 ちなみに、MySQLの起動ユーザを決めるのは、デフォルトの状態だと/etc/my.cnfというMySQLの設定ファイルの中にある"user"という行になります。ここにmysqlが設定されていれば、プロセスのオーナーがmysqlユーザで起動するはずです。
変換をどこでどのように行ったのか不明ですが、 変換先の文字コードの指定を、「Shift_JIS」や「SJIS」でなく、 「sjis-win」、「SJIS-WIN」、「CP932」などに変えてみてはいかがでしょう。
MySQL にも COALESCE 関数は存在するので、使えます。 ただし、先の回答にも書きましたが、この方法でいけるのは、 『title カラムの先頭1文字目が漢字ではない場合、 　yomi カラムは null である 』 という条件が満たされるデータの場合だけ、ということに注意 してください。 質問者さんの案1も案2も、『先頭１文字目が ”漢字ではない”』 場合のデータがどうなるかが明示されていませんので、実際に 使用できるかどうか、私には直接判断できません。
状況がよくわからないのだけど、SQLを手で打っているので間違いない？ ＞select'a1','a2','a3'・・・・ ＞from 'テーブル名' ＞where 'a1'=abcde ＞order by ＞limit 0,30 もし本当にこのまま打ってたら間違いだらけ まずカラムやテーブル名を囲むならバッククォートを使ってください またwhere句でabcdeで絞り込むのならabcdeはシングルクォートで括ってください それとorder by をかくなら何らかのカラムを指定してください たとえばこんな感じ select `a1`,`a2`,`a3`・・・・ from `テーブル名` where `a1`='abcde' order by `a1` limit 0,30
EXISTS句を使っても書けますね。 http://dev.mysql.com/doc/refman/5.1/ja/exists-an … DELETE FROM t2 WHERE NOT EXISTS(SELECT * FROM t1 WHERE t2.num = t1.num); 2行目は t2.num = t1.num となる t1 の行が存在しなかったら、という条件を表しています。
mysql の場合、auto_increment 属性を付けたら、何らかのindexも設定しないとエラーになるので、create table 出来てるのなら、primary key とか付けているのでは？phpmyadmin で作成したのなら自動付加してくれてるのでしょう。 index必要性について マニュアル参照 http://dev.mysql.com/doc/refman/5.1/ja/create-ta … コマンドラインクライアントでチェックするなら、show構文で show create table `tbl_name`;
実行されたSQLのorder by句に項目が設定されていませんね。 phpMyAdminを使ったことがないので詳しく回答できませんが、 ソート順を設定するところあたりを確認してみてはいかがでしょうか。
>$sql = 'SELECT * FROM anketo WHERE code='.$code; ダイレクトに$codeをクエリに書きこんでしまってはプリペアド処理になってない 何を参考にしているかわからないけど、その参考文献をもう一度よく 読みなおした方がよいと思います
> >MySQLに直接接続すること > http://localhost/phpmyadmin/で > phpmyadminを呼び出すことでしょうか？ 違います。 まあ、phpMyAdminが正常に動作してれば問題はありません。 MySQLは別にPHPにもApacheにも依存しているわけではないので、 mysql -u root -p などというコマンドを実行することでコマンドライン上で直接 操作できます。 http://y-kit.jp/saba/xp/mysqltry2.htm そこでログインできないならば、MySQLが稼働していないorユーザー名、 パスワードに誤りがあるなどとなります。 > >初めてPHP(Wordpress)の設定を確認し > phpmyadminで確認が取れるものでしょうか？ phpMyAdminが正常に動作しているならばOKです。 当然、事前にWordpress用のデータベースも作成するでしょう。 >MySQLに接続できるか > phpmyadminから接続するための方法を記した > 参考サイトなどございますでしょうか？ そもそもお使いのOSが何だか分かりません。 調べればたくさん出てきますので、自分に近い環境のものを 参考にすれば良いと思います。 https://www.google.co.jp/search?num=20&hl=ja&saf … 順序としては以下のようになります。 １．MySQLは正しく稼働、およびログイン可能か。 ２．phpMyAdminで正しくログイン可能か。（本来不要ですが、phpMyAdminを動作させたいみたいなので） ３．Wordpress用のデータベース、ユーザーは存在するか、及び、そのアクセス権限は適切か。 ４．Wordpressのデータベース接続情報は適切か。（wp-config.php） この辺は、グラフィカルに説明していて分かりやすいかもしれません。 http://www.adminweb.jp/wordpress/install/
phpmyadminデータベースを削除したのであればシステムにかかわる部分が ダメになっている可能性が高いです。 修復の方法はないことはないですが、始めたばかりであればxammpの 再インストールした方がはやいかもしれません
やはり先の回答で書いておくべきだったかもしれませんが、 質問にある例では各ユーザーが別々のレコードに書き込みをしていますよね。 この場合だとお互いの書き込みが他のユーザーの書き込みに影響を及ぼさないのでロックを取る必要が無いと思います。あと、ちょっと気になったので調べた感じだと、UPDATEで更新する場合もロックは不要みたいですね。 > 何も指定しないで下記の方法でテーブルをつくりました > この場合は、MyISAMになるんですか？ そうです。 InnoDBを使うにはテーブル作成時に明示する必要があります。 http://dev.mysql.com/doc/refman/4.1/ja/using-inn … > その場合、自動でテーブルロックしてくれるってことでしょうか？ してくれません。 自分で明示的にテーブルをロック / アンロックしてください。 http://dev.mysql.com/doc/refman/4.1/ja/lock-tabl … あと、MyISAMはトランザクションセーフテーブルではないので、いわゆるトランザクションには使えないと思います。トランザクションの場合はCOMMITをするまで値が反映されてはいけませんので。 http://dev.mysql.com/doc/refman/4.1/ja/commit.html http://dev.mysql.com/doc/refman/4.1/ja/table-typ … > みなさんはphpやperlからmysqlを使う場合は、どのテーブルを使っていますか？InnoDBを使うのが一般的なのでしょうか？ MyISAMが一般的だと思いますが、適材適所ではないでしょうか。 例えばwordpress (http://ja.wordpress.org/) ではデフォルトのMyISAMを使っているようです。 自分が見た範囲では特にLOCK TABLESも登場しないように思います。 UPDATEは時々出てきますが、UPDATEによる更新はアトミックな処理になるようなので行の更新をする程度ならロックを取る必要はないのかもしれません。 http://dev.mysql.com/doc/refman/5.1/ja/ansi-diff … かつてMySQLを選ぶ理由はトランザクションがない代わりに速いということだったので、色々と工夫をしてMyISAMを使うというのが普通なのかもしれません。しかしながら、MyISAMにはトランザクションの機能がないので、InnoDBを普通は選ぶべきという意見もあります。 Top 10 MySQL Mistakes Made By PHP Developers http://www.sitepoint.com/mysql-mistakes-php-deve … | 1. Using MyISAM rather than InnoDB ただ、この記事へのコメントでDavidさん他多数がMyISAMよりInnoDBは非常に遅くて使いものにならないし、DBの設計を適切にすればMyISAMでも問題なく使えると主張しているので、InnoDBを使えば万事解決というわけでもないようです。
php.iniの設定やhtml側での文字コードの設定にも依存するので、これだけの情報ではズバリ回答が難しいですが、 MySQLの文字コード設定がcp932とutf8が混在しているようですね。 文字化けを防ぐために、webシステムは「統一された文字コード」で開発される事が多く、 最近ではUTF-8が主流ですのですべてUTF-8で統一されることをおすすめします。 MySQL、php、HTMLがすべてUTF-8であれば、ほとんど文字化けに悩まされることはなくなると思います。
>■内容を再編集する時、htmlタグを無効化しつつ、再編集する方法 PHPで編集するというからにはhtml画面上で処理をすると考えてよいですね？ であればtextareaにhtmlspeacialcharsで処理した文字列を入れて 編集させるのが一般的でしょう。 >■データベース登録時、プリペアドステートメントで、\（円マーク）がついてしまう事の対処方法 SJISの5C問題あたりを気にしているのでしょうか？ もし万が一DBのキャラクターセットをSJIS系にしようと考えているなら やめた方がいいでしょう。 UTF8なり適切な文字コードを利用して、入出力の際に文字コードの コンバートをかけることで問題は最小化することができます。 また見た目上エスケープした文字が登録されても、PHPで抽出して出力するときには アンエスケープされた状態で取り出せるとおもいます
なんかうまく伝わってないみたいで、すみません。 POSTでidを送りつけてデータが削除できるなら、 ユーザーが1から順番に100番、1000番・・・と適当におくってきたときに 全部消されちゃいますよという意味です。 インジェクションの場合、SELECT文の参照時に、不正にUPDATEやDELETE されないような処理とか、本来アクセスできないSELECT文にオールの パラメータをあたえて不正にデータを引き出すのを防ぐ処理なので DELETE文などは特殊な権限をもったユーザーに処理させるために リンクを調整するところから入ると思います
>INTで（６）としても >試しに１０桁を入れても（phpmyadminで直接） >入ってしまいます。 INTの桁数はUNSIGNED ZEROFILL属性をつけた際にゼロ埋めするための桁数です。 >試しにと思ってINTのところに >”あいうえお”を入れても入ってしまいます。 それはない、勘違いでしょう。 >桁数の設定は（10）までは意味があっても、(11)以上に >しても意味がないのでしょうか？ 前述の通り有効桁数ではなく表記上の桁数なので、 よほど特殊な使い方を想定していなければ気にする必要はありません。 >INT（１１）に上限数値の4294967295をいれると >何が起こるのですか？ 普通に入力される以外なにもおきません。 そういうのはご自身でためしてみるが一番です ◇最後にもうひとつ >Name` varchar(32) NOT NULL default '', >NOT　NULLとは、ヌル値は認めないというのに、 >defaultは””（ヌル）で設定ができてしまう。って >矛盾してませんか？それとも私の解釈が間違っていますか？ 基本を理解していないようで、完全に間違っていますね。 実際「」とNULLは排他的な関係ではなく必要に応じて共存できます。 具体的にはNULL指定すると「空ですよ」いう情報が入ります。「」は文字の長さが0の文字情報が入ります。 LENGTHで長さを拾う時LENGTH(NULL)はNULLを返しLENGHT('')は0を返します。 カウントを取る時に、「」はカウントの対象となりますがNULLはカウントの対象外です。 たとえばあるテーブルのXというカラムに10個のデータが保持されているとき NULLのレコードが3件あれば、SELECT COUTN(X) FROM テーブルすると 7件しかレコードが拾えません。 また、NULLへのアクセスはIS NULLなどで評価を行うなど NULLというのは特徴のある属性ですので、きちんと理解を深める 必要があります。
正規化は目的ではなく手段です。 何をしたいかビジョンがないなら、正規化しないで冗長なデータでも さほど問題はありません。 たとえば管理画面をつくったとして、セレクトボックスで選ばせたい項目が あるなら正規化するしたほうがよいです
＞(1)で動いていたものを(2)にしたら、動かなくなりました そういうのはprint $sqlしてみて見比べればわかりますよね？ '%s' のところにシングルクォーテーション付きの文字列を入れれば クォーテーションがダブってます。 あまりお勧めできませんが、あえてやるなら元文字列のシングルクォーテーションを はずしてみればよいのでは？ $sql = sprintf("SELECT id , password FROM `adminDatabase` where id = %s and password = %s order by id",$id , $password );
非数字の部分の文字数が決まっていれば可能です。 SELECT * FROM ～ WHERE SUBSTRING(書籍名,1,4), SUBSTRING(書籍名,5)*1 SUBSTRING(書籍名,5)*1 は書籍名の5文字目以降を 数値化する表現です。但し、非数字があると0になって しまいます。 書籍名の先頭の非数字部分の文字数が不定だと、 考えられる字数の範囲でUNIONクエリにするしか ないと思います。
「mysql_real_escape_stringを使うな」というのが正論なのですが、 ＞もろもろの事情で仕方なくmysql_real_escape_stringを ということなので、回答しようかと思いましたが、(2)のようなプログラムを書く人であれば、やはり、生のmysql関数は使ってはいけません。 ＞PDOを利用し、プリペアドステートメントで処理する でしょうね。それ以前にPHPの基本的な事柄についての理解を深める必要があります。 ＞$sql = sprintf("SELECT id , password FROM `adminDatabase` where id = '%s' and password = '%s' order by id",’mysql_real_escape_string($id)’,’mysql_real_escape_string($password)’); を実行すると、$sql は、 SELECT id , password FROM `adminDatabase` where id = 'mysql_real_escape_string($id)' and password = 'mysql_real_escape_string($password)' order by id になりますよ。
>>時間とお金がないので可能な限り効率的な順序で勉強をしたいのですが、これからPHPとDBを扱うには何をどういう順番で勉強するといいのでしょうか？また他にアドバイスがあればよろしくお願いします。 学習に王道はありません。私の経験上、お金をかけて学校に行くとか、セミナー等に出れば、その分、早く学習できると思います。 もちろん、無償セミナーと有償セミナーでは、やはり教える側の気合いの入り方も違いますし、教材にも違いがあると思います。 また、専門書などはやや高価ですが、それらを買わないわけにはいきません。 学習するには、足りないと思う部分を、ひとつずつ基礎から順番に学んでいくしかないと思います。 >>（クラスだの、オブジェクト指向だのが全くわかりません、またフレームワーク、その他難しいことは、基礎を覚えた後にやらないと結局痛い目にあうものでしょうか？ これらも、上記と同様に、時間・お金をかけて学んでいくしかないと思います。 また、PHPの知識なく、PHP用のフレームワークを学んでも意味ないと思いますので、当然ながら基礎を固めたあとに応用を学ぶことになると思います。 極端な言い方をすれば、「専門学校、あるいは情報系の大学で学ぶと、お金と時間がかかる。お金と時間をできるだけかけずに、そこの卒業生と同レベルになりたい！」ってのが質問者さんの希望だと思います。 もっと言えば、小学１年生の子供を持つ親が「大学を卒業させるまでの学費もそこまで育てる時間もない！小学校から高校までの教科書等は全部あります。さしあたりあと１年で子供が高卒レベルになる方法を教えてください！」っていうような願いかもしれませんね。 いくら焦っても子供を１ヶ月で産むことができないのと同じだと思います。 それから、このＩＴ系って、職人っぽい部分があると思います。すごく頭がよくて本を一度読めば、覚えてしまう人がいたとします。そんな人であれば、ＰＨＰの専門書を１日で読み切ることが可能だと思います。でも、それでＰＨＰのプログラムが作れるようになるか？というと、できないような気がします。それは、カナヅチの人が、泳ぎ方の本を１日で読み切っても、泳げるようになれないのと同じだと思います。 ちなみに、わたしも、「自分でレンタルサーバを借りて、独自ドメインとって、そこにＯＳをインストールして、Ｗｅｂサーバやアプリケーションサーバ、メールサーバを設定して・・・」と思って調べ始めると、知らないことがイロイロと出てきて、「どうしよう・・」と思ったものです。結局は、腰を落ち着けて、関連する参考書籍を購入して、試してみて、すこしずつ学んでいくしかありませんでした。
まず気になったのがそのrpmパッケージはどこから持ってきた物か? そのrpmパッケージは質問者が使っているディストリビューションに適合する物なのか? ディストリビューションに適合しないrpmパッケージなら.src.rpmを利用して ディストリビューションに適合したパッケージを作る必要がある。 ディストリビューションに適合していないと変なところにパッケージがインストールされたり データベース関連のファイルが置かれる場所がディストリビューションによって想定されている 場所と違う場所に設置されたりする可能性がある。
> 日本語に訳したら、何て言うのでしょうか。 > （「ウィキシンタックス」でいいのでしょうか。） syntaxの日本語訳が次のとおりですから， http://eow.alc.co.jp/search?q=syntax Wikiの構文，もう少し具体的に言うならば，Wikiのマークアップ書式，と言えばよいでしょう。 > ウィキシンタックスとは、何ですか。 Wikiの構文例については次のリンク先の「3 ウィキの文書マークアップ構文」を参照。 http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A3% … Wikipediaの拡張構文例については次のリンクを参照。 http://ja.wikipedia.org/wiki/Help:%E6%97%A9%E8%A …
取りだすDBと入れるDBのバージョンは完全に一致していますか？ 一致しているとしてexport_utf8.sqlをテキストエディタでみてみて クエリがおかしくないですか？
疑問2 についてさらに補足回答 存在しないカラム名はどんな場合もエラーです。データは空文字列やnullとして与えて as カラムエイリアスとするなら、存在しない名前もokです。 出力表示のカラム名は、最初のselect節で指定したものになるので、union 以降のselect節ではエイリアス名は無くてもよいですが、データ内容（固定値、存在するカラム値、計算値など）は必要です。
＞黒い画面 vbsなどで以下のような処理をしてみては？ 'test.vbs Set WshShell = WScript.CreateObject("WScript.Shell") Return = WshShell.Run("コマンド・・・", 0)
データベースはExcelの表などと違って「二つの同じ形式の表の同じ位置にある値同士を足す」ようなことはできません。 ですから、table1の各レコードとtable2の各レコードを紐付けるための列が必要になります。 例えば以下のように「no」という列を追加します。 table1 -------------------- col1|col2|col3|no 20 |30 |40 | 1 40 |40 |50 | 2 10 |20 |20 | 3 -------------------- table2 -------------------- col1|col2|col3|no 10 |10 |20 | 1 20 |20 |20 | 2 10 |20 |20 | 3 -------------------- として SELECT table1.col1 + table2.col1, table1.col2 + table2.col2, table1.col3 + table2.col3 FROM table1 INNER JOIN table2 ON table1.no = table2.no ORDER BY table1.no; とすれば一応は可能かと思いますが、これはtable1とtable2のレコード数が同じで、かつnoが必ず一対一で対応している場合でないと期待通りの結果を返してくれません。 実際には ・table1とtable2でレコード件数が違う ・noがtable1とtable2で一対一で対応していない などの場合はさらに工夫が要りますが、どういう結果を返したいかによってやり方は変わってくるので、とりあえずはここまでで。
taisenに対してteamを２回joinしてやればよいのでは？ select taisen.hometeam ,t1.team_name as hometeam_name ,taisen.homepoint ,taisen.awayteam ,t2.team_name as awayteam_name ,taisen.awaypoint ,t1.year ,t1.leagueid from taisen left join team as t1 on t1.team_id=taisen.hometeam left join team as t2 on t2.team_id=taisen.awayteam ちなみにyearとleagueidはホームチームもしくはアウェイチームのどちらかの ものを拾うしかありません。 若干正規化の仕方がおかしいですね。
DB名入れないとダメですよ。 select * from DB1.table1,DB2.table2 where DB1.table1.id = DB2.table2.id これだけでうまくいくかはわかりませんが。
表面テーブル:全項目データを持っている inserted/deletedのトリガーで更新系テーブルのみ更新する。 また、inserted/deletedのトリガーで、常に、参照系テーブルの値をセットする。 （間違えて参照系テーブルからセットする項目を変更されても勝手に元に戻る。 　・・・いいとは思いませんが、仕様上そうしたいならできるはずという趣旨です。） 更新系テーブル：自身の更新はなし。 参照系テーブル：inserted/deletedのトリガーで、表面テーブルを追加・更新・削除する。 とすれば表面テーブルのアクセスは簡単に実現できるけど。 実態として、参照系テーブルは見ていないけど。
<?php print date("Y-m-d"); ?> そもそもSQLでCURDATEを指定するならformからデータをおくる必要ないです
order by binary coalesce(yomi,title) です。
それほど詳しくない上にMyISAMのデータベースが無く実験も出来ませんが知ったかで回答します。 AND unixtime BETWEEN UNIX_TIMESTAMP(NOW()) AND 1360850220; で現在から1360850220の間のunixtimeにマッチすると思います。
スクリプトは不要でした。 mysqlimport単体で複数ファイルを一括インポートできるようです。 例えばtkhgshデータベースのtestテーブルにインサートするとします。 ファイル名を data1_1.csv、data1_2.csv、data1_3.csv、data2_1.csv から test.data1_1.csv、test.data1_2.csv、test.data1_3.csv、test.data2_1.csv などとインサートするテーブル名に変えてください。 mysqlimport -L tkhgsh /path/to/test.* これで一括インポートできます。スクリプトは不要でした。 mysqlの権限やcsvファイルのパーミッションに気を付けてください。 他、オプションやcsvファイルの仕様などはマニュアル見てください。 http://dev.mysql.com/doc/refman/5.1/ja/mysqlimpo … http://dev.mysql.com/doc/refman/5.1/ja/load-data … ------------ 自分が言ったスクリプトというのは、 #!/bin/sh files="/path/to/csv/*" for file in ${files} do mysqlimport database ${file} done で、1ファイルずつmysqlimportすることを考えていました。 これとは別に、最初にファイルをまとめて巨大なファイルを作ってインポートでも可能ですね。 $ cat /path/to/csv/* >test.csv $ mysqlimport database test.csv また、回答2、3の人のはcsvをインポートではなく、 csvをinsert文に変えてmysqlに突っ込む方法ですね。 $ mysql database <test.sql でtest.sqlに書かれたsql文をdatabaseに対して発行できます。 csvの中が A 1 A 2 b 3 などとなっていれば、例えば insert into test values('A', 1); insert into test values('A', 2); insert into test values('B', 3); などと変えてやり、それで上記の$ mysql database <test.sql でインサートできます。 やり方様々、あります。 mysql、linux、シェルスクリプトの基本の基本から学びなおしてください。 windows環境ならばシェルスクリプトではなくコマンドプロンプトですね。がんばってください。
>まだ試合をおこなっていないチームもランク付けしたいのですが、 ではまず、teamテーブルの、2012年1リーグEチームを登録します insert into team values(13,'E',2012,1); //v1を作り直します。（すでにある場合は削除してください） create view v1 as select id,hometeam as team_id ,case when homepoint>awaypoint then 3 when homepoint = awaypoint then 1 else 0 end as wp ,if(homepoint>awaypoint,1,0) as w ,if(homepoint=awaypoint,1,0) as d ,if(homepoint<awaypoint,1,0) as l ,homepoint as tokuten ,awaypoint as sitten ,team_name,year ,leagueid from taisen inner join team on team.team_id=hometeam union all select id,awayteam as team_id ,case when homepoint<awaypoint then 3 when homepoint = awaypoint then 1 else 0 end ,if(homepoint<awaypoint,1,0) ,if(homepoint=awaypoint,1,0) ,if(homepoint>awaypoint,1,0) ,awaypoint ,homepoint ,team_name,year ,leagueid from taisen inner join team on team.team_id=awayteam union all select null,team_id,0,0,0,0,0,0,team_name,year,leagueid from team left join taisen on taisen.hometeam=team.team_id or taisen.awayteam=team.team_id where taisen.id is null //v2を少しいじります。（すでにあるものは削除） create view v2 as select team_id,year,leagueid,team_name ,sum(wp) as wp ,count(id) as count ,sum(w) as w ,sum(d) as d ,sum(l) as l ,sum(tokuten) as tokuten ,sum(sitten) as sitten ,sum(tokuten) - sum(sitten) as tokusitten from v1 group by team_id,year,leagueid; //この状態で、前回のSQLを走らせます select year,leagueid, (select count(*)+1 from v2 as v2b where 1 and v2a.year=v2b.year and v2a.leagueid=v2b.leagueid and (0 or v2a.wp<v2b.wp or v2a.wp=v2b.wp and v2a.w<v2b.w or v2a.wp=v2b.wp and v2a.w=v2b.w and v2a.tokuten<v2b.tokuten or v2a.wp=v2b.wp and v2a.w=v2b.w and v2a.tokuten=v2b.tokuten and v2a.tokusitten<v2b.tokusitten ) ) as rank,team_id,team_name ,wp,count,w,d,l,tokuten,sitten,tokusitten from v2 as v2a order by year,leagueid,rank; ※2012年1リーグの5位にチームEが表示されます
group by 句に無いカラムがどう選択されるかは既にご回答の有るとおり。 要は見つけた順なのだが、indexのアルゴリズムや、挿入削除で物理配置が変わるので、不定となる。 あと、mysql には、集約関数にランダムに取り出す物はないので、サブクエリか、テンポラリーテーブルが必要。mysql 4.1 以降なら、サブクエリでいけそう。最適化も考慮すると以下かな？最後の order by null で既に並んでる物を再度並べ替え作業しないようにして、少々時間短縮。 select id,Type, age from (select id,Type, age from tb order by id,Type, rand() ) as rand_tbl group by id,Type order by null ;
idだけを拾うならこれで十分 select min(id) as id from tb group by field1,field2;
例えば、 create view vw1 as select * from table1 where KeyCol2 = '1' select * from vw1 where keyCol1 = 'X' order by keyCol2 なんてすると、 select * from table1 where keyCol1 = 'X' and Keycol2 = '1' order by keyCol3 はインデックス(KeyCol1,KeyCol2,KeyCol3)を使えるのに、 Viewを使ったほうが、インデックスを使えない （KeyCol2が'1'を抽出してからkeyCol1='X'を洗い出すため） なんてことが起きるかもしれません。 （この例は、SQLを解析した結果で実行計画が同じ処理となるかもしれませんが。） なお、 SQLでVIEWを作成し、そのVIEWに対してSELECT文を書くときに、そのVIEWに対してWHERE句をつけるのは、パフォーマンスを必ず下げることになるのでしょうか？ は必ずしも下げることになるとは限りません。 where句でインデッックスを使えない場合、 Create view vw2 select * from table1 where NotIndexCol1 = 'A' として、 select * from vw2 where NotIndexCol2 < 15 としようが、 select * from vw2 where NotIndexCol1 = 'A' and NotIndexCol2 < 15 としようがあまり変わらないはずです。 （SQL解析時間が少し早くなるかもしれませんが、体感速度の差というレベルではないはず。） まあ、そもそも、View でwhere 句を書いて、Viewを使ったSelect句でも、where 句を書くのは お薦めしません。（Viewが副問い合わせ扱いされる危険性があるため） create view vw1 select * from table1 where NotIndexCol1 = '1' して、 selcet vw1 where IndexCol1 = 12 なんてしたときに、table1 が10万件合って、IndexCol1 = 12　が10件しかなかったら いったん、 select * from table1 where NotIndexCol1 = '1' で数万件のワークを作って、その中からIndexCol1 = 12を探すという動きになったら きわめて遅いだけです。（SQL解析能力に期待しましょう・・・というわけにはいかないので。） こうなったら、 select * from table1 where IndexCol1 = 12 and NotIndexCol1 = '1' としたほうがはるかに早い。
importする時に文字コードを指定してみてください。 mysqldumpなら--default-character-set=[binary/utf8]オプション
ANo.1です。 >基幹ＤＢに顧客などのマスタテーブルや売上などのトランテーブルの数が約800あり、これらのデータを>毎日ＤＷＨ用のＤＢへ差分更新します。 マスタは無視して、売上などのトランテーブルがいくつあるのでしょうか？ これが数百あるなら分けたほうがいいというのが、前の回答の趣旨。 「ｘｘ別売上テーブルみたいな中間ワークテーブル」といっていたのが、 「ＤＷＨ側のＤＢにビューを約500作成し」に相当します。 500も必要でしょうか？ （ついついいくつも作ってしまうのがビューだったりします。） 例えば、課別月別売上ビューと部別月別売上ビューを別々に作ってしまったりとか。 （課別月別売上ビューがあれば部別月別に売上リストを出すのは結構早い。） 昔やった仕事で、縦軸、横軸の組み合わせ１５０個程の検索を、１２個の中間ワークファイル （ビューと思ってください）で実現したことがあります。 ・・・ビューは、出力が遅ければ追加するという考え方で作っていくのも有りと思っています。 （もちろん、1伝票毎のトランザクションから出力させると遅いにきまっていますので、 　最も細かい単位でのビューは作る前提のほうがいいですが。） 「ドクタサム」がよくわからないのであまりアドバイスはできないのですが、 ビューといっているけど実データを別に格納していて毎日更新する必要があるという前提と 考えられますので、効率よく更新する方法はあると思われます。 例えば、日別取引先別売上ビューがあるなら、月別課別売上ビューは、元データから更新する のではなく、日別取引先別売上ビューから更新するとか（前提として１取引先１課とする）。 あと、差分更新は、ちょくちょく、値があわなくなることがあります。 （あってはいけないのですが、バグやsqlを直接実行して削除したため、マイナスデータが 作れなかったとかいったイリーガルなオペレーションからおきることがあるので。） 例えば当月分を月末に全件再計算するとかしたほうが安全です。 毎日当月分を再計算するってほうがベターとは思いますが、処理時間とのバーターです。 >本来、基幹で作成しなければならなかった帳票などもＤＷＨから出るようにしたいため プルーフリストとか入力内容を確認する帳票は、基幹で出すようにしてください。 基幹で正しいデータにしてからデータを受け取らないと、取り消しデータとか山のように データを受け渡ししなければいけないことになります。 ## ま、お分かりと思いますので余計なお世話なんですが。 ## とりあえず、こんなところで。 ## 後は個別にどんなデータとどんなビューがあって・・・ ## と１件ずつ掘り下げていく必要があるのですが、 ## ＱＡサイトではそれもなかなか難しそうですね。
＞DELETE FROM `__TABLE__` WHERE `user_id` = 1234 LIMIT 1 user_idがユニーク属性なカラムならLIMITはいりません 逆にユニークではないならLIMITによる抽出はレコードを特定できません。 LIMITは最初に出現する1つですが、ORDER BYしない場合は出現順は保証されないからです。 単体で運用しているならともかくレプリケーションを前提とするなら 更新や削除は厳密にデータを特定できる指定をしてください
ケースバイケースだとは思いますが、メンテナンスを考えると、複雑なSQLはメンテしにくいので、 ・できるだけPHP側で処理 ・SQLでやったほうがディスクアクセスが有意に減るならそっちでやる SQLの工夫でディスクアクセスが1/10になるとして、100回か10回かならどっちでも良い。 100万回か10万回かなら、10万回を選ぶ。 インデックスとかも関係してきます。
＞　データベースに重複するデータが入っていなかったとしても、SELECT文で取得する際に ＞　同じデータを取得することもあるという事でしょうか。 SQL文の書き方次第ではあり得ます。
> 特に「か」だけではなく　あ・か・さ・た・・・ というレコードを選択です。 > 単純に「あ」、「か」、「さ」・・・と選択して蓄積しても良いのですがスマートなSELECTを書きたいと思って質問しました。 このあたりがよくわかりませんが普通に select * from xxxx where ヒラガナ like　'か%'ではだめですか？
あ、よくよく考えたらこの程度ならピボットしなくてもかけますね ピボットの場合もう少し複雑な集計をとるとき便利です。 もちろん今回のケースでも活用できます //例 select bang ,max(if(tuki=4,name,null)) as 4月 ,max(if(tuki=5,name,null)) as 5月 ,max(if(tuki=6,name,null)) as 6月 from tb as t group by bang order by bang; //ちなみに2名以上いるときの列記 select bang ,group_concat(if(tuki=4,name,null)) as 4月 ,group_concat(if(tuki=5,name,null)) as 5月 ,group_concat(if(tuki=6,name,null)) as 6月 from tb as t group by bang order by bang; //各bangに月ごと何人いるかカウントする select bang ,sum(tuki=4) as 4月 ,sum(tuki=5) as 5月 ,sum(tuki=6) as 6月 from tb as t group by bang order by bang;
likeの方は、それぞれにカラム名も必要ですよ。 (`urlpath` not like '%/officeedit/%') and (`urlpath` not like '%/houseedit/%') 括弧は省略出来るけど、between の and とは違うので。 regexp は正規表現なので、検索が遅くなることが多いようです。like も前方一致でないなら、indexは使われないので、やはり、速くはならない。よって、どっちがいいかはデータ量や複雑なパターンマッチが必要かどうか（likeは単純文字列マッチなので）によるのでは。
こんな感じですか？ select cast.name,cast.age,photo.url,schedule.starttime,schedule.finishtime from cast left join photo on cast.name=photo.name and photo.order=0 left join schedule on cast.name=schedule.name and schedule.workdate='2013-02-05' なお、カラムにcastやorderといった予約語をいれると思わぬ落とし穴があったりするので 気をつけてください
とりあえずマニュアルに固定長の制限があると書いていますね memoryエンジンを使う限り仕様なのでメモリを増やすか あきらめるしかなさそうです。 http://dev.mysql.com/doc/refman/5.1/ja/memory-st …
＞$rst = mysql_query($sql, $con); おそらく参考にされている書籍やサイトが古いですね すでにmysql_query()は非推奨になっていますので いまはmysqli系の処理か、PDOを利用した処理が正しいです。 環境を見直したほうがよいかと思います。
これって合計じゃなくて単にcount処理をフラグやグレードを指定して取っているだけですね。 //準備 create table A (id int,flag tinyint); create table B (id int,grade tinyint); create table C (id int,val int); insert into A values(1,0),(2,1),(3,0),(4,1),(5,1),(6,0),(7,0); insert into B values(1,0),(2,0),(3,2),(4,2),(5,0),(6,0),(7,0); insert into C values(1,10),(2,20),(3,30),(4,40),(5,50),(6,60),(7,70); //非効率SQL SELECT num_a, num_b FROM (SELECT SUM(IF(flag=0, 1, 0)) AS num_a FROM A WHERE id=ANY(SELECT id FROM C WHERE val<=50)) AS sub_a, (SELECT SUM(IF(grade=2, 1, 0)) AS num_b FROM B WHERE id=ANY(SELECT id FROM C WHERE val<=50)) AS sub_b //調整後 SELECT count(flag) as num_a,count(grade) as num_b FROM C LEFT JOIN A on C.id=A.id and flag=0 LEFT JOIN B on C.id=B.id and grade=2 WHERE val<=50;
Dumpとってテーブル作り直してインポートする
現職のサーバエンジニアです。 ＞Linuxにログインする際のユーザ（OSのrootユーザ権限）でMySQLのエクスポートやインポートを行うことは可能かどうか？ mysqldumpを用いてのデータのインポート/エクスポートを指すのであれば、不可能だと思われます。 mysqldumpはMySQLのユーザ情報にて接続するためです。 Linuxにログインする際のユーザとMySQLへ接続する際のユーザは完全に別物であり、 私の知る限りでは双方を連動させる方法は聞いたことはありません。 ただし、mysqlのデータファイル本体は通常のファイル扱いであるため、それらのファイルを扱う際にはLinuxのユーザ権限がかかわってきます。 それらのデータファイルをLinux上でコピーや上書きを行うことで、以前のデータへの復元やデータのバックアップが可能です。
>たとえば、SELECT * from A WHERE B=変数 SELECT * from A WHERE B='/*[VARIABLE]*/' をブックマークしておいてください
＞CPU使用率は40%ほどしかなく、メモリも余裕があるのに、IOだけが完全に溢れております。 となるとたんにファイルI/Oのボトルネックでしょうか・・・ 遅延書き込みがうまく機能していないだけならバッファリングの調整で 少しは改善されるかもしれません。 ただ、結局書き込みがおいつかないなら、本質的にはハードウェアで処理するしかなく、 SSDやらでデータ管理しないと解決しないかもしれませんね。 検証については以下サイトなど参考になるとおもいますので、 諸々の変数を調整してみてはいかがでしょうか？ http://blog.layer8.sh/ja/2011/12/23/mysql%E3%82% … また、MySQLのレイヤーによる負荷を軽減するためにHandlerSocketというプラグインも あるようなので、場合によってはチャレンジしてみてもよいかもしれません。 （個人的には興味があるのですが未検証なので自己責任でお願いします） http://engineer.dena.jp/2010/08/handlersocket-pl …
4人以上を3人に絞り込むのは適当でいいとのことですので 投票数が同じ場合はユーザーのidが小さいものを上位とします 性質上一度集計をするためにviewをつくっておくとよいでしょう。 //テーブルをつくり create table vote (cID int,iID int,cTime datetime,unique(cID,iID,CTime)); //ビューをつくります create view v_vote as select cID,iID,count(*) as count from vote group by cID,iID; //ダミーデータをいれます insert ignore into vote values (1,1,'2013-01-01 00:00:00'),(1,1,'2013-01-01 00:00:01'),(1,1,'2013-01-01 00:00:02'),(1,1,'2013-01-01 00:00:03'),(1,1,'2013-01-01 00:00:04'),(1,1,'2013-01-01 00:00:05'),(1,2,'2013-01-01 00:00:06'),(1,2,'2013-01-01 00:00:07'),(1,2,'2013-01-01 00:00:08'),(1,3,'2013-01-01 00:00:09'),(1,3,'2013-01-01 00:00:10'),(1,4,'2013-01-01 00:00:11'),(1,4,'2013-01-01 00:00:12'),(1,4,'2013-01-01 00:00:13'),(2,1,'2013-01-01 00:00:14'),(2,2,'2013-01-01 00:00:15'),(2,3,'2013-01-01 00:00:16'),(2,4,'2013-01-01 00:00:17'),(2,5,'2013-01-01 00:00:18'),(2,1,'2013-01-01 00:00:19'),(3,2,'2013-01-01 00:00:20'); //まずビューを確認します select * from v_vote; //カテゴリごとにカウントの多い人順 select( select count(*) +1 from v_vote AS v2 where ( v1.count=v2.count and v1.iID>v2.iID or v1.count<v2.count ) and v1.cID=v2.cID ) AS rank ,cID,iID,count from v_vote AS v1 having rank<=3 order by cID asc,rank asc;
>Listenで設定とはどういうことですか？ Listen 80 なんて行はないですか？ apacheの2.x辺りではPortではなくListenで設定する。 というように変更されているっぽいですけど。 http://blog.sarabande.jp/post/32488898943 によると、/etc/httpd/conf.d/以下ではないようですがSSL設定用のファイルは別にある…みたいですね。 # httpd関係のファイルは/etc/apache2の下…なんですかねぇ……。 >提示されたページは教授から提示されたので、よくわかりません。 であれば…その教授にも確認してみるべきでしょう。 # 授業料払っているんですし。 # ここみたいな何の責任も負ってくれない回答者からの回答よりはマシかと思われます。
どのような目的で使用するのか判りませんが。 一般的に言えば列車の行き先がない、種別(急行、普通など)、運転日(休日運休など) 上下の区別をするか？ ２線以上ある接続駅の扱い 等々突込みどころは有りますね。
>「お魚くん」を「焼き魚くん」 であれば、REPLACEを使うとよいかと UPDATE wp_postmeta SET meta_value=REPLACE(meta_value,'お魚','焼き魚') WHERE meta_key LIKE '%koubutsu%'; ただし絞り込みを入れた方が効率的かもしれないのでこっちの方がよいかも UPDATE wp_postmeta SET meta_value=REPLACE(meta_value,'お魚','焼き魚') WHERE meta_value LIKE '%お魚%' AND meta_key LIKE '%koubutsu%';
できるような表記はないですね エンジンの特性のようですしあきらめた方がよいかもしれません。 むしろなぜ行ロックの必要があるのでしょうか？ http://dev.mysql.com/doc/refman/5.1/ja/internal- …
バージョンが書いていないのでなんともいえませんが 「MySQL character set」でググってみてください
１についてです クエリキャッシュを0にしてみたらどうでしょう 2についてです 更新の少ないテーブルならばオンメモリ化してしまうのも手です
なんの場合でもそうですが旧コンピュータ名でアクセスしていた サービスがあるなら、接続できなくなります MySQLサーバー自体は、自サーバー名を参照するケースはあまりなく localhostなどで参照するのでほとんどの場合問題ないとおもいます
>Tomcat内のcommon\lib内にmysql-connector-java-5.1.22-binを導入し、環境変数でパスを通しています。 Tomcat内に入れれば、Tomcat上で実行されるプログラムからは認識されますが、Eclipseからは認識されません。EclipseはTomcat上で動いていませんから。またPathを設定してもJavaのクラスパスとして認識されていなければJava内からは利用できません。 Tomcat内ではなく、Eclipseが使用しているJDKのlib内にドライバのJarを入れてやればEclipseでも利用できるはずです。 JDKのフォルダ\jre\lib\ext　←　ここです。
どういう要件ですか？ 受け取ったイメージは以下の要件なので無理！ tableA SHOHINCD A101 A201 A301 の３件が抽出されると、 tableB SHOHINCD X-A101b A101c A101 XYZ-BA201 XYY-A301 A301xxyz 等がすべて取得できる必要がある。 言い換えると、 SHOHINCD like '%A101%' or SHOHINCD like '%A201%' or SHOHINCD like '%A301%' と、tableAから抽出されたSHOHINCDを含むSHOHINCDを持つtableBのレコードすべて 出力したい、と読み取れました。 Likeの文字列を可変にするのは無理です。 条件が違っているなら、やりようはあるかもしれません。。。 例えば、tableBの２文字目から４文字目がtableAから抽出されたSHOHINCDと一致するレコード とかならできます。
int型項目に限らず、極力nullは避けた方が無難です。 nullを含んだテーブルの検索は、しばしば直感に反した動作をします。 詳しくは下記のページを見て下さい。 http://codezine.jp/article/detail/532?p=1 http://www.geocities.jp/mickindex/database/db_ge …
元のテーブルの主キーが「個人ID」単独だったと仮定すると正規化では有りません。単にテーブルを分けているだけです。 考えにくいですが、元のテーブルが複合主キーだった場合は第2正規化ともいえます。そうだとしても、主キーが「個人ID」だけのテーブルを作り、そこに「郵便番号」「都道府県」などの属性を移せば良いだけです。「郵便番号」「都道府県」などで分割する必要は無いです。 第2正規化は部分関数従属性の解消、つまり、複合主キーの中の一部にカラムだけで確定する属性を、単一の属性の主キーを持つテーブルに分割することです。 憶測ですが、下記の様に書こうとして書き間違えたのではないでしょうか？ ・郵便番号IDを主キーとする「郵便番号テーブル」を作る ・都道府県IDを主キーとする「都道府県テーブル」を作る 　　・ 　　・ 　　・ これだと、郵便番号IDなどを導入した上で、第3正規化を行ったという事になります。 ともあれ、「DB 正規化」などで検索すると参考となるページが多数ヒットしますので、これらを参考にご自身で検討されると良いかと。 http://www.techscore.com/tech/sql/SQL16/16_02.ht … http://www.atmarkit.co.jp/fdb/rensai/db_enginer0 … http://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%AC% … なお、この文章の中で主キーと書いたところは、厳密に言うと候補キーとなります。主キーは候補キーの一つですが、主キーで無い候補キーも有ります。気になったら「候補キー」などで検索して下さい。
こんな感じでしょうか？ create table hoge (id int,user varchar(20),d date,num int); insert into hoge values (1,'A','2012/12/25',100), (2,'B','2012/12/24',200), (3,'A','2012/12/24',100), (4,'C','2012/12/23',500), (5,'A','2012/12/23',300), (6,'B','2012/12/23',200); select t1.id,t1.user,t1.d,t1.num from hoge as t1 inner join ( select user,max(d) as max_d from hoge group by user ) as t2 on t1.user =t2.user order by max_d desc,user asc,d desc
単純にdatetime型のカラムで管理すればよいのでは？ create table hoge( 日時 datetime ,USER varchar(5),金額 int); insert into hoge values( '2012-01-14 10:00:00','00001',100),( '2012-01-14 10:00:00','00002',200),( '2012-01-14 10:00:00','00003',100),( '2012-01-14 10:00:10','00001',100),( '2012-01-14 10:00:10','00002',200),( '2012-01-14 10:00:10','00003',100),( '2012-01-14 10:00:20','00001',100),( '2012-01-14 10:00:20','00002',200),( '2012-01-14 10:00:20','00003',100),( '2012-01-14 10:00:30','00001',100),( '2012-01-14 10:00:30','00002',200),( '2012-01-14 10:00:30','00003',100); select 日時,USER ,金額 from hoge where (日時,USER) in (select MAX(日時),USER from hoge group by USER);
その後、どうですか？ 文字エンコーディングについては、お使いのエンコーディングを指定して（あるいは内部エンコーディングでよければ省略してもよいです）、以下のコードで動くのではないでしょうか？ エンコーディングはutf8としていますが、これは適宜変えてください（もしくは省略してください） $last_char = mb_substr($str, mb_strlen($str,'utf8')-1, 1, 'utf8'); まだ質問が閉じられていなかったので、気になりました。
以下のSQLでいけると思います。 select max(C.name) as category_name, count(C.cid) as count_cid from (article_category A inner join (select aid from article_flag where display<>2) B on A.aid=B.aid) inner join category C on A.cid=C.cid group by A.cid
正直原因は分かりません。「mroonga」を使っているのが影響しているのかもしれません。 とりあえずの対症療法と考えてください。 できれば、エンジンをInnodbのみした時に再現するのかを試して、「mroonga」の問題らしければ開発コミュニティにメールしたほうがいいでしょう。
まず基本から 選択肢が複数ある条件分岐はIFよりCASE WHEN のほうがいいかも また偶数奇数だけの判定ならMOD処理はIFをつかわなくても処理できます select V1 ,1-MOD(V1,2) as FLG1 ,CASE WHEN V1>=20 THEN 'L' WHEN V1>=10 THEN 'M' WHEN V1>=0 THEN 'S' END as FLG2 from tbl1; これを単純にデータを確認したいだけならviewをつかえます create view view1 as select V1 ,1-MOD(V1,2) as FLG1 ,CASE WHEN V1>=20 THEN 'L' WHEN V1>=10 THEN 'M' WHEN V1>=0 THEN 'S' END as FLG2 from tbl1; select * from view1; アップデートするならこんな感じ update tbl1 set FLG1=1-MOD(V1,2) ,FLG2=CASE WHEN V1>=20 THEN 'L' WHEN V1>=10 THEN 'M' WHEN V1>=0 THEN 'S' END; select * from tbl1; なおストアドプロシージャなどで処理するともう少し効率的になりそうですが 今のスキルだとまだそこまでやるのは難しいかもしれませんね
select Aテーブル.ID,MAX(TIME) from Aテーブル,Bテーブル where Aテーブル.ID=Bテーブル.ID group by Aテーブル.ID です。
＞後ろページの取得は上手くいきます であればソート順を逆にしてもう一度SQLを発行すればデータがとれるのでは？
ああ、ごめんなさい、中途半端なソースさらしてしまいましたね $sql = "select sum(c1) as c2 from (select count(*) as c1 from テーブル1 union all select count(*) from テーブル2 ) as sub"; $res = mysql_query($sql,$myLink); $rows = mysql_fetch_array($res,MYSQL_ASSOC); print $rows["c2"]; みたいな感じです。 ただし、いまはmysql_query()は使わないように指導されています。 別の方法を試した方がよいでしょう。 もしなにか参考にしている書籍があるならそれは古いのでもう少し 新しいものを用意した方がいいかもしれません。
そもそもSETをつかうならSETの選択肢にリンゴ、オレンジ・・・と 最初からキーワードをいれておけば済みます。 SETで別テーブルを参照する正規化は効率的ではないとおもいます。 逆にクライアント側からの入力を制限したいという目的であれば 外部キー制約の方がよいかと。 //まず果物テーブルを作り create table `kudamono`(`id` int,`kudamono` varchar(20),index(`id`)) engine=InnoDB; insert into `kudamono` values(1,'りんご'),(2,'オレンジ'),(3,'いちご'),(4,'メロン'),(11,'おまけ'); //外部キー制約付きで商品テーブルを作ります create table `shohin`(`group` varchar(20), `item` int ,foreign key(`item`) references `kudamono`(`id`),unique(`group`,`item`)) engine=InnoDB; //データはitemを個別に持たせます insert into `shohin` values('果物群A',1),('果物群A',3),('果物群B',2),('果物群B',4),('果物群C',2),('果物群C',11); //groupとitemの組み合わせを表示するにはこう select `group`,group_concat(cast(`item` as char)) as `items` from `shohin` group by `group`; //果物名を表示させるにはこう select `group`,group_concat(`kudamono`) as `kudamonos` from `shohin` as s inner join `kudamono` as k on k.id=s.item group by `group`;
＞alter table table modify id varchar(10) binary ああ、そういうバイナリですか・・・ であればこんな感じで標準のutf8にしてはいかがでしょうか？ alter table `テーブル名` modify id varchar(10) character set utf8 collate utf8_general_ci （もしくはcollate utf8_unicode_ciなど）
SELECT * FROM db where (name,update,time) in (SELECT name,update,MAX(time) FROM db WHERE name LIKE \"%{$search}%\" GROUP BY name,update) じゃない？
> cdate順にsortしたら、１２月の人より、１月の人が先に出ます。 > １２月の人の次に１月の人が出るようにしたいですが。。。 普通は月は1,2,3．．．11,12の順番だと思います。 実際に12月を1月の前にするとすると、11月や2月の扱いはどうしたいのでしょうか？
SELECT * FROM `table` WHERE 1 AND `s1`='あああああ' AND ifnull(`s2`,'いいいいい') = 'いいいいい' なんて方法もあります。 ※ifnull()は、MySQL5.1の文法書を参照して見つけています。 http://dev.mysql.com/doc/refman/5.1-olh/ja/contr … 使っているVerによって違うかもしれませんから確認してください。
http://dev.mysql.com/doc/refman/5.1/ja/gone-away … wait_timeoutを伸ばすと解決するのでは？
select id,name from または select id,name,NULL place from としてみては？ Ｏｒａｃｌｅの表記なので、少し違うかも。。
何を持って誤ったデータと判断するのか。条件がさっぱり見えてきません。 読み取れる規則性としては codeが同じであれば noは1から連番 yearは昇順 noXのyear < noX+1のyear つまり noXのyear > noX+1のyear を見つけ出せば解決ですか？
GETDATE関数、CONVERT関数？ もしかしてお使いのRDBMSはMS SQL Serverでは？ それなら select id,endtime from [テーブル名] where endtime>=getdate() MySQLなら select id,endtime from [テーブル名] where endtime>=now()
ANo1です。 ＜追加したい条件4＞ ・Bテーブル「created_at」カラムの値で、一番新しいレコードが複数あった場合、 Aテーブル「id」カラム(int型)が一番大きいレコードを1件返す ですけど、 ■前提 ・Aテーブルの1レコード(「id」カラム)に対して、0～複数のBテーブルレコード(「a_idカラム」)がある ・A.id = B.a_id からいうと、 一番新しいレコードが複数あった場合、 Aテーブル「id」カラム(int型)は同じ値になるはずですけど。 ★ひとつだけ2件重複取得されているレコードがありました。 というのが、まったく同じレコードが２件出てきたということなら、 当初の回答のselectの次にdistinctをいれればよい。 select distinct a.id,a.created_at as Acreated_at,a.area, b.a_id,b.created_at as Bcreated_at from Atable a left outer join Btable b on a.id = b.a_id and b.created_at = (select max(c.created_at) fron Btable c where c.a_id = b.a_id) ★この質問に挙げた仕様はサンプルレベルなので、実際には、Bテーブルのほかの項目もselectしている ならば、Bテーブルのほかの項目で判断しないと意味がないと思われます。 ・・・該当するほかの項目を挙げてもらえばSQLを直します。
まったくSQLを使っていませんが、logがそのまま残っているのなら、このような方法があります。 cut -c1-19 <log.log|uniq -c >result.txt 日付時刻部分を切り出してuniq -cで行数を数えるものです。 2日分300万件の疑似ログデータを作成して8秒で集計できました。 除外したいデータが有る場合にはgrepなどを入れる必要があるのでもう少し時間がかかりますが。 ご参考に
SELECT `数量` ,COUNT(`商品ID`) FROM `売上げ明細` WHERE (`商品ID`, `単価`) IN (SELECT `商品ID`, MAX(`単価`) FROM `売上げ明細` GROUP BY `商品ID`) GROUP BY `数量`
深く考えすぎ まず第一に選手ごとの最多点数を拾います。 select c_name,max(c_score) from tb_score group by c_name; この条件にあう、選手とスコアの組み合わせをwhereで絞り込むだけです select c_name,game,c_score from tb_score where (c_name,c_score) in(select c_name,max(c_score) from tb_score group by c_name);
あ、XXXの表示も含めるとこんなかんじ select PARENT ,(select XXX from hoge as t2 where t1.PARENT=t2.ID) as XXX ,COUNT(*) as COUNT from hoge as t1 where PARENT!=0 group by PARENT
UPDATE tbl_question INNER JOIN tbl_quiz_log ON (tbl_question.answer=tbl_quiz_log.user_answer) AND (tbl_question.question_id=tbl_quiz_log.question_id) SET tbl_quiz_log.answer_flag = 1; こう？ たぶん、 tbl_questionのquestion_idとtbl_quiz_logのquestion_idが一致（つまり、問題番号が一致） かつ tbl_questionのanswerとtbl_quiz_logのuser_answerが一致（つまり、回答者の答えが正解と一致） の時だけ tbl_quiz_logのanswer_flagを1にする が、質問者さんの希望する動作だと思うのだけど。
> 本筋から外れてしまってすみませんが、「Class.forName("com.mysql.jdbc.Driver");で使い回し」とはどういった意味でしょうか…？ そう言われると…どういう意味でしょうね(^^; いや、使いまわしはよくないですよ…と言いたかったのです(汗) > また、コネクションはSQL文を一回発行するごとに確立し、実行が終わるたびに閉じるのがやはり理想的なのでしょうか？ はい、理想的です。 ムダなメモリーも食いませんし、不必要なバグに怯える必要もなくなります。 また、コネクションの確立も今のPCであれば大した速度でもないでしょうし。 ただ、使いまわしも1処理内であればいいと思います。 例えばfor文で回してる間にいちいち閉じるのは非現実的なので、 for文が始まる前に確立させて使いまわす…は、アリかもしれません。 この辺りは人の感覚やソースにもよりますので、一概には言えません。 不安があるウチは、実行が終わるたびに閉じるようにした方がよいでしょう。 この辺の事情は難しいですよね。 自分で言ってても正しいのか不安です…。 なので、DataSourceを使用しないのであればかなり気を付けるようにしています。 > となると、元のソースコードが動かなかったのはやはりjdbcの方のバグなんでしょうかね… 全ソースを見てないので何ともですが、そうなのかもしれませんね。 今お使いのJDKは5以上とお見受けしますが、元のソースコードは 1.4.2なので、この辺りも関係しているかもしれません。 何はともあれ、動いて良かったですね！
エラーメッセージをみるかぎり、すでに同名のデータベースが存在しているようですが？
まずプリペアドステートメントの理解度を上げる必要がありそうですね http://www.php.net/manual/ja/pdo.prepared-statem … またphpの基本文法も怪しそうです 「.」でつないでいるつもりなのでしょうか？そのわりにクォーテーションの 使い方が変です
MySQLのサービスが停止したらphpMyAdminでデータの出力はできません おそらく基本的なところで大きな違いをされているのではないでしょうか？
phpMyAdminの検索は削除用ではないのでご希望の機能はありません 検索の際にオプションで１ページあたりのデータ件数を指定できるので 大きな数字を入れて検索してみてください 前にも書きましたがSQL欄でやるのが一番 検索のwhere句をコピペするだけなのだからなぜそれをしないのかが疑問
phpMyaAdmin のことかな～
XAMPPは開発やテスト用と主眼に作成されています。 そのため、標準の状態ではセキュリティ関連の設定がなされていません。 そのままで本番環境として使用しないでください、という警告です。 XAMPPは修正したファイルの確認用に使用すると言うことで良いでしょうか？ であれば、問題は特にないかと思います。
>「kamedaの一番の得意科目(クラスでの相対順位が最上位)は英語で、クラス2位である」 >「kamedaの二番の得意科目は数学で、クラス4位である」 >「kamedaの三番の得意科目は国語で、クラス7位である」 とテーブルの更新内容が一致しなかったので、上記の結果を出すためのSELECT文です。 select 　t1.usr_id, t1.kyoka_name, count(t2.usr_id) + 1 my_rank,t1.kyoka_rank from 　(　select 　　　t1.usr_id, t1.kyoka_name,count(t2.usr_id) + 1 kyoka_rank 　　from seiseki2 t1 　　left join seiseki2 t2 on (t1.usr_id <> t2.usr_id and t1.kyoka_name = t2.kyoka_name and t1.point < t2.point) 　　group by t1.usr_id, t1.kyoka_name 　) t1 　left join 　(　select 　　　t1.usr_id, t1.kyoka_name,count(t2.usr_id) + 1 kyoka_rank 　　from seiseki2 t1 　　left join seseki2 t2 on (t1.usr_id <> t2.usr_id and t1.kyoka_name = t2.kyoka_name and t1.point < t2.point) 　　group by t1.usr_id, t1.kyoka_name 　) t2 on (t1.usr_id = t2.usr_id and t1.kyoka_name <> t2.kyoka_name and t1.kyoka_rank > t2.kyoka_rank) group by t1.usr_id, t1.kyoka_name,t1.kyoka_rank order by usr_id,my_rank ; 全角スペースでインデントしてあります。 mysqlの文法に合っていない箇所は適宜修正してください。
書き忘れましたが、 >これは、バッチ処理で行うようなかたちになろうかと存じますが、 バッチ処理は基本的には行いません。Windowsのバッチ処理やUNIIXのshellスクリプトも含めて、書くのが結構大変です。質問者さんは、PHPなどのスクリプト言語を書けるのですので、そこから命令を実行させて結果を受け取るのがずっと楽ですし、高機能なものができます。 実行環境としてLinuxも考えているのであれば、互換性の関係からPHPだけで書くのが良いと思います。 PHPの場合はshell_exec()などを使うようですね。
select * from TABLE_A where No1 + No2 + No3 >= 30;
空白ってなに？とまず突っ込まれる内容ですね キチンと型指定すれば空白はないとおもいますが create table hoge(id int not null default 0 primary key,data int null); insert into hoge value(1,1),(2,3),(3,''),(4,null),(5,null),(6,0); この場合、空白は0です そこで拡大解釈して0もカウントしないという命題だとすると 一般的にはsumを使う場合とcountをつかう場合があります (1)select sum(data is not null and data!=0) from hoge; →dataがnullじゃないかつdataが0じゃないものをカウントするのにsumをつかいます (2)select count(if(data=0,null,data) ) from hoge →dataが0だった場合nullだとみなします、この場合はcountでいけます
「SQL」を押して表示される入力欄にDELETE文をLIMIT文を省いて書けばいけるのでは？
データーの格納先のフィールドはＵＮＩＣＯＤＥ格納などの指定がされてないのでは？日本語はそういう指定をしないと化けますよ。どのＤＢでも。
こんにちは。 ＞＞すでにあれば作成するという すでにあれば作成しない・・・でした。 失礼しました。 ＞＞これはチェックをつけなくても、 ＞＞そこまで問題にならないものなのでしょうか？ 「IF NOT EXISTSを追加」 をチェックしなければ、ただの「CREATE TABLE ・・・」が出力されますから、 新規で作成する場合には問題にならないでしょう。 「完全なINSERT文を作成する」 と 「長いINSERT 文を作成する」 は、いずれかを指定する事になりますが、多分どちらかがデフォルトなんでしょうね・・・。 両方チェックしなければ、どちらかの型で出力されると思います。 なので、上記を理解して全てチェックを外すのは問題ありません。
Accessのほうで質問するべきではないでしょうか？ まあ3行なので答えますが ActiveX Data Object （ADO）を使ってmysqlを直接発行するか 合計を別に作り、UNIONクエリで結合するか 表示だけだったら、(レポート/フォーム)フッダーにSUM(colum名)でいいと思います。
おそらくGROUP BY句のWITH ROLLUPでいけるかと http://dev.mysql.com/doc/refman/5.1/ja/group-by- …
sennaが古いので、その後継のgroonga及びmroongaをおすすめしておきます。
元表のプライマリキーはどうなっているのでしょうか? nameをidにするとユニークを確保するのがかなり大変ですが大丈夫ですか？ //準備 create table seiseki(name varchar(20) primary key,school varchar(10),city varchar(10) null,point int not null,rank int null); insert into seiseki(name,school,point) values ('kameda','1高',345),('suzuki','2高',341),('kaneko','3高',332),('yosida','2高',321),('tanita','1高',310),('suyama','1高',310),('kisida','2高',301),('komine','1高',299),('tomita','2高',289),('sugita','1高',275); select * from seiseki; //nameごとのschool単位での順位 select name,(select count(*) +1 from seiseki as t2 where 1 and t2.point > t1.point and t2.school= t1.school ) as rank from seiseki as t1; //上を応用して、rankとcityを更新 update seiseki as t0 inner join (select name,(select count(*) +1 from seiseki as t2 where 1 and t2.point > t1.point and t2.school= t1.school ) as rank from seiseki AS t1 ) as t3 on t0.name=t3.name set t0.rank=t3.rank,t0.city='tokyo';
windows環境のsjisはwindowsの機種固有文字を含まないので今後は「cp932」を使用することをおすすめします。 ・my.iniの文字コードの指定をcp932にする。 ・mysqldump -uユーザ名 -pパスワード --default-character-set=cp932 データベース名 > ****.sql ・create databaseする際にCHARACTER SET cp932を指定 ・ダンプファイルの「CREATE TABLE文の「CHARACTER SET」を確認。SJISだったらcp932に変更。（エディタなどの一括変換が便利） ・リストアはmysqlコマンドです。コマンド実行時に文字コードを指定しても、ダンプファイルの中のCREATE TABLE文の文字コード指定、データ部分の文字コードは影響を受けないのであまり意味はないような気はします。
> ・char(0)て何でしょうか？ 「検索語にはありえない文字」です。char(0)は、文字コード0の文字。以下の説明では\0と書きます。 例えば、検索語が"%おか%"で、field1="あいうえお"で、field2="かきくけこ"だった場合、 concat(field1,field2)は"あいうえおかきくけこ"となり、検索条件にマッチします。 ところが、concat(field1, char(0), field2) は、"あいうえお\0かきくけこ"となるため、 こうしておけば"%おか%"はマッチしない、ということになります。 > ＞%データ%は全件を検索するため効率うんぬんを論ずるような仕組みではない > ・どういう意味でしょうか？ 前後にワイルドカードをつけたLIKE 検索(いわゆる「部分位置検索」)は、効率が非常に悪いからです。 通常の検索(完全一致や範囲指定などによる絞り込み)では、DBにインデックスをつけることで、条件に該当するレコードを高速に抽出することができます。 (LIKEを使う場合でも、後ろにだけワイルドカードをつけた「データ%」のような、いわゆる「前方一致検索」は、インデックスが使えるので問題ありません。) ところが、前にワイルドカードをつけた場合、インデックスが使えませんので、 DBの全レコードを1件ずつ読み込んで条件に合致するかチェックする必要がある、ということになります。 検索にはレコード数に比例した時間がかかるという、非常に効率が悪いものになってしまうのです。 > ・あるいは、データ規模が少なければ、LIKE検索を利用しても良いのでしょうか？ それが問題にならない程度の規模ならLIKEの前後ワイルドカード(部分一致検索)をしてもいいでしょう。 > ・全件検索する際は、LIKE検索を使わないのでしょうか？ 全文検索エンジン(?)を利用するのでしょうか？ 規模が大きくなった場合には、全文検索エンジンを使うのが基本です。 > ・全件検索しなければ(例えば2カラムだけ)、LIKE検索を利用しても良いのでしょうか？ 「例えば2カラムだけ」というのが意味不明ですが、 問題はチェック対象のレコード数(行数)です。カラム数(列数)は問題になりません。 全件検索でなくても、チェック対象のレコード数が多い場合にはLIKE部分一致検索はしない方がいいでしょう。 LIKE検索以外の条件で、チェック対象が十分に絞り込めているなら、LIKE部分一致検索をしても大丈夫ということになります。 > ＞本番ではこんなことはしませんがあくまでも遊びということで > ・どういう意味でしょうか？ 上述のように性能が出せないので、大規模業務システムではそんなものは使わない、ということです。 > ・あるいは、全件検索でLIKE検索を普通は使わない、ということでしょうか？ LIKE検索でも、「あるカラムのみをチェック対象(LIKEの左辺)」とし、「頭には%をつけない前方一致検索」を行うのであれば問題ありません。 > ・concatで LIKE 検索を普通はしない、ということでしょうか？ > ・それとも、LIKE 検索で、char(0)などのセパレータを挟まない、ということでしょうか？ LIKE対象の前に%をつける「部分一致検索」は普通はしない、ということです。 さらにいうと、あと、カラムそのものではなく、concat した文字列に対してのLIKE 検索だと、「データ%」のような前方一致検索でも、左辺側にインデックスが使えませんので、やっぱり効率が悪くなりますので使えません。
こういうものは仕様が命 table_aはユニークなチームの一覧だとして table_bはtable_aとの相関関係がどうなんでしょう？ (1)table_aに存在してtable_bに存在しないデータがあるか？ (2)逆にtable_bに存在してtable_aに存在しないデータはあるか？ (3)table_bのuser_idのユニークは保証されているか？ これがきまらないと書き方がおおきくかわってきます。 もう少し突っ込んで言えば、もしtable_aとtable_bのデータが常に1対1で整合性が とれているならtable_bは必要なく、table_aで管理をすればよいような気がします。
>db1とdb2は同じマシンの中にあります。 ああなるほど、では、出力の際に mysqldump -u root --add-drop-table=false --insert-ignore=false --no-create-info=true -p db1 > db1.sql としてみてはどうでしょうか？
安心してください nharasawa様の回答されたテーブルで十分です 数千万レコード、1秒間に100近い更新、リアルタイム表示 これらすべての条件が重ならない限り、別に回数などを記録しなくても 集約関数を使って（GROUP BY）集計(COUNT)すれば、安サーバー、ノートパソコンでも余裕ですｗ （HAVING句も使えばさらに応用の幅が広がります） 参考　集約関数 http://www.atmarkit.co.jp/fnetwork/rensai/sql03/ … むしろ回数などのデーターを持ってしまうと、回数データの整合性をチェックするために 定期的に内部結合を伴ったクエリを発行しなくてはなりません。 おそらくこちらのほうが厄介です。←まあどんぐりの背比べですがｗ
マニュアルで書かれている構文フォーマットは、BNF likeな書き方なので斜体で書かれた文字列は、マニュアルの別ページで定義されていますよ。 http://ja.wikipedia.org/wiki/ABNF 例で出てきた、table_referencesの定義は、"JOIN構文"のところで定義がなされています。 http://dev.mysql.com/doc/refman/5.1/ja/join.html
ゴミが残る可能性があるのでリストアの観点からいえばdropした方が確実 たとえばバックアップ後、データ更新（追加・削除ふくむ）があった場合、 バックアップ時点にデータを戻したいなら各テーブルの中身が残っていると 不都合がある可能性がたかい
こういう質問をするなら、semi-sync-replication の有無より、レプリケーションとトリガーの組み合わせについて質問するなら、バイナリログのフォーマット設定も書き込むべきじゃないかな？ http://dev.mysql.com/doc/refman/5.5/en/replicati … MySQL 5.1のだけど、日本語ならここ http://dev.mysql.com/doc/refman/5.1/ja/stored-pr … もうマニュアルに書かれていることだから説明するのも二度手間になるけど… row-basedなら、バイナリログでテーブルのデータが更新されてもトリガーがスレーブ側で実行されることは無いので、実行順序の問題は原理的に生じない。(トリガーで更新されたテーブルのデータもバイナリログに記録されてスレーブに反映される) statement-basedならスレーブでもトリガーが実行されるので、実行順序に関しての保障は無い。 というのが回答になります。 で、"これはお願いなのですが、～(省略)～実際に運用経験があり、正確な知識をお持ちの方にアドバイス頂きたいと思います。"こういう情報がほしければ、お金を払ってプロに頼んでください。
アプローチの仕方が的を射ていない感じ 無関係ではないが本質はそこには無いと思います
スクリプト言語「PHP」はどうでもよくって（別にASPでもJSPでもかまわない）とにかく 「データベース言語「SQL」を使用し、データベースを扱う標準関数を利用して」というのもどうでもよくって、 とにかく 「なんらかの言語でWebブラウザから、GUIで、データベースを操作したということ」 が実習のポイント。 一方で、Webブラウザを使わずにSQLを直接発行してデータベースを操作する作業を考えて （やったのかもしれませんが）これをCUIで、データベースを操作したということ として、その対比を「私の書いた考察」に結び付けれませんか？ ## あえて答えになってしまうような例を挙げないで書いていますので ## ちょっと分りにくくてすいません。 ## 答えの見当はついているけどまずはあえて書かないでどういう方向かだけ書いています。 ## 答えを考えろって要求でしょうし、答えに悩んでいるのではなく、 ## 答えを見つけるための方法で悩んでいそうなので。
動的にSQLを書き換えて実行することはMYSQL単体でも可能です。 （ストアドプロシジャとかで） 頻繁に入れ替えないのなら、それでもいいと思います。 しかし単純なUPDATE文で更新するのの100倍は時間がかかると思います。 （結構めんどくさいですし） そもそも、テーブルの設計に問題があるように思います。 常に4人のデータが入っているのならまだ、いいのですが NULL値などがあるとさらに上の処理が煩雑になります もし、テーブル設計を見直せるなら table pk, group, id, age, sex として insert時に idはgroupでグループ化し、count(pk)+1で取得 1つのグループが5人以上にならないようにトリガでチェックをかける というふうにすれば上のテーブルと同じデータが格納できます。 拡張性も高いです。 で、肝心のUPDATEですが ちょっとわかりません まず、3,1,2の順番から ・「1の数字が付いたカラムの値」を、「3の数字が付いたカラムの値」で更新したい ・「2の数字が付いたカラムの値」を、「1の数字が付いたカラムの値」で更新したい となるのがよくわかりません 予想ですが ・「3の数字が付いたカラムの値」を、「2の数字が付いたカラムの値」で更新したい というのを書き忘れていて、３次の巡回置換（３つの入換という意味）を表しているのか つまり１，２，３が３,１,２になるのか…(1) それとも１，２，３が３，３，３になるのか…(2) はたまた１，２，３が３，１，３になるのか…(3) たぶん(3)だと思うのですがそれって意味がないような…。 まあ、どれでもテーブル構造さえ見直せば結構簡単にかけるので テーブル設計を見直せるならやってみてください
>尚、PUT先の192.168.100.105　の/var/lib/mysql/の所有者はユーザー、グループともmysqlです。 >mysqlユーザーで行えばput可能のでしょうが、どのサイトを見てもreplication専用ユーザーを作って対応することとなっており、安全上の面からも機能限定のユーザーでputしたく考えております。 グループに書き込み権限がついていないだけ…とか言うことはありませんか？ ティストリビューションが何かは不明ですが…。
変数をエスケープしないで突っ込んでいる時点でアウトですが、Syataxエラーとは無関係なので、 直接のエラーの原因は文字列をクォートしていないことでしょう。
2916の項目が複合的にすべて連携しあいながら検索・集計する必要があるのでしょうか？ ただの履歴でしかないようなデータはまとめてblobで1項目に流し込んでしまうとか 運用の方法でなんとかなるのでは？
＞画像を呼び出す際に、この二つの方法によって ＞できる事やできない事、またメリットやデメリットというのもは できる事とできない事は、基本的には差はありません。 あとはざっとこんなところでしょうか？ 個人的には後者の方がお勧めですが、リソースに十分な余裕があるなら 前者でもいいかもしれません。 ○直接登録する方法 →メリット ファイルの削除や移動など気にせずにDBに保存されているものがすべてなので 整合性がとりやすい →デメリット データが集積するに伴いデータベースが肥大化する。 そもそもバイナリデータ自体SQLとしての検索の対象にならないので、 テーブルに収納すること自体が無駄。 （とくにG単位のムービーなどはオーバーヘッドが大きすぎる） ○ディレクトリに画像を格納 →メリット 出力がファイルI/Oに依存するためデータベースに問い合わせるより若干高速 管理者がファイル自体を直接見て内容を判断できる →デメリット idでのひも付けがきれたとき、ゴミがたまりやすい ファイル自体を直接編集してしまうと、DBの内容と差異が発生する データの取り扱いがやや煩雑
私なら地域テーブルを追加するか、テーブルに地域項目を追加します。 県名項目に地域名を追加してしまうと、県名だけが必要なときに操作が困難です。
細かくチェックしてないけどこんな感じでどうでしょう？ create table tenki_log(日付 date,天気 varchar(10),気温 double); insert into tenki_log values( '2012-10-01','晴',19.5),( '2012-10-02','晴',19.0),( '2012-10-03','晴',20.0),( '2012-10-04','晴',21.0),( '2012-10-05','晴',21.0),( '2012-10-06','晴',19.5),( '2012-10-07','晴',20.5),( '2012-10-08','曇',18.0),( '2012-10-09','曇',21.0),( '2012-10-10','曇',20.0),( '2012-10-11','雨',18.0),( '2012-10-12','雨',18.0),( '2012-10-13','雨',18.0),( '2012-10-14','雨',17.0),( '2012-10-15','曇',18.0),( '2012-10-16','晴',18.0); //表示 select `天気` ,`最高気温` ,`最高気温が出た日付` ,(select max(`日付`) from tenki_log where `気温`>=20 and `天気`=sub.`天気` ) as `20度以上になった最新の日付` from ( select `天気` ,`気温` as `最高気温`,max(`日付`) as `最高気温が出た日付` from tenki_log where (`天気`,`気温`) in ( select `天気`,max(`気温`) from tenki_log group by `天気` ) group by `天気` ) as sub
INSERT文は行データを追加するためのもので列データを追加するものではありません。 3_column列がrtableテーブルに存在するならUPDATE文を使用しましょう。 UPDATE `rtable` SET `3_column` = `2_column`; 3_column列がrtableテーブルに存在しないなら3_column列を追加後に上記のUPDATE文を流します。 列追加のためのSQLは以下の通りです。 ALTER TABLE `rtable` ADD `3_column` [データ型]; （[データ型]部分は3_columnのデータ型にする必要があります。 　INTならALTER TABLE `rtable` ADD `3_column` INT;）
MySQLは全然さわったことがないのですが、 http://dev.mysql.com/doc/refman/5.1/ja/alter-tab … を見る限り、プライマリーキーを追加するだけなら ALTER TABLE tbl_name ADD PRIMARY KEY(col_name1, col_name2); でいいのではないですか？
>table_cにcdがある場合は条件を指定し、 >ない場合は条件を指定しない table_c.cd = 'cd_1' or table_.cd is null 以下ざっとテスト create table table_a(id varchar(10),name varchar(10)); insert into table_a values('a1','aaa'),('a2','bbb'),('a3','ccc'); create table table_b(b_id varchar(10),a_id varchar(10),user_id int(5) unsigned zerofill not null,point int); insert into table_b values('b1','a1',1,5),('b2','a1',2,2),('b3','a3',7,10),('b4','a2',356,10); create table table_c(c_id varchar(10),user_id int(5) unsigned zerofill not null,cd varchar(10),bonus_point int); insert into table_c values('c1',1,'cd_1',1),('c2',7,'cd_2',1),('c3',356,'cd_1',1); //表示 SELECT b.user_id ,coalesce(b.point,0) + coalesce(c.bonus_point,0) as total_point FROM table_a as a INNER JOIN table_b as b ON a.id=b.a_id LEFT JOIN table_c as c ON b.user_id=c.user_id WHERE c.cd = 'cd_1' or c.cd is null ORDER BY total_point desc
No.1です。 システム監査の一環という事でしょうか。 理解不足で申し訳ありませんでした。 が、自分自身をupdateするというのは、どうかと思います・・・。 そういった機密性の高いデータにアクセスがあったかどうかは、別なテーブルやログ・ファイル等に追記していくのが一般的です。 ちなみに、このようなオープンソースのソフトがありますので、利用されてみては如何でしょうか。 参考URL : http://sourceforge.jp/magazine/12/03/27/1333243 ※また見当違いの回答でしたらスミマセン。
No.1です。 時間帯について明確な回答が得られませんでした。 なので一般的なサーバはどのような感じ化回答しておきます。 日中帯はアクセス数が多くなり負荷が高くなっています。 夜間はバッチ処理が走っていたりオペレータが作業していたりで負荷が高くなっています。 比較的安全な時間帯を上げるならば早朝の時間帯でしょうか。 私の以前の職場ではそんな感じです。 また、商用環境ですとAM03時～AM05時くらいに切り替えやバージョンアップ作業が入ります。 アナウンスがあるとは思いますが、この時間も避けておくのが無難でしょう。 これらの時間帯を避けて作業を行ったうえで規制がなされたのであれば よほど規制が厳しいのだとお考えください。 その際は現在実施されている運用に戻せばいいでしょう。 もしくはDBの更新時のSQLをすべてバッグアップし手動で反映させるか・・・ 現在の運用方法のほうが簡単で手間もなく、安全だとは思います。
SQL文が変ですが、質問内容に対する回答はYESですね mysqlデータベースのuserテーブルにおけるhostは その特定ユーザーが任意のホストからアクセスする際の権限です。 SQLのいわゆるLIKEをつかったマッチングにあたるので 「%」は全てのホストという意味になります また別途hostテーブルでも制限されますのでご注意ください 詳しくは http://dev.mysql.com/doc/refman/5.1/ja/connectio …
そもそもshohinが特定されているならgroup byするまでもないのでは？ SELECT COUNT(*) AS kazu FROM zaiko WHERE shohin='A';
親子カテゴリーというか、その手のものは、さらに孫カテゴリーが出来て、ツリー型になるので、親子でtableを分離すると逆に面倒なことになる。 しかし、ツリー型をデータベースでうまく処理するには、こつが要る。 ３種類の方法があって、最終的にどんなデータの取り出し方をすることがおおいか、どのデータベースシステムを使うのか（サブクエリの使い勝手や、Oracleのように階層関係を簡単に処理できる関数を持ってるか）によって決めるとよいだろう。 http://makizou.com/1616/ に概略解説がある。 １．隣接リスト型　：　parent_id を持たせる方法 ２．経路列挙型：　ディレクトリーツリーのような表示形式で保持する方法 http://www.makizou.com/archives/1662 ３．入れ子集合型：　右値と左値を持たせて、子集合は、親の左右値内に入る様にする http://www.geocities.jp/mickindex/database/db_tr … まあ、単純一覧でぱっと見理解しやすいのは、２の列挙型かと思うけど、列挙形式記述にこつが要る。親側に変更があるときに面倒、プログラムで行えばどうということもないけど。 ３は、ぱっと見分け解りません。データ作成も手作業では間違うから、プログラムをうまく組む必要があります。でも、最終的に結構すっきりした構造になるという利点があります。 １は、データ作成は簡単だけど、取り出すときに、階層処理関数を持ってないmysqlでは一回で階層化できないことが多い。２階層しかないなら、あんまり問題にならないかもしれないけど。 「テーブルの正規化」は、ちょっと意味が違うので、ちゃんとそれを解説しているページを探して読んでください。
こんな感じです、sumを使うのがポイント create table hoge(科目 varchar(30),点数 int); insert into hoge values('英語',93),('英語',96),('英語',88),('独語',95),('独語',83),('仏語',84),('仏語',89); select 科目 ,sum(点数>=95) as 95up ,sum(点数>=90) as 90up ,sum(点数>=85) as 85up from hoge group by 科目;
SQLの実行はプログラムで処理しているのでしょうか？ （$iとか書いてあるし） その場合はPHPかなにかで処理していますか？ そうだとするとPHPからのデータ受け渡しはおかしくないですか？ もしくはphpMyAdminあたりでしょうか？ その場合は$iのところがどういう対応しているのかよくわかりませんが・・・
SQL Serverで作業しているものです。 多分、MySQLでも同じと思いますが、 mainとsubを取得するときに固定値を入れたら判断することができます。 質問のSQL文ですと、下のように書いたらできます。 （tablenameという名前の列を追加しています。） SELECT tablename, id, tom, best, center, dragon 　FROM ( 　　SELECT 'main' tablename, m.id, m.tom, m.best1, m.center, u.dragon FROM main m　←セレクト１ 　　　LEFT JOIN usa u ON m.usa_id = u.id 　　UNION ALL 　　SELECT 'sub' tablename, s.red_id, s.red_title, s.best2, s.center, u.dragon FROM sub s　←セレクト２ 　　　LEFT JOIN usa u ON s.usa_id = u.id 　) as PIYO
試してみたら当方の環境でも文字化けしました。 調べてみましたらこちらの手順でOKでした。 http://www.e-petlife.com/wordpress/category/tats …
私のエスパーとしてのレベルが足りないので申し訳ないのですが まず、質問の意味が分かりません そしてなにがしたいのか、なぜそうしたいのかが、全く見えませんが 私のつたない第六感をたよりに書きますと SELECT id, century, tom, best, center, dragon FROM ( SELECT h.id, c.century, h.tom, h.best, h.center, u.dragon FROM hoge h --ここにhを追加 LEFT JOIN usa u ON h.usa_id = u.id LEFT JOIN century c ON h.century_id = c.century_id UNION ALL SELECT r.red_id, c.century, r.red_title, r.best, r.center, u.dragon FROM red r --ここにrを追加 LEFT JOIN usa u ON r.usa_id = u.id LEFT JOIN century c ON r.century_id = c.century_id ) as PIYO こういうことでしょうか？ テーブル名の後に略称を入れただけです。 ただ、こういう書き方をしても元の式と全く返される結果は変わらず。 また、内部処理も全く改善しないので なんの意味もないような気がするのですが…。 あと、常識すぎて指摘されるのも不愉快かと思いますが一応断っておきます。 （仮、テーブルを作成してコードが実行できることは確かめております。） 掲示板の仕様上コードに全角スペースが混入する可能性があります。 そのままコピーして実行してもエラーが出る場合はメモ帳などで全角スペースを半角スペースに変換してお使いください。 もし「こんな当たり前のこと聞いてねーよ、氏ね」と思ったらご容赦下さい。
データの結合は相乗的にデータが増えるので、自己結合などで 条件設定を冗長にやっていると処理時間が膨大になったり メモリを食い過ぎたりなど当然想定しなくてはいけませんね ＞独学で、1，2か月 で、このレベルの質問ができるとすると、相当基礎的なスキルがあるかとは 思いますが、まずはSQLの基本である正規化について知識を深めて、 インデックスなどをためしながらexplainでテストしていく というのが流れになると思います。 また簡易なデータ参照についてはエンジンも思い切ってMyISAMなどで 処理することで高速化をはかるとか、データ更新がおおくなかったり 完全なリアルタイム性が必要でないものは中間テーブルをつくって 高速化することはできるかと思います。 プロジェクト管理についてはガントチャートやパートチャートの考え方を理解し、 プロジェクトのパートごとに人月設定をしたうえで、アサインするユーザーに 配分の係数を掛けていくと進捗がだせると思いますので プロジェクトテーブル、ユーザーテーブル、プロジェクト＝ユーザーアサインテーブル などに分けて処理すれば効率的にいけるかもしれません。 期間の処理はプロジェクトに寄せるか、さらに別テーブルで管理するかは 出力したい帳票によりますね
> 画面は404等のエラーになるわけでもなく真っ白です。 > ・・・ > ログファイル上では正常にページが読み込めたことになっています。 > ・・・ > ソースも真っ白です（1文字も表示されない）。 という状態で、何を見て↓だと分かったのでしょうか？ > DBのデータを読み込むためのPHPファイルをインクルードしようとするところでエラーを起こし、読み込みストップしています。 また、生ログとは apache などのWebサーバのアクセスログかと思いますが、Webサーバのエラーログを見ることは出来るのでしょうか？
MAIN、SUBともに1件だとしても、レコードとしては2件抽出したんですよね？ MAINとSUBをそれぞれ独立して抽出するならば、結合などせずUNION ALLすればいいのでは。
＞方法としては間違ってないでしょうか？ 効率的かどうかはともかくロジックはあっていると思います SELECT *している時点でインデックスは期待できないですしね ＞他にいい方法があればアドバイスをお願いします。 あえて指摘するなら構造が同じテーブルなら、一つにまとめてしまった方が 効率がいいのは間違いないです （おそらくなんらかの理由でわけているのでしょうけど）
MySQLに限らずSQL全般についてorder byにて任意にソートルールを指定しない限り 表示順は保障されません。
create table t1 (品番 varchar(30),枝番 int); insert into t1 values('aaa',1),('bbb',2),('aaa',2),('ccc',3),('aaa',6); create table t2 (品番 varchar(30),枝番 int); insert into t2 values('aaa',2),('rrr',5),('bbb',5),('aaa',6); delete from t1 where (品番,枝番) in (select 品番,枝番 from t2); みたいな感じでよいのでは？
1レコードをユニークに特定できる情報が無いのであれば、基本的には無理です。 各レコードにユニークIDを振るなどデータの持ち方を見直した方がいいと思います。
>ユーザ名、趣味名１、趣味名２、趣味名３を表示させたい 意図がよくわかりませんが5個登録されていても3つだけ表示したいということでしょうか？ もし単純に全ての趣味を表示してよいならこんな感じで //準備 create table user(uid int not null primary key,uname varchar(100)); insert into user values(1,"佐藤"),(2,"鈴木"),(3,"田中"),(4,"吉田"); create table hobby(hid int not null primary key ,hname varchar(100)); insert into hobby values(1,"テレビ"),(2,"ネット"),(3,"ゲーム"),(4,"ラジオ"),(5,"スポーツ"),(6,"スポーツ観戦"),(7,"映画鑑賞"),(8,"音楽鑑賞") create table user_hobby(uhid int not null primary key auto_increment,uid int,hid int,unique(uid,hid)); insert into user_hobby(uid,hid) values(1,1),(1,2),(1,3),(1,4),(1,5),(2,2),(2,5),(2,3),(2,1),(3,1),(4,2),(4,3),(4,5),(4,7),(4,8); //表示 select uname,group_concat(hname) as hnames from user as u inner join user_hobby as uh on u.uid=uh.uid inner join hobby as h on uh.hid=h.hid group by u.uid;
join の所を、right join　に変えてみてください。 これで、うまくいくと思いますけど。 解説： 　joinで、結合するには、両方のテーブルに結合条件に該当するレコードが存在することが必要です。 　片方のテーブルにだけ存在するデータも欲しい時には、 　　joinの左側に書いたテーブルのデータが全部欲しい→left join 　　joinの右側に書いたテーブルのデータが全部欲しい→right join 　　両方のテーブルのどちらか一つでもあれば全部欲しい→full join 　を使用します。 　使い方は全く同じ。結果が異なるだけです。
組み合わせテーブルと製品テーブルの関係がよくわからないですね （組み合わせテーブルと製品テーブルを並列に書いているので区切りもわからない） 結果として、どういうデータが抽出されることを想定していますか？
■質問1 SHOW TABLE STATUS WHERE Name = 'テーブル名' の結果で返却された、 Auto_incrementカラムの値が、 次回発行される「auto increment の値」です。 ■質問2 AUTO_INCREMENTが設定されているカラムに対しても値を自分で指定して設定することができますので、 削除した一番若い番号を利用することは可能です。 ↓ mysql> insert into autotest(id, name) values(15, 'DVDプレイヤー'); ■質問3 引き継がれます、AUTO_INCREMENT値500までデータがあればAUTO_INCREMENT値501からINSERTされます。
遷移先の ninsyou.php にて idとpassの値を取得 ↓ <?php $id = $_POST['id']; $pass = $_POST['pass']; ?> その値を利用してMySQLへSELECT問い合わせ ↓ SELECT * FROM TABLE名 WHERE id = '$id' AND pass = '$pass' これにてテーブルに情報があるかどうか確認出来ます。
mysqliをつかう http://www.php.net/manual/ja/book.mysqli.php もしくはPDOで処理する http://www.php.net/manual/ja/class.pdo.php
>「読み込み中です。」のような画面 この仕組みだと、2～3秒ならいいですが10秒くらいが待っていられる限界ですね ajaxでデータを呼び出し、readystateをチェックする流れだと思います もし30秒以上かかるような想定であれば、予約式にして 予約確認画面で作成状況を確認し、データができあがっていたら ダウンロードするような方式が現実的です
SELECT count_coin, COUNT(*) FROM (SELECT user_id,COUNT(coin) count_coin FROM buy GROUP BY user_id) t GROUP BY count_coin; でどうでしょうか？ もしかして、これは2回のSQLということになってしまうのでしょうか・・・
それはcmd自体のcharsetがUTF-8ではないからです コマンドプロンプト上に以下コマンドを打ち込んでください UTF-8に変更する場合のコマンド chcp 65001 デフォルトに戻す場合 chcp 932 以上おためしください
SELECT DISTINCT t2_code,date FROM t1 INNER JOIN t2 ON t1_code=t2_code WHERE (t1_type,date) IN(SELECT t1_type,MAX(date) FROM t1 INNER JOIN t2 ON t1_code=t2_code GROUP BY t1_type) でどうでしょうか。
頻度が高いのであれば最初から別カラムに専用でとっておき インデックスを貼っておくことです
ネットワークの設定状況がわかりませんので正確な回答が出せませんが、XPとホストPCと接続しようとしているWindowsPCをまず同じLAN（サブネットマスクとネットワークアドレスを同じにする）に設定する方法が一番確実です。（他のLANは極力使わない） VirtualPCのXPはホストPCと同じLANカードを使う事で、同じLANケーブルを使って同じLANに接続できるはずです。
投稿データ[bbsTable]と会員マスタ[userTable]を結合するキーが bbsTable.postUserName　と　userTable.userName なんですかね？ ユーザーIDを用いてない投稿時のデータとマスタを関連付けできるのかな？という点が気になります。 投稿時のユーザー名と会員マスタのユーザー名が完全一致するものだけ、拾うはず。 （当然、検索結果の件数が減ります） select t1.postUserName, t1.postTitle, t1.postText, t1.postDate, t2.userType as postUserType from bbsTable t1 inner join userTable t2 on t1.postUserName = t2.userName order by t1.postDate desc; 投稿データ[bbsTable]はすべて選択させたいなら select t1.postUserName, t1.postTitle, t1.postText, t1.postDate, t2.userType as postUserType from bbsTable t1 left join userTable t2 on t1.postUserName = t2.userName order by t1.postDate desc; 結果を確認する間は t2.userType as postUserType　の行を t2.userName, t2.userType as postUserType　としたほうがよさそう。
>モジュールからサーバにアクセスして、サーバ側のローカルファイルなどに書き込むなどして >ログを残す といった箇所は全く経験がなく検討がつきません。 Apacheサーバーを含めて主要なサーバーアプリはアクセスがあったページのログを自動で残す機能がありますから 単純にダミーのページを一つつくってクライアント側から起動時にバックエンドでそのページにアクセスするように しておけばサーバー側でアクセスログから時間と起動した端末のIPアドレスが割り出せます。 もう少し詳細な情報を自前のデータベースに取り込みたい場合はPHPなどで動的ページを作成しページへの アクセス時のURLの「?」以降にパラメータを記載してサーバー側で情報を受け取って処理する方法があります。 例） http://xxx.xxx.xxx.xxx/index.php?cliant=xxx&stat … ようするにクライアント側からは積極的にデータベースの更新には動かずページを見に行くだけに留め サーバー側でページを見に来た相手を記録してログとして残すわけです。 確実性という点では若干の不安が残りますがデータベースの接続、更新、切断の手間に比べれば手軽に実装できます。
SELECT文ですが、子カテゴリーの parent_id と親カテゴリーの category_id で自己結合するのが簡単かと。 なお、テーブルの行数が多いと性能的な問題が出てくるかも知れません。 例) ------------------------------------ SELECT cld.category_id AS child_category_id, cld.parent_id AS child_parent_id, cld.other_data AS child_other_data, ・ ・ ・ prt.category_id AS parent_category_id, prt.parent_id AS parent_parent_id, prt.other_data AS parent_other_data, ・ ・ ・ FROM category cld LEFT OUTER JOIN category prt ON cld.parent_id = prt.category_id WHERE cld.category_id = :category_id; ---------------------------------------- テーブル構造ですが、0～1の親を持つカテゴリー階層はツリー構造の一種ですから、下記の記事が参考になると思います。 http://www.geocities.jp/mickindex/database/db_tr … http://www.geocities.jp/mickindex/database/db_tr … http://gihyo.jp/dev/serial/01/sql_academy2/000601
＃１です。やっぱりMySQL.EXEへのパスが通ってないことが原因と思います。 以下、XAMPPをC:\直下にインストールしたものと仮定します。(C:\XAMPP\) MySQは、C:\XAMPP\MySQL以下に、MySQL.EXEはC:\XAMPP\MySQL\binにあるもとします。 １）環境変数PATHを確認してください。 　　コマンドプロンプトで　PATH　と入力して [Enter]を押下してください。 　　（このPATHにはC:\XAMPP\MySQL\binは含まれてないはず。） ２）環境変数PATHにC:\XAMPP\MySQL\binを追加してください。 　　マイコンピュータのプロパティ＞詳細設定の環境変数ボタンをクリック。 ３）ソステム環境変数をスクロールしてPathを探し、クリックしてから編集ボタンをクリックする。 ４）末尾に　;C:\XAMPP\MySQL\bin　を追加し、ＯＫボタンをクリックする。 ５）ＯＫボタンをクリックする。 ６）もう一回、ＯＫボタンをクリックする。 これでコマンドプロンプトで MySQLが実行できるはず。 ソースに記述してある　ユーザー名/パスワードでログインしてください。 ＰＨＰ入門のＷebページ探す際、「ＸＡＭＰＰ　ＭｙＳＱＬ　設定」で上記の記載があるはずです。
多分こちらの件と同様かと思われますがどうでしょうか？ MySQLの UNIQUEなINDEXには長さ767byteまでしか使えない件と対策 http://d.hatena.ne.jp/tanamon/20090930/1254332746 参考URL：http://d.hatena.ne.jp/tanamon/20090930/1254332746
SQLでは改行マークは文の区切りではないので普通に改行すればいいのでは？ create table hoge (id int,data varchar(100) default 'a b c'); insert into hoge(id) values(1),(2),(3); select * from hoge;
mysqlでは、データベース名に 「_」アンダースコアがあると、ワイルドカード扱いになるので、アンダースコアの手前に「\」バックスラッシュをいれてエスケープが必要です。 ワイルドカードにより同時に複数のデータベースを開こうとしていることになるので、mysql_select_db はエラーになってると思うのですけど。 mysql_select_dbの直後でも mysql_error() の出力をチェックしてみてください。
キーワード「mysql update」でGoogle検索してヒットする http://dev.mysql.com/ 公式サイトの次のリファレンスマニュアルを参照。 -------- MySQL バージョン 4.0.4 以降では、複数のテーブルに対する UPDATE 操作も実行可能です。 UPDATE items,month SET items.price=month.price WHERE items.id=month.id; （出典 http://dev.mysql.com/doc/refman/4.1/ja/update.html ） --------
CentOS5.xが現に稼動しており、CentOS6.xにマイグレーションしようとしているのですね。 CentOS5.xのphpMyAdminのインストール方法について特に明示はないようですが・・・ CentOS6.xをyumでインストールしているとの記載がありますので、同様にしてyumでインストールしたと推察します。 質問には、config.inc.phpの内容は明記されていますが、格納位置は明示されていません。 phpMyAdmin2では、config読み込みインスタンスは、 new PMA_Config('./config.inc.php') と、ハードコーディングしています。 これに対してphpMyAdmin-3.5.2では、間接指定となっています。 new PMA_Config(CONFIG_FILE); このCONFIG_FILEはどこで定義されているかと言うと、 libraries/vendor_config.php:define('CONFIG_DIR', '/etc/phpMyAdmin/'); libraries/vendor_config.php:define('CONFIG_FILE', CONFIG_DIR . 'config.inc.php'); という具合になっています。 従いまして、/usr/shere...ではなく /etc/phpMyAdmin/config.inc.php の内容をご確認ください。 ちなみに phppgadminは当初から /etc/phpPgAdmin においてあるので気が付かなかったのではないですか?
なんか勘違いしてませんか？ デフォルト値や設定を変えたからといって、すでに設定されているものは 変わりませんよ？ きちんとやるならdbを作るときに文字コードを意識してつくります。 CREATE DATABASE db_hoge DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci; またtableをつくるときにもテキスト系のカラムに文字コードを指定します CREATE TABLE db_hoge.tbl_fuga (id INT NOT NULL ,data VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_unicode_ci); もうすでにlatin1で設定されているカラムに対してはalterで変更します ALTER TABLE tbl_fuga CHANGE data data VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci
FooEditorならグループ置き換えの機能があるので<a href=○○>はそのまま置き換えることができます ただ、<a href="○○">と</a>を同時に置き換えることはできないので、2回に分けて実行する必要がありますが… 例（FooEditorの場合) 検索パターン：<a href="(?<foo>.+)"> 置き換えパターン：[url=$1]
＞＞mysql5.5.9 バージョンが・・・。 [mysqld] default-character-set=utf8 　　　　　↓ character-set-server=utf8
http://shain.blog.conextivo.com/2007/10/phppdosq … http://codezine.jp/article/detail/433 http://keicode.com/cgi/using-sqlite-in-php.php http://d.hatena.ne.jp/fatwebstudy/20120804/13440 … http://d.hatena.ne.jp/fatwebstudy/20120804/13440 … http://www.phppro.jp/school/security/vol3/1 http://gihyo.jp/dev/serial/01/php-security?start … http://www.ipa.go.jp/security/awareness/vendor/p … http://www.ipa.go.jp/security/awareness/vendor/p … 関連がありそうなものをいくつか紹介します 何か不明な点があれば補足をお願いします
回答というより補足なので、参考までに読んでください。 ＞もちろんさかのぼって修正ということもありえますね。 そうしたシステムもあるかと思いますが、事実の記録に基づいたシステムでは基本的にはありません。 （データが確定する処理が何段階もあるような場合は途中修正ができるものもあります） 事実の訂正も訂正のデータを入力することによって記録します。 銀行の取引でもそうなっていますよね？（実際に紙に記録した通帳の訂正はできないので） そうすることで、正確な事実の記録やデータ改竄の防止だけでなく、計算がシンプルになるというメリットもあります。
UNIONつまり集合演算子を使った場合、SELECTするカラム以外のソートはできません。 これは、MySQLに限った話ではなく、ANSI/ISO SQLそのものの仕様です。 postDate でソートするなら、SELECTするカラムに postDate が無くてはいけません。 （もちろんUNIONする全テーブルに無いとダメです） さて、ご質問に対しての回答は以上ですが、以下、Tritonn環境がないので、想像で書きます。 全文検索用のcommentIndex、これも各テーブルにあるものですよね？ だとしたら、ご質問の書き方だとこうなります。 table1→無条件に全表走査（遅い） table2→無条件に全表走査（遅い） table3→無条件に全表走査（遅い） table4→ここだけ全文検索（高速） 各テーブルから検索ワードで全文検索したいのであれば select text from table1 where match(commentIndex) against("検索ワード" in boolean mode) union all select comment from table2 where match(commentIndex) against("検索ワード" in boolean mode) union all select comment from table3 where match(commentIndex) against("検索ワード" in boolean mode) union all select comment from table4 where match(commentIndex) against("検索ワード" in boolean mode) にならないといけないと思います。 上記の書き方で初めて table1→全文検索（高速） table2→全文検索（高速） table3→全文検索（高速） table4→全文検索（高速） となるのでは？ 「それじゃsennaが4回も呼ばれるじゃないか」と思われるかもしれませんが、3回全表走査するよりは、よっぽど高速でしょう。 （各テーブルの件数にもよると思いますが） インラインビューを使えばsenna1回で書けますけど、せっかくの全文検索の意味がなくなる（却って劇遅になります）し、そもそも、インラインビューでsennaを使うと多分構文エラーになると思います。
>InnoDB: Error: auto-extending data file \xampp\mysql\data\ibdata1 is of a different size 設定ファイルの編集でも行ったのでしょうか？ エラーメッセージで検索すると、下記のページとか見つかります。 http://www.ilovex.co.jp/blog/system/projectandsy … innodb_data_file_pathの設定はどうなっているのでしょう？ あとは…xamppがインストールされているパーティションの容量は十分にあるでしょうか？ innodb_data_file_pathで設定しているサイズよりパーティションの空き容量が小さい…ということはないですか？
FULLTEXTでテーブルを構築しておけば、INSERTやUPDATEしたとしても自動でインデックスを作ってくれるはずです。 URL先の説明は検索の最小文字数を変更したので、REPAIR TABLE をしたというわけです。 なので、REPAIR TABLE を実行するのはこの1回だけです。 その後のインデックス作成はMySQLがやってくれます。
親テーブルitemのitemnoに適切なインデックスを設定するのが先
>>簡単にでもどういうふうに書けるか例を示していただけるとありがたいのですが。。。 んー。 じゃあこのあたりで。。。？ http://www.dbonline.jp/mysql/view/ http://dev.mysql.com/doc/refman/5.1/ja/create-vi … 作成したビューの中で、unionですべてくっつけておいてやれば、 そのビューに対してselectかけるだけで、全テーブルに対してselectを行ったことと一緒。に出来るようになりますね。 あんまりにもややこしいビューを作ろうとすると制約に引っかかったりとかしますが、今回のような内容ならば問題ないでしょう。
つまり、更新日時カラムではnullが一番大きいとみなすということなので、下記の順番でソートすればよいかと思います。 ORDER BY modified IS NULL DESC, modified DESC, created_at DESC 蛇足ですが、設計的にはトリッキーなSQLを書かないで済むようにやはり登録時には更新日時カラムにも登録日時カラムと同じ値を入れておくのが王道だと思います。
「VARCHAR」を「VARCHAR(必要最大文字数)」とします。
＞・Insert時、自動的に日時データを取得する ＞・Update時、日時データを自動更新しない datetime型にしてINSERT時にはNOW()を投入してやればよいのでは？ 基本的にタイムスタンプは更新日時をいれておくための フィールドですので、データが更新されるときに合わせて更新されるのが普通です。
(2)は以下の理由より、求めているものを抽出するSQLではないでしょうね。 ・外側のSQLで ryorihyo, meisaihyoを等結合していない。 ・IN句でサブクエリをしている。 INの中でmeisaihyoテーブルが利用されてデータが抽出されており、その 条件にマッチしたryoricodeテーブルのレコードを抽出するでしょうが、 そもそも等結合して抽出しているわけではないです。 あっさり言ってしまうと、『抽出条件は正しいかもしれないけど、結合条件に 誤りがある』ということです。 select * from ryoricode, meisaihyo これだけ試してみれば分かりいいですね。 テーブルを複数使ってるくせに正しく結合してないから、クロス結合になって 大量にレコードを抽出します。 http://www.confrage.com/oracle/oracle_sql/join/c …
MySQL 5.5.25がインストールされてました。 # いくらか前に試しに入れた模様。 >接続先がポート0番でいいのでしょうか？ 0でもよろしくやってくる…ようですな。 const char *sever ="localhost"; const char *user = "root"; const char *password = "********"; const char *database = "mysql"; unsigned int portnumber = 0; unsigned int num_fields; con = mysql_real_connect(mysql, sever, user, password, database, portnumber, NULL, 0); if(NULL==con) { printf( "SQLのオープンに失敗しました．\n" ); exit(1); } mysql_query( mysql, "select host,password from user"); result = mysql_store_result( mysql ); if(NULL != result) { num_fields = mysql_num_fields( result ); printf("fieldの数は%dです。",num_fields); } else { int ErrorNo = 0; char *error = NULL; ErrorNo = mysql_errno(mysql); error = (char*)mysql_error(mysql); printf("errno = %u, error = %s\n", errno, error); } で、一応の出力はありました。 mysql_query()が未実行だとmysql_store_result()の戻り値はNULL、ErrorNoは0、errorは空文字になっていました。 # errnoという名前は、標準Cライブラリとカブるので変更。 # VC++2010EEではコンパイルエラーになりましたし…。 mysql_query()で第2引数が空文字だとmysql_store_result()の戻り値はNULL、ErrorNoは0、errorは"Query was empty"でした。 # mysql_query( mysql, ""); の時。 http://dev.mysql.com/doc//refman/5.1/ja/mysql-st … >mysql_store_result()は結果セットが失敗した場合、ゼロポインターも戻します。mysql_error()が空でないストリングをを戻すか、mysql_errno()がゼロ以外を戻すか、mysql_field_count()がゼロを戻すかをチェックすることによって、エラーが起こったか否かをチェックすることができます。 とのコト。 クエリー発行していないのに結果を受け取ろうとする。 という、現状のコードが誤っているのかと。 >mysql.exe の 0x5b8a8f04 でハンドルされていない例外が発生しました: 0xC0000005: 場所 0x00000048 を読み込み中にアクセス違反が発生しました はNULLポインタアクセスによるものでしょう。 >試しにmysql.exeを直接起動してみるとやはり、エラーの画面が出ます。 こっちは原因不明ですが。 # どう起動したのか、どんなコマンド投入したのか、表示されたエラーがなんだったのか…とか不明ですし。
SQLで select host, db, user from mysql.db; を実行すればとりあえず、IPアドレス、DB、ユーザ名の関係は分かると思います。 SELECT,INSERT,UPDATE,DELETEなどの個々の権限はそれに関するフィールドを確認する必要があります。 後、テーブル単位に権限付与している場合はmysql.tables_priv表を見る必要があるかと。
'Using temporary'とUsing filesort'が使われているので、実表に対して大規模なソート（おそらくdt）処理が走っていることが確認できますね。これはview内でdistinctを使用しているせいだと思いますが、distinctをview内に定義せず、検索クエリー側で指定する訳にはいきませんか？
ごめんなさい元のSQLをコピっちゃいました こちらで select id from tb where tag IN(1002,1004) group by id having count(distinct tag)=2
>この方法も思いついて、DBの設定を変えて試したのですがダメでした。 たぶんやり方が間違えているので、以下参考に create table main (id int not null primary key,paidy int not null default 0); insert into main values(1,1),(2,1),(3,1); create table sub (id int not null primary key,totaly int,main_id int); insert into sub values(1,10,1),(2,20,1),(3,50,3); ※比較のため仮にmainテーブルのpaidyの値を1にしておく update main SET paidy = (select sum(totaly) from sub where main_id=1) where id=1; とすると、mainのid=1のpaidyは30になる update main SET paidy = (select sum(totaly) from sub where main_id=2) where id=2; すると、sum(totaly)はnullだが、paidyは0になる
>削除できません できない状況がわかりませんね。 エラーがでるならそれを書いてください。 普通はできます
ごめんなさい、書き方がわるかった where句につなげる場合は、ifはいらない たとえば3か4で始まってeを含むレコードはこう SELECT * FROM hoge WHERE val REGEXP'^[3３4４].*[eｅ]'; あとは諸条件をandでつなげばよい
PBXTですが、 https://launchpad.net/pbxt のページの右上からダウンロードできますよ。 ソースコードなので、コンパイルするのに MySQL 5.1 のソースコードが必要ですけど。
そのままうまくいくこともあるようですが、内部はかなり変わっているので、データをダンプして入れ直すことで検討されたほうが安全と思います。文字コードのパラメタなど変わっているのもあるので注意が必要です。 SQL文等は5.0の時に使っていたものを、ほぼそのまま使えます。
ファイルに書き出されたSQL文がすべてです。 つまりデータベースを削除する必要はありません（全テーブルをdropしてcreate tableで再作成します）。 >逆にdatやdumpファイルとしてバックアップしているもの 何を使って作成された「datやdump」でしょうか？
私はMacintosh環境については詳しくないので勘違いがあるかもしれませんのでご注意ください。 JDBC の URL のエンコーディングは、 cp932 ではなく MS932 か、 Windows-31J （Windows 日本語（Microsoft社のShift_JIS））を指定します。 （CP932 は IBM OS/2 日本語（IBM社のShift_JIS）の様です。CP932をもとに MS932 へと拡張された（NEC拡張文字の追加）のではと思います。） また、Java は Macintosh 日本語（Apple社のShift_JIS（X-MAC-JAPANESE））をサポートしていないようです。 ※誤った指定でもそれなりにうまく動作したのは、Windows 日本語環境ではデフォルトがMS932なので、CP932の指定が無視されたのではないかと思います。 http://docs.oracle.com/javase/7/docs/technotes/g … http://java.sun.com/javase/ja/6/docs/ja/technote … また、MySQLがサポートするCP932は、Windows-31JですのでApple社のShift_JISはサポートされていない様です。 http://dev.mysql.com/doc/refman/5.1/ja/charset-a … http://dev.mysql.com/doc/refman/5.1/ja/charset-c … 以上のことからMySQL Migration Toolkitを使用すると文字化けが発生したと考えられます。 よってSQL Server のデータを文字化けを回避できる他のツールで取得して、MySQLの側も文字コードの自動変換を回避するようにするとかになるかと思います。 [mysqld] character-set-server=cp932 skip-character-set-client-handshake なお、Apple社のShift_JISについてはこちらに http://ja.wikipedia.org/wiki/MacJapanese もあるように、Apple社らしい独創性（非互換性）を感じます。Microsoft社とは対照的ですね。
＞調べている内、「現在のDB設計やリレーションが本当に適切なのか(そもそもリレーション設定とは、DB構築時に行なうべきものか、SQLを走らせる度に構築するものか、など)」 　ＥＲ図の逆生成にかんしては、Ｎｏ．５　６で答えておられるとおり。 　ただ、この引用部分が目的なら、システムの要件をもう一度洗い直す必要があります。（要件そのものが、現在あるシステムが作られた時と変わっている可能性もありますけどね。） 　ちゃんと要件が精査され、ちゃんと設計が行われていれば、テーブル（エンティティー）間の関係は、設計中に全部現れているはずなんです。外部キー制約に表現できるリレーションのみならず、外部キーに表現できないリレーションも含めてです。 　さて、現在のＤＢ設計が正当かを評価しようと思ったら、当然ですが、あなた自身が、正しいと思うＥＲ図を要件から起こしておく必要があります。でないと、現状のＤＢが正しいかどうか判断できないですよね。（まぁ、自分で作ったＥＲ図が正しいかどうかという問題もありますが、これを言い出すと、「私は現在のシステムを評価する資格があるのか？」と問い出すことになりますので、横に置きます。） 　これが前提であれば、エンティティーや属性の意味（これは、あくまで実体の業務の上での意味です。）は、理解できているはずですから、現在のＤＢがあれば、基本的なＥＲ図は起こせます。 　でも、外部制約に現れないリレーションがどう表現されたかまでは見えません。このような関係を含め、このＤＢが正しく扱われているかは、ＳＱＬ・アプリケーション側の責任ですから、こればかりはアプリケーションを見ないと何ともならないです。
No.4 です。 そうでしたか、失礼しました。 直接の回答ではないのですが、mysqld以外の再起動の状況について見てみてはいかがでしょうか。httpdやメール関係のデーモンが、日曜日の4:02に再起動とか起きているか。 誰が誰に対して終了シグナルを飛ばしているのかを切り分けるのに参考になると思います。 ＃4:02という合致からも、ほぼ確実にその時刻のcronがトリガとなっているので、しらみつぶしに試してみるとか。もちろんコメントアウトして一週間待つ必要はなくて、そこで指定されているコマンド等を、ひとつひとつ、手動で起動、または（実行権限の問題が関係しそうなら）数分後に起動するcronに設定してみるなど。どれかの行がMySQLを落としてくれてると思います。。 解決するといいですね。
drop database データベース名; してから コマンドラインからmysql -u root -pパスワード < ダンプファイル名
変わります と言うより同じデータしかないデータベースでは性能測定はできません。 実データに近いデータ分布・データ内容で試験をすることが鉄則です（実データを使えればなおよし）
■コメント ★「コメント構文」と、「COMMENT オプション」の違い 「コメント構文」は、SQL文を書く上でのコメントの書き方。 処理の結果に対する影響はありません。 「COMMENT オプション」は、テーブルの情報の一つ。 処理の結果、テーブルの情報として書き込まれるため、 SHOW CREATE TABLE と SHOW FULL COLUMNS ステートメントによっていつでも表示できます。 例 create table table1 /* 日付と文字列各１個の定義をします */ (col1 date COMMENT '日付です', col2 VARCHAR(10) COMMENT '文字列です' ) SHOW CREATE TABLE と SHOW FULL COLUMNSをすると、 COMMENT の定義は出てくるけど、/*　・・・　*/の内容はでてこない。 ## 今手元にMySQLの環境がないので未検証です。 ■論理名 >・論理名は、内容を分かりやすくするために付ける日本語表記、と思っているのですが、 >そういう認識で合っているでしょうか？ いいと思います。 他には、すべて論理名で仕様を作成して実装直前で物理名と紐付けするような開発方法をすると ちょっと違うイメージになるかも。 （内容を分かりやすくするためではテーブル上の項目に同一論理名を複数つけても問題ないが、 　論理名で仕様を作成するなら、テーブル上の項目に同一論理名を複数つけてはいけない！） >・論理名は、どこに付けるのでしょうか？ >テーブル定義書などの設計書にだけ表記するのでしょうか？　 >それとも、SQLの中で「論理名」を付ける場所は決まっているのでしょうか？ 設計書だけでもＯＫ。 既述のコメントオプションやコメント構文のいづれの方法で各コメントに記載してもＯＫ。 開発のルールしだい。 >・MySQLのコメント内に、「論理名」を記述しても良いのでしょうか？ かまいませんし、一般にはコメントに論理名を記述することは少なくないです。 （手間がかかるので一切省くという場合もありますけど。） >・「論理名」を付与する場合、一般的に、どこに記述するのか？ >SQLの中でも記述するのか？ について、教えてください 仕様書だけの場合もあれば、SQLのコメントまでの場合もあれば、 テーブルのCommentオプションまで書く場合もあります。 私の場合は、仕様書だけのことが多いかな。 （内部設計書を見ると、SQLや関数はすべて知っている前提で 　何も考えなくてもSQLを含む、各言語のプログラムソースが書けるレベルにしているので・・・ 　というか、プログラムソースの一部分を見て、内部設計書のどこの部分かわからないソースには 　していないからというべきか。 　・・・項目名のつけ方が、tblACol1,tblAcol2,・・・ 　　 とかと決まっていたならコメントつけたほうがいいかも）
databaseソフトのつくりによると思うのではっきり断言する気はないが、 WHERE ～ ff = 'xxx' と書くとインデックスを使った検索になるが、 WHERE ～ ff IN('xxx') と書くとインデックスを使わないかも。 別にインデックスを使わないと極端に遅くなるのでない限り問題じゃないと思うけど。 （inの中が２個以上でも検索しようと考えていると思うので、 　インデックスは使わなくても大丈夫と考えていると思うけど。） 多分、inの中を可変にしたいのだが、１個になる場合は大丈夫か心配という質問と思うので、 そういう意味では問題ないと思います。 ## ところで、inの中が０個にはならないつくりにしているかな？ ## ・・・プログラム作るときにうっかりはまるパターンなので。（余計なおせっかいと自分でも思う）
https://www.google.co.jp/search?q=mysql%2Cgoogle …
ALLの意味はインデックスをつけないといけないということではなくて、オプティマイザがフルテーブルスキャンをしたほうが効率的と判断したということですね。 例えインデックスがあってもフルテーブルスキャンをしたほうが効率的と判断されれば使われません。 また、possible_keysは今回の条件で使えるインデックスがなかったよ、という意味です。（WHERE句で指定していて、レコードの大部分が絞りこめるような列にインデックスを貼って試してみましたか？） それと、Extraにfilesortが出ていますが、検索よりもソートの負荷の方が高いかもですよ。ケースによってはORDERBYを外してプログラムで処理した方が速いケースもあります。 （今回の場合は件数が少ないので大した違いはないでしょうが。） しかし、データが最大で数百件程度ならな、それほどムキになって現在の実行時間を短縮する意味もないような気がします。 （現在の時間が半分になったとしても体感ではわからないレベルでしょう）
　A5:SQL Mk-2作者です。 　お使いの環境でレンタルサーバーのMySQLに接続することは可能と思います。 　この場合、SSHポートフォワーディングはSSHトンネルとそれほど区別して考える必要はないかと思います。どちらかというと、SSHポートフォワーディングは技術・手法全体をさし、SSHトンネルはそれで作成された暗号化された通信経路のことを指す気がします。 　SSHポートフォワーディングできるツールがあれば、基本的に http://www.wind.sannet.ne.jp/m_matsu/developer/a … の方法を使って、接続することができるはずです。もちろん、Poderosaも、PortForwarding.exeを用いてSSHポートフォワーディングできます（SSHトンネルを作成できます）。 　ちなみに、A5:SQL Mk-2の次期バージョンでは、単体で（CygwinやPoderosaを使わず）SSHトンネルを作成し、より簡単にSSHトンネル経由の接続ができるようになります。ベータ版で実装していますので、こちらもお試しいただけるとありがたいです。 http://www.wind.sannet.ne.jp/m_matsu/developer/a … SSHトンネル経由でMySQLに接続するのに必要な情報（Version 2.8.0 beta 13） 「データベースの内容を登録 -MySQL (直接接続)」ダイアログ 　「基本」タブ 　　ホスト名：localhost -- 接続先ホスト（レンタルサーバー）と、DBサーバーが同一の場合は、 　　　　　　　　　　　　　　　　　localhostを指定してください。 　　　　　　　　　　　　　　　　　異なる場合は、接続先ホスト（レンタルサーバー）から見た、 　　　　　　　　　　　　　　　　　DBサーバーのホスト名またはIPアドレスを指定してください。 　　ポート番号：3306 -- デフォルトなら、3306ですが、異なる場合は変更してください。 　　ユーザーID：（ご自身のユーザーID） 　　パスワード：（ご自身のパスワード） 　「SSH2トンネル」タブ 　　SSH2ホスト名：レンタルサーバーのホスト名またはIPアドレス　　 　　ポート番号：22 -- 異なる場合は変更してください 　　パスワード認証・鍵ファイル認証…その他の項目：認証に必要な情報を入力してください 　　　（もし鍵ファイル認証がなんのことかわからない場合は、おそらくパスワード認証です） 参考URL：http://www.wind.sannet.ne.jp/m_matsu/developer/a …
IDが変わったらまずいでしょ 削除したら抜け番にするのが妥当
DBの利用をお勧めするポイントは大きく３つ (1)検索性・・・速い、単純 CSVデータからの抽出は基本的に毎回全データを読むのでオーバーヘッドが大きい データが膨大または検索条件が複雑な場合、DBを使う方が圧倒的にはやい さらに単にデータを抜き出すのではなく集計をする場合など雲泥の差 条件適合もSQLは単純かつ明確だが、プログラムでやるには限界がある (2)堅牢性・・・正しい、壊れにくい CSVファイルでのデータ管理はデータの整合性がとりづらい またCSVファイルはロックをしても読み書きのタイミングによって破損がつきもの とくにデータを読みながら更新する場合などCSVは使えない (3)メンテナンス・・・楽 DBはデータ更新が楽 データにさまざまな制約をかけたりできる デメリットももちろん多いですね なにしろ覚えるまでがめんどくさい、システム構築がめんどくさい 導入しても適切な設定をしらないと期待ほど速くならない（つまりさらに勉強が必要） DBのサービスを受けるのにISPの制限がある、少しくらいならCSVの方が軽い、 インジェクションなど落とし穴もおおい それらのデメリットを全てクリアしてでもDB導入による効果は高いです
前提として常にDATE1<=DATE2であるという条件が必要です WHERE CURDATE() BETWEEN DATE1 AND DATE2 AND FLG=0
できます。 簡単で申し訳ありません。
「JOIN `u1`」の部分を「(SELECT `uid` FROM `u1`) `u1`」という具合に「z2カラム」を除いた列を取得するSQLにすれば可能ですね。 SQLを書く代わりに「z2カラム」を除いた列を取得できるu1テーブルのビューを作っておいてもよいでしょう。
変換テーブルをつくっておいて処理するしかないですね もう少し突っ込んだところまでやりたいのだと 「シソーラス」と「全文検索」の組合せなど結構めんどくさい話になります。 http://ja.wikipedia.org/wiki/%E3%82%B7%E3%82%BD% …
こんにちは。 CREATE TABLE aliens_abduction ( last_name VARCHAR(30), first_name VARCHAR(30), when_it_happened VARCHAR(30), how_long VARCHAR(30), how_many VARCHAR(30), alien_description VARCHAR(100), what_they_did VARCHAR(100), fang_spotted VARCHAR(10), other VARCHAR(100), email VARCHAR(50) ); が正しいです。 エラーメッセージで１２行目付近のエラーとわかります。 email VARCHAR(50), カンマが余計です。 テキストと見比べてみてください。 >このテキストはMySQL5.5が出る前の2010年3月に出版されたものなのですが、それが原因でしょうか？ そこまで差は出ません。
もとの質問内容がたぶんSQLの特性を理解できないまま left joinの多重結合しているので、その流れに引っ張られたのだろうけど #2はオーバーヘッドが大きすぎるのでやめた方がいい
>空いた番号5～10を利用するのは適切でしょうか？ 削除した場合空けておくのが常套です。 もっといえば、データの削除はせずに削除フラグをたてて消したように 見せるという運用が普通です。 >※ID番号を隙間なく、埋めていきたい 上記を踏まえたうえでどうしても最後の番号の次のデータから埋めていきたい という希望があるならこうしてください ALTER table テーブル auto_increment=1
テーブルの前に接頭辞などをつければ、データベースは１つで大丈夫です。 ですが、複数のアプリを入れると、テーブルがやたらと多くなり見づらいと思いますので、 データベースが複数使える所がいいと思います。 レンタルサーバーによっては、複数設置可能な所も多くありますので、そちらを検討されればいいかと思います。 ご参考までにですが、私が使ってるレオサーバーは、データベースが複数設置できますので、WordPress、EC-CUBEなどをいくつもインストールしてみています。 参考URL：http://www.leosv.jp/
>後ろから4行分はデータが入りましたが残りは更新されません。 ゴメンなさい、意味がわからない 新規でつくったテーブルなのになんで更新がされるの？ すでにあるテーブルを更新する場合は replace createtable select id,a1,c3,b2,a3,a2,b1,c2,b3,c1 from tableA inner join tableB using(id) inner join tableC using(id); みたいに書いてみてください
そういうのは書き方があります。 //準備 create table hoge (id int,sub_key int,item_id int); insert into hoge values (1,1,3),(2,1,4),(3,1,5), (4,2,3),(5,2,4), (6,3,3),(7,3,3),(8,3,4),(9,3,4), (10,4,3),(11,4,4),(12,4,4),(13,4,5),(14,4,6); さてここで検証するとsub_key=1は合致するのでOK、同2は2個しかないのでNG、 同3は見た目上4個あるけどユニークなものが2個しかないのでNG、 同4はかぶってたり余計なデータがあるけど合致するのでOK //表示 select sub_key from hoge where item_id in (3,4,5) group by sub_key having count(distinct item_id)=3
5桁に限定して良いならchar(5)、少しでも省略したいなら int(5) のunsigned zerofillをつかう
まずC2の型によってやりかたがことなります もしC2が文字列型であればこんな感じ select C1,group_concat(C2 separator '') AS C2 from テーブルB で、テーブルAとテーブルBをどうつなげたいのか書いていないので そこは自力でやってください
UPDATE テーブル SET 更新日時フィールド=now(),作成日時フィールド=now() じゃだめなの？
PHP myadminの　SQLの欄にトリガの原文を入力すれば対応できます。 入力後、 同じくSQLの欄にて　SHOW TRIGGERS で設定できたか確認してください。
SQLの基本がたぶんわかってないんだろうなぁ・・・という結合です ＞※0002に関しては、テーブル２の方がデータ数が多いため の箇所はロジックが破綻しているので、表示できるとしても「NULL」です 無理すれば一発でできないことはないですが、テンポラリを作りながらやると解りやすいかも。 //準備 create table テーブル1(日付 date,品番 varchar(10),管理番号 varchar(10),数 int,unique key (日付,管理番号,品番)); insert into テーブル1 values('2012-06-12','A987','0001',500),('2012-06-14','A987','0001',300),('2012-06-16','A987','0001',400),('2012-06-18','A987','0001',800),('2012-06-12','A987','0002',750),('2012-06-12','A987','0003',540),('2012-06-14','A987','0003',740),('2012-06-16','A987','0003',840),('2012-06-18','A987','0003',240),('2012-06-20','A987','0003',640); create table テーブル2(日付 date,品番 varchar(10),管理番号 varchar(10),使用数 int,unique key (日付,管理番号,品番)); insert into テーブル2 values('2012-7-10','A987','0001',160),('2012-7-11','A987','0001',260),('2012-7-10','A987','0002',220),('2012-7-12','A987','0002',320),('2012-7-20','A987','0003',530),('2012-7-22','A987','0003',430),('2012-7-24','A987','0003',830); //抽出SQL create temporary table temp_t1 select (select count(*) +1 from テーブル1 AS t1b where t1a.日付 > t1b.日付 and t1a.管理番号=t1b.管理番号 and t1a.品番=t1b.品番) AS RANK,日付,品番,管理番号,数 FROM テーブル1 AS t1a; create temporary table temp_t2 select (select count(*) +1 from テーブル2 AS t2b where t2a.日付 > t2b.日付 and t2a.管理番号=t2b.管理番号 and t2a.品番=t2b.品番) AS RANK,日付,品番,管理番号,使用数 FROM テーブル2 AS t2a; create temporary table temp_t3 select RANK,管理番号,品番 from temp_t1 union select RANK,管理番号,品番 from temp_t2; //表示部分 select temp_t1.日付 ,temp_t3.品番 ,temp_t3.管理番号 ,coalesce(数,0) as 数 ,coalesce(使用数,0) as 使用数 from temp_t3 left join temp_t1 on temp_t3.RANK=temp_t1.RANK and temp_t3.管理番号=temp_t1.管理番号 and temp_t3.品番=temp_t1.品番 left join temp_t2 on temp_t3.RANK=temp_t2.RANK and temp_t3.管理番号=temp_t2.管理番号 and temp_t3.品番=temp_t2.品番 order by temp_t3.管理番号,temp_t3.RANK
とりあえず (1)phpMyAdmin上で所定のテーブルの照合順序をutf8_unicode_ciあたりにしておく (2)文字列の入っているカラムの照合順序を同様に調整する 登録させているデータがEUCならujis_japanese_ciとかになるかも・・・ sjis系は問題外なので省略
mysqlhotcopy 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/mysqlhotc …
削除したものがロールバックできなくても構わないのであれば、「TRUNCATE TABLE table_name」で素早く消すことができます。 参考 http://mysql.deikou.com/pages/000067.html http://dev.mysql.com/doc/refman/5.1/ja/truncate. …
おそらくTEXT型のせいでカラム数が若干少なくなっているかと思います。 MySQLのサイズ計算は実際は複雑で詳細は下記をご覧頂き、確認されてはいかがでしょうか。 しかしデータ型を多少変更したことろで限度は2千数百といったところだと思います。 http://dev.mysql.com/doc/refman/5.5/en/column-co … で、やはり現実的にはテーブルを垂直分割するしかないかなと思います。3000カラムでしたら1500カラムの2テーブル、あるいは1000カラムの３テーブルあたりに分けてパフォーマスを見られてはいかがでしょう。（もちろんデータを入れた際にレコード長をオーバーしないかどうかも含めて）
これ、MySQL以外ではサブクエリでできるSQLがMySQLでできないからって質問ですよね？ （サブクエリを多用しなければならない設計の場合、MySQLはやりにくいと思います） あと、「ID1が１のValueに「卒業生」と入れたいのです。 」は「ID2が１のValueに」ではないですか？ ID１は同一なはずなので。。。 まぁ、この解釈が多少間違っていても直せる範囲だと思います。 update student a, (select ID1 from student where ID2 = 2 and Value = '10期生') b set a.Value = '卒業生' where a.ID1 = b.ID1 and a.ID2 = 1
既存データベースの文字コード情報が壊れたのかもしれません。 ・postfixの自動起動を止める。 この状態で http://kzworks.at.webry.info/200903/article_14.h … を参考に ・my.cnfのmysqldとmysqlセクションのCHARACTER SETがutf8になっているか確認。 ・ALTER DATABASE でデータベースのCHARACTER SETをutf8に変更を試みてはどうでしょうか。
echoのところが明らかにおかしい またINSERT文を発行するなら文字列はクォーテーションでかこってね file_get_contents()で"7203,トヨタ,3080"が得られたとした場合の サンプルを書いておきます <?php mysql_connect("localhost","root","hogehoge"); //$stock = file_get_contents('http://hoge.jp/data.php?id=7203'); $stock = "7203,トヨタ,3080"; $stock = mysql_real_escape_string($stock); $stock = "'".str_replace(",","','",$stock)."'"; $sql ="INSERT INTO table (id,company,stock_price)"; $sql.=" values(".$stock.")"; print $sql; ?>
直接の回答ではないですが、アクセスしていないDBがメモリを大量に食っているとは 思えませんが？
php-mysql を Install すると解決すると思います。
password()、md5()、sha1()など用意されています
ちょっとやってみました rand()を使って上がる率を調整します。 //準備 create table aaa (id int not null unique key); insert into aaa values(1); //この2行を、必要な回数実行 SET @NUM=0,@MIN=1,@MAX=10; INSERT INTO aaa SELECT (@NUM:=@NUM+FLOOR(@MIN + (RAND() * (@MAX-@MIN+1))))+a.id FROM aaa inner join (select max(id) as id from aaa) as a on 1
いまいち構造がわからないのですが whereじゃなくて連結の条件にしてみては？ SELECT u.user_email, m.meta_value FROM wp_users AS u LEFT JOIN wp_usermeta AS m ON u.ID = m.user_id and m.meta_key = 'user_name'
おそらくajaxの案件ですね 参考URL：http://oshiete.goo.ne.jp/category/973/
基本的な構文しか使っていないと思いますが？ SELECT USER,count(*) AS COUNT FROM HOGE GROUP BY USER ORDER BY COUNT DESC
なるほど、確かにおかしいですね ちなみにphpMyAdminから「show tables」を実行すればみえますか？
こうしてみてください SELECT ID,GROUP_CONCAT(名前 SEPARATOR ',') FROM テーブル GROUP BY ID HAVING ID IN (SELECT ID FROM テーブル WHERE name='SQL')
なにでアップロードしていますか？ ・コンソールからmysql < ファイル ・ログインしてload data ・phpMyAdminでコマンド入力 ・phpMyAdminでファイルロード ・独自のプログラムでsqlを発行？ ・そのた またログインするユーザーとアクセスするDB、テーブルとの 整合性は確保していますか？
mroongaエンジンを試す環境がないためなんともいえませんが 別のエンジンで試してみてはどうでしょう？ 別のエンジンで問題ないなら場合によってはmroongaエンジンの 何らかの特性や制限の可能性もあるので、そちらの専門サイトで 仕様を確認してみてください
substring(項目Ａ, locate('\"age\" : ',項目Ａ, locate('],\r\n"BBB" :\r\n{\r\nCol1,',項目Ａ)+length('],\r\n"BBB" :\r\n{\r\nCol1,')-1))+8, locate(',',項目Ａ, locate('\"age\" : ',項目Ａ, locate('],\r\n"BBB" :\r\n{\r\nCol1,',項目Ａ)+length('],\r\n"BBB" :\r\n{\r\nCol1,')-1))+8 ) - locate('],\r\n"BBB" :\r\n{\r\nCol1,',項目Ａ)+length('],\r\n"BBB" :\r\n{\r\nCol1,')-1))+8 ) という感じですか。（マニュアル見ただけ。未検証。） ・・・はっきり言って、訳が分らないselect文になるのでお薦めじゃないです。 \r\nは、\rだけかも。 要は改行のときに入る文字のエスケープシーケンス。 "BBB" : { "id" : 2, "age" : , } は"age"未入力と言った仕様があるなら未対応。 （さらに輪をかけてややこしくすればできるとは思いますが。）
こんにちは。 SQLの構成がおかしいです。 $sqlを出力すると select "a_type" from table where member_id="a" というものが生成されています。 $Fieldを"でくくっては返ってくる値は常にa_typeになってしまいます。 $sql = 'select '.$Field.' from table where member_id = "'.$id.'"'; に修正してみてください。
ALTER TABLE `テーブル` ORDER BY `列１` ASC としておくと、可能な限りソートしてくれますが 確実性をもとめるなら表示するときにorder byしてください
プログラムをデプロイするなら、クエリを出すプログラムとデータベースサーバが同一なわけですから、サーバ・クライアント間の通信速度は関係ないはずです。 それとも、ローカルPCから、リモートサーバのデータベースにクエリを出すということなのでしょうか？ それなら通信速度が影響する可能性はあります。 ＃ローカルPCとレンタルサーバでの性能差による処理速度の違いはあるでしょうね。 ＃特に共有サーバは未知数ですね。
最初のうちは、データベース管理システムに付属するインタプリタを使う可能性が高いと思います。SQL文を一文ずつ入力しながら、順にその結果を確かめることもできるので。 開発方法は判明するのを待つのが賢明だと思います。プログラムからの問い合わせは、どのデータベース管理システムを使うかによって方法が変わってしまいますから。 それよりもデータベースの用語について、なじみの無い概念に慣れておいた方がよいかもしれません。状況によってTableと言ったり、Relationと言ったりまぎらわしいですし。恐らくSQLでは関係代数、トランザクション処理ではロールバックやデッドロックなど、データベースの設計では正規化などが出てくるでしょう。 参考URL：http://en.wikipedia.org/wiki/Relational_database …
>・トランザクションが使えない ってどういうことかというと 例えば伝票入力の画面で、見出し部と明細（複数行）を一度にInsertしようとしたときに Insert Into TableA(Key1,Data1) values('1','見出し部'); Insert Into TableB(Key1,Key2,Data2) values('1',01,'明細1行目'); Insert Into TableB(Key1,Key2,Data2) values('1',02,'明細2行目'); Insert Into TableB(Key1,Key2,Data2) values('1',03,'明細3行目'); と連続でInsertを実行しますが、例えば２行目でキー重複エラーがあったときに 見出しと明細の1行目のデータが残ってしまいます。 トランザクションを使うと、見出しと明細の1行目のデータもInsertされていない状態に戻す（Rollback）ことができます。 ※論理的なエラーの場合も物理的なエラー（ハードエラー等）の場合も同様です。 ⇒トランザクションを使っていないならあまり気にする必要はないですが、 　（使わないとエラーのときに困るのですが。）
カラム・フィールド・レコードの意味を間違っています。 EXCELで言う「カラム（列）」＝「フィールド」です。
データベースの選択をしていないのが気になります。 ただし、「mysql_select_db」は非推奨のようですね。 http://www.php.net/manual/ja/function.mysql-sele …
MySQLの4.0系はメインサポートからはずれているし、しかも 一番評判のわるかったバージョンなのでお勧めできません （サブクエリもつかえない？） もう少し上のバージョンならなんとかなるかも知れませんが・・・
補足について MyISAMでもInnoDBでもどちらでもよろしいと思います。このようなシンプルな構造のデータベースだからトランザクションがどうしても必要というわけではないだろうということと、MySQLのバージョンの指定がなかったので、MyISAMにしておいたほうが、問題がないだろうということです。 >　ID_SPECIESだけにインデックスをつける インデックスは付けすぎるとパフォーマンスが低下します。 ID_SPECIESはテーブルを結合するフィールドだからです。 それ以外のフィールドへのインデックスは、実際にデータが入ってから、遅いクエリが発生する場合にチューニングすることで使用するかもしれない選択肢としてとっておきます。 はじめから決め打ちはしません。
＞$sdate=$_POST['sdate']; ＞$edate=$_POST['edate']; ＞$sql='select*from question_tb where purchase_date>="'.$sdate.'" and purchase_date<="'.$edate.'"'; print $sql; とすれば何がおこなわれているかわかるのでは？ ちなみにPOSTで受け取ったデータをそのままSQLに投げるのはNGですので 適切なエスケープ処理が必要です $sql ='select * from question_tb where purchase_date>='; $sql.='"'.mysql_real_escape_string($sdate).'"'; $sql.='" and purchase_date<=' $sql.='"'.mysql_real_escape_string($edate).'"'; ちなみに日付の間をとるならpurchase_date between sdate and edate 的な書き方の方が一般的です
>Ａという項目でユーザーが何個チェックをして、Ｂという項目で何個チェックするかは毎回変わると思うのです。 だから・・・ ユーザーがチェックした数をカウントするだけじゃないの？ それができないなら、ユーザーの要求でデータの絞り込みなんてできないでしょ
エンジンをMyISAMにしてインデックスをはればidからヒットさせるだけの 単純な検索なら気になる遅さにはならないと思います 複雑で速さが必要ならオラクルなど商用のDBをつかってください
id名をそれぞれ変えたのですか？ 「where ccc.id = 100」と書けばどの属性か特定できたのに。 表名・列名を``で括っていたり，join句を()で括っていたり， 変わった書き方をする人だなあと思っていたのですけれど， そうしなければならない明確な意図は別にないのかな， という印象を受けました。 失礼かとは思いますが， 全部のcolumnに索引がついているとか，データベースが正規化済とか， それもいま一度確認してみた方がよさそうに感じました。 ずるずると回答＆補足が続くのは好みではないので， 私からの回答はこれで止めます。 格納データなど確認した上でそれでもトラブルが解消できないようであれば，また別の質問をたててみてください。
逆引用符は列名等を使用する場合に使います、文字列は引用符で囲みます。
＞phpmyadminでselect version()を実行すると、4.1.22-Maxという文字が出てきました。 ああなるほど、じゃMySQLサーバーが4.1なのでしょうね 現在4.1はすでにメインサポートからはずれほぼ終了している状態なので、 今後このようなサイトで質問するときにも、大きく内容がぶれる可能性が高いです。 ＞phpは5.2です。 こちらも微妙に古いですね 現在安定版が5.3.13で、5.4系も5.4.3まできています ＞レンタルサーバなのですがアップデートはできるのですか？ レンタルサーバー自体のポリシーによるのでなんともいえません アップデートのプランがあるかサポートに確認してみてください
ANO.3ですが。 >（データ上にコードで持っていて、in句の中もコードを指定するほうが早いですが。） コードを持っていく、指定するとは何ですか？ 物件テーブル上は、 101とか102とかコードでもっていて 住所マスタで、 101,'東京都千代田区' ・・・ を別に持つ。 画面は住所マスタから選択肢を表示し、 チェックされたら in('101','102'・・・) のようにコードでin句を組み立てるという意図でした。 >方法２は指定する項目が30あれば >00100010100011100000001100100 >といったデータを格納するということですね。 その通りです。 但し、全部1つにする必要はなく、条件の分類毎に１項目作ればいいと思います。 例えば、先ほどの回答では、「収納」が2桁、「・・・」がn桁・・・という感じです。 何も指定されていなければ、select文のwhere句の中に入れる必要ないので。 方法２の下に 「（ビットマップインデックスが使えるなら、同じような考え方で、検索はより早くなります）」 をつけたのは誤解を招いたかもしれません。 方法３のやり方で、方法２のような検索処理をしてくれるというイメージが近いです。 MySQLにはないようですのであまり書く意味が無かったですが。
UPDATE Salary SET Amount=Amount+5000,PAYDATE='2007-12-31' WHERE EmployeeID IN(SELECT EmployeeID FROM Employees WHERE BloodType='A') です。
ANO.2です。 ＞ただ、店舗や商品の数が今後も増えていくのですが、その都度、インデックスを張りなおさないといけないのでしょうか。 インデックスは、店舗や商品を増やすたびに更新されます。 要は、インデックスを作ると、テーブルに対する追加・更新・削除のときに、 インデックスも更新されるので、テーブルに対する追加・更新・削除が遅くなる。 （但し、今回みたいに１種類や２種類増やしたところで、人間の目では遅くなったことはわからないでしょう。） そのかわりに検索処理のときにインデックスを使って検索するので非常に早くなる。 ということです。 スロークエリログの件は・・・私はちょっとわからないです。 （スロークエリログを使ったことがないので。） 他の方が回答してくれるかも。。。
この手のDBは実は奥が深い (1)楽曲名やアーティスト名がまったく同じ場合がある (2)同じ楽曲であってもカバーなどアーティストが１人だけだとは限らない (3)同じ人であってもアーティスト名が一つだけだとは限らない (4)季節がない場合もあるし、四季をとおしたうたもある
select * from member where birthday between curdate()-interval @age:=36 year and curdate()-interval (@age -1) year - interval 1 day みたいなかんじで
>方法はありませんでしょうか。 であれば、MySQL側でなんとかなるもんではないのでPerl板に 質問投げてみてはどうでしょう？ http://oshiete.goo.ne.jp/category/255/
＞「基礎からのMySQL改訂版」という書籍で学習しており、 ＞参考書もphpMyAdminベースのものに買い直して方がよろしいですかね。 同書の詳細は存じませんので大きなことは言えませんが、 往々にして参考書を買い直す必要はないと思います。 サンプルなどで発行するSQL文をphpMyAdminに張り付ければ（もしくは手で書く） 戻ってくるデータの見え方が違うだけなので、ざっくり読み替えれば 問題ないはずです。 ただ、他の方への補足を見る限り、WindowsにMySQLをインストールして そこにローカルで接続するということですね？ であればシステムの構築のところは統合環境のxamppなどで環境を作った方が よいかもしれないですね
phpMyAdminは、入っていますか？ 入っているなら、そちらからダンプファイルが作れるかと思います。 あとは、他の方も書かれていますが、PHPから行うとかですかね。 system関数や、exec関数などを使えば可能です。 私の場合、PHPから exec( mysqldump -c -u xxxxxxx -pxxxxxxx xxxxxxx | gzip > /home/ユーザー/backup/zzzzz.dump.gz", $output, $ret ); の様に実行させています。
一日あたり5万件のデータが1年つづくと1800万件 その生データを抽出集計するのはほぼ現実的ではないですね 経験的に1000万件をこえると集計付加は相当でてくると思います 回答とすればどちらも単純なシステムではまともなレスポンスは 期待ないでしょう 逆になんらかの中間テーブルをつかって処理すれば データは数百～数千分の一に圧縮できるでしょうから インデックスをうまくつかえばどちらのシステムでもそうかわらないかとｋ 極端に多いデータを場合は、商用のデータベースとＩＴコンサルを 活用してください（最近流行のビッグデータ？）
Oracleの文法では、 文字列型の連結に || を使います（Concatもあるけど）。 ⇒CONCAT(A,B)と　A || B が同じ結果となる。 ## 選んだ参考書がOracle用だとかないですか？ MySQLは他の方が書いておられるように　CONCATを使う必要があるようです。 ## ちなみに、SQL Serverは、A + B（Concatもあるけど） ## CONCATはほぼ共通ですが、他はデータベースソフトによってばらばらとなっている ## 要素の一つでした。
100.0の値が入っているカラム名がcolとします。 select case when col % 1 = 0 then truncate(col,0) else col end;
これはいかがですか。 select a.type_id,a.member_id,a.date,b.name, (SELECT count(*) FROM tableA c WHERE c.date<a.date and c.type_id=a.type_id)+1 as rank from tableA a, tableB b where a.type_id=b.type_id having rank<=3 order by a.type_id desc, rank asc ;
＞出来ましたらテーブルを分割せずに求められた方がありがたいです。 正規化ってわかります？ このまま運用したら早晩破綻すると思いますよ どうしてもというならこんな感じで //準備 create table person (部署名 varchar(30),部署ID int,社員ID int,社員名 varchar(30)); insert into person values('営業部',1,123,'太郎'),('営業部',1,223,'花子'),('経理部',2,256,'二郎'),('経理部',2,289,'一郎'),('庶務部',3,127,'景子'),('庶務部',3,40,'里見'),('庶務部',3,20,'三郎'); //表示 select 部署名,部署ID,社員ID,社員名 AS 所属者 from person //集計 select 部署名,部署ID,group_concat(cast(社員ID as char(20)) order by 社員ID) as 社員ID,group_concat(社員名 order by 社員ID) AS 所属者 from person group by 部署ID order by 部署ID
$sql2 = 'SELECT kid,id,name,day,tday FROM em WHERE kid='.$_SESSION["kid"].' AND (name,day) IN (SELECT name,MAX(day) FROM em GROUP BY name)'; ただしMAX値にあたるnameが2つ以上あれば結局2行以上表示されますが
Wordpressにはそれほど詳しくないですが、 ファイルのFTPの落とすのと上げるの、DBのデータのエクスポート、インポートで対応可能と認識しました。 上記ですけど、このコマンドをSQLとして発行してるのですよね。 私の知る限り、これはSQLでは内容に見えます。 また、エラーメッセージもそのように出てます、文法がおかしいと。 まず、何をやりたいのかを明確にして、そのための情報を調べたほうが良いのではないでしょうか。
特定物件に対して同じ沿線がかぶっているように見受けられますが そういう仕様でよいのですよね？ であればこんな風ですかねぇ create table ensen (id int not null primary key,ensen1 int null,ensen2 int null,ensen3 int null); insert into ensen values(1,1,1,2),(2,1,2,2),(3,1,1,2),(4,3,4,5),(5,4,null,null),(6,5,6,null); select ensen_all ,count(*) from (select ensen1 as ensen_all from ensen where ensen1 is not null union all select ensen2 from ensen where ensen2 is not null union all select ensen3 from ensen where ensen3 is not null ) as sub group by ensen_all ただ、実際にはensen1～ensen3を別フィールドで管理しないで正規化処理をしておけば もっとデータ構造は簡単になります
＞何が悪かったのでしょうか、ご教示ください。 これはかなりダメダメですね (1)もともとMySQLはユーザー変数の評価順序は定義されていないため、 表記のような書き方はNGです 「ステートメントの一部でユーザー変数値を割り当てないことおよび同一ステートメント内の他部分で同じ変数を使用しないこと」 という原則があります。 http://dev.mysql.com/doc/refman/5.1-olh/ja/user- … (2)仮に評価が順序立ててされたとしても、SELECT で代入されるのを まってからだとWHEREで条件を絞り込む時点では未設定ですよね ロジック自体が変です (3)GROUP BY をしないSQL文でMAXをとっていますがなんの最大値を とりたいのか意味がわかりません 特定条件の購入日を絞り込みたいという意図があるのはなんとなくわかりますので 命題が明確になれば近しいことはできそうな気がしますが、その場合も サブクエリでの処理になるとおもいます。 (4)MAXのとりかたもせめて購入日のMAXをとって2年たした方がいいですね
こんばんは。 私の場合、もっていたビデオ編集ソフト（movie writer6.0）に、スライドショーを作ってＤＶＤに焼く機能がありました。 ネットで検索しても、スライドショウを作成できるフリーソフトがけっこうでてきますが、説明がいまいち分かりにくい場合があります。 もし、ビデオ編集ソフトの類をお持ちでしたら、取扱説明書を読み返されることをお薦めします。
#2ですが、よくよく考えてみたらこういうこと？ create table 購買商品リスト (id int,商品id int,購入日 date); insert into 購買商品リスト values(1,1,'2012/01/01'),(2,1,'2012/07/01'),(3,2,'2012/04/01'),(4,2,'2012/10/01'); create table 商品リスト (商品id int,商品名 varchar(30),耐久年数 int); insert into 商品リスト values(1,'ストーブA',2),(2,'こたつB',5); これに対して SELECT 商品名,購入日 ,購入日+INTERVAL 耐久年数 YEAR AS 壊れる日 FROM 購買商品リスト as t1 INNER JOIN 商品リスト as t2 on t1.商品id=t2.商品id;
どうやら改行文字の問題のように見受けられます。 記載のコードを修正するならば、 > SELECT REPLACE(start_position, ',', '\r') FROM test_table INTO OUTFILE 'start.txt'; の部分を SELECT REPLACE( REPLACE( REPLACE( start_position, char(13), ''),char(10),''),',','\r') FROM test_table INTO OUTFILE 'start.txt'; として改行文字を取り除いてみてください。
net::ERR_CONNECTION_RESETで検索したら対策も含めて情報が色々と出てきました。 ここは技術者向なので、質問者様も技術者である前提でお伺いしたいです。 自分である程度は調べて、それでも分からないってことですか？ 要するに検索結果には該当する情報がなかったってことですか？ もしそうであれば、もっと情報を提示していただいたほうが良いかと思います。 参考URL：https://www.google.co.jp/search?sugexp=chrome,mo …
「データベースに詳しい方！一つのフィールドに複数の情報を持たせたいです。」 　その複数の情報を１つの文字列で表現することは、技術的には可能です。例えば、出生地と現住所の都道府県名を１つに入れるには、そのまま文字列で「千葉県東京都」と入れても良いし、コード化して、「０１４７」などとすることも考えられます。 「上記の 「○○ID」というフィールド に複数の値を持たせたいのです。」 　１つのフィールドに、複数の情報を入れては、情報を取り出しにくいだけで、データベース化する意味がありません。まずは、「データベースの正規化」と言う概念を理解する必要があります。↓ http://www.kogures.com/hitoshi/webtext/db-seikik … http://jibun.atmarkit.co.jp/lskill01/rensai/db/0 …
検索性や拡張性など考慮するとビット演算でデータを持つのは 必ずしも効率的だとはいえません カテゴリーテーブルをつくってユーザーIDとカテゴリーIDを ひもづける処理をしたほうが良いでしょう
>調べる方法はあるのでしょうか？ grant
一般的に（ＭＹＳＱＬに限らず）ＤＢ設計的には、分けるのが正しいです。 メリットは、変更に強いということです。 たとえば、画面イメージが変わった、帳票のイメージ（項目が減った、増え た）など、設計段階および製造段階においてユーザー要望または、設計 バグ等により変更されることが多々あります。 そのような場合、利用単位にテーブルを作成していては、その都度テー ブルの変更もあるかと思います。 テーブルを変更していては、それまでにその変更したテーブルを利用し ているアプリケーションも変更する可能性がでてきます。そのことにより 変更のたびにシステムを全て見なおさなければならなくなり膨大にコス トを消費してします罠に陥る可能性があります。 なので、設計レベルにおいて、業務に特化してエンティティを設計し、そ れに沿ってテーブルを分けることが本筋かといえます。 また、設計者以外の人がそのテーブル構成を見て、大筋のシステムを 理解できるなどがあります。 設計から製造まで一人の人が行うってことはあまりないですからね！ 説明せずに理解してくれることは非常に助かります。 このへんか、メリットではないでしょうか！ 但し、あまりＤＢ設計に忠実に行うことによってデメリットもあります。 テーブル数及び項目数が多くなり、テーブルアクセスのレスポンスが低 下することがあります。 なぜならば、ＤＢは項目単位に管理されており、実際利用するときには 、複数の項目を連結して利用するため、多くの項目を一度い表示すると きなどはそれがネックになりレスポンス低下を招く可能性があります。 この場合、そのへんも考慮してＤＢ設計らしからぬ設計を行う場合があ ります。たとえば、複数の項目をひとまとめにして、一つの可変項目に 納めてしまい、テーブルアクセス時の項目連結を抑えてることにより性 能を上げるとか。上記例ぐらいなら問題ないと思いますが１テーブルに 数千近くの項目数があるような設計になれば検討する事項といえるか と思います。（お使いの環境にもよると思いますが） 　
1.たぶん勉強のための勉強になってしまっているのでしょう。 実務的という面で、ネットショップなど作成してみては? 商品情報やカテゴリ等の基本的なものから、顧客情報、受注データ、階層カテゴリ、会員、メルマガ、レビュー、販売管理…と好きなだけどんどん大きくできます。各商品にも色違いのようなバリエーション、また大中小で価格が変わる場合など、どのようにテーブルを切るか、正規化をどこで止めるか結構人それぞれで奥が深いと感じます。 (RDBMは結局、情報・物事の本質を見極め汎化し切り刻んでゆく、という作業ですから) 2.ネットに公開する形でアクセス～　はしません。それはもうテストではなく実働ということです。 ベンチマーク取るのが普通だと思いますよ。 [ MySQL チューニング ベンチマーク ]あたりでググって見てください。 多量のデータについては、MySQLだけ勉強のはずがなく何らかの言語をやっていらっしゃると思いますからfor( i <= 100000 ) とかでいくらでもデータを生成できるのでは? 大変失礼ながら、先読みしすぎ心配しすぎ頭良すぎ。デビュー前から税金の心配しているアーチストのようです。何故デーベースの勉強を始められたのかを思い出して、とにかくやってみては。システムトラブルの心配はそれからでも十分かと。
select a.acount_no,name,value from table_a as a LEFT JOIN table_b as b ON (a.acount_no = b.acount_no and b.update_at = '2012-05-14') 試さないで書いてますが。
#2さんのところでロジックはでていますが、 仕様がきめきれていないところがあるので確認すると 氏名、住所、電話番号のどれも入力されていない場合は結果は 全部なのか、ヒットさせないのかがわかりません。 かりに後者だとして、ストアドを使う前提で、サンプルです。 //準備 CREATE TABLE HOGE (ID INT NOT NULL PRIMARY KEY,SIMEI VARCHAR(30),JUSHO VARCHAR(200),DENWA VARCHAR(20)); INSERT INTO HOGE VALUES(1,'sato','tokyo aaa','03-aaa'), (2,'suzuki','tokyo bbb','03-bbb'), (3,'takahashi','osaka ccc','06-ccc'), (4,'tanaka','osaka ddd','06-ddd'), (5,'ito','aichi eee','052-eee'); //プロシージャ作成 DROP PROCEDURE IF EXISTS OUTPUT_PROCEDURE; DELIMITER // CREATE PROCEDURE OUTPUT_PROCEDURE( IN name VARCHAR(30), IN address VARCHAR(200), IN tel VARCHAR(20) ) BEGIN SELECT * FROM HOGE WHERE 1 AND (`SIMEI`=name OR name='') AND (`JUSHO` LIKE CONCAT('%',address,'%') OR address='') AND (`TEL`=tel OR tel='') AND NOT (name='' AND address='' AND tel=''); END // DELIMITER ; //コール CALL OUTPUT_PROCEDURE('','',''); →戻りなし CALL OUTPUT_PROCEDURE('a','','');→戻りなし CALL OUTPUT_PROCEDURE('sato','','');→satoさんのデータ CALL OUTPUT_PROCEDURE('','osaka','');→takahashi,tanakaさんのデータ
微妙に意図が読み取れないのですが・・・ ＞複数のidをいっぺんに同じdataの値に変更することはできますか？ UPDATE test SET data=任意のdata WHERE id IN (1,2,・・・列記) ; ＞また、複数のidで、shozoku_idが1の人をshozoku_idを2にし、dataを1　にすることはできますか？ UPDATE test SET shozoku_id=2,data=1 WHERE shozoku_id=1 ;
#2の方もおっしゃるように、これさえやればOKというものはありません。 TRY&ERRORで試行するしか方法はありません。
> mysql_query ('INSERT INTO my_items SET maker_id=1, item_name="もも", price=480, keyword="缶詰,ピンク,甘い", sales=0, created="2010-10-10", modified="2012-05-05"') SQLのUPDATE文とINSERT文がごっちゃになっているようです。 UPDATEの構文は、 UPDATE <テーブル名> SET フィールド1 = 値1,フィールド2 = 値2,・・・ ですが、INSERT文は、 INSERT INTO テーブル名(フィールド1,フィールド2,・・・) VALUES ('値1','',・・・) と書きます。
補足や回答で書いた内容を、別の質問でするなら 元の質問は閉じてください
なんか中途半端 >時間は未指定だけど、1月1日から1月31日までのデータを検索 今回の例であれば SELECT * FROM table WHERE MONTH(insertDT) =1; でいけますが、datetime型は年までもっているのですから betweenするならそこまで指定する必要があります。 SELECT * FROM table WHERE insertDT BETWEEN '2012-01-01 00:00:00' AND '2012-01-31 23:59:59'; まぁ、時間は無視するならこんな感じでも SELECT * FROM table WHERE DATE(insertDT) BETWEEN '2012-01-01' AND '2012-01-31'; >日付は不明だけど、７：００から１２：００までのデータを検索する等です。 時間の比較なのですから、秒までいれればいけます SELECT * FROM table WHERE TIME(insertDT) BETWEEN '07:00:00' AND '12:00:00'
＞PHPでショッピングカートやメルマガなどを作成し、 ＞データベースはMySQLを使用しています PHP課題 ・レンタルサーバーはPHPがCGIモードのものもおおいため、 モジュールで動いていたものは多少修正が必要かも ・バージョンの違いなどによって少なからず挙動の差がある ・php.iniの設定違いがある場合その修正ができるかどうか ・ライブラリを利用していた場合、そのインストールができるかどうか ・PHPから他のサービスを利用しているものはその接続環境の確認が必要 　とくにメール送信機能やsystem系の関数などはあやしい、 ちなみにMySQLについてはメインバージョンがちがうとかなり刷り合わせが大変 とくに自宅よりレンタルのバージョン低い場合はけっこうきびしいかも
INSERT の構文はいろいろあります。 構文自体はあっています 今回は予約語をフィールド名に使っているのが問題です 今回のように無意識にバッティングするケースも懸念されるので フィール名は明示的にバッククォートで囲むように心がけましょう INSERT INTO `abev` SET `name`='名前', `story`=10, `music`=10, `voice`=10, `character`=10, `graphic`=10, `comment`='コメント';
＞パソコンに入っているものは「3.1.3.1」と「3.4.5」です。（XAMPPからダウンロードしました） ご自身のPCにXAMPP環境があるのでしょうか？ であれば、レンタルサーバーとおなじ文字コード体系に設定してみて 同じようにインポートができるかどうか確認してみては？ ＞でも、ログインを試みて半分はエラーになってログインできませんでした。 phpMyAdminのログインは複数モードがあります どのモードで処理するかによって対応がことなると思います。 またログインできないというのはどういう状態なのか書かないと 適切な回答がつきにくいでしょう。 ＞これが解決しないとお試し期間が終わっても契約出来ないので急いでいます。 さくら自体が本質的に悪いとは思いませんが、トラブルがおおいようなので 質問者さんの環境と相性が悪いのかもしれませんね。 急ぎで決断が必要ならひとまずそのサーバーはやめた方がよいでしょう もうすでに契約してしまったならなんとかつきあっていくしかありませんが
１．koushin.phpのファイル自体の文字コードはShift-JISになっていますか？ ２．SET NAMES sjis;のSQL文はkoushin.phpのアップデート文を投げるときにも実行されていますか？ 以上2点確認してみてください。
登録時にエスケープしましょうね。 http://www.php.net/manual/ja/function.mysql-real … シングルクォーテーション、\は、MySQLで利用される文字なので、 ちゃんとエスケープしてあげないと登録ができないだけではなく、 データ破壊や盗難に繋がります。
phpMyAdminからのデータの投入はできるのでしょうか？ $sql='INSERT INTO my_items SET maker_id=1, item_name="もも", price=480, keyword="缶詰,ピンク,甘い", sales=0, created="2010-10-10", modified="2012-05-05"' として print $sql; で表示したとききちんと「もも」は表示されますよね？ 逆に、「もも」を「momo」など英字にしても投入できませんか？
特徴からいえばreplaceで処理するのは無理です replaceはunique keyがある場合一度削除してinsertするということです したがって鈴木がかぶって削除をしており、insertすればbannedは デフォ値のfalseになります。 なにか処理をするならいかのどちらかになります。 //鈴木がなければ投入、あればbannedをtrueにする INSERT INTO test (name) VALUES ('鈴木') ON DUPLICATE KEY UPDATE banned=true; //鈴木がなければ投入、あればなにもしない INSERT IGNORE INTO test (name) VALUES ('鈴木');
＞スペース区切りにして検索をかけるとヒットしません 仕様が提示されていないのでなんともいえませんが (1)スペースで区切ってand検索をする →「A B」であればAとBを順不同に両方含むという意味 (2)同or検索する →「A B」であればAまたはBもしくはその両方を含むという意味 (3)スペースを含め完全一致する →「A B」であれば「A B」という文字を含むという意味 それぞれによって処理はことなります。 ざっと見た感じ今回のソースは(3)を処理しているのでしょうか？
例えばその行番号を取得する処理をストアドにしたらどうですか？
http://jp.php.net/manual/ja/function.array-uniqu … と http://jp.php.net/manual/ja/function.sort.php で、どうでしょう？
SELECT * しているのでフィールド名が競合する可能性が否定できません。 それが回避できるなら CREATE TABLE hoge SELECT * ・・・ で作ることができます。 ただしデータの流し込みによってつくるテーブルなので フィールの型が想定したものとちがう可能性があります。 すなおに任意にCREATE TABLE で設定してから 流し込みをすることお勧めします
複数の文字をand検索するのであれば WHERE 1 AND `検索フィールド` LIKE '%検索ワード1%' AND `検索フィールド` LIKE '%検索ワード2%' AND `検索フィールド` LIKE '%検索ワード3%' ・・・ とします。OR検索なら WHERE 1 (`検索フィールド` LIKE '%検索ワード1%' OR `検索フィールド` LIKE '%検索ワード2%' OR `検索フィールド` LIKE '%検索ワード3%' ・・・ ) みたいな感じです。 あとは受け取ったワードをそのロジックにあてはめるよう PHP側でスペースで分割してループをすればいいでしょう
>必須入力項目でないEmailでも重複はまずいのではないのでしょうか？ まずくないですね >２人の人が同じアドレスを書いていて、一方と何かしらのコンタクトを >とらなければならない状況になった場合に誤ってemailをつかってしまうと、 >違う人にもメールが届いてしまうとか、 それは精度の問題ですね。 一つは空メールをおくらせて登録するとか 確認メールを送りそこからワンタイムパスワードで登録を完了させる などでメールアドレスは整合性をとることができます そういった確認作業をしなければユーザーが適当に書いたEmailアドレス なんかただの飾りですから、「何かしらのコンタクト」をとる手段としては 不適格です。 >同じ人が期間を開けて異なるidで間違って登録して同じemailアドレスを >登録した場合にも後でemailで連絡をとる状況が出てきた場合にその人に >複数通同じメールが届いてしまうとか。 同じ人が登録するのであればユニーク属性をつけて、はじくなり 上書きするなりすれば十分要件は満たすことができます
>localhost/rootのレコードにパスワードを設定 password()関数で設定していますか？ とりあえずmysqladminから再度パスワードの設定が必要かも 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/passwords …
100以上となると通常のクエリでは長すぎて事実上無理だと思うので、トリガーでログを取ってもいいかも。 ログ専用のテーブルをひとつ作り、各テーブルでINSERTやUPDATEがあった場合、自動でそのログ用テーブルに当該テーブル名,ID,UPDATE/INSERT,時間等々を書き込むようにしておけば、そのテーブル1つを見るだけで済むのでは? http://www.dbonline.jp/mysql/trigger/index1.html
実行ユーザーとBACKUPDIRのパーミッションは整合性がとれていますか？
正規化の考えで行くとそのテーブル設計自体が問題歩きがするけど やるなら ・ユーザマスターテーブル ユーザID,ユーザ名 ・成績テーブル ユーザID,問いNo,正誤 ってテーブル設計にしますけどね。
＞必ず１行単位で追加するようにしている じゃ、投入してから削除するのではなくデータを投入する際に件数をカウントして 5件あるときには変更処理にすればいいですね
そういうことだと、こんな感じでしょうかねぇ・・・ select * from tableA where B IN ( select B from tableA group by B having count(*)>1 and count(DISTINCT C)>1 ) つまり、Bが2個以上あって、Bに対するCが2個以上あるという条件です
http://d.hatena.ne.jp/tada180/20080214/1203004572 ここのあたりのページが参考になるかと。 header関数とreadfile関数で行ける気がします。 ただ、ファイルデータの転送をPHP経由で行う（PHPのコードが出力処理をする）のはオーバーヘッドがあるので、Apacheの「mod_xsendfile」モジュール利用も検討したほうがいいと、「WEB+DB PRESS vol67」の「モテモテPHP」の記事がありました。
MySQLにアップしているの？状況がわからない 原則としてhttpベースでは全角文字のファイルを送受信しない windowsからtype="file"でアップロードした場合 ファイル名はシフトjisでつけられているはずなので サーバー側のファイルシステムとは異なり表示がされないのかも アップしたファイルを公開ディレクトリにコピーする際に 無理やりコンバートし、ユーザーの環境を限定すれば いける可能性はありますが、もろもろのトラブルが想定されるので やるなら相当注意をして自力で対応するしかない
select TBL1.A , TBL2.X from TBL1, TBL2 where TBL1.B = TBL2.B order by TBL2.日付 desc limit 100 これじゃダメなんですか？ TBL2.日付でソートしているわけだから、ソート後の 100件を取ると思うけど。
権限の問題ですね、FAQがあるみたいですが あてはまるでしょうか？ http://www.apachefriends.org/jp/faq-xampp-window …
何度もすいません。 NO.3です。 where句のinの前はb.dayだけで サブクエリ内のSelectもdayだけで実行してみてください。 恐らく、これで大丈夫なはずです。
一番効率がいいのは 会社名フリガナフィールドの他に一文字フリガナフィールドをつくって 登録することです。 そうでないなら、カ行なら (`フリガナ` LIKE 'カ%' OR `フリガナ` LIKE 'キ%' OR ・・・) のようにするのがSQL的には効率的です。 ただし濁音・半濁音がある場合は列記する必要があります もちろんフリガナの最初の一文字をとって left(フリガナ,1) IN ('カ','キ','ク','ケ','コ') のような書き方もできますが、インデックスが効かない分スピードは遅いです。 （データ数が数千件レベルならこれでも十分いけるとおもいます）
SELECT A FROM hoge_tbl WHERE B='hoge' AND DATE_FORMAT(NOW(),'%Y%m')< CONCAT(YEAR,CASE LENGTH(MONTH) WHEN 1 THEN '0' ELSE '' END,MONTH) です。 ただし、年、月をCHARで設定する方法はあまりお勧め出来ません。
＞ｍｙｓｑｌの設定を見ればよいのでしょうか？ というか、ご自身が契約したサービスについて ISP側で接続方法がかかれていますよね？
判定方法としては WHERE CURDATE() BETWEEN start_date AND lastdate のようなやり方ですね 終了したものを選択するなら WHERE CURDATE() > lastdate ですが、同じリクエストでやるには抽出したデータから PHPで判定する必要があるでしょうね
そこまで来たらもう一息だと思います。 接続情報が間違っていると思いますので、TCPでの接続なのか、socketでの接続なのか、 IDやパスワードなど正しい接続情報を調べて、config.ini.phpに設定してください。
特に問題はないと思いますが、できればMySQLのサイトから最新のJDBCドライバをダウンロードしたほうがいいかもしれません。私は5.1.18を使って5.5.20サーバーに接続しています。
あ～、なるほど部品の構成表みたいなものを意識しているのですね？ 的外れな回答をしてしまいました、申し訳ないです。 その場合だと親に対する子を列記した構成表の中間テーブルを用意して joinしていくのが妥当でしょうね。
apache用のmysqlのdllがずれているのでしょうね Windowsなら素直にXAMPPなど統合環境でバージョンをすり合わせた方が よいかもしれませんね
>現在、SELECT文での絞り込みに数十秒かかります。 適切なインデックスが生成されていれば、それほどは時間が掛からないはず。 副問い合わせ等を過剰に使われているのではないでしょうか？例えば、１件の読み込み毎にすべてのデータを読み込んでいたり。 http://gihyo.jp/dev/serial/01/sql_lifesaving/0001 http://www.geocities.jp/mickindex/database/db_op … 読み込み時間の短縮のチューニングは数ありますが、読み込みのSQL自体に問題があることが多いです。具体的な読み込みSQLがわからないのでココでは割愛します。 テーブル分割は避けたほうが無難です。 select結果のinsertは↓ 1年ずつ実行するのが確実。 http://www.ksknet.net/postgresql/selectinsert.html
＞$uploads_dir = '/uploads';はどこかに作らないとダメですよね？ この例だとルートに/uploads を作った前提ですね これは設定次第なので公開ディレクトリにしてもいいし、 非公開でプログラムから参照するのでもいいと思います
sumでやる方が常套のような気がしますcountでやる場合は、 条件外にNULLを返してやればよいです SELECT count(flag) flagAll ,count(if( flag = 1 AND id = (サブクエリ),1,NULL)) as flagNum FROM info sum(if(条件,1,0))なら条件に合致すると1なのでそれをsumすれば合致したの総和になります count(if(条件,1,NULL))ならcountはNULLをカウントしないので、条件外を除いた数を カウントします。条件に合致した場合の1はあまり意味はありません
単純に update User set Updated=Created; ただUpdatedにCreatedを無条件にいれるくらいなら Createdを参照すればいいだけのような気がしますが・・
http://miruneko.at.webry.info/200802/article_19. … http://garnote.com/2009/07/mysql-1.html http://allabout.co.jp/gm/gc/47432/
SELECT DISTINCT A FROM テーブル WHERE B IN(SELECT B FROM テーブル WHERE A=4) AND A!=4 または SELECT DISTINCT T1.A FROM テーブル T1 INNER JOIN テーブル T2 ON T1.B=T2.B AND T2.A=4 WHERE T1.A!=4 または SELECT DISTINCT T1.A FROM テーブル T1 WHERE EXISTS(SELECT ' ' FROM テーブル T2 WHERE T1.B=T2.B AND T2.A=4) AND T1.A!=4 です。
MySQLはVirtualBox上で動いているので、結果的には同時にアンインストールされた事にはなります。 ただし、仮想ハードディスク上には残っているので、VirtualBOXで復活すれば、まだMySQLは使えます。 なくすためには、仮想ハードディスクとしていたファイルを消す事で可能です。
どこまでを望むかによりますね アイウエオカキ・・・の順がその順番にならないとなると問題が深いかもしれません。 濁音・半濁音・拗音・長音をおもいのとおり処理したいとなると結構面倒です
たぶんサイト内でのデータ検索のことかと思いますので、その前提で書きますね。 >普通検索サイトの構築にはDBを使用すると考えてもよいのでしょうか？ ですね。もちろんMysqlなど使わずにcsv等テキストファイルでも可能ではあります。 ただし、それだと閲覧者が検索するたびに、PHP等のプログラム側でファイルから一行づつデータを読込・分解し、たとえば商品検索なら 1万円以下かどうか、カテゴリはどうかなど確認して、該当するデータを抽出するプログラムを書く必要があります。 また、データが数百件程度ならよいのですが、数千～などとなれば、処理に時間がかかり、「なかなか検索結果が表示されない」ということになります。 Mysql等のRDBMSはデータを抽出するのが専門ですから 例えば「東京都内で、自給1,500円以上の事務または営業職」などはプログラム側ではたった1文で済みます。早くて簡単、しかも将来への変更にも適応しやすいですから使わない手はないですよ。 >情報の管理は、手入力になるのでしょうか？ 手入力だと書き間違いがありますから、DBかcsvかに限らず、通常は管理用パネルを作成し、 そこで商品登録や削除などを行います。
データがそれなりに多いなら案2をお勧めします。これなら余分な中間ファイルも要りませんし、エディタなどで問題になるメモリの制限もありません。 ただ、どれくらいカラム構成が違うのか、キー項目が違うなどテーブル構成がそもそも大きく異なるのかなども考慮すべきだと思います。
>データベースを作成できる権限をもつユーザを作成することは可能でしょうか？ MySQLのバージョンによるかもしれまえんが、 grantでcreate権限を付与すればできるはずですが。 http://dev.mysql.com/doc/refman/5.1-olh/ja/grant … より。 あ、ひょっとしてわからないのはon句に書く内容？ つまり、グローバル権限 ってやつの付与方法ね。 「グローバル権限は管理権限であり、特定のサーバー上のすべてのデータベースに適用されます。グローバル権限を割り当てるには、ON *.* 構文を使用します。 」 と上記ＵＲＬのサイト内に記載されています。 つまりは以下のような書き方。 GRANT CREATE ON *.* TO 'someuser'@'somehost';
＞inner left outer join 普通に文法違反ですね left joinはouter join ですからinnerという表記は書いちゃまずいでしょ select table1.*, table2.no from table1 left join table2 on table1.id = table2.no; じゃいけませんか？
全文検索を使う場合のクエリと言う事ですよね？ 基本的な論理演算は#1さんが書かれているとおりだと思います。 全文検索にSQLの論理演算ORは禁物なので、ANDだけで揃えてみました。 （最近はそうでもないのかな？） select col1, col2, .... from tbl where match(coltext) against ('+A +B -E -F' in boolean mode) and match(coltext) against ('C D' in boolean mode); 残念ながら、MATCH一発で書くクールな方法は思いつきませんでした。 sennaが2回呼ばれる事、と全文検索内とは言えORになるので、速くはないかも、ですね。 （LIKEのテーブルフルスキャンよりは速いと思いますが） それと、手元にTritonn環境ないので申し訳ありませんが、未検証です。 なのであちこち微妙です。
MySQL Community Server は無償で利用できます。 しかし、 MySQL Enterprise Server を利用することをおすすめします。 理由は、ご承知かもしれませんが MySQL Community Server は致命的なバグがあってもサポートされないためです。このため、基幹業務システムの場合には MySQL Enterprise Server の方が信頼性がありおすすめです。逆に短期間のみ使用するシステムであれば MySQL Community Server のほうが手軽に利用でき費用も節約できるのでおすすめです。 開発会社が作成したシステムについては多分、動作保証環境が MySQL Enterprise Server のみがあると思います。 MySQL Community Server は暗黙的に免責になっているかと。（不具合・故障・障害はあって当たり前、自分でパッチを書くぜ（自分で修理する）というくらいの心構えで使用するものですから） まあ、ここで聞くよりもオラクルの方に問い合わせた方が正確な情報が得られると思います。 MySQL に関するお問い合わせ 製品、サービスに関してのお問い合わせは、オラクルのMySQL販売担当またはMySQLお問い合わせ窓口までお問い合わせください。 [Oracle Direct] 0120-155-096 ※音声案内に従って2番を選択してください。 【受付時間】 平日 9:00-12:00/13:00-18:00 (祝日及び年末年始休業日を除きます) MySQL-Sales_jp@Oracle.COM
2358 [Mon Mar 12 07:36:06 2012] [error] [client ...] PDO Connection Error: SQLSTATE[HY000] [2013] Lost connection to MySQL server at 'waiting for initia l communication packet', system error: 95$ 2359 [Mon Mar 12 07:36:07 2012] [error] [client ...] PDO Connection Error: SQLSTATE[HY000] [2013] Lost connection to MySQL server at 'waiting for initia l communication packet', system error: 95$ 接続エラー　SQLSTATE[HY000] [2013] 接続が落ちた。 ＭＹＳＱＬサーバーにて、接続パケット初期化中に　システムエラー　ってな意味かな？ 　上記内容から、メモリ関係とは思いますのすので以下の手順にて調査する必要がある と思います。 　ＭＹＳＱＬのマニュアルのメモリ関係を見ると以下の記述がります。 　　メモリ使用量は、以下の計算式となっているので、下記計算式で概算を見積もる。若しくは設計書にて 　　以下の個所を確認し、自分でも再度計算を行ってみる。 　　　グローバルでのメモリー割り当て量 + 各スレッドへのメモリー割当量 * 接続数 　　 　次に、グローバルでの割り当てで、代表的な変数なども見てみる。 　（現在どのように設定しているかとか、各パラメータの意味はとか、他にどんなのがあってそれぞれの意味はとか 　　それが解ったら、ｍｙｓｑｌが稼働しているマシンスペックと照らし合わせて、最適なのかどうか 　　とか検討して、その結果どうすべきなのか(メモリ増設？　利用ｓｑｌの改善？パラメータの調整？ 　　など） 　　　　 　bdb_cache_size bdb_log_buffer_size innodb_additional_mem_pool_size innodb_buffer_pool_awe_mem_mb innodb_buffer_pool_size innodb_log_buffer_size key_buffer_size query_cache_size 　各スレッドへの割り当て、変数 　join_buffer_size read_buffer_size read_rnd_buffer_size sort_buffer_size 　※ などあるようですが、バージョンによっても違うようなので、このへんも調査したほうがいいと思います。 　あと、これ以外にも利用しているｄｍｌ分（ｓｑｌ文もかき集め、上記エラーがでたとき、どんなｓｑｌが発行されていた 　とかも調査したほうがいいですね！ 　以外と、ｓｑｌ誤りにより巨大なメモリを浪費してメモリを圧迫しているってなこともあるとか） 　 　とま、地道な作業となりますが頑張ってください。 　
＞フィールドEにフィールドCと同じ値が存在するときにエラーがでます それはユニーク属性が設定されているのでしょうね INSERT IGNORE INTO とすると解決すると思います。
普通の結合でいいのでは？ select A.staff_id,A.staff_name,A.staff_group ,B.value,C.value,D.value　from ((staff_tbl A inner join staff_value B ON A.staff_id=B.staff_id AND B.value_name='area') inner join staff_value C ON A.staff_id=C.staff_id AND C.value_name='year') inner join staff_value D ON A.staff_id=D.staff_id AND D.value_name='pay'
>うまくいきません まず$sqlの中身を確認しSQL文として文法エラーがないかを確認 そうでなければPerlの文法を確認 それでだめなら環境の問題かもしれません
テーブルAのURLにユニーク属性をつければあとは流し込むだけ create table テーブルA(NAME varchar(10), URL varchar(20) unique key); create table テーブルB(NAME varchar(10), URL varchar(20)); insert into テーブルA values('a','aaa.com'),('b','bbb.com'),('c','ccc.com'),('d','ddd.com'),('e','eee.com'); insert into テーブルB values('d','ddd.com'),('y','eee.com'),('f','fff.com'),('g','ggg.com'); //流し込み insert ignore into テーブルA(NAME,URL) select NAME,URL from テーブルB;
http://eastcoder.com/code/wp-multibyte-patch/ 上記のページよりマルチバイト文字の取り扱いに関する不具合の累積的修正と強化を行うプラグイン をダウンロードして、組み込んでみてください。 おそらく、すでに組み込まれていると思うので、 サイトの管理より、左メニューの下の方に、プラグイン　のメニューがあるので、 そこからWP Multibyte Patch　を有効化　してみてください。 ファイル名はMD5にエンコードされて、読めなくなりますが、 WEB上では日本語のファイル名にヒモ付されて表示されますので問題ないはずです。 問題があるとすれば、日本語ファイル名に変換された状態で、ダウンロードしたい場合などでしょうか。
「 NOT LIKE 」を使用してこうしたらどうでしょうか。 SELECT * FROM phonelist WHERE NOT siteurl NOT LIKE '%/';
http://gihyo.jp/dev/serial/01/php-security/extra … http://oshiete.goo.ne.jp/qa/6321768.html http://www.ipa.go.jp/security/awareness/vendor/p … http://wiz-code.digick.jp/blog/?tag=%E3%83%81%E3 … PEAR無しでも実装可能です PEAR無しのサンプルは必要でしょうか
ごめんなさい。 私のphpMyAdminの環境だと問題なさそうです。 set names utf8; 的な処理を先に入れれば通るかもしれないですが なんともいえません。
ドットインストールというのは学習サイトみたいなものでしょうか？ ともあれ、Macユーザのようですが VirtualBoxに入れているのはLinux系OSでしょうか。 CentOS、Ubuntu等でコマンドも違いますので、その辺も明記された方がいいですよ。 以下、CentOSベースでご回答します。 １、仮想マシン起動 ２、rootでログイン ３、コマンド実行「service mysql start」 ４、メッセージに従ってrootパスワード設定 で一応mysql自体は使えるようになるはずです。 mysqlを使われるようでしたら、phpMyAdminを使われると良いかと思います。 httpd、php、php-mysql、php-mbstring辺りを入れれば動くと思いますよ。 と、ここまで書いておいてなんですが、mysqlはインストールされていますよね？ 一応インストール用コマンドは以下です。 yum install mysql-server
left joinするだけですね //準備 create table T1(科目ID int not null primary key, 科目名 varchar(20)); insert into T1 values(1,'国語'),(2,'算数'),(3,'理科'),(4,'社会'),(5,'英語'); create table T2(生徒ID int not null primary key, 生徒名 varchar(20)); insert into T2 values(1,'山田太郎'),(2,'鈴木花子'); create table T3(科目ID int , 生徒ID int,unique key(科目ID,生徒ID)); insert into T3 values(1,1),(2,1),(5,1),(5,2); //例1）生徒ID=1の場合 select T1.科目ID, 科目名, T3.生徒ID, 生徒名 from T1 left join T3 on T1.科目ID=T3.科目ID AND T3.生徒ID=1 left join T2 on T2.生徒ID=T3.生徒ID //例2）生徒ID=2の場合 select T1.科目ID, 科目名, T3.生徒ID, 生徒名 from T1 left join T3 on T1.科目ID=T3.科目ID AND T3.生徒ID=2 left join T2 on T2.生徒ID=T3.生徒ID
方針によってやり方は２つ (1)千代田区にラーメン屋があるかどうかわからないがとりあえず「ラ」を表示させる (2)千代田区にラーメン屋があることを確認して「ラ」を表示させる (1)は単純なはなし 市町村テーブルから千代田区を検索した後、職業テーブルを羅列する (2)はちょっと面倒ですが 市町村テーブルから千代田区を検索し、13101を会社名テーブルから検索し induidの羅列を得て、そこから職業テーブルの職業名を得る select distinct c4_aiu_id,c3_aiu,cityid from 職業テーブル as w inner join 会社名テーブル as c on c1=induid inner join 市町村テーブル as a on a1=cityid and a5_city_name='千代田区'; で千代田区のアイウを得て、そこから絞り込むように select distinct c1,c2_work from 職業テーブル as w inner join 会社名テーブル as c on c1=induid and cityid='上記で得た13101' where w.c4_aiu_id='上記で得たラのid'; で千代田区のラーメン屋を得る はっきりいえば、質問のカラム名の何が何をさしているか想像しているだけなので あてずっぽうです、きちんとした回答を得たいなら仕様を提示すべきです
＃２です。 ＃２はOracleでの書き方でした。ごめんなさい。 既に回答でてますが、再挑戦させてください。 ＭｙＳＱＬ5.5.8とACCESS2003で試験し、動作確認しました。 update table, ( select table1.t1 - table2.tl as T1 from table as table1, table as table2 where table1.id = 1 and table2.id = 2 ) as Q1 set t1 = Q1.T1 where table.id = 3 /
通常のインデックスは値を元にして格納場所を決めている訳ではないので効果がありません。 大容量テーブルを利用する場合は、値の部分を使って、格納サーバーを振り分け、レスポンスを上げる場合があります、この場合は処理速度を上げる事はできますが、暗号化しなくても、振り分け部分の文字数を多くすれば解決すると思います。
条件定義があいまいなので正確に答えられないのですが、 元データは秒までもっているということですね？ 別名にフィールド名を利用してしまうとgroup byするときに フィールド名が優先されているだけじゃない？ 別名にユニークなものを利用してください。 create table hoge (id int,time_a int unsigned,count_1 int,count_2 int, count_3 int); insert into hoge values(1,unix_timestamp('2012-02-23 13:01'),0,2,0) ,(2,unix_timestamp('2012-02-23 13:01:01'),1,1,0) ,(3,unix_timestamp('2012-02-23 13:01:02'),2,2,3) ,(4,unix_timestamp('2012-02-23 13:01:03'),0,2,0) ,(5,unix_timestamp('2012-02-23 13:01:04'),1,5,2) ,(6,unix_timestamp('2012-02-23 13:02:01'),1,2,2) ,(7,unix_timestamp('2012-02-23 13:02:02'),0,1,2) ,(8,unix_timestamp('2012-02-23 13:02:03'),1,1,0); select FROM_UNIXTIME(time_a - time_a % 60) as time_b,sum(count_1) as sum_1,sum(count_2) as sum_2,sum(count_3) as sum_3 from hoge group by time_b; 余談ですが、集計を前提としているDBなら、insert するときに各レコードに 分までの集計用カラムを埋め込んでおくのが効率的ですね
こんな感じ SELECT ID,STAFF,SUBJECT,MSG,RCV FROM テーブル WHERE (STAFF,RCV) IN (select STAFF,MAX(RCV) from テーブル group by STAFF)
UPDATE table SET NAME='check'; これでいいでしょ。WHERE～を書かなきゃいいだけです。
データベースにはバックアップとバックアップの間を補完するために 更新内容のログを取っておく機能がありまして障害時はバックアップから 復旧させた後に更新ログを使って最新の状態まで回復させるようになっております。 詳しくは「データベース　ロールフォワード」あたりをキーワードに 調べてみてください。 ただし、当然ですが更新内容のログを取っておくように設定していないと この手段は使えませんのでまずそれを確認するべきだとおもいます。 容量の問題からバックアップ毎に上書きされることが多いものですので 早めにご確認ください。
>VIEWを最終的に作ろう では、viewを２つ作っては？ create view v1 as select sum(縦 * 横 * 高さ * table1.個数 * 10) as SIZE0 from table1; create view v2 as select 1000 - SIZE0 As SIZE1,2000 - SIZE0 As SIZE2,3000 - SIZE0 As SIZE3 from v1; select * from v2; そもそもviewをつくるなら多少冗長な書き方をしても良いような気がしますが・・・
Joinedに索引がないのではないのではないでしょうか。 CREATE INDEX 索引名 ON tUser　(Joined) として索引を作成し条件に Joined >= TRUNC(SYSDATE) AND Joined < TRUNC(SYSDATE+1) を追加してみてください。 場合によっては CREATE INDEX 索引名 ON tUser　(UserNAME,Joined ) か CREATE INDEX 索引名 ON tUser　(Joined,UserNAME ) が効果的かもしれません。
あ、ごめんなさい $row=mysql_fetch_array($resource,MYSQL_ASSOC); でした
select ID,NAME,SIZE from T_ANIMAL inner join T_SIZE on SIZE_ID = 'A' で、いけませんか？
パスワードが分からなくなってしまった場合は、 my.cnfにskip-grant-tablesと追記してMySQLを再起動しましょう。 grantテーブルを無視して動くようになるため誰でも管理者権限で入れるようになります。 外部から入れないよう念のため、オフライン環境（LANケーブルを抜いて）にして行うことを推奨します。 この状態でパスワードを再設定し、skip-grant-tablesを消して再起動すれば再設定したパスワードで入れます。 （作業後はskip-grant-tablesは必ず消して再起動しておかないとパスワードの意味がありません）
xampp/mysql/my.iniに下記を追記して、mysqlを再起動すれば解消するはず・・・ [mysqld] character-set-server=utf8 [mysql] default-character-set=utf8 うちではxamppを入れたらまずこの設定をしています。 http://d.hatena.ne.jp/tetsuwan30/20110823/131406 …
select k.kokyaku_name, u.uriage_date from 顧客テーブル k inner join ( select kokyaku_id, max(uriage_date) uriage_date from 売上テーブル group by kokyaku_id) u on k.kokyaku_id = u.kokyaku_id
物理的にまとめるならダンプしてバルクでとりこむとか。 参照するならデータベース.テーブルで参照できます。
SELECT cmaster.comic_id,tags,title FROM mysql.comic_tag as ctag INNER JOIN mysql.comicmaster as cmaster ON ctag.comic_id = cmaster.comic_id SELECT cmaster.comic_id,tags,title FROM mysql.comic_tag as ctag WHERE tags = 'aa' ２つのSQL文を見比べてもらうとわかる（というか文法書に書いてあること）のですが、 Inner join テーブル１　on 条件１ ・・・from テーブル where 条件２ Inner join テーブル　on 条件１は、from句のテーブルと書いた中に書きます。 だから、 ・・・from テーブル Inner join テーブル１　on 条件１ where 条件２ と書けばいいことが理解してもらえるかな。 ちなみに Inner join テーブル１　on 条件１ の条件１をandでつなぐこともできるので ON ctag.comic_id = cmaster.comic_id AND tags = 'aa' と書いても動くかも。 でもあとでみたときに分からなくなるので、お薦めしません！！！ （あくまで onの後ろはテーブルを結合する条件だけにするべき）
#1の方の回答のようにグループ化 しなければ２レコード出力されます。 22×2だから44は当然の帰結です。 おそらくやりたいことは以下のこと でしょう。 SELECT A.z AS `在庫`,B.* FROM (SELECT SUM(stock) AS z FROM t1 WHERE id='001' GROUP BY id) A INNER JOIN t2 B ON A.id=B.id
データベースがどうこうよりも、サイト構築アプリの問題だと思います。 データベースの方は１つで何サイトも作れる様に設計すればできます。 サイト構築アプリがどんなものかわからないので明確に答えられません。 ただ、私が知る限りのCMSでECサイトを作る場合は1サイト1データベースの設計になってると思われます。
まぁ以前は1テーブルにタイムスタンプが設定できるのは1カラムだけでしたからね そもそもタイムスタンプを２つ持つ必要があるとはとても思えないですが
このテーブルの主キーはなんですか。
今回も凡ミスですよ ＞$sql .= " seibetsu = '" . $_REQUEST["seibetsu"] . "',"; 今度はカンマがいらないです これだとwhereの前にカンマがはることになります
解決しているのであればよいですが、見た限り 国語<input type="checkbox" name="chk[]" value="国語"> 数学<input type="checkbox" name="chk[]" value="数学"> 理科<input type="checkbox" name="chk[]" value="理科"> 社会<input type="checkbox" name="chk[]" value="社会"> 英語<input type="checkbox" name="chk[]" value="英語"> という処理なのではないですか？
SELECT MIN(NAME),MAIL FROM テーブル名 GROUP BY MAIL ORDER BY 1,2 です。 尚、「MIN(」は「MAX(」でも出来ます。
sqlite3もコマンドライン　オプションで起動時にmode変更可能のようです。 http://d.hatena.ne.jp/kumazin/20101027/1288152041 http://zettai-non-sugar.blogspot.com/2010/11/sql … バッチファイルとかシェルコマンドファイルなどに、これらのオプションを指定しておけば、毎回入力しなくてもよくなります。 OSは、windows？それともlinux系？ windows なら bat ファイル（拡張子 .bat）に　オプション指定して以下のように記述 sqlite -column %1 %2 これを sq3.bat として保存したなら、同じディレクトリーで >sq3 xx.db のようにコマンドプロンプトからデータベースファイル名を指定して起動出来ます。 起動時オプションの詳細は、以下で一覧できます。 sqlite -help
見た感じid=0のデータは使っていないようですので たとえばこんな風に管理してみてはどうでしょう？ //準備 create table t_record(record_id int,name_id int,id_number int,unique key(record_id,id_number)); create table t_record_name(record_id int not null primary key,record_name varchar(20)); create table t_name(name_id int not null primary key,name varchar(20)); //データ投入 insert into t_record values(1,1,1),(1,4,2),(1,2,3),(1,1,4),(2,2,1),(2,5,2),(2,1,4),(2,4,5),(3,3,1),(3,2,4),(3,5,5); insert into t_record_name values(1,'record1'),(2,'record2'),(3,'record3'); insert into t_name values(1,'○○○'),(2,'△△△'),(3,'□□□'),(4,'×××'),(5,'◎◎◎'); //初期データ表示 select rn.record_id ,rn.record_name as record ,sum((id_number=1)*name_id) as id1 ,sum((id_number=2)*name_id) as id2 ,sum((id_number=3)*name_id) as id3 ,sum((id_number=4)*name_id) as id4 ,sum((id_number=5)*name_id) as id5 ,sum((id_number=6)*name_id) as id6 from t_record_name as rn left join t_record as r using(record_id) group by record_id order by rn.record_id asc; //結果表示 select r.record_id ,rn.record_name as record ,r.name_id as id ,n.name from t_record as r left join t_record_name as rn using(record_id) left join t_name as n using(name_id) order by r.name_id asc,r.record_id asc;
私の経験上一部の機種依存文字で変換がおかしかったことがありますね 「(株)」とか「～」とかローマ数字とか そういうのは何らかのプログラムで個別に具体的なコードを指定して 修正対応をしていたような・・・
こんばんは。 そもそも・・・、 ＞２．この後、idのAUTO_INCREMENTを「１」にリセット。 これができない。 すでにテーブルには「5」があるので、それより小さい値にはリセットできない・・・残念。
こういうことでしょうかねぇ？ create table tableA(id int,columns varchar(100)); insert into tableA values(1,'1,4,7,3'),(2,'5,3,22'),(3,'1,2,3'),(4,'2,3,1'),(5,'1'),(6,'4,4,4'); ※id=2は22はあっても2は含まれない、id=3や4はid=1の順番違い id=5のように単一データや、id=6のような同じデータを複数もつ場合も想定 「1」を対象とする SELECT id FROM tableA WHERE columns REGEXP '(^|,)1(,|$)' id=1,3,4,5がヒットします 「2」を対象とする SELECT id FROM tableA WHERE columns REGEXP '(^|,)2(,|$)'; id=3,4がヒットします(22はヒットしません) 「3」か「4」を対象とする SELECT id FROM tableA WHERE columns REGEXP '(^|,)(3|4)(,|$)'; ・・・とここまで書いて言うのもなんですが カンマ区切りでデータを持つのはSQL的には最悪です。 きちんとデータ分けて処理することをお勧めします。
＞例外 http://www.post.japanpost.jp/zipcode/dl/kogaki.h … から、実際にデータを落としてみてください 郵便番号から住所を絞り込む時、「○○丁目～××丁目」とか 「それ以外」とか単純に処理できないものが多々あります。 つまりチェック程度はできるが、住所を確定させるには精度が怪しい ということです。 また今回のケースには当てはまらないかもしれませんが、 企業が取っている大口事業所個別番号など記載されていたりする場合もあります
前に SELECT SUM(列ID) FROM ( 後に )AS T を付加しても出来ます。
＞私が使ってるのはmyisam myisamの場合、データの堅牢性を犠牲にして高スピードを実現しているので 難しいかもしれませんね SELECTとINSERTのタイミングがコンマ数秒レベルで絶妙にネックになるよう 仕組みを考えているならmyisamは控えた方がよいでしょう。 そうでないならほぼ問題にはならないと思います
ちょっと検索すれば http://dev.mysql.com/doc/refman/5.5/en/cursors.h … くらいは出てくる.
EMUMってそういうものではないでしょう。 それをしたいなら正規化して別テーブルで管理してください
こんな感じかな DROP TRIGGER IF EXISTS a_ref; DELIMITER // CREATE TRIGGER a_ref BEFORE INSERT ON abc FOR EACH ROW BEGIN IF(SELECT COUNT(*) FROM abc)>=49 THEN INSERT INTO def SET def1_id =NEW.abc1_id,def2_vote_volume=NEW.abc2_vote_volume; END IF; END; // DELIMITER ;
こうですね select a.jyusyo,a.name,a.gazou,(select avg(b.hyouka) from iza2 as b where a.id=b.id) as hyouka from iza AS a;
同じ文字列が複数個有る場合を想定して作ってみました。 SELECT id ,(LENGTH(value)-LENGTH(REPLACE(value,'abc','')))/3 +(LENGTH(value)-LENGTH(REPLACE(value,'fg','')))/2 +(LENGTH(value)-LENGTH(REPLACE(value,'vw','')))/2 +(LENGTH(value)-LENGTH(REPLACE(value,'pqr','')))/3 +(LENGTH(value)-LENGTH(REPLACE(value,'xyz','')))/3 AS 個数 FROM テーブルＡ ORDER BY 2 DESC
マニュアルによれば、not null条項が存在し defaultが存在しない時は、「defaultを決定できない」とあります。 show fields でのdefault 条件表示に際しては、「決定できない」を意味するものとしては、null以外に適当な表現がない　ということでしょう。空文字列とも違うので。 明示的に not null default null とした場合も「default は存在しないから、必ずnull以外の値を指定せよ」という意味になります。 insert時にそのカラムを省略できないということです。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/data-type …
DROP DATABASE `データベース名` バックスラッシュで囲んでみてください
こんばんは。 ＞コーギーが人のように思えてきました。 これは雑種です・・・。 バセンジーが入ってるようですが、よーわからん・・・。 保健所行きを貰ったので。 ＞ブラウザに出す場合はいかなる例外もなくhtmlspecialcharsを通す。 ＞というルールは守ったほうがいい気がするのですが 表示エリアはそうですね。 テキストエリアは例外扱いできないの？？？ そんなこと言ったら、<pre>はどーするの？
だいぶあいまいですね・・・ ・結合条件がよくわかりません ・f2がf3より優先するだけ？ ・seqはつかわなくてよい？ ざっくりこんな感じになりますね select f1.key1, coalesce(f2.item,f3.item) as item from f1 left join f2 on f2.key1 = f1.key1 and f2.key2 = f1.key2 left join f3 on f3.key1 = f1.key1 and f2.key1 is null
「厳密な小数点以下の計算の場面」としては、お金の絡むところ（税率とか、月賦計算とか）は、特に、厳密さが要求されるでしょう。面積計算くらいなら許容範囲かと思うけど。 厳密の意味は、実数計算が、２進数のまま行われるため、10進数の0.2や0.1などは２進数では無限小数となり有限桁で切り捨てられることからくる誤差のことで、MySQL でも、floatやdouble型で保持してしまうと同じ事が起こります。 土地の価格って結構桁数多いから、１円２円の誤差が拡大しやすいです。 以下の「丸め誤差」などを参考にしてみてください。 http://www.kentei.ne.jp/quali/column/knowhow/030 … 実用ではなく学習用なら、まずはSQLiteで作ってみてもよいかもしれません。学習が進んできてから乗り換えても、基本構文は同じSQL文ですから、MySQLの拡張性が高い部分（型に厳密なところなども）を追加学習すればいいので。
更新、登録処理の負荷が高い場合は主にI/Oがボトルネックになる傾向があります。 I/O周りの強化が主に考えられると思います。 LOGファイルの分散配置や、RAID1+0の導入、SSDの利用などです。 ただ、やみくもにやっても費用対効果の問題がありますので、まずはシステムの負荷状況をきちんと調べるところから始めることをお勧めします。
元のtable にどんなデータがあって、どういう数値がでればよいのか 前回答者さんのSQL結果のどの辺が目的と違うのか、詳しく補足してもらわないと。 質問文自体も、フィールドと行を勘違いしてるような文章なので、意味がとれないし。 もしかして「重複がないもの」じゃなくて、重複してるものは１件で数えたいの？ ところで、MySQL の versionは？version古くてサブクエリでエラーでしたってわけじゃないよね。
Windows環境であればxamppなどで対応すればよいかもしれません。
こんにちは。 ＞datadir=C:/software/study/mySQL/data ＞という行を追加することによって このパスは合ってますか？
今回の質問ではstatusも表示対象なので、少し厄介なSQLとなっています。 statusを表示しないのであれば次のようなSQLとなります。 SELECT MAX(id),phonenumber FROM テーブル名 GROUP BY phonenumber ORDER BY 1 このSQLのstatusを追加した場合、そのstatusは何を表示するのか未定となり、通常はエラーとなります。（ただし、MySQLの場合はエラーとならないようです） つまり、GROUP BY以下に無い列はMAX等の集計関数を使用しないと文法上おかしな事になります。 そこで最初のテーブルでstatusも含めて対象行を表示します。 WHERE以下が無い場合は、当然全て表示されてしますので、ここで同じphonenumberを持つ 「WHERE T1.phonenumber=T2.phonenumber」行で最大のidを持つ「MAX(id)」idに一致する「WHERE id=(...)」行のみを選択させます。
質問の趣旨がよくわからないのでなんともいえませんが PHP環境があってMySQLにクエリをなげるだけならphpMyAdminが標準でしょう SQL文自体はただのテキストですからメモ帳でも書けます
## なにもかもトリガーでやるのがいいとは思いませんが。 ## ということで蛇足というか前提を先に。 まず、累計の履歴は、 select sum(d4_buy_stock_volume) from buying_stock where d2_usr_id = '入力されたUSER ID' and d3_stock_id = '入力された株のID' and d5_取引日（テーブル構成にないけどないと困るはず） <= '入力された日付' で取得できるはずです。 ・・・テーブルに持つ必要はないはずということです。 ↓ しかし、画面上に日付別に一覧を出したときに、いちいちこのselect文を実行するのは処理が遅くなる ということであえて、テーブルを作りたいということなら、作ってもいいとは思います。 ただし、buying_stockに該当する項目を持ってもかまわないと思いますが。 で、持つとどうなるか。 　例　 　1/18 +3000株　累計3000株 　　 　　1/19 +5000株　累計8000株 　　 　　1/20 +5000株　累計13000株 　　 　　1/21 -2000株　累計11000株 で、1/19のデータを+2000株に変更すると、 　例　 　1/18 +3000株　累計3000株 　　 　　1/19 +2000株　累計5000株←変更 　　 　　1/20 +5000株　累計10000株←変更 　　 　　1/21 -2000株　累計9000株←変更 1/19以後の全レコードを修正しないとだめです。 つまり入力時に負荷をかけて、出力時の負荷を軽減していると思ってください。 （入力が非常に多く出力が少ないならしないほうがいいということです。 　但し、入力時は、1件処理するだけだが、出力時は全件するので全体として処理速度向上に 　成功することも多々あります。） さて、本題ですが、 修正・削除がない（常に最新の日付で処理を行う。つまり、修正は、差の数量を最新日付で入力。 削除は、-の数量を最新日付で入力）というのなら、 now_stockにトリガーを作るほうが簡単。 ★質問文にあるトリガーのプログラムがそうですね。 （上記前提が違うなら、かなり変更必要。・・・補足かお礼にでも書いてください。） 但し、データベースがトリガーで登録・更新・削除されたレコードに対してトリガーが起動できること が条件となりますが。 (Oracleはできる。SQL ServerはDBの設定によりけり。MySQLは調べていませんけど) ・・・動いていそうなのでこの条件はＯＫなのでしょう。 ただし、トリガーからトリガーを起動するのは、システムが複雑になるので 決してお薦めではありませんが。 で、質問の回答ですが、 >g3_stock_nameとg4_latest_stock_volumeがNULLになってしまいます。 NULLになりますか？（ならない気もするけど・・・） ひょっとしたら、 CREATE TRIGGER a_ref0 BEFORE INSERT ON buying_stock でinsertかupdateして CREATE TRIGGER a_ref000 BEFORE INSERT ON now_stock を呼び出しているからかもしれません。 BEFORE INSERTなので、buying_stockのInsert前の状態で、a_ref000が呼び出されます。 ということは、now_stockのNEW.xxxは不定になってしまうということかもしれません。 両方とも、AFTER INSERTにして試してみてください。 なお、INSERT INTO ... ON DUPLICATE KEY UPDATE ... でトリガーを起動しているので BEFORE INSERTなら、ON DUPLICATE KEYであろうがなかろうが実行されるようですが、 AFTER INSERTは、ON DUPLICATE KEYの時には実行されません。 したがって、同じ内容で、AFTER UPDATEでもう一つ作る必要があります。 （MySQLは、On Insert,Update・・・がかけない様子。Versionによるのかもしれませんが。） あと、蛇足ですが、 ・・・ INSERT INTO stock_history SET g2_stock_id=NEW.f2_stock_id,g3_stock_name=NEW.f3_stock_name,g4_latest_stock_volume=NEW.f4_latest_stock_volume; END としていると INSERT INTO now_stock SET　・・・ON DUPLICATE KEY UPDATE ・・・ で、ON DUPLICATE KEYのほうで呼び出されたときに、２個レコードができてしまうと思いますが。 日付とstock_idでユニークキーを作るかプライマリキーにしてon duplicate書いたほうが いいと思います。
>ユーザを他のホストからのアクセスも許可して mysql_connect すると >接続出来るのですが、同じサーバー内で localhost から試すと以下のようなエラーが出ます。 えーと、外部から接続できて同じサーバー内からは接続できないという意味でよろしいでしょうか？ mysqlデータベースのuserテーブルにきちんとアクセス権限を設定していますか？ （flush privilagesも含めて） >$link = mysql_connect(':/var/lib/mysql/mysql.sock', 'user', 'pass'); $link = mysql_connect('localhost', 'user', 'pass'); じゃだめなんですか？
SQLの性質上できない
マニュアル読みましょう。 http://jp.php.net/manual/ja/function.mysql-fetch … 「連想配列、添字配列、またはその両方として結果の行を取得する」 デフォルトは、両方です。つまり一つのカラムについて、カラム名キーと数値添え字キーと２つ取得されます。var_dump($cols) してみるとわかります。 join 用なら、数値添え字のみで十分なので、mysql_fetch_arrayの第２引数に MYSQL_NUM を指定するか、mysql_fetch_row()を使うとよいです。
なにかのプログラムからMySQLにアクセスしていますか？ とくに先頭の0は消えませんが・・・ create table t_collo (id int ,pos varchar(50)); insert into t_collo values(1,'x'),(2,'x'),(3,'x'); update t_collo set pos='001110000' where id=1;
おそらくtypoですね 2点確認してください。 (1)「user」と「usr」を打ち間違えています (2)「d3_latest_volume」の後ろに全角スペースが入っています エラーメッセージを見る限り(2)がとくに怪しいですね。 また競合するidをupdateしても仕方がないので INSERT INTO a_lateststock SET d2_usr_id = NEW.a2_usr_id, d3_latest_volume = NEW.a3_buy_stock_volume ON DUPLICATE KEY UPDATE d3_latest_volume = d3_latest_volume + NEW.a3_buy_stock_volume; で十分では？
仮にこうだとして・・・ create table A(id int,a1 varchar(20),a2 varchar(20)); create table B(id int,b1 varchar(20),b2 varchar(20)); create table C(id int,c1 varchar(20),c2 varchar(20),c3 varchar(20)); insert into A values(1,'あ','い'); insert into B values(1,'う','え'),(1,'お','か'); insert into C values(1,'き','く','け'),(1,'こ','さ','し'); idで結合するのはこうですね select A.id,a1,a2,b1,b2,c1,c2,c3 FROM A inner join B on A.id=B.id inner join C on A.id=C.id; 当然結果はこうです id、a1、a2、b1、b2、c1、c2、c3 1、あ、い、う、え、き、く、け 1、あ、い、お、か、き、く、け 1、あ、い、う、え、こ、さ、し 1、あ、い、お、か、こ、さ、し ここからなんでもいいのでとりあえず1行抜き出せばいいのならLIMIT 1です select A.id,a1,a2,b1,b2,c1,c2,c3 FROM A inner join B on A.id=B.id inner join C on A.id=C.id LIMIT 1; ただし、[id、あ、い、う、え、き、く、け]がほしいなら そのデータを特定するなんらかのロジックが必要です。 データベースでは出現する順番は必ずしも登録順ではありません。
>'表'でもInsはできないものなのでしょうか。 表は5C問題の代表格ですね プログラムで処理できないならUTFの設定を最初からSJISにしてみては？ そうでない場合は手で「\」をつけて「表\」のようにエスケープしてください まぁ常識的にはMySQLをSJISで運用はありえないのですけどね 逆のアプローチとしてはcmd実行後chcp 65001するとかあるんですが これもフォントの指定をしたりなんだりで結構面倒です
すなおにやればこんな感じでしょうか？ //準備 create table tiikiA(id int,name varchar(30)); create table tiikiB(id int,name varchar(30)); create table kenA(id int,name varchar(30)); create table kenB(id int,name varchar(30)); insert into tiikiA values(1,'東北'),(2,'関東'),(3,'中部'),(4,'九州'); insert into tiikiB values(1,'関西'),(2,'中国'),(3,'四国'),(4,'北陸'); insert into kenA values(1,'青森'),(1,'岩手'),(2,'埼玉'),(2,'千葉'),(3,'愛知'),(3,'福井'),(4,'鹿児島'); insert into kenB values(1,'大阪'),(2,'鳥取'),(3,'徳島'),(4,'福井'),(4,'石川'); //実行 select if(count(*)>0,1,-1) as kekka from (select kenA.name from kenA inner join tiikiA on tiikiA.id=kenA.id and tiikiA.name='中部') as subA inner join (select kenB.name from kenB inner join tiikiB on tiikiB.id=kenB.id and tiikiB.name='北陸') as subB on subA.name=subB.name;
これはホントにMySQLに関する質問でしょうか？ ＞ページを読みこんだ都度ページが作成されているようではなく、あらかじめ作られたページを読み込んでいる このサイトについてはよくわかりませんが・・・ アクセスのたびに動的に更新する方法でもいけそうな気がしますが 過負荷をさけるために定期的にログを解析して更新しているのかもしれません。
>【目的】 >ユニークではない`A`.`hoge`の重複を省き、かつ、`kekka`が最大のものを選びたい。 で、なにが出したいのでしょう？ >Aテーブル 例 |key|hoge|int1|int2| |111|hhhh|5234|1000| |222|hhhh|9999|1111| |333|jjjj|8888|2222| |444|kkkk|3333|1111| |555|kkkk|6666|2222| とあったら、 SELECT `A`.`key`・・・ は、 111とでる？222とでる？（2222を出したいのですかね。） 次に333とでるのはいいとして、 4444と5555は両方でる？4444がでる？5555がでる？（どちらも最大値）。 `B`.`hogehoge`もおなじ。 |key|hogehoge| |111|hhhhhhhh| |222|iiiiiiii| |333|jjjjjjjj| |444|ssssssss| |555|tttttttt| として、hhhhhhhh？iiiiiiii？ ・・・ 4444と5555を両方だすなら、 SELECT `A`.`key`,(`A`.`int1` / `A`.`int2` ) as `kekka`, `B`.`hogehoge` From `A` left join `B` on `A`.`key` = `B`.`key` where `A`.`int1` / `A`.`int2` = (SELECT MAX(`X`.`int1` / `X`.`int2`) From `A` as 'X' where 'X'.`hoge` = `A`.`hoge`) 5555だけを出したいなら、 SELECT `A`.`key`,(`A`.`int1` / `A`.`int2` ) as `kekka`, `B`.`hogehoge` From `A` left join `B` on `A`.`key` = `B`.`key` where `A`.`key` in (SELECT max(`Y`.`key`) From `A` as 'Y' where `Y`.`int1` / `Y`.`int2` = (SELECT MAX(`X`.`int1` / `X`.`int2`) From `A` as 'X' where 'X'.`hoge` = `Y`.`hoge`) group by 'Y'.`hoge` ) あるいは、 SELECT `A`.`key`,(`A`.`int1` / `A`.`int2` ) as `kekka`, `B`.`hogehoge` From `A` left join `B` on `A`.`key` = `B`.`key` where `A`.`key` in (SELECT max(`Y`.`key`) From `A` as 'Y', left inner join (SELECT 'X'.`hoge`,MAX(`X`.`int1` / `X`.`int2`) as `kekka` From `A` as 'X') as 'Z' on 'Z'.`hoge` = 'Y'.`hoge' and `X`.`int1` / `X`.`int2` = `Z`.`kekka` group by 'Z'.`hoge` ) 4444だけを出したいなら、 max(`Y`.`key`) をmin(`Y`.`key`) にします。 ※MySQLは環境ないので未検証です。 >１）根本的に足りてない知識は何でしょうか？ ・group byしたときの考え方 select A,B,max(C),min(D) from Q group by A,B というSQLで、max(C)とmin(D)は別のレコードの値がでてくることや、 group by句に含まれない項目は、集計用の関数(MaxやMin、Sumなどなど)を使わないと 値が特定できないので指定できない（エラーになる）こと ・In句の書き方 項目名 in (Select・・・)です。in(Select・・・)では構文エラーです、 というより何と比較するかわかりませｎ。 ・副問い合わせの使い方 上のを例としてみてください。 他。 ## こういう質問の仕方をされると、 ## つい「ＳＱＬの知識」って書いてしまいたくなるので ## 「どういった関数や機能を使ったらいいですか？」とかにしたほうがいいのでは？ ## と思ってしまいます。 >２）上記の考え方で間違っていませんか？ 上記を参照。 仕様の提示にも漏れがありますが、max(`kekka`)を選んでも、それではうまく特定できない というところが違ってました。 >３）・・・略。
モバゲーについてはNo.1さんのご回答で十分かと思いますので、 一般的な話で一つ。 MySQLに限らず、単純なWebシステム処理の負荷分散自体は実はそれほど難しくありません。 （あくまで構成的な概念としては、ですがｗ） 最近の大規模システムの負荷分散だと以下のような感じです。 １、ロードバランサ下にWebサーバ、APサーバ、DBサーバを複数配置 ２、Web:AP:DB = 2:2:1くらいで上記を揃え、各層間でロードバランシングします ３、ストレージをRAID10のSANで複数構成し、処理系とは別ネットワークで同期します 更に最近でしたら、これをクラウド上で構築して、 各ノード数を随時調整できるようにしているとかでしょうかね。 但し、クラウドの場合は単純にDBサーバを増やしても物理ストレージが増える訳ではないので I/O負荷によるボトルネックはどうしようもありませんけども。 まぁ要は MySQLの能力云々ではなく、どのDBであっても 全体のシステム構成で負荷をなんとかしているということです。 単純に処理速度の比較であれば、完璧にチューニングされたOracleには敵わないものの チューニングしていない状態であれば大差無かったと思います。
アドレスが変わる場合は、事前にちょっと細工が必要なようです。 http://webaccess.blog13.fc2.com/blog-entry-43.html こんな感じの操作は行いましたか？
my.ini の設定は、[mysqld]セクションは、defaultでは、utf-8 の文字コードで格納するという意味。tableやカラムごとに文字コードの変更も出来るけど、いちいち指定しないときは、server設定が使われる [mysql]セクションは、コマンドラインクライアントのmysqlで使用する文字コードの指定。 しかし、windows のコマンドプロンプトは、shift_jis を使っており、shift_jis以外の文字は、化けるし、MySQLへデータを送りつけるときもshift_jisなので、そのままだと、MySQL側で、utf-8ではない異常なコードと認識されて ?文字にされてしまう。 そこで、 SET NAMES SJIS; 「コマンドプロンプトから送付するデータはshift_jisだよ適宜変換して格納してね、また、こっちへ返すデータはshift_jisに変換しておいてね」という命令になる。 windows 用なら、my.ini の[mysql] の部分は、常にコマンドプロンプト用なので、以下のように書き換えておくと、MySQLサーバーへアクセスするたびに、SET NAMES SJIS; を打たなくても済むようになる。 [mysql] default-character-set = sjis >質問2：PHPでも、SET NAMES SJIS;　を使用する 同じです。phpのソースファイルがshift_jisで保存されているなら、必要です。 でも、shift_jisでプログラムを保存するともっとややこやしい問題が発生するので、utf-8でファイル保存するのがベストでしょう。 それでも、windows版phpだと、 set names utf8; の発行が必要だったりしますけど。 参考　MySQL　多バイト文字問題 http://www.mysql.gr.jp/frame/modules/bwiki/?FAQ# …
>今回の処理で、 >wp-config.php を再設定しないで、mysqlのユーザーの復活だけをしていれば、 >無事元の記事を表示できたのでしょうか？ MySQLに接続ができなくてエラーになってるだけならユーザーを作りデーターベースの権限をつけて wp-config.php にそのユーザーを設定すればいいと思います ※元のユーザーならそのままいけるはず >あるいは、wp-config.phpの再設定で、 >mysqlの接頭語を変えてインストールしていれば、 >データーベースの移動で復元できたのでしょうか？ この場合はした事ないのですが、インストール後wp-config.phpで元の接頭語に変える事で行けそうな気もします 上の作業をする場合でもMySQL上でバックアップとWordPressのバックアップはしないともしもの時復元ができなくなります 設定、記事情報はMySQL　画像等は wp-conten/　以下にあります 私は普段からWordPressの全ファイルとMySQLの定期バックアップをしています
DATEDIFF を使って現在日との差を取って、それが-7～0のものを取得する方法も有りますね。 http://dev.mysql.com/doc/refman/5.1/ja/date-and- … 例) --------------------------- SELECT * FROM table_a WHERE DATEDIFF( STR_TO_DATE(CONCAT(yea, '/', mon, '/', day), '%Y/%c/%e'), CURRENT_DATE ) between -7 AND 0 ------------------------------ 現在日の前後7日以内でしたら、絶対値が7以下になりますね。 例) --------------------------- SELECT * FROM table_a WHERE ABS(DATEDIFF( STR_TO_DATE(CONCAT(yea, '/', mon, '/', day), '%Y/%c/%e'), CURRENT_DATE )) <= 7 ------------------------------
こんな感じでしょうか。 UPDATE テーブル名,(SELECT id,(SELECT COALESCE(sum(P.入金),0)-COALESCE(sum(P.出金),0) FROM テーブル名 P WHERE (P.日付<A.日付) OR (P.日付=A.日付 AND P.id<=A.id) ) AS zzz FROM テーブル名 A) AS tmp SET テーブル名.残高=tmp.zzz WHERE テーブル名.id=tmp.id;
空文字列です。NULLではなくINSERT時に長さ0の文字列をセットしたものにヒットします。 「<> ''」では長さが1以上の文字列でかつ、NULL値以外のものがヒットします。 ちなみにオラクルでは空文字列をNULLと同一にみなすので注意が必要です（<>では比較できません）。 <>はNOT EQUALですね。
>A列に、B列～E列の結合した文字列を吐き出して、Likeで検索すれば一括検索が出来る。 もしどうしてもやりたいならそれぞれのデータ型を文字列に変換しつつ concatでつなげばいいでしょう。 create table tableA (No int,name varchar(30),birth date,address varchar(200)); insert into tableA values(1,'伊藤','1970-01-01','秋田'),(2,'山形','1950-01-01','宮城'),(3,'市川','1960-01-01','新潟'); select concat(cast(No as char ),char(0),name,char(0),date_format(birth,'%Y/%m/%d'),char(0),address) as colA from tableA; →数値であるNoはcharにキャスト、date型のbirthは日付フォーマットした文字列に、 セパレータにchar(0)をつかって文字のつなぎの誤作動を調整 問題点： ・型を変換してまで検索対象にするのは効率がよくない ・セパレータによってはつなぎの部分が誤作動する可能性がたかい ・そもそもインデックスが全く考慮されていない >解決方法 普通に一つ一つのカラムについてLIKEで検索し、それぞれをORでつなぎます。
検索で見つかる下記情報でいけるかと。 http://oshiete.goo.ne.jp/qa/3332359.html ANo.2のyamabejpさんのクエリでもOK。 (こっちのほうが効率よいみたい) mysql-server 4.1.21 on linux debain squeeze 6.0.3で確認。
64bitの選択肢があるならそちらを選ぶだけで解決することはおおいでしょう ramディスクやssdを検討する手もあるかと思います
＞会員の場合、受注テーブルに会員コード(会員を一意に表す)があれば、それを元に会員テーブルから発送に必要な情報を取り出すことができます。 典型的なダメな設計の例ですね。 この分では、受注テーブルとやらに商品IDと数量でも持たせた上で、リンクでデータを引っ張ってきている設計になっているのではないでしょうか？ そうなっていたら、ダメダメダメの100乗ですね。 DBを設計する場合、リレーショナル(リンク、リンケージと呼称する場合もある)させなければならないデータと、リレーショナルさせてはいけないデータの区別が大切です。 設計ルール1：『お客様の目に触れる書類はリレーショナルさせてはいけない』です。 過去データを確認したい場合、過去データを再発行したい場合にどうするのでしょう？ たとえば、宅配伝票を汚してしまい再印刷の必要があるとしたら？ ユーザがその途中で住所を変更したとしたら、受注時とは別の住所へ発送するという事になってしまいます。 もし商品テーブルともリンクで繋いでいたら、商品金額を変更した場合、受注時の金額と違う金額をユーザーに請求するような事になってしまいます。 書類を出力(この場合は発送伝票や納品書)するという事は、再度まったく同じ書類を出力できるように、データをリレーションで引っ張ってくるのではなく、テーブルに固定データとして登録しなければならないという事です。 それが設計ルール1。 上記を踏まえると、受注テーブルに発送先の住所、郵便番号、宛名、電話番号が必要となるのは当然。 それなら、非会員ならどうデータを登録すればなどと悩む必要など存在しない。 また、どうせ登録内容を増やすなら自宅に送付のみだけではなく、贈答用に届け先を別途入力可能にすることも、発注者(贈り主)の入力も可能にするなども考えられる。 業務の流れは書類の流れなので、書類ベースでシステムを設計すれば必要なものが見えてきます。 宅配便の発送伝票を眺めるだけで、希望のお届け日、希望のお届け時間が必要だなどという事も判ります。 これは設計ルールというよりも、コツでしょうかね。
SELECT * FROM テーブル WHERE LENGTH(フィールド)=(SELECT MAX(LENGTH(フィールド)) FROM テーブル)
エンジンの特性なので対応方法はないでしょう
Time型の仕様では。 http://dev.mysql.com/doc/refman/5.6/en/time.html >解決策 データが範囲内に収まるなら、timestamp型にcastして秒数計算するとか、 おさまらないなら、日付部と時刻部に分割して差を計算してから秒数として合わせるとか。
>どのような記述をすれば正常に反映されますでしょうか？ 上記のソースだとcountをUPDATEした値をDBに格納しただけで、その値をDBから 取り出して、つまりSELECTしていないのが原因ではないでしょうか？ なので上のソースでmysql_query($SQL);を実行してSELECT文を発行してcountを取り出して 画面に表示すればOKかと思いますよ。
utf8_unicode_ci による照合が気に入らないならutf8_general_ciを 利用してみてはいかがでしょうか？ 前者はひらがな・カタカナや濁点などのゆれを吸収しますが、 後者は完全一致です
SELECT * FROM テーブル名 WHERE (フィールド名１ LIKE '%$search%' OR フィールド名２ LIKE '%$search%' ) AND BETWEEN 期間1　AND　期間2 LIMIT 0, 5; でしょうね
＞仮に将来的に３００万件まで増えた場合はどうするのが正しいのでしょうか。 それにしても今回の案件についてはymdにわける意義はないですね date型でデータをもってインデックスがはってあれば 所定日を特定するのは必要十分です ymdで分けて意味がでてくるのはたとえば2011年12月のみを対象とするなどの場合 date型をつかうとbetween処理になるのでrangeでの検索になりますが year=2011、month=12で行えばrefでの検索になり効率的です explainについて学習するとよいかもしれないですね
ひとつ解決の案として、テーブルのパーティショニングを検討してもいいかもしれませんね。
MySQL特有の記入方法のようですので、あまりお勧めはできませんが、１個のUPDATEで複数のテーブルを更新することは可能です。 たとえば UPDATE ATABLE A,BTABLE B SET　A.TYPE=1,B.TYPE=1 WHERE A.ID=B.ID AND (A.ID=2 OR B.ID=3) です。 ただし、２個のテーブルの結合結果に対する結合テーブルに対しUPDATEするので、思わぬ動きをするので注意下さい。 ID=2がATABLEとBTABLEの両方に存在すると、BTABLEの内容も変わってしまう。 ID=3がBTABLEにしかない場合は結合出来ないのでB.ID=3のテーブルの内容は更新されない。
こうですね select a.supplier,b.skuno from tableA as a left join tableB as b on b.supplier=a.supplier and (b.supplier,b.update_at) IN (select supplier,max(update_at) as update_at from tableB group by supplier) where user=1
もしどうしても今のデータの持ち方をしたいのであれば create table hoge(id int,col1 int ,col2 int ,col3 int ,col4 int ,col5 int ,col6 int); insert into hoge values(1,3,1,0,5,4,12),(2,2,5,6,0,1,8); ここで0,1,5に合致するのであればこんな感じ select id from ( select id,col1 as col from hoge union all select id,col2 from hoge union al1 select id,col3 from hoge union all select id,col4 from hoge union all select id,col5 from hoge union all select id,col6 from hoge ) as fuga where col in (0,1,5) group by id having count(*)=3 そもそもが・・・ はっきり言えばデータの持ち方がわるい たとえばcol1とcol2は、優先順位や属性になにか違いがあるのでしょうか？ colが同列のデータであればデータは横ではなく縦にもたなくてはいけません 最初からこうもっておけば create table hoge(id int,col int); insert into hoge values (1,3),(1,1),(1,0),(1,5),(1,4),(1,12), (2,2),(2,5),(2,6),(2,0),(2,1),(2,8); これだけで済みます select id from hoge where col in (0,1,5) group by id having count(*)=3 これをidごとに表示するならこんな感じ select id,group_concat(col) from hoge group by id
select (select count(*)+1 from hoge as t2 where t2.id< t1.id) as rank from hoge as t1 where name='山本'
＞mysqlの文法に関する質問です と言うのが、そもそも違う気がする。 ＞SQL文として利用 そもそもSQL文とは・・・ http://search.yahoo.co.jp/search?b=1&n=10&ei=UTF … http://e-words.jp/w/SQL.html http://sql.first-database.com/sql.html http://www.weblio.jp/content/SQL などと説明されている通り、 http://www.atmarkit.co.jp/fnetwork/tokusyuu/01sq … なので、これらか検索したり、調べても当然みつからない。 あなたが質問している内容は、No1～NO３で回答したとおり、DB個別の内容です。インタプリタとも言うべき（定義としては違うが）、SQLと言うより、インラインスクリプト、インタープリターレベルの話です。なので、MySQLのリファレンスを見ればいいだけの話。 http://dev.mysql.com/doc/refman/4.1/ja/variables … などにあるように、検索された値や、ユーザーデーター（スクリプト設計者の）の格納先として、「ユーザー変数」なるものが設定できる。 http://dev.mysql.com/doc/refman/4.1/ja/language- … （元の章） この辺のサイトにはアクセスと、他のRDBに関するSQLについて記述されている。参考にするといいでしょう。 大事なのは、DB上のトランザクションはなるべく小さくする。 これが鉄則です。これによって、DBへの負荷が小さくなり、次のDBに対するアクションもしやすくなり、すぐ受け付けてくれます。複雑な事は、クライアントツール行う。ビューなど沢山活用する。です。 これらをまもらないと、クライアントツール側で、よくデッドロックが発生します。DB側にも起きます。 http://www.pursue.ne.jp/jouhousyo/SQLDoc/Abort_S … 上記のリファレンスが完璧ではないとしても、DB側で用意されている物で、できないのであれば、SQLで工夫する（No4さんのように）。それが、まず第一。 しかし、それも必ずしもいいとはいえない。目的が、ビュー作成なら、それでもいいかもしれないが、何かシステムを作る場合、ビルドアップ、バージョンアップなど、状況の変化に対応しきれない状態が多々出てきます。 プログラム言語のカプセル化とよく似ています。 数を沢山こなせば分かりますが、カプセルかは、単純であれば、在るほど、メンテナンスが容易で、使い回しがかなり効きます。 前述のインタプリターと言う点では http://dev.mysql.com/doc/refman/5.1/ja/stored-pr … にあるように「ストアドプロシージャとファンクション」などのように、どのDBにも内部インタープリターが用意されていることが多い。動作はビューと同じと考えればいい。SQLではなく完全にコマンドを羅列したスクリプト。これをSQLと、その結果を織り交ぜて、ビューとして構築できる。 http://dev.mysql.com/doc/refman/5.1/ja/call.html （例） もっとも良く活用されているのがOracleとマイクロソフトのSQLServerのインタープリタ。アクセスだとVBAとかのレベル。 つまり、前の結果を保存し、他の検索や、登録、削除に、生かしたい。と考えるのは、誰でも考える。単純なものなら、SQLレベルで達成できる場合もあるが、ほとんどがインタープリターによる設計が必要。 早いうちに、「ストアドルーチン（プロシージャとファンクション）」を把握しておくと、SQLで苦労する必要はない。 もっと言えば、それらのSQLやDBを使う側のクライアントソフトをどうするのか、考えておくことが必要。ずーとMySQLのコマンドラインツールで作業して、喜んでいるのか？　と言うことです。
ちなみに今読み解ける範囲ではこんな感じでしょうか？ SELECT i.date_from, i.date_until, i.plan, sum(d.pv) as pv, sum(d.applicants) as applicants, avg(d.occupation_ranking) as occupation_ranking, avg(d.newly_ranking) as newly_ranking, price FROM ad_info as i LEFT JOIN daily_access as d ON date(d.created_at) BETWEEN i.date_from and i.date_until GROUP BY i.id
おっと、「TIMEDIFF() > '00:10:00'」が条件だから、dがNULL時はNow()に20分ほど足す必要がありますね。
SQL文でFROMのあとが1となってますが「1」というテーブルって作成できましたっけ？ 出来たとしても、普通そんな名前にしないですね。 また何だかSQLを２回実施してるようですが同じ"disp"に設定してるのはなぜ？
>（優先されるのはオートインクリメントIDが小さいから当然ですが・・） というのは本当かな？ DBに関する一般論では、select文で、order byをつけなければ出力される順番は不定 （というかどういう順番で出てきてもいいはずですが。） 極端なことをいうと、毎回違う順番で出てきても正しいのですが。 （mySQL独自の仕様で、出てくる順番を規定しているならその仕様をみてください。） ということで、limit 5を使っているのにOrder byを指定していない時点でおかしい。 ということがいえます。 >（優先されるのはオートインクリメントIDが小さいから当然ですが・・） ということなら、order by オートインクリメントID desc とする考え方もあります。 ⇒お薦めできない方法です！ 会員の初期値的な設定レコードがオートインクリメントIDが小さいのは当然という前提になりますが、 初期値を修正したときに、delete&insertで処理すると、この状況が崩れるからです。 ということを考えて、 order by case when `hoge` is null then 0 when `hoge` = '1' then 1 else 0 end とかしておくと、お望みの順番になるかと。
>insert into phonenumber(phonenumber)values("0901111111") PHPなどプログラムで処理しているならおそらく クォーテーションのつけわすれでしょうね insert into phonenumber(phonenumber)values(0901111111) とすると、数値として一度評価されるので。
たんにログを冗長にとりつづけるならロガーで十分ですが 集計を考えるならファイルでの管理は考えられないですね 頻度が高い場合はHEAPで処理するとか、デバイスをSSDにするとか いろいろスピードアップはできますが極度に頻度が高くなると 実はMySQL自体がボトルネックになるケースもあります NoSQLなど別の切り口もありますが、HandlerSocketなどMySQLの拡張で 対応することもできるようです。 この辺のオーバーヘッドが気になるころには実は個人であれこれ 考えるレベルではなくなっている状況なんですけどね
SELECT count( * ) FROM (SELECT `id` FROM `hoge_table` GROUP BY `id` ) AS `alias_hoge` とりあえず、こんな感じでもやりたい事は実現できると思います。
まぁロジックはいろいろあるでしょうけど たとえば1秒前の日付が異なる日付とか・・・ 仮にdatetimeカラム名をdtとすれば SELECT * FROM テーブル WHERE not day(dt)=day(dt - interval 1 second)
＞insert into tb1(number, name, age) values(A104, '渡辺', 23); (1)重複エラーを防ぐにはIGNOREを指定する（上書きされない） (2)テーブル名やカラム名はバッククォートで囲む (3)値はシングルクォートで囲む の対策でだいぶエラー頻度は減ると思います。 INSERT IGNORE INTO `tb1`(`number`,`name`,`age`) VALUES('A104','渡辺', '23');
これはMySQLじゃなくコマンドプロンプト(cmd.exe)の問題では？ CONIME.EXE を検索して自分に合ったサイトを見てください。 それとも単に Alt + 半角/全角漢字 で日本語ＦＰを起動していないだけどか。。。。
パスが通っていないだけでは？ インストールしたフォルダはわかりますか？ 「cd c:\xampp\mysql\bin」みたいにフォルダを移動してから 実行してみてください
ホスト名:mysqlサーバーが動いているコンピュータ名です。JSPコンテナ（tomcatなど）が動いているコンピュータと同一であれば「localhost」で構いません。 データベース名:CREATE DATABASEで作成したデータベース名です。テーブル名ではありません。
＞＞内部的にUTCをPCのシステム設定を読み取って変換している ＞っていうのは、具体的に、どの時点で何をどうしているのでしょうか？ WindowsでもLinuxでもOSの設定にタイムゾーン情報があります。mysqlサーバーがクライアントからの問い合わせがあった時点でUTCの時刻情報にタイムゾーン情報を加えてクライアントに返していると思います。 追記するとmyisamの16進ダンプですが、どうやらファイルヘッダーにファイル作成のエポック時を設けて、各レコードにはそれから経過秒数を記録しているようです。
> うーん。2ch規模のI/Oを捌こうと思ったら > DBの分割が必要そうですかね というか、スレッドを1レコードにするとレスがつくたびにレコード更新が起こります。2chのように頻繁にレスの追加がされるものだと、1スレッドにつき数秒間に1回はレコード全体（数メガバイト単位）をDISKに上書き更新する必要が出てくるのです（チェックポイント）。 全部で数百の単位のスレッドがあると通常のストレージではI/Oが捌き切れません。
ああ、親子関係がネストするのはSQLの一番不得意なデータの持ち方ですね 問題点が２点 (1)もしAAAAA・・・というのがフォルダ名だとすると、フォルダ名でネストの判断する をするのは危険です。同じ名前のフォルダがあった時点でアウトです (2)分岐があったときどうしたいか書かれていません (1)については名前ではなくidで処理できます。 ただデータの持たせ方が間違えるとフォルダーがループしてしまう可能性があります それを防ぐにはルートからのネストを最初全部記載してしまう手があります。 |ID|FOLDER1|PATH| |--|----------|---------| |01|A1 |/ | |02|A2 |/A1/ | |03|A3 |/A1/A2/ | |04|A4 |/A1/A2/A3/ | |05|A5 |/ | |06|A6 |/A5/ | |07|A7 |/A5/A6/ | |08|A8 |/A5/A6/A7/ | |09|A9 |/A5/A6/A7/A8/ | |10|A10 |/A5/A6/A7/A8/A9/ | しかし、こうしてしまうと、フォルダの付け替えをしたときに それ以下の全てのpathを修正する必要がでてくるため工夫が必要です。 さらにつっこんで入れ子集合モデルという考え方でデータを 処理することもできますが、この構造をつくるのもそれなりに面倒です いずれにしろ複雑な処理なので真剣にやる気がなければ諦めた方がいいです。 http://www.makizou.com/archives/1616 http://www.geocities.jp/mickindex/database/db_tr …
select * from database1.table1 as t1 inner join database2.table2 as t2 on t1.col1=t2.col1 でいけないですか？
ヒントを書くより答えを書いたほうが楽なので、 SELECT * FROM ユーザーtable INNER JOIN 来店table ON 来店table.user_code=ユーザーtable.user_code WHERE address='北海道' AND visit_date ='2011/08/05';
ステータスを順位付けするテーブルを作るとよいかと /* 初期値 - 検証のためテーブル1のデータを増やしてます */ create table テーブル1(ID int,名前 varchar(20),日付1 date,日付2 date,ステータス1 int null,ステータス2 int null); create table テーブル2(ID int,名前 varchar(20),日付1 date,日付2 date,ステータス1 int null,ステータス2 int null); create table テーブル3(ID int,名前 varchar(20),日付1 date,日付2 date,ステータス1 int null,ステータス2 int null); insert into テーブル1 values(111,'あああ','2001/1/1','2001/1/1',2,2),(222,'いいい','2001/1/1','2001/1/1',2,2),(333,'ううう','2001/1/1','2001/1/1',null,null),(555,'おおお','2001/1/1','2001/1/1',2,2),(666,'かかか','2001/1/1','2001/1/1',null,0); insert into テーブル2 values(111,'aaa','2002/2/2','2002/2/2',0,null),(222,'iii','2002/2/2','2002/2/2',1,0),(333,'uuu','2002/2/2','2002/2/2',null,null),(444,'eee','2002/2/2','2002/2/2',1,1); insert into テーブル3 values(111,'あああ','2001/1/1','2002/2/2',2,2),(222,'いいい','2001/1/1','2002/2/2',1,2),(444,'eee','2002/2/2','2002/2/2',1,1),(555,'おおお','2001/1/1','2001/1/1',2,2); /* ステータスの順位付けテーブルを作る */ create table ステータス(status int null,rank int); insert into ステータス values(1,1),(2,2),(0,3) /* 集計 */ select ID,日付1,日付2,st3.status as ステータス1,st4.status as ステータス2 from( select ID,MIN(日付1) AS 日付1,MAX(日付2) AS 日付2 ,MIN(st1.rank) as r1 ,MIN(st2.rank) as r2 from ( select * from テーブル1 union all select * from テーブル2 union all select * from テーブル3 ) uni1 left join ステータス as st1 on uni1.ステータス1=st1.status left join ステータス as st2 on uni1.ステータス2=st2.status GROUP BY ID having r1 is not null or r2 is not null ) uni2 left join ステータス as st3 on uni2.r1=st3.rank left join ステータス as st4 on uni2.r2=st4.rank
PMAの場合、SQLを投げる際に照合順序あたりを参照して自動で SET NAMES ***を発行しているみたいですね コマンドラインで作業するときにご自身でSET NAMESを発行すれば 同様の結果を得られると思いますよ
こんな感じじゃない？ select distinct t1.製品ID from TB as t1 inner join TB as t2 on t1.製品ID=t2.製品ID and t1.使用部品=1 and t2.使用部品=2
ん～・・・こんな感じ？ select * from data_table order by case status when 'status1' then 1 when 'status2' then 2 when 'status3' then 2 when 'status4' then 3 else 4 end ASC , if(status='status1',`更新日`,`登録日`) DESC
>ステータスの優先順位が1>2>0>null なら1を最大値になるよう変換し、最後にもとに戻すとか。 （うまい方法が見つからなかっただけですが。。。） ---- SELECT * FROM テーブル1 ↓ SELECT ID, When ステータス1='1' then '10' else ステータス1 end as S1, ステータス2 as S2 FROM テーブル1 日付はDATETIME型ならmaxで問題ないと思います。
すでに指摘されていますが「そこで、画像が投稿された際に、アイテムtableの、「item_image」のカラムにitem_idと、user_idがマッチする【image_id】をupdateしたい」理由がよく分かりません。 アイテムtableに「item_image」列は不要だと思いますが、どういう使い方を想定されているのでしょうか。
>仮にDBが壊れたり DBが2つあればDBが壊れる確率は2倍になるので厳密にはリスクヘッジにならない。 これをするならこまめにバックアップして、壊れたらレストアする そもそもDBを二つたちあげてもレプリケーションの設定やらなにやらあって、 故障対応時にすぐにリプレースできるようなものをつくるのはかなり大変。 >盗難にあった場合 盗難を前提とするなら同じマシンでリプリケーションする意味は皆無。 別マシンでスレーブサーバーを立てるのが妥当 >mysqld単位でユーザーを管理できる いわゆるDB単位やテーブル単位でユーザー管理は可能。 いずれにしろ同じマシン内で複数のデータベースデーモンを立てる要件 としては動機づけが薄いですね。 同じマシン内でやるなら前回も書いたとおり仮想マシン環境をつくり 完全にセパレートする方がよいし、リスクマネジメントであれば マシンを分けて管理した方がよい
状況がよくわからないけど select * ,(CASE WHEN INSTR(`table`.`name`,'キーワード') THEN 1 WHEN INSTR(`table`.`keyword`,'キーワード')<>0 THEN 2 ELSE 0 END) AS MATCH from table where MATCH>0 として、MATCHが1ならname,2ならkeyword・・・とか？ ところで両方マッチする場合はどうしたいんでしょうね？
なにがINでなにがOUTなのか仕様が提示されていません もうすこし具体的なデータ事例をあげたほうが 適切な回答が得られると思います
> 結合させてみたのですが とのことですが，結合するための属性が存在しませんから，結合できませんよね。 具体的なデータ例としてはこんなイメージでしょうか。 ブログID　ブログカテゴリ　ブログサイト名　ブログサイトURL ――――＋―――――――＋―――――――＋――――――――― 00000001　データベース等　ragunasサイト　ttp://ragunas.example.com/ 00000002　技術者向け一般　sanugarサイト　ttp://sanugar.example.com/ 記事タイトル　記事URL ――――――＋――――― 値取得したい　ttp://ragunas.example.com/qa/q7149482.html はてな数取得　ttp://ragunas.example.com/qa/q7144233.html 「値取得したい」という記事は，ブログID=00000001 上の記事でしょうか，それとも ブログID=00000002 上の記事でしょうか，分かりませんよね。 （記事URL中のドメイン名 と ブログサイトURLのドメイン名 が同一かどうかで判定する，という手段もありますけれど，これはデータベース設計の原則から離れた例外的な方法です） ですから，後者のテーブルが結合のための属性を含むよう，次のように設計して， ブログID　記事タイトル　記事URL ――――＋――――――＋――――― 00000001　値取得したい　ttp://ragunas.example.com/qa/q7149482.html 00000001　はてな数取得　ttp://ragunas.example.com/qa/q7144233.html SELECT文では次のように結合条件を指定するわけです。 WHERE ブログ管理テーブル.ブログID = 記事管理テーブル.ブログID
みなさまどうもありがとうございました。 おかげさまで解決することができました。 残念なことにパスワードを失念し、再発行に必要な情報もわからなくなっため、 質問者としてお礼を描くことができません。 つきしては、この欄でお礼を申し上げます。
>my $sth = $dbh->prepare("INSERT INTO テーブル名 ( `title`) VALUES (＄TITLE); そもそも文法的に間違っていますけどtypoですかね？ （ダブルクォーテーションやかっこが閉じてない） $TITELを渡していますが、文字列なのでシングルクォーテーションで くくる必要があるのでは？
idが数値なら $sql=sprintf("select * from meibo where id=%d", $id); $result = mysql_query($sql, $connect); while ($row = mysql_fetch_assoc($result)) { /* 処理内容 */. } idが文字列なら $sql=sprintf("select * from meibo where id='%s'", mysql_real_escape_string($id)); SQLインジェクションには注意。
http://www.geocities.co.jp/SiliconValley-Bay/142 … http://ash.jp/db/dbi_dbd.htm これを見てもらえれば分かると思うのですが、「my $rv = $sth->execute();」はSELECT文が成功しているかどうかを返しているので、$rvが1ということは成功しています。 SELECTの結果を得るには「fetchrow_array」で配列として取り出す必要があります。
select * from apple where hide=0 and (name1 lile %りんご%　or name2 like %りんご% or name3 like %りんご%) ですね。 select * from apple where hide=0 and name1 lile %りんご%　or name2 like %りんご% or name3 like %りんご% だと select * from apple where (hide=0 and name1 lile %りんご%)　or name2 like %りんご% or name3 like %りんご% で解釈されます。
＞TABLE2の構造は ＞ID2 ＞NUMBER2 最初と命題違うと回答しようがないのですが・・・ ＞NUMBER2は無作為に生成される番号 無作為に作成される番号のロジックがわからない、RANDでよい？ AUTOINCREMENT列にはNULLをあてればいいので INSERT INTO TABLE2 SELECT NULL,RAND(),* FROM tmpTable; 列の順番がどうのこうのという話になるなら ALTER TABLE tmpTable MODIFY COLUMN COL_X INT AFTER COL_Y みたいな感じでいれかえてください
SELECT * FROM テーブル名 WHERE date >= '2011-08-20' AND date <= '2011-08-27' SELECT * FROM テーブル名 WHERE date BETWEEN '2011-08-20' AND '2011-08-27' とかでどうでしょうか。 SQLite はDATE型で定義しても、実体は文字列(TEXT型)に なっているのだと以前聞いたことがあります。
たとえばアパッチのログであれば以下の通り http://httpd.apache.org/docs/2.1/ja/logs.html 集計単位ごとに中間的に解析したデータを単位時間ごとで ログしていけば、さほど大きなデータになることはないと思います。 (1)一次的に冗長なデータをとる (2)定期的に集計単位ごとに集計して中間テーブルにおとしこむ (3)いらない一次データを削除 という手法が有効だとおもいますが >などのアクセス解析サイトがどのようにデータを保存してそれを利用しているのか >が知りたいのです。 というのはそれぞれのサイトの集計ポリシーの問題なので特殊な技術を もっているでしょうから回答しようがありません。 どうしても興味があるならそのサイトの管理者に聞くのが筋でしょう >（yahooとか）がそのようなアクセス解析サイトを利用 ユニークユーザーが1000万人いて、1人1リクエストおくってくるなら 結局は1000万件の冗長なデータを保持しなくてはいけません。 結局集計単位をどこにもつかが重要でしょう ただ、検索サイトがログっているのはユーザーの情報よりはむしろ 検索ワードなどだと思うので、それを集計単位にデータをプールすると 予想されます。 いずれにしろ大規模なアクセスがあるところは、ちんけな解析サイトは つかわないし、専用の解析ツールをつかって集計するでしょう。 そうすることによってマーケティング情報を収集して、収入を得ているわけですから
>・LEFT JOINが2つあるので、3つのテーブルを結合しているのでしょうか？ その通りです、alive、being、callの３つのテーブルを結合しています。 >左テーブルは「alive a」で、この右側に2つのテーブルが結合している、という認識でよいでしょうか？ そのように解釈されて問題無いと思います。 >「AND」は、「WHERE」の前に来てもいいのでしょうか？ WHERE以降のANDは結合後のテーブルに対する条件です、WHEREの前に来ると、最後のLEFT　JOIN　ON側の条件になるので、意味が異なります。
> No space left on device ディスクがいっぱいになっていたりしませんか? df コマンドで確認してみてください。
命題の通りやって特にエラーにならないようですが (1)Accounts //準備 create table Accounts(aid char(5),owner varchar(30) not null primary key,abalance int); insert into Accounts values('A0010','Alexander',15000),('B0010','Caesar',20000),('C0010','Maximilian',30000); //処理 UPDATE Accounts SET abalance=10000 WHERE aid='B0010'; (2)History //準備 create table History(h_aid char(5),tdate TIMESTAMP,delta INT,primary key(tdate,delta)); insert into History values('A0010','2008-11-10 14:00:00',5000); //処理 INSERT INTO History(h_aid,tdate,delta) VALUES('B0010','2008-11-11 9:00:00',10000);
そうとう突っ込みどころが在る質問ですね。 http://ja.wikipedia.org/wiki/PhpMyAdmin http://www.dbonline.jp/phpmyadmin/ http://www.atmarkit.co.jp/fsecurity/column/kawag … カテゴリーを間違えています、上記を読まれたあと、このような質問はデジタルライフへどうぞ。 ちなみに http://search.yahoo.co.jp/search?p=Xampp%E3%81%A … も理解して、よく読んでから、再度わからに所を質問してください。 さらに、もう一つおまけ。 コマンドプロンプトとは シェル、CUIツール、DOSのカテゴリーです。管理ツールではありません。 phpmyadminはPHPに特化した管理ツールです。 基本UNIX系にはいるLINUX系OS上で、成長したPHPでは、当然、OSとかサービス（デーモン）の管理、運営にCUIつまりコマンドツールなどのシェルです。はい、ここでシェルとは？ http://search.yahoo.co.jp/search?p=%E3%82%B7%E3% … Windows系、MAC系でそだったソフト（及び人材）のほとんどはGUIでの管理です。 ワークステーション、サーバー系のUNIX、Linux系の管理者はCUIなれているので、当然PHPの管理も　phpmyadmin　に付け加えて、CUIも用意したパッケージを用意しています。それだけの話です。 ちゃんとネットで検索して勉強しようね。 ＞４、phpmyadminとコマンドプロンプトでは出来る事に違いがあるんでしょうか カテゴリーの違う物を比べても、そこに解はありません。例えば、テレビとパソコンです。今の高校生ぐらいまでだと、 「テレビとパソコンどこが違うの」 なんて感じになるかもね。何せパソコンでもテレビ放送が見れるし、テレビでメールやインターネット上のWebサイトみれるしね。さて、君は違いが言えるかな？　（３０才以上だと、そんな風に受け取るんだ。と皆さん感心していましたが）
おすすめはシェルからコマンドですが phpmyadminからでもコマンド打てるので まずは環境を構築して、慣れて、複雑なこともやるようになったら 直接コマンドで！ってしたら時間はかかるけど挫折することなく進めるんじゃないでしょうか。 あ、仕事でするなら、逆ですよ。
元のデータでやるとこんな感じ //準備 create table table1(id int,kaisai varchar(50)); insert into table1 values(1,'東京、福岡、広島、愛知'),(2,'東京、北海道、大阪'),(3,'広島、福岡、沖縄、愛知'),(4,'広島、福岡、愛知'); //集計 select id,sum(kaisai like '%東京%')+sum(kaisai like '%福岡%')+sum(kaisai like '%愛知%') count from table1 group by id; ただしこれはカンマ区切りをチェックしているわけではなく含まれているかどうかなので 実際にはSQLを使うからには以下のようにするのが妥当 //準備 create table table2(id int,kaisai varchar(20)); insert into table2 value(1,'東京'),(1,'福岡'),(1,'広島'),(1,'愛知'),(2,'東京'),(2,'北海道'),(2,'大阪'),(3,'広島'),(3,'福岡'),(3,'沖縄'),(3,'愛知'),(4,'広島'),(4,'福岡'),(4,'愛知'); //とりあえず表示 select id,group_concat(kaisai SEPARATOR '、') as kaisai from table2 group by id; //集計 select id,count(kaisai in ('東京','福岡','愛知')) as count from table2 group by id;
SQLできました。 <?php $str = "abc"; $len = strlen($str); $whereStr = array(); $chunk = array(); for ( $i=0;$i<$len;$i++ ) {//開始位置 $chunk[] = substr($str, $i, 1); } $array = array_count_values($chunk); foreach ( $array as $key=>$val ) { $whereStr[] = "(SELECT `id` , `name`, {$val} as `match_count` FROM `tbl` WHERE `name` REGEXP '[{$key}]{{$val}}')"; } $count = count($whereStr); $where = implode(" UNION ALL ", $whereStr); $sql = "SELECT `id` , `name` , LENGTH(`name`)-SUM(`match_count`) as `rest` , SUM(`match_count`) / LENGTH(`name`) * 100 as `percent` FROM ({$where}) UT GROUP BY `id` HAVING SUM(`match_count`)=LENGTH('{$str}') ORDER BY `id`"; //ご自身の環境に合わせてください $cn = mysql_connect('localhost', 'root', 'password'); mysql_select_db('test', $cn); $res = mysql_query($sql, $cn) or die(mysql_error()); $row = mysql_fetch_assoc($res); do { echo print_r($row, 1) . '<br />'; } while($row = mysql_fetch_assoc($res)); ?>
記憶が曖昧で申し訳ありませんが、5.0か5.1は動いていたような気がします。 5.1なら公式サイトにインストーラがあります。 http://dev.mysql.com/downloads/mysql/5.1.html とりあえず、これを試してみてください。 これでだめなら http://dev.mysql.com/downloads/mysql/5.0.html からｚｉｐファイルをダウンロードして解凍し「setup.exe」を実行してみてください。 http://www.geocities.jp/htmdoc/l2j/mysql50_insta …
SELECTした結果をリダイレクトすると、桁揃えされてるので、 BLOBに限らずVARCHARもフル桁出力されちゃうと思います。 #1に書いたように、INTO DUMPFILEで1レコードずつ出力しましょう。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/select.ht …
だいたいやりたいことが分かってきました。 こんなんでどうでしょう？ select t3.id,t3.roomID,t3.startTime,t3.endTime,coalesce(count,0) as count from tbl as t3 left join( select t1.id,count(*) as count from tbl as t1 inner join tbl as t2 on t1.roomID=t2.roomID where ( t1.startTime >= t2.startTime and t1.startTime < t2.endTime or t1.endTime > t2.startTime and t1.endTime <= t2.endTime or t2.startTime >= t1.startTime and t2.startTime < t1.endTime or t2.endTime > t1.startTime and t2.endTime <= t1.endTime ) and not t1.id=t2.id group by t1.id ) as sub on t3.id=sub.id
CASE 式を使えば、HAVING 句だけでも「tag_noの5と9の両方を持つid」という条件をいちおう表現できますね。 例) ------------------------------------- SELECT id FROM テーブル GROUP BY id HAVING SUM(CASE tag_no WHEN 5 THEN 1 ELSE 0 END) >= 1 AND SUM(CASE tag_no WHEN 9 THEN 1 ELSE 0 END) >= 1 ----------------------------------------- 参考URL：http://codezine.jp/article/detail/405?p=2
「key」は予約語です。バッククォートして実行してみてはいかがですか。「text」も気になります。 SELECT * FROM `text` WHERE `key`=1
方法はとわねぇよ。 っちゅーなら、あんまややこしくしたくないので create table test_2( name 属性がほにゃらら area 属性がほにゃらら number 属性がほにゃらら ) insert into test_2(name,area,number) select distinct name,area,number from test truncate table test insert into test(name,area,number) select name,area,number from test_2 まぁ、同じ構造のテーブル作って、一度重複なくして退避して、それを全削除したテーブルに戻す。 一時的にでも、データが消えちゃダメ。ってなら使えないけど。 後、MySQLユーザーじゃないもんで、構文があってるかどうかは知らんです。。。
結合にはJOIN句を使います。 SELECT A.*,B.* FROM テーブル1 A LEFT JOIN テーブル2 B ON A.学生番号=B.学生番号 WHERE A.学生番号=xxx
トランザクションについてはACID特性で検索されると良いかもしれません。 ロックについてはテーブルの特性によってロックの種類を変えましょう。 クリティカルな処理は排他ロック(他のトランザクションからは参照も更新もできない)を使うことをお勧めします。 このへんはトランザクション分離レベルで検索すると出ます。 ＞AUTOCOMMIT =　0　 僕は「AUTOCOMMIT =　0　」で運用しています。 一度に複数のテーブルを更新したり、挿入する場合途中でデッドロックしたり、タイムアウトすることがあります。このときAUTOCOMMIT =　1だと中途半端な状態でcommitされてしまいます。 あと気をつけることといえば、暗黙のコミットとというのがあります。 COMMIT流してないのにCOMMITかかったような動作があった場合に参考になると思います
#4は適当すぎました。 これでいけます。 SELECT time ,left( time_format( cast( truncate(time/3600,0) *10000 +(truncate(time/60,0) -truncate(time/3600,0)*60)*100 +mod(truncate(time,3),60) as time) ,'%T.%f') ,12) as t FROM timetbl これを前のやつに応用するとこんな感じ？ （例示されているt1.tbl_idはt1.idですよね？） select t1.id as t1id ,sub1.t2name ,t.name ,sub1.t2count ,max(t3.created) as t3_max_created ,min( left( time_format( cast( truncate(`time`/3600,0) *10000 +(truncate(`time`/60,0) -truncate(`time`/3600,0)*60)*100 +mod(truncate(`time`,3),60) as time) ,'%T.%f') ,12) ) as t3_min_time ,sub2.t3_aaa_created from tbl1 as t1 left join tbl as t on t.id=t1.id left join ( select t1_2.tbl1_id as t1id ,group_concat(t2.name) as t2name ,count(*) as t2count from tbl1_tbl2 as t1_2 inner join tbl2 as t2 on t1_2.tbl2_id=t2.id group by t1id ) as sub1 on sub1.t1id=t1.id left join tbl3 as t3 on t3.tbl1_id=t1.id left join ( select tbl1_id,max(created) as t3_aaa_created from tbl3 inner join tbl on tbl_id=tbl.id and name='aaa' group by tbl1_id ) as sub2 on sub2.tbl1_id=t1.id group by t1id order by time desc
CASE 使えば? update tbl01 set data = (case id when 1 then 'xxx' 　　　　　 when 2 then 'yyy' 　　　　　 when 3 then 'zzz' else data end) where id in (1, 2, 3) and parent_id = 1 http://dev.mysql.com/doc/refman/5.1/ja/case-stat …
なんかつぎはぎになって申し訳ないですがたぶんこんな感じ もう少し効率化できそうな気もしますが、一応動きます select t1.id as t1id ,sub1.t2name ,sub1.t2count ,max(t3.created) as t3_max_created ,sub2.t3_aaa_created from tbl1 as t1 left join ( select t1_2.tbl1_id as t1id ,group_concat(t2.name) as t2name ,count(*) as t2count from tbl1_tbl2 as t1_2 inner join tbl2 as t2 on t1_2.tbl2_id=t2.id group by t1id ) as sub1 on sub1.t1id=t1.id left join tbl3 as t3 on t3.tbl1_id=t1.id left join ( select tbl1_id,max(created) as t3_aaa_created from tbl3 inner join tbl on tbl_id=tbl.id and name='aaa' group by tbl1_id ) as sub2 on sub2.tbl1_id=t1.id group by t1id order by t1id
環境に依存するものは使わないで済むならそれに越したことはない 特にテーブル名ははまるので日本語は避けたほうがよいでしょう 以前私もバージョンアップするときに致命的なはまり方をしたことがあります フィールド名はまぁ何とかなると思いますが、できることなら 日本語を排除しておいたほうがいいとおもいます
個人的にはテーブルの設計に関してはほぼエディタでかいています。 流し込むのはphpMyAdminを利用しています。 結果が手早く見えるのがphpMyAdminのいいところですね ただphpMyAdminのウィザード機能は便利ですが、なれると うざく思うこともあるので、あまり使いません
＞http://IPアドレス.indexでもいいです。 http://IPアドレス/blog/wp-admin ではないのですか？
ちなみに・・・ int(20)は、zerofill（ゼロで桁揃え）するときの埋める桁数です。 unsignedすればマイナスがない分2倍近く確保できますが 基本的にその桁数の精度になるわけではありません。 create table num2(val1 int(20),val2 int(20) unsigned zerofill ); insert num2 values(1,1) ,(1234564757,1234564757) ,(2222222222,2222222222) ,(99999999999,99999999999); select * from num2;
意外としられていないのでしょうか？ 「波ダッシュ 全角チルダ」でぐぐってみてください
SQL文におかしいところはなさそうなので、 mysql_select_db してないとか、テーブルが存在しないとか... クエリの実行がエラーになっていないか調べてみてはどうでしょう。 $query = 'select name,jyusyo,kakaku,gazou,link from kensaku order by kakaku asc'; $res = mysql_query($query, $con); if(!$res){ echo "ERR - ".mysql_error($con); } http://www.php.net/manual/ja/function.mysql-erro … 「MySQL データベースバックエンドから返ってくるエラーは、 警告を発生しません。 代わりに mysql_error() を用いて エラー文字列を取得してください。」 なんですって。知りませんでした。
クエリを実行しているPHPの関数なりメソッドなりがエラーを返していると思いますので、 ステータスをチェックして、問題のSQL文を探してください。 なんとなく members 表への INSERT 文が間違っているような予感がしますけどね... created"2011-10-05 15:16:04" 　　↑ 　この created が怪しい
かなり意味不明・・・ ＞$date = convert('20111001', DATE); MySQLの関数をPHPで実行するってどういうことでしょう？ PHPから手続きにもとづいてMySQLにコネクトして、 "select convert('20111001', DATE) AS hoge"を発行した上で 戻り値を配列でうけて添え字hogeの値を得てみては？
こんな感じでいかがでしょう。 keyword を主にしたクエリです。 SELECT ml.* FROM keyword kw INNER JOIN mail_list ml ON (0<LOCATE(kw.name,ml.name)) GROUP BY ml.id; また、EXISTS を使う方法もあります。 SELECT * FROM mail_list ml WHERE EXISTS (SELECT 1 FROM keyword kw WHERE 0<LOCATE(kw.name,ml.name)); ちなみに正規表現や LIKE を使うのであれば、 keyword のデータに特殊文字が含まれる場合の注意が必要です。 例えば、正規表現では「(」「)」や「|」、LIKE では「%」や「_」などです。
PHPの関数でパスワードのハッシュを得たいのですね。 shal を sha1 にしてみてください。 小文字の l (エル) ではなく 数字の 1 (いち)です。 http://php.net/manual/ja/function.sha1.php
ちなみに SELECT * FROM T_TEMP; で想定した文字を2文字以上に分割したデータ群はみえてますよね？ ＞PHP側で$db->query("SELECT MOJIRETU,COUNT(*) -1 AS COUNT FROM T_TEMP GROUP BY ＞ MOJIRETU HAVING COUNT>0 AND MOJIRETU NOT IN(SELECT MOJIRETU FROM HOGE"); 単にシンタックスエラーですね？ ケツにカッコ閉じがぬけてます PHP側で$db->query("SELECT MOJIRETU,COUNT(*) -1 AS COUNT FROM T_TEMP GROUP BY MOJIRETU HAVING COUNT>0 AND MOJIRETU NOT IN(SELECT MOJIRETU FROM HOGE)");
windowsのコマンドプロンプトは、defaultでは sjis（より正確にはcp932）だからでは？ 接続したら set names cp932; といれてみましょう。 これで、多バイト文字がうまく入力表示できるなら、my.ini の[mysql] sessionに default-character-set=cp932 としておけば、コマンドプロンプトからの接続の度にset names を入力する必要はありません。
これはmysql特有の動作です。たのＳＱＬサーバではエラーになります。 今回のidはint（数値）です。 動作としては「頭から読んでいって数値と解釈できなくなったら後ろは無視する」の結果です 直接的な回答のＨＰではありませんが参考URLを見てください。 参考URL：http://www.sonorilo.net/2010/03/02/2718
select * from usr_tbl ・・・ order by replace(・・replace(company,'株式会社',''),'(株)','')・・・・ ・・はreplace( ・・・・は,'有限会社など対象外にしたい文字列','') 有限会社株式会社　なんていう会社名があるとうまくうごきませんが、 まずないでしょう。 ＞全件抽出後に、独自でソートしたほうが速いのでしょうか？ 全件抽出後に、独自でソートしたほうが早いかもしれません。 こちらは私はよくわかりません。 試してみてもらわないと。 replace関数の説明 http://oss.timedia.co.jp/show/MySQL%E6%97%A5%E6% …()%E3%81%A7%E6%96%87%E5%AD%97%E5%88%97%E3%81%AE%E4%B8%80%E9%83%A8%E3%82%92%E7%BD%AE%E6%8F%9B%E3%81%99%E3%82%8B ## MYSQL使う環境がないので、 ## 確認はしていません。 ## また、MYSQLの方言は分かっていないので ## Order by でかけるのは、select句の中の項目だけとかなら、 ## select句中に書いてas XXで名前をつけてそれでorder byしてください。
/var/lib/mysql というディレクトリは存在しているでしょうか? またそのディレクトリは mysqld を実行するユーザーから書き込み可能に なっているでしょうか?
私も data テーブルに comment_id のみのインデックスを張ればよいと思います。 例) ALTER TABLE data ADD INDEX (comment_id); ちなみに頭に EXPLAIN を付けてSQLを実行すると最適化の参考になると思いますよ。 http://dev.mysql.com/doc/refman/5.1/ja/explain.h …
yahoo知恵袋でもお答えしましたが、40ユーザーの同時入力でレスポンスを確保しようとするならサーバーOS（Windows2008サーバーなど）が必要になります。予算はありますか。 そして、それでもファイル共有として使う場合、ファイル破損の危険性がかなりあります。
or でつなぐとか？ select no,name,address from address where no=(select max(no) from address where no<6) or no=(select min(no) from address where no>6) また、6も拾っていいならlimitで処理しても select no,name,address from address where no>=(select max(no) from address where no<6) order by no limit 3;
＞`keywords` VARCHAR( 511 ) CHARACTER SET utf8 MySQLのvarcharはバイト単位ではなく文字単位ですから 256文字以上の3バイト文字を指定すると767バイトをこえるので unique設定できません。上限255文字だとおもってください。 （接頭辞に2バイトつかうので255*3+2=767バイト） そもそも長すぎるvarcharを連発していますがもう少しきちんと 設計をしたほうがよいのでは？
いまいち例がわるいのでこうしておきます create table tbl1_tbl2(tbl1_id int,tbl2_id int); insert into tbl1_tbl2 values(1,1),(1,2),(1,2),(3,1),(3,2),(3,3),(2,1),(2,3); ここから命題の ＞「tbl2_idカラムが1と2両方を保持する行のtbl1_id」を取得 を得るのであれば select tbl1_id from tbl1_tbl2 where tbl2_id in (1,2) group by tbl1_id having count(distinct tbl2_id)=2;
select * from `tbl` where `parent_id` is null and not exists ( select 1 from `tbl` t2 where `tbl`.id = t2.`parent_id` )
自宅環境が分からないのでなんとも言えません。 自宅PCがwindowsなら「FileZilla_3.5.1_win32-setup.exe」がいいでしょう。
一番簡単な方法はデータベースからSELECTでデータを抜き出してHTMLファイルを直接作る方法です。ただし、リアルタイムでデータが変更される場合は、この方法は向きませんのでCGIを使ってサーバー側で都度SELECTを発行してHTMLを標準出力に書き出して表示させます。 私の作ったツールで、WindowsOS用(Linux用はOpenSUSE11.4+MONO＋FireBirｄまたはPostgreSQLはとりあえず動きます)で恐縮ですが、難しい事は全てコンピュータに任せる事で、「誰でも」「早く」プログラムを作ることが出来る「I言語を」インターネットで公開していますので、よろしければお使い下さい。 HTMLファイルを作る方法も、CGIを使う方法も、どちらも簡単に出来ます。 尚、データベースはMySQL,SQL　Server,Oracle,DB2,PostgeSQL,Firebird,HiRDBに対応しています。 「誰でも」を実現するために、テーブル名も含めて多くの規約(制約)が有り、MySQLの場合も規約に合わせてデータベースの再構築も必要ですので、その点は注意下さい。 URLはhttp://www.mis.janis.or.jp/~harasawa/の「IPROGRAM　Homepage」から「I言語ホームページ」行けます。
いや、だから前回書いたのでなにか問題でも？ CREATE TABLE member (id int,name varchar(30),latin varchar(30)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; INSERT INTO member values(1,'浅田真央','Asada mao'),(2,'김연아','Kim Yuna'); SELECT * FROM member;
そもそも、rollbackは、データの変更(挿入・削除・アップデート)を無かったことにするコマンドです。 テーブル構造の変更は対象外です。これはMySQLに限らずRDBMS一般の基本です。
たのSQLサーバとの違いやMYSQLのコマンドや管理方法、制限事項だと思います。
テーブル構成が怪しいのでサンプル付きで create table kamoku (kamoku_id int(3) zerofill,name varchar(20)); insert into kamoku values(1,'国語'),(2,'算数'),(3,'理科'),(4,'社会'); create table siken (siken_id int(6) zerofill, siken_name varchar(20), kamoku_id1 int(3) zerofill, kamoku_id2 int(3) zerofill, kamoku_id3 int(3) zerofill); insert into siken values(11,'試験1回目',1,2,3),(12,'試験2回目',1,3,4),(13,'試験3回目',1,2,4),(14,'卒業試験',3,4,null); そこでviewは CREATE VIEW view_siken_kamoku(siken_id,siken_name,kamoku_name1,kamoku_name2,kamoku_name3) AS select siken_id,siken_name,coalesce(k1.name,''),coalesce(k2.name,''),coalesce(k3.name,'') from siken left join kamoku as k1 on k1.kamoku_id=kamoku_id1 left join kamoku as k2 on k2.kamoku_id=kamoku_id2 left join kamoku as k3 on k3.kamoku_id=kamoku_id3; 表示は select * from view_siken_kamoku; ところで、kamoku1～3の順番などに優劣はあるのでしょうか？ 特に依存関係がないならもう少しデータをきれいに持った方が効率的だと思いますが・・・
utf8_general_ciでテーブルを作ってみては？ CREATE TABLE new_table (id int,data varchar(30)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci
MySQLのversion にもよるけど、4.0 でもSQL_CALC_FOUND_ROWS は使えたはずなので ページ表示に必要なデータを得るSQL文のselect 句のオプションに SQL_CALC_FOUND_ROWS を入れておくと、次にSELECT FOUND_ROWS();　を発行することで、limit句 が無い場合の全件数が得られます。 http://dev.mysql.com/doc/refman/5.1/ja/informati … ご呈示のSQL文では、group 化してるカラムで、count を取っていますが、各idで重複は何件という情報を得るためのSQL文となります。 idの重複無し件数を得たいなら、group by をはずして、count() 対象にdistinct を付けます select count(distinct a.id) acount from /* 適宜join */ where /* 適宜条件 */ group 化が１カラムならこれでいけるけど、複数カラムでgroup化してるようなときは、前記のSQL_CALC_FOUND_ROWS を使った方がいいでしょう。
Yahoo知恵袋に同じような質問があります。参考URLを確認してください。 データのダンプの方法 http://dev.mysql.com/doc/refman/4.1/ja/mysqldump … ダンプしたファイルのインポートの方法 http://phpjavascriptroom.com/?t=mysql&p=mysqlimp … 参考URL：http://detail.chiebukuro.yahoo.co.jp/qa/question …
>この書籍を見ながらPostgreSQLのソースをMySQLで代用できると思いますか 出来なくはないだろうけど、辞めておくほうがいい。 そもそも、今どきPHP4の意味はないでしょう。 掲示板を作るだけならDBは必須ではないけど、参考になるサイトはいくらでもあります。 本格的にやりたいなら、基本とsqlを学ぶこと。 ひとつをきちんと理解すれば他のDBもある程度わかるようになりますよ。
例えば、 伝票番号 101 日付5/1 商品コード 111 商品名 A111 数量 3 金額 330 備考 伝票番号 102 日付5/1 商品コード 101 商品名 A101 数量 2 金額 330 備考 伝票番号 103 日付5/1 商品コード 105 商品名 A105 数量 1 金額 101 備考 伝票番号 104 日付5/1 商品コード 111 商品名 A177 数量 2 金額 0 備考 伝票番号 101 の代替品 伝票番号 105 日付5/1 商品コード 111 商品名 A111 数量 2 金額 220 備考 というデータを考えて、伝票番号101の内容を知りたいときに、 grepで「101」を探すと全部出てきてしまいます。 「伝票番号 101 」で探しても、101と104で出てきてしまいます。 さて、困った困ったということで、データベースソフトでは、 伝票番号が101のデータを出力せよと命令できます。 そうすると、1行目だけしかでてきません。 というのが最も必要な理由です。
http://donrails.araki.net/archives/id/5732 /etc/hosts.allowを使うやり方もあるみたいです。
>１秒に数1万件は数字データがくると思います。 本当ですか？ また、社外から受け取るのですか？ 例えば、購買情報なら、納入先住所やらなにやら入れて少なくとも、１件1KByteくらいは必要なので 例えば5万件なら、50Mbyteはくる勘定になるのですが。 社外からくるなら、 これって、(1byte=8bitなので)常時400Mbpsの回線が必要ということです。 →光でもまだ、最高200Mbpsの現在少なくとも２本は入れないと処理できないことになりそうです。 実際は、「最高」なので、回線を１０本くらい引く必要ありそうですが。 （２本以上で分割して取得できますか？） もし、それだけ大量なら、ネットワーク機器（ルーターなど）をその回線数用意して、 サーバも同数用意して、そのサーバで、データを受信する。 →データベースサーバは複数置くと大変なので、１台として、 受信したサーバから専用アプリケーションを開発して、それで書き込むとかしないといけませんが。 そもそも、送るほうも同様の環境が必要ですが、 それだけの環境を用意しているとも思えませんが。 社内の別サーバからなら、専用のギガビットイーサネットLANを１ないし複数引けば 回線速度はクリアできるはずですが、ＤＢサーバ側の処理が追いつくかどうか疑問です。 Oracleのグリッドサーバ技術とかを使えばクリアできると思いますが、 このあたりは、初心者が手におえる領域じゃないです。 専門業者に相談されることをお薦めします。 で、件数が間違いでないのなら、いずれにせよ、はっきりいって、費用はその辺の会社が 出せる額ではなくなりますし 失礼ないいかたで申し訳ないのですが、実現できるだけの費用が出せるだけの会社なら、 「システム初心者のものです」といわれる方しかシステム部門の担当者がいないというのは 疑問に思ってしまいますが。
ACCESSが使える環境なら標準モジュールから Dim db As DAO.Database Set db = CurrentDb db.Execute ("insert into [odbc;dsn=異動先DSNl;uid=異動先ユーザー名;pwd=異動先のパスワード].[移動先テーブル名] select * from [odbc;dsn=異動元DSN;uid=r異動元ユーザー名;pwd=異動元;].[異動元テーブル名]") Set db = Nothing か db.Execute ("select * into [odbc;dsn=異動先DSNl;uid=異動先ユーザー名;pwd=異動先のパスワード].[移動先テーブル名] from [odbc;dsn=異動元DSN;uid=r異動元ユーザー名;pwd=異動元;].[異動元テーブル名]") などと書けます。この書き方以前は（～2003）クエリとして保存できたのですが、2007以降NGになってしまいました。
まぁ落ち着いて。 > 一番目のphpデータはPOST文を受け取っただけでデータベース内から検索してくれないし 一番のPHPスクリプトですが、 チェックされた情報をPOSTで受け取り、チェックされた内容に該当するデータだけ検索する、 そのためのSQL文を組み立てて、変数 $sql に格納するところまで、 一応できています。 後は、二番でやっているように mysql_query でSQL文を実行し、mysql_fetch_array で 結果を取得してみましょう。 ------------------------------------------------------------------------------- ...省略 $a = implode(" OR ",$arr1); $b = implode(" OR ",$arr2); $c = implode(" OR ",$arr3); $sql = "select * from kensaku where ($a) AND ($b)AND ($c) order by date desc"; print $sql; // SQL文を実行 $result = mysql_query($sql, $con); // 結果を1行ずつ配列として取得 while ($data = mysql_fetch_array($result)) { echo '<p>' . $data['tiiki'] . ':' . $data['syoku'] . ':' . $data['koyou'] . ':' . $data['kai'] . "</p>\n"; } ------------------------------------------------------------------------------- ※二番では mysql_query('SELECT * FROM kensaku', $con); のように、 全件を検索するSQL文を、mysql_query の第一引数のところで書いていますが、 こちらではあらかじめSQL文を格納した変数 $sql を mysql_query の第一引数に 渡しているところが二番と違います。
もしかして？と思ったのですが、モバイルの振り分け（htaccess）などで2回のリクエストが発生していませんか？
サーバーのＣＰＵ能力とディスクの速度に依存します。 mixiは今は変わったかもしれませんが、最初はMySQLを使っていたはずです。
えーと・・・電波系もしくは釣りだということでよろしいですか？ 容量オーバーの可能性がありますが、単なる表記の問題かもしれません。 エスパーじゃないので今の情報から答えられるのはこの程度
SQLをこのようにしてみてはいかがでしょうか。 WHERE 　Keisai = 1 　and 　( 　　( 0 < Chinryou1 and Chinryou1 <= {$rent1} ) 　　or 　　( 0 == Chinryou1 and Chinryou2 <= {$rent1} ) 　)
確証はありませんがバッチファイルで出力文字コードを設定する「set names 」を「utf8」にして、出力結果をnkfやiconvで変換してみてはどうでしょう。
再度回答します ＞web_beginnerさんはどうだったのでしょうか。 私はこの本もってません。 私の書き方がまずかったですね（＾＾； 「書籍全般において」が抜けていました。 あと前述の正誤表サイトの一番上に「著者によるサポートブログ」へのリンクがあります そこで質問したらいいと思いますが・・・ その前にエラーは全文掲載したほうがいいと思いますよ。 「著者によるサポートブログ」に似たような質問がありました。 http://college.h2o-space.com/groups/phpbook/foru …
なにをもって「同期」といっているかによりますね 同じDBにアクセスするシステムなら接続のための仕組みさえ用意しておけば 別段DBの同期は必要ないですね またDBの参照を分散化するための仕組みならマスター＝スレーブで管理すれば よいでしょう。 まったく依存関係がなくただ同等の内容をとりあえず用意したいということであれば ダンプして流し込むことになります。
A を４とおりunion, B を４とおりunion した２つのtable で比較する select aa.id, count(distinct bb.id) as bnum from ( select id, first1 as first, last1 as last from A union all select id, first1 , last2 from A union all select id, first2 , last1 from A uinon all select id, first2 , last2 from A ) as aa join ( select id, first1 as first, last1 as last from B union all select id, first1 , last2 from B union all select id, first2 , last1 from B uinon all select id, first2 , last2 from B ) as bb on aa.first=bb.first and aa.last=bb.last group by aa.id ; ※　テーブル名やカラム名は、省略気味に書いてるので、適宜読み替えてください さて、各table ４倍に増えるけど、一致するのは、各table の４件のうち一組のはず？ null値のカラムは区別されるので取り出せないが、空文字列カラムどうしは一致するので、空文字列が存在するなら、空文字列ではない条件も必要かも？ まずは、group 化しないで、aa.first,aa.last,bb.id にどんな値が取り出せてるか調べてみてください
途中で空白になるように空のSELECTを発行してやれば？ select 1,'aaa','bbb' union all select 2,'ccc','ddd' union all select '','','' union all select 3,'eee','fff';
MySQLユーザーは必ずしもPostgreSQLのローカル関数に詳しいとは言えないので テーブルとその簡単なサンプルデータを提示し、 どういった結果を得たいか例示ししていただいた方が 明確な回答がつきやすいかと思います
#3ですが、一応対処法 create table tableA(id int not null primary key,value int); insert into tableA values(1,10),(2,20),(3,30),(4,40); create table tableB(id int not null primary key,value int); insert into tableB values(1,100),(3,300),(5,500); ここまで準備 create temporary table temp select b.id,b.value from tableB as b inner join tableA as a on a.id=b.id; replace tableA select id,value from temp;
>何故かエラーになって じゃ、手抜きしないで念のためキャストしてみますか？ select concat('result:',lpad(cast(count(*) as signed),5,' ')) as result from table1 union all select concat('result:',lpad(cast(count(*) as signed),5,' ')) from table2 union all select concat('result:',lpad(cast(count(*) as signed),5,' ')) from table3; それでもエラーになるようなら一度UNIONしないで落ちるかどうかみてみては？ select concat('result:',lpad(cast(count(*) as signed),5,' ')) as result from table1;
コマンドプロンプトでループさせる意味がよくわからないですが select concat('result: ',count(*)) as result from table1 union all select concat('result: ',count(*)) from table2 union all select concat('result: ',count(*)) from table3; みたいなSQLじゃだめなんですか？
＞金融機関向けのサービスで利用 という時点で、オラクル以外の選択肢はほぼないと思いますが・・・ おそらく顧客側からそういった指示がでるのでは？
先頭の項目が主キーですでに0が登録済みというオチはないですよね。
simeiテーブルを２つ結合し それぞれ別の別名をつければいいです。 --- SELECT SS.テストID ,SM1.生徒名 as 英語トップ生徒名 ,SM2.生徒名 as 国語トップ生徒名 FROM seiseki SS LEFT JOIN simei SM1 ON SS.生徒番号 = SM1.生徒番号 LEFT JOIN simei SM2 ON SS.生徒番号 = SM2.生徒番号
MySQLの場合、テーブル単位でストレージエンジンを指定出来る特徴があります。 おそらくここで ・DB種別 … InnoDB とおっしゃっているのは、DBデフォルトのストレージエンジンがInnoDBになっているだけだと思います。 （テーブル作成時に指定しなければInnoDBになる） ですので、特に設定の食い違いによるメリット・デメリットは特に無く、 MyISAMのデータベースとして動きます。
MySQLでecho？
ネットワークの帯域が確保されているならマスターの更新負荷（CPU、I/O）よりも相対的に軽いと思います。スレーブ側で更新が追いつかない時の挙動に一抹の不安が残りますが。
where 句内では、select 句のカラム名が決まる前に行選択作業が行われるので、select句の別名は使えません。where 句内で演算を行うか、または、from table 指定にサブクエリーを使うとか。 分解して取り出したいのではなく、検索だけならlike比較の形式をととのえればいいのでは？ Test like '{"%a%","%"}'/* 配列１番目比較用 */ Test like '{"%","%b%"}'/* 配列２番目比較用 */ Test like '{"%","%b%","%"}'/* 配列サイズに応じて記述 */
SLIPテーブルでは、同一のSLIP_IDを持つレコードが 複数件存在することはないということでいいのでしょうか？ SLIPテーブルとSLIP_PAYテーブルでは、結合条件であるSLIP_IDが1:nの関係なので そのまま結合してはいけません。 例示されたケースだと、SLIPテーブルのSLIP_ID=10001のレコードの AGGREGATE_BALANCEが、SLIP_PAYテーブルの3レコード分集計されて 75000という結果になってしまいます。 やるならこんな感じでしょうか。 SELECT slip.STORE_ID, SUM(slip_pay.PAY_MONEY), SUM(slip.AGGREGATE_BALANCE) FROM SLIP AS slip, (SELECT SLIP_ID AS SLIP_ID, SUM(PAY_MONEY) AS PAY_MONEY FROM SLIP_PAY WHERE PAY_DATE LIKE '2011-08%' GROUP BY SLIP_ID) AS slip_pay WHERE slip.SLIP_ID = slip_pay.SLIP_ID GROUP BY slip.STORE_ID 先にSLIP_PAYテーブルをSLIP_ID毎に集計して これとSLIPテーブルを結合するわけです。
こんな感じで？ select t.項目1,t.項目2,日付 from テーブル as t inner join(select 項目1,max(日付) as max_d from テーブル group by 項目1) as sub on t.項目1=sub.項目1 order by max_d desc,t.項目1 asc,日付 asc
Windows Server 2008ではありませんが http://awoni.net/personal-site/mysql/ の下にあるように mysqld --defaults-file="c:\Program Files\MySQL\MySQL Server 5.5\my.ini" MySQL で出てくるエラーメッセージを確認してください。 （MySQLのバージョンは5.5と、mysqldにpathが通っていると仮定しています）
質問１ my.ini でutf8指定なのに、mysqlでログインしたときにcp932となっているなら、起動時オプションが付いているか、編集しているmy.iniが別物の可能性があります。 windows vista 以降では、MySQLの本体を C:\Program Files にインストールしたりすると、設定ファイルをうまく変更できなかったりします。 質問２ mysql client とは、mysql/bin ディレクトリーに入ってる、mysqldump や mysqlmanager などのツール類のこと。これらを実行するときは[client]での設定を使う。 [mysql] での設定は、 コマンドラインで、mysql を起動するときの設定。 windows7 でコマンドライン表示をutf8に簡単に変更可能かどうかまでは知りませんが、vista までは、default cp932でutf8表示への変更は結構面倒なので、[mysql] でのcharacterset設定もcp932 にするのが吉。 あと、[mysqld] での設定で、server default 設定となります。
下記の「管理者権限を持つユーザを登録する」によると2つのGRANT構文の実行が必要なことが書いてありますがどうなんでしょうか。 http://www.bitscope.co.jp/tep/MySQL/quickMySQL.h … 管理者権限を持つユーザを登録する mysql> GRANT ALL PRIVILEGES ON *.* TO user1@"%" -> IDENTIFIED BY 'パスワード' WITH GRANT OPTION; mysql> GRANT ALL PRIVILEGES ON *.* TO user1@localhost -> IDENTIFIED BY 'パスワード' WITH GRANT OPTION; mysql> FLUSH PRIVILEGES;
MYSQLを使う環境がないので、 以下のようにちゃんとなっているかどうかまではわかりませんが。 一般にＳＱＬでは、 where句の中は、select句でasを使ってつけた名前は使えませんし、 having句の中は、select句でasを使ってつけた名前があればそれしか使えません。 ということで、having句で試してみられては？ （但し、インデックスは使えませんので処理が遅いことを前提としてください。） ま、大抵の要件では、レスポンスが大幅に悪くなっていいから、concatした結果を検索したい ということはないはずですが。 例えば、住所１、住所２、住所３と項目があってどの項目にどこまで入っているかわからない （住所１に都道府県までか、都道府県＋市区郡までか、さらに町村まで入っているかわからない） とかいうのなら、住所１、住所２、住所３をconcatしてその結果で検索せざるえないですが。
DBMSのバージョン、エクスポート、インポートの実行コマンドを提示していないので推測になりますがMySQL側はLOAD DATA (LOCAL) INFILE でインポートしようとしていると思います。 インポートデータ「"」ダブルクォートされているなら、 OPTIONALLY　 ENCLOSED BY で対応できませんか？ http://dev.mysql.com/doc/refman/4.1/ja/load-data …
それって正規化しておけば済む話では？
数個程度ならINを使います WHERE `address` IN ('東京都','大阪府','北海道') 本当に大量なら、別途条件をテーブルに保存しておき JOINしてやればよいでしょう。
基本を理解していないですね？ SELECTで*は、テストレベル以外で使ってはいけません。 $sql="SELECT c_diary.r_datetime as c_diary_r_datetime c_member.r_datetime as c_member_r_datetime FROM c_diary left join c_member on c_diary.c_member_id =c_member.c_member_id" と抽出するデータはユニークな名前になるよう別名をつけて列記します
基本的には#1さんに同意ですが・・・ もっと実務ベースでカリカリにチューニングしたい場合、 集計用の中間テーブルをいくつか作り、動きの激しい最近のデータと 静的な古いデータを別々に管理することもあります 集計やデータ抽出にどのような用件があるかを見極めたうえで 設計することになるでしょう。
getStringではなくgetIntでも取れないでしょうか
TableBにプールしておく理由がわからない 最初からTableAにインサートしてしまって、フラグで管理する方がよいのでは？
一応、 MySQL のタイムスタンプ型について回答します。 TIMESTAMP 型の使用は止められるならやめた方が良いと思います。理由は下を参照。 >TIMESTAMP データタイプは、MySQLのバージョンと、そのサーバーが稼動しているＳＱＬモードによって様々な性質を持っています。これらの性質は、このセクションの後のほうで説明します。 >例えば、TIMESTAMP 値は 1970 以前や、2037 以降にはなり得ないという事です。 http://dev.mysql.com/doc/refman/5.1/ja/datetime. … 閑話休題 >expr BETWEEN min AND max >BETWEEN を日付値または時刻値と使用する場合に最善の結果を得るには、値を所望のデータ タイプに明示的に変換するため、CAST() を使用します。 http://dev.mysql.com/doc/refman/5.1/ja/compariso … >convert(expr, type) >cast(expr as type) http://dev.mysql.com/doc/refman/5.1-olh/ja/cast- … 以上のことから Cast() または Convert() を使用します。 select フィールド from テーブル where cast(タイムスタンプ型フィールド as DATETIME) BETWEEN '2011-08-05 20:00:00' AND '2011-08-06 19:59:59' たぶん、上のような感じでうまくいくと思います。（試していません） ご参考いただければ幸いです。
Parse Errorは、DBに関係ないPHPのエラーです。 閉じ括弧 } が1つ足りないだけでは?
私は下記の様に考えます。 (1)　カラム"id"が0の時は、カラム"name"のgroup byせず 　　SELECT　　WHERE (2)　カラム"id"が1の時だけ、カラム"name"のgroup byする 　　SELECT　　GROUP BY　　HAVING (1)文　UNION（ALL）(2)文 各構文を参照してください。
繰り返しになりますがその文字はshiftjisには存在しないので 根本的に対応できません。 ちなみに私の環境ではブラウザで表示して、pdfに出力すれば 普通に草冠＋力×３の文字が表示されますね・・・ ブラウザとpdf出力になんのソフトをつかっていますか？
select * from tbl t1 where not exists ( select 1 from tbl t2 where t1.id=t2.id and (t1.date, t1.no ) < (t2.date, t2.no ) ); というやり方もあります。
mysqldump 等いかが？
MySQLはQuery Cacheを持っているのでテーブルの更新がない場合、同じクエリがリクエストされた場合は高速に結果を返すことができます。しかし、テーブルの更新があるとキャッシュが効かなくなります。 また、SQLの書き方によってはバッファキャッシュの競合が発生し遅延することも考えられます。 速い時間帯と遅い時間帯で show processlist; で接続数を確認してください。 また、CPUやI/Oの待ちを調べるためにはsarやiostatを用います。 http://www.uetyi.mydns.jp/wordpress/linux-server …
判らないことがあったら書籍（どれがよいのかは私も判りませんが）か下記の MySQLリファレンスを参照するのが良いかと思います。 http://dev.mysql.com/doc/refman/5.1/ja/index.html 文字列に関しての場合 http://dev.mysql.com/doc/refman/5.1/ja/string-sy … シングル／ダブルクオートの使い方はエスケープ文字とともに簡単ですが忘れやすい項目ですね。 ・文字列はクオートを使う ・エスケープ文字が含まれる場合はエスケープするかクオートを使う ・クオート文字が含まれる場合はクオート（シングル／ダブル）を使う と覚えておけば良いかと思います。 UNIX系でもWindowsでも同じですね。 今回の場合ですと、「MySQL 文字列」「MySQL ファイル名」「MySQL INFILE」「MySQL OUTFILE」などで検索すると多くの情報・実例がみつかりますので、検索語が適切であれば（これが難しいのですが）意外と簡単に必要な情報がみつかります。 MySQLはインストールしてないので、私も検索して勉強させていただきました。
実行するSQLファイル内で明示的に「SET NAMAES CP932;」を実行してみてはどうなりますか？
単に結果数が0件だったって意味だから、それだけで影響の有る無しは判断できないかと。 たとえば、権限を間違ってrevokeしても、「0 rows affected」になるみたいですし。
>ＢやＣのテーブルに >該当するＩＤ（ＡテーブルのプライマリＩＤ）が無いテーブル状況だと、処理はエラーとなりますよね？ やってみればわかりますが、エラーは出ません また、もしも複数のSQLを投げるのに抵抗があれば、プロシージャを用意するとか・・・ DROP PROCEDURE IF EXISTS SET_FLG; DELIMITER // CREATE PROCEDURE SET_FLG(IN in_id INT,IN num INT) BEGIN SET AUTOCOMMIT=0; START TRANSACTION; UPDATE `table_a` SET `del_flg`=num WHERE `id`=in_id; UPDATE `table_b` SET `del_flg`=num WHERE `id`=in_id; UPDATE `table_c` SET `del_flg`=num WHERE `id`=in_id; COMMIT; END // DELIMITER ; としておき CALL SET_FLG(2,1);
携帯はSJISベースで行うのが妥当、SQLはUTF8で問題ないです。 検索用にデータを投げる際に、エンコード情報をつけるのが賢明。
alter table customer add key ( name ); alter table follow add key ( my_user_id ); alter table tweet add key ( user_id ); のINDEXを追加して select customer.name, tweet.tweet_comment, tweet.`date` from customer join tweet on customer.id = tweet.user_id where customer.name='次郎' or exists ( select 1 from follow join customer on follow.my_user_id = customer.id and customer.name ='次郎' where tweet.user_id = follow.target_user_id );
>システムファイルに作成した「/data」には「HD10G」のシンボリックリンクをはっているのですが、ここにMYSQLのテーブルをストライピングさせようと、MySQLにログインしたユーザーから以下のコマンドを実行しました。 環境についてはよく分かりませんが、気になるところがいくつかあるので確認してみることをお勧めします。 sudo chmod 777 /data これは多分、 /data シンボリックリンクに対して設定しているのであってディレクトリに対するアクセス権限を付与したことになっていないのかも知れません。そうすると、 /tmp はディレクトリですのでうまくいくわけです。 仮に、シンボリックリンクを作成して任意のアクセス権限を付けて、そのアクセス権限でアクセスできるとしたら、任意のファイルに対してアクセスできるというセキュリティ問題になることは常識的に考えられます。 つまり、 /data のリンク先のディレクトリに対するアクセス権限を変更する必要があると考えられます。 /data ==> /mnt/hda sudo chmod 777 /mnt/hda みたいな感じかなと思います。 参考になれば幸いです。
ちょいとjqGrid調べましたが、 要は後ろでPHPか何かのスクリプトが動いているワケですよね？ PHP側でif ( $param === '') {...} みたいにしたら良いのではないでしょうか。
mysqlではなく、cmd.exeから直接叩けば良いんじゃないでしょうか ただ、xcopyで送り元dirごと移すオプションって無かった気がします。 次のように一旦変数に入れといてやれば、取り敢えず動くと思います。 set src_dir=a xcopy c:\%src_dir% c:\b\%src_dir%\ /E
たぶんエクセルからでるcsvはshift-jisなので、エディタかなにかで utf8にデータコンバートしてから投入してはどうでしょうか？
localhostの名前解決ができていないのでは？ IPv6の絡みかもしれませんのでlmhostsやhostsを見直してみてください
show table statusで拾えないので、PHPでsystem系の関数で ls(もしくはdir)コマンドで拾うのが妥当かと。
単に2回実行されているということはありませんか？ 私も以前似たようなケースでハマったことがあり、その際はとあるセキュリティソフトがURLを先読みしていたのが原因でした。 （セキュリティソフトがURLを先読みした後、自分がクリックするから2回実行される） mysql_queryを自分の関数で置き換えてログを取る等、どのような順番でSQL文が発行されているのかロギングして原因を調査するのが良いと思います。
ちなみに#1さんの回答はサブクエリを使わず、こう書いた方が インデックスが効きやすいかもしれません select A.jikan as nyuushitsu,min(B.jikan) as taishutsu,A.hito from t1 AS A left join t1 AS B on A.hito=B.hito and B.inout='out' and A.jikan<B.jikan where A.inout='in' group by A.jikan,A.hito
DROP USER testuser@localhost; じゃダメなんですか？どうしてもなら delete from mysql.user where Host='localhost' and User='testuser';
＞新環境に引き継ぐにはどうしたらよいでしょうか？ 普通に考えれば元DBでダンプして、新DBに流し込むのが妥当です。 元）mysqldump -uroot -ppassword -t -Q mysql user> user.sql 新）mysql -uroot -ppassword -D mysql < user.sql みたいな感じ？ バージョンが違う場合は一部仕様がかわっているので、 ダンプしたデータをエディタでちょこちょこっと修正が必要です。 ＞3ファイルを、 ＞新環境にコピペしたらいいのかな？ バイナリデータはバージョンが変わるとほぼ使えないものと思った方がよいです。
前の質問も閉じずになんども同じ内容で質問を繰り返すのは 非常に失礼な行為です。慎むべきでしょう。 そうでなくても質問を連投していますが、すこしは自分で調べてるのでしょうか？ copyコマンドはファイル名をプラスでつなげられます。 一度テンポラリーのファイルをつくって一気に投入すればよいでしょう copy /b a.sql+b.sql+c.sql temp mysql -u root -p < temp
Vistaや7でmysqlを使ったことがないので分かりませんが、うちのPerlプログラム作成・検証用に使ってるXP機だと、 default-character-set=sjis にしてます。 ＞my.ini 内の [mysql]、[mysqld]、[mysqldump] の部分を変更したのですが、文字化けが直りません。 ついでに、[client]にも default-character-set=sjis でだめですかね？
WERE → WHERE　じゃないですか？？ あと、頭にから始まる "SELECT ~ " もないような・・・。
解決しているみたいですが create index idx_order_id on tableD ( order_id, icons ); で索引つくって select tableA.id , tableA.body , tableB.name , tableB.sex , tableC.num , tableC.order_id, group_concat(tableD.icons order by icons) FROM tableA inner join tableB on tableA.id = tableB.id inner join tableC on tableA.id = tableC.id inner join tableD on tableC.order_id=tableD.order_id group by tableD.order_id; 実行計画を比較してみてください。
idごとの連続日付の最大回数を求めるファンクションをつくってみました。テーブル名じゃ便宜的に「tbl」にしてあります。 delimiter // create function consecutive_date( inp_id int ) returns int begin declare done int; declare dt date; declare sv_dt date; declare i int; declare j int; DECLARE myCursor CURSOR FOR select `date` from TBL where id = inp_id order by `date`; DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1; set done = 0; set i = 0; set j = 0; set sv_dt = null; set dt = null; open myCursor; repeat fetch myCursor into dt; if sv_dt + 1 = dt then set i = i + 1; elseif sv_dt is null then set sv_dt = dt; set i = 1; set j = 1; else if i > j then set j = i; end if; set sv_dt = dt; set i = 1; end if; until done = 1 end repeat; close myCursor; return j; end; // delimiter ; select distinct id, consecutive_date(id) from tbl;
SELECT * FROM mysql.proc WHERE db='db名' AND type='FUNCTION'
EXEが作れるソフトを買うなり、「BAT EXE化 フリーソフト」などでぐぐった ソフトで処理するなりすればよいかと
＞私には難しくて、まだ理解できていませんが・・・。 私の理解がまちがっているのかもしれませんが、 hoge.batというバッチファイルを実行しているのですよね？ であれば#2で書いたように (1)中身をカッコで囲む (2)ファイルの最後の行に以下記載する >>C:\log\result.log 2>&1 たぶん、バッチファイルの基本をご理解なさっていないのだと思います。 学習するか、別の方法を模索された方がよいかもしれません。 （もっと難しいかもしれませんがWSHなどの方がイメージはしやすい）
＞同じデータがない場合 INSERT IGNORE INTO ・・・ で事足りるかと。
単純にローカルホストでログインしたuserさんには権限がないということでしょう ルート権限ではいってuserに権限を付加するか、ルート権限で処理してみては どうでしょうか？
蛇足ですが・・・ DB管理者はテーブルの作成・削除でさえ細心の注意が必要です それをデータベースの削除となると「もしあれば削除」レベルの考え方は いかがなものかと。 機能として利用するのはかまいませんが、あまり現実的な機能とはいえません。 （演習で削除するのが前提になっている環境など条件によっては有効ですが）
ポイントは試合結果テーブルを分けることだと思います。そして、得点者テーブルと警告者テーブルは必要ないでしょう。あとでビューを作りましょう。 以下のような設計を提案します。 １　テーブル　6種類 (1)　メンバテーブル(id,名前,ポジション) (2)　コートテーブル(id,コート名、所在地) (3)　対戦チームテーブル(id,チーム名,ホームコートid) (4)　試合テーブル(id,日付,対戦チームid,コートid,ホームアウェイ区分) (5)　試合選手情報テーブル(試合id,ポジションコード,選手id) ポジションコード20をサブに、21を途中出場とする。 (6)　試合情報テーブル(試合id,情報コード,データ) この試合情報テーブルの情報コードが大切で、例えば、 1:試合得点->データは4桁で2桁自チーム得点、2桁相手チーム得点 2:得点者->データはメンバidで、当然得点と同じレコード数になる。 3:警告者->データはメンバid 4:PK情報->10ビットを10進数化し記録、1ビートがゴールかセーフかを意味する。 5:退場者->データはメンバid 6:試合時間 7:その他 などと決めて、横に項目を広げないようにします。 試合情報テーブルのレコード例 101,2,506 ２　E-R図 対戦チームテーブル<-+-試合テーブル<--試合情報テーブル-->メンバテーブル　　 コートテーブル<----+ ３　ビュー (1)試合出場選手出力ビュー SELECT メンバid, 日付　FROM 試合テーブル,試合選手情報テーブル WHERE 試合テーブル.id = 試合選手情報テーブル.試合id AND (ポジションコード<=11 OR ポジションコード=21) (2)ホーム得点者情報ビュー SELECT メンバid, 日付　FROM 試合テーブル,試合情報テーブル WHERE 試合テーブル.id = 試合情報テーブル.試合id AND ホームアウェイ区分 = 0 AND 情報コード = 2 (3)各選手アウェイ得点集計ビュー SELECT データ,COUNT(*) FROM 試合テーブル,試合情報テーブル WHERE 試合テーブル.id = 試合情報テーブル.id AND ホームアウェイ区分 = 1 AND 情報コード=2 GROUP BY データ デバッグしていませんが、このようにリレーションを効かせると自由に情報を集計できます。
フィールドXはchar型ですか？ 半角スペースの羅列をNULLと判断することはないので char型は表示の際に末尾のスペースを省略します http://dev.mysql.com/doc/refman/5.1/ja/char.html 本当に空白ではなくNULLになっているならどのような インサートをしているか例示してみてください。 create table hoge(id int not null primary key auto_increment,c char(10),v varchar(10)); insert into hoge(c,v) values ('a','b') ,(concat(repeat(' ',3),'c'),concat(repeat(' ',3),'d')) ,(concat('e',repeat(' ',3)),concat('f',repeat(' ',3))) ,(repeat(' ',5),repeat(' ',5)); select id,c,length(c),v,length(v) from hoge;
こんな感じでしょうか？ select `id`, `name`, `parent_id` from `tbl` where `id` = '0001' or `parent_id` = '0001' union all select `id`, `name`, `parent_id` from `tbl` where `parent_id` in ( select `id` from `tbl` where `parent_id` = '0001' ); 最近のOracleやPostgreSQL、SQL Serverでは with t as ( select id, name, parent_id from tbl where parent_id = '0001' ) select id, name, parent_id from tbl where id = '0001' union all select id, name, parent_id from t union all select id, name, parent_id from tbl where parent_id in ( select id from t ) とも書けますが。
　たしか、５．０からの機能だった思いますが、FEDERATED テーブルではどうですか？ 　次のリンクは、５．１の該当箇所のマニュアルです。 　http://dev.mysql.com/doc/refman/5.1/ja/federated …
IDの最小値をとるなら簡単な話で select pref,city,town FROM テーブル WHERE id IN(SELECT min(id) FROM テーブル GROUP BY pref)
UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...) [index_option ...] http://dev.mysql.com/doc/refman/5.1/ja/create-ta … ですから「UNIQUE」「UNIQUE INDEX」「UNIQUE KEY」は同義でしょう。 値が一意(unique)であることを保証する情報は，実表(create table)自体が持つのではなく，索引表(create unique index)が保持しています。 ですから，user_name_index が索引表名 [index_name] で，(user_name) が列名 (index_col_name,...) でしょう。
>indexを張るにしても、サーバー内部では100万行をサーチしているのですよね。 インデックスに従いサーチ範囲が絞られます。 「ユーザIDで検索」のように単純な仕組みなら、素直に数1000分の1のコストで検索できるかと。。。 >ちなみにmakefile方式で各ユーザーファイルを見に行く方式であれば、10年前の低スペックサーバー（「1GHzX2CPU」「メモリ2GB」程度）で4万人のユーザーを問題なく処理できていました。 「xx:xx～yy:yyの時間帯処理」の検索や「商品●●の販売履歴」なんかのユーザをまたがった処理は可能なんですかね？(まあ業務的に不要ならいいのですけど) また、トランザクションの一貫性保証や障害時のリカバリ手順なんかも用意できているんでしょうか？
毎回３回SQLを発行するがめんどうということ？ プロシージャーをつくっておけばよいのでは？ DROP PROCEDURE IF EXISTS INSERT_A_TO_BCD; DELIMITER // CREATE PROCEDURE INSERT_A_TO_BCD() BEGIN START TRANSACTION; INSERT IGNORE INTO tableB (name,address,phone) SELECT name,address,phone FROM tableA; INSERT IGNORE INTO tableC (name,sex,birth) SELECT name,sex,birth FROM tableA; INSERT IGNORE INTO tableD (name,company) SELECT name,company FROM tableA; COMMIT; END // としておけば、あとはINSERT_A_TO_BCDをCALLしてやるだけです。 CALL INSERT_A_TO_BCD;
mysql はインラインビューに明示的に別名をつけないといけないようですね。 SELECT t.会員ID, t.日付, SUM(t.金額) 合計金額 FROM ( SELECT 会員ID, 日付, 金額 FROM t1 UNION ALL SELECT 会員ID, 日付, 金額 FROM t2 UNION ALL SELECT 会員ID, 日付, 金額 FROM t3 ) t GROUP BY 会員ID, 日付;
> そして、全くエラーも出ません。 > ＰＨＰ上では「書き込みました」と、いかにも正常なようなメッセージが返って > きます。が、中身は空です。 phpのプログラムがきちんとエラートラップしてなければ、そのままスルーしている可能性もあります。 > ＰｈｐＭｙＡｄｍｉｎでは書けます ということなら、一番怪しいのはphpで接続しているユーザーの権限でしょうか。 SELECT権限しかないなら参照は出来ても更新・削除・挿入はできません。
MySQLのInnodbエンジンなら基本は行ロックです。 しかし、行ロックはロックの粒度が細かい分、管理するリソースが大きくなりがちです。 このような場合、テーブル全体をロックして処理するほうがパフォーマンスが上がる場合があります。 もちろん、LOCK TABLEでロック中は他のセッションから更新できませんから、常にこのようなやり方が有効な訳ではありません。
考え方次第ですね 通常SQLで管理するマスターデータや、定型でプールされていくような売上・ログなど と異なり、日記というと冗長で可変なデータになると思います。 MySQLの場合、char(varchar)系のデータと異なり、冗長なデータへの検索は あまり得意ではありません。たとえば前方後方一致「カラム LIKE '%hoge%'」的な 書き方はインデックスが効かずデータがたまってくると相応に重くなってきます。 英語圏では全文検索で解決できますが、日本語のように分かち書きがないものは 標準では検索対象としては適さないのが実情です。 つまり、たんにデータをだらだらと貯めていくだけならDBに乗せる必要はなく よくあるwikiのようにテキストデータでためておく方が管理しやすいということです。 MySQLではテキストデータのリレーション情報だけ管理することになります。 （SQLはあくまでも集計用だと割り切ってしまうということです） たとえば日記ID、テキストファイルの名称、ユーザーID、作成日、更新日、 削除フラグなどを取っておけば、別の人が「イイネ」をつけるとしても 日記IDだけ保持すればよいでしょう。
条件が以下３つ、すなわち ・子スレッドは必ず親スレッドより新しくなる ・親スレッドに対して子スレッドは複数存在する ・子スレッドに対して子スレッドはない であれば、以下の単純なクエリで必要十分かと SELECT IF(parent_id=0,id,parent_id) AS xid,MAX(created) AS created FROM T_ROOM GROUP BY xid ORDER BY created DESC 汎用性を考えると以下になるかもしれません。 SELECT T1.id,T1.parent_id,COALESCE(MAX(T2.created),T1.created) AS created FROM `T_ROOM` AS T1 LEFT JOIN `T_ROOM` AS T2 ON (T1.id=T2.parent_id) WHERE T1.parent_id=0 GROUP BY T1.id ORDER BY created DESC
こうですね select id from `table` where hoge in('AAA','BBB') group by id having count(distinct hoge)=2 つまり、hogeがAAAかBBBのデータをidごとにカウントして 2個であるidが正解です
環境がちがいますので、参考になるかわからないですが、 my.iniが違うように思います。 Windows上でmy.iniを検索し複数存在していないか確認してみてください。 （またはmy.ini.orgなどバックアップふぁいるになっているかなどないでしょうか？） WindowsXP、MySQL５．１ではdatadirの記述位置にDBがありました。 mysql performance_schema は『C:\Eclipse\xampp\mysql\data』にはありましたが、他の場所にはありませんでした。 （MySQLはC:\MySQLにインストールしているので） 以上、参考になれば幸いです。
SELECT 日時, 商品名, SUM(売上) FROM TABLE_A GROUP BY DATE_FORMAT(日時, '%Y%m')
GROUP_CONCATするならGROUP BYするのが妥当かと GROUP_CONCATせずにPHP側で集計する方が条件は調整しやすいですけどね SELECT GROUP_CONCAT(CONCAT(name, '：', CAST(weight AS CHAR), 'kg') SEPARATOR '/') AS weight ,CONCAT(cast(height as char),'cm') AS height FROM ex_table GROUP BY height
>2011-06-18 >2011-06-16 >2011-06-12 3日じゃなくないですか？ 結果がdateだけではなくなりますが、以下の感じでどうでしょうか。 SELECT DATE_FORMAT(table_a.date,'%Y-%m-%d') as formatdate,date FROM `table_a` WHERE DATE_FORMAT(table_a.date,'%Y-%m-%d') >= date_add(CURRENT_TIMESTAMP(), interval -3 DAY) GROUP BY formatdate 日付だけ取りたいなら SELECT DISTINCT DATE_FORMAT(table_a.date,'%Y-%m-%d') as date FROM `table_a` WHERE DATE_FORMAT(table_a.date,'%Y-%m-%d') >= date_add(CURRENT_TIMESTAMP(), interval -3 DAY) とするとか # WHERE句でDATE_FORMATしていますが、日単位になるのかどうかわからない（未検証）なので、変換しています。
Host：localhostに対してUser：controluserは適切に設定されていますか？ また設定後flush privileges していますか？
きっちり動くかどうか怪しいですがこんな感じで変数をつかってみては？ 以下と未満は違うので注意してください SELECT * FROM mytable WHERE col_a BETWEEN ( 100 - ( @a :=( SELECT IF(COUNT( * )>=10,10,20) AS CNT FROM mytable WHERE col_a BETWEEN ( 100 - ( @b :=10 ) ) AND ( 100 + @b ) AND col_b BETWEEN ( 100 - @b ) AND ( 100 + @b ) ) ) ) AND ( 100 + @a ) AND col_b BETWEEN ( 100 - @a ) AND ( 100 + @a )
xamppのバージョンにもよるが、 my.ini なら　xampp\mysql\bin　以下にあります。 自分で作る必要ありません。 ※因みに旧バージョンのxamppならmy.iniではなくmy.cnfになります。 起動できないということは多分 my.iniへのパスが通ってないということだと思うので その辺りを確認して見るといいと思います。
縦×横の正方行列を作りたいという趣旨でしょうか？ SQLとしては最悪のデータの持ち方です。 正規化について理解を深めた方がよさそうです。 実際には日付とidの組合せで1レコードずつ追加して、 表示の際に縦×横となるように処理することになります
サブクエリのほうが視覚的にわかりやすいと思います。 監督名をとりだす。 SELECT E.タイトルid J.名前 AS 監督名 FROM 映画関係者テーブル E INNER JOIN 人物テーブル J ON E.監督id = J.id これを監督名テーブルとすると SELECT E.タイトル --略--- K.監督名 FROM 映画テーブル E INNER JOIN 監督テーブル K ON E.id = K.タイトルid 監督テーブルをもとのクエリにもとすと SELECT E.タイトル --略--- K.監督名 FROM 映画テーブル E INNER JOIN (SELECT E.タイトルid J.名前 AS 監督名 FROM 映画関係者テーブル E INNER JOIN 人物テーブル J ON E.監督id = J.id) K ON E.id = K.タイトルid キャストも同様に
ん？テーブルの結合だけでしたら [INNER JOIN](等結合)とか、[LEFT JOIN](外部結合)とか色々ありますし、結合するテーブル数はさしたる問題にはならないはずですが・・。 テーブルの関連付け方がよくわかりませんが ------------------------------------------------------------------------------ SELECT 映画テーブル.タイトル ,映画テーブル.画像 ,映画テーブル.制作年 ,映画テーブル.あらすじ ,批評テーブル.感想 　・ 　・ 　・ FROM 映画テーブル INNER JOIN 批評テーブル ON 映画テーブル.ID = 批評テーブル.タイトルid INNER JOIN ジャンルテーブル ON 映画テーブル.ID = ジャンルテーブル.タイトルid 　　　・ 　　　・ 　　　・ ------------------------------------------------------------------------------ と「映画テーブル.ID」と「hogeテーブル.タイトルID」をINNER JOINで結合していけば良いように思えますが・・・。
なんかリンクになって表示が変なのでもう一度 create table dtb_products(id int,main_comment varchar(100)); insert into dtb_products values(1,'ttp://user_data/hoge'),(2,'ttp://user_dataxxxx'),(3,'ttp://user/hoge'); update dtb_products SET main_comment=REPLACE(main_comment ,'ttp://user_data','/user_data');
AかつBならIFをつかってANDでつなげばいい気がしますが・・・ CASEにこだわるなら、WHENで条件外をしぼってELSEで実数を得ればよいかも ざっくり今回のだとこんな感じ？ SELECT name,start_time,end_time,break_time ,CASE WHEN end_time<'22:00:00' THEN NULL WHEN TIMEDIFF(TIMEDIFF(end_time,start_time),break_time)<='08:00:00' THEN NULL ELSE TIMEDIFF(end_time,'22:00:00') END AS SHINYA FROM schedule
読み込みはINDEXスキャンなのか、FULLスキャンなのかで違ってきます、データ量が多い状況でFULLスキャンが頻発するとパフォーマンスがあっという間に落ちます。 逆にINDEXスキャンで少量のデータを低頻度でアクセスするなら数十Gバイトでも十分実運用に耐えられるでしょう。 書き込みはDISKのIOPS（一秒間あたりのアクセス能力）に大きく影響されます、これは現行のDISKではほぼ数百程度です。 ランダム書き込みではこの壁は超えられません。MySQLというよりハード能力の限界ですね。 メインドライブをSSDにして、ログファイルをさらに2DISKに分離配置するなどすると大幅に能力が向上します。 問題になるのは、元にあったデータ量ではなく、INSERT、DELETE、UPDATEする量ですね。
>これってCSRFとXSSを組み合わせた手法とはまた別物なのでしょうか。 >この場合SQLインジェクションはどの部分に組み込まれているのでしょうか。 DBからユーザがアクセスするたびに出力される部分を SQLインジェクションにより「書き換え」ます そうすることでこの書き換えた物が毎回呼び出されると言う仕組みだと思うのですが >一覧を返すクエリとは「desc」の事でしょうか。 describeやshowですね あくまでも扱っているSQL文は参考程度でお願いします＾＾； 「' or 1=1;DELETE FROM users;」 シングルクォーテーションのエスケープは皆さん考えられている事が多いので 余り通用しないかもしれませんが、逆にそれがない場合の考慮が漏れているケースが多いかと思います 「0;DELETE FROM users;」 文字列ではなく数字を入力させるタイプなら通ってしまうかもしれません 参考URL：http://dev.mysql.com/tech-resources/articles/gui …
ポイントとしては日をまたぐ処理でしょうね たとえば、昼の12時を区切りに当日と翌日を振り分けるとか・・・ 一定のルールが必要でしょう。 create table schedule( staff_id int,work_day date,work_start time,work_end time,service_start time,service_end time, unique (staff_id,work_day)); insert into schedule values(1,'2011-06-08','18:00:00','06:00:00','18:15:00','05:45:00') ,(2,'2011-06-08','18:00:00','23:40:00','18:15:00','23:30:00') ,(3,'2011-06-08','01:00:00','06:00:00','01:15:00','05:45:00'); SELECT staff_id ,addtime(work_day,work_start)+ interval if(work_start<'12:00:00',1,0) day as ws ,addtime(work_day,work_end)+ interval if(work_end<'12:00:00',1,0) day as we ,addtime(work_day,service_start)+ interval if(service_start<'12:00:00',1,0) day as ss ,addtime(work_day,service_end)+ interval if(service_end<'12:00:00',1,0) day as se FROM schedule ID=1は終了が12時前なので6/9とみなす ID=2は終了も当日 ID=3は開始が12時前なので6/9とみなす あとはこの時間とNOW()を比較するだけだとおもいます
すみません#2ですが#1さんが正しい （#2で動作しますが、SQL的には無駄な表記になってます）
B.status_id→B.sidなら SELECT SUB.id,SUB.sid,B.name FROM (SELECT DISTINCT A.id,B.sid FROM A,B) AS SUB LEFT JOIN A ON SUB.id=A.id AND SUB.sid=A.status_id LEFT JOIN B ON A.status_id=B.sid みたいなのでどうでしょう？
FreeBSDならcron実行できますから。 #!/bin/sh mysql -u ユーザー名 -pパスワード データベース名 < SQLファイル cat < /dev/null > SQLファイル という実行ファイルa.shを作り flock --timeout=999 SQLファイル ./a.sh をcronに設定します。 逆にphpでSQLファイルにINSERTコマンドを追加する際にはflockを使ってファイルロックしてからにしてください。
抽出方法としては、2つのテーブルをidで連結し、idでグループ化して、sub_count の合計とcountが違うと言う条件で検索すればよいでしょう。 例 ----------------------------------------------- SELECT table_a.id, count, SUM(sub_count) FROM table_a LEFT OUTER JOIN table_b USING(id) GROUP BY table_a.id, count HAVING count != SUM(sub_count); -------------------------------------------------- (Ver.5.5.8で確認しました。MySQLのバージョンによってはエラーが出るかもしれません。) > ERROR 1111 (HY000): Invalid use of group function > 何が悪いのでしょうか？ SQLの構文的には最後の行です。 > table_A.count != sum(table_B.sub_cout) WHERE句に集約関数を書いているためです。 また、サブクエリでtable_bのsub_coutを合計していますが、WHERE句に何も記述が無いので検索条件には反映されません。 書き直してみると下記の様な感じになるかと思います。 (こちらでも正しい結果が得られるかと) 例 ----------------------------------------------- SELECT table_A.id FROM (SELECT id, sum(sub_count) AS total_sub_count FROM table_B GROUP BY id) AS B, table_A WHERE table_A.id = B.id AND table_A.count != B.total_sub_count -------------------------------------------------- 参考URL：http://www.techscore.com/tech/sql/SQL5/05_08.htm …
ホントのところ、この手の処理は物件に対して最寄駅が不定なため 別テーブルにするのが正しいです。 構造が変えられないわけではないなら、検討ください
追加で確認。 A_tableには追加データをcsvファイルをインポートするとして、その同じcsvファイルをB_tableにインポートする以外に、B_tableに追加すべきデータを特定する手段はあるのでしょうか？ 例えば、A_tableとB_tableは常に同じデータが入るようにしていて、二つのテーブルの差分検索で特定できるとか。
OSは何ですか？ LinuxなどえLANG環境変数がja_JP.UTF-8なら文字化けはしないと思います。 Windowsでは「SET NAMES CP932;」にしないと正常に文字コード変換できません。
後考えられるのは一時的にマルチプルインサートのINSERT行数を増やすことです。 そのため、「max_allowed_packet」グローバル変数を一時的に変更しなければいけないのと、ダンプファイルのINSERT文を編集する必要があります。 以下はダンプファイルを編集するperlスクリプトの例です。ここではINSERT文の最大サイズを128MBにしています。 ただし、メモリに空きがないのにあまり大きなサイズを指定してもかえってスラッシング起こしてしまうのでマシンの状況を見て値を調整することが必要です。 printf("SET GLOBAL max_allowed_packet = 134217728;\n"); $size = 0; while (<>){ chomp; if( $_ =~ /INSERT/ ){ $_ =~ /(^[^;]+);/; $buf = $1; while(<>){ if( $_ =~ /INSERT/ ){ chomp; $_ = /^INSERT INTO [^ ]* VALUES([^;]*);/; $line = $1; if( ( $size + length($line) ) > 134217728 ){ print $buf,";\n"; $buf = $line; $size = length($line); }else{ $buf = $buf . "," . $line; $size = $size + length($line); } }else{ print $buf,";\n"; $buf = ""; $size = 0; last; } } } print $_,"\n"; } print "SET GLOBAL max_allowed_packet = 8388608;";
直接の回答になっていませんが、MySQL 5.5.9で character_set_client　　　　：utf8mb4 character_set_connection　：utf8mb4 character_set_database　　：utf8mb4 character_set_filesystem　：binary character_set_results　　　：utf8mb4 character_set_server　　　：utf8mb4 character_set_system　　　：utf8 の状況で、rubyからなら「
DBMSの持つ重要な要素の一つが、「データの独立性」です。 これは、DBの定義変更があっても、その変更部分を直接操作しないアプリは、変更する必要がないというものです。この意味は、DB操作だけでなく、直接ファイル操作するようなアプリを数多く開発した経験がある人なら、その重要性が分かるでしょう。 RDBMS登場以前の階層型DBMS、ネットワーク型DBMS、それらの国際標準規格準拠の構造型DBMSでは、DDLで吸収していました。 RDBMSでは、これをさらに「データ受け渡しする列を、事前に定義系SQLで定義せず、操作系SQLで決められる」という特長を持ちました。 RDBMSでの実装の上で問題になっているのが、「データ受け渡しする列数が多くなると、極端に性能劣化してしまう」ということです。 大規模システムではこのオーバヘッドは非常に影響が大きく、いくつかのRDBMSでは、この解決手段として、「固定長の列だけで表を構成した場合、性能向上を図れる」、あるいはこれとの組み合わせなどで、「表の定義順で全列を受け渡しする場合、列数が増えても一定の性能を出せる」といった性能対策を実装しているものもあります。 MySQLでも、固定長の列だけで表を構成した場合、性能向上を図れるといった性能対策を行っています。 これらのことから、「実際に操作する必要最小限の列だけを、明示的に指定する」といったことが推奨される大きな要因になっています。
データの持ち方を考え直しましょう おそらく固定な情報部分A,Bと、可変なデータ部分C,D,E,F,Gをわけて管理します。 //情報部分 create table hoge_info (id int not null primary key,name_a varchar(10),name_b varchar(10)); insert into hoge_info values(1,'yx','bc'),(2,'yx','db'),(3,'wr','ky'); //データ部分 create table hoge_data (info_id int,info_kind varchar(10),val int,unique(info_id,info_kind,val)); insert into hoge_data values(1,'C',1),(1,'D',1),(1,'E',2),(1,'G',4) ,(2,'D',1),(2,'E',1),(2,'F',1),(3,'C',4),(3,'E',2),(3,'F',1),(3,'G',1); //初期表示 select id,name_a as A,name_b as B ,d1.val as C,d2.val as D,d3.val as E,d4.val as F,d5.val as G from hoge_info as i left join hoge_data as d1 on i.id=d1.info_id and d1.info_kind='C' left join hoge_data as d2 on i.id=d2.info_id and d2.info_kind='D' left join hoge_data as d3 on i.id=d3.info_id and d3.info_kind='E' left join hoge_data as d4 on i.id=d4.info_id and d4.info_kind='F' left join hoge_data as d5 on i.id=d5.info_id and d5.info_kind='G'; //5以上を表示する select info_id as id,sum(val) as vals from hoge_data group by info_id having vals>=5
ちょっと興味があったので首を突っ込んだ程度のものです。 確かにそのままではテキスト型でリンクされますね。 下記の方法で解消できました。 1.ODBCの設定で、該当のデータソースを選んで、[構成]を押す。 2.出てきたダイアログの一番下[Details]をクリック。 3.[Metadata]タグをクリック。 4.一番上の[Treat BIGINT columns as INT columns]にチェックを入れ[OK]
$con = mysql_connect($server,$user,$password); mysql_query("SET NAMES utf8",$con); 上記のように書いてもだめでしょうか？ 私の場合は、ロリポップでしたが、utf8_general_ci　にし、上記コードを書きこむと、文字化けしなくなりました。
SELECT char_length(c_honbun)-char_length(replace(c_honbun,'す','')) FROM table3; みたいな感じ？
うーん、後は、xamppとか入ってて、別のPHPや別のMySQLが入ってる可能性くらいしか思いつかないなぁ
mysqldumpはmysqlユーティリティのプロンプトから使うのではなく、シェルプロンプトから起動するコマンドです。 >mysql -u root -p でログイン出来るパスワードで mysqldump -u root -p > 'ファイル名' を実行して見てください。ただし、指定するファイルのパスに書き込み権限が必要です。
リンクが切れたために、メディア検出機能によって、ネットワークアダプタのプロトコルがアンロードされているためではないでしょうか。 メディア検出機能を無効にして試してみてはどうでしょうか。 Windows で TCP/IP のメディア検出機能を無効にする方法 http://support.microsoft.com/kb/239924/ja
すみません、サイトの方で半角カナを自動的に全角変換してしまうようです。 こちらでは、項目名 collate utf8_unicode_ci = 比較対象 で比較対象が半角カナでも全角でも一致してくれます。
多分、無理だと思います。
具体的なアドバイスを得たいなら、もっと具体的な情報を提示してください。 >それを access クエリで統合し、フォームを作成しました。フォームで入情報を入力していると、 >a_auto と b_auto が異なる値で保存されてしまいます。 表定義の各列に、どのように値を格納しているのか提示しなければ、誰もアドバイスできません。 そもそも、MySQLのauto_incrementを利用すべきでないのでは？ MySQLのauto_incrementは、一意な数値のキー値を自動的に作ってくれる機能です。 大まかな特徴としては、次のようなものがあります。 (1)nullを格納で、自動生成 (2)定数を格納すると、その値が入る。その値がそれまでの最大値なら、それ以降の値が自動生成される (3)deleteしても、元に戻って自動生成はしてくれない (4)ロールバックしても、元に戻って自動生成はしてくれない (5)(2)～(4)などにより、連番になることは保証していない したがって、テーブル a と b に、どのようにinsertしているのか、といったことを提示しなければ、誰もアドバイスできません。 また、「二つのテーブルに同一値を格納する」という要件があるなら、それを利用者側で保証する仕組みを作る必要があります。 その仕組みを作るために、MySQLの外部キー制約を活用するとか、トリガで実装するとかといったことは考えられます。 （トリガは、MySQL 5.0での実装です。MySQLのバージョン提示も、MySQL 4.1、5.0といったレベルまで、最低限、提示するようにしてください）
多分MySQLには\n（16進で0A、10進で10、VBAではvbLf）で格納されているのでしょう。 ACCESSで改行表示するには\r\n（ 16進で0D0A、10進で1310、VBAではvbCrLf）でないといけません。 表示する項目がフィールド１だったら、表示する際に replace（フィールド１,vbLf,,vbCrLf） にして見てください。
＞keyword01,keyword02....keyword10と、別のカラムで作成 これもあまり正しいとは言えません こんな感じでどうでしょう？ create table tb (name varchar(30) not null,keyword varchar(30) not null,unique key(name,keyword)); insert into tb values('イチゴ','果物'),('イチゴ','赤'),('イチゴ','甘い'),('イチゴ','春') ,('レモン','果物'),('レモン','黄色'),('レモン','酸っぱい'),('レモン','種あり'),('レモン','柑橘類') ,('ミカン','果物'),('ミカン','橙'),('ミカン','甘い'),('ミカン','酸っぱい'),('ミカン','柑橘類'),('ミカン','冬'),('ミカン','こたつ') ,('ブドウ','果物'),('ブドウ','紫'),('ブドウ','甘い'),('ブドウ','皮あり'),('ブドウ','種あり'),('ブドウ','ワイン') ,('人参','野菜'),('人参','橙'),('人参','固い') ,('大根','野菜'),('大根','白'),('大根','おでん'),('大根','冬'); //ここまでがデータ作成、以下抽出 select name,count(*) as count from tb where keyword in ('果物','甘い','種あり') group by name order by count desc
表の構成列は6個あるのに、csvファイルは5個しか値がないのでしょうか？ insert文では格納できたというのも、実際に使ったinsert文と違っているのでしょうか？ →列名のリストを省略しているのに、values句では5個の値しか指定しておらず、エラーになるはず。 >外部ファイルから読み込んだ場合にNULL値を設定するにはどのようにしたら 表の定義通りの順序、個数でcsvファイルを作るのであれば、 \N を入れておけば、nullで格納できます。 「表の定義通りの順序、個数でcsvファイルを作らずに」といった要件があるなら、具体的な内容を提示してください。
xamppのような統合されたMySQLは、利用していませんが、同じほうほうで解決するとおもいます。 　 >(using password :no) 初期のパスワードが違う可能性があります。 　 １．あきらめて、再度データベースを構築するなら、 MySQLホルダ配下のbinに,MySQLInstanceConfig.exe があるので、これを実行することにより再度構築できます。 新規やマニュアルを選んでも途中にパスワード入力画面が表示されるので、ここを慎重に行う。 最後まで実行されたら、解決させるでしょう。必要なら、古いmy.iniを保存しておき、上書きでもします。 　 ２．あきらめないで、チャレンジするなら、これをインストールして、接続できれば、変更は簡単です。 http://dev.mysql.com/downloads/workbench/5.2.html 私は、コマンドは覚えられないので、MySQL Warkbenchを利用しています。 これだと、接続の設定を一度行うと、GUIなので、簡単にパスワードやらＤＢなどを構築できます。 これを、インストールしておき、あせる事態が発生した時の保険として利用してみては、どうでしょうか？。 http://www-jp.mysql.com/products/workbench/ 右側のServerAdministrationの設定でパスワードなどの変更ができます。 と言っても、設定するためには、rootのパスワードが必要です。 　
MySQLにはありません。NOT EXISTSで代用する方法もあります。
> MySQL４のデータベース上に 「MySQL4」などというバージョンの提示は、提示していないのと同じです。MySQL 4.1、5.0といったレベルまでは、最低限で提示するようにしてください。 すぐに思い出すだけでも、MySQL 4.0と4.1では、次のような大きな機能追加や一部の仕様変更があります。 MySQL 4.0まで・・・一部のジョイン、union、一時表などは実装済み MySQL 4.1・・・サブクエリの実装、ジョインの拡張、unicodeの実装。それにより、varchar(n)のnが、バイト数から文字数に仕様変更 MySQL 5.0・・・ビュー表、ストアドプロシジャ、トリガなどの実装 #1さんからexistsを使った具体的なSQL例が提示されていますが、構文エラーになったとのこと。サブクエリは、MySQL 4.1での実装ですが、MySQL 4.0を使っているのでは？ MySQL 4.0で動くかどうか不明ですが、MySQLには他表を利用したdelete文に、独自構文があります。 -- MySQLのdelete文の独自構文 delete b from a,b where category<>2 and a.b_id=b.id
一つだけ追記。 > KEY `tb2idx` (`ジャンルID`,`ジャンルタイトル`,`日付`,`ナンバー`,`ID`) 提示されたSQLの検索条件から、 (`ジャンルID`,`日付`,`ナンバー`,`ID`) の複合キー（複数列）でインデクス定義するようにアドバイスしました。キーの構成順は、どの列でより絞込みができるかで決めると良いと。 しかし、検索条件で指定していない　`ジャンルタイトル`　を、しかも2番目の構成列として入れてしまったら、インデクス上での絞込みが、先頭の`ジャンルID`ででしかできなくなってしまいますよ。
＞PHP、phpmyadmin使用可能なwebサイト これは、サーバーによります。 ですから、すでに借りたサーバー(PODBOY)では使えないようです。 phpmyadminを使えるサーバーを探すか、自宅サーバーを構築するかになると思います。 DNSに関しては、ドメイン取得した業者で独自のDDNS機能を提供しているところもありますので、それを利用するといいと思います。
提示されたcreate table文は、実際に使っているものでしょうか？ 当方、MySQL 5.1を使っていますが、MySQL 5.0でも使用できない構文を多数使っているように見受けられます。 create table文そのものの話より、どういうデータを管理したいか、どういう操作をしたいかを提示して、アドバイスをもらった方がいいように思います。 次の項目は、MySQL 5.0でも指定できないはず (1)text型には、default句を指定できない (2)varcharの長さの省略はできない timestamp型は、MySQL独自の動作をすることは、他の回答者さんからも指摘済み。timestamp型を複数定義していると、最初のtimestamp型が自動更新されるなど、いろいろな独自の動作をします。 MySQLの内部仕様をいろいろ探るより、どういうデータを持ち、どういう操作をしたいのかを提示し、アドバイスをもらった方が意味があると思います。 >d INT DEFAULT 0 primary key こんなdefaultの設定も、普通はしないでしょう。
>`multi_version` init(10) unsigned NOT NULL, init(10)ではなくint(10)では
36進数までなら、conv関数で変換可能。 大文字、小文字変換は、upper、lower関数で。 なお、MySQLは、binaryにしなければ、大文字と小文字を区別しません。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/string-fu …
２です。 型がtextっていうのはさすがにおかしいと思います。 varcharかintにするべきかと。 とりあえず動くSQLを貼っときます。 ちゃんと検証していないので、 適当になおしてください。 SELECT * FROM event WHERE ( ( date_s <= DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL 1 year), '%Y%m%d') AND date_e >= DATE_FORMAT(CURDATE(), '%Y%m%d') ) OR date_s_year IS NULL ) order by CASE WHEN date_s_year is null THEN CASE WHEN concat(date_s_month, date_s_day) < DATE_FORMAT(CURDATE(), '%m%d') THEN CASE WHEN date_e_month is null THEN 2012 WHEN concat(date_e_month, date_e_day) >= DATE_FORMAT(CURDATE(), '%m%d') THEN 2011 ELSE 2012 END WHEN concat(date_s_month, date_s_day) >= DATE_FORMAT(CURDATE(), '%m%d') THEN 2011 END WHEN date_s_year is not null THEN date_s_year END , date_s_month , date_s_day
えっと、省略であれば後者でいいと思います。 ただ、timestmpとdatetimeはどちらも日付型で似たような物すが、厳密に言うと全く別の物です。 まず、サポートしている範囲が違います。 timestmp：'1970-01-01 00:00:00' ～ 2037 年の一定の時点 datetime：'1000-01-01 00:00:00' ～ '9999-12-31 23:59:59' さらには消費バイトも違います。timestmpは4バイトでdatetimeは8バイト もし、RDBMSに依存しないような作りにするのであればtimestmp型を使うのがいいですが・・ MySQLのtimestmpは特殊仕様なので、MySQLでは私はdatetime型を使ってます。timestmpは楽ですが・・MySQLが自動でやってくれちゃうので想定外とかありそうで怖いので・・ なので、前者の方法で突っ込むのが私のやり方ですね。 新規作成時・・・ $sql = INSERT INTO (`Pt_create`,`Pt_update`) VALUES (now(), now())・・ 編集時・・・ $sql = UPDATE SET Pt_update= now()
多くの重要なアドバイスが、欠落してしまってますよ？？？ これが最後のアドバイスです。他の回答者さんからのアドバイスもしっかり見直して、何度も同じ指摘を受けたり、情報の小出しはやめましょう。 まず、他の回答者さんからも、繰り返し指摘されていること！ (1)group by idでは、select句にvote列を指定するのは、結果は保証されない。 (2)vote表に、(id,vote)の複数列インデクスを定義する。 create index vote_ix1 on vote(id,vote); vote列だけのインデクスは、邪魔になるかも知れないので、削除しておいた方がいいかも。 次に、集計結果表を別に作成し、締め日時 or トリガなどで、行数を予め集計した結果を保存。 今のやり方が、どういう問題があるかというと、 (1)毎回、count関数で全idのvote件数を求めている (2)15万件以上ある表を基準に、(1)をleft join →毎回、vote=10の書込みが無いidも、全部、検索してしまう (3)(2)の全件を(1)の降順でソート →毎回、全件を、「作業ファイルを使ってのソート」が発生する (4)(3)の上位100件を取り出し →上位n件を得るには、全件のソートをしないと、順序を決められない ということ！ ↓ これを発想を転換 (1)集計済みの表を定義 id totalvote・・・id毎のvote=10の件数 dt・・・日時での締めを行うなら、日時の情報が必要でしょう。 (2)create table ・・・selectでは、「インデクスは定義されない！」 (3)(1)に、インデクスを定義しておく！ idをpk totalvoteは、更新するので、この時点ではインデクスを外しておく (4)締めの時刻までのid毎のvote=10の行数を、集計し、集計結果を(1)に格納or更新 　行数は、最大でitemの行数。 　行数の最小は、vote=10の書き込みのあるid数 (5)検索前に、(totalvote,id)のインデクスを定義！ 　絞込みもしてない状態で、「作業ファイルを使ったソート」が発生するのが大きなオーバーヘッド。 　totalvote列を先頭キーとしたインデクスを定義することで、インデクスを参照し、実ソートを不要にさせる。 (6)集計結果の表を左側で、item表とジョイン 今のSQLでは、 item表を基本にジョイン（vote=10がない物を含め、15万行余りを検索対象にてしまう 　＆ 　15万行あまりを、毎回、「作業ファイルを使った全件ソート」を発生させてしまう 　せっかく集計結果の表を作ってるのに、vote表から検索したら意味がないでしょ？ item表を基準にleft joinするというのは、vote=10の書込みが無いid（15万件の中から、上位100件を得たいだけ。殆どが最終的に必要のないid）を全件拾うことになり、どんな意味があるのでしょうか？ vote=10の書込みがあるidを基準(score10表）に、item表からname列やprice列を拾えばいいのでは？ -- -------------------------------------------------------------- -- id毎のvote=10の書き込み数の集計結果を保存 -- -- 集計する場合は、cntを先頭キーとするインデクスは外しておく -- -- itemとジョインする時は、cntの降順で得たいので、インデクスを -- -- 定義 -- -- ------------------------------------------------ drop table if exists score10; create table score10 (id int primary key ,totalvote int -- id毎にvote=10の行数の集計値！ ,dt timestamp -- 締め日時の情報が、必要になるかも知れないので ); -- MySQL 5.1まで（？）は、drop indexで if existsを使えないみたい drop index score10idx1 on score10; -- 集計した結果を insert into score10(id,totalvote) select id,count(*) from vote where vote=10 group by id ; create index score10idx1 on score10(totalvote,id); explain select s.id ,(select name from item where id=s.id) as iname ,(select price from item where id=s.id) as iprice ,totalvote from score10 as s order by totalvote desc -- ,id desc limit 0,100 ;
PHP やウェブサーバのログファイルに出ているエラーを確認して、PHP を正しく設定してください。 ここのログファイルはなんて出てますか？？ PHP やウェブサーバのログファイルに出ているエラーをみないとなんとも言えないです・・・。
mysqlのexeを実行するときに、引数に『-uroot』をつけてみてください。mysql -uroot それで、create文を流すとどうなりますか？
訂正です。 select 名前,交通手段,件数 from ( select @rnk:= if( @access<=>交通手段, @rnk+1, 1 ) as rnk, 名前, @access:=交通手段 as 交通手段, 件数 from ( select 名前, 交通手段, count(*) as 件数 from テーブル group by 名前,交通手段 order by 交通手段 desc,件数 desc,名前 ) T cross join ( select @access:=null, @rnk:=0 ) as dummy ) S where rnk = 1 order by 名前,交通手段;
SELECT 名前, 交通手段, COUNT(*) AS 回数 FROM テーブル GROUP BY 名前, 交通手段
config.inc.phpの中に書かれている。パスワードとかの設定が正しくできていないんだと思います。
以下でデバッグしてみてください $link = mysql_connect($db_host,$db_user,$db_passwd) or die("connect error: " . mysql_error()); mysql_select_db($db_name); $rs = mysql_query($str_sql,$link) or die("query error: ".mysql_error()); while($arr_item = mysql_fetch_array($result,MYSQL_ASSOC))
言ってることと、やりたい事は解りましたが、ここで全部を書けるほど、簡単ではないし、 ソースを公開してるとこもないと思います。 仮に公開しているサイトがあったとしても、理解が出来ないと思います・・・。 画像を管理するサーバーも必要ですし、ＷＡＰのサーバーや、アパッチの設定とかが あり、正直、初心者の方に作成できるサイトでは無いような気がします。 それでも、どうしても作りたいというのであれば、LAMP（ランプ）を調べる所からはじめて、 それをインストールして動作確認ができてから、再度、このサイトに質問するのが 良いと思います。 いろいろと大変だと思いますが、頑張って下さい！！
>Coreserver mini (PHP5.2.5 MySQL5.1.22)でMySQLへの書き込みプログラムをPHPで作った これでは、「他人にアドバイスを求める情報提示」になっていません。 どういう表定義をし、どういう文字コードを使用しているのですか？ まずは事実確認から。 phpMyAdminが使えるとのことなので、SQLを入力できる状態で show variables like '%char%' で、実際に有効になっている文字コードを確認してください。 また、 show create table 表名 で、create table文を表示させ、文字コードがどうなっているか確認してください。
select no from t group by no having count(case when tag = 'a' then 1 else null end) > 0 and count(case when tag = 'b' then 1 else null end) > 0 とかでもいいと思います。 no,tagで一意にならないときでも大丈夫なはずです。
utf8_unicode_ci または、tis620 http://ja.wikipedia.org/wiki/%E3%82%BF%E3%82%A4% …
まず、事実確認から。 問題になっているphpのアプリから、SQLを入力できる状態で、 show variables like '%char%' で、実際に有効になっている文字コードを確認してください。 そして、latan1などになっているなら、MySQL接続後、 set names 文字コード を最初に投げてみてください。 不確かな情報ではありますが、 init-connect=SET NAMES 文字コード が、php等で権限がらみなのか「効かない」といった記事がたくさんあるようです。事実確認、要因などは不明ですが、まずは実際、質問者さんの環境がどういう状況になっているのか、これにより回避可能かを試す価値はあるでしょう。 >default-character-set = utf8 を追加するとMySQLが起動しなくなります MySQL 5.1くらいから告知されていましたが、MySQL 5.5で、mysqldでのパラメタのキーワードが変更され default-character-set　は、廃止 ↓ character_set_server　が追加 されました。 一方、クライアントなどは従来通り default-character-set であり、紛らわしい状況になっています。
> もし電話番号に該当者がいない場合は > 「該当者が存在しません」 $stmt->fetch で条件に該当する件数文だけのループを回していますから、 このループ回数が0回だった時が「該当者が存在しない」時ということになります。 それを数える変数処理でも入れておけばいいでしょう。 あと、私の書いたコードでは、事前にテーブルヘッダを出力していますが、これは該当なしの時は出力不要なので、ちょっと順番を変えて ---ここから--- print "<table><tr><th>id</th><th>c_id</th><th>name</th><th>address</th>\n"; while ($stmt->fetch()) { print "<tr><td>$id</td><td>$c_id</td><td>$tel</td><td>$address</td></tr>\n"; } ---ここまで--- の部分が ---ここから--- $count = 0; while ($stmt->fetch()) { if ($count == 0) print "<table><tr><th>id</th><th>c_id</th><th>tel</th><th>name</th><th>address</th>\n"; #最初の一回だけ出力 print "<tr><td>$id</td><td>$c_id</td><td>$tel</td><td>$name</td><td>$address</td></tr>\n"; $count++; } if ($count == 0) print "該当者が存在しません"; ---ここまで--- といった感じになるかと思います。
仕様がよくわかりませんね。 a,b,cにはそれぞれmのidが振られるとして、aのテーブルにmのidはダブりがあるのか？ aとbの両方に同じm.idがある場合、aだけ数えればいいのか、aとbの両方いるのか？ ざっくりこんな感じ？ select m.id,sum(count) as count from master as m left join ( select id,count(id) as count from a group by id union all select id,count(id) as count from b group by id union all select id,count(id) as count from c group by id ) as sub on m.id=sub.id group by m.id
concat関数を使ってupdateは、既に#1さんが回答されている通りです。 前回の質問で、回答するタイミングがなかったので、参考までに。 「1～100の列値を持つ行を、1回のSQL発行で実装したい」という件。 「1回のSQL」という要件が、どれくらい重要なのか分かりませんが、MySQL 5.0以降とのことなので、ストアドプロシジャで実装するといった方法があります。 ちなみに、 PostgreSQLであれば、 (1)generate_series関数で生成したものをinsert (2)PostgreSQL 8.4（？）で、「with句での再帰クエリ」が実装されているので、そこで生成したものをinsert といった実装方法があり得ると思います。再帰クエリは、ちょっと小細工し過ぎではありますが。 SQL Serverでも、SQL Server 2005で、「with句での再帰クエリ」が実装されています。
MySQLの質問をする場合は、MySQL 5.0、5.1といったレベルまで、最低限バージョンを明記してください。 大きな機能拡張に加え、一部の仕様変更があります。 「(u_id,`date`)の複合キーで重複した場合」とのことであり、primary key　または　uniqueキーにした上で、insert文の「on duplicate key update」構文を利用することで実装可能です。 replace文は、格納済みの行の特定列を更新するのでなく、行自体を置換してしまうのだったと記憶しています。 id列というprimary keyが必要なのかどうか不明ですが、uniqueキーを定義すると、例えば次のようなSQLになります。 -- 定義例 drop table if exists tbl1; create table tbl1 (id int primary key auto_increment ,u_id int ,`date` date ,field1 int ,field2 int ,unique(u_id,`date`) ); -- (u_id,`date`)が同一の行が存在しなければ追加、存在すれば更新 insert into tbl1 values(null,5,'2011-04-17',0,0) on duplicate key update field1=values(field1),field2=values(field2) ; 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/insert-on …
#1 です。 ＞エクセルで100番までつくってCSVでmysql DBにインポートする いや、私の方法はSQL文を生成して一気に流す、と言う方法です。 （まあ、あまり手間は変わらないですがｗ） ＞私の説明不足でした、、新規テーブルのIDフィールドに対して ＞"SQL文で一気に100番まで採番したかった" なるほど。 これは無いですね。MySQLに限らず、ORACLEでもSQL Serverでも無いです。 （「無いと思います」ではなく「無いです」。多分、ポスグレでも） 定型的な処理であれば、引数でIDを追記していくようなバッチやシェルスクリプトをあらかじめ作っておいて、都度実行する、とかですね。 そこまでするのは、面倒なので、やはり私や#2さんの回答にあるような方法を定型的にできる仕組みを作っておくとかだと思います。 それと「あらかじめIDだけ100番まで振る」と言う要件の意図が掴めていないので、これも外しているかもしれませんが、「INSERTの都度IDが順番に振られる」で要件が満たせるのであれば、IDをオートインクリメントにすればよいと思います。 ↓ create table (id int UNSIGNED NOT NULL AUTO_INCREMENT ,＜以下略＞ つまり、事前にINSERTしておくのではなく、nameを設定する毎に1から採番される、と言う形になります。 ↓ insert into test(name) values ('aaa'); → ID:1で採番される insert into test(name) values ('bbb'); → ID:2で採番される
ログの出される場所はmysql/data/***の*の部分にエラーログとかでます。 ここにmysqlのログが全部出ます。 でも、ログを見たからと行って、落ちてしまう解決にはなりませんね・・・。 mysqlの負荷改善は『EXPLAIN』でindexが使われてるか見てみましょう！ もしindexを張っていなければ、indexを張る所からはじめましょう！！ でその次は、『スロークエリーログ』を見てみましょう！ この２つがすぐにできる負荷改善です。 もしも、時間があるのであれば、マスターとスレーブについて調べると良いと思います。
SELECT * FROM table1 WHERE clum1 >= '2011-04-15' + INTERVAL 10 DAY ってことがいいたいのでしょうか？ でもそれなら最初から SELECT * FROM table1 WHERE clum1 >= '2011-04-25' って手で計算して入れてやればいい気がしますが・・・
根本的な原因はわかりませんが、 XAMPPのセキュリティと言う項目で、 MySQLとPhpMyAdminのセキュリティは安全になっていますでしょうか？ 少なくともユーザーが一人も存在しないと使えないと思うのですが。 http://localhost/security/xamppsecurity.php 上記のリンクからMySQLのROOTパスワードが設定できますので、 一度設定されてはいかがでしょうか？
(1)BlogParentWebsiteタグはMT5以降で使えるタグです。MT4では使えないので消去してください。 (2)は、(1)でエラーが解消すればそのようなことをする必要はありません。MT5のプログラムを入れて再度ログインしてください。 なお、「最初にＭｏｖａｂｌｅｔｙｐｅ5を入れてデザインのスタイル変更を行って」の部分で(1)のエラーが出るような変更を行ったのがそもそもの原因と思われるので、テンプレートを元に戻したい場合は、（プログラムをMT5にしてから）ログインし、テンプレート一覧画面の右側にある、「テンプレート初期化」をクリックし、表示されたダイアログで「デフォルトテーマのリセット」を選択してください。
MySQLの独自構文と、標準SQLの構文を体感するごく簡単な例を作ってみました。 -- テスト用の表定義＆データ drop table if exists `t1`; create table t1 (`c1` int primary key ,`c1-1` int ,`c2` varchar(5) ,`c3` varchar(5) ,`dt` date ); insert into t1 values (1,100,'abc','xyz','2011-04-01') ; -- SQLモードの確認 select @@global.sql_mode; select @@session.sql_mode; -- MySQL構文とANSI構文の違い、引用符の意味などを確認するSQL例 select * , 1 -- 数値定数 , c1-1 -- 「列c1-1」という減算 , 'c1-1' -- 「'」（単一引用符）で囲んだものは文字定数 , "c1-1" -- 「"」（二重引用符）で囲んだものは、 -- MySQL構文モードでは文字定数 -- ANSI構文モードでは、列名など名前。 , `c1-1` -- 「`」（バッククォート）で囲んだものは、 -- MySQL独自仕様であり、列名など名前。 , 'abc'||'def' -- 「||」は、 -- MySQL構文モードでは、論理演算のor -- ANSI構文モードでは、文字連結 , concat('abc','def') -- MySQL独自の文字連結関数 , 2011-04-14 -- yyyy-mm-ddを文字定数として指定しないと、 -- 日付でなく、単なる整数の減算として扱われる , '2011-04-14' -- 'yyyy-mm-dd'といった形式の文字定数は、 -- 日付データ型と型変換してくれる。 from t1 ; -- この接続だけ、一時的にANSI構文モードに変更 set @@session.sql_mode='ANSI'; この後、上述のselect文を再度、実行して結果の違いを確認してみてください。
使用しているMySQLのバージョンを、少なくともMySQL 5.0、5.1といったレベルまで提示するようにしてくｙださい。大きな機能拡張だけでなく、一部の仕様変更があります。 MySQL 5.0以降であれば、情報スキーマ（information_schema）が実装されています。 表の基本情報を管理する tables表の table_type列で、実表かビュー表かの区別ができます。 表の列の基本情報を管理する columns表を、表名などで結合することで、いろいろな検索を行えます。 http://dev.mysql.com/doc/refman/5.1/ja/informati …
MySQLのビュー表は、MySQL 5.0と実装が遅く、「FROM句でのサブクエリ（インラインビュー）」を使えないなどいろいろ制限があるので、初歩のSQLの勉強に使うにはお薦めしません。 内部結合だけの話なら、ONでの結合条件と、WHEREで結合条件を指定するのに差異はありません。 しかし、外部結合の場合は、まったく意味が違ってきます。 ON句で指定するのは結合条件で、どのように表を結合するかを指定します。この結合条件に合致しなかったものは、左側の表、右側の表などを基準にnullで返されます。 一方、WHERE句で書くのは制限条件であり、最終的な結果に影響します。 差分検索する基本的な方法として、 (1)left joinして、結合キーがnullとなるもの (2)サブクエリの「not exists」 (3)サブクエリの「not in」 を使うといった方法があります。 このうち、not inは、性能を出しにくい構文です。 MySQLでは、サブクエリの実装がMySQL 4.1と遅かったこともあり、サブクエリでなくジョインに書き換える方が性能を出しやすいといったケースがたくさんあります。 以下、ぱっと思いついた構文で、実機確認していませんが、参考まで。 -- t1にあり、t2にない行 -- left join select t1.c1 from t1 left join t2 on t1.c1=t2.c1 where t2.c1 is null -- not exists select c1 from t1 where c1 not exists(select 1 from t2 where t1.c1=t2.c1) -- not in select c1 from t1 where c1 not in(select c1 from t2)
MySQLのバージョンを、少なくともMySQL 5.0、5.1といったレベルまで提示するようにしてください。 大きな機能追加に加え、一部の仕様変更があります。 mysqldumpコマンドで、「--ignore-table」を指定すればいいのでは？ 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/mysqldump …
MySQL5.0以降をwindowsにインストールしたときに、スタートメニューに登録される「MySQL Command Line Client」は、rootログイン専用ですので、コマンドプロンプトを別に起動して、 mysql -u 登録ユーザー名 -pパスワード というコマンドを自力入力してログインすればできるでしょう。
yambejpさんの SELECT * FROM THIS_TABLE_A AS A INNER JOIN THIS_TABLE_B AS B ON lpad(A.code,8,'0') = B.code は ・THIS_TABLE_Aの件数が少ない ・THIS_TABLE_Bのcodeに索引がある 場合ならそれなりのレスポンスが出ると思います。 私の例示のやり方は逆に ・THIS_TABLE_Bの件数が少ない ・THIS_TABLE_Aのcodeに索引がある ことが望ましいです。
Ｃ列を挿入し「=IF(A1=B1,A1,"")」を入力し、オートフィル。 オートフィルタで空白セル以外を表示ではどうでしょう。
#3です。 >double型を範囲指定して（例えば 90.1< x < 90.3）該当するデータ 浮動小数点のデータ型では、小数点以下の精度は厳密に保証されませんが、その辺は大丈夫でしょうか？ インデクス作成時、1000億件のソートを行うことになり、MySQLサーバのパラメタでの作業領域増といったレベルでは対処しようがないと個人的には思っています。 もし、試行錯誤されるのでしたら、どういう設定をしてどのように状況が変わったといったことを、参考までに知らせてもらえるとありがたいです。
＞MYSQLはアップデート前とアップデート後の数量が同じであれば、アップデートしない。 原則、mysql_affected_rows()APIなどを利用した件数確認であれば そうなると思います。 http://dev.mysql.com/doc/refman/5.1/ja/mysql-aff … また簡単な例だとtimestampフィールドを作っておけば、同値で更新をかけた場合は timestampの更新がされません。
Accessについては分かりませんが。。。 表定義などの定義情報の管理方式は、各RDBMS毎に異なり、その情報取得方法もSQLで行えたり、特別なコマンドを使ったりと様々です。 そのため、共通の方式で参照できるように標準SQLで規定され、各RDBMSでも実装が進んでいるのが情報スキーマ（information_schema)です。 例えば、表名など、表の基本情報は、 information_schema.tables表 で参照でき、表名は table_name列で参照できます。 表の列名などの列の基本情報は、 information_schema.columns表 で table_name列で条件指定などして参照でき、列名は column_name列で参照できます。 例えば、次のようなSQLで参照できます。 select column_name from information_schema.columns where table_name='t1' order by ・・・ ただ、いくつか注意点があります。 (1)表名、列名などであれば、情報スキーマで同じようなSQLで得られる。 (2)データベース、スキーマなどの概念は、RDBMSにより異なっており、どこにどの情報が入るかは、RDBMS毎に確認する必要がある。 (3)より詳細な情報を得るには、システムカタログなどを参照する必要がある (4)主要なRDBMSでは、情報スキーマはほぼ実装されてきているが、未実装のRDBMSもある。また、情報スキーマで参照できる内容も、各RDBMSの各バージョン毎に順次、拡張されている最中。 などです。 MySQLでは、独自コマンドでdescがありますが、MySQL 5.0で情報スキーマが実装されました。
カラム[hatsubai]がDATE型である以上、日付しか入れることができないため 現状の構成のままでは実現不可能であるとおもいます。 少なくとも「あいまいな日付」であるというデータをなにかしら持つ必要があるとおもいます。 カラムを増やさないとすれば[hatsubai]をDATETIME型にし 時間の部分をあいまいな日付の分類に使ってみてはどうでしょうか？ たとえば 0:00はあいまいでない日付 01:00は1月 01:10は1月上旬 01:20は1月中旬 01:30は1月下旬 02:00は2月 ・ ・ 12:00は12月 12:10は12月上旬 12:20は12月中旬 12:30は12月下旬 13:00は春 14:00は夏 15:00は秋 16:00は冬 などというようにして 読んできた日時データから表示する発売日をPHP側で決定する、という感じで。 タイタニック , 2005-2-5 ファイトクラブ , 2008-3-14 セブン , 2010-7-30 トロイ , 2011-9-8 パイレーツ , 2011年4月下旬 ナルニア , 2011年冬 でしたら タイタニック , 2005-02-05 0:00 ファイトクラブ , 2008-03-14 0:00 セブン , 2010-07-30 0:00 トロイ , 2011-09-08 0:00 パイレーツ , 2011-12-31 04:10 ナルニア , 2011-12-31 16:00 のように登録するよう工夫をする。 でもこれはっきり言っていろいろ考えて作る必要があるので大変だとおもいます。 特に2011-9-8より後に2011年4月下旬のものが来るようにするために4月なのに12月で登録してますし。 表示する日付にできるだけ近い値で登録できるように表示順を考える必要があると思います。 私が日付の登録ルールを決めるとしたら 1.あいまいでない日付は0:00で登録（2011年4月1日->2011-04-01 00:00） 2.X月上旬はその月の最終日の1:00で登録(2011年2月上旬->2011-02-28 01:00) 3.X月中旬はその月の最終日の1:10で登録(2011年3月中旬->2011-03-31 01:10) 4.X月下旬はその月の最終日の1:20で登録(2011年4月下旬->2011-04-30 01:20) 5.X月はその月の最終日の2:00で登録(2011年2月下旬->2011-02-28 02:00) 6.春は5月31日の3:00で登録(2011年春->2011-05-31 03:00) 7.夏は8月31日の3:10で登録(2011年春->2011-08-31 03:10) 8.秋は11月30日の3:20で登録(2011年春->2011-11-30 03:20) 9.冬は次の年の2月最終日の3:30で登録(2011年冬->2012-02-29 03:30) という感じにするでしょうか(四季は区切りをどこにするかで変わるでしょうが) 日時でソートすれば 2011-01-01 2011-01-31 2011年1月上旬 2011年1月中旬 2011年1月下旬 2011年1月 ・ ・ ・ 2011-05-31 2011年5月下旬 2011年春 2011-06-01 ・ ・ というように並べ替えられます(もちろん時刻を見て出力フォーマットを選択する必要がありますが) ちょっと長々と書きすぎてわかりずらいかもしれません。 少しでも参考になればよいですが。
「空白が存在するかのチェック」について 検索用select文は、left join での連結で、連結カラムの空白チェックはしてないので、住所テーブルの町コードが入ってなかったり、町テーブルに存在しないコードだったりすると、全件表示用のSQL文では、地域名、県名、町名すべてnullとして出力されます。検索条件で、地域や県、町を追加指定したときは、null データは検索されません。 よって、住所テーブルデータ登録時には、町コードもその存在をチェックして、未登録であれば、県の指定も求めて、それを町テーブルに登録するような作りが必要です。県と地域は、行数も50行以内と限られてるので、先に全行登録しておくのがよいです。 もしも、県がどの地域に属するかが変更されたときは、県テーブルの地域コードだけ変更すれば、住所テーブルにも即座に反映されます。住所テーブルの複数行を探して編集する必要がなくなるのが正規化の醍醐味。 どういった運用なのか不明ですが、建築計画みたいに町名は決まってないけど、県は決まっているような状況はあり得るのでしょうか？であれば、「町名未確定」といった町名にして、町コードを作っておくなどが良いかと思います。確定後に登録行の編集をするときも未確定で検索し易いかとも思うし。既に存在するものだけなら、町名が決まれば、県も、地域も自動的に決まりますよね。 入力の手間を減らすことを考えると、プログラムコードの方でたくさんやることは増えますが、系統的にプログラミングすると、新規用と編集用とでデータ整合性チェック部分などは少しの変更で使い回しできたりしますので、データ構成を（各コードの決め方も含めて）十分に構想を練ってみてください。 あ、削除フラグカラムのbyte型は、MySQLでは　BIT(1) でした。tinyintでも、ハードディスクの記憶容量は変わらないようですけど。フラグデータもカラム型で記憶容量が違ってくるので、何型にするかとか、defaultと、フラグ状態との値を何にするかも、一考してみる価値はあるでしょう。
CASE文で条件ごとに集計すればいいのではないでしょうか？ 一部あやふやな項目があったので雰囲気だけでも。 select ユーザ番号,日付 ,count(case when 型番 = 1 then 1 else null end) 型番1個数 ,count(case when 型番 = 2 then 1 else null end) 型番2個数 ,count(case when その他 in (2,3) and 型番 = 2 and 品番 = 1 then 1 else null end) 型番2品番1個数 ,count(case when その他 in (2,3) and 型番 = 2 and 品番 = 2 then 1 else null end) 型番2品番2個数 ,sum(case when その他 in (2,3) and 型番 = 2 and 品番 = 1 then 売上 else 0 end) 型番2品番1売上 ,sum(case when その他 in (2,3) and 型番 = 2 and 品番 = 2 then 売上 else 0 end) 型番2品番2売上 ,sum(売上) 合計売上 from テーブル group by ユーザ番号,日付 order by ユーザ番号,日付; MySQLは詳しくないのですが、sum(型番=1) という書き方ができるのですね。
SELECT DATE_FORMAT('2010-04-02','%m')
SQLから抽出されるデータは基本的には縦×横の表形式(?)になります select now() AS `出力日時`; などのようにするのが普通です また実用レベルでSQLを単体で使用するケースはあまりないので、表示用の成型を したりするのはアプリケーション側に任せた方が効率的です。
ダンプしたデータはテキストデータですからnkfなどでコンバートしてみては？
テーブルのファイルの日時をシステムで拾うとか、 データごとにタイムスタンプを埋め込んでMAXを取るとか有効かもしれません
リモートでMySQLに接続するには 1.mysql コマンドの -h オプションでIPアドレスを指定する。 　この場合接続ユーザーにアドレス指定してｇａｎｔ文を実行する必要があります。 2.SSHでリモート接続（puttyとか）して、その画面上でmysqlコマンドを使う。 3.レンタルサーバーにxamppをインストールしてしまう（外部からはブラウザでアクセス） 1.はセキュリティ上お勧めしません。 3.の難点はレンタルサーバーで仮想サーバーについてもroot権限を与えてくれるホスト業者が少ないことです。調べたらDTIという業者がroot権限付与ありでしたが。 わたし自身XAMPPは使ったことないのであまり力になれずすみません。 っを
MySQLのバージョンを、少なくもMySQL 4.1、5.0、5.1といったレベルまで最低限提示してください。 テーブルの関係、列の意味といったことも説明するようにしてください。 細かく見ていませんが、MySQL 4.1以降なら、「carkeyからmakerkeyを得て、、、」といったサブクエリを追加すればいいのでは？
SQLのUPDATE文の文法は、 UPDATE テーブル名 SET 列名1 = 値1 [,列名2 = 値2...] [WHERE 条件式]; です。 update tUser set ACount = ACount + 1, BCount = BCount + 1 where UserCD = '5'
テーブル分けるだけでは解決できないのでは。 基本的にはテーブルパーティション化するとともにパーティションごとにテーブルスペースを分割。 テーブルスペースを物理DISKに分散配置するとかしないと。
横から失礼。 回答に対し、何か具体的な提示があれば回答しようと思っていました。しかし、他人にアドバイスを求めているのに、具体的な情報を出さないので、ずっと様子を見ていました。 具体的に、 (1)MySQLのバージョン MySQL 5とかでなく、MySQL 5.0、5.1、5.5といったレベルまで提示するようにしてください。 　SQLの実装に関係する大きな機能追加や一部の仕様変更があります。特にMySQL 5.1では、「MySQL 5.1.xで仕様変更」なんていうのもあります。 (2)母体データ件数と得たい結果の件数 (3)どういうSQLを実際に実行して、「速度に難」といった話をしているのか (4)どういうインデクスを定義しているのか (5)EXPLAINの結果を見ているのか。その内容は提示できないのか といったことを提示してくれれば、もっと多くの人からもアドバイスをもらえる可能性が出てきます。 さて、本題です。 MySQLの複合キー（複数列）のインデクスは、列の昇順、降順の混在を許していません。昇順、降順のインデクスを定義した場合、定義自体は正常終了しますが、実際に作成されるインデクスは全列が昇順に変更されます。 例えば、 create index t1ix on t1(c1,c2 desc) というインデクスを定義した場合、実際には create index t1ix on t1(c1,c2) というインデクスが作成されます。 また、これにより、order byで昇順、降順を混在した指定を行うと、「インデクスを活用し、作業ファイルを使ってのソートを抑止」ができません。 サブクエリ中でのlimit句の使用には、他の回答者さんの回答どおり、MySQLでは制限があります。その一方で、1件だけ取り出す場合は利用可能です。 そのため、 select c1 ,(select c2 from t1 where x.c1=c1 order by c1 desc,c2 desc limit 0,1) as rank1 ,(select c2 from t1 where x.c1=c1 order by c1 desc,c2 desc limit 1,1) as rank2 from t1 as x [where c1 between 2010 and 2011] group by c1 desc といった書き方が可能です。 インデクスを、 create index t1ix on t1(c1,c2) と定義したとします。 母体件数がある程度多く、その中からある程度、絞り込めるなら、 (1)サブクエリ中のorder byで、c1を含むことで、作業ファイルを使ったソートを抑止できる可能性がある。 (2)MySQLでは、group byで昇順、降順を指定できる。MySQLの独自機能、独自構文である点に注意。 といった結果が、私のMySQL 5.1.36の環境では、EXPLAINの結果として得られています。 実際には以下のような定義で、テストしてみました。 create table t1 (id int primary key auto_increment ,nen smallint ,kubun varchar(5) ,data int ); create index t1ix on t1(nen,kubun,data); -- explain select x.nen ,x.kubun ,(select data from t1 where x.nen=nen and x.kubun=kubun order by nen desc,kubun desc,data desc limit 0,1) as rank1 ,(select data from t1 where x.nen=nen and x.kubun=kubun order by nen desc,kubun desc,data desc limit 1,1) as rank2 ,(select data from t1 where x.nen=nen and x.kubun=kubun order by nen desc,kubun desc,data desc limit 2,1) as rank3 from t1 as x where x.nen between 2010 and 2011 and kubun='A' group by x.nen desc,x.kubun desc
CASE文を使って select `CHIIKI` , `GENRE` , `CNO` , COUNT( `CHIIKI` ) AS CNT, (case when CHIIKI = '特殊地帯' then 0 when CHIIKI = 'その他' then 2 else 1 end) as `CHIIKI_ID` from `hogehoge` GROUP BY `CHIIKI_ID` , `GENRE` , `CNO` ORDER BY `CNO` ASC , `CHIIKI_ID` ASC , `CNT` DESC はどうでしょうか 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/case-stat …
それを決めるのが設計なので、アプリケーションの検索軸を決めて洗いだしたほうが良いと思います。 データベースに入れることが目的なのではなくて、アプリケーションから使うことが目的なのでしょ？ 顧客管理ツールとのことですから、多分既存の台帳とか、頂いた名刺とかを入力の起点として利用するのであれば、手元のものとにらめっこしてみてください。 また、請求書や納品書、見積もり書とか、そういった物から関連をもたせたりするのであれば、なんかコードが必要だったりしませんか？ 実際に利用される方は、分類分けなどしていませんか？メーカーとかサプライヤーとか？ そういう検索軸を期待してたりしませんか？ それなら、分類マスタと関連をもたせる項目を持つ必要がありますよね？ 分類マスタと書きましたが、入力時全て手入力ですと、間違いや差異が出てきます。 利用者もなんだか面倒と思います。マスタ化して選択式にするといくらか緩和されます。 なので項目をあげるときに、想定する運用（使い方）を想像して、項目を足したり、引いたり、分割したり、マージしたりを考えます。 データベースは後で修正すると大変なので、予備項目を多めに作っていたりするアプリケーションを見ますが、だんだん酷い運用をしてくようになったりするので、僕は余り作りません。 ＃設計を放棄しているきがする。 せっかく作るのですから、利用される人の気持ちを考えて設計してみてください。
＞ $userurl, $usertel '$userurl', '$usertel' ですね。 バリデートは適宜おこなってください
WordPressを利用するのにMySQLの知識は要りませんが、「MySQLでどういう管理をしているのか」の知識は必要ですね。 レンタルサーバなどではよくあることですが、一つのサーバで複数のサイトを運営することができます。 一方、一つのサーバにはMySQLは一つしか動いていません。 違うユーザーのデータベースへの読み書き操作ができると、他のサイトのデータを盗み見たりできるということになってしまいますから、利用者ごとにMySQLで利用できるデータベースを分けることになります。 そして、WordPress側からは、データベースをアクセスする利用者を指示する必要があります。 それが「MySQLのユーザー名」(とパスワード)です。 さらに、一人の利用者がアクセス先のURL(フォルダ)を分けて複数のWordPressを動かすことも可能です。 そういう場合にURL(フォルダ)を分けてもMySQLのデータベースが同じ(=データが同じ)だと別のWordPressサイトにはなりませんから、 そのフォルダ毎に別々にデータを管理させる要があります。 そのために付ける名前が「データベース名」です。 これらを指定に先だって、MYSQLサーバの方で「ユーザー」「データベース」を作成する必要があります。 (レンタルサーバなどの場合、MySQLのユーザー作成はホスティング業者の作業になりますから、「ユーザー」(とパスワード)はホスティング業者の方からもらえると思います。) データベースの作成については http://goo.gl/bXyF6 などを参考にしてください。 (上記説明では「phpMyAdminがない場合はシェルを使う」となっていますが、 その場合はphpMyAdmin もインストールした方が楽だと思います)
> 正直、入れ方や取り出し方も全部いろんなサイトから引っ張ってきたり、憶測等で書いたものなので、やり方があっているとはおもっていません。 んじゃ、まず、C# と SQLite のマニュアルを読みましょう。 C# やら、PHP やら、文字列主体の言語では、とりあえず、文字列に暗黙の型変換が行われる。 51 というのは要するに、カラムに 文字列 '32' が代入され、その最下位バイト '3' を読んだために、51 が表示されている。 クエリが通っただけまし、位に思ったほうがいいかもしれない。 普通はバインドを使い、何だか分からないものを突っ込っこむような野蛮なことはしない。
通常、更新処理のボトルネックになるのはDISKへのデータ書き込みだと思います。 mysqlでinnodbで使う場合は、テーブルスペースを分散配置するか、RAID使う。 データファイルとログファイルのDISKを分けるぐらいでしょうか。
yahoo知恵袋の方にも投稿されているようですが、基本的にこのような行動はマルチポストと言って、あまりお勧めできません。 最低限、他のサイトで解決した旨、報告してください。 あちらでは、２バイト文字の「ー」を１バイト文字の「-」にすることで解決したとされていますが、他のユーザーが入力するような場合はどうするのですか？ 私のマシンのバージョンはWindows32bit版MySQL 5.5.9 ですが、現象は再現しませんでした。 （character_set_serveｒが「utf8」のせいかもしれません）。 念のため、環境を「sjis」ではなく「cp932」にするとどうなるか、時間があったら検証してみてください。
CREATE 新テーブル名 AS SELECT * FROM 現テーブル名; ALTER TABLE 現テーブル名 RENAME 新テーブル名; ただし、CREATE TABLE AS SELECT はKEY情報は引き継ぎませんから、SHOW CREATE TABLEなどから必要な情報を取得して、付与する必要があります。 なお、コピーはDB間でも可能です（テーブル名の頭に「DB名.」をつける）
＞簡単でかつ待ちがわ（間違わ）ない方法 簡単で間違わない方法はない・・と思ってください。 いくつか方法が考えられますが、一番妥当なものとしてはやはり phpMyAdminによるデータの取込でしょう。 まずは、テスト用のテーブルを本番用の他に作って流し込み、 結果を検証してみないととても本番用にすぐにアップすることはできません。 データ長や型の制限や文字コードの違いによる文字化けなど考慮が必要ですし ほかにもCSVデータが想定したものになっていない可能性もアップ前にあらかじめ チェックする処理が必要があるとおもいます。 逆にCSVデータに自信があるなら、phpMyAdminのインポート画面から 簡単に取り込むことが可能です。
nameがvarcharなので、素直に UPDATE `test` SET `name` = "かきくけ" where not name='' でよくないですか？
mysqlの場合は使えるか使えないかという意味では バッククォーテーションで囲えば(`event-num`みたいに) たいていの文字は使えます。 event-numの場合、無意識にフィールド名を書くと event と num の減算と受け取られかねず、お勧めはできません。 また関数名や予約語も使わない方が賢明です。
> ええと、IDはURLのパラメータではなく、メール本文に「あなたはNo.○○○です」というふうに、表示するだけです。URLのパラメータで送るのは、ランダム生成の文字列のみです。 > > 単なる数字であるIDがネットに流れるだけでも、危険性があるのでしょうか？ なるほど、そういうことであれば、セキュリティテストをパスしている前提で、メールに記述することがマズイということはなさそうです。 逆に運用上必要だったりとか？ ユーザを識別するためにお客様番号を通知すること自体は良くあることですね。 ん？でも、これは会員登録時のIDですよね？これはそのままシステム内の会員IDになったりするんですか？ といいますか、会員登録をするときの、メールを入力→メール送信→メールのURLをクリック→会員情報入力のような流れのメールだと思っていたのですが、認識が違いますでしょうか？ そうであれば、そもそもここで会員No.って、どういうシチュエーションで必要になるのでしょう？ そうでなくて、会員登録完了後の「会員登録ありがとうございました。」のメールで、「あなたの会員No.は◯◯◯です。このメールは大切に保存しておいてください」的なものでしたら、運用上必要になる場合もあり得ると思います。 （その時も前後を推測しにくい、システム上のIDとはことなる”お客様ID”だったら素敵。単純に通番だと、サイトの会員数がバレたりとか。。） ですが、その場合は安易にログイン出来てしまうURLは必要なのかなと思います。 このページからログインしてくださいのURLなら理解できるのですが。 もし、運用を考えて特に必要ではないという情報でしたら、積極的に公開して攻撃をしたいと思っている人に材料を与える必要はない。という意味で上司の方の仰っている事も理解できなくはないです。 さて、そのメールで必須な情報とはなんでしょう？ ＃あっ。なんかデジャヴってます。
データベースは、規則性をもったデータを格納し、またあとでデータを取り出して利用することが目的です。 なので、ご質問の配列に、どういう規則性があるのか または、 それを後で、どのように利用することを考えているのか がないと、意味がないように感じます。 単に、サイズが異なる配列を収めるということなら、 id data 1　1 2　12 33 24 21 3　13 56 0 1 としても良いように思えます。dataの部分は、区切り文字をスペースなりカンマにするなりして、後でデータを取り出して プログラム側で分割もありではないでしょうか？ データベースを学んでいるとあるのですが、正規化という考えからすると、ID int1 int2 int3 int4 という考えはないと思います。
ダンプファイルの「create table」に「DEFAULT CHARSET=ujis」が残っているのではないでしょうか。
>例えばSELECT文で取ってきたある1行が、 >2, 15, 7 >となっていた場合、これを小さい順に並べて うーん、一レコードに別フィールドで2,15,7のようなデータの持ち方は SQLではあまりおこないません。 すこし正規化について学習するとよいかもしれません。 こんかいの令だとたとえばID=xxxにたいして ID　NUM xxx | 2 xxx | 15 xxx | 7 yyy | 10 yyy | 12 ・・・ みたいなデータの持ち方をすれば、GROUP_CONCATなどでソートして表示することができます
　その文脈だと、ちんぷんかんぷんになりますよね。 　質問からすると、多分、ｗｅｂページを作ったことはあるんですよね。その当たりを前提に話を進めますね。 　さて、普通にwebページを作ると、まず、ｈｔｍｌファイルを作りますよね。そして、ページに必要な画像などのファイルと一緒に、例えば、ＦＴＰなどを使って、サーバーにアップロードします。 　では、このとき、サーバーって何をしているんでしょう？ 　あなたが作ったｈｔｍｌファイルを保存して、ユーザーが、あなたのページのＵＲＬでアクセスしに来た時に、そのファイルを「そのまま」ユーザーに転送しています。 　簡単に言えばそれだけです。 　では、例えば、webで、オンラインショップをやりたくなったとしましょう。（この際、注文や決済などはちょっと棚上げします。電話で注文を受けることにしても良いでしょう。） 　商品の一覧から、各商品の詳細へ移っていくページって、よくありますよね。あれです。 　htmlファイルを一生懸命作ってみることを考えてみましょう。最初はいいです。どうせ、一度は通る道ですから。 　問題は、その後、お店をオープンしてからが大変です。 　商品が品切れになったら、そのページを消さないといけません。詳細のページを消したら、一覧からも消さないといけませんね。 　新商品が出たら、一覧を追加して、詳細ページも作らないといけません。 　毎日毎日、この作業をすることを考えると、毎日毎日同じ事をしていることに気がつきます。 　そう。変わっているのは、商品名と商品へのコメント、値段、写真。それだけなんです。後は、全く同じ作業を黙々とやることになります。 　同じ事を黙々とやるのは、コンピュータの得意技のはずです。 　入力フォームがあって、商品名・コメント・値段それに、写真を指定したら、ページが自動的に更新されるととても便利ですね。 　コンピュータに自動で何かをやってもらうには、プログラムを組むことになります。今回のようにブラウザーでアクセスしてもらうことを前提に動くプログラムのことをウェブアプリケーションと呼んだりします。 　では、この時、サーバーは、どんな動きをするでしょうか。 　サーバーには、あなたが何らかの形で登録した商品名・コメント・値段それに、写真が保存されています。ある決まったＵＲＬにアクセスをすると、サーバーは、この保存された情報を元に、ＨＴＭＬファイルを自動的に「作って」、それをユーザーに転送します。 　このような形でサーバーが動いてくれれば、毎日の仕事は、登録したリストを単に更新するだけの簡単な作業になります。毎回一からページを作っていることに比べられば、人間の仕事はずっと簡単になりました。 　このようなデータを「何らかの形で保存」するためのソフトが、データベースと言われるものです。データベースは、入力されたデータを整理した形で保存し、プログラムの要求に応じて、必要なデータだけを返すことが出来るように作られています。 　データベースも、世の中にたくさんの商品が出回っています。MySQLは、無償で使えるデータベースソフトウェアの一つです。有名どころでは、無償ですと、postgresql。有償になると、マイクロソフトのSQL Serverとか、Ｏｒａｃｌｅ社のOracleと言った製品があります。 　また、プログラムを作るための言語は、ｐｅｒｌによるＣＧＩとか、ｊ２ＥＥと呼ばれるｊａｖａ言語を使うとか、ＡＳＰとか、ＰＨＰとか、他にも様々な実現方法があります。 　こんな感じで、少しは解りますか？
マニュアル文書のアップデート比較みたいなことを想定して、カラム型がtextで先頭ｎ文字のindexでは対応しきれないサイズのデータが各行に格納されていて、その全文字列での一致を判定ということなら、ハッシュ値比較の方が効率は良さそうだけど（インデックスサイズも抑えられる？）、それ以外では、varchar型に収まる程度ならハッシュ値を計算保持し直す作業の方が無駄に思える。
原因が文字化けじゃないと仮定した場合ですが、NO.の「.（ドット）」かな。
まったく同じ症状なのかはわかりませんが・・・ わたしも、WindowsXP上に開発環境を作った当初、DBに格納された日本語を phpMyAdmin 上で表示させようとしたときだけ、文字化けしてしまう症状に悩まされていました。 当方の環境は、MySQL 5.0.24、PHP 5.2.2、phpMyAdmin 3.0.0です。 ネットでは同類の症例がいくつもみつかり、対策とされる設定を片っ端から試しても解決しなかったのですが、ある日突然きちんと表示されるようになりました。 たぶん、「正しい」設定がなされたまま、Windows（IIS）やMySQLが再起動されたことがよかったのかな？なんて想像していますが。 関係しそうな設定箇所は、以下のようになっています。外していたらすみませんが、いかがでしょうか？ ■C:\Program Files\MySQL\MySQL Server 5.0\my.ini [mysqldump] default-character-set = utf8 [mysqld] skip-character-set-client-handshake character-set-server = utf8 collation-server = utf8_general_ci init-connect = SET NAMES utf8 [mysql] default-character-set=utf8 ■C:\WINDOWS\php.ini [mbstring] mbstring.language = Japanese mbstring.internal_encoding = UTF-8 mbstring.http_input = auto mbstring.http_output = UTF-8 ■phpMyAdmin\libraries\config.default.php $cfg['DefaultLang'] = 'utf-8'; $cfg['DefaultConnectionCollation'] = 'utf8_general_ci'; $cfg['DefaultCharset'] = 'utf-8';
XAMPPに確か付属しているphpMyAdminでCSVデータをファイルとして取り込めばよいかと
こんばんは。 情報が少ないです・・・。 m_CompanyはInnoDB？ CompanyIDの型（m_Companyの）は？ ここ見てください・・・。 http://dev.mysql.com/doc/refman/4.1/ja/innodb-fo …
NULLは「値が不定」であり、「=」や大小などの条件式で「比較できない（条件式の真偽を決められない）状態」という意味です。 したがって、NULLであるかどうかは、 WHERE 列名 IS [NOT] NULL といった条件を指定する必要があります。 今回の場合は、 WHERE Type IS NULL という条件式を指定する必要があります。
こういうやり方でもよいかも select No,coalesce(b.Name,a.Name) as Name from a left join b using(No) union select No,coalesce(b.Name,a.Name) as Name from a right join b using(No)
スマートかは分かりませんが、SQLで全部計算するなら下記のような感じではどうでしょうか。 select 　 チーム名,勝数,負数 /* ,引分数 */ ,勝数 / (勝数 + 負数 /* + 引分数 */) 勝率 from 　(select 　 　a.チーム名 　　,count(case when b.自チーム得点 > b.相手チーム得点 then 1 else null end) 勝数 　　,count(case when b.自チーム得点 < b.相手チーム得点 then 1 else null end) 負数 　　--,count(case when b.自チーム得点 = b.相手チーム得点 then 1 else null end) 引分数 　from チームテーブル a 　　inner join 試合結果テーブル b 　　on a.id = b.自チームid 　　and b.試合年月日 like '2011%' 　where a.id = '2' 　group by a.チーム名); 引分は無いのであれば、その部分は無視してください。 試合年月日のデータ型が分からなかったので違うようであれば適当に修正してください。
unicodeの実装は、MySQL 4.1です。 詳しくは、MySQLユーザ会のホームページのFAQを参照してみてください。 参考URL：http://www.mysql.gr.jp/
文字数制限もあり、連続投稿になります。 半角カタカナを全角カタカナに変換するストアド・ファンクションを、試しに作ってみました。 文字数制限でここには貼り付けできないので、リンクを参照願います。 参考URL：http://blogs.yahoo.co.jp/chuuken_ken_kou/folder/ …
あ、ごめんなさいindexではなくunique ALTER TABLE `student_upload` ADD UNIQUE (`student_number`,`upload_id`); ちなみにDISTINCTでデータが重複するはずがないので おそらく根本的なところでなにか勘違いしていると思います。 データの取り出しはなにをつかっていますか？ プログラム処理をして単に処理を二回しているような気がするのですが・・・
＞マニュアルが面倒だから聞きに来たのです それは言っちゃまずいですね、嘘でもマニュアル見たけど解らなかったと 言わないと、「教えてクン」認定されますよ ちなみに、ORDER BY DESC して LIMIT 1をとってもだめですかね？
No2の追加です。 データの送信方法（POSTorGET）によって取得方法は変更されることはご存知ですよね？ postの場合は$_POST['フィールド名']、getの場合は$_GET['フィールド名']となります。 下記は簡単な例です。 （DBオープン、画面の処理、フィールドの入力値確認などの実装は省略してます。 ので、このままでは実行できませんが、SQLのイメージのみです。） <?php // 値を取得 // 従業員ID $lUserId = $_POST['USERID']; // 日付 $dDates = array($_POST['DATE1'],$_POST['DATE2'],$_POST['DATE3'],$_POST['DATE4'],$_POST['DATE5'],$_POST['DATE6'],$_POST['DATE7']); // 出勤時間 $tStarts = array($_POST['START1'],$_POST['START2'],$_POST['START3'],$_POST['START4'],$_POST['START5'],$_POST['START6'],$_POST['START7']); // 退勤時間 $tEnds = array($_POST['END1'],$_POST['END2'],$_POST['END3'],$_POST['END4'],$_POST['END5'],$_POST['END6'],$_POST['END7']); //日付フィールドの数分実行 for( $iLoop=0; $iLoop<count($dDates); $iLoop++ ) { // SQL文作成 $sSql = "INSERT INTO TableName " $sSql .= "( UserID, Hiduke , StartTime, EndTime ) " $sSql .= "VALUES (" $sSql .= $lUserId . "," $sSql .= "'" . $dDates($iLoop) . "'," $sSql .= "'" . $tStarts($iLoop) . "'," $sSql .= "'" . $tEnds($iLoop) . "');" // SQL文実行 $result = mysql_query($pSql); } ?> 私のPHPの参考サイト マニュアル：http://php.net/manual/ja/index.php 初心者入門：http://www.standpower.com/index.html DB：http://keicode.com/cgi/
> 新サーバ以降後に、Swap in/outが頻繁に発生しています。 となると、「innodb_buffer_pool_size」が過大なのかもしれませんね。 一旦、30GB程度にしてみてはどうでしょう。 後、「read_buffer_size」が小さすぎるという事も考えられます。 現状を調べて、64KB程度になっていたら512KB～1MB程度に増やして見てください。
こんな感じでよいのでは？ SELECT * FROM `events` WHERE `start_on` BETWEEN (@s:='2011-03-01') AND '2011-03-31' OR @s BETWEEN `start_on` AND `end_on`
労働条件がきまらないとなんともいえませんが・・・ 汎用性を考えるのであれば、シフトテーブルを作り 最低でも従業員ID、開始日時、終了日時の３点を保存するテーブルをつくることです。 ただ、メンテナンスのことを考えるのであれば、 文書ID、作成日時、更新日時、作成者ID、更新者ID、削除フラグなどもあると有効です ポイントとしては以下検討が必要です ・一日にダブルでシフトが入る可能性を考慮すべきかどうか (例)前日深夜勤で、帰宅後夜勤とか・・・ ・休日出勤や深夜勤を特別な勤務として処理するか ・休憩時間をどう処理するか
UPDATE文のWHERE句の直前のカンマが不要です。
こんばんは。 もともとのrootユーザーは残ってないんですかね？ デフォルトで、パスワードなしです。
　５．１のマニュアルですが、このあたりを参照してください。 　　http://dev.mysql.com/doc/refman/5.1/ja/innodb-co … 　innodbの設定に関するページです。複数ファイルにすることも、各ファイルのサイズを指定する事も、フルパスを指定することも出来ます。フルパスを指定すれば、ファイルを複数ドライブに分散できます。
お使いのMySQLのバージョンは何でしょうか？ CREATE FULLTEXT INDEX search_data_idx SPLIT_ALPHA, SPLIT_DIGIT, SPLIT_SYMBOL, 2048 ON chrono_table(search_data); この構文はどこで得た情報ですか？不勉強なもので初めて見る構文です。
>直接多次元配列で受け取ることは不可能でしょうか？ ないとはいわないですが、効率を考えればexplodeに一票 ちなみにSQLの結果はこんなかんじ id　　title　　data　　cats 1　　あ　　a　　1,3,2 2　　い　　i　　3,1 3　　う　　u　　5,2 4　　え　　e　　3,2 5　　お　　o　　3,2,1 <?PHP $sql=<<<eof SELECT id,title,data,group_concat(cast(cat as char)) as cats FROM table_cat INNER JOIN table_title USING(id) INNER JOIN table_data USING(id) GROUP BY id eof; $res=mysql_query($sql) or die($sql.mysql_error()); while($row = mysql_fetch_array($res,MYSQL_ASSOC)){ $array=&$arrays[]; $array["id"]=$row["id"]; $array["title"]=$row["title"]; $array["data"]=$row["data"]; $array["cat"]=explode(",",$row["cats"]); } print_r($arrays); ?>
SELECT文で、INTO OUTFILEの構文を使えばいいのでは？ SELECT ・・・INTO OUTFILE ・・・ FROM ・・・ WHERE ・・・ マニュアルに、CSV形式で出力するSQL例も載っています。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/select.html
とてもひどいSQLになったのでこれならきちんとトリガーなどで処理した方がいいかも set @s:='2010-01-01',@e:='2010-01-31'; insert into hoge (start_date,end_date) select start,end from (select @s as start,@e as end) as temp1 inner join (select count(*) from hoge where start_date between @s and @e or @s between start_date and end_date having count(*)=0 ) as temp2 on 1; set @s:='2010-11-12',@e:='2011-01-01'; insert into hoge (start_date,end_date) select start,end from (select @s as start,@e as end) as temp1 inner join (select count(*) from hoge where start_date between @s and @e or @s between start_date and end_date having count(*)=0 ) as temp2 on 1;
mysql -uuser1 --paa\"bb -Ddatabase1 でよくないですか？
こんばんは。 Community Edition Enterprise Edition 以外にも、 Standard Edition Classic Edition とかありますよ・・・。 XAMPPは、Community Editionです。
根本的にメモリ1GBしかないというのがハード資源として不足しているようです。 開発環境を見た限りでは、可能であればハード増設がよいのでは？
とりあえずデータのバックアップが取りたいということなので、 データベースがMySQLなのであればphpMyAdmin、 PostgreSQLなのであればphpPgAdminを使用して、 エクスポートタブからデータをエクスポートしてください。 くれぐれも焦らずに頑張ってください。
こうやって配列にため込んで再利用してみては？ <?PHP $sql="SELECT * FROM os WHERE name_b LIKE 'ソフト'"; $res=mysql_query($sql); while($row = mysql_fetch_array($res,MYSQL_ASSOC)){ $a[]=$row; } print_r($a); ?> SQLの戻り値データが一つしかなく、フィールド名（もしくは任意の別名）の 配列におさめればいいのであれば <?PHP $sql="SELECT * FROM os WHERE name_b LIKE 'ソフト'"; $res=mysql_query($sql); while($row = mysql_fetch_array($res,MYSQL_ASSOC)){ extract($row); } print $name_a; ?> でもよいですが、extractは致命的なバグにつながる可能性も秘めているので お勧めはできません。 またSELECT * は避けた方がいいです。可能な限りフィールド名を列記してください。 SELECT id,name_a,name_b FROM ・・・
>クエリに対し、クエリすることはできるんでしょうか？ >ビューに対し、ビューするといったほうが正しいのでしょうか？ Access用語でいうところのクエリであれば、それに対応するのはViewです。 ※AccessのクエリーはSelectの結果を表示するViewのような存在です。 ただし「ビューに対し、ビューする」とは言わないです。 他のViewを参照するViewを作成することは可能です。
「要注意」の画面下にある「http://***」リンクをクリック 管理者アカウントのパスワード入力画面で、パスワード（同じ）を2回入力し、画面下「パスワードを変更しました」ボタンをクリック 「rootのパスワードが変更されました。設定を有効にするために、MySQLを再起動してください。」と表示されたらパスワードの設定完了。再起動 詳細は参考URL 参考URL：http://www.adminweb.jp/xampp/mysql/index2.html
> 仮にmesという列を追加して・・・の抜き出しは可能なのでしょうか？ 相関サブクエリを使えば出来ます。 ただし、同じ no で最新の日付の行が複数有った場合は、複数取出されます。 例) ------------------------------------------- SELECT * FROM sample2 a where NOT EXISTS( SELECT * FROM sample2 b WHERE a.no = b.no AND a.date < b.date ); ----------------------------------------------- WHERE 句は、 no が同じで date がそれより大きい行が無い行という条件を表しています。 参考URL：http://codezine.jp/article/detail/460
質問範囲が広すぎて答えきれません。 「ＭｙＳＱＬ全機能バイブル　現場で役立つＡ　ｔｏ　Ｚ　リファレンスマニュアルの完全版（技術評論社）」 あたりを買って調べて下さい（確か、5.1対応だったと思います） 概略まで > 制約　整合性制約定義 > 外部キー ・UINIQUE制約 指定して列について重複値を許さない（ただしNULLは重複可 ・CHECK制約 列の値について制限する。MySQLでは実装されていない ・参照整合性制約、外部キー 商品マスタにない商品コードの注文テーブルへの挿入をエラーにしたりする ・再帰結合 普通は自己結合と呼ぶ。同じテーブル同士で結合する。 http://www.dbonline.jp/mysql/select/index17.html あたりを参考に ・インデックス 索引。ある項目について高速にアクセス出来る構造をつくり（通常B-TREE、Ｂ＊TREE）、WHEREでの検索の際の高速化を行う。 ・ストアドプロシージャ サーバー側に一定の手続きを登録しておいて呼び出す機能。ネットワークトラフィックの削減が出来る。 ・ストアドファンクション DBMSの手続き言語機能を用いて作成しておいた関数。導出項目（年月日から年度を算出）などする際に便利。 ・トリガ あるテーブルに更新がされた場合に連動して、手続きを実行する機能。ログテーブルに出力するとか、自動的にマスタを更新するとか。ただし、多用すると内部処理を追い切れずイタイ目にあう可能性が高い。 ・ユーザ変数 MYSQLでは「set @no=1」などとユーザ変数が宣言できる。 http://blog.kimuradb.com/?eid=681082 みたいな使い方が出来る。 ・設定ファイル MySQLの環境などを規定しているファイル。UNIX/Linux系では「/etc/my.cnf」,windowsでは「%windir%\my.in」かMYSQLのインストールディレクトリの「my.ini」。デフォルトの文字コードやデータバッファのサイズを指定していたりする。 ・ログファイル データベースを更新する際、パフォーマンス上即時にデータベースを更新しない。まず更新ログを出力する。ここらあたりはDBMSの細かい動作に関わるので、自分で調べて下さい。 ・ユーザー 「CREATE USER ユーザ名 IDENTIFIED BY 'password'」で新規ユーザーを作成可能。 　または「GRANT」文でも作成できる。 　基本はアプリケーションからアクセスする際のユーザーには、必要最低限の権限のみ与える事。 ・バックアップ オフラインバックならmysqldumpで可能。 ・レプリケーション MySQLでは更新対象のデータベースをマスタにして、その更新結果をスレーブに反映することが可能。これで、参照のみのリクエストについてはスレーブを活用することで負荷分散が図れる。
とりあえず思いついた順に (1)地域はお店ごとに1つしか持たないので、単純に店の情報テーブルに項目として 持たせられます。 (2)年齢以下の項目のように複数データからラジオボタンで選ぶようなものは、 お店側は複数の幅をもってデータを持つので正規化して別テーブルで管理します。 (3)ラジオボタンとチェックボックスはデータの持ち方は同じようでも なげるクエリーが変わってくるので注意が必要です。 (4)選択項目の「こだわらない」がある場合は、条件選択しないようクエリーを調整します。 (5)今回の案件ではラジオボタンは微妙で、実は複数幅を持たせたい場合もあるので チェックボックスの方がよいかもしれません
オーソドックスな方法として、座標変換だけで比較する方法があります。 できるだけ軽い処理方法を希望されているようで、確かに座標変換すれば処理が重くなるとは思うけど、線分からの距離を求める以外に適当な方法が私にはわからなかったので、参考までに回答させていただきます。 Ｐ（Ｘ，Ｙ）の座標値を 線分（ＳＸ，ＳＹ）－（ＥＸ，ＥＹ）の開始点を原点とし、終了点をｕ軸にとる ｕ－ｖ座標系に座標変換します。 線分の長さをＬ＝ＳＱＲＴ（（ＥＸ－ＳＸ）＾２＋（ＥＹ－ＳＹ）＾２）とすれば、 これは、線分の終点のｕ座標値に他ならないので、 Ｐ点の座標変換した座標（ｕ，ｖ）について、 ０＜ｕ＜Ｌで、かつ　ｖの絶対値（線分までの距離）が一定値以下のものを選択すれば 良いと思います。 座標変換の公式はここに書くと長くなりますので、ご存知でなければ別に調べてください。 比較する線分のテーブルに座標変換したｕ、ｖと線分長Ｌのカラムを作り、それから上記の条件で抽出するＳＱＬを作れば良いのかな？
「全デットストック」と「自支店のみのデットストック」の２つのテーブルを、商品コードでLEFT JOIN（全デットストックの全件と、自支店のデットストックの一致レコードを結合）させます。 そして、WHERE条件で「自支店のデットストックの商品コードがNULLのレコード」だけを抽出します。 すると「自支店でデットストックのテーブルにある商品だけ、結果から取り除かれる」ので、目的を達成できます。 なお「各発注を、どの支店に対して行うか？」を良く考えないと、保管コスト、輸送費コストが嵩みます。 例えば 在庫店　商品　個数 A店　　　　ア　　　　４ B店　　　　ア　　　　６ A店　　　　イ　　　　２ B店　　　　イ　　　　３ と言う場合に、C店が「アを５個、イを２個」発注した場合には 在庫店　商品　個数　移動　在庫 A店　　　　ア　　　　４ B店　　　　ア　　　　６　　５　　１ A店　　　　イ　　　　２ B店　　　　イ　　　　３　　２　　１ と言う按分をしないといけないでしょう。こうすれば「B店からC店への発送のみ」で済みます。もし、 在庫店　商品　個数　移動　在庫 A店　　　　ア　　　　４　　４　　０ B店　　　　ア　　　　６　　１　　５ A店　　　　イ　　　　２　　２　　０ B店　　　　イ　　　　３ と按分すると、A店とB店の両方からC店に向けて発送を行う必要が出て、輸送コストが２倍になります。
検索条件がよくわかりませんが・・・ OR条件ならたとえばこういうかんじで？ <form> <div><input type="checkbox" name="key[]" id="key_1" value="居酒屋" /><label for="key_1">居酒屋</label></div> <div><input type="checkbox" name="key[]" id="key_2" value="レストラン" /><label for="key_2">レストラン</label></div> <div><input type="checkbox" name="key[]" id="key_3" value="美容室" /><label for="key_3">美容室</label></div> <div><input value="検索開始" type="submit" /></div> </form> <?PHP $query = "SELECT id,name,state FROM personal_info WHERE 1"; $key=$_REQUEST["key"]; $where =""; foreach((array) $key as $val){ if($where!="") $where .=","; $where .="'".mysql_escape_string($val)."'"; } if(is_array($key))$query .=" AND value IN (".$where .")"; print $query; ?>
もしかしてマイナスの数値では？ きっちりSIGNEDキャストしてみてはどうでしょう？ 想定外な数値 SELECT CONCAT(CAST(1 AS SIGNED),CAST(-1 AS UNSIGNED)); 想定する数値 SELECT CONCAT(CAST(1 AS SIGNED),CAST(-1 AS SIGNED));
ご使用のMYSQLのバージョンが分かりませんが、4.1.0以降であれば INSERT ... ON DUPLICATE KEY UPDATE 構文を使うといいかもしれません。 http://dev.mysql.com/doc/refman/5.1/ja/insert-on …
参考 URL によると SELinux が有効なとき、 mysql の datadir を変更すると同様なエラーに なるようです。 SELinux を無効にするか、参考 URL にあるように system-config-securitylevel を使い、 mysqld daemon に対する SELinux の保護を無効に してみてはいかがでしょうか。 参考URL：http://oksoft.blogspot.com/2009/12/issues-with-s …
数値型なのですよね？ 80000引けばいいのでは？ UPDATE テーブル SET ID_CODE=ID_CODE -80000 WHERE ID_CODE BETWEEN 990000 AND 999999
想像するにシンボリックリンクをやりたいのでしょうね。 MSのサイトからWin2K系のResource Kit Toolsをダウンロードしてきて linkdなどで処理するのが妥当だと思います。
条件が異なるから普通に、二回 SELECT * FROM user_table WHERE group_id = 1 AND sequence > 2 ORDER BY sequence LIMIT 1; SELECT * FROM user_table WHERE group_id = 1 AND sequence < 2 ORDER BY sequence DESC LIMIT 1; どーしても一回で済ませたいなら、 SELECT 　MAX(CASE sequence < 2 THEN sequence ELSE NULL END) AS prev 　MIN(CASE sequence > 2 THEN sequence ELSE NULL END) AS next FROM user_table WHERE group_id = 1; 又は SELECT 　* FROM user_table WHERE group_id = 1 　AND sequence >= ( 　　SELECT sequence FORM user_table WHERE group_id = 1 AND sequence < 2 　　　ORDER BY sequence DESC LIMIT 1 　) 　AND sequence <> 2 LIMIT 2;
＞タイムアウト なにを見てタイムアウトと判断したのでしょうか？ 素直に読めば4045208行目に文法エラーがあると読めますが、 4045208行目の記述を確認しましたか？
この値を設定します。 $GLOBALS['cfg']['NaviWidth'] 場所は各テーマのディレクトリにあるlayout.inc.phpにいます。 /phpMyAdminxxxx/themes/[各テーマのディレクトリ]/layout.inc.php 上書きしたら、一度クッキーを削除しましょう。(クッキーに値を保存するようなので・・・） ちなみに2.x系です。
基本#1と同様ですが日付処理の定番はBETWEENです 日時フィールドをdatetime型でもち BETWEEN 日時フィールド 'XXXX-XX-XX 00:00:00' AND 'YYYY-YY-YY 23:59:59' またさらに効率化を図るのであれば 日付だけ別にもち日付フィールドをdate型にしておけば BETWEEN 日時フィールド 'XXXX-XX-XX' AND 'YYYY-YY-YY' でいけます。
こんにちは。 既に＃２、＃３さんが回答を出しておられますが・・・、 実行計画を見ると、 １．feedテーブルの検索がINDEXなし（ALL）、487226件 ２．siteテーブルの検索がPRIMARY、1件 ３．結合後にUsing filesort、257件 となっております。 ２は問題なし。 ３は致し方なし（ORDER BYに含まれるカラムにINDEXを付けられればいいのですが、この場合はAVGの計算結果のため、無理という事。件数的にも少ないので、許容範囲）・・・。 １は問題あり。 です。 実行計画の結果は、このように見る事ができます。
JavaScriptだけではできません。 が、サーバーサイドのプログラミングと組み合わせることで可能となります。 その場合、サーバーサイドでMySQLへの接続、データの登録などの処理を書いておき、それにたいしてJavaScriptからGETなりPOSTなりでクエリを送る形になります。 ＃この一連の仕組みは、ごく一般的に利用されているものです。
チェック用なら、以下のＳＱＬでもいいんではないでしょうか。 select concat( case when a.c1=b.c1 then '' else concat(' c1:',b.c1) end ,case when a.c2=b.c2 then '' else concat(' c2:',b.c2) end ,case when a.c3=b.c3 then '' else concat(' c3:',b.c3) end ) compare from a,b where キー条件～
SQLにおいてSJISは天敵ですね。 「ソ」は5C問題の代表格です。 ソがでてきたときに無理やりエスケープするか、SJIS以外のコードでプログラムを 処理するですね。
>これはroot/localhost/パスワードあり >以外全部削除しても大丈夫なのでしょうか？ たいていの場合MySQLをインストールして最初に rootでログインしてパスワードなしのユーザーを削除するところから始めます。 質問者さんの運用方法にもよるので問題ないとまでは言えませんが ひとまずrootのlocalhost以外はつかわないと思います 当然「flush privileges \g」も忘れずに
その値が自動的に更新されるのでないのでしたら その値の更新時の処理に盛り込むべきだとおもいます。 もしくは締め時間を設定してcronで動かすべきかと。
＞それ以外にmysqlのユーザーIDとパスワードは必要なのはわかりますが、MYSQL自体に接続するにはどうしたらいいのでしょうか？ VBからなら、OLEDBプロバイダか、ODBCドライバになると思いますが、いずれにせよ接続に必要な情報は、基本は、 ・接続先サーバ（IPアドレス） ・データベース名 ・ユーザID ・パスワード ですね。他には ・ポート（デフォルトなら3306） ・文字コード（接続文字列に明示的に含める事ができます） などです。 因みに、データベース名と言うのは、ファイル名の事ではありません。 この辺は、ちょっと戸惑うかもしれません。 で、 ＞何をもとに、どうやってサーバーにクライアントは接続しにいくのでしょうか？ こちらについては、ORACLEでも、SQL Serverでも、MySQLでも、PostgreSQLでも基本は同じです。 サーバー側で専用のサービス（デーモン）が起動していて、常にクライアントからの接続を待ち受けているんです。 VB＋Access（ODBCかOLEDB）の経験がおありでしたら、基本的には「接続文字列が変わるだけ」（厳密には色々違いはあるが）なので、とりあえずサクッと試してみればよいと思います。
前提がひとつ テーブル1は、typeがカンマ区切りの文字列になっていますが これを正規化して id type 1 1 1 2 2 1 2 3 2 5 3 2 3 4 のようなデータの持ち方をしませんか？ そうでない場合は、かなり非効率的な処理になりSQLでは高速な処理は期待できませんが・・・
12345になるはずが、1239になるということ、 文字列関数のconcatを使えば解決するんではないでしょうか？ mysql> select 123+456; +---------+ | 123+456 | +---------+ | 579 | +---------+ 1 row in set (0.00 sec) mysql> select concat(123,456); +-----------------+ | concat(123,456) | +-----------------+ | 123456 | +-----------------+ 1 row in set (0.00 sec)
仮にテーブル名をT1とすると SELECT 人, COUNT(*), SUM(個数), SUM(金額) FROM (SELECT T1.人 AS 人, T1.バスケット数 AS バスケット数, SUM(T1.個数) AS 個数, SUM(T1.金額) AS 金額 FROM T1 GROUP BY T1.人, T1.バスケット数) GROUP BY 人 Accessだと「COUNT(DISTINCT バスケット数)」という構文が使えないので 一度「人＋バスケット数」で集計して、それを再度「人」で集計します。
mysql_fetch_assoc()で現在の行のデータを連想配列に取得することができます。 ※ついでに取得後には次の行にデータポインタが移ります。 テーブルの部分を以下のようにすればデータが表示されると思います。 (testテーブルの表示させたいカラムの名前がわからなかったので 'user_siten'/'user_name'であるとして記述してます) --ココカラ-- <table width = "200" border = "0"> <tr bgcolor="##ccffcc"><td>user_siten</td><td>user_name</td></tr> <?php while($row=mysql_fetch_assoc($result)) { ?> <tr bgcolor="##ffccff"><td><?php print($row["user_siten"]); ?></td><td><?php print($row["user_name"]); ?></td></tr> <?php } ?> </table> --ココマデ-- whileで行情報が取得できる限りテーブルにuser_sitenとuser_nameの 出力を繰り返すようになってます。
もしかすると英語はまったくダメな感じでしょうか？ 私はPHP知りませんが、言葉を読む限り ・26行目で、最大2個の引数を期待しているが、お前は3個渡した ・28行目で、リソースになる1つのパラメータを期待しているが、お前はnullを渡した といわれてますよ。 最低限の基本的な書き方が分かっていないことも問題だとは思いますが、 せっかくわかりやすいメッセージを出してもらっているのに 言葉を理解していないがために通じない不幸な状態に見えます。 PHP: mysql_query - Manual http://php.net/manual/ja/function.mysql-query.php mysql_query http://manual.xwd.jp/function.mysql-query.html mysql_query：ＳＱＬを実行する http://bg.pi-ppi.com/page/n01/000144.html mysql_query - MySQL クエリを送信する http://phpspot.net/php/man/php/function.mysql-qu …
insert文で結構良くやるミスに 「項目とデータの位置がズレてた」 というのもあります。 日本語データの項目だと思って確認してみたら 位置がずれてて、データ型の不一致で怒られてた。 というものです。 なので、insert文で項目名を明示したうえで 1.該当部分のデータをnull。 2.該当部分のデータをベタ打ち。 3.該当部分にデータを設定。 の順に確認さ…れていたのでしたらスミマセン。 ini の設定を変更しても、有効になるのは MySQL を再起動した後だったりするというのもあります。
質問文の範囲からに対しての回答なので 実際のシステムで適応できかどうかは負荷次第ですが 交流用テーブルを使用する度に select 文を発行するのは 交流用テーブルの参照頻度によっては無駄に負荷がかかりそうですね。 「名前だけ」程度が頻繁なのなら、 交流用テーブルに名前カラムを追加してしまった方が where 句もなくなり select 文もスッキリして 憶測値三分の一の負荷減少が期待できそうです。 この辺りは人間の手順と似たような感覚で 「アッチとコッチでコレ持ってきて～～」よりも 「コレのコレ」ってなってたほうが簡単な認識でよいのでは？ 名前カラムが無茶苦茶デカくて サーバの課金単位がデータの容量なら 不適合ですが。。。
単純な話、イコールではなくINを使えばいけます。 SELECT * FROM favorite WHERE no in (SELECT max(no) FROM favorite GROUP BY category) きちんとやるならcategoryも含めてinで抽出した方がいいかもしれません SELECT * FROM favorite WHERE (category,no) in (SELECT category,max(no) FROM favorite GROUP BY category)
>上記のようなページにするには、どのような知識が必要か PHP+html+JavaScript+MySQLで間違いないです。 >参考になるサイトをご存じではないでしょうか? サイトより本を読むほうが手っ取り早いです。 サイトの場合、基本的に無料なので、書いているほうも適当で、内容が不足している場合がほとんどですから、特に初心者には厳しいと思います。（RFCなどの大元のサイトは除きますが・・） 個人的にPHPの本と、出来ればjavascriptの本は読んだほうが良いと思います。 どちらもWEBプログラミングなので、内容は簡単ですし、構築例が載っているので参考になると思います。 MySQLについては、初期設定の方法とSELECT/INSERT/UPDATE/DELETEの４つの構文さえ分かれば何とかなるので、こちらはWEBなどでも大丈夫でしょう。（大抵のPHPの本の中にDBアクセスの章があるので、そこら辺りで基本は押さえられると思います。また、効率の良いDB設計を目指したければ、「DB　正規化」で検索することをお勧めします。） >どんな用語で参照サイトを探せば良いのでしょうか 上を参考にして下さい。 >「最近1週間で検索数が多いキーワード」は必要ないですが、しくみは知りたいです… 検索に入れられたキーワードとその検索回数、日付をDBで記録して、検索回数の多いものを表示しているだけです。
1番可能性があるものとしては、MySQLサーバーが起動していない。 2番目としてはWebサーバーのmysql.sockへのパスが間違っている。 この情報だと、これくらいしか浮かばないです。 すでにご覧になっているかもしれませんが、参考URLを載せときました。 参考URL：http://www.hi-ho.ne.jp/tsumiki/book_sup2.html
>土日出勤時間は除く 土日のような処理は危険、土日が営業日のこともあるでしょうし、 土日以外が祝日でやすみの場合もあるでしょう。 そういうときのため会社自体の営業日をベースに処理していいなら 営業日テーブルをつくっておくと便利です。 （個人ごとに出勤シフトが違う場合はこまかい調整が必要ですが） 以下サンプル /* 勤怠テーブル作成 */ create table 勤怠( 社員ID varchar(10) not null,勤務日 date not null,出社 time,退社 time ,primary key (社員ID,勤務日) ); insert into 勤怠(社員ID,勤務日,出社,退社) values( '10000','2011-01-01','9:30','12:00'),( '10000','2011-01-02','9:30','12:00'),( '10000','2011-01-03','9:30','12:00'),( '10000','2011-01-04','9:30','12:00'),( '10000','2011-01-05','9:30','18:00'),( '10000','2011-01-06','9:30','18:10'),( '10000','2011-01-07','9:30','18:20'),( '10000','2011-01-08','9:30','18:30'),( '10000','2011-01-09','9:30','18:10'),( '10000','2011-01-10','9:30','18:20'),( '10000','2011-01-11','9:30','18:30'),( '10000','2011-01-12','9:30','18:10'),( '10000','2011-01-13','9:30','18:20'),( '10000','2011-01-14','9:30','18:30'); /* 営業日テーブル作成 1,2,3,10は祝日、8,9は土日*/ create table 営業日( 営業日 date not null primary key); insert into 営業日 values( '2011-01-04'),( '2011-01-05'),( '2011-01-06'),( '2011-01-07'),( '2011-01-11'),( '2011-01-12'),( '2011-01-13'),( '2011-01-14'); /* 平日の残業時間を集計 */ select sum(time_to_sec(timediff(退社,'18:00') * (退社>'18:00'))) from 勤怠 INNER JOIN 営業日 ON 営業日=勤務日 where 1 AND 社員ID='10000' AND 勤務日 BETWEEN '2011-01-01' AND '2011-01-31';
「指定のホストへ接続できません」と書いていますよ。 MySQLサーバへの接続経路とMySQLサーバの設定を確認しましょう。 あと、「そんなことぐらい自分でやりなさいよ。お金もらってるんでしょ。」 と言いたくなる内容とお礼率ですね。
どのタイミングで発生しているのかも気になりますが、よくあるconnector のバージョン違いというのは無いでしょうか？ あとMySQL connector がVisualStudio2010 に未対応だった時期もありましたが？当方はその時6.3.4 というベータリリースに変更しました。現在は6.3.6 のようですね。 参考になれば幸いです。
かなり意味不明 たぶん無理なことをやろうとしていると思いますので 「できません」という回答が正しいと思います。 べつの切り口を考えた方がよろしいかと思いますが・・・
こんにちは。 MySQLはちょっと特殊で・・・、 特定のカラムで「GROUP BY」した時、残りのカラムは適当に選ばれて出力されます。 一般的にはエラーになるはずですが、MySQLはエラーになりません・・・。 なので、要件的に「attachment_name」がどれでもいいのなら、SQLの一番外側で、「item_id」だけで「GROUP BY」してみてください。
とりえあえずrehashコマンドを打つ http://dev.mysql.com/doc/refman/5.1-olh/ja/mysql … 自動で設定するならコマンドオプション--auto-rehashをつかうか my.cnfの[mysql]セクションに「auto-rehash」を書いておく http://dev.mysql.com/doc/refman/5.1/ja/mysql-com …
こちらでは col like '%カルビ%' collate utf8_bin の場合は清音、濁点、半濁点を区別するようですが。 よろしければ、collateをどのように指定しているか教えてください。
文書自体はsqlとは別にしてsqlで文書（というファイル）のデータベース、phpで文書整形として吐きだし　ってやり方が楽なんじゃないかな。 sql側にはファイル名、タイトル、著者、概要、いくつかのキーワード　辺りを埋め込んでおければ良いんじゃないかな。（日付等が居る場合はそういうのも。そのへんはDB構築側の設計の問題) 文書自体はただのテキストでも良いしxml化しておいても良いし。 文書整形をどこまでサーバ側にやらすか　ってとこかな。 私ならxmlにしといてphpはsql操作とクライアントpushを担当して　ユーザ側はxmlとxslt(html整形用)を受け取って表示・・・かな
こんばんは。 うーん・・・、後はポートだけかなぁ・・・、怪しいの。
こんな構成でどうでしょう？ データ作成： create table shop(id int not null primary key ,shop_name varchar(30)); insert into shop values(1,'店舗Ａ'),(2,'店舗Ｂ'),(3,'店舗Ｃ'); create table item(id int not null primary key ,item_name varchar(30)); insert into item values(1,'商品１'),(2,'商品２'); create table payment(id int not null primary key,pay_name varchar(30)); insert into payment values(1,'代引き'),(2,'クレジット'),(3,'銀行振込み'); create table shop_item_payment(id int not null auto_increment primary key,shop_id int not null,item_id int not null,payment_id int not null , unique (shop_id,item_id,payment_id)); insert into shop_item_payment(shop_id,item_id,payment_id) values(1,1,1),(1,1,2),(1,1,3),(1,2,1),(1,2,2),(1,2,3),(2,1,1),(2,1,2),(2,2,1),(2,2,2),(3,1,2),(3,2,2); 抽出： select shop_name,item_name,group_concat(pay_name order by p.id) from shop_item_payment inner join shop as s on s.id=shop_id inner join item as i on i.id=item_id inner join payment as p on p.id=payment_id group by shop_id,item_id;
１回目とか２回目といわれても、状況がわからないのですが・・ (1)２回目のSQLで１回目で投入したデータを呼び出して投入する (2)ダブったデータは投入せずにUNIONで必要なデータをよびだす (3)そもそもテーブルをわけずに１つのテーブルで管理する のいずれかがよろしいかと。
アスクとデスクでいいみたいですよ http://yougo.ascii.jp/caltar/ASC http://yougo.ascii.jp/caltar/DESC なんかSQLは外国人では「シークェル」とか「シークウォ」とか発音するらしく そういう意味では、読みたいように読めってことかもしれないですね http://yougo.ascii.jp/caltar/SQL
>量も扱う必要が出てきました。 ではsetmenuテーブルを拡張して量をいれてみてください。 create table menu(id int,name varchar(30)); insert into menu values(101,'ご飯'),(102,'味噌汁'),(103,'焼しゃけ'),(104,'焼さば'),(105,'肉じゃが'), (106,'漬物') ,(201,'焼しゃけ定食'),(202,'焼さば　定食'),(203,'肉じゃが定食'),(204,'肉じゃが定食 大盛'); create table setmenu(setmenu_id int,menu_id int,quantity double); insert into setmenu values(201,101,1),(201,102,1),(201,103,1),(201,106,1) ,(202,101,1),(202,102,1),(202,104,1),(202,106,1) ,(203,101,1),(203,102,1),(203,105,1.5),(203,106,1) ,(204,101,2),(204,102,1),(204,105,2),(204,106,1); select setmenu_id ,sm.name as setname ,group_concat(m.name ,' ',CAST(quantity AS CHAR) ) as setmenu from setmenu as s inner join menu as m on menu_id=m.id inner join menu as sm on setmenu_id=sm.id group by setmenu_id;
create table hoge(date datetime,seibetu varchar(10),age int); insert into hoge values( '2009-12-2 10:35:06','danshi','18'),( '2009-12-2 11:35:06','jyoshi','20'),( '2009-12-2 11:35:06','danshi','19'),( '2009-12-2 12:35:06','jyoshi','20'),( '2009-12-2 12:35:06','danshi','17'),( '2009-12-3 13:35:06','danshi','18'),( '2009-12-3 11:35:06','jyoshi','20'),( '2009-12-3 13:35:06','danshi','20'),( '2009-12-3 16:35:06','danshi','19'),( '2009-12-4 13:35:07','danshi','18'),( '2009-12-4 13:35:06','jyoshi','20'),( '2009-12-6 11:35:06','jyoshi','19'); だとして、 (1)日付別、年齢分布 select date(`date`) as d,age ,count(*) from hoge group by d,age; (2)日付別、性別分布 select date(`date`) as d,seibetu ,count(*) from hoge group by d,seibetu; ってことでしょうか？
経路列挙モデルというのを使うといいと思います。以下サイトで、SQL文でのtable 構築～新規登録、削除、更新方法も載っています。 「SQLで木と階層構造のデータを扱う（２）―― 経路列挙モデル」 http://www.geocities.jp/mickindex/database/db_tr … 「経路列挙モデル（準備編）：MySQLで階層化データを使う」 http://www.makizou.com/archives/1662 サイトマップに応用した例 http://miztools.so.land.to/php5_list/map/
現在ログイン中ユーザー名で、B のデータベースへのアクセス権を持っているなら、table名の前にデータベース名を付けるだけですよ。 select * from B.tablename show databases; で、表示されるデータベースなら可能でしょう。
yambejp 様。どうもありがとうございます。 質問欄にて失礼させていただきます。 元来そそっかしい者でログインができませんでしたので、こちらから 感謝の気持ちを書かせてください。 動作いたしました。 全く細かい事をおろそかにしていたのですね。 それと、 mysql_query($sql) or die(mysql_error().$sql); の威力は絶大でした。 今後も使わせていただきます。 どうもありがとうございました。
SELECT DateDiff("d",[日付],[購買日]) AS 日数 FROM テーブル1;
＃2です。 ＞一番古い なので、MaxをMinに変更してください。 ＞Max(T1.日付) Min(T1.日付)
件数も少ないしインデックスさえ貼ってあればパフォーマンスは変わらないでしょう むしろHTMLなどでデータ送りする際の問題でintでデータを持つ方が 効率的な運用になると思います。 つまり <option value="1">北海道</option> みたいにすることで、文字コードのぶれも防げるし、データ量も圧縮できます。
考え方は４つ (1)REPLACEで処理する (2)IFで場合分け処理をする (3)データ投入時に「あいうえお」を「かきくけこ」に読み替えて登録しておく (4)「あいうえお」をそのままSQLで出力し、ミドルウェアもしくはアプリ側で結果を読みかえる SQLで読み替え処理をするのはナンセンスだと思うのでやるなら(4)だと思いますが なんらかののっぴきならない理由があるかもしれないのでなんとも言えません。
>そもそも可能なものなのでしょうか。 ■可能です。 >1つのサーバーにxoopsのようなEUCを使用するフレームワークと他のUTFを使用するフレームワークを利用した場合、どのようにデータベース設計すればよろしいでしょうか。 また、分けるとすれば、どのような構成が考えられますでしょうか。 ■文字コードの違うフレームワークを複数使用するとの事ですが、 別フレームワークですので、同じフィールドを共用しないと思います。 ということは、 ・Database単位で文字コードを分ける ・テーブル単位で文字コードを分ける のどちらかになると思いますので、 ・Database単位で文字コードを分ける場合は CREATE DATABASE hogehogedb DEFAULT CHARACTER SET utf8; ・テーブル単位で文字コードを分ける場合は CREATE TABLE table_name DEFAULT CHARACTER SET ujis; などの様にそれぞれのフレームワークで使用するDatabaseまたはtableを作成する際に 文字コードを設定することで対応できるのではないでしょうか。 参考URL：http://dev.mysql.com/doc/refman/4.1/ja/charset-d …
No.2です。 ゴメンなさい。 レコード数というよりも「レコード件数」と言った方がいいかも知れませんね。
はい、指摘の通りです。 「set names utf-8」はエラーになります。 「set names utf8」が正しいです。
× 'test' ○ `test` そりゃ文字列'test'に正規表現かけてもヒットしませんね・・・
テンプレートを一つ作って、 検索結果ページでリンクにパラメータ（物件ID）を埋め込んでおいて、 テンプレート側でそれを受けてSQL文を発行し、 テンプレートに表示させる。 というカンジで良いのではないでしょうか。 詳しくは、PHPのテンプレートエンジンをお調べ下さい。
検索条件に該当するインデックスが定義されていなければ、データが１００万件あったら １００万件すべてを検索条件と一致しているかいちいち比較してしまうということです。 インデックスの中は昇順になるように並べられて（管理されて）いるので、 検索条件にマッチするところを見つけるのも、範囲外と判定して検索を終了するのも 余計な検索（比較）をしない分効率が良いわけです。
SELECT a.id FROM `a_table` AS a LEFT JOIN `b_table` AS b ON a.id = b.id WHERE 1 GROUP BY a.id HAVING COUNT( a.id ) = 1;
オプションは順に記述する必要があるので、後ろではなく、変数指定の前（テーブル名の後）に記述する必要があります。 LOAD DATA INFILE 'file_name' INTO TABLE table_name FIELDS TERMINATED BY ';' ENCLOSED BY '"' LINES TERMINATED BY '¥r¥n' IGNORE 1 LINES (@fieldA, @fieldB, @fieldC, @fieldD, @fieldE, @fieldF) SET col2=@fieldA, col3=@fieldC, col4=@fieldD, col5=@fieldF; No1 の方がマニュアルへのリンクを張ってくれているので、一度目を通されるといいと思います。
更新部分の > pre=values(now),now=values(now+day01+day02+day03～途中省略～+day29+day30+day31) を pre=values(now),now=values(now)+values(day01)+values(day02)+values(day03)～途中省略～+values(day31) に変えるとどうなりますか。
自信ありませんが SELECT t.date_y, t.date_m, sum(day01) as sum_day01, sum(day02) as sum_day02, sum(day03) as sum_day03, sum(day30) as sum_day30, sum(day31) as sum_day31 FROM `table` t, ( SELECT date_y,date_m FROM `table` WHERE now > pre order by date_y desc, date_m desc limit 1 ) s WHERE t.date_y=s.date_y and t.date_m=s.date_m;
SELECT （省略） FROM a , b WHERE a.id = b.id
こういう場合LEFT JOINしてNULLを探すのが常套ですね SELECT a.id FROM `table_a` AS a LEFT JOIN `table_b` AS b ON a.id=b.id WHERE b.id IS NULL
RPAD(str,len,padstr) CHAR 型にキャストは乱暴か。
create table tbl(ID int,HIDUKE date,POINT varchar(10)); INSERT INTO tbl values( '1','2010/10/06','A'),( '1','2010/10/14','B'),( '1','2010/10/20','C'),( '1','2010/10/25','D'),( '2','2010/10/23','B'),( '2','2010/10/24','A'),( '2','2010/10/25','D'),( '2','2010/10/27','C'),( '3','2010/10/25','D'),( '3','2010/10/27','C'),( '3','2010/11/03','B'),( '3','2010/11/04','A'),( '3','2010/11/07','D'),( '3','2010/11/10','C'),( '4','2010/11/10','B'),( '4','2010/11/15','A'),( '4','2010/11/16','D'); というデータ保持をして SELECT GROUP_CONCAT(POINT ORDER BY HIDUKE ASC) FROM tbl WHERE ID='1' とすればよいでしょう
こんばんは。 OSは？ インストールはどのようにおこなったのでしょうか？？？
#1 です。 はい、補足で書かれたような事をやりたいのだろうと言うのはわかります。 では逆に聞きますが、移す先のDBではIDmはバイナリで格納するのですか？ もしそうなら、その理由は？ 前の回答のとおり、DB上は16進変換したASCIIの16桁で持っているべきなので「unhexせず」、そのまま varchar → varchar で何の問題もないと思います。 仮に何らかの理由でバイナリにする必要があったとしても、これも前の回答のとおり「CSVにはバイナリ値を入れられない」（厳密には「エディタ以外では予期せぬエラーが起こる可能性がある」）ので、ご質問の回答としては 「CSV上は文字列のままやり取りして、移行先でDBにインポートする時に初めてバイナリーに変換」 です。 しつこく言いますが、もし私が顧客なら、 「CSVにバイナリを格納する事の妥当性と安全性の担保」 「FeliCaアクセス時以外でIDmをバイナリで取り回す事の妥当性」 の確たる説明がなければ、検収印は押せません。
UNHEX(`CODE`)
select * from xxxxx where id in ( select id from xxxxx where name in ('foo' ,'bar') group by id having count(*) > 1 ) / 条件を変えるには、inの中を変える。 ID NAME ---------- -------------------- 1 foo 2 foo 1 bar 3 foo 2 hoge 3 bar 6行が選択されました。 ID NAME ---------- -------------------- 1 bar 1 foo 3 bar 3 foo ID NAME ---------- -------------------- 2 hoge 2 foo
＞パラメータ個数が可変の場合 引数個数が可変な関数の引数に配列渡しても、複数引数の代わりにはならないようなので、MySQLi_STMT->bind_paramを実行時可変にするのは、無理かも。 PDOStatement->bindParam　だと、パラメーター一個ずつ対応させるので、foreachで回せば、いくらでも可変になるんだけど。 無理矢理やるなら、最大個数を決めて、１個から、最大個数までswitch文で切り分けるのも４－５個程度までなら、許容範囲かも。 <?php $data = '2,4,8';/* どこかから受け取ったものがこの形式と仮定して */ $list = explode(',' , $data); $cnt = count($list); $sql = 'INSERT INTO /* 中略 */ where person_id IN ('; switch ($cnt){ case 0: $sql .= ' 0 )' ; /* ダミー値、エラーにしないけど、一件も取得されないようにする */ $presql = $db->prepare($sql); $presql->bind_param('s' ,$para01 ); break; case 1: $sql .= ' ? )' ; $presql = $db->prepare($sql); $presql->bind_param('si' ,$para01, $list[0] ); break; case 2: $sql .= ' ?,? )' ; $presql = $db->prepare($sql); $presql->bind_param('sii' ,$para01, $list[0],$list[1] ); break; case 3: /* パラメータ個数を増やしただけの同じ式なので省略 */ break; case 4: default:// これ以上は無視 /* 省略 */ } $presql->execute();
こんな感じでいかがでしょうか INSERT INTO `sendmail` ( `name` ,`email` ,`ticket` ) SELECT `name` ,`email` ,'11-19' FROM `person` WHERE person_id IN ( 2 , 4 )
ちなみに、ちょっとしたことなら下手に文字コードを指定するよりバイナリのやり取りで十分だったりしますが。
補足です。 WHERE句のサブクエリに LIMIT を使うと下記の様に出来ますね。 リレーショナル演算子ではない ORDER BY / LIMIT を検索条件に入れるのは、ちょっときたない感じがしますが。 SELECT * FROM hoge_tbl a WHERE date IN (SELECT date FROM hoge_tbl b WHERE a.id = b.id ORDER BY date DESC LIMIT 10) AND id IN (SELECT id FROM hoge_tbl c GROUP BY id ORDER BY MAX(date) DESC LIMIT 10) ORDER BY (SELECT MAX(date) FROM hoge_tbl e WHERE a.id = e.id) DESC, id, date DESC, data
文字列にどう格納しているのかはわかりませんが、キャストすればよいのではないかと 思います。 mysql> SELECT DATE_FORMAT('1997-10-04 22:23:00', '%W %M %Y'); -> 'Saturday October 1997' mysql> SELECT DATE_FORMAT('1997-10-04 22:23:00', '%H:%i:%s'); -> '22:23:00' mysql> SELECT DATE_FORMAT('1997-10-04 22:23:00', '%D %y %a %d %m %b %j'); -> '4th 97 Sat 04 10 Oct 277' mysql> SELECT DATE_FORMAT('1997-10-04 22:23:00', '%H %k %I %r %T %S %w'); -> '22 22 10 10:23:00 PM 22:23:00 00 6' mysql> SELECT DATE_FORMAT('1999-01-01', '%X %V'); -> '1998 52' 参考URL：http://dev.mysql.com/doc/refman/4.1/ja/date-and- …
普通に・・・ SELECT count(*) FROM `t` WHERE id=11 and id2=12 or id=12 and id2=11
email とdateの組合せがユニークである場合なら以下でいけます。 select name,email,date from table1 where (email,date) in( select email,max(date) from table1 group by email )
デバッグするなら >mysql_query($sql, $conn) or die("登録できませんでした" ); のところを mysql_query($sql, $conn) or die(mysql_error()); としてみてください とりあえず文法的には ＞$sql = "INSERT INTO kokugo('tensu') VALUES('$tensu')"; $sql = "INSERT INTO `kokugo`(`tensu`) VALUES('{$tensu}')"; とした方がよいでしょう。 （もちろんサニタイズ処理は別途行う前提で）
> さくらのレンタルサーバでMySQLの文字コードを UTF-8に変えるには、どうしたらいいのでしょうか？ さくらに限らず文字コードは手動でも変更可能ですので、クエリ実行前に mysql_set_charset('utf8'); // (PHP 5.3.2+) // この関数は、SET NAMES と等価ではないため、古いバージョンでは以下のようにする必要があります。 // PHP 5.3.2 以前の場合 mysql_unbufferd_query('SET NAMES utf8;'); mysql_unbufferd_query('SET character_set_connection = latin1;'); // 又は mysql_unbufferd_query('SET NAMES utf8'); function mb_mysql_real_escape_string($str, $charset=null) { is_null($charset) == false && mb_regex_encoding($charset); return mb_ereg_replace('[\\x00\\n\\r\\\\\'"\\x1A]', '\\\\0', $str); } など。 プリペアドの件は、結局 PHP を介さないといけないので、忘れてください。 PDO を利用した場合でも事情は同じです。
UNIQUE制約はあくまで一意性を確保するための目的であって、手段としてUNIQUE INDEXと同じ方法で一意性のチェックを実現しているのです。 UNIQUE制約の裏にUNIQUE INDEXが潜んでいるだけです。 UNIQUE制約はUNIQUE INDEXのように作成したり、削除したり、再作成したりが自由にできない。
こんにちは。 一つ気になっている点は、Createする時に、ONCOMPLETION PRESERVEを付けてないという点ですが・・・。 関係ないのかな？ 私は基本、付けるので・・・。 まさか、 show variables like '%event%';　→　event_scheduler OFF とか？ いや、まさか・・・ね。
どこで文字数との認識になったのか分からないけど、マニュアルを読めばすぐに分かるでしょう http://dev.mysql.com/doc/refman/5.1/ja/char.html ちなみに、UTF-8 の場合日本語の大半は３バイト
なんか話がかみあっていないような・・・ phpMyAdminでのテーブルへのcsvデータの読み込みの仕方は (1)データベースを選ぶ (2)テーブルを選ぶ (3)インポートを選ぶ (4)インポートするファイルを参照して選ぶ (5)インポートするファイルの形式を選ぶ ここでcsv形式指定します。 (1)でデータベースを選んだ状態でもインポートはできますが その場合はSQL形式でしかよめません。 （テーブルの指定をしていないので生データをとりこめない） おそらくそこまでいきついていないと思います。 たぶんcsvファイルをSQL構文に単純に流し込んでいるエラー。 phpMyAdminの機能を理解したうえでチャレンジしてみてください。
若干誤解があると思うので http://dev.mysql.com/doc/refman/5.1/ja/csv-stora … 別にみるのを前提とするならデータベースエンジンにそれ用のものを使えば見られます。 見えることより、検索性、高速性、堅牢性などを重視するため最適化されたデータの 持ち方をすると人が読めないものになるということです。
select a, b, c, '1' event_type from sample where type = '1' union all select a, b, c, '2' event_type from sample where type = '2' union all select a, b, c, '3' event_type from sample where type = '3'
SELECT s.user_id AS id ,username ,a.ip ,a.`date` ,access ,sales FROM ( SELECT user_id ,ip ,COUNT(ip) AS access ,DATE(created_at) AS `date` FROM access_log WHERE YEAR(created_at)=2010 AND MONTH(created_at)=11 GROUP BY user_id, `date`, ip ) AS a LEFT JOIN ( SELECT user_id ,SUM(amount) AS sales ,DATE(created_at) AS `date` FROM sales WHERE YEAR(created_at)=2010 AND MONTH(created_at)=11 GROUP BY user_id, `date` ) AS s ON a.user_id=s.user_id AND a.`date`=s.`date` JOIN user AS u ON a.user_id=u.id view 作ってしまいたい気分だ。 何か引っかかるけどまぁいい。アクセスとセールスっておそらく一連の流れだから、まとめてしまってもいんじゃない。
ちょっと間違えてましたね、ごめんなさい。 select id,name,dateA from input_date where (name,dateA) IN <----- =ではなくINです。 ( select name,max(dateA) as dateA from input_date group by name ) 外側でdateで並び替えって、dateだけで並び替えると、 4,userB,10/28 1,userA,10/29 5,userC,10/2 か 5,userC,10/2 4,userB,10/28 1,userA,10/29 になりますよ
select date(created_at) as d,count(distinct ip) from access_log WHERE (user_id = 'admin' AND created_at > '2010-11-01 00:00:00' AND created_at < '2010-11-29 23:59:59') group by d
＞そんな印象があるのですが、UNIONを使う場合は、カラム名が同一でないと駄目なのでしょうか？ テーブルのカラム名は何でもいいです。 エイリアス（別名）でカラム名を同じにすればよい事なので。 また、属性も同じである必要があります。 ところで、今、手元に MySQL がないので確認できないのですが、以下の書き方で MySQL はエラーにならないんでしたっけ？ ＞SELECT　name,　address　FROM　member ＞UNION ＞SELECT　c_name,　c_address　FROM　class 普通はこのようにエイリアスでカラム名を合わせて書くのではないかと。。 ↓ SELECT name, address FROM member UNION SELECT c_name name, c_address as name FROM class ＞上記にあるように、テーブル名classのORDER　BY　c_no　descが利くようにするには どのようにすべきなのでしょうか？ インライビュー同士のUNIONではなく、UNIONのインラインビューでないとソートは効かないと思います。 （MySQLに限らず、ORACLEでもPostgreSQLでもMSSQLでも同様） これでどうでしょうか？ ↓ SELECT v.no, v.name, v.address FROM ( SELECT no, name, address FROM member UNION SELECT c_no no, c_name name, c_address address FROM class ) v ORDER BY v.no desc
select distinct employee from w_table a where not exists select * from w_table b where a.employee=b.employee and tel not regexp '30..');
「なぜ」という正確な理由については、MySQLコミュニティあたりで、作った人に聞かないと解らないと思いますけど。 MySQLでは、文字列内の文字位置に関して、統一的に１番開始としてるようです。 http://dev.mysql.com/doc/refman/4.1/ja/string-fu … 以下は、私の推測ですけど LOCATE(substr,str) などの文字位置を返す関数で、見つからなかったら０なので、位置番号が０開始では具合が悪い また、0 は真偽判定で、false に判定されちゃうので、見つかったのに、０番として返ると、条件判定上具合が悪からじゃないかな？いちいち+1して判定してといっても、ユーザーとしては使いにくいし、そんなこと忘れるし。 ０番開始のプログラム言語では、見つからなかったら負数を返すことが多いけど、真偽判定では、逆にtrueになるのでMySQLのwhere句で使うなら、見つからなかったら負数じゃなく０を返して欲しい。
細かな話は、参考URLを見ていただくとして、 まず、ODBCと、OLEDBの違いは、インターフェースが違うとところだけです。 歴史的な流れで。 ODBC→OLEDBと進化をしてきたのですが、ODBCがより具体的な指定が必要なのに大して、OLEDBは より設定が抽象化されているといった解釈でいいのかな？。。と思っております。 もっと簡単にいうと、1のほうが変化に柔軟で 2と3は、変化するごとに、アプリケーションの改修を余儀なくされるといった解釈良いのかな？ OLEDBは、たとえばデータソースが、CSVから、データベースに変わったとしても最小限のアプリケーション改修で済む可能性が高いのですが、ODBCはそうもいかず、根本からアプリケーションを改修する 必要がでる可能性があります。 っていうほど、OLEDBもそんなにうまくはできていないと思いますけどね。。 参考URL：http://www.progress-japan.co.jp/datadirect/techn …
show grants ユーザ名@localhost\G もしくは select * from db where User='ユーザ名'\G かな。 GRANT　ではDBを指定できるのに User テーブルにはそんなことは表現されていないですよね。 ってことは、違うとこで表現されているはずなのです。
自分でやったわけではありませんが、DBの更新系は１台で良いサーバで扱い、参照系にレプリケーションして、APサーバ側で振り分けるようにすることで、参照系をスケールアウトさせることは聞きます。 書籍としては、24時間365日サーバ/インフラを支える技術(技術評論社)を参考にしてますが、WEB+DB Pressの記事でも何度か見かける話題です。 Googleのインフラも同社からGoogleを支える技術 という書籍が出てますが、この規模になると、スケールアウトは現実的ではないので、データセンター単位でのスケールアウト、最も近場のデータセンターにアクセスさせるなんて話なので、質問のレベルが違うと思います。
＞date型の比較 datetime型ですね これは、日付だけの比較でよいのですか？ それとも時間まで比較するのでしょうか？ 単純に時間の比較までやると WHERE UPDATE_DATE + INTERVAL 14 DAY < NOW() 日付だけみるとなると WHERE DATE(UPDATE_DATE + INTERVAL 14 DAY) < CURDATE() みたいな表現になるでしょう。 なお、等号、不等号、DATE()によるキャストは仕様によってかわってきます
SELECT `no1` FROM `w_tbl` GROUP BY `no1` HAVING (Count(`no1`))=1
旬ではなく句です。読みは「く」です。 どこから「旬」を引っ張ってきたのですか？
short answerはft_min_word_lenを変更（デフォルトは3文字）することですね。long answerは語り尽くせないのでマニュアルを読みましょう。
私も気になって調べてみました。 単純な語句で検索するだけではなかなかヒットしませんね。。 こういう場所で知識を共有していきたいところです。 実際に実行して試したわけではないので、動作の保障はしかねますが、 下記のような記述でロールバックを実現できるとの記載を見つけました。 CREATE PROCEDURE proc(....., ...) BEGIN 　　　　DECLARE EXIT HANDLER FOR SQLEXCEPTION 　　　　BEGIN 　　　　　ROLLBACK; 　　　　END; 　　　　START TRANSACTION; 　　　　　： 　　　　　： 　　　　　： 　　　　COMMIT; END; http://ameblo.jp/hotbrain/entry-10477377702.html http://dev.mysql.com/doc/refman/5.1/ja/declare-h … DECLARE ... BEGIN ... END が catch, START TRANSACTION ... COMMIT が try みたいなイメージでしょうか、よくわかりませんが。 DECLAREの後とFORの後のキーワードには幾つか選択肢があるようなので、 ご自信の実現したい処理に応じて使い分けてみてください。 それから、机上の空論をひとつ。 上記のような記述をした場合でも、ストレージエンジンの差異による トランザクション処理実行の可否はあると思っています。 トランザクション処理が可能なのはinnoDBのみ、MyISAMでは不可能です。 http://d.hatena.ne.jp/akio0911/20080327/1206586425 > 質問者様 既知でしたらすみません。 > 質問者様、閲覧者様 ここまでの内容に誤りがありましたら、ご指摘ください。 よろしくお願いします。
＞バラバラのインデックスを作るのと、ひとつのインデックスにまとめるのでは、どう違うのでしょう？ まったく違いますね。 たとえばフィールドAとフィールドBをつかったユニークをイメージしてみてください ばらばらにユニークを張れば、フィールドA、フィールドBそれぞれがユニークなデータで 構成されますが、複数選択されたユニークだと (1,1),(1,2),(2,2)のような組合せは、フィールドA単体でみれば1はユニークではなく、 フィールドBは2がユニークでないですが、組合せとしてユニークなので有効になります インデックスについても考え方はちかく、フィールドAをグループのキーとして フィールドBのsumを取ったりするときにはフィールドAとフィールドBを併せた インデックスにしないと高速な検索がされません。 ＞普通はどうするものでしょうか？ 必要に応じて処理をかえます。 インデックスの基本がわかっていないようですので、初歩的な書籍を読むなりして 学習しておくことをお勧めします
webデザイナーです。デザイナーになると仮定して回答しますね。 パソコン＆ソフト（フォトショップ、イラレ、ドリ、やりたければflash）買ってください。 そして自分のサイトを作りましょう。 作り方がわからなければネットで調べる。本を買ってもいいし、でも大抵はネットでわかるでしょう。 作品がなければとりあえず自分のブログを立ち上げましょう。自分がデザインや、プログラムで有益と思った情報を蓄積するブログはどうでしょうか。デザインも自分でやる。 いいデザインを集めたサイトがたくさんあるから、そういうもののどこがいいのか、キャプチャを撮って拡大縮小してよく見ること。 webデザイン以外のいいデザインのものも、たくさん見ましょう。 自分でサイトを作ったら、自分のまわりの人のサイトも作ってみましょう。何か店をやってる人とか、ECサイトを運営したい人とか、自営業の人が会社のサイトを作りたいとか、探せばいるでしょう。 以上のことができたら、それをポートフォリオとして、制作会社に面接にいってみてください。多分採用されます。 web制作、デザインについて、本当になにもわからなければスクールに通いましょう。でも、学校よりもつまるところやる気と思います。 学校にあるのは「環境」ですので。
抜けがあった SELECT `a`.`UID`, `a`.`name`, MAX(CASE `b`.`key` WHEN 'telno' THEN `b`.`value` ELSE '' END) AS 'telno', MAX(CASE `b`.`key` WHEN 'faxno' THEN `b`.`value` ELSE '' END) AS 'faxno', MAX(CASE `b`.`key` WHEN 'nickname' THEN `b`.`value` ELSE '' END) AS 'nickname' FROM `tableA` AS `a` LEFT JOIN `tableB` AS `b` ON `a`.`UID`=`b`.`UID` GROUP BY `UID`
すなおに SET TB2.point = TB2.point - TB1.remainder_point の処理をしたあとに SET TB1.remainder_point = 0 のSQLを再度発行すればいいでしょう。 そんな手間を惜しむほどのものでもないし。
単にHTMLのヘッダで、 <meta http-equiv="content-type" content="text/html;charset=utf-8" /> （ブラウザに「この文書はUTF8ですよ」と教える一文です。） と記述するのではダメなのでしょうか？ サーバ側が全てutf-8なら、余計なオーバヘッドも発生しないので、この方法が良いと思います。
結論出てるようですが、あったら便利だと思いました。 プログラムの中でしかSQL書かない人の戯言はほっておいても良さそうですね。
> date(now)等を使ってもうまく行きません。 nowは引用符で囲みます。=> date('now') まずはこれで日付がきちんと取得できることを確認してください。取得できるようであればこれを条件にレコードを抽出します。以下が実行例です。 　sqlite> select * from tb1; 　id|name|hizuke 　1|foo|2010-10-24 　2|bar|2010-10-25 　3|hoge|2010-10-25 　4|piyo|2010-10-26 　sqlite> select date('now'); 　date('now') 　2010-10-25 　sqlite> select * from tb1 where hizuke=date('now'); 　id|name|hizuke 　2|bar|2010-10-25 　3|hoge|2010-10-25 日付の書式が違っていると抽出できないのでstrftimeで書式を変更します。 sqlite> select * from tb2; id|name|hizuke 1|foo|2010/10/24 2|bar|2010/10/25 3|hoge|2010/10/25 4|piyo|2010/10/26 sqlite> select date('now'); date('now') 2010-10-25 sqlite> select strftime('%Y/%m/%d',date('now')); strftime('%Y/%m/%d',date('now')) 2010/10/25 sqlite> select * from tb2 where hizuke=strftime('%Y/%m/%d',date('now')); id|name|hizuke 2|bar|2010/10/25 3|hoge|2010/10/25 参考URLは「SQLite関数の使い方」。日付/時刻関数のところを読めば分かると思う。 参考URL：http://www.dbonline.jp/sqlite/function/
ほぼdelete文を使ったことないですが、感覚的な回答になりますが。。。 あと、[table]になんらかの行を特定するキー（主キー：sid）がある前提で、書いてみます。 delete from [table] where sid not in (select sid from [table] order by time desc limit 5); で、いけるようないけないような。
いあ、それ以前に、外部から来たものを SQL に直に突っ込むなよ。 構文エラーの原因はそれだけ。 バイナリだろうが、文字列だろうが本質に変わりはない、扱う側の問題だ。 余談。 サイズが多分でかいから、アップが成功するとは限らない、とか、アップしてくるのは、良心的なやつらばかりじゃないとか色々。
まだ、接続できない状態でしょうか？ ＞なぜ教えて頂いたような形になれば、パスワード間違いと判断できるようになるのですか？ と言ったつもりはありません。 usersの情報を確認することで、 ・バージョンが4.1未満でないこと ・hostとuserが一致していること が確認できます。 私の経験だとうまくいかなかった場合、それらを確認・対処したことですべて問題解決しました。 よって、あなたの状況と違うようなので、これ以上アドバイスできることは私にはないということです。 やはり、接続などの環境まわりの質問に答えるのは難しいですね・・・
5.1.41 だとrenameは使えないようですね。 新しい名前でデータベースを作成 >> テーブル・データをコピー >> 前のデータベースを削除 という流れになります。 phpMyAdminは入っていませんか? データベースの[操作]で簡単にできますよ。
OSのファイルシステムの所有者や権限と、MySQLのアカウントや権限の話がごちゃ混ぜになっているような。。。 JAVAでMySQLに接続する時、どういう指定になっているのでしょうか？ JAVAを使用せず、手作業で接続する時、どういう指定になっているのでしょう？
cseって、もうサポートも終わってて、動作保証もされていないと思いますが。。。 ODBC接続しているのですよね？ ODBCはどのバージョンのものを使っているのでしょうかね？設定で、set namesを投げるようにしてますか？ 接続後、 show variables like '%char%' で、有効になっている文字コードをまず確認してください。 また、 show create table 表名 で、意図した表定義になっているか、特に文字コードを確認してください。 >Oracleではvarchar(X)でXバイトだが、MySQLだとX文字という記述を見つけ varchar(x) の x は、MySQL 4.1より前では「バイト数」でした。MySQL 4.1からは「文字数」です。 この辺は、MySQLユーザ会のFAQが参考になるでしょう。 http://www.mysql.gr.jp/ ちなみに、cseでは 「古いバージョンの日本語サーバー対応版 libmysql.dll を使ってMySQLに接続できるようにしていた」 ものが、MySQL 5.0でのユーザ認証方法（パスワードの形式変更？）があり、ODBC接続するしかなくなった ような記憶があります。ともかく、もうサポートされておらず、MySQL 5.0での動作保証はされていません。
すでに回答いただいてるよう、explainで見てみるのが確実ですが、 実経験上も、問題なくインデックスが効いていました。 Zend+MySQLで。 バージョン（Zend、MySQL)によって異なる可能性はあります
phpMyAdmin はあくまでもMySQLを管理しやすくするためのアプリです。 したがってphpMyAdminの使用法というよりも、SQLを知らなくては使えないでしょう。 本などで一通りSQLを理解すれば、phpMyAdminの方は難なく使用できるはずです。 >来週の金曜までにPHPでアルバムシステムを作成～ ゼロからですか? 1週間ちょっとでははっきり言って無謀かと。 正規化(データベースのテーブルの切り方)など独特のコツのようなものもあり、これで失敗してしまうと、後々応用・拡張ができなくなったりします。ほかSQL独自のセキュリティ回りの知識も必要です。 納期が納期ですから、ここは配布スクリプトを使用するしかないと思いますよ。 PHP + MySQLを使用したアルバムシステムは結構配布されているようです。 http://blog.planting-field.com/archives/eid652.h … 祈。
まず、一般的なSQLとして、間違った使い方をしています。 group by指定時、select句に指定できるのは、 (1)group byで指定した列 (2)count、max、minなどの集約（集計、集合とも呼ばれる）関数 (3)定数 だけです。 group byで1個以上の行を集約して1行で返す訳ですから、group byで指定した列以外を、列では得られません。 MySQLではこの部分に拡張仕様があり、group byで指定していない列も、「group byで結果として一意になるなら指定してよい。一意にならないなら、結果を保証しない」となっています。この拡張仕様は、インストール時の標準設定になっていて、初心者には誤りを起こしやすくなっています。 >scoreが最初に登録されたものに集約されてからグループ化されてソートしてしまう MySQLは、そんなことは保証していませんよ？ サブクエリを使った方法になります。 SELECT no, id, score FROM tbl WHERE (id,score) IN(SELECT id,MAX(score) FROM tbl) ORDER BY score DESC SELECT x.no, x.id, x.score FROM tbl AS x,(SELECT id,MAX(score) AS MaxScore FROM tbl) AS y WHERE x.id=y.id AND x.score=y.MaxScore ORDER BY x.score DESC
お察しのとおり、LOAD DATAコマンドではcharacter_set_databaseが使用されます。なので、 mysql> SET @@character_set_database = cp932; mysql> LOAD DATA... という風にコマンドを実行すれば、MS932の文字コードをLOAD DATAで取り込むことが出来ます。@@character_set_databaseはcp932ではなくbinaryでもOKです。 mysqlimportコマンドを使うと、文字コードを適宜変更してくれるので便利ですよ！
このあたりを参考にしてください。 http://ja.forums.wordpress.org/topic/3246 > ・ダウンロードしたjquery-1.3.2.jsをhtdcos/wordpress/wp-admin/js/の下に置いた。 > ・プラグインのHeader and footerを利用して、ヘッダーに以下のコードを書き込んだ。 >　　<script type="text/javascript" src="wp-admin/js/jquery.js"></script> このあたり。 そもそもwordpressってjQueryが入ってた気もします。（気のせいかもですが） MySQLは関係ありません。 jQueryはJavaScriptであって、SQLではないので、MySQLにインポートする、とかそういう 使い方ではないです。
相変わらず質問の意味がわからない。 もう少し、どういう元データからどういう結果を得たいのか明確にした方がいいです 前回の補足から推測するに・・・ たんにuser_id,days,typeの組合せの数でカウントしその多い順(つまりnum?)で ソートすればいいということであればorder by の先頭にnumのDESCを つけるだけじゃないですか？ SELECT user_id,days,type,count(*) as num FROM uriage GROUP BY user_id,days,type ORDER BY num DESC ,user_id ASC,days ASC,type ASC
＞if($res==0)として判定にひっかっかってくれないのかが不明 っていうか、$resについて質問のなかでなにか定義されてないんですが・・・ たぶん、単に成功時にリソースの戻り値を返しているのであって updateされたかどうかなんて見ていないんじゃないですかね？ 失敗したのではなく0件のアップデートが成功したという考え方です 逆に$res==0の判定できるというのは何かにかいてありましたか？
パターン・マッチング時にもう一回取り除かれるので、これを試してください。 select * from testtbl where test like '%\\\\P%'
まず条件が必要。 (1)idがint not nullでprimaryもしくはuniqueでauto_incrementであること (2)tag,entryの組合せがuniqueであること insertでデータを流し込み、条件に合致しないデータをdeleteすると効率的です。 insert ignore into tag_table (tag,entry) values('foo',1),('bar',1); delete from tag_table where entry=1 and not(tag IN ('foo','bar')); やっていることは全部消して、新規で投入するのとさほど変わりませんが 上記のようにやると登録済みのデータに対して最小限の更新にとどめられる分 無駄が減ります。（idに余計な付番がなくなります）
pa.options_id = '1' と pa.options_id = '2' OR pa.options_id = '4' は条件が競合していますね。 単純にいえば AND ( pa.options_id = '1' OR pa.options_id = '2' OR pa.options_id = '4' ) で十分だと思います。ということは pa.options_id IN ('1','2','4') でよい？
まぁ普通にやれば 日付データから年を取るならYEAR() それをユニークに処理するならDISTINCT SELECT DISTINCT YEAR(UPDATE_DATE) AS YEAR FROM LOGS
select a.ID ,a.概要 ,max(case when b.内容 = '開始日' then b.値 else null end) 開始日 ,max(case when b.内容 = '終了日' then b.値 else null end) 終了日 from a inner join b on(a.ID = b.ID) group by a.ID,a.概要 とかでもいいかもしれません。
なるほど。 もしかして匿名ユーザ消してますか？ その場合は、 　getConnection() じゃなくて 　getConnection("ユーザ名","パスワード") にしないとDBに接続できないんじゃなかったかと。 すみません、うろ覚えです。
はじめまして～ 想定されているのは、条件に合致するレコードのみを 更新したいということでよろしいですか？ 書き込みされている情報から XXX列の情報が　YYY である場合に、更新処理をおこなうことを想定されていると思いますが 書かれているSQL文の検索条件を記述する順番が間違っているようです 誤 update TABLE set HOGE WHERE XXX = "YYY" = replace(HOGE,'文章','ブンショウ') update TABLE set HOGE WHERE XXX = "YYY" AND replace(HOGE,'文章','ブンショウ') 正 update TABLE set HOGE = replace(HOGE,'文章','ブンショウ') WHERE XXX = "YYY" です 検索条件は、指定列に指定値を設定した後に加えます お試しください
とりあえず定番の set names sjis あたりから試してみてください。もちろんDBへの登録型がsjisになっていて コンソール（もしくはその他の表示画面）の言語設定がsjisになっている前提です。 詳しくはこのサイトの検索欄に「set names」といれて探せばたくさん引っかかります なお、DBの運用をSJISでやると早晩インジェクションで破たんするのでお勧めはできません。
Rankを付けたり、limitで制御しても実現できそうですが、 ＞上記の事を1度で実現するSQLが存在する 結局ページごとにSQLを発行するなら、１度で実現することにならないと思うのです。
#1さんの回答で問題ありませんが、プログラムと絡めてやる場合はちょっとした工夫があります (1)WHEREは常に全表示する WHERE 1 (2)すべての条件はANDでつなぐ WHERE 1 AND 列名1 LIKE '条件1' AND 列名2 LIKE '条件2' (3)ORはANDに負けるのでかならず括弧をつかい、0とのorをとる WHERE 1 AND 列名1 LIKE '条件1' AND 列名2 LIKE '条件2' AND (0 OR 列名3 LIKE '条件3' OR 列名4 LIKE '条件4' ) 時と場合によりますが、これでプログラム側のフローがかなり解りやすくなります
PostgreSQLを使えばいいのでは？ 「PostgreSQLを前提とした記事」を参考にしながらPostgreSQLを使って、環境の違いなどでなかなか思うようにできないという人もすくなくありません。 「MySQLを前提とした記事」を参考にしながらMySQLを使って、環境の違いなどでなかなか思うようにできないという人もすくなくありません。 提示されたPostgreSQLの定義について、どこまで同等にする必要があるのか分かりませんが、MySQLで定義できるように変えることはできます。 しかし、その後のデータの挿入、検索、さらにはアプリも動かしたいのでしょうから、次々と問題が生じるであろうことは、質問の仕方から容易に想像できます。 さらに、自分で調べたり試行錯誤しているといったことが、質問や補足を見てまったく伺えません。 そういった丸投げを繰り返すと、アドバイスしてくれる人がいなくなるかも知れません。 MySQLのマニュアル http://dev.mysql.com/doc/refman/5.1/ja/index.html 取りあえずMySQLで表定義するには、以下を変更してください。 contact_id serial NOT NULL, ↓ contact_id INT PRIMARY KEY AUTO_INCREMENT, create_date timestamp without time zone, ↓ create_date DATETIME, PRIMARY KEYとしたことで、一意性は保証されるという点ではALTER TABLEでの制約追加は必要ありません。ただし、参照しているテキストに制約の追加や削除の記載があり、それに従って操作したいなら、ALTER TABLEを実行するのもいいでしょう。
参照URLをどうぞ。 参考URL：http://buffalo.jp/download/manual/html/lswxl/k_w …
このクエリだと、EXPLAINでtype=index、Extra=Using indexの状態であれば、それ以上高速化できないように思います。手元のマシンで試してみましたが、26万件程度のデータで0.23秒でした。7秒もかかるということは、他に原因があるのかも知れません。（ディスクI/Oが発生しているのかも知れませんので、バッファの調整をおすすめします。）
そちらの環境で通るか分かりませんが、select句の中でselectが使えるのであれば 以下のSQLで取得出来ると思います。 selectID ,SUM(得点) ,( selectcount(B.*) fromスコアasB whereA.ID= B.ID andB.得点 >=10 andB.得点 <30 ) fromスコアasA group by ID select句ではなくfrom句で一時表が使えるのであれば以下のSQLで取得出来ると思います。 selectA.ID ,A.得点 ,count(B.ID) from(selectIDasID ,SUM(得点)as得点 fromスコア group by ID)as A left outer join スコアasB onA.ID = B.ID andB.得点 >=10 andB.得点 <30 group by A.ID, A.得点 一時表を使わない方式 (※IDと得点で一意となる事が前提になります) selectA.IDasID ,SUM(A.得点)as得点 ,COUNT(B.ID) fromスコアasA left outer join スコアasB onA.ID || A.得点 = B.ID || B.得点 andB.得点 >=10 andB.得点 <30 group by A.ID
文字化けしないphpmayadminのcharacter_setは、utf8ですよね？（たぶん） 新しいバージョンのphpmysqladminだと何をどうやってもクライアント側がutf8で統一されてしまう感じです。 （私の環境は、2.8.1と3.3.7の２通り） まあ、文字化けしなくて良いんですけど、ちょっと腹立たしいです。 同じように苦しんだ人の記録 ttp://www.pwblog.com/user/pc/settei/121132.html
非アスキー文字にヒットさせるというのではまずいですか？ フィールド REGEXP '[^ -~]' ただし正規表現はスピードはあまり期待できませんが
SQLに登録する際にhtmlspecialcharsしているんじゃないですかねぇ？ そのフローをやめればいいような気がしますが、 PHP5以降であればhtmlspecialchars_decodeなどでサクッといけそうです。 もちろんstr_replaceでも簡単に対応できそうですが
あ・・・前回のはぱっと思い付きだったのでかなりダメダメですね （一部文法を間違えたSQになっていました） ちょっと精査しましたが、フローはだいたい同じですがこんな感じで select ( select count(*) +1 from ( select id,count(*) as countb from testテーブル where flg=1 group by id ) AS t2 where countb > sum(t1.flg=1) ) as rank ,t1.id,sum(t1.flg=1) as counta from testテーブル AS t1 group by id order by rank asc,id asc
ないですね。 quit cls 矢印の↑を２回で、前回ログインしたときのコマンドが出る この一連作業が、代用でしょうかね。
確認は、 show variables like "char%"; 設定は、 set NAMES "sjis"; で、 character_set_client character_set_connection character_set_results character_set_system が変わると思いますが、どうでしょうか？ 結果は、確認していませんが。。。
select max(日付) as 日付 ,食べたもの from 管理テーブル group by 食べたもの
phpMyAdminというのがあります。 自分もレンタルサーバのMySQLを操作するときは、これでやってます。 インストールも、設定ファイルなどをローカルで編集してFTPするだけなのでお勧めです。
>PHP 4.4.8 mysqli_connectはPHP5以上の環境が必要みたいですが？ 参考URL：http://www.php.net/manual/ja/function.mysqli-con …
私の思いつく確認点は、３点。 １．mysqldサービス起動時、--defaults-fileで指定したmy.iniが、編集したmy.iniと同一か？ ２．my.ini datadirのパス変更の編集時、バックスラッシュではなくスラッシュ を使用しているか？ ３．データ移行手順の確認。サービスは止めたようですが、新フォルダへ旧データをコピーした様子が質問文では書かれていませんでした。 旧データを捨てるとかであれば、問題ないかもですが。
まず徹夜は毒です。止めましょう。エラー404をインターネットで検索して見て下さい　大体感じがつかめるはずです。新しいホスティング会社が普通ならサポートしてくれます。現象のメモを取り　ホスティング会社に相談を
私も以前はまりましたが、php プログラムソースからみた相対パスのファイルを読み込む時は、local指定が必要です LOAD DATA local INFILE 'filename' /* 以降省略 */ あと、phpからのSQLエラーチェックは、mysql_error() で取得する必要があります。
rootのパスワードを直接入力したら、どうなりますでしょうか？ #mysql -u root -pパスワード （ご存じとは思いますが、-pとパスワードの間にはスペースを入れません。） しかし、エラーを吐かないようなので気になります。
エクスプローラーのフォルダオプションで、「拡張子を表示する」「全てのファイルを表示する」にチェックして、それを全てのフォルダに適用してください。
＞なぜaの方式を採っている 可能性として３つ (1)データが簡潔である (2)データの前後関係が明示できる (3)工夫次第でスピードを早めることができる つまりSQLとして集計、抽出を考えなければ実は冗長なAでもやりようがあるということです。 一方Bのメリットは (1)抽出が効率的 (2)集計が効率的 (3)データ管理が簡便 といったところです。正規化は必ずしも高速化に直結はしませんが、往々にして 検索性が高い方が高速化しやすいです。
普通にコマンドプロンプトから、他のサーバ（ＰＣ）への接続は可能です。 使用許可するデータベースをtestdb、アカウントをtestuser、パスワードをpass、接続されるサーバ（ＰＣ）のホスト名をhost1、接続するＰＣのホスト名をhost2 １．接続されるサーバ（ＰＣ)で、以下コマンド発行。 grant all on test.* to testuser@host2 identified by 'pass'; （ホスト名はＩＰアドレス可） ２．接続したいＰＣから、以下コマンド発行。 mysql -utestuser -ppass -hhost1
> 1.平文のまま流れてるというのは本当なんでしょうか？ いいえ！！ パスワードが平文で送られることはありません。ただ、MySQL 4.1においてパスワードのセキュリティが強化されていますので、4.0以前のバージョンを使っている場合にはパスワードの強度がよろしくありません。4.1以降ではSHA1で暗号化されたパスワードがクライアントから送信されます。 当然ですが、標準ではパスワード以外のデータは暗号化されませんので、データが盗聴される危険性があります。それを回避するにはSSL等の暗号化を利用するしかありません。 > 2.もし、平文のままなんだとすると、SSLみたく暗号通信化する方法は > MySQL自体に実装されてるんでしょうか？ あります！！ 手前味噌ですが、設定方法などを書籍で詳しく説明しておりますので、もしよろしければどうぞ。 http://www.amazon.co.jp/exec/obidos/asin/4774142 … > それとも自前でトンネルを掘る必要があるんでしょうか？ トンネルを掘ってもOKですね。SSLの設定が面倒だと感じる人はトンネルを掘って運用されることもあるようです。 参考URL：http://www.amazon.co.jp/exec/obidos/asin/4774142 …
これでいけませんか？ select name,point +(name like '%CCC')*0.8*point as point from hoge order by point desc
参考になればと思い、投稿します。 MySQL ODBCドライバを5.1.6から5.1.7にアップデートしたところ、 既存のMySQLへのデータソースが変更も削除も出来なくなりました。 エラーメッセージは質問者さんと同じものが表示されました。 MySQL ODBCドライバをアンインストールしても、データソースは変更も削除も出来なかったため、 「システムの復元」で復旧させました。 結局、5.1.7へのアップデートは取りやめました。
ApacheとかのWebサービスが落ちたとか？
＞/xampp/mysql/binフォルダのコンソールから以下のコマンドを実行します。 この文について詳しく説明しますと、 画面左下のボタン（XP時代で云うスタートボタン） 　↓ 「プログラムとファイルの検索」テキストボックスに「cmd」入力して、エンター押下 　↓ コマンドプロンプトが起動される 　↓ pathの設定が済んでいれば、次の説明文「mysqladmin -u root password secret」を入力してエンター押下 　↓ pathの設定が済んでいない場合、 （たとえば）d:\xampp\mysql\binにプロンプト上で移動するため、以下の文字をコマンドプロンプトに入力して各々エンター押下 「d:」 「cd d:\xampp\mysql\bin」 　↓ 次の説明文「mysqladmin -u root password secret」を入力してエンター押下 ということを言っていると思います。 ちなみにpathの設定のやり方はこちら ttp://blog.cnu.jp/2009/11/06/windows-7-path/ ・既存の内容を消さないように注意して、末尾に「（たとえば）d:\xampp\mysql\bin」を追加します。 ・追加の仕方は、既存の内容に続いて、「;d:\xampp\mysql\bin」という具合にセミコロン(;)を挟みます。 ・消してしまったら、落ち着いて　キャンセル
その対処のためにある仕組みが、ロックです。 MySQLには、表レベルロックと行レベルロックがあります。 InnoDBだけが、行レベルを行い、他は表ロックレベルです。 行レベルロックで競合すると、待っている側のセッションは、標準で５０秒待ち、その後エラーを吐いて戻ります。 表レベルは、延々と待ちます。 なので、仕組みにあった処理を施しておく必要があります。 おっしゃる通り、アプリ側での対策もできますが、データベース側の仕組みだけでも制御できることがあります。 コンソール作業が可能なら、２セッション分開いて、挙動を確かめてみるのをお勧めします。 とっても分かりやすく書いてあるサイトをご紹介しておきます。 ttp://wiki.bit-hive.com/tomizoo/ ・MySQL テーブルのロック ・MySQL トランザクション 同じような悩みを持つ人 ttp://q.hatena.ne.jp/1209689727 ここまで対策する必要はないと思いますが、参考になります ttp://info.dwango.co.jp/rd/2010/01/mysql.html
Bのoption1とoption2からAのidを抽出するんですよね？ であればこんなかんじ・・・ （無駄な文字結合などいりません） LでRedな場合・・・ select id from A inner join B on A.No=B.No AND option1='L' and option2='Red' Lで値なしの場合・・・ select id from A inner join B on A.No=B.No AND option1='L' and option2 is null Bテーブルを作るときにNULLの処理をきちんと定義していないとはまります
#3です。 >『同じテーブルを、id、担当で結びつけ、 >bにaの日付より大きなものが無い >aのデータを抽出する。』 そうですね。 自分より大きい日付が存在しない = 自分が一番大きい日付 ということです。 #2さんの書かれている、 >order by した上位のものがgroup byで優先されるという保証はありません。 >またgroup byした場合、日付と金額の紐づけも確実ではありません。 ですが、group by というのは標準のSQLでは 集約項目を除いたselect項目を全て記述する必要があります。 MYSQLではそれを拡張し、group by にない項目もselectできるようになっています。 ただし、その項目の値がグループ内で一定でない場合は結果も一定にはなりません。 下記にそのことが書かれています。 http://dev.mysql.com/doc/refman/5.1/ja/group-by- …
提示された内容が正しいなら、 ID.FORM は、「IDというデータベース中のFORM表」という意味になります。 また、 from ID.FORM T1 は、AS句が省略されていますが、T1という別名を付けています。 つまり、 select T1.ID,T1.NM は、IDというデータベース中のFORM表のID列、NM列をselect句で指定していることになります。 MySQLでは同じMySQLサーバの別データベース中の表を、表名をデータベース名で修飾して操作できます。 例えば、 SELECT x.*,y.* FROM db1.t1 AS x INNER JOIN db2.t1 AS y ON x.id=y.id といった書き方になります。 http://dev.mysql.com/doc/refman/5.1/ja/identifie …
ロック待ち関連のパラメータは、 innodb_lock_wait_timeout table_lock_wait_timeout だと思うんですが、DDLでロックされているテーブルのロック待ちに関しては、上記パラメータが関係ないようでした。 私の設定値は、デフォルトの50（両方とも） ※確認方法 show variables like '%timeout%'; ２パターン、やってみました。 セッション１ alter table table1 add primary key(c1); /* 20分間 */ セッション２ start transaction; insert into a values (100000001); /* セッション１終了後、ロック解除 */ rollback; セッション１ alter table table1 drop primary key; /* １０分経過 */ セッション２ lock tables table1 write; /* おそらく、セッション１終了後ロック解除するのでしょう */
文字化けは、３つの局面での確認が必須だと思います。 ・サーバー設定 ・データ入力 ・データ表示 サーバー設定は、show variables like 'char%'で確認できますが、これは提示していただきました。 データ入力時の状況は、insertするSQL文とPHPソースを提示していただきました。 そのPHPファイルがutf8で保存されたものかどうかはわかりませんでした。 utf8以外の場合、変換してあげる必要があります。 データ表示して確認した時の状況は、提示されていませんでした。 正しく格納されていても、たとえば中国語などのエンコードで見れば文字化けしてしまいます。
テキストを読み込んで一気に変更っていうのは無理かもしれませんが、 SQL文を書けば変更可能です。 update table1 set product_key=A where primary_key=001; (001なので文字列型かもしれませんが) phpMyAdminの左側、表名をクリックして、SQLタグをクリック 制限は分かりませんが、何行かまとめて実行できます。 SQL文作成は、Excelなどの表計算ソフトや文字列置換を使えば、テキストにある情報からSQL文への変更も容易だったりします。
phpMyAdminのホームにエンジンというタグがあります。 そこで表示されるInnoDBの表示が暗くなっていると思います。 InnoDB文字をクリックすると、設定詳細が見れます。 参考になりそうなサイトを貼っておきます。 ttp://www.koikikukan.com/archives/2009/10/03-025555.php ttp://blog.still-laughin.com/archives/2010/02/innodb.html
なぜ、xとyに意図しない値が入るかというと、group byされた中で、一番最初の値を拾ってしまうからです。 なので、おっしゃる通り、期待する結果がクエリ1回で得られないということになります。 ここからはお節介です。 ソートして、一時テーブルあるいは一時格納専用に作ったテーブルへインサート。 その結果を提示されたSQLで表現することは可能です。（最後に、一時格納専用テーブルのtruncate） 可能ですが、「たまたま入った」nameを表示することになります。 提示されたSQL で抜いた結果セットから、商品名をidで検索した方が無難だと思います。
運用方法として・・・ メンバー分テーブルがあるということでしょうか？ あまりに冗長な作りにみえますが・・・ memberテーブルを一つだけ用意して、useridフィールドを用意しておけばよいのでは？
>実際にやりたい事はもう少し複雑でIF()など他の関数も多用した大きな式 SQLに向かない操作を、無理矢理、SQLでやらせようとしていませんか？ >その最終的な戻り値を列名として利用したいというものです。 式 AS 別名 で名前を付け、別名で参照できればいいだけの話のようにも読み取れますが？ 名前の有効範囲は、RDBMS、バージョンによって異なるので、MySQL 4.1、MySQL 5.0、MySQL 5.1といったレベルまでは最低限提示するようにしてください。
select * from item where date(ifnull(start_date,'2000-01-01')) <= date('2010-08-30') and date(ifnull(last_date, '2100-12-31')) >= date('2010-08-30');
>レコードの行を一つ上にあげることは可能ですか？ ＃２さんの回答にあるように数字( 任意の文字列でも可能ですが・・・ )をキーにして、そのキーを修正すれば可能ですが、どのフィールドでもソートすることで表示される順番を自由に変更できるので、何か勘違いしているように思えますが？？？
エンジンはテーブルごとに設定するものですので、集計表の最後にでてくる エンジンは気にしなくてもいいはずです。
こんばんは。 珍しい現象ですね・・・。 ブラウザのキャッシュの問題かと思います。 キャッシュをしないように、PHPでheaderを吐いたらどうですかね？
union で２つのテーブルを連結。 t1は、テーブル１、t2はテーブル２です。 select name, date, flg from (select * from t1 union select * from t2) a where flg=1 order by date; (select * from t1 where flg=1) union (select * from t2 where flg=1) order by date; 上記のどちらでもOKですが、 下記は、順番が狂う可能性があるのでダメです。 (select * from t1 where flg=1 order by date) union (select * from t2 where flg=1 order by date);
>varchar(100)のものを varchar(90)にする予定 一発でやるなら以下のような処理でしょうね ALTER TABLE `テーブル` CHANGE `フィールドA` `フィールドA` VARCHAR( 90 ) NOT NULL ただ、既存のものを処理するなら移行トラブルを避けるために、 (1)新たなフィールドをつくる (2)update構文で古いフィールドの値を新しいフィールドにsetする (3)データが間違いないか確認する (4)古いフィールドを削除する という流れにした方がよいとおもいます。 >後ろの10バイトは無条件になくなっても構いません バイトじゃなくて文字数だと思いますが・・・
こんにちは。 えーとですね・・・、 まずエラーの画面ですが、例えば該当ファイル（ここではdbtest.php）をそのままブラウザにドラッグ＆ドロップして表示させると、同じ画面になります。 次にDocumentRootですが、 C:\xampp\apache\conf\httpd.conf を編集していない、かつバーチャルホストを設定していなければ、デフォルトで、 C:\xampp\htdocs になってると思います。 C:\xampp\htdocs\sample\part2 というフォルダを作成した中に「dbtest.php」を置いているので、ブラウザから、 http://localhost/sample/part2/dbtest.php とアクセスすれば、ちゃんと表示されると思うのですが・・・。 これでも表示されない場合は、どっかおかしいので、いろいろと原因究明をしなくちゃなりません。
サブクエリの限界値とのことですが、実質限界はないと考えていいと思います。 プライマリーキーがあれば、intのプライマリーキーであれば、int限界値が限界ですが、それより多くの値を出力できるはずです。 サブクエリは、まずメモリ上でのテンポラリ・テーブル作成を試みます。 tmp_table_size値、あるいはmax_heap_table_sizeを超えると、ファイル上にテンポラリ・テーブルを作成します。 そのサイズは、OSのtmpdirのサイズを超えない限り作成可能です。 しかし、それよりも低い限界値はユーザーの我慢です。 WHERE b_field := ?c で固定値を指定しているにも関わらず、１０万件ということは相当遅いレスポンスなのでは？と思ってしまいます。
こんにちは。 エラーログ見れませんかね？ 多分、ibdataファイルのサイズ違いでエラーになってると思いますが・・・。
こんにちは。 そもそも「hizuke」の型は？？？ SQL見てると「DATE(hizuke)」ってやってるのに、「<= '20100505'」って・・・。 １．「hizuke」が「datetime」 SELECT * FROM user_tbl　WHERE hizuke <= DATE('20100505') AND hizuke > 0 とか・・・。 ２．「hizuke」が「datetime」じゃない SELECT * FROM user_tbl　WHERE DATE(hizuke) <= DATE('20100505') AND hizuke > 0 とか、 SELECT * FROM user_tbl　WHERE hizuke <= '20100505' AND hizuke > 0 とか・・・。
>インデックス名が重複 テーブルごとにインデックスは貼られるので他のテーブルのインデックス名を 気にする必要はありません
こんにちは。 よくわかりませんが、文字コードの問題かと・・・。 ファイルが「GB2312」。 PHPの内部文字コード（internal_encoding）が不明だけど、多分UTF-8？ MySQLがUTF-8。 なので、ファイルを取り込んでからSQLで入れる前にconvert_encodingしないと駄目なのでは？
外部から取り込むときに全角(多バイト)文字を数値に変換するのは、無理のようです。 excelファイルは同じものかコピーで使い回しするなら、別シートを計算用にして、計算用シートの対応するセル範囲に、 =VALUE(SheetName!B1) という計算式（SheetNameはデータ取り込みシート名）を入れておけば、取り込み直すたびに、すぐ再計算しますよ？ さらなる数値計算も、この計算用シートの方の該当セルを指定しておくだけでこちらもすぐ再計算されますし。 再計算に時間が掛かるということであれば、自動再計算ではなく、「ツール」→「オプション」→「計算方法」タブ　で「手動」にチェックし、データ取り込み後に一回「F9(再計算)」を実行させるだけでよいと思います。あ、でも、他の人と共有で使うPCなら、この設定は変えない方がいいかも。。
MySQLのversion よりは、OSでのファイルアクセス制限が出来るかどうかだと思う。 windows（特にhome edition）だと、unix の様な、ファイルごとの権限属性を持ってないので、そのPCにログインできさえすればいくらでもコピー出来ますし、MyISAM table用のデータならコピーして構築し直したMySQLサーバーで読めます。 professional相当以上では、ディレクトリーごとにパスワード制限を付けられたような記載をどこかで読んだ気はするけど、（使ってないのであんまり調べたことありません）コピーできさえすれば、MyISAM table用のデータなら構築し直したMySQLサーバーで読めると思う。 ということで、ハードディスクを捨てるときは、ちゃんと壊してから捨てましょうね。
mysql_resultの返り値は文字列なので 比較が悪い。 文字列と数字を==とかで比べると想定外の動作をすることが多いので、 if(strlen($blog) > 0){ のような形に変えた方がいいですね。 おそらくこのあたりが原因では無いかと思います
以下のファイルが見つからないって言ってますけど。 ./mysql-bin.000005 ./だから相対位置ですね。起動時のカレントディレクトリが違ってませんか？
MySQLのカテゴリにご質問を出されていますが、 MySQLの機能ではおそらく無理と思われます。 WindowsやMacをお使いならばiTunesを使ってみると良いでしょう。
カテゴリはカテゴリテーブルを別途つくってカテゴリ名を管理するのが一般的です そのうえで品目マスタにカテゴリフィールドをつくり、カテゴリのIDを埋め込みます。
INをつかいます <form> <input type="text" name="id[]" value="1"> <input type="text" name="id[]" value="3"> <input type="text" name="id[]" value="5"> <input type="submit" value="go"> </form> <? $array_id=$_REQUEST["id"]; $where_id="AND `id` IN('".implode("','",(array) $array_id)."')"; $sql = "delete test where 1\n"; $sql.=$where_id; print $sql; ?> バリデートとサニタイズは別途おこなってください
SELECT 　COUNT(*) AS カウント 　,メーカー名 　,商品名 FROM テーブルデータ '★実名を入れて下さい GROUP BY 　メーカー名,商品名 ORDER BY 　カウント DESC 　,メーカー名 　,商品名 こんな感じでしょうか？
こんばんは。 効率的かどうかは知らんが・・・、 単純に４が欲しいだけなら、 SELECT MIN(no + 1) AS min_no FROM テーブル a WHERE NOT EXISTS(SELECT no FROM テーブル b WHERE a.no + 1 = b.no)
見る限りtblAとtblBをリレーションする条件が書かれていませんが？
#2、言い忘れ・・・ dateは予約語なので勝手にdatexにフィールド名を変えています
マルチバイトなキャラクターセットのファイルをLOAD DATAで読み込む場合、LOAD DATA文に文字コードを指定しないとうまく読み込まない場合があります。 MySQLの日本語マニュアルには文字コードを指定する部分に関して記載がありませんので、英語版のほうのマニュアルのURLを記載しておきます。 参考URL：http://dev.mysql.com/doc/refman/5.1/en/load-data …
MySQLのバージョンを、少なくともMySQL 4.1　や　MySQL 5.0といったレベルまで提示するようにしてください。 また、#2さんへの返答のように、単に「エラーになる」でなく、具体的にどんなエラーメッセージやコードが出るのか、明記するようにしてください。それが、他の人がアドバイスする上で参考になります。 GREATEST関数は、指定された引数のうち、最大値を返す関数であり、今回の質問の用途に合致するのではないかと思います。 ちなみに、MySQL 3.22.5 より前の MySQLでは、GREATEST関数でなく、MAX関数を書くこともできました。 　
まず怪しいの文字コード。UTF以外だと誤動作する可能性が高いです。 つぎに怪しいのは表記ミス。％まで全角にしているとか凡ミスの可能性はないですか？ なおSQL的に前方後方一致（%なんたら%）というのはパフォーマンスがでないはずですが 遅くてもいいということでよろしいのですか？
DBD::MySQL に mysql_enable_utf8 という属性があります。 これをセットすると、mysql から取り出したデータは自動的に UTF8 フラグ つきになります。 This option is experimental and may change in future versions となっていますが、使えませんか。 参考URL：http://search.cpan.org/~capttofu/DBD-mysql-4.016 …
クエリにトランザクション命令渡してないとかっていうことはありませんか？ mysql_query("begin") mysql_query("rollback") mysql_query("commit") という感じで。
>blob型で定義した列に、バイナリデータとして格納しました。 なんか変な話になっているような・・・ エクセルデータをバイナリで流しこんでそのまま検索するという無謀な試みですか？ エディタでエクセルファイルを開いて、シートの中身を 見られるか確認してみれば、なぜ検索できないかわかるでしょう 文字を拾いたいなら、なんらかのライブラリで、エクセルのデータを 抜くような処理をいれないと難しいかもしれませんね いずれにしろSQLの処理ですからバイナリデータでヒットさせるのは データの持ち方としてはかなり非効率的です。 正規化も含めてSQLを学習なさった方がよろしいかと。
MySQLでは、データベースはdatadir配下のサブディレクトリとして表されます。MySQL側には制限はなく、datadirの下にいくつのディレクトリを作成できるかという、OS側の制限を受けることになります。OSの方では、ひとつのディレクトリの下にサブディレクトリをいくつ作ることが出来るかというのは、ファイルシステムごとに異なります。よって、DBの最大数はファイルシステムによって制限されることになります。ちなみに、Linuxの場合、ext2/ext3の場合は32768個までです。ext4の場合には制限はありません。詳細は「参考URL」を見てください。 参考URL：http://nippondanji.blogspot.com/2009/05/mysql.html
こんにちは。 MySQLのROUNDは（それに限りませんが・・・）、銀行丸めという方法で四捨五入します。 丸め桁（この場合は小数点１桁）が５の場合、結果が偶数に近い方に丸められます。
残念ながら、一般クエリログ（といいます）のサイズの上限を設定することはできません。ディスクを埋め尽くすまでログを記録してしまいます。なので、本番環境ではあまり一般クエリログは使わないようにしましょう。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/query-log …
ビューの基表に、有効活用できるインデクスがあれば、インデクスは活用されます。 >例えば元のテーブルに「hoge_id（index）」があり、 >VIEWテーブルが「vtable」だとします。 >SELECT * FROM vtable WHERE hoge_id = 値 >または、 >SELECT * FROM vtable LEFT JOIN atable ON vatble.hoge_id = atable.id >（atable.idもindex） >などとした場合、hoge_idのindexが有効で高速に結果が返ってくるということでよろしいのでしょうか。 表の母体データ件数が相当に少ない（例えば、数百件など）とか、重複キー値が多量に存在するといった場合は、RDBMSのオプティマイザが、「インデクスを使うより、テーブルスキャン（表のデータを全件サーチ）した方が速い」と判断し、インデクスを利用しない場合もあります。 主キーなどユニークなキーでの「=」条件や範囲条件などで、母体データからある程度絞り込んだ検索をするなら、インデクスの活用で母体データが大量に増えても、一定の性能を出せます。
まず、SQLとしてはご提示のような冗長なテーブルを作ることはありません。 理由は３つ。 1つは拡張性の問題として趣味１～５が絶対に増えないという条件が必要になるからです。 もう1つは、趣味ではないデータは持つ必要がないため、無駄がおおくなるからです。 最後に、構造上検索性が非常にわるいからです。 可能性としては、USER_IDとSYUの組合せを持つテーブルを作るのが妥当ですね。 USER_ID,SYU 00001 SYU4 00002 SYU5 00003 SYU1 00003 SYU2 00003 SYU4 00003 SYU5 00004 SYU1 00004 SYU2 00004 SYU3 00004 SYU4 00004 SYU5 00005 SYU3 00005 SYU4 00005 SYU5 というデータの持ち方をするのがSQL的ですね。 もしどうしてもご提示の方法がよいのであればORDER BYでSUMしたものをDESCして LIMITで上限をとればよいでしょう。（お勧めはしないですけど） SELECT USER_ID,SYU1,SYU2,SYU3,SYU4,SYU5 FROM USER_TBL WHERE SYU1=1 AND SYU2=1 AND SYU3=1 ORDER BY SUM(SYU1+SYU2+SYU3+SYU4+SYU5) DESC LIMIT 3
こんばんわ、ご質問の結果を返すには以下のようなSQLで得られると思います。 SELECT 店名, 番号, 番号 - 141 as 差分 FROM store ORDER BY abs(番号 - 141); absは絶対値を求める関数です。 差分の絶対値（すなわち指定の数値からの距離）を小さい順に並べました。
REPLACE INTO B_TBL(gid,uid) SELECT gid+10,uid FROM A_TBL WHERE flg != 1; こんなん出来ませんでしたっけ？ 一律。でいいんですよね。 MySQLユーザーじゃないのでそっちの仕様で出来ない。だとちっとアレですが。。。 MSのSQL（Postgresでしたっけ）ならできるんですけどねぇ。 こっちだと insert into B_TBL(gid,uid) select gid+10,uid from A_TBL where flg <> 1 とかになるのかな。。。
こんばんは。 バージョンがわからないのですが・・・、 FEDERATED TABLES を使用するしかないです。
データサイズはそれほど大きくないようですし、まずはすべてのクエリでインデックスが有効に利用されているかどうかを確認するといいでしょう。ベタですが、スロークエリログを有効にしてインデックスが使われていないクエリを探すといいでしょう。 http://dev.mysql.com/doc/refman/5.1/ja/slow-quer … ※ --log-queries-not-using-indexesオプションを使いましょう。 遅いクエリが見つかったら一つずつ改善しましょう。地道な作業ですが、EXPLAINとにらめっこしながら頑張ってください。 http://nippondanji.blogspot.com/2009/03/mysqlexp … みたところMyISAMをお使いのようですので、WindowsならLargeSystemCacheを有効にしましょうと言いたいところですが、Vistaでは効かないそうなのであきらめましょう。 http://p2pquake.ddo.jp/diary/20061105.html 性能を求めるならサーバー向けOSにしたほうがいいでしょう。ちなみに、MyISAMにおいてLargeSystemCacheを有効にする根拠ですが、MyISAMはインデックス部分しか自分でバッファリングしないので、データ部分についてはファイルシステムのキャッシュを有効に利用できるようにするべきなのです。WindowsでLargeSystemCacheを有効にすると、ファイルシステムキャッシュに割り当てるメモリが増えるため、性能向上の効果があるのです。
公式にも残っていないものを使い続けること自体、かなりハイリスクですね。 今後の何かトラブルがあった場合ご自身の能力で解決できる見込みはあるのでしょうか？ ざっとみたところchinaunix.netに古いソースがのこっているみたいです。 http://download.chinaunix.net/download/0008000/7 … ここのソースを使っていいかどうかもふくめてご自身で調べながらやってみると いかにご自身が大変なことをなさろうとしているかわかるはずです。 （結局サポート版を使うのが吉） あとは古い書籍を探して、ROMにやかれているものを使うというのも手かもしれません。
A,B,C,COUNTER,MAX_REG_TIME はグループ化項目ではないので、 文法に厳しいエータベースシステムではNGです。 >(Select Count(*) FROM T_A WHERE SOME_ID = A.SOME_ID) >(Select MAX(REGISTER_TIME)FROM T_A WHERE SOME_ID = A.SOME_ID) これの意味が不明です。 SOME_ID毎の件数と最大値を求めているのでしょうが、IDでグループ化したら どうなるのかが不明ですね。つまり、同じIDでSOME_IDが違うデータがあると、 COUNTERもMAX_REG_TIMEも複数の値が発生するのですが、出力は１個に限る ので、最大/最少/平均などの指示を与えなければなりません。 こういった「何をやりたいの？」が分からないクエリですと困るので、 もう一度、仕様の説明を入れてください。
LinuxでHAをするなら、無償のものならLinux-HA（今はPacemakerという名称）を利用することが多いです。ただしこれを自分で構築するのはやはり敷居が高いので、商用のlifekeeperやClusterPROなどが使われることも多いです。 また、現時点ではMySQLのレプリケーションは非同期なので、HA用途として利用するには不完全です。（最後の方の更新を少し失う可能性があります。）最新の開発版であるバージョン5.5にはSemi Synchronousレプリケーションという機能が追加されていて、これを使えばHAとして利用可能ですが、安定版ではないのでその点はご理解いただいたうえでご利用ください。 レプリケーションの応用の仕方については、添付のURLにある資料をごらんください。 参考URL：http://www.slideshare.net/nippondanji/art-of-mys …
ここらへんは、適切なデータ型や適切なキャラクタセットを選択すること以外は、 気にするほどの効果は得られないと思います。 どうしても気になるような場合や、効果を確認したい場合には、 実際にデータを入れてみて確認することをおすすめします。実際にデータを入れるには ご自分の得意なプログラミング言語で挿入してもいいですが、MySQL 5.0以降では ストアドプロシジャが利用できるので、これを使うとプラットフォームに依存せず MySQL本体だけで、どのくらいデータ領域が利用できるか確認できます。例えば 以下のようなテーブルとストアドプロシジャを作成して、 create table tbl1( t1 tinyint(1), t2 tinyint(1), t3 tinyint(1), c4 char(1), i5 int, i6 int, i7 int) engine = myisam; delimiter $ create procedure tbl1_insert(v_max int) begin declare v_id int default 0; repeat set v_id = v_id + 1; insert into tbl1 values(mod(v_id, 128),mod(v_id, 128),mod(v_id, 128),'a', v_id, v_id, v_id); until v_id > v_max end repeat; end; $ delimiter ; create table tbl2( t1 tinyint(1), i2 int, t3 tinyint(1), i4 int, c5 char(1), i6 int, t7 tinyint(1)) engine = myisam; delimiter $ create procedure tbl2_insert(v_max int) begin declare v_id int default 0; repeat set v_id = v_id + 1; insert into tbl2 values(mod(v_id, 128),v_id, mod(v_id, 128),v_id, 'b', v_id, mod(v_id, 128)); until v_id > v_max end repeat; end; $ delimiter ; 以下のように実行すると、それぞれ10万行が挿入できます。 mysql> call tbl2_insert(100000); mysql> call tbl1_insert(100000); その後実際にできたデータファイル(MyISAMの場合、*.MYD)を確認すると 今回の場合は、差異がないことが確認できます。 2010/07/22 09:54 8,712 tbl1.frm 2010/07/22 09:56 1,700,017 tbl1.MYD 2010/07/22 10:05 1,024 tbl1.MYI 2010/07/22 09:54 8,712 tbl2.frm 2010/07/22 09:55 1,700,017 tbl2.MYD 2010/07/22 10:05 1,024 tbl2.MYI
like 検索で % 文字を付加するときは、concat(str1,str2,,) を使います where a.field like concat('%',b.field, '%')
MySQLの中の人です。InnoDBの堅さについて回答したいと思います。 InnoDBはディスク関連のオブジェクトとして、テーブルスペースとログファイルを作成します。この点は一般的なRDBMSと同じですね。トランザクションをコミットしたときにはログファイルへfsync()でされますので、コミット済みであればマシンが転けても再起動後にリカバリ処理によってデータが復活します。（ただし、一部の内蔵SATAディスクではキャッシュメモリが搭載されており、ライトバックモードで使っていると、OSが書き込んだはずのデータが電源が飛んだときなどに消えてしまう危険性があり、注意が必要です。ちゃんとRAID装置などを使っていれば問題ありませんが。） テーブルスペースへの更新には「ダブルライト」という技術を使って堅牢製を高めています。要するに、2度同じ情報を別の領域に書き込むことにより、テーブルスペースが壊れないようになっているのです。（一度目をダブルライトバッファへ、二度目を本番の領域へ書き込みます。リカバリ時にはダブルライトバッファの中身が壊れていればダブルライトバッファを破棄、本番の領域が壊れてればダブルライトバッファで上書き。） 従ってInnoDBでは、ディスク（またはファイルシステム）が壊れない限りはデータが消失しないような作りになっています。（データ破壊が起きるバグが存在する可能性はありますが、最近そのような事例は報告されていません。）つまり、DBMSとして非常に真っ当な作りになっているということです。MySQLに足りないのは堅牢製や性能ではなく、複雑な機能（パッケージや集計関数、監査など）でしょう。単に「リレーショナル」なデータベースとして使うだけであれば、他のRDBMSに引けをとることはありません。（Railsなどのフレームワークを利用する場合はなおさらです。） また、MySQLには標準でレプリケーション機能が備わっており、本番機がクラッシュして使用不能に陥ったとき、スレーブでサービスを再開するという使い方が可能です。バージョン5.1のレプリケーションは非同期ですが、最新の開発版であるバージョン5.5には準同期型（ログシッピングは同期するが、テーブルへの反映は非同期）が実装されており、実質的にレプリケーションをHA用途で使えるようになっています。 さらに安心が欲しければ、MySQLの商用サポートがあります。商用環境で利用される場合には、サポートを購入して頂ければしっかりサポート致しますのでご安心ください。
たぶんやりたいことはこんな感じ SELECT *, CASE '2010-07-07' WHEN `DATE1` THEN IF(`FLAG1`=1,`OPEN1`,NULL) WHEN `DATE2` THEN IF(`FLAG2`=1,`OPEN2`,NULL) WHEN `DATE3` THEN IF(`FLAG3`=1,`OPEN3`,NULL) ELSE NULL END AS test FROM `reserve` HAVING NOT(test is NULL) ORDER BY test ただ、今回のような横並びのデータの持ち方がSQL的ではありませんね。 きちんとしたデータ管理方法にしないと早晩破たんすると思います。
他の方が回答なさっている通り正規化上は無意味ですね。 分ける理由としてもう一つだけ思いついたので回答させて頂きます。 ・１レコードの項目数が多すぎるとき 私の職場では、１キーに対するデータ数が多すぎて１レコードに入りきらないため、 ざっくりとした意味合いでテーブルを分割しています。 何となく違和感を感じますが、現実は理論通りにはいかないものですね（笑
先に回答してくださっている方のおっしゃる通り、MySQLでは完全外部結合 をサポートしていないようです。 蛇足かもしれませんが、完全外部結合はまさしく質問者様がやりたい事そのままの ないようです。文法的には SELECT * FROM test1 FULL OUTER JOIN test2 ON test1.id=test2.id で、ORACLEなどでは質問者様の要望通りの結果が返ってきます。 先に回答して下さっている方の別解として、RIGHT JOINとLEFT JOINをUNIONする というものもご紹介します。 質問者様の載せていた２つのSQLをUNIONするだけです。 SELECT * FROM test1 LEFT JOIN test2 ON test1.id=test2.id UNION SELECT * FROM test1 RIGHT JOIN test2 ON test1.id=test2.id ご参考までに。
アンダースコア脆弱性のことかな http://news.livedoor.com/article/detail/546720/ 概要、_ アンダースコアは、SQLのワイルドカードのため、そのままでは、何か１文字にマッチしてしまうということ（ワイルドカードを使いたい状況もあるので、使えなくはできない） 対策：データベース名にアンダースコアが含まれる場合、バックスラッシュで（Unixシェルによっては2つ）エスケープされるべき。どんなコマンドにおいても常にということ。 http://dev.mysql.com/doc/refman/5.1/ja/mysqlshow …
たとえばこんな感じで・・・ なおa1,a2,a3をつかってインデックスを貼っておくように select a_id,main.a1,main.a2,main.a3,a4,concat(main.a1,main.a2) as ren,max_a3 from a as main inner join (select a1,a2,max(a3) as max_a3 from a group by a1,a2) as sub on sub.a1=main.a1 and sub.a2=main.a2
調べる時間があるなら、サンプルをサクッと作って試してみた方が早いと思います。 結論から言うと、マルチバイト文字をストアドの引数にする事自体は問題ありません。 （当方の環境 5.1 で UTF-8） 後は、 ・クライアントOSが何で ・言語が何で ・ミドルウェアが何で によって、可能かどうか変わってくる可能性があります。 すべてUTF-8と言うのが「サーバーOSもクライアントOSも言語もミドルウェアもすべてUTF-8」と言う意味であれば、まず問題無いんじゃないでしょうかね？ （仕事でMySQLのストアドの引数にマルチバイトは使った事がないので断言はできかねますけど）
検索を早くするにはsonotさんの回答のようにインデックスを作成する方法がよくとられます。「インデックス」といってもSQLのインデックスのことではなく、検索キーワードのインデックスで、早い話が、日本語(+英語&more?)のすべて つまり辞書にある全単語別にあらかじめ結果を出しておくことになります。 検索結果を記した自分のサイト専用の広辞苑をイメージすればよいでしょう。 Namazu が有名で官公庁の書類検索でもよく見かけますが、他にも日本語解析用のモジュールやら辞書やらが必要で、indexの生成にも結構な時間がかかりますので、頻繁に更新されるデータには向いていないかと。 　何より通常のテキストファイルではなくSQLとかませるとすればそれなりの処理が必要でしょう。 簡単な対処方として、まずインデックス(Mysqlの)を外して比較してみてはいかがですか?　どのようなデータ構造かはわかりませんが、インデックスは使用方法をあやまると負担が増えて遅くなるだけです。(ほとんどの場合キーワード検索ではじゃまなだけ) WHERE フィールド LIKE '%キワード%'; 　としていません? また、検索対象フィールドをconcatで相当数連結しているのなら、あらかじめ連結したフィールドを作成し、それに対して検索をかけるなど。 無駄に容量を食いますが早くはなります。 その他、簡単に出来る方法としては、キャッシュを生成しておけば閲覧者も SQLもすこし幸せになれるかもしれません。
varchar(1) NULLとchar(1) NULLは全然ちがいます ためしに以下のSQLを実行していみてください CREATE TABLE vc (v VARCHAR(1) NULL, c CHAR(1) NULL); INSERT INTO vc VALUES (' ', ' '); INSERT INTO vc VALUES ('', ''); INSERT INTO vc VALUES (NULL, NULL); SELECT CONCAT('(', v, ')'), CONCAT('(', c, ')') FROM vc; varcharの場合無駄なスペースが詰められているのがわかると思います。 ちなみにデータがないこととNULLは違うのもわかると思います。
>あまりなじめませんでした であれば、ご自身でいろいろ試してみるしかないですね。 wikipediaに羅列されているので一つ一つあたってみてください http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3% …
＞各組み合わせのインデックスを作成する いえ、各組み合わせは必要ないですよ。 ５個の組み合わせインデックスを作っておけば、そのうちどれとどれを組み合わせても インデックスは有効になります。
　ファイアーウォールで、ＭｙＳＱＬに与えられたポート（デフォルトだと、３３０６）がちゃんと開いていると仮定して。（チェックがまだなら、一番にチェックしてください。） 　ちゃんとリモートで接続できるユーザーも正しく構築されていることも、仮定にしておきます。 　my.ini（インストールディレクトリにあります。）の中に、 　bind-address = 127.0.0.1　という行があったら、それが犯人です。行頭に＃をつけてコメントアウトするか、あっさり削除するかしましょう。 　 　これは、MySQLが、サーバーの数あるＩＰアドレスのどのアドレスを使用するかを指定するパラメータです。これを指定すると、指定されたアドレスから以外の通信をＭｙＳＱＬが無視します。ここに、127.0.0.1が指定されていると、localhost以外の通信を全部無視しますから、そりゃ、外部からは接続できません。 　本当に、サーバーにＩＰアドレスが複数ある（この場合は、サーバにイーサネットカードが２枚以上実装されるのが普通です。）なら、着信を制限するための大切なパラメータですが、サーバーに一つしかアドレスがないなら、この行は不要です。 　もし、積極的に指定したい場合でも、127.0.0.1も残しておいてくださいね。これなくすと、rootが使えなくなり=^・・;=・・・サーバー内にあるアプリからのアクセスに多大な影響が出ます。特に、webアプリは、localhostでＭｙＳＱＬサーバーを指定するものが多いですから。 　この３つをクリアすれば、大概はつながりそうなものですが・・・・・
いまさらだけどちょっと思いついたので・・・ テンポラリテーブルに一度格納してから表示してみては？ CREATE TEMPORARY TABLE TEMP(STR VARCHAR(100),NUM DOUBLE); INSERT INTO TEMP SELECT '100/2',100/2; INSERT INTO TEMP SELECT '101/2',101/2; SELECT * FROM TEMP;
MySQL4.1でパスワードの暗号化方式が変更になったので 「クライアントが4.1.1以降で、サーバーが4.0またはそれ以前」ならば問題なく接続出来るけど、 逆＝ご呈示の状況では、対策が必要のようで、セキュリティ的には、version up を勧めたいところ。 とりあえず、そのversionで行うなら、以下のページをじっくり読んで見て下さい。 http://dev.mysql.com/doc/refman/5.1/ja/password- … キーワードは「--old-passwords オプションでサーバを立ち上げる」このあたり。 4.0以前からアクセスするユーザー名を限定出来るなら、OLD_PASSWORD() 関数というのもあるようです。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/password- …
last_insert_id()　は、接続後初めて実行するときは、０なので、 　→　AUTO_INCREMENT カラムに0 の値を挿入　→　自動採番実行 となります。 ２回目以降は、+1 しないと既に存在する値を入れようとすることになりduplicate error になる。エラー内容もチェックしてくださいね。 マニュアルも読んでね。 http://dev.mysql.com/doc/refman/5.1/ja/create-ta … http://dev.mysql.com/doc/refman/5.1/ja/informati …
物によるんじゃないでしょうか。 可変長領域のカラムにNULLを入れるのであれば容量削減になるかと思いますが、INTやCHARの様にテーブルを作成した時点で最大容量を設定するタイプはNULLを入れようが最大値を入れようがディスクサイズは変わらないような気がします。 未検証です。すみません。 ただ、そのような理由でNULLを多用するのは止めた方が宜しいでしょう。 DBにおいてNULLってヤツはかなりのクセモノで、多用すると検索を掛ける時にかなり面倒くさい手法を取らなければならずシステムを遅くしてしまうと言う罠があります。 特にINDEX項目にNULLを入れるのはオススメできません。 詳しい理由は参考URLの「NULLにまつわる諸問題」を参照の事。 (余力があれば他の項目もじっくり見て見るとDB運用についての考え方がガラッと変わるですよ) 参考URL：http://www.geocities.jp/mickindex/database/idx_d …
名前が「佐藤」、または読みが「さとう」の人を抽出したい ただし、名前が「佐藤」で読みが「さとう」の人は除外したい ということであれば、Where条件を以下のようにしてはどうでしょうか。 where (name = '$namekey' or yomi = '$yomikey') and not (name = '$namekey' and yomi = '$yomikey') もしくは where (name = '$namekey' and yomi <> '$yomikey') or (name <> '$namekey' and yomi = '$yomikey')
変数はそのセッション内だけで有効なはずですが、まぁ使用したくないなら サブクエリになるんじゃないでしょうか？ SELECT ROUND(num,(SELECT IF(MAX(LENGTH(num) - LENGTH(floor(num)))>0,MAX(LENGTH(num) - LENGTH(floor(num)))-1,0) FROM hoge)) as num FROM hoge
手動でいいならphpMyAdminでzipしたダンプファイルをダウンロードすればいいと思います。 自動化するなら、インタフェースをphpで作って、httpベースでダウンロードする仕組みに するのが現実的かと。 メールは容量不足だし、エラー対策も取りづらいのでお勧めできません
$i = --$i; はありえない・・・。 --$iという書式はデクリメントといって $i=$i-1という意味ですから それを$iに代入しても仕方がありません。
＞そこまではわかる (1)はMAX(NO+1)は、NO+1したものすなわち2,3,4,・・・,11,12の最大値だから12 (2)はNOの文字列順列1,10,11,2,3,・・・・7,8,9の最大値9に1をたすから10 すなわち(1)は文字列を数値にキャストしてから最大値をとり、 (2)は文字列で最大値をとってから数値にキャストすることによる違いです。
削除日時を主キーにするのは明らかにおかしいです。なんのためでしょう。 インデックスを張るだけでよいと思います。 削除日時を主キーにしてしまうと、同じ会社コード、会社支店コードのものが複数存在してしまうことになります。
そのサーバ群は　同じドメインではないんだよね？ そういう外部なら残念だけど無理だね。 予定しているDBアクセスを、DBが有るサーバで行って投げ返す必用があるよ。
　メールアドレスは、一応、世界に一つしかないという前提はあるにはありますが、共有という悪質なパターンが世の中にはありますので・・・ 　メールアドレスに重複は存在しないと言い切るなら、パターンＢの変形で 　　(PK)メールアドレス 　　　　モバイル用アドレス 　　(FK)ユーザーＩＤ 　この時のＦＫは、外部キーと言います。 　create table時に、制約条件として、 　　constraint fk_mail foreign key user(ユーザーＩＤ） のようにして定義します。 　プライマリーキーは、出来るだけシンプルな構造にするのがベストです。強制的にインデックスが生成される上、この組み合わせセットで検索をかけることを前提にインデックスが構成されますので、複雑にすればするほどどんどん効率が落ちます。 　余談ですが、もし、モバイル用アドレスにモバイル用のメールアドレスそのものを入れる予定でしたら、モバイル用アドレスも、メールアドレスの一つであると考えれば、モバイルアドレスというカラムは必要ないように感じます。もし、モバイルアドレスのみを抽出する必要があるということで、このカラムがyes noタイプのカラムであるとすれば、存在意義はあると思います。 　世の中には、悪質なパターン（メルアドの共有）が存在するという前提に立てば、パターンＡとなります。この場合は、 　　(PK)メールアドレス 　　(FK)(PK)ユーザーＩＤ 　　　　モバイル用アドレス 　 となりますね。ユーザーＩＤは、主キーの一部であり、かつ、外部キーともなっていることに注意してください。 　この前提条件の場合は、どうしても複合キーにする必要があります。行が一意になりませんので。 　どちらの前提に立つかは、アプリケーションの要求仕様によります。 　どちらにせよ、このような構成の場合は、マスター参照の為のキーは、外部キーとして定義しておく方が良いでしょう。データを操作する時の制約条件として自動的にチェックがかかりますし、検索にも良い影響が出ます。（確か、MySQLは、外部キー定義をすると当該カラムに自動的にインデックスを生成したと覚えています。） 　ORツールを使うなら、ツールに対するテーブル構造の説明にもなります。外部キーとして使用される前提でコードが生成されますから、よりよいコード生成が期待できます。
>さて、どうしよう・・・ >インデックス値を使用禁止にするモードがあれば、いいのにな 正規化して外部キー制約してみてはどうでしょう？
たぶんCHARSETに問題がある。 CREATE TABLE でCHARSET指定してますか？
>ＳＱＬｉｔｅは、ＷＥＢサーバーが持つローカルな記憶装置をデータベースとして使う仕組みで、自分の管理するハードのシステムを呼び出すのでＷＥＢアプリの命令として簡単に使用できるというイメージです。 SQLiteの実体は、ただの単一ファイルなので、ローカルに限らずネットワークドライブでも問題ないはずです。(基本的に、ネットワークドライブ上に置くメリットよりデメリットの方が多いと思われますので、そのような使い方をすることはあまりないと思いますが…) 複数のクライアントが利用する場合でも、Webアプリからなら簡単に利用できるのは、本来、意識しなければならない同時書き込みなどの処理(そもそも、同時書き込みが頻発する処理の場合SQLiteでは不適格ですが…)を、Webのサービス(ApacheやIISなど)が窓口になって一括で処理してくれるからです。 つまりSQLiteの仕様のデメリットが、Webのサービスの仕様と上手く噛み合わさることで、ほとんどなくなるということです。 上記リンクで書込がダブると書込エラーが発生すると書かれていますが、これは、何も考えなくてもWebのサービスが守っていてくれているから(と言っても、そんな大げさなものではありませんが)です。もし、同時に書き込みにエラーが発生しない場合、DBが壊れると言う最悪の可能性が待っています。 (MySQLのようなサービス型の場合、同時の書き込みでもDB自体は壊れないように出来ています。) >ということで、ＭｙＳＱＬのようにＷＥＢサーバーがネットワーク上のハードであるデータベースサーバーにユーザーが自らを証明するために必要なパスワードを送る必要が無いということ。 Webアプリなら、あまり考える必要のないことですが、パスワードが必要であることのメリットは、上記のリンクにあるような、第三者に対するセキュリティよりも、公開する相手に対して必要な権限を振り分けられることの方が大きいと思います。 SQLiteでは、その仕様上、基本的に窓口が一つでないとなりません。決まった相手にしかデータを見せる必要がないのでパスワードは不要となります。(ファイルをさわることが出来る相手＝管理者で、全データを扱えることに問題はない) 一方、MySQLなど、サービス型のDBの場合、窓口が複数あることが前提となります。 この複数の窓口と言うのがミソで、使用者全員が管理者と言う訳ではなく、必要な情報を必要な人にだけ見せたり、更新させたりする必要があります。そのためにユーザやパスワードの設定が必要となります。
>>新規登録した際にはentry_date と update_date　の両方に同じデータを書き込むしかないでしょうか・・・？ 運用的には上記が正解かと。新規登録時に両方埋めて置くと何かと便利です。 どうしてもクエリで解決したいのであればこんなのは如何でしょう？ select * from member order by isnull( update_date, entry_date ) desc limit 0, 10 …未検証ですが。動くかなあ。動くと思うんだけど。 要は「update_dateの値が空だったらentry_dateの値を使えば良いじゃない」って言う発想です。 出来なかったらごめんなさい。マジごめんなさい。 しかし繰り返しますが、新規登録時に両方埋めて運用する事をオススメします。 なぜならupdate_dateのないレコードを取得したいと言う状況があった場合でも、entry_dateとupdate_dateの値が同じレコードを引っ張ってくると言う手法を取れば容易に検索可能な上、インディックスをこのカラムに設定しててもこの方法なら高速に検索できるからです。 (IS NULLはインディックスが使用できない！) この辺の理屈については参考URLの「NULLにまつわる諸問題」の項を参照してください。 …ん？ update_date = entry_date で検索したら全件検索になるか？ なるな。固定値検索じゃ無いからなっちゃうわ。 まあ、ORDER BYとか早くなるだろうし便利な事に違いないから良いや別に。 参考URL：http://www.geocities.jp/mickindex/database/idx_d …
>phpMyAdminから　SHOW VARIABLES;コマンドを実行したところ perlからの要求が問題になっているのだから、phpMyAdminからでなく、perlから実行して確認してください。 あるいは、perlからMySQL接続後、最初に set names を投げてみてください。
ええと、OS等分かりませんけどメモリが足りてないプロセスはmysqld まだ、仮想メモリ等十分に空いてるのであればmysqldプロセスが確保出来るメモリ量を増やしてやれば解決するのでは？ また、メモリが本当に足りないのなら、リソース不足です。
毎行に同じ合計値を出すということですか？ あまり効率的ではありませんね・・・ 先にselect sum(suu) as goukei from ・・・ としてgoukei値をうけとっておいて、表示してみてはどうでしょうか？
MySQLのバージョンを、MySQL 5.0、MySQL 5.1といった番号までは最低限、明記してください。 mysqlshow でなく mysql コマンドであれば、列名の非表示、区切りの「-」の非表示といったオプションの指定が可能です。 ＜コマンド指定例＞ mysql -u ユーザ名 pパスワード -D INFORMATION_SCHEMA -N -s -e "SELECT SCHEMA_NAME AS `Database` FROM INFORMATION_SCHEMA.SCHEMATA" mysqlコマンドのパラメタの詳細は、以下を参照。 http://dev.mysql.com/doc/refman/5.1/ja/mysql-com … 簡単に説明すると、 -e : 実行するSQL -N : 列名を非表示 -s : ヘッダの区切りの「-」を非表示、表示位置合わせなど といった感じです。 データベース名の参照先のinformation_schemaの詳細は、以下を参照。 http://dev.mysql.com/doc/refman/5.1/ja/schemata- …
やりたいことを、具体的に提示してください。 「どういった母体データから、どういう結果を得たい」といったことの説明なしに、他人には適切なアドバイスはできません。 f1でグループ化したら、f3も一意になるのですか？ もしそうであれば、一般的なSQLとしては文法エラーですが、”MySQLでは拡張仕様”で動きます。 もし一意にならないなら、誤った”MySQLの拡張仕様”の使用になります。 f3が年度で、2009とか、2010とか入っているのでしょうか？ f1は月で、1～12とかが入っているのですか？それとも、年月が入っているのですか？ もし、1～12といった値が入っているなら、group byで結果は12行できる訳ですよね？ そして年度とは、どのようにくっつけるというのでしょうか？？？ 単年度しか集計しないように、検索条件を指定する？ →もしそうなら、そういった提示があって当然ですよね？ 年度に関係なく、月別で集計したい？ →もしそうなら、結果に年度をどのようにくっつけるのですか？
SQL文の書き方だけがわからないなら、英語の質問をあげるのはやめましょう。 日本語で質問すれば少しはフォローがつくと思いますよ。
＞UNIONやJOINがありますが 仕様用途が明らかに違うので、どちらが速いというような話は的外れ。 単純にテーブルが１つの場合と分かれている場合とでの差という意味では 結合のロジックと、インデックスの効き具合によってだいぶちがいますが 複数を結合の方が明らかにおそいです。場合によって数倍～数十倍違う場合も ありますが、それ以上に正規化によるメリットの方がおおきいので分けて使います。 ＞物理的に複数のテーブルを１つ 構造が同じテーブルなら片方のテーブルをもう一つのテーブルにインサートしてやれば よいでしょう
>ちなみに更新日時はわかったのですが >作成日時は 作成日時とは、具体的にどんな情報のことでしょうか？ insert日時であれば、#2さんが提示してくれているコードに既に入っていますけど？？？
>絞込み、集計、ソートなんかして、何の意味があるんですか？ 必要な情報もきちんと書かないでこちらの回答がまとはずれだったからといって 善意の回答者にけんか腰で補足をいれるならあなたには二度と回答しません。
あまりに安いものと期待しすぎるのも 危険かもしれないのでとりあえず別意見として。 ざっと見た感じ10人月*@60万＝最低600万くらいからの調整になると思いました 普通に1000万くらい、ITコンサル入れて、手厚くすればすぐ2～3000万になりそうな 案件のような感じをうけました。 （もちろん値切ればクオリティが落ちるということで・・・）
ストアドプロシージャを使います。 DROP TABLE IF EXISTS T_TEMP; CREATE TABLE T_TEMP ( ID INT PRIMARY KEY AUTO_INCREMENT, M_DATE DATE ); DROP PROCEDURE IF EXISTS UPDATE_T_TEMP; DELIMITER // CREATE PROCEDURE UPDATE_T_TEMP() BEGIN DECLARE currentdate DATE DEFAULT CURDATE(); TRUNCATE T_TEMP; WHILE currentdate <= CURDATE() + INTERVAL 1 YEAR DO INSERT INTO T_TEMP(M_DATE) VALUES(currentdate); SET currentdate = currentdate + INTERVAL 1 DAY; END WHILE; END // DELIMITER ; CALL UPDATE_T_TEMP();
SJISの5C問題とかじゃないですか？ 化ける具体的なデータを提示いただかないとなんともいえません
まずは解凍してみて。 中が . .. a.txt bin ChangeLog.txt doc INSTALL-win.txt Install.bat INSTALL.txt lib MYODBC5-EXCEPTIONS.txt MYODBC5-LICENSE.txt README.txt Uninstall.bat なら「INSTALL-win.txt」を開いてみると ZIP (no installer) In this case you want to do the following; 1) Extract the files using pkzip or some compatible program. 2) Copy the files to the desired location and register the driver or optionally use Install.bat to do this for you. NOTE: Do not try to edit the registery or odbc ini files manually to register the driver unless you are intimate with how to do this properly. myodbc3i has been created for this purpose. とあるので、試してみては。 こちらは32bit環境しかないので確かなことは言えませんが。
合計の行に表示されるtable種別は、「MySQLサーバーのデフォルトストレージエンジン」だそうです。 これを変更するには、現在接続中のセッションのみなら SET storage_engine=InnoDB; rootユーザーまたは、SUPER権限を持ってるユーザーなら、以下で、次の再起動まで永続変更出来るけど SET GLOBAL storage_engine=InnoDB;
こんな感じで、カウントしたユニークな要素数をひろってみてはどうでしょう？ SELECT member_id, post_no FROM hoge WHERE goods_id IN (100,200) GROUP BY member_id, post_no HAVING COUNT(DISTINCT goods_id)=2
経緯の説明が、いろいろ書かれている割に、肝心な情報がかなり不足しています。 複数ユーザ（phpMyAdminとそれ以外のphpのアプリ）で同一表を操作時、「他ユーザで削除した（というか、削除を含む処理中で）行が、他ユーザで検索できる。削除した側から再検索すると、確かに削除できている」と言っています？ 削除した側がcommitすれば、他方からも検索できなくなるのでは？ もしそうであれば、他ユーザに見せることもできるし、見せないようにもできます。 いずれにしても、MySQLのバージョン、表定義の情報、複数ユーザで操作しているならそれが分かるように提示してください。
like検索は、indexが効きにくいです。先頭が固定値ならまだしも、他のtable からひっぱるのでは、まったく利用されないでしょう。 table のjoin を工夫すれば、まだいけるかな？ 件数の多いB table にindex を貼るとして、そのindex を貼ったカラムと=で比較できる条件文に変更できれば、join に際してindexが利用されるのでは？ よって、テーブルB Pref　の文字数が４桁固定で有れば select a.*,b.Name,b.Pref FROM テーブルA a left join テーブルB b on b.Pref = substring(a.phone, 1, 4) ; left join で、テーブルA の全行が選出されて、テーブルAの各行に対し、この条件文だとたぶんテーブルBからは一行選出されるので、group by は不要になるとおもう。 pref の文字数不定だと、難しいです。先にテーブルAにも、pref のみ入れるカラムを作った方が速そうです。テーブルAは、数千もないのですよね？ あと、先頭に explain を付けて実行してみると、index を使っているかどうかが解ります。 possible_keys か key　カラムにindex名が入ります。
若干視点がずれているように見受けられますが・・・ 複数テーブルを使うのは単にデータをわけるためではなく正規化して 冗長性をなくすためです。 同じ種類のデータを複数にわけても結局はUNIONなどでつなげて集計すれば 負荷はかえってたかくなったり、ユニーク属性やインデックスがうまく 作用しなかったりするでしょう。 なので管理自体は１ですが、一つのテーブルに何でもかんでも冗長に入れれば ボリュームが増えた時にかなりシステム的な負荷が高いので、検索条件を 考えながら分散を検討したほうがよいでしょう。
どこまで直していいのかわからないのでとりあえず・・・ 正規化についてもう少し学習なさった方がよいでしょう。 ユーザー管理テーブルと、家電メーカーテーブルをよういしておき、 お気に入りテーブルに、ユーザーIDと家電メーカーIDを３個まで登録できるように するのが妥当です。 そうすればお気に入りテーブル上に、一番好きなメーカーフラグを登録すれば 簡単に集計できます。
単純に考えるなら、こんな原因が考えられます。 ・プライマリーキー、ユニークインデックスがあって重複行がスキップされた。 ・カラムの型やNOT NULL制約に引っかかった ・文字コードや改行コードで、正常にインポートできない行があった ・一部のカラムのバイナリデータをロードしようとして正常に読み込めない etc… どちらにせよ、MySQLのバージョン、テーブル定義、読み込むファイルや作業手順等分からないことだらけですので、原因は判断できませんが…
具体的にどういうことを行いたいのか不明ですが、「DB2からMySQL」は可能かも知れませんが、「MySQLからDB2」は現状では、SQLやストアドプロシジャレベルではできないと思います。 詳しくは、外部表やDATALINKなどで調べてみてください。
インスタンスという話でしたので、複数のMySQLサーバーのプロセスを立ち上げて、別々の独立したサーバーのプロセスを立ち上げると理解していました。 MySQLは、Oracleのように"1イスタンス = 1データベース"という管理のしかたでは無いので、ひとつのMySQLサーバープロセス上に複数のデータベースを作成できます。もともとMySQLではあまり"インスタンス"という言葉を使わないですし、使った場合には、大抵MySQLサーバーの実行プロセスを指します。 ひとつのMySQLサーバー内に複数のデータベースを作成した場合に問題になるのは、サーバーの設定が全てのデータベースで共通なので、データベース毎に制限をすることが出来ない点があります。なので、逆に言えば何もしなくても複数のデータベースを作成することは出来ます。 質問にあったように、1つと複数のデータベースを作成した場合に性能についてだけ、いうならば1つでも複数でも基本的には変わりがありません。ただ、複数のデータベースを作成するということは、複数のアプリケーションからのアクセスが集中するということですので、複数のDBをインストールしたことによる性能劣化が無くても性能上の問題が発生しやすくなるので、注意が必要です。
意味がよく分からないんですが、以下の仕様と推測します。 (1)Aにあるデータは全て抽出する。 (2)Aと一致するIDを持つBがあれば、指定した項目のみ結合する。 SQLを考える時は理論の構築が大切です。 (1)Aは優先して出力 (2)Bは条件に一致したものだけ抽出 ということで、SQLはこんな感じになると思います。 SELECT A.ID,B.項目 FROM A LEFT JOIN (SELECT ID,項目 FROM B WHERE 項目='あ') B ON A.ID=B.ID
メッセージで表示されている通り、使用するデータベースが選択されていないだけでは？ MySQLに接続後、 USE データベース名 を入力するといった方法で、使用するデータベースを選択してみてください。
古いMySQLなら"1つのクエリで1テーブルにつき1インデックスしか使われない"というのは正しいです。しかし、新しいMySQL(ver.5.0以降)ならインデックスマージが行われるので、もし複数のIndexが使えるとオプティマイザが判断をした場合には、複数のインデックスが使われます。 ただ、例で挙がられた"idとuser_idを条件にするクエリ"の場合、PRIMARY KEYであるidカラムで1行のみに絞り込めます。わざわざ複数のIndexを使わずに、PRIMARY KEYを使って対象の1行を取り出してから"指定されたuser_idと一致するかどうか判断する"という最適化をオプティマイザが判断してしまうとuser_idのインデックスは利用されません。 また、検索条件に完全に一致したインデックスが無くても、対象行の絞込みが行える場合には、オプティマイザはインデックスを利用して対象行の絞込みを行ないます。インデックスで絞り込んだ中から条件に一致した結果を返すので、インデックスだけで絞り込んだ場合より多少遅くなりますが、まったくインデックスが無かった場合より早く結果を返せます。 また、複合カラムインデックスは、初めのカラムだけが条件に指定された場合でも有効に活用されますので、検索条件次第ですが、同じカラムの並びでインデックスを複数作成する必要はありません。 http://dev.mysql.com/doc/refman/5.1/ja/mysql-ind … インデックスを大量に作成すると更新時の処理が重くなるので、更新と参照のバランスを考えて必要なインデックスを作成してください。 "INDEXとKEYの違いは？"については、同じINDEX作成用の定義文なので、好みにあわせて好きなほうを使ってもらってかまいません。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/index-mer …
ORDER BY 県名 DESC ででてくる１行目の県名じゃないでしょうか？ （ご使用になっている文字コードにおけるコード番号が一番後ろの文字？）
SQL実行結果でしたか。クライアント側対応になるみたいですね。 　mysql コマンドラインクライアント実行での画面出力なら、起動時option　で --tee=file_name これは、クライアント起動後も変更可能で、 \T file_name 　コマンドプロンプトの画面出力内容全部が記録されます。 http://dev.mysql.com/doc/refman/5.1/ja/mysql-com … 他のプログラムからの接続なら、それぞれのプログラム側で、実行毎にエラーチェックするしかなさそうです。phpmyadminのエラー表示は、phpのmysql_error()関数でエラー内容取得しています。 http://jp.php.net/manual/ja/function.mysql-error …
全文検索をつかえるならSQLらしいはやい検索ができます。 そのためには文字の分かち書きが必要です。 MySQLに専用ライブラリを組み込むか、 kakasiなどで分かち書きをしたうえで登録するかのどちらかになると思います。 そうではなく冗長なデータ管理をする場合は、 前方後方一致 ・・・LIKE '%hoge%'や、正規表現 REGEXPをつかいますが データが最適化されるわけではないので、おもったようなスピードはでないと思います。
＞英数字１バイト文字の場合、１６文字まで入れられるのでしょうか？ MySQL4.1以降char(n)は文字数となっていたはずです。 逆に英数であっても文字数にはかわりないので16文字ではなく8文字です。 strlenは文字数をカウントすることはできないためNGだと思います。 なおSJISの場合は5C問題などあるので所定の文字数がいれられない可能性もあります そうでなくてもインジェクションの罠にはまりがちなのでSJISは排除していく方が いいとおもいますよ
確認してください。 http://support.sakura.ad.jp/page/manual/rs#10
>userユーザのパスワードが保護（？）なのか設定した内容と違います。 パスワードはhash化されますので、参照するとhash化されたパスワードが表示されます。 また、ユーザの権限を追加・変更した後は、 flush privileges; を流して、権限が確実に反映されるようにしてください。
ユーザ作成後に mysql>flush privileges; を実行しないと設定が反映されません。実行しましたか？ また、パスワードはuserテーブルにあるのは暗号化されたものですから、 それではなくユーザ作成に入力したパスワードその物を使用してください。
action="upd3.php?no=<?= $no ?>" このように、URL(ファイル名)の後ろに、?としてパラメータを付けた場合は、<form>のmethodがPOSTであっても、GETで送られるという仕様です。 [登録]ボタンを押すと、GETとPOSTで別々にパラメータが送られるって事で、微妙に混乱するのは判りますが。 どっちもPOSTで送りたいなら、 <input type="hidden" name="no" value="<?= $no ?>"> をform内に記述します。 受け取り側に何らかの都合があり、GET、POSTを混在させたい場合は、$_REQUEST['no']で取得するというのもありです。 ※手抜きで何もかも$_REQUESTで受け取るのはセキュリティ上問題あり。 その必要があり、混在させなければならない個所で限定して使う分には便利です。 あと気になる個所は $sql = "select * from fro where no = $_POST[no]"; ※直接受け取った値を使用しているため、SQLインジェクションの可能性あり。 //結果セットを取得します $rst = mysql_query($sql, $con); //結果セットからデータを読み込みます $col = mysql_fetch_array($rst); ※$rstの成功失敗を判定していないため、結果的にWarningがユーザーに表示されてしまっている。 ※その意味では、以下の$selectdbも同様。何らかの理由でDBに接続失敗した場合にはErrorまたは、Warningがユーザーに表示されてしまう。 $selectdb = mysql_select_db($DBNAME, $con); もう一点気になるのは HTMLタグが大文字な事。 xhtmlでは小文字と規定されているので、HTMLで作成する場合でも現在は小文字で書くのが主流。(HTMLでは大文字小文字どちらでもOKだが)
このuserってアカウント名じゃないのか?
MySQLのバージョンを、最低でもMySQL 5.0、MySQL 5.1レベルまでは明記するようにしてください。また、機能によっては、MySQL 5.1.xxといったマイナーチェンジででも仕様変更されているケースもありますので、環境を具体的に提示するようにしてください。 また、単に「エラーになる」といったことでなく、具体的なメッセージなどを提示してください。それが、他人が検証する上で、大きな手がかりになります。 「FROM句でサブクエリを書けない」という制限は、私が使用しているMySQL 5.1.36でも残っています。 ＜方法１＞ダミーの表を使いSELECT句で集計 他の方が提示されているORACLEでいうDUALは、MySQLは未実装です。しかし、MySQLでは「FROM 表名」自体を書かない構文があります。 DROP VIEW IF EXISTS ALLPLAY_TBL; -- "FROM tablename"構文自体を省略 CREATE VIEW ALLPLAY_TBL AS SELECT (SELECT SUM(PLAYCNT) FROM NORMAL_TBL) AS NORMAL_CNT ,(SELECT SUM(PLAYCNT) FROM HARD_TBL) AS HARD_CNT ,(SELECT SUM(PLAYCNT) FROM SPECIAL_TBL) AS SPECIAL_CNT ,(SELECT SUM(PLAYCNT) FROM MANIAC_TBL) AS MANIAC_CNT ; SELECT * FROM ALLPLAY_TBL; ＜方法２＞UNIONで4表を1表のように扱う。集計はビュー操作時に行う 現在の表の構成では、4表を1表のように操作するケースがいろいろあるでしょう。 DROP VIEW IF EXISTS ALLPLAY_TBL; -- "UNIONで4表を1表のように操作 CREATE VIEW ALLPLAY_TBL AS SELECT PLAYCNT AS NORMAL_CNT,0 AS HARD_CNT,0 AS SPECIAL_CNT,0 AS MANIAC_CNT FROM NORMAL_TBL UNION ALL SELECT 0 AS NORMAL_CNT,PLAYCNT AS HARD_CNT,0 AS SPECIAL_CNT,0 AS MANIAC_CNT FROM HARD_TBL UNION ALL SELECT 0 AS NORMAL_CNT,0 AS HARD_CNT,PLAYCNT AS SPECIAL_CNT,0 AS MANIAC_CNT FROM SPECIAL_TBL UNION ALL SELECT 0 AS NORMAL_CNT,0 AS HARD_CNT,0 AS SPECIAL_CNT,PLAYCNT AS MANIAC_CNT FROM MANIAC_TBL ; -- 集計はビュー操作で SELECT SUM(NORMAL_CNT),SUM(HARD_CNT),SUM(SPECIAL_CNT),SUM(MANIAC_CNT) FROM ALLPLAY_TBL; 上記の例では、全体のPLAYCNTのみ集計していますが、これにプレイヤーを識別するIDなどもSELECT句で選択するようにすれば、プレイヤー毎の集計など、いろいろな操作が可能になります。
groupのカラムに入る値が分かっているのであれば case文を使うとパフォーマンスにも優れると思います。 case文を使うと条件によって出力する値を変える事ができます。 SELECT 　　name, 　　COUNT(*) AS total, 　　SUM(CASE 　　　　WHEN group='100' THEN 1 　　　　ELSE 0 　　　　END) AS count_100, 　　SUM(CASE 　　　　WHEN group='200' THEN 1 　　　　ELSE 0 　　　　END) AS count_200 FROM 　　test_table GROUP BY 　　name; (※上記のSQLはインデントを付けるために全角のスペースを使っています。コピペをする際は削除して下さい。) 参考URL：http://homepage2.nifty.com/sak/w_sak3/doc/sysbrd …
csv というからにはテーブル毎にテキストファイルが必要ですよね？ mysqldump --user=root --password=pass --no-create-info --fields-enclosed-by=\" -T. mydatabase みたいなやりかたでどうでしょう？ mydatabaseというデータベースの全てのテーブルをカレントディレクトに、テーブル名ごとに データをダブルクォーテーションでくくった形でファイルができます。
まず、配列や構造体は、現時点ではMySQLでは実装していません。 そういった機能は、いつくかのRDBMSでは、独自仕様として実装しているものもあります。 標準SQLでは、SQL99では、配列、ユーザ定義型による構造体の定義が規定されており、MySQLでもいずれ実装されるかも知れませんが、操作性は必ずしもいいとは言えません。 >OCCURSの有無が聞きたかったのでキーや他項目は省かせていただきましたが。 そんな質問の仕方をすれば、「そんな機能はない」といった回答しか得られないし、キー項目などを省かれたら、具体的な代替手段の提示ができなかったり、せっかくのアドバイスが意味のないものになってしまいます。 普通に考えれば、 キー項目、キー内通番、AAA、BBB、CCC といった構成を考えるのではないでしょうか？ 何のためにデータベースに格納するのか、データベースに格納してどんな操作をしたいのかといったことがまったく不明ですが、極端な話をすれば、RDBMSにより一意性を保証してもらいたいキー、検索条件、ソートなどSQL上でどうしても指定が必要な列以外は、テーブル定義上はひとつの列にしておいて、アプリ側でフィールドを小分けするといった方法もあります。
こんばんは 訪問間隔月数はintでいいです。 ただ一つだけ注意が必要ですが、INTERVALで月を足した場合、月末が自動調整されます。 例えば、訪問日＝2010-3-31　訪問間隔月数＝１で計算すると、次回訪問日＝2010-4-30になります。 （4月31日は存在しないので・・・） これでよければ、 SELECT 顧客番号, 訪問日 + INTERVAL テーブル2.訪問間隔月数 month FROM テーブル1 INNER JOIN テーブル2 ON テーブル1.顧客番号 = テーブル2.顧客番号 になります。
必要だと思います。 暗黙的に排他処理が働くと迷惑になる場合が多いので、目的に適した排他処理を明示的に行うのが良いと思います。 これは、MySQLに限った話ではなく、SQLServerやOraclにも言えることです。
少し気になったのですが、 100以上200未満とは200は含まないということでしょうか。 もしそうであれば UPDATE Media SET Class = 4 WHERE MediaCD >= 100 AND MediaCD < 200; かなと思います。 また200を含むのであれば別の書き方で UPDATE Media SET Class = 4 WHERE MediaCD BETWEEN 100 AND 200; という書き方もできるかと思います。 ご参考までに！
簡単なサンプルをつくってやってみましたが、とくに問題がないみたいです。 思いつくのはゴミデータがはいっている・・・とかですが、 文法上それも考えにくいとおもいます。 私の乏しい知識と経験ではorder byによってデータ数が左右される ような事象のは聞いたことがないので場合によってはMySQLの 再インストールなど本質的な対応が必要かもしれません。
こんにちは 「-p」の後に、続けて（スペースなし）パスワードを記述すればいいだけだと・・・。
こんにちは よくわからないんですが、上書きしたいという事は、上書きする対象のレコードが判断できるんですよね？？？ ご質問の例ですと、 １．起きる　→　食べる ２．叫ぶ　　→　遊ぶ 普通にUPDATEでいいんじゃないんですか？ わざわざREPLACEしている意味がわからないのですが・・・。 件数が多い場合というのがピンときません。 どのレコードのcommentカラムを書きかえるのかは、noカラムで指定しない限り判断できませんよね？ 新規追加ならauto_incrementに意味がありますが、書き換える場合は対象レコードを判断できないと駄目なのはわかりますよね？ DELETE　→　INSERTの場合は、元のデータのnoが置き換わってしまうわけですから、全く別のデータになっています。 他のテーブルでnoを参照している場合は、データ連携がぐちゃぐちゃですが・・・？
＞どのくらい以上になるとパフォーマンスが低下する それは理論的には2以上になれば少なからず低下するでしょう。 あとはデータベースエンジンとトランザクションのやりかた、 MySQLへのアクセスの仕方によってだいぶ違うでしょう。 DBのパフォーマンス低下よりもっとはやく別の要因によって ボトルネックが発生する可能性もあり、そうなると、 それ以上MySQLのパフォーマンスは下がりません。
ブログのデータはデータベースに保存されていたのですよね？ データベースを削除してしまったら、そのバックアップがない限り、復旧は不可能です。
MySQL 5.0以降なら、ビュー経由でのみアクセス権限を与え、そのビュー中で例えば接続ユーザに対応する行だけを操作可能にするといった方法があります。
テーブルの文字コードセットが日本語になっていないのではありませんか？ ご確認ください。 参考URL：http://mysql.javarou.com/dat/000573.html
連結する必要はないのでは？ select * from a where (a1,a2,a3) in ( select a1,a2,max(a3) as max_a3 from a group by a1,a2 ) ちなみに最初のテーブルaのa_idの枝番がまちがっていますよ
同時に3000人も書きこむ可能性があるなら、高額でしょうがクラスターシステムの導入が必須でしょう。 http://www.continuent.jp/pro.html あるいは、MySQLはやめてOracleに移行するかですね。 運用がそれを許すなら、分散したDBに登録して、夜間バッチで統合する手もありますね。 (理論値で)3000人同時登録を保証せよという話がクライアントから出ているレベルの話か、実際に今現在問題が発生しているのかによっても変わりますが。 現在実際に3000人が同時に登録して問題が発生しているのではない限り、実際に問題が発生するまで、MySQLは同時に何千人でも接続して更新しても問題ありません!!って言いきって放置する手はありますが。
>SELECT sum(age) as totalage FROM member where age = '{$val}' あっているような気もしますが・・・ ageがint型になっていないとか？ >エラーになってしまいました 具体的なエラーメッセージを提示してもらわないとなんとも言えません
こんにちは ODBCの設定画面でいいんですよね？ MyODBCなどは、すでに入っているものと仮定して、 ■Data Source Name 　なんでもいいです ■Description 　なんでも（空でも）いいです ■Host 　localhost ■User 　接続ユーザー名（rootなど） ■Password 　接続パスワード（ない場合は空で） ■Port 　3306（変えた場合はそのPort番号） 以上で完了です。
＃１、＃２です。間違えてましたね、すみません。 「Aを2と読み替える」と読んでました。 S1を見るSelectと、S2を見るSelectをUNION ALLしてから Group BYしてください。 select s, count(s) from ( 　SELECT s1 as s FROM table 　union all 　SELECT s2 as s FROM table ) group by s
何故にプログラムでわざわざＣＳＶ化しているのかがちょっと判りませんが、この質問のソースからして一行目に行として項目名が列挙されるのはある意味当然ですよね。だってわざわざ$strに行を代入しているわけですから。それともこの行の中にあるカンマが表示されないということなのですか？ 最も簡単なのはコマンドで一発出力だと思いますけど違うの？ 参考URL：http://it.kndb.jp/entry/show/id/1056
とりあえず、php.ini、phpのソース、MySQLの文字コードの設定は何になっていますか？
前回とほぼロジックは同じです。 SELECT player_id,sum(truncate(c/3,0)) as point from ( SELECT( SELECT MAX(d) FROM hoge where h1.d>d and h1.win!=win and h1.player_id=player_id )AS pre ,win,player_id,count(*) as c FROM hoge AS h1 GROUP BY pre,win,player_id ) as sub where win=1 group by player_id
ApacheのAddDefaultCharsetが怪しい。 これコメントアウトしておくことをすすめる。 これが原因であろう文字化けをネットやっているとよく見る。 (Webサーバの設定をろくにできない奴が構築管理しているのだとよくわかる事例。)
cronがそこでできないなら、別のcronができるサーバーから httpベースか何かで命令をながしてやればいいのでは？
OSがわからないのでなんともいえませんが、iconvとかの 問題ではないのですか？
読み替え用のマスタテーブルはないのですか？ もし無いようでしたら、PHP側で読み替え処理した方が簡単だと思いますよ。
MySQLデータベースのUserテーブルを設定して、 $cfg['Servers'][$i]['auth_type'] = 'http'; あたりで管理してみてはどうでしょう？
プライマリーキーに対して"1"というデータがすでに存在していて 競合してますってことですね プライマリーキーはユニークを確保するための検索キーなので 同一値はもてません
命題が正しいなら、こんな感じでいけそうですね。 SELECT count(*) from (select member_id,post_no,group_concat(cast(goods_id as char) order by box_no ASC SEPARATOR ',') as goods_list from テーブル group by member_id,post_no ) as sub where goods_list='55,40,100'
()つけてみたら？ FROM (JOHO T1 LEFT OUTER JOIN X_CODE T2 ON T1.Y_CODE = T2.CODE) LEFT OUTER JOIN H_CODE T3 ON T1.J_CODE = T3.CODE
$where = "WHERE 1"; $where.= "AND comment9 LIKE '%当たり%'"; if(isset($regdate)) $where.= "AND regdate = '{$regdate}'"; 的なことをやろうとしていますか？
「syntax」という言葉があればコードの綴り間違いが原因だと思います。 eclipseうんぬんよりも、まずは実行しようとしているSQLが 正常に実行できるものであるかを CSEなどで確認してみたほうがよろしいのでは？ それともメッセージに出ているSQLは、 ご自分で書いたものではないのでしょうか？ エラーメッセージに出た一部分のみの情報では 回答者も内容を推測しかねますので、 該当するSQLステートメントの全文と、 エラーメッセージ(エラーコードがあればそちらも)を書いていただくと 回答も集まると思いますよ。 参考URL：http://www.hi-ho.ne.jp/tsumiki/
こんにちは ＞これを1行のSQLで実現は出来ますか？ まぁ、SQLなんてパズルみたいなものですから、カラムの型にもよりますが、不可能ではありません。 ＞出来ない場合は次の手順でSQLを実行すれば問題は起きないですか？ 概ね、その方向でよいと思います。 1発でやっちゃいますか？
適宜インデックスが貼ってあるとして select * from テーブル where (`name`,`date`) in (select `name`,max(`date`) from テーブル group by `name`) とするか select hoge.id,hoge.name,hoge.dateA,hoge.amount from テーブル AS hoge inner join ( select name,max(`date`) as `date` from hoge group by `name` ) as sub using(`name`,`date`) 的な処理で （チューニングを考えればもう少しありそうですが）
my.iniの[mysqld]の所に"skip-grant-tables"を追記して MySQLを再起動すればログインできるようになりますよ。 ただ、誰でもログインできる状態にするオプションなので、設定が終わればすぐに設定を削除してMySQLを再起動してくださいね。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/privilege …
SUPER privilege　が必要とあるので、phpMyAdmin でMySQLにアクセスするユーザーに、SUPER権限が必要ということです。デリミタ変更時に必要のようです。 権限付与が出来るユーザー(通常root) でアクセスして、対象ユーザーに、SUPER, TRIGGER の権限も追加付与するか、root ユーザーから triger 文を発行してしまうかしてください。 http://dev.mysql.com/doc/refman/5.1/ja/grant.html
N02回答者です ん？投稿後によく見たら　`sta`<=`end` がfalseの時の　不等号が逆だった if( `sta`<=`end` , CURTIME() between `sta` and `end` , CURTIME()>=`sta` or CURTIME()<=`end` )
＞)； 全角のセミコロンになっていませんか？ あやしければ\gでやってみてください。
RDBMSはMySQLでいいのですね？ TRUNCATE TABLE テーブル名 で、表の定義は残し、全行削除できます。 DELETE文では1行ずつ削除するので、時間も掛かるし、インデクスなど大きな残骸が残ってしまいます。 一方、TRUNCATEは管理情報のみの削除なので、0件や未格納状態にしたい場合は効率的に行えます。
php-mbstring，php-mcryptはインストールされていますか？ もし未だでしたら、yumでインストールできます。
どのような更新作業を行う必要があるのかわかりませんが、UPDATE文にCASEで条件等を書けばわざわざfetchrowで回さなくても、SQLで今の状態を元に一括更新ができると思います。 SQL1つ投げるだけなら、DBサーバー側との通信は最小限にまで減らせますので、1万行取得した内容に対して1万回UPDATE文を実行する必要はなくなります。 参考URL：http://codezine.jp/article/detail/405
ポートを開く必要があるから ポートを開くだけでも危険性が大きくなる。
　正規化の意味・意義・必要性はちゃんと理解しておられますね？ 　テーブルを正規化するには、テーブルを分割することになります。 　その結果、データを利用する時には、分割したテーブルを結合する必要が生じます。当然、テーブルを結合するには、コストがかかります。ＣＰＵ・ＩＯ時間であったりメモリー領域であったりです。 　もし、業務システムにおいて、非常に頻繁に同じ形で結合してデータを利用しなければならないのであれば、結合にかかるコストが無視できなくなる時が往々にしてあります。例えば、必要な時間内に結果が帰ってこないとかそういう形で現れます。 　その時に、初めて、非正規化の事を検討します。 　正規化することによって得られた、データの整合性・データの重複の排除などなどの利益と結合によって損なわれる効率の問題を天秤にかけて、正規化のために分割したテーブルを結合した形のひとつのテーブルの形で再構成します。 　これが、非正規化の作業です。 　が・・・・往々にして、あなたの質問にある上司の発言は、「テーブルを分割すると効率が悪くなるから最初から正規化作業なんてしちゃいけないんだよ。」とか「テーブルを分割したら、使う時にまた結合しなきゃいけない。面倒なだけじゃないか。最初から一つのテーブルなら何の苦労もないのに」という間違った設計方針を戒めるために使われることが多いです。 　最後に、もう一度、問いかけておきます。 　非正規化するためには、正規化した場合のコスト上のデメリットと非正規化をした時のコスト上のメリットを比較する必要があります。 　正規化の意味・意義・必要性はちゃんと理解しておられますね？
MySQLはマルチスレッドプログラムですので、同時並列で処理できる処理に関しては、使えるCPUの数が多ければ多いほど性能は上がります。 ただし、１つのクエリを処理するのは1スレッドなので、1つのクエリの処理性能は1つのCPUコアの性能に依存します。 なので、Webアプリのような同時並列で多数のクエリを処理することを求められるサーバーならCPUコアの多いサーバーのほうが有利になりますし、バッチ処理のような計算量の多いクエリがいくつか実行するだけならCPUコア１つあたりの処理能力の高いサーバーが有利になります。 実際には、CPUの処理性能よりDisk I/Oの性能がボトルネックになることが多いので、まずは何がボトルネックになっているのかちゃんと現状を把握してからサーバーを変えたほうが良いでしょう。
＞求めている結果を導き出すSQLクエリ table_aのidは0～9最大10個しか持てないですが、その範囲で 考えればよいのでしょうか？ （123は1と2と3という意味でしょうけど、12や23や123だって あるでしょうから・・） ちなみにidはなんの提示もないので適当にソートキーをつかわないと 符番できないすね ※テーブル create table table_a (id char(1),genre varchar(30)); insert into table_a values('1','和食'),('2','中華'),('3','イタリアン'),('4','フレンチ'); create table table_b (table_a_id varchar(10),etc1 varchar(30),etc2 varchar(30)); insert into table_b values('123','aaa','ああ'),('23','bbb','いい'),('1','ccc','うう'),('2','ddd','ええ'); ※SQL set @id=0; select @id:=@id+1 as id,group_concat(genre) as genre,etc1,etc2 from table_aa,table_bb where table_a_id like concat('%',id,'%') group by table_a_id order by etc1 前回にもかきましたが「できないことはない」だけの処理で もやはSQLでやる意味がないくらいパフォーマンスの出ない 処理だと思います。
ユーザーのパスワードを確認する方法は、無いでしょう。 簡単に解析出来ても困るわけですし。
>LEFT JOIN　の中の　「WHERE 1」としている部分が >ありますが、これは何を意味するのでしょうか。 すみません、ざっくり書いてしまったのでわかりにくかったですね。 WHERE 1とはphpMyAdminでも採用されているもので、ようは、 「全てのデータを抽出します」という意味です。 「WHERE true」ってことですね。 これにANDで条件をつないでいくとSQLが書きやすくなります。 SQLはプログラムに組み込んでつくるケースが多いですから このような書き方が非常に重要です。 たとえば、A=1、B=2を条件とするとき WHERE A=1、WHRE B=2、WHERE A=1 AND B=2を条件分けして 書くのはなにかと面倒です。 これをWHERE 1 AND A=1、WHERE 1 AND B=2、WHERE 1 AND A=1 AND B=2 とかくのはプログラム的には楽です。
＞PHP上でURLにアクセスしデータを取得、一部のデータを抽出し の部分がおそいだけじゃないですか？ 更新フロー自体が非効率であればデータベースエンジンによる 差はあまりでないでしょう ＞SQL文自体になにか変更を加える必要があるのでしょうか？ ロックの問題より、考えるべきはトランザクションや外部キーですね。
SELECT count(*) FROM t1 WHERE f1 in (SELECT f1 FROM t2 WHERE group = '1'); だとどうなります？ 30件程度どころでは無い件数が出るなら、Where条件が不十分で直積になってるかも。
a,b,cにくわえてdがあるので処理がおかしいのでは？ 普通にやるなら SELECT * FROM `a` left join b on a.id=b.id left join c on a.id=c.id where b.id is NULL and c.id is NULL 的な処理で済むと思いますが？
レンタルサーバにコマンドを打てるわけですね？ mysql -u rootで入れなければパスワード設定されてると思いますが、 他に確認方法としては mysql -u YourAccount -p use mysql select password from user where user='root'; 返ってきたカラムが空なら、パスワードはなしですね。
PHP＋MySQP歴8年のものです。 情報が不足しているので、以下の確認をお願いします。 １．PHPでクエリーを実行した際にエラーは返されていませんか？ ２．変数 $previousyear とカラム date の型は同じですか？　たとえば $previousyear='2010/3/18', date="2010/4/1' ３．値を比較した場合、$previousyear > date になっているレコードがあるのですか？ ４．phpMyAdmin で同じクエリーを実行した結果はどうでしたか？
私の初心者なのですが、検索しましたら、ヒットしました。 参考サイトに、MySQLServerの子要素であるとの記述があります。 最初に勉強される場合は、カスタムインストールじゃない方法でインストールをされたほうが無難だと思います。カスタムはある程度知識ができた後に、便利だと思います。 参考URL：http://blog.4sure.jp/yokoshima/2009/07/15/php-530が出たその４/
ユーザーごとにデータベースにアクセス制限をかけるとか ポートわけして調整するとか
コメントをいれる ALTER TABLE `hoge` COMMENT = 'ほげ'; コメントを見る SHOW TABLE STATUS LIKE 'hoge';
""は、「長さ0の文字」であり、NULLとは明確に区別されます。 UPDATE 表名 SET 列名=NULL WHERE 検索条件
これが最適かは分かりませんが、私ならこうするというのを。 1.phpMyAdmin phpMyAdminで、データを全てエクスポート(SQLとして)。 　（構造はバックアップの意味で取っておいてもいいかも） 2.DBの中身を空にする。 3.入れ替えたいフィールドを入れ替える。 　（AとBを入れ替えたいとすれば、Aを削除してBの後ろにAを新規に作る） 　（ここまででDBのフィールド自体は望みの形になっている） 4.エクスポートしたSQLのデータ部分を実行する。 　（INSERT INTOで始まるSQLを実行する） 以上。 SQL上のフィールドの順序は、別にDBの順序に合わせる必要はないので、 バックアップ時のSQLがそのまま使えます。
一部結果１がおかしいみたいですね・・ あとはこんな感じで SELECT 仕入テーブル.仕入先ID,仕入先名,SUM(仕入金額) AS 仕入金額合計 FROM 仕入先マスタ INNER JOIN 仕入テーブル ON 仕入先マスタ.仕入先ID=仕入テーブル.仕入先ID AND 仕入日 BETWEEN '2010/02/01'AND '2010/02/28' WHERE 1 AND 締日='20' GROUP BY 仕入先マスタ.仕入先ID SELECT 仕入テーブル.仕入先ID,仕入先名,SUM(仕入金額) AS 仕入金額合計 FROM 仕入先マスタ INNER JOIN 仕入テーブル ON 仕入先マスタ.仕入先ID=仕入テーブル.仕入先ID AND 仕入日 BETWEEN '2010/03/01'AND '2010/03/31' WHERE 1 AND 締日='99' GROUP BY 仕入先マスタ.仕入先ID
意図がよく解らないけど、select * じゃなくて必要なfield のみ取ってくれば？ それとも、「１番目が要らない」とかの条件が有れば、ループ内で if($i == 1)next; とでもいれてやれば、スキップできるけど
はじめまして、通りすがると申します。 上記エラーなのですが、（from varchar(20) NOT NULL ,）のところで from って名前つかってますけど、fromって名前は予約後でないですか？ これが原因と思いますけど。
yambejpさんの意見に賛成です。 WHWRE A >= 1 AND A<=10 WHERE A BETWEEN 1 AND 10 結果は同じですが、後者の方が僅かに効率的です。 何故かと言うと、Aの評価が前者は２回、後者は１回 だからです。今時の高速マシンで、DBエンジンの 最適化も発達した現在では殆ど差異は無いのですが、 昔の遅いマシン、アホなDBエンジンでやっていた頃は こういうことに神経を使いました。 ただ、DBの検索が複雑になり、件数も多くなると、 細かい積み重ねが大きな結果になって表れることも ありますので、記憶に留められたほうがよいでしょう。
＞30万件とか100万件とかになると、処理に時間がかかってしまいます。 100万件程度ならそれほど負荷にはならないと思います。 まずはテーブル構造をきちんとすること 整合性をとるための正規化は必要ですが、正規化すればはやくなる というものではありません。高速化のためにはあえて冗長な 構造にする手もあります。 それとインデックスをうまくはること。 そして当然ながらSQLをチューニングすることです。
分かり易くするため、テーブルはtbl、項目を１列目から id,name,valとします。理論を組み立てましょう。 (1)求める値はidが自分より小さいもののvalの合計 このままSQLにしてみます。 SELECT A.id,Max(name) AS item,Sum(B.val) AS SumValue FROM tbl A LEFT JOIN tbl AS B ON A.id>=B.id GROUP BY A.id 如何でしょうか。
まず、要件が明確になっていません。 (1)PRIMARY KEY　または　UNIQUEキーがどれなのか (2)(1)で重複がなかった場合、どうしたいのか (3)(1)で重複した場合、どうしたいのか また、ON DUPLICATE KEY UPDATEの使い方を誤解しているようです。 例えば、INSERTしようとして、ID列での重複発生時、TABLE_ID列、COUNT列に挿入しようとした値でUPDATEするなら、次のような指定例になります。 INSERT INTO `TABLE_A` VALUES(1,2,1) ON DUPLICATE KEY UPDATE `TABLE_ID`=VALUES(`TABLE_ID`) ,`COUNT`=VALUES(`COUNT`) この例が希望するもっとも適切なSQL例であるかどうかは、提示された内容からでは判断できません。
大分類、小分類と言う２個のクエリから得られるデータを 縦に並べれば良いようです。 (1)大分類 SELECT type AS dai,0 AS sho,name 　FROM hoge WHERE type<10 (2)小分類 SELECT FLOOR(type/1000) AS dai,MOD(type,1000) AS sho,name 　FROM hoge WHERE type>=1000 これを繋げましょう。 SELECT type AS dai,0 AS sho,name 　FROM hoge WHERE type<10 UNION ALL SELECT FLOOR(type/1000) AS dai,MOD(type,1000) AS sho,name 　FROM hoge WHERE type>=1000 ORDER BY dai,sho
これってほんとにMySQLに対する質問でしょうか？ MySQLではDISTINCTROWは単にDISTINCTのシノニムのようですね。 みるかぎりGroup byしているキーでセレクト表示しているので 行のユニークは保たれているのではないでしょうか？ なのでDISTINCTする必要は感じられません。 蛇足ながらソース的にはFormatしたデータでGroup byすると、 パフォーマンスがでないように見受けられますが、テーブル 構造上の問題なのでチューニングが必要になったら調整を はかったほうがよいと思います。
c1,c2をキーにc3を集計するならやはり ALTER TABLE tbl ADD INDEX (c1,c2,c3) しとかないとパフォーマンスがでないかもしれませんね。
できません
そもそもデバッグ以外で「*」を使うこと自体が常識的ではありません。 この場合、個別に必要事項を列記するのが常套なので、それを自動でするような 冗長な機能は用意されていないと思います。
本当に要領の問題か疑問です・・・ MySQLのチューニングについてはEXPAINでトライアンドエラーで やることになると思います。 また不要なトランザクションやロックが発生しているようなら 場合によってはばっさり切り捨てる勇気も必要です。 （あくまでも不要な場合にかぎりますが）
LAMPでなくてXAMPPならPDOが導入された状態でMySQL+PHP+Apacheが簡単に導入できますよ
認識と1つだと思ってよいです。 たとえばLinuxやWindowsなどのOSは似たような名前だけど中身が 全然違うものがあります。MySQLの場合はあくまでも一つです。 ただいくつかの観点で複数あるともいえます。 ・バージョン：いくつかのバージョンで中身がまったく異なります。 使い方も大幅に違うのでバージョンの違いは種類の違いと認識しても いいかもしれません。 ・ライセンス：ライセンスに種類があります。中身がおなじでも 種類がちがうといえます。 ・エンジン：同じ種類のMySQLでもストレージエンジンが選べるのが MySQLの特徴です。エンジンが違うと機能もスピードも違います。
別サーバーに流し込むならftpなどでアップロードして sshなどで処理すればいいとおもいますが・・・
単純に言えば、顧客マスターは一つの方がいい。 データの管理がしやすし、スピードもあがります。 また特定の条件に依存する項目がある場合、正規化する方が好ましいです。 ただ正規化もよしあしで、多くのケースでスピードとトレードオフになるので チューニングしながらの設計になると思います
softagencyからたどってみては？ http://download.softagency.net/MySQL/Downloads/M … ちなみに「MySQL Version4」という表現はいただけません。 MySQLの場合、4.0と4.1がほぼ完全に別物なので、どれがほしいのか きちんと書かないと的外れな回答になります。 （まぁもう4.0は入手できそうもないですが・・・）
prefixを使えば1つのデータベースを、別のプログラムから使うことが可能です。 これはWPに限った話ではなく、データベースを使う物ならすべてに共通して言えます。 WPに関しては、インストールする際にprefixの設定が可能ですので、そこで2つめ以降のインストールの際に違う物を利用すればいいだけです。 （wp_っていうのが標準で設定されていますので、これを変更するだけです。）
>過去にMySQLをインストールした際には、このようなエラーは出なかったと思うのですが。 バージョン5.1.44でインストーラーが賢くなったようですね。 エラーの内容は文字通り、 "貴方のマシンはファイアーウォールが動いており、TCPポート3306を確認してください。 そのポートが開いてない場合、クライアントからこのサーバへの接続はできません。 ポート確認後Retryボタンを押してくだし。” とまあ要約するとこうなります。
skip-character-set-handshake でなく、 skip-character-set-client-handshake では？ そのために、キーワードエラー等が発生していませんか？ /tmp/mysql.sockは、MySQLサーバ起動中に一時的に作られるものだったように思います。
INSERT INTO test(A,B,C) SELECT id, "Bvalue", "Cvalue" FROM hoge WHERE piyo LIKE 'apple%' これでいけると思います。
もしそう言うことか可能ならMySQLだけでもいいですが、LinuxなりWindowsなりのOSをまずいれないと、MySQLのインストールが出来ません。 OS無しのMySQLというのも原理としてはあり得ますが、実際には存在しません。
sqlファイルを流し込む前に set names sjis; を実行してみてください。 コマンドプロンプトにて sqlを間違って入力した場合は 戻ることは不可能です。 メモ帳などのテキストエディタにあらかじめ記述したから、 コピー＆ペーストでコマンドプロンプトに貼りつければ、 間違った場合、 テキストエディタの内容を修正できるので 効率がいいかと思います。
＞REFERENCES `test`.`goods` のところを REFERENCES `goods` としてみては？
ArrayListは、1次元の記憶しか出来ません。 この場合、ジェネリックを使用しましょう。 参考になりそうなHPのURLを貼り付けましたので参考にしてください。 ○Visual Basic中学校　コレクション http://homepage1.nifty.com/rucio/main/dotnet/sho … ○ArrayListの使い方 http://homepage1.nifty.com/rucio/main/dotnet/Cla … ○ジェネリックの解説 http://naka.wankuma.com/site/kaisetu/dotnet/2.0_ … ○DataGridView表示方法　サンプル http://homepage1.nifty.com/rucio/main/dotnet/Sam …
経験的には・・・ プライマリーキーがautoincrementで管理されて、特殊なユニーク 管理をしていないのであればinsertにはロックは不要です。 どちらかといえば参照側のトランザクションの問題でしょう
第一に3.23はサポート終了バージョンなので自己解決できないなら 使用を中止すべきです。 今回の件については普通はサブクエリを使えば出来ますが、 3.23系ということでテンポラリをつかって処理します。 またnullは等号ではなくisで判断します。 create temporary table tableC select BID from tableB WHERE cr=40; SELECT * FROM tableA as A left join tableC as C on A.AID = C.BID WHERE sr =100 and BID is null;
mysqlにアクセスできる前提で、たとえばこんなかんじ。 $sql="SELECT name,sumai,birthday WHERE tosi=8"; $res=mysql_query($sql); $table=""; while($row = mysql_fetch_array($res,MYSQL_ASSOC)){ $table.="<tr><td>{$row["name"]}</td><td>{$row["sumai"]}</td><td>{$row["birthday"]}</td></tr>\n" } $table="<table>{$table}</table>"; print $table;
こんにちは。 ロリポップユーザではないので詳しいわけではないのですが、オフィシャルページを見た限り別のデータベースサーバが稼動しているようです。 サポート外となっていたので難しいかもしれませんが、データの復旧が出来ないか聞いてみては如何でしょうか。 データベースのデータもダンプなりでバックアップ取って置くことをお勧めします。
単機能としては難しいかもしれないですが Sennaなどで全文検索をすればいけるかもしれません。
JSPには詳しくないので正確な回答はできませんが MySQLにデータを挿入するならBLOBやBINARY系のデータで処理する ことになります。 インタフェースさえキチンとつくれば難しいことはないと思いますよ。 ただ、MySQLにバイナリデータを挿入することは無駄が多いだけで 検索性は落ちる一方なので、有効かどうかは別次元の話です
>想定は月間3千万PV数、店舗数1万店、ユーザー数100万人のショッピングサイトを想定しています。 月間3000万PVでは計算が合わないような気もしますが、 それだけの規模で、 商用レベル、という観点では非常に高額なシステムを 導入せざるを得ない（可用性も考慮して）規模ではありますので、 内容に関して詳しく書くことはしません。 質問者様のご要望として、ハードディスクの製品名ということですので、 以下にすぐに思いついたものを列記しておきます。 EMC CX4-120とか、 HP EVA 4400とか NEC i-storage D8-30とか FC接続での外部ストレージですね。結構高価ですが。 ホストもブレードをお勧めしたいところですね。
＞スレーブDB10台 このくらいの規模なってきて、ご自身で解決するスキルがないとなると ITコンサルを入れた方がいいです。 金額規模も2千万くらいは必要かも。 （個人でやればたしかにマシン込で数十万円ですむでしょうけど、 トラブルや保守まで考えたら今の質問内容からすると、まず 運用に耐えないと思いますので・・・）
（回答になってないかも・・・） 自分がデザインするなら、、、 アンケートテーブルを以下として作ります 　　性別(int), コメント(txt) （あと必要であれば、ユーザＩＤ、更新日時とか） アンケートした人の男女人数を数えたいときは 　　select 性別, count(*) as 件数 from アンケートテーブル コメントをみたいときは、 　　select distinct コメント from アンケートテーブル
「HOG」で検索した場合、12の「H*OGE*0AA」はヒットしますよね？「*OG」なんですから・・・ それと今回の件はできないことはないと思いますが、SQLでやるべきことですか？ とりあえず、正規表現でやる方法を参考までに >1 SELECT 'HOGE**1AA' REGEXP '[H*][O*][G*]'; SELECT 'H**1GE222' REGEXP '[H*][O*][G*]'; SELECT 'H*OGE*0AA' REGEXP '[H*][O*][G*]'; >2 SELECT 'HOGE**1AA' REGEXP '[H*][O*][G*][E*][3*][2*][1*][A*][A*]'; SELECT 'H**1GE222' REGEXP '[H*][O*][G*][E*][3*][2*][1*][A*][A*]'; SELECT 'H*OGE*0AA' REGEXP '[H*][O*][G*][E*][3*][2*][1*][A*][A*]'; >3 SELECT 'HOGE**1AA' REGEXP '[H*][1*][O*]'; SELECT 'H**1GE222' REGEXP '[H*][1*][O*]'; SELECT 'H*OGE*0AA' REGEXP '[H*][1*][O*]';
質問されてる事とエラーメッセージの辻褄がまったく合ってないですね。 エラーメッセージはSQL systaxに対することであり、 Queryを見る限り、私の環境Ver.5.0.75ではどんな値をいれてもマッチしなけば "Empty"が返ってくるだけです。 検証はMysql server上でされたのですか？ たまたま検証中にsystaxが間違っており、それと今回に件を混同されている ということではないですよね？ MysqlのVersionを表記されると何かでるかも知れません。
解決した一例です insert into user set user="hoge", password=password("hogepass"), host="localhost"; で、アカウントとパスワードを設定し、 select user, host, password from user; 確認して、すべて正しく設定されているのに、 それでもなお、using password: YES とエラーがでてしまっていて困っていたところで、ここにたどりつきました。 [以下解決した例] で、もう一度、rootでmysqlにログインし、 set password for hoge@localhost = password('hogepass'); と、パスワード設定をおこなったら、 掲題のエラーがでることなく、新ユーザで、mysqlが使えるようになりました。 なんでなのかは全く不明です。 とりあえず、解決できたので、次に踏んだ人用に、足跡残しておきます。
そのテーブルの構造がわからないですね areaに東京とか千葉とか・・・入っているのでしょうか？ そのときの何を集計するのでしょうか？ きちんと提示しないと回答がぶれますよ
>1.移行元でphpmyadminによりデータベースのエクスポート 文字コードをUTF-8で保存して。新しいデータベースにインポートすれば大丈夫だと思います。
ご提示のフローを精査したわけではないですが、 前者はSQL的には全文検索を設定することになるとおもいますが 集計などに劣るとおもいます。 後者はおそらく正規化されたものを指しているのだと思うので 可能であれば後者の方がよいでしょう。 きちんとやるならrecipeとingredientというテーブルをつくって レシピと材料を別個で管理し、recipe_ingredientという 中間テーブルを作って、組み合わせを管理する方がよいでしょう。
CSVのデータは"123-123-1234"などのようにクォーテーションで くくってありますか？
DB::connect　の、DBクラスは、pearの古いDBクラスですか？ 最新のデータベース用クラスは、MDB2 を使う方がよいようです。 http://pear.php.net/manual/ja/package.database.m … あと、接続できるMySQLのversionが２つ同時にある時、 mysql.default_socketまたは、mysql.default_port　の設定で接続先を変更する必要があります。 もし、mysql_*** では、mysql4に、mysqli_*** では、mysql5に、といった接続切り分けが既にされてるならば、mysqli を使う方が、mysql5の拡張機能を存分に使えます。 phpinfo() で、mysqlの設定を御確認下さい。
>（１）の環境では登録エラーとなり 具体的なエラーの内容は、どんなものですか？ MySQLの文字コードの設定は、どうなっていますか？ また、SQL-MODEの設定はどうなっていますか？ MySQL 5.0からだと思いますが、SQL-MODEで仕様変更したものを昔の仕様で動かしたりだとか、いろいろな設定ができるようになっています。 STRICT_ALL_TABLES　や　STRICT_TRANS_TABLES　が有効になっていると、そんな動きの違いがあったような。。。 　
　「？」付きのＳＱＬは、prepareしてからexecuteする文に対して使用する構文です。？の部分は、パラメータです。つまり、prepareした後で、パラメータに必要な値をセットしてからexecuteを発行します。 　効率に関しては、先の方の回答の通りです。 　プログラムにＳＱＬ文が埋め込んであるのですから、多分、何度も何度も同じＳＱＬを発行するのでしょう。ＲＤＢＭＳは、このＳＱＬ文を受け取るたびに、ＳＱＬをコンパイルして、アクセス計画を生成してという作業をするので、コンパイル済み・アクセス計画生成済みというＳＱＬ文が使えるメリットは大きいです。 　もう一つ、大きなメリットがあります。 　それは、エラーチェックというか、パラメータチェックに関する部分です。 　ＳＱＬインジェクションという技術というか、ハッキング手法があります。これは、例えば、ホームページでフォームに入力された文字列をＳＱＬに渡して検索などに使用する際に発生します。 　"SELECT name FROM category WHERE id=" + id_field なんて形でＳＱＬ文を作る時は、id_fieldに何が入っているかを必ず事前にチェックしなければなりません。例えば、id_fieldに、「50;DELETE FROM category」なんて値が入っていたら、どうなると思いますか？サーバーは、二つの文章が同時にexecuteされたものと解釈し、素直にカテゴリーテーブルの全データを抹消します。 　これは、ごく単純なパターンです。でも、威力は絶大です。 　このため、人の入力が関わる総てのパラメータは完全にチェックする必要があります。 　ところで、このようなハッキングに使われる総てのパターンをすらすらと言えますか？どれだけの文字をエスケープすればよいか、ちゃんと漏れなくリストアップできますか？ 　まぁ、これが完全に出来る人は、そうそういません。 　パラメータを使用したＳＱＬの場合、パラメータに値を代入し使用する際にＲＤＢＭＳ側でこのようなパターンのチェックをちゃんとやって、必要なエスケープ処理を自前でやってくれます。（MySQLの場合、バージョンによっては、この為に設定が必要なようです。調べておいてください。確か、この機能がデフォルトではｏｆｆになっているバージョンが存在したと思います。） 　これにより、セキュリティーの面からも安心して利用できるようになります。（少なくとも、自分で作ったチェックルーチンより信用できるでしょう。） 　まぁ、こんな利点もありますと言うことで。 　一部を変数を用いて変化させる必要があるＳＱＬ文は、基本的には、preparを使用し、変数部分は？でパラメータを使用するのが基本的には良いと言うことです。
参考 http://dev.mysql.com/doc/refman/5.1/ja/storage-r … ただしMySQLでファイル自体を保存することは必ずしも効率がよいとは 言えません。 ファイル自体はストレージ上に保管し、その情報だけMySQLで管理する方が 良いと思います
文字化けはMysql clientにも左右されますので切り分けが必要です。 通常UTF8に設定されているMysql DBを例えばWindows XPの Command promptからMysql DBに接続してSQLを投げても 文字化けするのが普通です。なぜならXPの文字コードはShift_jisのはずだから。 Web上でみるとBrowserが判別するので問題ありません。 そこで、 >問題はサーバからテキストファイルにデータを落として このサーバはMysqlでデータはUTF8ですか？ 落とされたデータがUTF8でインポート先がMysqlでUTF8なら普通に インポートすれば問題ないはずです。
＞読みもデータとして入力しておかなければいけないでしょうか。 有名なところだとkakasiなどがありますが、必ずしも「正しい」読みを 返してもらえるものではありません。 SQLで処理をするのであれば、読み仮名のフィールドを用意するのが 賢明でしょう。
正規化すればよいのでは？ たとえばハッシュ保持テーブルをつくり id| text 1 | #aaa 2 | #bbb 3 | #aaa 4 | #aaa 4 | #bbb 4 | #ddd 6 | #ccc というデータをとっておいてcountすればよいでしょう
$resultを渡すのが間違っているような。 参考URL：http://search.goo.ne.jp/web.jsp?MT=php+mysql_ins …
A、B、a、bがいろんな意味に使われていて説明が上手く出来ていません。 もう少し具体例を挙げてもらう方がよいかもしれません。 リレーション条件をはっきりすればleft joinで処理するような気はしますが・・・
根本的な回答になっていなくて、すみません。 XAMPPの再インストールしても、データベースを残す方法です。 自分の環境では成功していますが、そちらの環境で成功するかは分かりませんので、 必ずバックアップは取ってください。 Windows版のXAMPPしか知らないのですけど、 データベースと言っても、MySQLも ただのファイルです。 xampp > mysql > data を、見ると、ご自分で作ったデータベース名のフォルダが並んでいるのが分かると思います。 自分は、そのフォルダごと コピーして、他のパソコンに持っていったりします。 特権は また設定しなきゃいけなかった気はしますが。
考え方だけ。 複数テーブルを結合した結果をソートしているんだから テンポラリが発生するのは当然。 そもそもorder by する必要があるのかどうか疑問？ ページングしたいならorderbyではない方法でランク付けして、 範囲を指定して処理すればよいでしょうし。 もしくは参照頻度が高くデータ更新が必ずしも高くない処理なら 結果を通常テーブルをつくっておいてそれにバルクで流し込みをして、 ソート用フィールドにindexを貼っておくとよいです。 ユーザーはデータ更新を任意のタイミングですることで、 完全なリアルタイムではないですが、非常に高速な仕組みになります。
WordPress 2.7対応「導入&カスタマイズ」実践ガイド―個人ブログも企業サイトも簡単&無料で構築できる! を最初に読みました。それからおのおの目的や力量に応じて読む本を選ばれたらよいと思います。
私の知識では、そういったことをするなら、市販の検索エンジンなどを考えます。 以前、PanaSearchという検索エンジンを使ったことがあります。 でも調べてみると、あいまい検索に関する機能の説明はありませんでした。なくなっているのかも。 調べてみると、PHPには標準でそういったものがそなわっているとか。 http://www.jamboree.jp/cms/archives/19/comment-p … また、あいまい単語テーブルのようなものを用意して、あいまいの組み合わせを全部登録しておき・・・とがんばれば自力で実装するのもできなくはないと思います。 いずれにせよ、商品になるほどのアルゴリズムになりますね。
＞パス名を指定して画像本体は別の場所ら呼び出す方法が速度が早い事がわかりました。 オーバーヘッドが大きいですから明らかにパス指定の方が有利だと 思いますよ。 (1)検索する・・・DBの容量が少ないほうが有利 (2)出力する・・・DBの容量が少ないほうが有利 (3)httpで出力する・・・DBでもパスでも同じ (4)キャッシュ・・・パスの方がやや有利 という感じでしょうか
あくまで推測ですが、 そのwebアプリの出来が悪く、エラー処理を表示する機能が実装されてなかった。 >データの新規入力、更新、検索なども行えていました。 サーバがハングする前にDBへの接続を確立していたため、 見た目上は新規入力、更新されるかもしれないが、 実際は裏でエラーになっている。 検索結果が表示さたのはcacheが効いていたためかもしれない。 補足 cacheが効いていた可能性は低いでしょう、サーバがハングした時間に実際 に検索出来ていたかは疑問
最初のリンクのマニュアル記載の通り、SQLEXCEPTIONを使えばいいのでは？
名前の長さ次第ですが、32bitPCなら9000万～1億くらいいけるかな？？ ってところです。
すでに、playersというテーブルがあるのに同名のテーブルを作成しようしているのでエラーになります。 show tables; などで、テーブルがあるか確認してください。 再度、作り直したい場合は、drop tableでplayersテーブルを削除してください。 ＃create tabreはcreate tableですよね
多分、MySQL 自体の管理の事を言っていると思うのですが... 違ったらその時はご指摘下さい。 私は、簡単な事だったら、CUI を使います。 テキストエディタで、SQL文を書いておいて、流す事で管理できますので、再度同じ事をすると金、同じSQL文の実行が簡単にできる事からそうしています。 複雑な事でしたら、phpMyAdmin なんかから使う事も有ります。面倒になったり誰かに教える時には、楽が出来ますからね。 どちらで管理しているってよりも状況が許せば、両方を併用してcase-by-caseで利用する。状況次第ですね。必ず、片方でって事はなくて、環境が違えば状況も変わってきますからね。
>idの値も入力したら空ではなくなりましたが、名前の部分が??になっていました。 文字コードの設定は、どうなっていますか？ >それと、idはauto_incrementにしてあるのに、何故idの値も入力しておかないとemptyだったんでしょうか。 auto_incrementを利用するには、null か 0を値として指定するか、値を格納しない方法になります。 今回の例では、 INSERT INTO sample4 (id,name,age,gender) VALUES (null,'加藤',20,0) のように、id列にnullか0を指定するか、 INSERT INTO sample4 (name,age,gender) VALUES ('加藤',20,0) のように、id列に値を入れないかです。 insert into 表名(列名リスト) values(値リスト) の構文では、列名リストと値リストは、指定順に列と値が対応付けられるので、当然、個数が一致している必要があり、一致していない場合は、MySQLからエラーで返ります。 insert into 表名 values(値リスト) と列名リストを省略した場合は、表のすべての列が指定されたと解釈され、値リストはすべての列分必要です。 MySQLでは、独自仕様として、 insert into 表名 set 列名=値[,・・・・] といった、列名と値の対応付けをupdate文のように指定する方法があります。
仮にtbl1sのid=2がsato式テニスだったとして select * from tbl1s left join tbl1s_tbl2s on tbl1s.id=tbl1_id left join tbl2s on tbl2s.id=tbl2_id where club like '%sato%' or name='sato' でヒットしますね。そういうことですか？
access_idをBIGINT unsignedにすると、18446744073709551615までなら取れます。 一日100万アクセスとして500億年持つので、何とかなると思います。 ファイルシステムの最大ファイルサイズが先に問題になるでしょうから、今のうちに64bitPCにしておくと吉ですね。
> プログラミングの詳しい人へ 別に詳しくありませんが、 > PNAME varchar, のところを PNAME varchar(n) --nは必要な文字数を指定してください に変えれば通るみたいですね。 create table PLAYERS ( PID char(4), PNAME varchar(20), primary key (PID) ); こんな感じです。
外部キー制約にひっかかってます。 テーブルmessageに当該ユーザに紐付くデータが存在しているのに、ユーザを削除しようとして怒られてます。 削除手順を確認してみては。 参考URL：http://www.atmarkit.co.jp/flinux/rensai/mysql5_0 …
すでにMySQLの質問から逸脱しているのでここでは回答しかねますが パーミッションはLinuxの基本なのできちんと理解した方がよいですね。 パーミッション、グループ、ディレクトリの設定について一から やり直してみてください
>f1が2,4,7のものを残したい この場合、f1=6のデータは残しますか？残しませんか？ とりあえずフロー的にはこんな感じで DELETE h0 FROM hoge AS h0 INNER JOIN ( SELECT f1 FROM hoge AS h1 INNER JOIN ( SELECT f3,f4,MAX(f2) AS max_f2 FROM hoge GROUP BY f3,f4 ) AS h2 ON h1.f3=h2.f3 AND h1.f4=h2.f4 AND h1.f2!=h2.max_f2 ) as temp USING(f1) これだと、f1=2,4,6,7が残ります
補足要求します。 １．ACCESSから、書き出した時の文字コードは、utf8にきちんと指定したのかとか、 ACCESSのことはよく知らないが、sjisでしか出力できないなら、一旦csvファイルに書き出して、mysqlimportに--default-character-set=sjis を指定して読み込ませるとか必要かも。 ２．ODBC経由の詳細は？ MySQL側へ発行したSQL文は、どのように生成したのかとか
>「最新のもの」 何をもって「新しい」だとか「古い」だとか判定するのでしょうか？ 行を一意に識別するキーは、何ですか？ 列名から推察するに、年齢や身長などでソートしたいようですが、それらが同じ値の複数行があった場合は、どのように扱うのでしょうか？ MySQLのバージョンも明記してください。 MySQL 4.0以前とMySQL 4.1以降で、サブクエリの実装など大きな機能差があります。
「PHPソースを確認したけど解決まで至らず困っております。」 で、そのソースは？
ストレージエンジンがMyISAMでいいなら、 auto_increment を primary keyの2番目の構成列とすることで、MySQL側に管理を任せられます。 http://dev.mysql.com/doc/refman/5.1/en/example-a …
手元にある書籍だとソフトバンクパブリッシングの 「MySQLによる最速RDBMS構築ガイド」に リプリケーションの設定が載っていますね。 ちょっと古い書籍だからもっと新しいものも出ているとは思いますが・・
mysqlをmysqld --skip-grant-tablesで起動してください。 パスワードなしでログインできます。 update mysql.user set password=password('root_password') where user='root'; でルートパスワードを設定してください。 もしこれで上手くいかない場合お使いのOS、Mysqlのヴァージョンを明記 してください。インストールが成功してない可能性があります。
replace関数を使えばいいのでは？ update a set name=replace(name,'1-6-104','1-6-103') where 検索条件
普通に考えれば、tbl1sのidではなくtbl1s_tbl2sのtbl1_idを抜く方が 現実的だと思います select distinct tbl1_id from tbl1s_tbl2s inner join tbl2s on tbl1s_tbl2s.tbl2_id=tbl2s.id and tbl2s.name='sato' どうしてもというのだったら冗長ですが select distinct tbl1s.id from tbl1s inner join tbl1s_tbl2s on tbl1s.id=tbl1s_tbl2s.tbl1_id inner join tbl2s on tbl1s_tbl2s.tbl2_id=tbl2s.id
これはホントにMySQLへの質問でしょうか？ 普通のSQLであればIDをキーにINNER JOINして、 cdateはbetweenで処理すればよいのでは？
/product/detail.php?id=XXXXX という情報だけでは、PHPを使用していることはわかりますが、 MySQLを使用しているかどうかまでは判断できませんね。 ただ、PHP+MySQLという組み合わせが流行っていることは確かです。 おそらく、LAMP環境の事を言っておられるのだと思いますので、 「LAMP環境」で検索してみてはいかがでしょうか？ ついでに、「LAPP環境」というのも検索してみると良いかもしれません。 現時点の質問のレベルから察するに、かなり初歩からスタートする必要があると思います。 まずは、全容を掴んでください。
テーブル定義書エクスポーター 参考URL：http://unicasoft.jp/tde/
せめてテーブル１にユニークなIDがあれば別ですが 今のままでは EEEEEE｜6000 EEEEEE｜6000 が同じデータなので、冗長な処理でしかできませんね。 ORDER BYでソートしたものに順位を振るのはナンセンスだと思います。 論点は２点。 １、同じデータは同じ順位でよいならIDはいらない SELECT ( SELECT COUNT(*)+1 FROM テーブル１ AS T2 WHERE T2.価格 < T1.価格 AND T2.商品名 = T1.商品名 ) AS 通番 ,`T1`.* FROM テーブル１ AS T1 ２、ユニークなidを振ってある場合は通し番号も可能 SELECT ( SELECT COUNT(*)+1 FROM テーブル１ AS T2 WHERE (T2.価格 < T1.価格 OR T2.価格 = T1.価格 AND T2.ID < T1.ID) AND T2.商品名 = T1.商品名 ) AS 通番 ,`T1`.* FROM テーブル１ AS T1
＞毎週月・水・木曜 10:00～12:00のデータが登録してあり、 ＞1/4 14:00 ～ 1/10 10:00 期間内に水曜の10～12字を包含しているので、この場合はフラグが たつのが正解ではないですか？ おそらくフローがまだ固まっていないのだとおもいます、 きちんと設計段階からコーディングをした方がよいですね
エラー内容を提示していただかなければ回答のしようがありません。 一般に以下の内容を記載したファイルを作成して、ちゃんとphpやMySQLが動作しているか確認するのが良いでしょう。 <?php phpinfo(); ?>
通常ターミナルソフトというものはホストにログインして使う ものであってMysqlサーバに直接接続するものではありません。 そう言う理由もしWindows7にXAMPPをインストールしたとすると、 ターミナルソフトはよい組み合わせとは言えません。 直接接続したければMysqlクライアントを使うべきです。 使用OS:Windows7ということでが、これはMysqlサーバが使用しているOS のことですか？それともMysqlクライアントが使用するOSですか？ 文字通りphpのphpmyadminというのもあります。これだと文字コード関係 の解決は早いかもしれないですね。
システムの多重化。 さらにはWebサーバとDBサーバを物理的に別々のサーバにする。 などいろいろ手はあるよ。
自動カラムは一つだけって書いてありますよね？ 別テーブルで処理するか、プライマリーキーを流用するとかで 処理してみては？
DOS画面でコマンドが認識されないのは、パスが通っていないからじゃないでしょうか。 myspqlの保存先を明示しと実行してみとはいかがですか？
この場合は 検索用テーブル id number x 1 x 2 x 3 x 5 x 10 y 1 y 7 ・・・ 的なデータの持ち方をするのが妥当です。 （もちろんきちんとインデックスを貼っておくこと） select * from tests inner join (selcet disctinct id from 検索用テーブル where number IN (1,2,3) ) using(id) のように処理をすればよいでしょう
なんとも言えませんが、とりあえず中間テーブルのようなものを つくって、indexを張る必要があるかもしれませんね。 create table hoge(id int NOT NULL,fname varchar(100),INDEX(id,fname)); insert into hoge select id,SUBSTRING_INDEX(url, '/',-1) FROM 元テーブル; select fname,count(*) FROM hoge group by fname;
>「allegro」という文字列を「アレグロ」と勝手に変換して検索してくれているのではないか？ それはありません。 ワイルドカードで日本語検索をする場合、キャラクターセットが まちがっていると誤爆することはあります。 mysqlのバージョンや設定によって状況は異なります。 なお、前方後方一致はSQLとしての効率は悪いので推奨されていません。
何をやりたいかイメージがわきません。 車テーブルと食べ物テーブルには直接的な連携がないはずなので アイテムテーブルで管理するメリットがないと思います。
$row['k_pvm']で出てくるのは結局文字列でしかないので date('d-m-Y', strtotime($row['k_pvm'])) 的な処理では？
groupは予約語なのでフィールド名に使うのはやめた方がいいですね まぁこういうインチキくさいのは得意なので、こうするといいでしょう。 set @pre="",@rank=1; create temporary table temp select i,@rank:=if(@pre=`group`,@rank+1,1) as no,@pre:=`group` as `group` from a_table order by no; replace a_table select i,`group`,no from temp 結局、mysqlのバージョンをあげるのが最良ということがわかると 思いますけど・・・
OracleだとCOUNT(distinct name) と記述できますが、MySQLはどうでしょう？
　極端な話をしましょう。「22:21:15 Dec. 20, 2009 PST」の直接的な型は文字列です。（もちろん、こんな話ではないことは百も承知です。） 　datetimeや、timestamp型の中身を直接見ると、浮動小数点の数値が入っているのが普通です。この数値の意味するところは、とある基準時間を基準として、該当の時刻まで、何日たったかを表示しています。（時分秒は、小数で表します。）（細かいことを言うと、この基準時間は、世界標準時で記録されています。） 　普通に、datetime型の欄をselect文等で表示すると、日本語で慣れ親しんだ、日付時刻の文字列で出てきますよね。これは、内部で、日本語形式で日本時間に自動的に変換して表示してくれているからです。 　今回は、米語形式で太平洋標準時（ＰＳＴとはそういう意味です。）に表記された文字列から、時刻型への代入が問題になっています。 　まぁ、日付時刻の表示は、国によって（下手すると、地方によって）ばらばらですから、この変換には、フォーマットをちゃんと指定できるオプションがあるものです。今回の場合は、次のようにします。 　STR_TO_DATE('22:21:15 Dec. 20, 2009', '%H:%M:%S %b %d, %Y') 　この式で、日付型が得られます。二つ目の引数が日付フォーマットです。各指定子の意味は、リファレンスを参照してください。これを使いこなせば、ほぼどんな形式で日付が書いてあっても日付型に出来るはずです。 　今回の問題には、実は、もう一つの問題があります。それは、時間が太平洋標準時（ＰＳＴ）で書かれている事です。そして、ここは、日本ですよね。当然時差があります。よって、データベースに格納する前に、 　set time_zone = '-8:00'; 　で、現在のセッションのタイムゾーンを変更しておく必要があります。でないと、時差の関係で、データがでたらめになってしまいます。 　詳細を調べたければ、「タイムゾーン」「日付関数」などの用語で検索してみると良いでしょう。 参考URL：http://dev.mysql.com/doc/refman/4.1/ja/date-and- …
あと、 MySQLにSQL文を送る際に、最初に set names utf8 をするとか
>のように書くとどうもうまくいきません。 「うまくいかない」といった漠然とした説明でなく、具体的なエラーメッセージ等を提示するようにしてください。 実機確認していませんが、インラインビューはこんな感じでは？ (select item_id,category_id,SUM(order_amount) as goukei from hametome_order GROUP BY item_id) AS o なお、MySQLでは上記の書き方でも文法エラーになりませんが、標準SQLや他の主要なRDBMSでは許されません。 →group byで指定していないcategory列を、select句で指定している。 >ORDER BY item_id item_idは複数の表、インラインビューに存在するので、i.item_id のように、どの表のものか指定する必要があります。
SELECT A.id,A.phone,B.name FROM テーブルA AS A LEFT JOIN テーブルB AS B ON phone LIKE CONCAT(Prefix,'%')
windows のphp + MySQL4.1以降の場合、接続したら set names utf8 を実行するのは、ほとんどお約束みたいなものなのですが、やってますか？ my.iniのclient設定は、phpのlibmysql.dllは対象外ですので。 http://www.mysql.gr.jp/frame/modules/bwiki/?FAQ# … phpmyadmin は私は使ったことがないけど、これを実行させるように設定が必要と思われます。
drop系など、全表を対象にすることは稀であったり、安易に実行すべきでないものは、どのRDBMSでも実装されていません。 こういった操作を効率的に実装する手段として、システムカタログ（ディクショナリなどと呼ぶRDBMSもある）からselect文で表名などを得て、SQLを文字列で組み立てて実行するといったことがよく行われます。 MySQLでも、MySQL 5.0から、標準SQL準拠の情報スキーマ（information_schema）が実装されています。 information_schemaのtables表を検索し、alter table文を文字列で生成して、実行するとよいでしょう。
＞「チカッパ！」では、MySQL／PHP／phpMyAdminの使い方のサポートはしないそうです。 正しくは、「技術的な部分は対応しないということです。つまり、レンタルサーバー屋でありまして、プログラム的な対応はレンタルサーバー屋には関係ありませんと言うことです。」 もう少し詳しく言えば、「MySQL／PHP／phpMyAdmin」の環境を提供しているだけです。 そして、この環境をユーザーがどう使うかはサーバー屋にはわかりませんし、ユーザーの勝手ですのでここまでサポートしていたら大変なことになります。 例えば、データーベース・PHPをブログのMTを目的ならサポート対応はレンタルサーバー会社でなくてプログラム提供先です。 こちらのユーザーフォーラムなり、質問するのが普通です。 情報検索サイトをご自身でプログラム化して運用したいと言うことですので、レンタルサーバーは全く関係ありません。 先ずは、基本的な勉強を強くお奨めします。 極端な例ですが、貴方は電化製品を作るのにドライバーや半田ごてがあります。 ですが、どこを修理したらよいのでしょうかと質問されているのと同じです。
ちょっとかんがえてみたんですが、こんな感じでもできます。 ただindexがあまり利かないので効率的ではないですね。 もう少しなにかあるかもしれません。 SELECT sum( ( rank_u <=3 ) * u_0 ) , sum( ( rank_s <=3 ) * s_0 ) FROM ( SELECT ( SELECT COUNT( * ) +1 FROM test AS t2 WHERE t2.u_0 > t1.u_0 ) AS rank_u, ( SELECT COUNT( * ) +1 FROM test AS t2 WHERE t2.s_0 > t1.s_0 ) AS rank_s, u_0, s_0 FROM test AS t1 ) AS SUB
横にデータをつなぐのはSQLの仕事ではありません。 PHP側で処理しましょう。 あとはこんな感じ <? $array=Array( "北海道"=>Array("札幌ラーメン横丁","函館公園") ,"京都府"=>Array("清水寺","金閣寺","嵐山") ); foreach($array as $key=>$datas){ print $key; foreach($datas as $num=>$val){ print " ".$val; } print "<br />\n"; } ?>
試していませんが、以下はどうでしょうか？ http://dev.mysql.com/doc/refman/5.1/ja/error-log … --log-warnings オプション、または log_warnings システム変数を使用すると、エラー ログの警告ロギングを制御できます。値を 1 (デフォルト) にすると、有効化し、0 にすると無効化します。値を 1 より大きな値にすると、中断した接続についてもエラー ログを記録します。詳細は、項B.1.2.10. 「Communication Errors and Aborted Connections」 を参照してください。 これ以上の詳細は公式にも記載はないようで、調べた方がいらっしゃいます。 http://d.hatena.ne.jp/mir/20090109/p1
UPDATE a INNER JOIN b ON a.id = b.id SET a.dat=b.dat でいけませんか？
yum コマンドでPostfixをインストールすると、依存関係の解消のためにパッケージ版のMySQLがインストールされます。(おそらく確認画面に出てくるはずです) そのため、既存のファイルが置き換わってしまったことが考えられます。 MySQLのバージョン等を気にされるのでしたら、 Postfixもソースからのインストールにする方法が考えられます。 デフォルトのDBが作成されていない状態で直接起動される場合は、 エラーになります。 現行のまま実行されるのでしたら、以下のコマンドでサービスを起動することができます。このときにデフォルトのDBが作成されます。 sudo /etc/init.d/mysqld start #私としては、パッケージ版で運用されることをお勧めします。
＞なぜ次のLEFT JOINした段階ではエラーが起こるのでしょうか？ ようは*を使うとエラーが検証しにくいということです。 きちんとコーディングする場合は*はまず使いません。 実際に個別に*の内容をみるとidが二つあったりするし、それを 結合するときに競合がでているように見受けられます
SQLの場合NULLは特別の意味をもつため、NULLがいいと思います。 カウントしたりするときに差が出ます というよりは・・・正規化して、メールアドレス管理テーブルでメールアドレスが あるものだけ管理すればいいような気もします
意図がよくわからないんですが。 WHERE (BETWEEN A AND B) AND ((A=80 AND B=170) OR (A=150 AND B=280) OR (A=150 AND B=400) OR (A=50 AND B=600)) 的な処理じゃないでしょうか？
C言語で、どれくらいやれてるのかによっては、紹介書籍レベルが全然違うので、あんまり回答が付かないようですね。 かくいう私も、perlで掲示板作成をやったあとにphpを知ったので、webで、phpの入門サイトでさわりを理解したらあとは、onlineのphpマニュアルでほとんどすませています。 http://jp.php.net/manual/ja/index.php どっちかというと、htmlやcss回りの方が、結構難物だったりします。phpからhtml用文字列出力になるので、最終的にブラウザ上の表示や動作は、htmlについての知識がないとおかしなことになってしまいがち。 MySQLについては、SQLにさわること自体が初めてなら、SQL入門系の書籍と、php+MySQLでサイト構築を扱ってる書籍とそれぞれあるといいかも。MySQLは、4.0までと、4.1以降では、多バイト文字の扱いや、サブクエリやtransactionが可能になったとか、かなり違うので、使う予定のversion で説明している書籍を探すとよいでしょう。 最近は、MySQLもonlineのマニュアルですませているので、持ってる本は５年は経ってるし、最近の本は解らなくてお役に立てず済みません。 http://dev.mysql.com/doc/refman/5.1/ja/index.html 大手の検索サイトがどのデータベースやプログラム言語を使ってるかは、外からはうかがい知れませんが、ここの掲示板システムもlogin.phpなどの拡張子があるのでphpで作っているようですし、phpで大規模システムも可能という証左だと思います
重複していた場合は、全て削除してしまってかまわない？ １個だけ残すとかないですか？ DELETE t FROM テーブル as t INNER JOIN ( SELECT hoge FROM テーブル GROUP BY hoge HAVING COUNT(hoge)>1) AS SUB USING( hoge)
＞UPDATE テーブル名 SET 新規カラム = 値 ＞WHERE (SELECT * FROM 同じテーブル名 WHERE 条件) 普通に UPDATE テーブル名 SET 新規カラム = 値 WHERE 条件 じゃないのですか？
＞そもそもできるんでしょうか？ test3をつくってidをauto_incrementで管理する test1,test2にINSERTするさいには INSERT INTO test3 (id) VALUES(NULL); としてから INSERT INTO t1 (id,data) VALUES(LAST_INSERT_ID(),"xxx"); とすればよいでしょう。 ちなみにオートインクリメントは連番で管理する仕組みではないので こんなことする意味があるかどうか疑問
今までの質問の経緯をみる限り、いろんな問題がありそうですね。 少なくともスキル的な問題はあると思いますので、一朝一夕に システムは組めないと思います
そもそもtimestampはそのデータの更新日時を収納しておく場所なので 使い方は最初から違います。 つまりtimestamp型で定義されたフィールドは、そのデータ項目の１か所でも 修正が入った場合は、自動でnowが入ります。 一方datetime型は単に日時を入れておくフィールドです
こんな感じでは？ SELECT id FROM tbl1 LEFT JOIN ( select tbl1_id,avg(tbl2.num) as average FROM tbl1_tbl2 INNER JOIN tbl2 ON tbl1_tbl2.tbl2_id=tbl2.id GROUP BY tbl1_id ) AS SUB ON tbl1.id=SUB.tbl1_id ORDER BY average DESC
先ほどの回答者 (orange1024) です. 訂正します．ごめんなさい 要点　cp932 と書いたのは、正しくは utf8 ＜訂正前＞ CREATE DATABASE `test9` DEFAULT CHARACTER SET cp932 COLLATE utf8_general_ci ＜訂正後＞ CREATE DATABASE `test9` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci
とりあえず、table定義が以下であるとして create table `city`(code char(4), name varchar(255)) create table `category`(code char(4), name varchar(255)) create table `info`(citycode char(4),catecode char(4), cc varchar(255), extrainfo text) select `info`.*, `city`.name as cityname, `category`.name as catename from `info` left join `city` on `info`.citycode = `city`.code left join `category` on `info`.catecode = `category`.code where `city`.name like '北%' 考え方：まず`info`について全情報をとりたいので、これをfrom句の最初に持ってくる 次に、他の２つをリンク、left join する（常に全部のtableをjoinして各codeに対応するnameも取り出す） この２つleft join したものを基本table として考えて、 さらに条件記述を、どのtableのカラムについてなのかを指定すればよい
アプリケーションベースのスワップ処理を、 「必要に応じてスワップする」という以外、知る必要がなぜあるのでしょうか？ 普通のアプリだってどうスワップするかなんて意識していないと思いますが・・・
思いつきで細かく確認していませんが。。。 MySQL以外のRDBMSは、使用しているでしょうか？ なぜこんなことを聞くかというと、RDBMSによっては、外部表やDATALINK等といった概念で、他のRDBMSの操作を可能にしているものもあります。そのRDBMSによってどこまで実装しているかですが、異なるDBサーバ、異なるRDBMSの表をJOINしたりできたりします。 つまりそういった機能を実装しているRDBMS上で、MySQLの表に対し外部表などとして定義し、そのRDBMS経由で操作するといった方法です。 外部表やDATALINKは、SQL99で標準SQLに入ったと記憶していますが、先行して実装しているRDBMSでは、独自仕様が多いかも知れません。 運用や性能などの面で、外部表などでなく、MySQL間でレプリケーションした方がいいかもしれませんが、こんなこともできたりする程度のアドバイスですけどね。
同率がいた場合列記する SELECT 生徒番号,MAIN.学年, MAIN.組,MAIN.成績 FROM 成績テーブル AS MAIN INNER JOIN ( SELECT 学年, 組,MAX(成績) AS 成績 FROM 成績テーブル GROUP BY 学年, 組 ) AS SUB USING(学年,組,成績) 一つだけ抽出する（たとえば生徒番号が若い方） SELECT MIN(生徒番号) AS 生徒番号,MAIN.学年, MAIN.組,MAIN.成績 FROM 成績テーブル AS MAIN INNER JOIN ( SELECT 学年, 組,MAX(成績) AS 成績 FROM 成績テーブル GROUP BY 学年, 組 ) AS SUB USING(学年,組,成績) GROUP BY 学年,組
MySQLのメーリングリストの方でも、アドバイスをもらっているようですが、最新の情報はどれでしょうか？
phpに詳しくなく、MySQLにどういう要求が出るのか分かりませんが、MySQLのマニュアルのクエリキャッシュの説明で、次のような記述がありました。 http://dev.mysql.com/doc/refman/5.1/ja/query-cac … 「 注意：クエリ キャッシュは、サーバ サイドの準備されたステートメント (準備文) には使用できません。サーバ サイドの準備文がある場合には、クエリ キャッシュの条件を満たしません。 」 prepare + execute での実行は、対象外と言っているようです。 「え？なぜ？」とも思い、英語版ではどう書かれているのか確認してみました。 http://dev.mysql.com/doc/refman/5.1/en/query-cac … 「 Note As of MySQL 5.1.17, the query cache is used for prepared statements under the conditions described in Section 7.5.5.1, “How the Query Cache Operates”. Before 5.1.17, the query cache is not used for prepared statements. 」 意味は分かりますよね？
＞これをスマートに解決する方法はありますか？ 単純なはなし、こういう形式でデータを保持 user check A 1 A 3 A 5 B 1 B 2 C 1 C 3 これを SELECT user,count(*) as count FROM ほげ GROUP BY user で集計すればよいでしょう
＞ウイルスバスターをアンインストールしてからApacheのインストールを行う他ないんでしょうか？ なるべくアンインストールという選択肢は回避したいですねぇ。 案１． URLフィルタの機能を停止してみてはいかがでしょうか。 案２． Windows Virtual PC をインストールして、XP Mode 上で練習してみる。 Windows 7 Professional、Ultimate、または、Enterprise で利用できます。 http://www.microsoft.com/japan/windows/virtual-p … 案３． ウイルスバスターをアンインストールしてMicrosoft Security Essentials を入れる。 無料のウイルス対策ソフトです。 http://www.microsoft.com/Security_essentials/def …
>・Oracle Database 10g Express Edition >・SQL Server 2005 Express Edition 商用に比べれば機能は明らかに貧弱です。 マイクロソフトの方は詳しくは知りませんが、 Oracle の場合は、DataGuard が使えないので、仕事向きには なりにくいだろうな。 この手のものは、一応開発者向けなので機能は使えても限定的だったりで、商用のもの比べれば明らかに貧弱です。 MySQL は、商用版とオープンソースがありますけど、商用版は分析とかサポートの強化なので、基本的な部分は、どちらも同じです。 MySQLは、標準でレプリケーションがあって、オープンソース版でもクラスター化も出来るのは、よろしいかも。 昔は、サブクエリーとか、外部キー結合とかに制限も色々あったけど、最近はずいぶん減りましたから。 ストレージエンジンを変更することで、データベースの使い方にあわせることも一応出来ますね。 ついでにオープンソースということなら、PostgreSQLという選択肢もありますが、こちらは機能が豊富という印象がありますね。
id は一意なんでしょ？ 一意だと仮定するなら、理論は以下の通りです。 (1)nameでグループ化する。 (2)グループ化した際のid は最小値（最初に出た方）とする。 (3)このidと一致するデータを抽出する。 SELECT A.* FROM table A INNER JOIN (SELECT name,MIN(id) uid FROM table GROUP BY name) B ON A.name=B.name AND A.id=B.uid
Oracleユーザなので多少異なるけど。 select user_id, item, count(*) from <現在のテーブルとやら> group by user_id, item order by user_id, item ;
>Noの01と03のYUSENを入れ替えなさい UPDATE hoge as h1,hoge as h2 SET h1.YUSEN=h2.YUSEN WHERE (h1.No='01' AND h2.No='03') OR (h1.No='03' AND h2.No='01');
ポート番号が他のアプリケーションと重なっているかもしれません。 xamppフォルダの中のxampp-portcheckをダブルクリックして調べてみてください。 パソコンが重くなるのがいやなら、コントロールパネルの管理ツールのサービスから余計なサービスを手動起動に切り替えて停止させてみてください。 起動しないということは、ファイヤウォールでブロックされていることとかはないですよね。
使い始めるまでに覚えることが少ない点だと思います。 MySQLはインストールしてPHPなどからアクセスするまでに (おすすめはしませんが)設定ファイルを一切編集しないで 済むはずです。 PostgreSQLでは少なくともpostgresql.confとpg_hba.confを 編集する必要があります。 データベースのバックアップを取ろうとして /var/lib/mysql と /var/lib/pgsql/data を見比べたときも、MySQLの方が単純で 「テーブルのデータはこれだ」というのが一目で分かるはずです。 MyISAMでオフラインであればそのままコピーもできます。 一方PostgreSQLは↓こんな感じなので 相当勉強しないと分からないと思います。 # ls /var/lib/pgsql/data/base/1 11429 11458 2607 2653 2670 2691 2833 3605 11431 11459 2608 2654 2673 2692 2834 3606 11433 11461 2609 2655 2674 2693 2835 3607 11434 11463 2610 2656 2675 2696 2836 3608 11436 1247 2611 2657 2678 2699 2837 3609 11438 1248 2612 2658 2679 2701 2838 3712 11439 1249 2613 2659 2680 2702 2839 3764 11441 1250 2614 2660 2681 2703 2840 3766 11443 1255 2615 2661 2682 2704 2841 3767 11444 1259 2616 2662 2683 2753 3501 PG_VERSION 11446 2600 2617 2663 2684 2754 3502 11448 2601 2618 2664 2685 2755 3503 11449 2602 2619 2665 2686 2756 3600 11451 2603 2620 2666 2687 2757 3601 11453 2604 2650 2667 2688 2830 3602 11454 2605 2651 2668 2689 2831 3603 11456 2606 2652 2669 2690 2832 3604 デフォルトがトランザクションなしのMyISAMストレージエンジン というのも、アプリケーション開発の敷居を下げています。 適当なSQLを書いてもデッドロックが発生することもありません。 PostgreSQLは真面目につくっていますから トランザクションなしなんて考えられません。 というように、MySQLは入口の敷居を下げるための工夫 というものがかなり行われています。 こうした敷居の低さが、各種PHPアプリケーションなどの 対応の手厚さにも繋がっていると思います。 もちろん仕事で使うのであれば、MySQLの場合でも 設定ファイルがデフォルトなんてありえないし、 バックアップ・リカバリなどの運用設計はしっかり行う必要があるし トランザクションをサポートしたInnoDBを使っていくことになります。 使い込んでいくほどに両者の差は小さくなっていきますが、 最初のとっかかり部分に違いがある、というのが私の意見です。
こんな感じですね SELECT main.id,name,kana,coalesce(sub2.count,0) as count FROM main LEFT JOIN (SELECT id,count(*) as count FROM sub2 GROUP BY id) sub2 ON sub2.id=main.id
単純に実行権限がないユーザーでphpmyAdminにログインしているのでは？
TABLE1とTABLE2の補完関係がわからないので答えがブレそうですね 条件 ・TABLE1とTABLE2のNoは常にユニークで、それぞれのテーブルに1対1でデータをもつ ということであれば、FROM TABLE1,TABLE2で処理します ・TABLE1を主に、TABLE2は不足データがあり、TABLE2のデータあるなしを 関係なくTABLE1の全件を取得するなら FROM TABLE1 LEFT JOIN TABLE2 ON TABLE1.No=TABLE2.No とすることになるでしょう。
ピボッドテーブルをつかってみるとよいでしょう create table ピボッドテーブル( ピボッドID int,ＪＴＢ INT,ＨＩＳ INT, ＫＮＴ INT ,ＨＮＫ INT,ＫＫＫ INT); insert into ピボッドテーブル (id,ＪＴＢ)values(11,1); insert into ピボッドテーブル (id,ＨＩＳ)values(12,1); insert into ピボッドテーブル (id,ＫＮＴ)values(13,1); insert into ピボッドテーブル (id,ＨＮＫ)values(14,1); insert into ピボッドテーブル (id,ＫＫＫ)values(15,1); 結果： SELECT SUM(ＪＴＢ*人数) AS ＪＴＢ ,SUM(ＨＩＳ*人数) AS ＨＩＳ ,SUM(ＫＮＴ*人数) AS ＫＮＴ ,SUM(ＨＮＫ*人数) AS ＨＮＫ ,SUM(ＫＫＫ*人数) AS ＫＫＫ FROM 予約テーブル INNER JOIN ピボッドテーブル ON エージェント = ピボッドID
回答ではなく申し訳ないのですが、私も全く同じ現象に悩まされているので投稿させていただきます。 私の場合は、ログインボタンを押下すると、php.iniで設定したsessionの格納ディレクトリにセッションが追加されるので、 「Internet Explorer ではこのページは表示できません」 という表示の後に、セッションを削除すると再度ログインフォームを表示させることが出来ます。 クッキー自体は、setcookieで値を格納した後にprint_rで$_COOKIEを展開させて確認する事ができ、 またセッションも問題なく格納されているため、 セッションとクッキーが原因なのか、そうでないのか、 他の原因があるのか、分からずにいます。 見当違いなことを述べてしまったかもしれませんが、どなたか対処方についてお心当たりのある方、アドバイスいただけないでしょうか。 また、質問者の方も、問題が解決されたようなことがあれば、解決策についてご教授願えないでしょうか。 勝手にお邪魔して申し訳ありません。 宜しくお願い致します。
ａ．ｎａｍｅ　　ｂ．ｎａｍｅ　背番号 ------------------------------------------------------------ 巨人　　　　　　小笠原　　　　３０ 巨人　　　　　　ラミレス　　　１０ 西武　　　　　　中島　　　　　３ 西武　　　　　　片岡　　　　　８ 求めているのは上記のような形でしょうか？ >テーブルを結合し、テーブルCにある >背番号をテーブルAid,テーブルBidを元に >sumしたいのですがうまくいきません。 この場合、データをsumする必要はありません。 [SQL] select 　　a.name 　　,b.name 　　,c.背番号 from 　　tableC　c 　　join　　tableA　a 　　on　　　a.id = c.tableAid 　　join　　tableB　b 　　on　　　b.id = c.tableBid 3テーブルの結合で躓いた…? って思っては見たものの結合条件はあっているから そうではなさそうですね。 もしかして3次元的な集計をしようとしているのでしょうか？ 補足情報を求めます。
sub2、sub3はどうやって絞り込みをするのかいまいちわかりませんが、 今回の件に限って言えば、テーブルの結合をせずに、それぞれをSQLで なげて、配列に取り込んでおけばよいように見えます。
RDBMSによっては、表や列の定義情報として、コメントを付けられるものがあります。 そういったRDBMSに接続できるDBクライアントでは、表名や列名でなく、コメントを表示できるといったものもあります。 SQLで扱うことになる表名や列名は英数字と一部の記号、表示等は日本語でのコメントを使うといったことも行われる場合があります。
とりあえず http://oshiete1.goo.ne.jp/qa1244588.html
＞曜日のテーブルは Sun Mon …のフィールドに0か1が入ります ＞複数選択を想定しており、以前まで1フィールドで処理していたものを ＞以前の質問で正規化するようアドバイス頂いていたもので… 必ずしも悪くはないと思いますが、正規化という意味では、今回提示したものが 正規化されたデータになります。 ＞直接説明してアドバイス貰えれば最高なんですが、、、何せ師匠が ＞いないもので いつでも一人で苦戦しております 質問内容が丸投げでなければフォローしますよ。 ちなみにわたしにも師匠はいませんし、専門的な学習はしたことありません。 ＞0時をまたいでの処理もあるため 0時をまたいだ処理の場合は、データを２つに分けた方がいいでしょう。 Aさんが月曜の23：00～ 火曜2：00なら ・Aさん-月曜-23:00-24:00 ・Aさん-火曜-00:00-2:00 となります。
調べてみました。 現在のデータの持ち方は「隣接リストモデル」といって、 SQL的には効率的なデータですが木構造を表現するには冗長すぎるようです。 このデータを入れ子構造モデルという形式に変換することで、 簡単に木構造を表示・集計することが可能です。 例）テーブルstack node lft rgt 116 223 345 4712 51013 689 71112 CREATE TABLE stack(node char(10),lft int,rgt int); INSERT INTO stack(node,lft,rgt) VALUES ('1', 1, 6), ('2', 2, 3), ('3', 4, 5), ('4', 7, 12), ('5', 10, 13), ('6', 8, 9), ('7', 11, 12); これを以下のSQLで可視化します。 SELECT CONCAT( REPEAT( "\t", COUNT( parent.node ) -1 ) , me.node ) AS list FROM stack AS me, stack AS parent WHERE me.lft BETWEEN parent.lft AND parent.rgt GROUP BY me.node ORDER BY me.lft; 肝心の隣接リストモデルから入れ子構造モデルへの変換プロセスですが プロシージャを使えばなんとか実現可能のようです。 以下に参考サイトをあげておきます。 （mysql用ではないのでちょっと難解かもしれませんけどね・・・） http://www.geocities.jp/mickindex/database/db_tr …
＞最新のデータのみを取得したい SELECT * FROM hoge WHERE (id,UpdateDate) IN (SELECT id,max(UpdateDate) FROM hoge GROUP BY id)
こういうことじゃない？ SELECT C>0 AS IS_EXIST FROM ( SELECT count( * ) AS C FROM テーブル WHERE ・・・・ ) AS DAMMY
ORDER BY と組み合わせて使えばよいのでは？ そもそも順序の保証されないSQLでORDER BY なしにLIMITするのは まずいと思いますが・・・
同順位がでたときに、繰り上げるか繰り下げるかで処理がことなります。 つまり、5のデータがあったとき3位が同順位だった場合、繰り下げなら「1,2,3,3,5」になり、繰り上げる場合は「1,2,3,3,4」となります。 仮にhogeテーブルに対して、普通に繰り下げる場合は SELECT (SELECT COUNT(*) +1 FROM hoge AS H2 WHERE H2.count < H1.count) AS RANK ,`H1`.* FROM hoge AS H1 となります。 これにWHERE id='A'とかつければよいでしょう。
ALTER TABLE `テーブル` DROP INDEX `インデックス1`,DROP INDEX `インデックス2`
ANDで条件追加はMySQLって出来ませんでしたっけ？ ちょっと現役から退いてしまっていて身近に試すことが出来ないのであってるのかわからないんですが… 多分、「idが20　かつ　stockが0より上」っていう条件にしたいのかと思ったんですが。 UPDATE item SET stock = stock - 1 WHERE id = 20 AND stock > 0; だとダメでしたっけ…。
よく考えたら、latin1ってMySQLの原産国（北欧）の文字コードですね。 --default-character-set=utf8にしてはいかがでしょうか。 中国語使っていてeuc-jpという時点で、既にutf8が使われているような気がしますが・・・
インストール方法は、rpmパッケージでのインストールでしょうか？ それとも、ソースからのコンパイルでしょうか？ ソースからのコンパイルの場合、デフォルトではInnoDBが有効な状態でコンパイルされません。configureを実行する際に、--with-plugins="innobase"とかのオプションをつけてInnoDBを有効にしているでしょうか？ 他にもいろいろと原因となるものはありますので、MySQLのエラーログ等に、なにか出力されてはいませんか？ 参考URL：http://dev.mysql.com/doc/mysql-sourcebuild-excer …
>高卒程度の英語力があれば問題ない。 俺、英語の成績が極端に悪い人間だったけどMySQL使えているよ。 英語の知識なんてこれっぽっちも必要ない。 (MySQLなら日本語ドキュメントも豊富ですから英語ドキュメント読むの希です。) 極端に複雑なSQLはその時はいいけどデバック時なメンテナンスの公立を悪くするから極力簡単/シンプルなSQLを使うようにしている。 でジェネレータ系のツール使えばSQLさほど詳しくなくても何とかなるものだよ。
http://www.ocn.ne.jp/hosting/service/mwpro2/03.h … 金払えばOCN側で設定やってくれるぞ。 素人が設定したシステムがセキュリティー的に問題を抱えたサーバができあがるだけ。
以下のような記述が見つかりました。 If called in a scalar context for a statement handle that has more than one column, it is undefined whether the driver will return the value of the first column or the last. So don't do that. Also, in a scalar context, an "undef" is returned if there are no more rows or if an error occurred. That "undef" can't be distinguished from an "undef" returned because the first field value was NULL. For these reasons you should exercise some caution if you use "selectrow_array" in a scalar context, or just don't do that. 要約すると、配列用だからスカラに入れるのは要注意！or 入れちゃダメ。 スカラに入れるならselectrow_arrayrefで、 　$ary_ref = $dbh->selectrow_arrayref($statement); ってしてね。 という事らしいです。 参考URL：http://blue21.ddo.jp/man/man2html.html?lang=en&c …
試してないけど、 AとBは一致するものだけを、 BはCになくても抽出だと、 こうかな。 SELECT A.* FROM A JOIN B ON A.COLUMN1 = B.COLUMN1 LEFT JOIN C ON B.COLUMN2 = C.COLUMN2 AND B.COLUMN3 = C.COLUMN3 AND A.COLUMN4 = C.COLUMN4
＞syslogに出力させる方法 一般的にはsyslogへの出力はloggerをつかうと思います。 しかし結局専用のlogをつくるのでsyslog経由にする意味があまりないように 思えるのですが・・・ （messagesに格納したいというわけじゃないのですよね？）
そのサーバーでは拡張子.phpがスクリプトファイルであると言う設定がなされていないのではないでしょうか。 例えば、Apacheでは、httpd.confに、 LoadModule php5_module なんとか AddType application/x-httpd-php .php とかの設定が必要になってくると思います。 これがないために、普通のファイルとしてダウンロードされるのだと思います。
言われて思い出しました。 私もダウンロードのボタンが消えてダウンロードできなくなった事があります。 その時はどのように解決したか覚えていませんが、もしクッキーが関係しているのであれば、こちらをご覧になってクッキーの設定を変更してみてください。 http://support.biglobe.ne.jp/settei/browser/win- … それでもうまくいかない場合は、クッキーやキャッシュなどを一度クリアしてみてどうなるかです。 http://support.biglobe.ne.jp/settei/browser/win- … ここでは一時ファイルだけですが、クッキーの削除もしてください。
そもそも・・・ A_mstにPrefecture_Cdがあるのですから埋め込む必要がないでしょう？ なんのために正規化しているかもう一度よく考え直したほうがよいのでは？
ちょっとチューニングをしてみましょう テーブル１，２，３の各Aフィールドにindex（もしくはプライマリ）を 設定してください。 そのうえで・・・ SELECT * FROM テーブル１ AS T1 LEFT JOIN `テーブル２` AS T2 ON T1.A=T2.A LEFT JOIN `テーブル３` AS T3 ON T1.A=T3.A WHERE T2.A IS NULL AND T3.A IS NULL でどうでしょう？
No.2のご回答にあるように、アプリの仕様によると思います。 追加、更新、削除、検索だけであるのなら、 No.1のご回答にあるように、１つのテーブルで十分だと思います。 共通非共通全項目を羅列し、科の属性を持たせる事で、 後はＰＨＰの仕事になると思います。
データの保存場所はmy.conf覗けばわかるはずだけど 俺自身データの移管でファイルそのものを直接持ってきてやったことが無いから何とも言えないけど 通常移管はSQLとしてエクスポートしてそれをインポートする手順が一般的だと思いますよ。
MySQLにはTRANSFORMが無いので、クロス集計はできません。 (1)KBNのとる値が決まっている。 (2)Accessにリンクできる。 上記、いずれかの場合は対応可能です。 (1)の場合の一例 SELECT A.ITEM1, MAX(CASE WHEN B.KBN=1 THEN B.CNT ELSE 0 END) KBN1, MAX(CASE WHEN B.KBN=2 THEN B.CNT ELSE 0 END) KBN2, MAX(CASE WHEN B.KBN=3 THEN B.CNT ELSE 0 END) KBN3 FROM A LEFT JOIN B ON A.ITEM1=B.ITEM1 GROUP BY A.ITEM1
使うCMSがなにか知らないけどCMSによっては「接頭語」をテーブルの頭に付けられるようになっている物(インストーラーで指定)があります。 それでわければいい。
＞ローカル部@ドメイン部のように、2つに分けたほうがセキュリティは高まるんでしょうか？ 繰り返しになりますが、SQLでセキュリティは高まりません。 ただ個人情報に対するアクセスをユーザー権限によって制限する 意図があるのであればテーブルは分けた方が管理しやすいかもしれません。 （実際にはミドルウェアレベルでやることなのでSQLではあまり 制御しないと思いますが）
文字コードは UTF-8 でいいのでしょうか。 PHP で INSERT したものを phpMyAdmin で正しく表示する事はできそうですが、コマンドプロンプトでは、たぶん、シフトＪＩＳしか表示できないと思うので、こちらは文字化けしてしまいます。 今、XAMPP 1.7.2 で試してみたのですが、設定は何も変更しないで、こんな感じのプログラムを実行してみると、PHP で実行したブラウザ内でも、phpMyAdmin でも文字化けしませんでした。 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <?php $mysql = mysql_connect("localhost","root",""); mysql_set_charset("utf8",$mysql); mysql_select_db("db_utf8",$mysql); $sql = "insert into tb1 (memo) values ('あいうえお')"; $query = mysql_query($sql,$mysql); $sql = "select memo from tb1"; $query = mysql_query($sql,$mysql); while ($row = mysql_fetch_assoc($query)){ echo $row["memo"]; } mysql_close($mysql); ?> ソース中、 「db_utf8」はデータベース名、 「tb1」はテーブル名、 「memo」は項目名で照合順序は「utf8_general_ci」です。 注意点は、 mysql_set_charset("utf8",$mysql); と、ソースを保存する時の文字コードが UTF-8 である事です。 もしかすると、今のプログラムはシフトＪＩＳで保存されているのではないでしょうか。 これですと、新しく追加するデータは問題ありませんが、今、すでにあるデータについては、保存されているデータが UTF-8 ではない可能性があるので PHP で読み込んでも文字化けを起こすと思います。 表示の際にコード変換すればいいのかも知れませんが、新しいデータとの整合性が失われます。
MySQLの仕様です。 以下のＵＲＬを参考にしてください。 http://variable.jp/?tag=case-sensitive
>MySQL環境では文字コードがujisで設定 MySQL環境って？ MySQLでは、バージョンにもよりますが、列毎、表毎、データベース毎などで文字コードを設定できます。 したがって、どのように設定するかです。
＞「趣味に野球がない人」だけ であればこんな感じ？ SELECT U.uid,U.user_name FROM ユーザ AS U LEFT JOIN 趣味 AS H ON U.uid=H.uid AND H.hno=1 WHERE H.hid IS NULL つまり、野球が趣味な人をLEFT JOIN して合致しない人を抽出する
あいまいすぎて回答のしようがありません。 もう少し具体的な例をあげて質問したほうがよいでしょう
RDBMSによって多少異なるかもしれませんが、こんな感じではいかがでしょう？ select DATA.title, count(COMMENT.c_id) from DATA left join COMMENT on DATA.d_id = COMMENT.d_id group by DATA.d_id, DATA.title order by DATA.d_id;
本当にこのデータ構造でやりたいならおそらくSQLらしくない 処理でやるしかないと思います。 テーブルの構造を変えていいなら工夫のしかたもあるでしょう。 たとえば各データに親のnode_idをもたせるとか・・・
正規化をしないとデータの不整合が発生する原因になります。 >以上のような項目を使って正規化をするならどのようにすればいいのでしょうか。 依存関係がはっきりしていないので、正規化以前の問題化と思われます。
>データの桁数が足りないため、 >フィールドの値は、0000-00-00 00:00:00になってしまいます。 そんなことないと思いますが・・・ ＞phpMyAdminで 自動的には00は付かないはずですが・・・ なにか勘違いがあるとは思いますがとりあえずPHPで整形するなら date("Y-m-d H:i:s",strtotime($str))で処理してみては？
そうですね。 私もよく使っているのですが、全機能を網羅して解説しているホームページなどありませんでした。 どなたも、データ管理やデータ操作に夢中で、そのものの操作については注目せず、気にもせずに使っている、気にもせずに使えている、そう言うツールなのでしょう。 エクスポートにしても、「あ、抜けた」「あ、戻せた」で簡単に済ませていて、うまくいかなかった時にだけ、調べたり、どこかへ質問したりしているのだと思います。 私はエクスポートで文字コードの変換がうまくいかなくて、いろんなチェックボックスを付けたり消したりして、そうなるとそのボックスの意味などわからないでやっているから余計におかしくなったり、チェックする組み合わせが影響していると考えると、何通りも試したりして、くたびれました。 せっかくの便利ツールも使い方がわからないと台無しです。 使っている人は多いと思うのに、解説が見つからないのは、みんな上級者で、ＳＱＬコマンドやＳＱＬ文を直接実行しているのではないかと思うのです。 phpMyAdminを習うのではなく、MySQLを習うべきであると。 phpMyAdminが何でもやっているように見えて、実は、ＳＱＬ文を発行しているだけなのでしょう。 諦めると言うわけではありませんが、知りたい事が発生するたびに、ひとつずつ、調べるしかないのかも知れません。
ん～？これってサブクエリいらないのでは？ SELECT DISTINCT A.* FROM テーブルA AS A INNER JOIN テーブルB AS B1 ON A.店舗ID=B1.店舗ID AND B1.品目コード=1 INNER JOIN テーブルB AS B2 ON A.店舗ID=B2.店舗ID AND B2.品目コード=2 INNER JOIN テーブルC AS C ON C.店舗ID=C.店舗ID AND C.支払い方法コード = 1
関連するかも知れない　質問番号：5370079　も未解決のままになっているようですが？ 言葉による説明　や　「・・・してる（はず or と思っている）」といった書き方でなく、何が事実で何が推測なのか、具体的にどういう指定をしていてどういう結果になっているのかを書かないと。 MySQLのSQLを実行できる環境で、show文を実行し、結果を教えてください。 (1)有効になっている文字コードの表示 show variables like '%char%' (2)表定義内容の表示 show create table 表名
このテーブルから販売品目がパソコンとビデオの店舗だけに絞り込むと、 A店が2回、B店/C店/D店が1回、E店が2回、F店が1回の結果が出ます。 この結果中に2回出てくる店舗が販売品目がパソコンとビデオの店舗に該当すると考えます。 select x.ID from ( select ID,販売品目 from table where 販売品目 in ( 'パソコン', 'ビデオ' ) ) x group by x.ID having count(*) = 2;
MySQLではcreate時にテーブル毎に文字コードを定義することができます。 ホスティングではmy.cnfは非公開となっていて変更できないのではないでしょうか…
質問番号：5375000 と同じ内容を質問しており、マルチポストになっています。どちらかを閉じるか、両方を閉じて、提示を求められている情報を明記するようにしてください。 MySQLのSQLを実行できる環境で、show文を実行し、結果を教えてください。 (1)有効になっている文字コードの表示 show variables like '%char%' (2)表定義内容の表示 show create table 表名 また、以下についても教えてください。 (1)検索条件で指定している列のデータ型 (2)前後の空白をどのように取り除いているのか (3)「完全一致」とは、「=」でかLIKEでか (4)検索条件なしで検索したら、想定通りのデータが格納されているか 「ｘｘしている」と自己判断するのでなく、他人が客観的に判断できるように、具体的なコード等を提示してください。
画像自体はDBに格納せず、パスのみを格納するということは、よく行われていることです。 画像自体をDBに格納するメリットとしては、下記のようなものがあります。 (1)バックアップ、リカバーなどを一元管理で行える。 (2)アクセス権限の管理を、一元化できる。 (3)トランザクションの利用により、関連するデータの整合性を保証できる。 (4)DBには管理情報が付加されたり、物理的に分割格納されるので、RDBMS経由でないと中身を見ても分からない。 SQLで操作する場合には排他制御など様々な処理が行われるため、単純なデータファイルの入出力であれば、OSのファイルシステムを直接使用した方が性能的には出せるでしょう。ただし、上述のDBに格納することのメリットがなくなり、デメリットになる点には注意してください。
INSERT INTO `HISTORY` (`COIN`) SELECT `RATE`*`POINT` FROM `USER`,`GAME` WHERE `UNIQUE` = xxx AND `GAME_NO` = yyy という１文でいけると思います
・画像、直のURLで確認できない ・500番台のエラー（http://www.fellow-ship.com/tech/httperr.html） この二つから、 WordPressのエラーではなく、サーバエラーではないでしょうか？ XAMPPなどのWeb開発環境を使い、ローカル環境で同じエラーが発生するかどうか一度試してみてください。
いまいちなんか意味がわかないのですが・・・ たんに表示したいだけなら $str=""; while($row = mysql_fetch_array($result)){ $str.=$str==""?"":","; $str.="Array({$row['date']},{$row['tensu']})"; } $str="Array({$str})"; print $str; みたいなやり方でも
LEFT JOINしてNULLをカウントするだけでよいのでは？
DATE型のフィールドに"年"や"月"などといった文字列を入力することは出来ません。DATE型のフィールドに入力可能なのは「YYYY-MM-DD HH:MM:SS」といった日付型のデータのみです。これに関してはORACLEやSQLサーバーなどの他のデータベースソフトでも同様です。どうしても文字列込みで入力したい場合はデータベースのフィールドを文字列型に変更してください。 ちなみに、何で「2009年10月09日（金)」という形式のまま入力したいのでしょうか？VB6.0でプログラムを作っているならデータベースからの読込時にFormat関数で体裁を整えれば良いのでは？他の言語で開発していたとしても同じような使い方が出来る関数とかプロパティがあると思うんですけど。
＞連結されません。 見た感じとくに問題なさそうので勘違いだと思いますが、 連結されないというのは LEFT(カラム1, 20) のデータのみが表示されるということでしょうか？ まずは英数字のみでやってみて、あとで日本語までチェックしてみては？ ちなみにLENGTHはバイト単位ですが、LEFTは文字単位です また、IFの最終引数はLEFTはいらないのでは？ 以下、変数を使った例 SET @HOGE:="123"; SELECT IF (LENGTH(@HOGE)>5, CONCAT(LEFT(@HOGE, 5),'...'), @HOGE) as comment 出力：123 SET @HOGE:="123456"; SELECT IF (LENGTH(@HOGE)>5, CONCAT(LEFT(@HOGE, 5),'...'), @HOGE) as comment 出力：12356... SET @HOGE:="あいうえおか"; SELECT IF (LENGTH(@HOGE)>5, CONCAT(LEFT(@HOGE, 5),'...'), @HOGE) as comment 出力：あいうえお...
母体データ件数、ヒットするデータ件数、ソート要否、どういう操作中心かなどにより大きく話が違ってきます。 また、ディレクトリの階層は何階層にもなり得て、そこで既に自己結合が発生するのでは？ また、オプティマイザなどは、MySQLのバージョンにより、話が全然違ってきます。
＞こちらはどこをどうしてよいのかさっぱりです。 ＞この二点をお願いします。 Ｑ＆Ａで書ききれるレベルを通り越してると思います。 1番の方も書いてますが、まず「上記を経たうえで・・・」を満たす必要が あるのではないでしょうか？ 基本が抑えられてないのに、質問だけが先走ってるように感じられます。 テキストやネットをまずは漁ってみてはどうでしょうか？ http://www.amazon.co.jp/s/ref=nb_ss?__mk_ja_JP=% … http://www.adamrocker.com/blog/104/php_mysql_sim …
こういうこと？ SELECT t1.名前,t1.住所コード,t2a.名称 AS 住所,t1.勤務地コード,t2b.名称 AS 勤務地 FROM table1 AS t1 INNER JOIN table2 AS t2a ON t2a.コード=t1.住所コード INNER JOIN table2 AS t2b ON t2b.コード=t1.勤務地コード
MySQL、phpMyAdminのバージョンは、何でしょうか？
＞T-USRには1,2,3を含んでいない SELECTはたんにテーブルにある値を表示するというものではない ということを理解した方がいいです。 SELECT 1+1; SELECT NOW(); など表現できます、この場合FROMさえいりません。 今回のケースだと、1,2,3はスタティックな値ですから、 SELECTのところに直ガキすれば問題ありません。
#1です。 InnoDB + AUTO_INCREMENt + LOAD DATA INFILE で オートクリメントのケースでバグ報告があったのを思い出しました。 http://bugs.mysql.com/bug.php?id=45960 ただ、そのケースは BULK INSERT時にオートインクリメントされる値が、大きく飛んでしまうというものであり、数値定数で格納する場合は該当しません。 数値定数を格納するようにだけしていて、オートクリメントはさせていないでしょう？ (1)MySQLのバージョン ・・・MySQL5とかでなく、MySQL 5.1.36といった番号まで。 (2)提示された表定義で、実際にテストしているか (3)提示された入力データで、実際にテストしているか ・・・auto_incrementを指定した列に、1以上の数値定数を必ず格納するように入力ファイルを作っているか？ (4)他に格納済データ、あるいは格納後に削除した行はないか (5)CREATE TABLE後、LOAD DATA INFILE文を何度か実行したり、エラーになったりしていないか (6)LOAD DATA INFILEの実行前後で、「SHOW CREATE TABLE tablename」による表定義情報の表示で、AUTO_INCREMENT=n の nの値は何になっているか
>character_set_server latin1 これがだめですね。 my.ini、my.cnfのどちらの設定ファイルを使っているか分かりませんが、[mysqld]での設定の問題です。 設定変更し、MySQLサーバを停止＆再起動して、再度、試してみてください。
テーブルにデータをinsertした時に必ずしもinsertした順番に 登録されている保障はありません。 なのでデータベースはselectしたときに全部のデータを チェックしないと条件のデータを取得できません。 indexを作るとinsertで登録した場所とは異なる場所に データをソートした形で登録されます。 今回の場合[id]+[insertしたデータのアドレス（場所）]です。 そうすると全てのデータを検索しなくても条件にマッチするデータを select出来るのでパフォーマンスがアップする可能性があります。 今回（age）を検索する場合、ageを使ったindexが無いので indexは使われなくて全件検索になると思います。 ----------------------- indexはデータと異なる場所に同じ情報を持ちます。 index項目を更新したり、insertした場合はindexの更新や追加・削除が 発生するので検索は早くなるかもしれないですが、更新・登録・削除は 遅くなります（気にならない程度です）
設定ファイル「config.inc.php」にパスフレーズが設定されていないための メッセージです。 設定ファイルに入力すれば出てこなくなります。 参考URL：http://www.la-nouveau.mydns.jp/wordpress/?p=99
考え方は２つ、 １つはランクは他のデータとの整合性ですから自分のデータに 書き込まずに、検索されるたびに計算して表示するのが妥当です。 もう一つは、そんなに更新頻度が高くないのであれば、 定期的にランク付け用のSQLを走らせて、スタティックな情報として 付加してやるということです。 （たとえば、日次処理でランクを更新するとか） ちなみにauto incrementは単にユニークなコードを発生させるのが 主要な機能で、rankをつけるにはあまり向いていないので、 それを前提にするのはやめた方がいいと思います。
文字列としてvarcharで入れるのが妥当かと。 もしくは、月と日を別々にintでいれるとか 1/1から59日目？ということで59といれておくとか・・・ （4年3回は3/1になるでしょうけど） 3/1といれておいて、なにか計算するときはその日から１日ひくとか まぁいろいろやり方はあると思います
intは問題外だとして、text型なら問題ないはず。 きちんとコーテーションでくくってINESERTしてますよね？
＞オススメの書籍など、もしあれば一例挙げて頂けると嬉しいです ラクダ本・・・とか言うとかっこいいところですが、私は読んだことはありません。 参考までに手元にあるMySQL関連の書籍だとこんなかんじ 1.「MySQL & PHP でつくるWebデータベース」 エーアイ出版刊 2002年 2.「MySQLによる最速RDBMS構築ガイド」ソフトバンクパブリッシング刊 2005年 3.「現場で使えるMySQL」翔泳社刊 2006年 ※実際のところ、購入当時の最新のもので、他にあまり選択肢が なかったため選んだので、今となってはだいぶ古いと思います。 ここ数年で丁寧でわかりやすい解説書がだいぶ増えたので、ご自身で 読みやすいものを探されることをお勧めします。 あとはWEBで最低限以下はみておいて損はないでしょう http://dev.mysql.com/doc/refman/4.1/ja/index.html http://www.mysql.gr.jp/ http://itpro.nikkeibp.co.jp/article/COLUMN/20060 …
こんにちは。参考ＵＲＬのページをご覧になってみて下さい。/etc/hosts.allowには許可ポートとして3306などが入っていますか。 > localhost 以外からの接続を受け付ける場合(windows の MySQL > QueryBrowser 等から接続)は TCP Wrapper を介した接続になる > ので hosts.allow に以下の記述が必要です。 ... > mysqld : 192.168.0.6 : allow また、参考ＵＲＬにも書かれていますが、my.conf内のbind-address指定も必要になるかと思います。 それから、御質問には、 > nmap localhostで「3306/tcp open mysql」となっていること。 とありますが、リモート接続の話ですので、localhostではなく該当するネットワークポートのインターフェースを指定してアクセスさせた方がいいでしょう。インターフェースはifconfigで見られます。 MySQLのログを見ながら試行して下さい。 参考URL：http://www.omakase.org/mysql.htm
SELECT u.id, CONCAT(p.name, u.addr01, u.addr02) AS addr FROM user as u INNER JOIN pref AS p ON u.pref_flg=p.id WHERE id = ? とか？
追加質問です ・「show engines」の結果を教えてください。 http://doruby.kbmj.com/hanafubuki_on_rails/20090 …
グループ化してください。 SELECT tableA.id, COUNT(tableB.id) AS `count` FROM tableA LEFT OUTER JOIN tableB ON tableA.id = tableB.id GROUP BY tableA.id
>where 個人コード =1 をどこに追加したらよい この場合、FROMで指示された別名k1テーブルにも INNER JOIN する（仮想）テーブル別名k2にも個人コードの フィールドがあるため、明示的にテーブル情報をつけてやればいいでしょう 付ける位置は単純にケツが妥当でしょう SELECT k1.個人コード,k2.名前,k1.日付, k1.金額 FROM 会費 AS k1 INNER JOIN (SELECT 個人コード,名前 FROM 個人 WHERE (個人コード, 履歴) IN (SELECT 個人コード,MAX(履歴) AS 履歴 FROM 個人 GROUP BY 個人コード) ) AS k2 ON k1.個人コード=k2.個人コード WHERE k1.個人コード=1
ALTER文で、変換は出来ますよ。 ALTER TABLE t1 ENGINE = InnoDB; その前に、"SHOW ENGINES"を実行してInnoDBが使えるか確認する必要があるとは思いますが・・・ 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/alter-tab …
>引用符が閉じていないとはどこのことかわかりません。 プログラムだけを追わずに、SQLを生成した後に、 echo "<br />■SQL : $sql<br />\n"; の1行を埋め込んで、ブラウザに表示されるSQLをみてみましょう。 どこかにクオーテーションが閉じていない場所がないですか？
> 以下のクエリを実行しました > select * from tb where like 'A101'; whereの後に列名が抜けてませんか？
普通にダンプして、インサートすれば問題ないのでは？
>お答えいただいた内容からは有益な情報はありませんでした。 そう思っているならそれで結構。 >InnoDBからしか使ったことが無いので でほかのは使わなかったの? MySQLにおいてはMyISAMがデフォルトにされているエンジンなんだけどね。 それとも人が構築した環境でなにも疑わずにInnoDBを使い続けたの? ではこちらから SeletメインのシステムにおいてInnoDBを利用する意味を知りたい。 是非是非教えてください。 まともなMySQLの解説書読めば多くの場合、各エンジンの説明載っているはずだと思うんですけどね。
自表や他表を利用したupdateやdeleteは、RDBMSによる仕様差が多い部分です。 MySQLの場合は、次のような書き方ができます。 （削除対象の表名は、他表との結合のためにも使うので、2箇所で出てきます） -- 例1 delete t1 from t1 inner join t2 on t1.c1=t2.c1 ; -- 例2 delete t1 from t1,t2 where t1.c1=t2.c1 ; -- 例3 delete from t1 using t1,t2 where t1.c1=t2.c1 ; http://dev.mysql.com/doc/refman/5.1/ja/delete.html
＞LIKE演算"%検索文字%" LIKEのインデックスが有効なのは、前方一致もしくは後方一致の いずれかですから、動くけどチューンアップできないよくある例です。 どんなデータ検索を想定しているのかわかりませんが、 場合によってはキーワードをスペースで分かち書きして 全文検索するなどなんらかの対応が必要かもしれません。
現に、コマンドでは応答がすぐに返ってくるとのことですし、 50000行のcsvをサーバのローカル内に生成することについては、 それほどボトルネックにはなっていないと思います。 むしろ、ブラウザダウンロードするファイルのサイズについてですが、 CSV各行100文字あったとして、ファイルサイズは約5Mほどになります。 実運用でどのくらいのファイルサイズになるのかわかりませんが、 当然、ブラウザからのダウンロードも ユーザーの環境によっては時間がかかるものになってしまうと思います。 ボトルネックはサーバ側WEBプログラムでのCSV作成ではなく 生成されたファイルをダウンロードする部分にあるような気がしています。 もしそうであった場合、シェルのキックに変更しても 実測時間は余り変わらないのではないでしょうか？ 現在のプログラムから 　A.CSVを生成するプログラムのみを実行して、所要時間を計測 　B.出来上がったファイルをサーバ上に配置し、 　　URLを直接CSVファイルに向けてダウンロードのみの所要時間を計測 といった2ステップを行ってみると、 原因が明確になると思います。 CSVを手に入れさせることが目的であれば、 　(1)コマンドでCSVを作成 　(2)出来上がったCSVをgzipで圧縮 　(3)zipをブラウザからダウンロード というプロセスを実現したほうがよいかもしれませんね。
括弧を入れてください。 WHERE (k like '%$serch%' or b like '%$serch%') AND cate='$cate'
どのような方法で、測定しているのでしょうか？ キャッシュ（データベースのI/Oバッファ、同じSQL実行時にSQL解析・実行計画作成時のオーバヘッドを抑止するクエリキャッシュ等）を利用できるような測定方法だと、1回目より2回目以降が早くなったりします。 >10万件程度レコードをもつ2つのテーブルに対し、下記のようなSQL文を実行 母体データが10万件として、ヒットするのは何件くらいなのでしょう？ 検索条件が省略されていますが、インデクスにより絞り込めるものになっているのでしょうか？ 念のために確認しますが、比較対象としているSQLは、どちらもまったく同じ結果になるものなのですよね？
MySQLだと文字列長はCHARACTER_LENGTH()でバイト長がLENGTH() のようです。 （バージョンによって差があるかもしれないので実機で確認してください） たとえば・・・ SELECT * FROM TABLE_A WHERE LENGTH(COL_A)!=CHARACTER_LENGTH(COL_A) みたいな逃げ方はできませんか？
訂正します。 select nayose_list.keyword,count(*) from test,nayose_list where test.name like concat('%',nayose_list.keyword,'%') group by nayose_list.keyword;
訂正。 こちらからの問いかけが、「<」が入って引用のようになってました。 >「項目」とは、表のことでしょうか？ ↓ 「項目」とは、表のことでしょうか？
#2は盲点でした。 たしかにそんな関数が追加になっていますね。 SELECT type, GROUP_CONCAT(DISTINCT CONCAT( name1,'-',name2 ) SEPARATOR ' ') FROM table_a GROUP BY type;
http://dev.mysql.com/downloads/connector/odbc/5. … ここからMYODBC 5.1をダウンロードして設定してみてください。 当方ではMYSQL 5.0の環境ですが、このドライバでDB側の文字コードが UTF-8ですがACCESS2003で正常に日本語が表示されています。
質問文をストレートに読みすぎてしまいましたねぇ ひとまずやりたいことは理解しましたー >携帯電話のアドレスがうまく取り出せないという情報を見た メアドかどうかの判別を行う完璧な正規表現は無いっていうやつ？？ （違うかな・・・） とりあえず今回の内容ですと、携帯とかに関わらず「<」と「>」の間の 値を取り出す正規表現がわかればいけるのでは？と思ったのですが 浅はかですかね（<>をガイドにすれば中身は関係ないので） http://noongoro.main.jp/note/note0050.html ↑「HTMLから、titleタグの中身を取り出すスクリプト」を見てみると <title></title>間の値の抽出に正規表現を用いており、これを <>の間の値として書き換えれば使えないかな？？と思ったわけです メアドの抜き出し以外にも方法はきっとあるとは思うのですが 私にはこれくらいしか思いつかなかったです 他に「これは！！」っていうレスがつくかもしれないので、しばらく 様子見してみてはいかがでしょう（私も参考にさせて頂きます）
せっかくインターネットを使っているのに 何故そんなことも調べずに聞くのか不思議でしゃーない・・・ http://ja.wikipedia.org/wiki/WordPress
－－－－－－－－－－－－－－－－－－－－－－－－－－ 項目Ａ（必須）［　　　　　　　　　　］ 項目Ｂ（必須）［　　　　　　　　　　］ 項目Ｃ（必須）［　　　　　　　　　　］ 項目Ｄ　　　　［　　　　　　　　　　］ 項目Ｅ　　　　［　　　　　　　　　　］ 項目Ｆ　　　　［　　　　　　　　　　］ 　　　　　　　　　　　　　　　　　　　　　　【検索】 －－－－－－－－－－－－－－－－－－－－－－－－－－ ↑　［　］はテキストボックス ↑　【　】はボタン たとえば、よくあるこんなフォームで検索するような 検索結果を得るイメージだとして話を進めます。 それぞれのテキストボックスには、項目Ａならname="textA" のように名前が割り当てます。 結果を取得するSQLを作成するときに sql = "" sql += ' select* '; sql += ' fromhoge_table '; // //必須入力項目であるA～Bは、必ず検索の対象とする。 // sql += ' whereCOLUMN_A like \'%' + request.getParameter('textA') + '%\' '; sql += ' andCOLUMN_B like \'%' + request.getParameter('textB') + '%\' '; sql += ' andCOLUMN_B like \'%' + request.getParameter('textC') + '%\' '; // //入力が必須でないD～Fは、文字の入力があった場合のみ検索条件に含める。 // if (request.getParameter('textD') == '') { sql += ' andCOLUMN_B like \'%' + request.getParameter('textD') + '%\' '; } if (request.getParameter('textE') == '') { sql += ' andCOLUMN_B like \'%' + request.getParameter('textE') + '%\' '; } if (request.getParameter('textF') == '') { sql += ' andCOLUMN_B like \'%' + request.getParameter('textF') + '%\' '; } とすることで実現できるのではないでしょうか？ もし設定が的外れでしたらすみません。 補足のご説明をお願いします。
SELECT replace( replace( trim( name ) , '　', '' ) , ' ', '' ) AS name_a, MIN(laptime) AS laptime FROM tyouhuku group by name_a ORDER BY laptime ASC
おそらく何もおかしなところはありません。 提示した結果になるようなSQLを書いています。 join, left join, right joinそれぞれの概念について よく調べてみる必要があるのではないかと。 下記のようなテーブルPREF,TEAMについて考えます。 ・テーブル PREF ＰＲＥＦ＿ＣＤ　　ＰＲＥＦ＿ＮＡＭＥ －－－－－－－－－－－－－－－－－－－－－－ １　　　　　　　　大阪 ２　　　　　　　　東京 ３　　　　　　　　広島 ４　　　　　　　　沖縄 ・テーブル TEAM ＴＥＡＭ＿ＣＤ　　ＰＲＥＦ＿ＣＤ　　ＴＥＡＭ＿ＮＡＭＥ －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ １　　　　　　　　１　　　　　　　　タイガース ２　　　　　　　　２　　　　　　　　スワドーズ ３　　　　　　　　２　　　　　　　　ジャイアンツ ４　　　　　　　　３　　　　　　　　カープ ５　　　　　　　　５　　　　　　　　ドラゴンズ ６　　　　　　　　６　　　　　　　　ベイスターズ (1) join select A.PREF_CD,A.PREF_NAME,B.TEAM_CD,B.PREF_CD,B.TEAM_NAME from PREF A join TEAM B on B.PREF_CD = A.PREF_CD [結果] Ａ．ＰＲＥＦ＿ＣＤ　　Ａ．ＰＲＥＦ＿ＮＡＭＥ　　Ｂ．ＴＥＡＭ＿ＣＤ　　Ｂ．ＰＲＥＦ＿ＣＤ　　Ｂ．ＴＥＡＭ＿ＮＡＭＥ －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ １　　　　　　　　　　大阪　　　　　　　　　　　１　　　　　　　　　　１　　　　　　　　　　タイガース ２　　　　　　　　　　東京　　　　　　　　　　　２　　　　　　　　　　２　　　　　　　　　　スワローズ ２　　　　　　　　　　東京　　　　　　　　　　　３　　　　　　　　　　２　　　　　　　　　　ジャイアンツ ３　　　　　　　　　　広島　　　　　　　　　　　４　　　　　　　　　　３　　　　　　　　　　カープ (2) left join select A.PREF_CD,A.PREF_NAME,B.TEAM_CD,B.PREF_CD,B.TEAM_NAME from PREF A left join TEAM B on B.PREF_CD = A.PREF_CD [結果] Ａ．ＰＲＥＦ＿ＣＤ　　Ａ．ＰＲＥＦ＿ＮＡＭＥ　　Ｂ．ＴＥＡＭ＿ＣＤ　　Ｂ．ＰＲＥＦ＿ＣＤ　　Ｂ．ＴＥＡＭ＿ＮＡＭＥ －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ １　　　　　　　　　　大阪　　　　　　　　　　　１　　　　　　　　　　１　　　　　　　　　　タイガース ２　　　　　　　　　　東京　　　　　　　　　　　２　　　　　　　　　　２　　　　　　　　　　スワローズ ２　　　　　　　　　　東京　　　　　　　　　　　３　　　　　　　　　　２　　　　　　　　　　ジャイアンツ ３　　　　　　　　　　広島　　　　　　　　　　　４　　　　　　　　　　３　　　　　　　　　　カープ ４　　　　　　　　　　沖縄　　　　　　　　　　（ｎｕｌｌ）　　　　　（ｎｕｌｌ）　　　　　（ｎｕｌｌ） (3) right join select A.PREF_CD,A.PREF_NAME,B.TEAM_CD,B.PREF_CD,B.TEAM_NAME from PREF A right join TEAM B on B.PREF_CD = A.PREF_CD [結果] Ａ．ＰＲＥＦ＿ＣＤ　　Ａ．ＰＲＥＦ＿ＮＡＭＥ　　Ｂ．ＴＥＡＭ＿ＣＤ　　Ｂ．ＰＲＥＦ＿ＣＤ　　Ｂ．ＴＥＡＭ＿ＮＡＭＥ －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ １　　　　　　　　　　大阪　　　　　　　　　　　１　　　　　　　　　　１　　　　　　　　　　タイガース ２　　　　　　　　　　東京　　　　　　　　　　　２　　　　　　　　　　２　　　　　　　　　　スワローズ ２　　　　　　　　　　東京　　　　　　　　　　　３　　　　　　　　　　２　　　　　　　　　　ジャイアンツ ３　　　　　　　　　　広島　　　　　　　　　　　４　　　　　　　　　　３　　　　　　　　　　カープ （ｎｕｌｌ）　　　　　（ｎｕｌｌ）　　　　　　　５　　　　　　　　　　５　　　　　　　　　　ドラゴンズ （ｎｕｌｌ）　　　　　（ｎｕｌｌ）　　　　　　　６　　　　　　　　　　６　　　　　　　　　　ベイスターズ (1)~(3)はそれぞれ、 (1)A join B on ~ 　　onで指定した条件に完全に一致するもののみを表示する。 (2)A left join B on ~ 　　「left join」の左側にあるテーブルはすべて表示した上で、 　　onで指定した条件に一致する右側のテーブルのレコードがあれば 　　その情報も付加して表示。 (2)A right join B on ~ 　　「right join」の右側にあるテーブルはすべて表示した上で、 　　onで指定した条件に一致する左側テーブルのレコードがあれば 　　その情報も付加して表示。 といったところです。
>Filemaker＋MySQL PHP+MySQLが定番。 個人的にはこのシステムの利用範囲によってはMySQLのライセンスもめんどくさいのでPostgreSQLを選びますね。 とりあえず Filemaker server側は PHP Site Assistantを使えば素早くサーバサイドのプログラムを作れるみたいですね。 http://www.filemaker.co.jp/products/fms/php_web_ … それに対してMySQLは自分で一から作る必要があります。 ただしPHPの各種フレームワークを使えば簡略化はできます。 >どうして２つのDBを組み合わせるのか理解ができませんでした。。。 サーバ側はMySQLでクライアント側はFilemakerでODBC側で読み込んでFilemakerが画面作成なんてとんちんかんな事をやらせたいのでは? その場合、Filemakerである必要もなくAccessでもいいね。
ACCESS VBAに限らず,一般的にはテキストから入力された値を受け取り、 SQLにセットする前にエスケープ文字自体をエスケープする、 という方法になると思います。 replace関数あたりを使うのがよいのではないでしょうか？ また、今回は既存のプログラムのようなので 全てを変更するのは厳しいかもしれませんが、 DAOもしくはADOのレコードセットを使ってデータの作成/更新を行うと このあたりのことは気にする必要は無かったと思います。
>XOOPS商用利用について plzxooの商用利用含めて(GPLのため)費用は発生しない。 ちなみに、plzxooはサービスじゃなくて ただのxoopsのモジュール。（サービスの意味理解して使おうぜw）
今回のケースだと勝率をあらかじめ計算しておかなくてもいけます。 サンプルデータ CREATE TABLE 成績 (id INT NOT NULL AUTO_INCREMENT,rank INT,win INT,lose INT,PRIMARY KEY ( `id` ) ); INSERT INTO 成績 (id,win,lose) VALUES (NULL,3,1),(NULL,6,2),(NULL,2,1),(NULL,1,1),(NULL,2,3),(NULL,2,2),(NULL,4,2); この場合の順位づけ SELECT id,(SELECT count(*)+1 FROM 成績 WHERE 成績.win / (成績.win+成績.lose) >S.win / (S.win+S.lose)) AS RANK,win,lose ,win/(win+lose) AS gb FROM 成績 AS S ORDER BY gb DESC
それなら、substrで2文字目以降を表示 は、どうですか？
置き換えたいときは、まず、その行を一意に特定するためのuniqueなカラムまたはindexがあることが前提で、それがあれば、replaceを指定すれば置き換えになります。 LOAD DATA LOCAL INFILE 'file_name.txt' REPLACE INTO TABLE tbl_name マニュアル参照 http://dev.mysql.com/doc/refman/5.1/ja/load-data …
echo date("Y年m月d日 H時i分",strtotime($time)); これじゃダメなんですか？？
イメージとしては [ユーザー] ┌──────┬─────┬────────┐ │ユーザー名　｜紹介者名　｜登録時刻　　　　｜ ├──────┼─────┼────────┤ │山田　　　　│(null)　　｜2009/08/01 12:23｜ │佐藤　　　　│山田　　　｜2009/08/02 23:56｜ │吉田　　　　│佐藤　　　｜2009/08/15 15:31｜ │田中　　　　│山田　　　｜2009/08/28 09:15｜ └──────┴─────┴────────┘ っていうテーブルがあるときに、 ┌──────┬─────┬────────┬───────┬────────┐ │ユーザー名　｜紹介者名　｜登録時刻　　　　｜紹介者の紹介者｜紹介者の登録時刻｜ ├──────┼─────┼────────┼───────┼────────┤ │山田　　　　│(null)　　｜2009/08/01 12:23｜(null)　　　　｜(null)　　　　　｜ │佐藤　　　　│山田　　　｜2009/08/02 23:56｜(null)　　　　｜2009/08/01 12:23｜ │吉田　　　　│佐藤　　　｜2009/08/15 15:31｜山田　　　　　｜2009/08/02 23:56｜ │田中　　　　│山田　　　｜2009/08/28 09:15｜(null)　　　　｜2009/08/01 12:23｜ └──────┴─────┴────────┴───────┴────────┘ こんなのがほしいってことですかね？ 上記のイメージで正しければ、 質問のURLに掲載された質問の答えは select 　　A.ユーザー名 　　,A.紹介者名 　　,A.登録時刻 　　,B.紹介者名　as '紹介者の紹介者' 　　,B.登録時刻　as '紹介者の登録時刻' from 　　ユーザー　　　　　　A 　　left join　ユーザー B 　　on　　　　　B.ユーザー名 = A.紹介者名 ではないでしょうか。 from 　　ユーザー　　　　　　A 　　left join　ユーザー B 　　on　　　　　B.ユーザー名 = A.紹介者名 この部分を、1行で書き直してちょっと加工すると 　　(ユーザー　A) left join (ユーザー B) となります。 left join の意味としては、 『左側のテーブルのレコードは全部表示しつつ、 　右側のテーブルは条件(on)にあうレコードがあればくっつける』 といった感じです。 とりあえず、想定しているイメージが異なるかもしれないので いったんここで回答をきっておきますね^^
SELECT * FROM B INNER JOIN A ON A.紹介者フィールド=B.BB AND AA = '$AAA' みたいな感じだと思うのだけど、あとはカラムの構成によります
具体的な操作方法が不明なので、何ともいえませんが。。。 エンジンをInnoDBにして、トランザクションとして実行させればいいだけでは？
訂正です、こちらで試してください。 Delete from T_Rireki as T1 Where T1.HinBan = (select HinBan from (select HinBan, Max(Kakuteki) as M_Kakuteki from T_rireki) where M_Kakuteki = 0)
text型を使うのは、なるべく避けましょう。 長さの上限を予め決められるものは、varcharを使い、長さの上限は可能か限り短くしましょう。 text型は事前に長さの上限が決められないような場合に使いますが、物理的に複数のレコードに格納されたりするので、高い性能は出せません。また、text型を実装している多くのRDBMSでは、text型に対する操作に制限が設けれています。 >l_urlのtext型のuniqueは、どうやって作成したらいいのでしょうか？ text型に格納するようなものに、unique制約をつけようとすること自体、設計に問題があるのですけどね。 >ERROR 1170 (42000): BLOB/TEXT column 'l_url' used in key specification without a key length エラーメッセージの通りです。 MySQLではtext型を実装していますが、当初は定義や操作に多くの制限がありました。どのバージョンだったか忘れましたが、制限が一部緩和され、unque指定で「制約の対象にする長さ」を指定することが可能になりました。
私は新しいバージョンのphpmyadminでも古いバージョンのphpmyadminでも上手く行ったんですがね、勉強不足な故お役に立てず申し訳ないです(ノд｀；) 競合してるかどうかは良く分からないのですが、もしそうなら片方をアンインストールするか早い話使用ポートを変えるかでしょうね。 後新しいバージョンのphpmyadminを入れるなら一度MYSQLも綺麗にアンインストールしてしまって(アンインストール後インストールディレクトリやC:\Document and Settings\All Users\Application Data\MySQLなどのデータも消して)入れ直してみて方が良いかも知れません。
副問い合わせ　という手法を使います。 若干質問の例とは変更して、 [TABLE_HOGE] ------------- c1　　c2 ------------- A　　B D　　C B　　A C　　B ------------- というテーブルの中から 『c1が'B'でかつ相互データが存在するもの』 を検索します。 ゴールは [TABLE_HOGE] ------------- c1　　c2 ------------- A　　B　←目的レコードの相互データ（c1とc2が目的のレコードとは逆） D　　C B　　A　←目的のレコード C　　B ------------- だと思います。 /* ここSQL:1 */ select 　　* from 　　TABLE_HOGE where 　　c1 like 'B' 　　andc2 in ( 　　　　/* ここから SQL:2 */ 　　　　select 　　　　　　c1 　　　　from 　　　　　　TABLE_HOGE 　　　　where 　　　　　　c2 like 'B' 　　　　/* SQL:2 ここまで*/ 　　); SQL:2を単体で実行すると『c2が'B'であるデータのc1の値』を取得します。 結果は、元のテーブルの1行目(=A),4行目(=C)が返ってきますよね。 この取得した'A'と'C'を使って、SQL:1では「in」という方法を使って検索を行います。 「in (a,b,c,......)」は、「aまたはbまたはcまたは…にマッチする」という意味になります。 したがって、SQL:1をSQL:2の取得結果を元に書き直すと select 　* from 　HOGE_TABLE where 　c1 like 'B'　　　　/* c1が'B'で */ 　and ( 　　c2 like 'A' 　　or c2 like 'C' 　); となり、2行目の[ B A ]行が返されます。
http://oss.timedia.co.jp/show/MySQL%E6%97%A5%E6% … バッククォート
多少は調べてから聞こうな!www http://2php.jp/php/install_php_windows.html 参考URL：http://2php.jp/php/install_php_windows.html
利用環境(ＯＳ等）くらい書いたほうがよくないかい？ FreeBSD,Solaris,Linux,OSXのどれでもいいのか？ まさかWindowsじゃないな？！ｗｗｗ
「×」が出た時点からの説明になります。 （インストールウィザードはそのままで） [スタート]-[設定]-[コントロールパネル]-[サービス]をクリック。 [サービス]のなかに「MySQL」（バージョンによっては数字が付いてる）の項目があると思います。 MySQLのサービス名称があった場合、次にコマンドプロンプトを開きます。 そこで、下記のコマンドを打ちます。 sc delete MySQL（←先ほどのサービス名称を打ちます） OKでしたら、[サービス]を確認してMySQLのサービスが消えているかを確認してください。 それから、先ほどの「×」が出たインストールウィザードに戻ります。 「×」が出ているので、「Back」ボタンで前画面に戻り何もせず「Next」ボタンを押します。 これで通ると思いますが。 サービスを停止させるだけでもいけるかも・・・
GUIであればMySQL Administrator(http://dev.mysql.com/downloads/gui-tools/5.0.html)をインストールすればいいだけの話ですが・・・。 コマンドプロンプトとなると、telnetで接続してmysqlコマンドを叩くぐらいしか思いつきません。
正しいＳＱＬ文かどうかわかりませんが、 INSERT INTO tb1 ( SELECT B1,C1 FROM tb2,tb3 ) これで以下のような結果がでました。 ＭｙＳＱＬのバージョンは５です。 tb1の内容 カラム A1 A2 データ b1 c1 b1 c2 b2 c1 b2 c2 b3 c1 b3 c2 このような結果でよろしいのでしょうか。 tb2のB1には(b1,b2,b3) tb3のC1には(c1,c2) これだけしかデータがない状態でのテストです。 ハングアップしているそうですが、データ量が多すぎて時間がかかっていると言う事ではないのでしょうか。 tb2の３件×tb3の２件＝tb1に６件 これでもハングアップするのでしょうか。 ご質問文には(b1,b2,b3,,,,,,,,)とあるので、実際にあるかなりの量のデータでされているのかと思って聞いてみました。 Ａｃｃｅｓｓでもそうだと思いますが、ＵＮＩＯＮの出番はなさそうです。
ODBC経由でマイクロソフトのアクセスでよいかと。
MySQL 4.1でのunicodeの実装により、定義情報の管理方法（データ型など）が変わっているので、単純にコピーするだけではすまないと思いますよ。 日本MySQLユーザ会のFAQを参照してみてください。 http://www.mysql.gr.jp/ マニュアル MySQL 5.0 英文 http://dev.mysql.com/doc/refman/5.0/en/upgrade.h … MySQL 5.1日本語 http://dev.mysql.com/doc/refman/5.1/ja/upgrade.h …
ちょっとわかりにくかったので一部修正します ORDER BY X ASC,IF(X=2,start_time,0) ASC,start_time DESC
補足ですが、単純に２つ以上のソフトをインストール可能かということでしたら可能ですね。ディレクトリで切り分けを行うことやサブドメインを使いたい場合など注意することはいくつかありますが。
アドバイスが無駄になる可能性があるので、バージョンを明記してください。MySQL4やMySQL5といった書き方でなく、少なくともMySQL 4.0、4.1、5.0といったことを明記願います。
VBは使ったことがないので詳しいことはわかりません。すいません。 ちらっと調べた感じ、参考URLのスレッドで似たような現象を解決 しているようなので見てみるといいかもしれません。 この方は pg_Connect.ConnectionString に Extended Properties="UseDeclareFetch=1;" を追加する。 もしくは CursorLocation を Serverにしてみる などの方法で早くなっているようです。 参考URL：http://ml.postgresql.jp/pipermail/pgsql-jp/2006- …
サウンドカード＝コントロールパネル＞デバイスマネジャ＞サウンドデバイス（またはオーディオデバイスまたはマルチメディアデバイスなどいろいろ）。を確認下さい。 プロバイダ＝ADSLなどでは、PC内にはそのような情報は登録されませんので、わかりません。ダイヤルアップならコントロールパネル＞ダイヤルアップネットワーク。で接続名があればそれでわかりますが。 ところで、どうしてこのカテゴリーなのですか？。
＞http://localhost/自己のＩＰアドレス/phpmyadmin/ 何をしたいのかわかりませんが http://localhost/phpmyadmin/ か http://自己のＩＰアドレス/phpmyadmin/ じゃない？
XAMPPでのMySQLは、インストール時の設定そのままでは、my.iniでなくmy.cnfを使って起動されているのではなかったかな。。。 my.cnfは、拡張子が表示されずmy、短縮ダイアルと表示されているかも知れません。 OS名が不明ですが、Windows XPなら、コントロールパネルの管理ツールからサービスの一覧を表示させ、MySQLのサービスを選んで右クリックしてプロパティを確認すれば、MySQL起動時にどこを指定しているか分かるのでは？
こちらで見ると UTF-16 にエスケープされてるのですが、 意図した動作でしょうか？ 例： 人材を → ＆＃20154;＆＃26448;＆＃12434; MySQL 板としての確認項目としては、 ・MySQL の文字コードは？ 　テーブル毎やフィールド毎にも設定できるので注意です。 ・クライアントの文字コードは？ 　この場合 PHP プログラムです。 ・MySQL ⇔ クライアント間の文字コード変換は？ 　default-charset などに依存しているのか、set names で明示しているのか。 といったことだと思いますが、文字の場所的に MySQL から取得している 文字列のようにも思えませんので、どちらかというと PHP 的な ・プログラムの文字コードは何か？ ・header 関数で charset を出力しているか？ ・サーバーの設定などで暗黙のエスケープ処理が行われていないか？ といったことが考えられると思います。 携帯の場合 Shift_JIS でないといけないと言われているので MySQL の文字コードと PHP プログラムの文字コードをShift_JIS に統一して、 クエリの際には set names sjis か cp932、 レスポンスの際には header( ... charset=Shift_JIS);、 などとしてはいかがでしょうか。 しかし、Shift_JIS だと MySQL で別の文字化け対策が必要なので 私の場合は UTF-8 で統一しています。 UTF-8 で文字化けする携帯を私自身は見たことがないのですが、 商用サイトだとそういうアバウトなことではいけないのでしょうね。
>レンタルサーバーなもんで、「PEAR」が動作しないもんで。 PRARはPECLと違いPHPで書かれているライブラリですので 直接DLしてきて回答したファイルをアップして includeなりrequireで呼び出すパスを指定すれば問題なく 利用できます。 というかこの質問自体PHPの質問でMySQLの質問ではないよね。
>MySQLの方が歴史もあり安定性が高いイメージがありますが 歴史だけだったらPostgreSQLの方が長かったはずですよ。 >参考書はまずは10日で覚えるjsp/servletから取り掛かろうと思います！（MySql） オンラインのシステムを作るのですか? JSPが使えるサーバとなるとVPSか専用サーバがほとんどです。 ふと思ったのですが、DBに登録されるデータの容量っていうのはPCのハードディスクの容量によって決まるのでしょうか？ 上記の用にオンラインのシステムだとPCは関係ありません。 レンタルサーバ側でどれだけディスク容量が割り当てられているかです。
じゃ、こんな感じ？ SELECT * FROM hoge ORDER BY IF(NUMBER BETWEEN 1 AND 9 ,LPAD(NUMBER, 2, 0),NUMBER)
SELECT *,(name LIKE '$moji')+(tel = '$moji')*2 AS HIT FROM table WHERE name LIKE '$moji' OR tel = '$moji' ってするとHITには nameでヒットすると1、telでヒットすると2、両方でヒットすると3 がはいります。 あとはビット計算なので、もっと項目をふやすこともできるでしょう
Mysqlのバージョンによりますが、 選択クエリはビューで、更新、削除、追加クエリはストアドプロシージャで データベースに登録できるはずです。 詳細はマニュアルなりで調べてください。
正規表現としては#1さんの通りですが 普通はSQLでカンマ区切りでデータを保持するようなものは 効率が悪いので使いません。 別テーブルで当該IDに対して、11,28,33をそれぞれ別データとして もつことになると思います。 一度「正規化」について深く学習なさるとよろしいかと思います
たとえばこんな感じ UPDATE TB INNER JOIN TA ON TB.id=TA.id SET TB.data=TA.data;
SELECT HOLIDAY_NAME from m_holiday_fixation where start_year <= extract( year from '2004/04/29' ) and ( end_year >= extract( year from '2004/04/29' ) or end_year is null ) and cast( HOLIDAY_DATE as SIGNED INTEGER) = extract( month from '2004/04/29' ) * 100 + extract( day from '2004/04/29' );
カラム指定できるはずですが。以下の指定順。 LOAD DATA INFILE 'file.txt' INTO TABLE `t1` FIELDS TERMINATED BY ',' [LINES TERMINATED BY '\n\r' ] (column1, column2); マニュアル参照 http://dev.mysql.com/doc/refman/5.1/ja/load-data … 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/load-data …
OSが何か、明記して欲しいのですけどね。 XAMPPでは、初期状態ではmy.iniでなく、my.cnf(拡張子は表示されず、myとだけ表示されているかも知れない）が有効のようですけど、my.iniを参照するように設定変更したのでしょうか？ Windows XPであれば、「コントロールパネル」の「管理ツール」で「サービス」と辿り、MySQLのサービスを選択して右クリックし、defaults-fileに何を指定しているかといった確認方法があります。
ぜんぜんわかりません。 ** それでＣＧＩをサーバーに転送した場合は、プログラムファイルには実行する権限（パーミッション）を与えますが、ＣＧＩの入ったディレクトリのパーミッションは設定されましたか？ **
これじゃあ、だめですか。 select c.category_name,count(v.category) from video_category as c left join video as v on c.cate_id = v.category group by c.category_name order by c.cate_id;
mysql on linux http://www.atmarkit.co.jp/flinux/rensai/mysql02/ … とりあえず、show databaseなど状況確認をするためのSQLだけを発行し、insertやupdateやdeleteなどはDBに変更を加えるSQLは発行しないでください。 （show database;の結果に mysql は必ず有ります。これは関係ないです） で他の名前のDBが無かったりテーブルが存在しない場合は、今までのデータは消えたという事です。 セットアップ用のSQLを発行するか、セットアップ用のPHPスクリプトがあれば、それを実行して、新規にセットアップする以外にはないでしょう。 両方とも無ければ、ソースが読めないとお手上げです。
Initial Statement に「set names cp932」をセットするとどうなりますか。
＞このような使い方は間違っているのでしょうか。 間違ってる可能性がたかいです。 my.iniはmyslqdが起動時に参照するファイルですよね？ どこにおいても関係ないでしょう。 php.iniに関してもいろんなとこに置く意味がよくわかりません。 .htaccessで処理を変えたり、PHPのコード内で設定を変更・追加したり するものですね
失礼。勘違いしていました。「空きの番号を再利用」でなく、番号を連番で付け直したいと言っていたのですね。 #3で書いたLIMIT句ですが、次のような使い方をします。 SELECT * FROM t1 [WHERE 検索条件} ORDER BY id LIMIT m,n LIMIT m,nで、「m+1行目からn行を得る」という意味になります。
それって単にシェル画面の問題ですよね？ UNIX系のシェルならctrl+Lでいけませんか？
既に解決済かも知れませんが、ウイザード起動後、作成か削除かを選択する表示が出てきますよね？
CSVをINSERTタイプのSQL文にコンバートするプログラムを用意して バルクインサートするのがもっとも効率的だとおもいます
URLにアクセスできません。 それでいまいち意味がわかりません。
#1です。 and ComName like '%奥井組%' を付けるとエラーが出る、ということなら、文字コードが問題だったりするかもしれません。 例えば、以下のように英字にしたらエラーが出ますか？ and ComName like '%dummy%'
こんにちは。具体的な解決策ではないのですが、参考になればと思い回答させていただきます。 >ブログなどはどうやっているのでしょうか？ この部分の回答になりますが、一般的な手段としては、MySQLにはHTMLコードやスタイルを保存させるのではなく、実際のデータのみを登録させ、表示させる際にMySQLのデータベースからデータのみを抽出し、PHP内でHTMLやスタイルを適用させる形式になります。 このようにすることで、HTMLの特殊な処理等を省くことができるので、 後々編集等を管理ページ等で行う際に簡単です。 また、デザインの更新時などに、HTMLを変える必要性がある場合、HTMLやスタイルまで登録していたら、その全てを更新しなければならず大変な労力になると思います。 HTMLを直接データベースに入力する必要性がある場合もあるかもしれませんが、参考になれば幸いです。
Movable Typeは、一つのインストールで複数のブログを生成する事が可能です。 但し、管理画面は別個管理としたいと言うことでしょうか。 ※どのような事情か存じませんが、複数ブログを一つの管理画面で管理した方が楽かと思うのですが・・・。 どうしても、管理画面を別個管理したいならば、ディレクトリを仕切ってMovable Typeを複数インストールすれば良いです。 MySQLが一個でも大丈夫です。
FIELD-Xを別テーブルにワードごとに持つようにするのがRDBの本質(正規化といいます)ですが、今あるままでマッチするものを求めたいなら、次の手段となるでしょう。 select … where ( FIELD-X regexp '^19-29,|,19-29,|,19-29$' ) = 1 or ( FIELD-X regexp '^1-3,|,1-3,|,1-3$' ) = 1 or …; regexpの右の指定は正規表現で、FIELD-Xが「19-29,」で始まるか、「,19-29,」を含むか、「,19-29」で終わるなら1が返る式です。
データベースのレコード削除は delete from で始まるので、全ファイルを "delete from" もしくは "delete" で検索してみて 全部コメントアウトしてみてください。 それで削除されなくなれば、一つずつコメントアウトを戻していって 削除されればその行が当たりだと思います。
文法というか、ストアドプロシジャの使い方が目茶苦茶になっていますけど？ wikipediaで「create procedure」で検索すれば、MySQLやPostgreSQLのストアドプロシジャ例が検索できますので参考にしてください。
私も同じようにインストール出来なくて2日かけて検索していたので、お礼代わりに方法を書きます。 (1)Configuration Wizardを開き、Install As Windows Serviceのチェックをはずします。そうして最後までプロセスを続けて、Start serviceが半透明のままFinishします。 (2)再びWizardを開き通常通り最後までプロセスします。するとStart serviceは通るようになるのですが、Apply security settingsでエラーになります。 (3)Modifyに戻り、Currentを空欄にしてNewのパスワードだけいれて最後までプロセスします。 これでうまくいくはずです。
２０は多いかもしれませんね・・・ 個人的には分けます。 使用頻度の高いカラムとそうでないもので分けたほうが いい気もします。 ymmasayan様の書かれているように単一表のほうが速いのですが 容量が軽いに越したことはないです。 例えばログインフォームがあってその先に個人情報の画面があるのであれば ログインID、パスワードは別表にもってしまったほうが 速度は速くなります。 テーブルをオープンするということはそのデータすべてを一旦メモリに格納することですのでカラムの使用頻度に応じて切り分けることをオススメします。
rootの初期パスワード設定をしてください mysqladmin -u root password '新しいパスワード'
スカラサブクエリを使ってみてはどうでしょうか。 SELECT ( SELECT COUNT(DISTINCT B.KOUNYUU) FROM XXX B WHERE B.KOUNYUU <= A.KOUNYUU ) RNK ,A.ID ,A.NAME ,A.KOUNYUU FROM XXX A ランク付けはこんな感じで出来るので、 XXXの部分にmizutakiさんが作ったSQL文を カッコで囲んで入れてあげれば良いと思います。
「一意な値」の数　＝　ユニークインデックスでは、レコード件数と同じ ユニークでないインデックスでは、同一値のレコードをひっくるめて一件と数える　＝　group by index で表示したときのグループ数
並べ替えの為の別テーブルを作ってみてはどうでしょうか。 例えば(TORIDASI)テーブルを作って、 ID|SEQ 1|2 2|1 3|3 結合したらどうでしょうか。 select name from data inner join toridasi on data.id = toridasi.seq order by toridasi.id; name かきく あいう さしす となるのでは？ 任意に替えたいときはtoridasiテーブルをupdateしてください。
どこかでエラーが発生しているのだろうとは思うけど、 windows 用のphpmyadminしかわからないけど、作りは違わないと思うので、 navigation.phpが includeしてるソースを追っかけると、 './libraries/common.inc.php'　内で error_reporting(0)　ってなってますね。 ううむ、ここの　0を　一時　E_ALL　にしてエラーをみるのがよいかも。 あとは、なにかなあ？
table 定義例 create table `unix_table` (`utc_column` int(11) ); create table `datetime_table` (`datetime_column` datetime ); データ変換 insert into `unix_table` (`utc_column`) select UNIX_TIMESTAMP(`datetime_column`) from `datetime_table`
日本語マニュアル http://pear.php.net/manual/ja/package.database.m … fetchRow でループを回してもいいですし、 fetchAll を使えば、全データをまとめて取得できます。 一列だけなら、fetchColでも可。
条件式が足りません。つまりマイナス値もこの指定の範囲に入ってしまっています。 以下のように0以上という文をAND文で入れてみると上手くいくと思います。 0という数値は当日を含めるかどうかで変えてください。 ---------------------------------------------------------------- SELECT * FROM ○○ WHERE TO_DAYS( NOW( ) ) - TO_DAYS( hatsubai ) < 30 AND TO_DAYS( NOW( ) ) - TO_DAYS( hatsubai ) > 0 ORDER BY hatsubai DESC ----------------------------------------------------------------
>真ん中に入れたい場合は、どうすればいいのでしょうか？ MySQLのバージョンは何でしょうか？ マニュアルを見ましたか？ MySQLは、ALTER TABLEで列を追加時、列の追加位置を指定できます。 なぜこのようなことが可能かというと、MySQLは以下のような内部処理を行います。 (1)既存の定義＆変更内容を反映した新規の表を定義 (2)既存の表から、(1)で定義した表に全行をコピー。この時、定義変更の内容を反映 (3)既存の表を削除 (4)(1)、(2)で作成した表の名前を、元の表名に変更 >一度テーブルをdropして作り替える以外に方法がある場合 利用者側でdrop tableをやる必要はないですが、内部的にMySQLがやってしまうので注意が必要です。
MySQL V4とは、4.0なのか4.1以降のどちらなのでしょうか？ 4.0以前と4.1以降では、かなりの仕様変更や機能追加があります。 下記URLは日本MySQLユーザ会のHPですが、ここのFAQを参照してみてください。 http://www.mysql.gr.jp/
＞操作可能なプログラムまたはバッチ ファイルとして認識されていません。 ＞C:\Program Files\MySQL\MySQL Server 5.1\bin>mysqld-nt --skip mysqld-nt --skiant-tables スペルミスで無いとするなら、mysqld-nt.exe が置いてあるディレクトリが、そこではないのでしょう。 MySQLのシステムがインストールされているディレクトリの "bin" というディレクトリにmysqld-nt.exe が置いてあるので カレントディレクトリをそこにするか、パスを通すかして 実行すればよいと思います。 例えば、D:\MySQL\MySQL Server 5.1 にインストールしてあるとするなら、コマンドプロンプトで D: cd MySQL cd MySQL Server 5.1 cd bin mysqld-nt 以下略 とやればOK。 （cd MySQL\MySQL Server 5.1 とやってもいいけど） どこにあるのか分からない場合は、エクスプローラーでmysqld-nt.exe を検索してもいいし、フォルダをたどってもいいし、とりあえず、ファイルを探してみましょう。 コマンドプロンプトなら cd d: cd \ dir mysqld-nt.exe /s とやれば、見つかればディレクトリ名と一緒にファイル名が出てきます。（時間かかります）
phpMyAdminの文字コードの設定が、適切に行われていないのでは？ phpMyAdminからSQLを入力できる状態で、 show variables like '%char%' の結果を確認してみてください。
この手の質問の際には、使用するＤＢＭＳの他に、プログラム環境も示さないと適切な答えが返せません。例えば、ＰＨＰで組むとか、PERLでするとか、.net環境でのアクセスであるとか・・・これによって、構文は全く変わりますから・・・ 　一般論で言うと、そのような場合には、２つの方針があります。 　一つは、動的ＳＱＬと言います。プログラムでＳＱＬを書く時、文字列に、"select **** from **** where ++++"といった感じの値を代入し、これをデータベース側に引き渡す何らかの関数に渡しますよね。この文字列を作成する時に、ユーザーから入力された値を組み込んだ形で作ってやれば良いだけです。 　利点は、直裁的で至って簡単。欠点は、ＤＢＭＳの最適化が効率よく働けなくなること。よほど注意してユーザーから入力された値を検証しないと、ＳＱＬインジェクションの可能性がでてくることです。 　もう一つは、プリペーアードＳＱＬとか、パラメーターバインドなどと呼ばれる手法です。 　これに関しては、構文そのものが周辺環境に完全に依存します。上のような単語で検索してみれば事例は結構調べられると思います。 　考え方は、ＳＱＬ文の中で、ユーザーが入力する部分をパラメータ変数として記述し、ＳＱＬを実行する前にパラメータを代入した上でＳＱＬを実行するという手順になります。 　利点は、ＤＢＭＳが最適化を行いやすいこと。パラメータそのものはＳＱＬの一部として解釈されない（又は、システム側でチェック機能が働くため）、ＳＱＬインジェクションの可能性が、自分でチェックする時に比べて格段に下がることです。 　ちなみに、この次によく出る質問は、ユーザーが指定したカラムだけを出力するように・・・・というパターンです。 　これに対しては、前者の動的ＳＱＬで対処することになります。 　極論は、「ユーザーが入力したＳＱＬ文をそのまま実行する」となります。これをやっているのが、ＤＢＭＳに添付されているコマンドラインユーティリティーですね=^・。・^=
MySQLにも、time zone を変換する関数がありますので、datetime型と、time型またはvarchar型でtime zone情報を持たせておけば、以下のように取り出せるようですよ 関数　CONVERT_TZ(dt,from_tz,to_tz) 例 select CONVERT_TZ(`datetime_column`,`tz_column`,'JST') as jp_time ,* from `time_table`; マニュアルには「名前付きの時間帯を使用するには、時間帯テーブルが正確に設定されている必要があります。」 と有るので、time zoneは、'+9:00' のように指定する方が、MySQLの状態を選ばないようです。 計算時間については、どういった状態で取り出すことが多いかとか、件数とかによるので、なんとも。
ローカルホストからのアクセスが許可されてない・・・ ってことで、なにか無茶な設定をしたのでは？ OSがわからないのでちょっと対処方法が微妙ですが mysqladminコマンドをつかってルートでログインして mysqlデータベースにローカルホスト用のアカウントを作成し、 flush privileges \g しておく必要があるのではないでしょうか
carとmakerは１：１の関係と思いますが、carとiconは１：ｎの関係 だと思います。「GROUP BY A.id」これはcar１台にまとめるという 意味なので、ｎ個のiconのどれか１個しか結び付きません。 E.icon_flag AS icon_flg MAX(E.name) AS icon FROM ((((car A INNER JOIN maker B ON A.maker_id = B.id) INNER JOIN mission C ON A.mission_id = C.id) INNER JOIN repair D ON A.repair_id = D.id) INNER JOIN car_icon E ON A.id = E.car_id) INNER JOIN icon F ON E.icon_flag = F.id GROUP BY A.id,E.icon_flag 上記のように修正してください。 尚、GROUP BY で指定した項目以外は集計関数を使う必要があります。 makerやmissionも正しくはMAX(maker)などのように記述すべきです。 文法にウルサイSQLエンジンでは掲題のSQLは構文エラーです。
FIELDS OPTIONALLY ENCLOSED BY 指定を入れるのでは？ エクスポートした時は SELECT INTO OUTFILE を使ったのでは？ だとすると、オプションも合わせるようにすべきと思います。 http://dev.mysql.com/doc/refman/4.1/ja/load-data …
推察ですが、A表のB_ID_1列と、B_ID_2列にB表の対応する名前を表示 するという前提でお話します。 B_ID_1、B_ID_2 は別々のフィールドなので、各々に結合させます。 SELECT A.ID, A.B_ID_1,X.name AS ID_1_name, A.B_ID_2,Y.name AS ID_2_name FROM (A表 A INNER JOIN B表 X ON A.B_ID_1=X.ID) INNER JOIN B表 Y ON A.B_ID_2=Y.ID (1)使うテーブルはA表、B表×2なので、それぞれを識別するために 　別名（相関名という）を割り当てます。A表→A、B表（その１）→X 　B表（その２）→Y (2)最初の列はA表のIDなので、A.IDとなります。（SELECTの直後） (3)次はA表のB_ID_1と、対応するB表（その１）のnameです。 　列名として「ID_1_name」をAS句で割り当てます。（２行目） (4)最後はA表のB_ID_2と、対応するB表（その２）のnameです。 　列名として「ID_2_name」をAS句で割り当てます。（３行目） (5)結合式はA表のB_ID_1とB表（その１）のID、及びA表のB_ID_2と 　B表（その２）のIDです。（FROM句 以降の書き方を参照） 相関名.列名で、フィールドを特定しています。列名に同じものが 無ければ、修飾しなくても良いのですが、本例ではB表が２個ある ので、どちらの方のデータかを明示的に指示する必要があります。 尚、B_ID_1やB_ID_2の値がB表に無いデータは表示されません。 もし、B表に無くても表示させたい（nameの所はNullになる）場合は 予約語"INNER"を"LEFT"にしてください。
それはグループ化です。但し、「指定したカラム」以外のフィールドの 扱いをどうするか考えておく必要があります。最大値、最小値、平均値、 合計、カウント、・・・など SELECT 指定カラム1,指定カラム2,MAX(指定外カラム1),・・・ FROM テーブル GROUP BY 指定カラム1,指定カラム2
// ランダムパスワードを生成⇒表示。 print makePassword(PASSWORD_LEN) . "\n"; ここを // ランダムパスワードを生成⇒表示。 $main_pass = makePassword(PASSWORD_LEN); print $main_pass . "\n"; で<form>～</form>間に <INPUT type="hidden" name="main_pass" value="<?= $main_pass ?>"> にして後は受け側で他のテキストと同様に処理するのでどうでしょう？
>create table test(time timestamp, amount int); デフォルト値を設定せずにtimestamp型のフィールドをつくると ON UPDATE CURRENT_TIMESTAMP属性がつきます。 すなわち、データが更新するたびにその時間に合わされるということです。 create table test(time timestamp DEFAULT CURRENT_TIMESTAMP, amount int); とすればよいでしょう。 しかしこれは、timestamp型ではなくdatetime型にすればよい気が するのですが・・・
MySQLとPHPのバージョンが分かりませんが…。 クエリー送信時にエラーだと思いますので、 if($result){ echo "成功"; }else{ echo "失敗"; } の部分を if($result){ echo "成功"; }else{ echo mysql_error(); } のように書き換えてMySQLが吐き出しているであろうエラーメッセージを見てみてはどうでしょう？ mysql_error()関数は直近に実行されたMySQL操作のエラーメッセージを返します。
Movable Typeっていうのがどんなものかも知らないのですが、とりあえず普通のDBの場合、DBを作成(create　database)した「後」にmy.cnfの設定を変えてもダメで、文字セットを変えた上でcreate databaseしないとダメでした。
MySQLへは、何で接続しているのでしょう？ コマンドラインから、画像ファイルをMySQLに読み込むことに関しては、私もわかりませんが、 phpやjavaなどからMySQLへアクセスしているなら、それぞれのプログラムで、画像データを読み込んで、MySQL用のescape処理をして、文字列として、insert 文や、update文に入れます。MySQLのversionが4.1以降なら、渡すデータの文字コードとして、binery指定も必要です。 base64encode すれば、通常のテキスト文字と何ら関わらないので、データサイズが四倍になることを除けば、sql文に入れるのも面倒は無いでしょう。
文字列処理は、perlが結構早いですが、全くさわったことがないなら、perl文法を覚えるのがちょっと大変でしょう。 Cにしてもプログラム作成後コンパイルという作業が入るので、全く初めてなら、そこを覚えるのにまず手間取るかと。 最終的に「個々の変換速度が早い」かよりも、まず「すぐに少しでも取りかかれるか」を考えた方が結果的には、他のプログラムを覚える前に作業が終わってたりしそうな気もします。 VBAは、excel付属のものとかでしょうか？ excelでの作業に慣れていれば、 A.csvファイルをもう一つのシートに読み込んで、（ちょっと失念したけど、別ファイルに読み込む必要があるかもしれない、別ファイルのまま編集する方が楽かも） B.読み込んだデータに必要な処理を行う C.処理後の必要部分をcsvで付け替えたいファイル名で保存 D.　AとBで使用したシートを削除し（または、ファイルを閉じる）、次のcsvファイル読み込み E. A～Dをループさせる ではどうでしょうかね？ B部分が同じであれば、一連の処理を手動でやってみて、マクロ記録機能を使って、マクロに変換し、変数など使って整形して、さらに読み込みファイル指定部分を追加してループすれば、かなり楽ができるかとおもうけど。 B部分がかなり異なる場合(if分岐処理では複雑すぎる時)は、処理の異なるファイル毎にファイルを集めて、それぞれ処理プログラムを作ることになるかと。 他の言語を使うにしても、ファイル読み込み、データ編集、編集データ書き込みの順番は同じです。言語によって、読み書きに使うコマンド名や指定方法が違うとか、配列の扱いとか、各セルの情報に分解する（文字列のくくり記号やセル区切り記号のエスケープ処理）に結構手間がかかるとか、実行可能プログラムができるまでが大変です。 ＞csvファイルによるデータ処理が遅いのであれば、txtファイルに変更して処理 csvファイル自体が、テキストファイルですので、拡張子をtxtに変えても何ら変わるところはありません。
がると申します。 リファレンスをもう一度よくご覧下さい。 mysql_select_dbは「成功した場合に TRUE を、失敗した場合に FALSE を返します。 」ですので。 Boolean値で、trueまたはfalseが返ります。 (整数値としての)1とtrueは、まったくの別物ですので。 var_dumpという関数がありますので、そちらできちんと変数を「型を意識して」ご覧になってみて下さい。
新たに追加したデータが以前に登録したデータよりidが大きい ということに意味があります。 「連番」であるということはあまり意味がありません。 10を削除したら11になるべきです。 （削除しないで隠すほうがベターです） どうしても連番データがほしいのであれば、正規化して 別テーブルで管理してください。
とりあえず update TBL INNER JOIN TBL AS TBL2 set TBL.NAMAE='AAA',TBL.TOSHI=TBL2.TOSHI WHERE TBL.ID=1 AND TBL2.ID=2 mysql4では動くかどうか微妙ですが、たしかサポート終了のはず
update 文にするとこんな感じになるとは思いますが。 update TABLE-A set NO = LPAD(NO-1 , 3 , '0') where NO > 2 参考URL：http://homepage2.nifty.com/sak/w_sak3/doc/sysbrd …
たいていのソフトはアンインストールしてもユーザーが作成した ファイルは残りませんか？
改行コード(MySQLはdefaultの行末コード\n)のせいで、末尾カラムに文字があると判断されて、カラムが数値型の場合は0に変換されてたりとか。 windowsでは特に、改行コード"\r\n"も指定が必要です。
>MySQLを再起動しstatusで確認したのですが、 「create table」 しました？ その設定は”デフォルト”の文字コードなので表を作り直さないと何回再起動してもすでに作成した表の文字コードは変わらないかと思います。
「release」は予約語です。「`release`」と書いたら動作します。 SELECT name FROM info WHERE `release` BETWEEN ...
ろくに触ったことがないので分かりませんが、 1186、2202は開いてますか？ 参考URLによると、 > 注:クラスタ マネジメント ノードのデフォルトのポートは 1186で、データ ノードのデフォルトのポートは 2202 です。 とあります。 参考URL：http://nekoit.blog37.fc2.com/blog-entry-57.html
＞countを0に戻した時、丁度別のパソコンからのcount+1 処理とかぶってしまい、 ＞0でなく前の数値＋1にセットし直されてしまうということは おっしゃっていることがよくわからないのですが、 0に戻す処理って、 UPDATE drink SET count=0 where name='beer' としますよね？ そのタイミングで、別の人がインクリメントすれば、 とうぜん数値は1になります、そうならないと逆に問題だと 思いますが・・・ どういう運用を考えているかにもよりますが・・・
LIMITをつかった処理はサブクエリなどでもサポートされていないかも。 一度テンポラリに落とした方がよいかもしれません。 プライマリキー（もしくはユニークキー)にidが設定されてとして CREATE TEMPORARY TABLE `ids` SELECT `id` FROM `mytable` WHERE `hoge` = 1 ORDER BY `foo` DESC LIMIT 10 , 20; DELETE FROM `mytable` WHERE `id` in (SELECT `id` FROM `ids`); なんて感じでどうでしょうか？
ヒントのつもりで出したのですが、うまく伝わってないようなので http://www.google.co.jp/search?q=OSX+MacPorts で、片っぱしからみてみてください。 見識が深まると思います。
一度こうしてみてください、それでも2147483647が表示されますか？ CREATE TABLE `hoge`(`data` VARCHAR(20)); INSERT INTO `hoge`(`data`) VALUES('4571170731101'); SELECT `data` FROM `hoge`;
#3の文言を、一部訂正します。 ＜訂正前＞ 母体データ件数が多いと、OFFSETで検索対象をスキップするのに大幅に性能劣化する ＜訂正後＞ 母体データ件数が多かったり、検索対象行が多いと、ORDER BYでのソート及びOFFSETで検索対象をスキップするのに大幅に性能劣化する
SELECT ITEMid, count( ITEMid ) AS itemcount FROM テーブル名 GROUP BY ITEMid ORDER BY itemcount DESC
個人情報を管理するだけであれば、SQLよりもむしろLDAP的な処理の 方が管理しやすいかもしれないですね。 今回の例だと欠席数を集計するところは意味があります。 もう少し発展的にたとえば成績を管理集計したりするのであれば より効果が高いです。 個人情報のテーブルについては →氏名、性別、生年月日、 など普遍的なものに関しては、一つのテーブルにまとめた方が 効率的です。 →クラス、出席番号、所属している部活名、担当委員 など、学年が変わったり、なんらかの理由で変わる可能性が高いものは 正規化しておいた方がよいでしょう。 →欠席数 など、時系列なデータにリンクするものは専用の管理テーブルを つかって集計する必要があります。
PHPと併用が前提であれば、MySQLに登録する際は数値として 登録する方がよいでしょう。 hit,numberをint、averageをdoubleとしておき INSERT INTO `test`.`baseball` (hit ,number ,average) VALUES (1, 3, COALESCE(hit/number,0)); なんてしておけばよいでしょう。 かりに0打数0安打の場合でもaverageは0になります 表示はphpになりますので、そちらでsprintfなどで処理してください
No.1です。すいません、フィールド名が違ってました。 no → ID に読み替えてください。 質問の意図に沿っているか分かりませんが。。
>環境はMYSQL 5.0です。 MySQL 5.0の後の番号(MySQL 5.0.xxのxx）は、何でしょうか？ >追加でMEDIUMBLOB型の項目を追加しました。 MySQLは、列の追加位置を指定できますが、一番最後に追加したのでしょうか？ >「ERROR 1064: You have an error in your SQL syntax. Check the ～中略～ >といった感じです。 >INSERT実行自体には問題がないため、 発生したエラーは、SQLの構文エラーと言われています。 「INSERT実行自体には問題がない」とは、どういう意味でしょうか？ >一度MYSQL5.0をアンインストール、再インストール後に初めからBLOB型を >含んだAテーブルCREATEを行い >再度同じようにPG実行でINSERTによるjpg画像の登録を行った なぜ、アンインストール＆再インストールをすることにしたのでしょうか？そういった作業が必要と思わせる、何らかのメッセージやマニュアル記述があったのでしょうか？ 再インストールの前後で、MySQLの設定は、何か違っているのでしょうか？ 提示された内容からだけでは、どこまでが事実確認できていて、どの部分が推測or試行錯誤の中で結果的に解決したのか、といったことが判断できません。
ありますよ．こちら． 参考URL：http://www.phpmyadmin.net/home_page/index.php
my.cnfにlog-binを追加、テーブルはInnoDBを使用（MyISAMではNG）。 MySQLではバイナリログと呼ばれますが、CentOSでは/var/lib/mysqlの中にあります。 ログの確認にはmysqlbinlogコマンドを使いますが、Windowsの事は知りません。
コストベースですが、（商用RDBMSに比べると）まだまだ発展途上です。 まず、ルールベース、コストベースは主にOrackeで使われている用語であり、他のRDBMSでは異なった用語が使われている場合が少なくありません。 したがって、Oracle以外のRDBMSの用語で、それらを探してもOracleとの比較といった記事が殆どだと思います。 ルールベース、コストベースという用語を知っていて、EXPLAINまで辿り着いているなら、ANALYZE TABLE文でコスト情報を収集するといった記載もすぐに見つけられると思うのですが。。。 逆にルールベースの採用を推測させる条件式の種類による優先度といった記載は、どこにもないと思います。
こんな感じ？ selct coalesce(t2.name,t1.name) as name from test_1 as t1 left join test_2 as t2 on t1.id=t2.test_1_id
>特定の日時をSELECT文で抽出する場合 状況がわかりませんが、インデックスはきちんとはっていますか？ あとはEXPLAINで状況を確認しつつチューニングしていく ながれだと思いますが・・・
インストーラでインストールしたものはフォルダの削除ではなくてコントロールパネルからアンインストールするのが普通です そうしないとレジストリキーなどにデータが残ったりします
>MySQLで配列を戻り値にすることはできるでしょうか？ 配列を独自仕様で実装しているRDBMSや、標準SQLでもSQL99で配列が入りましたが、MySQLでは未実装です。 また、複数行を受け取れるTABLE型といったものも、MySQLでは実装されていません。
MySQL側で打率を計算してカラムに格納することも可能ですが、 データベース側にそういうロジックを組み込むと いろいろ面倒だし管理も大変です。 この場合はPHP側であらかじめ打率を計算してから MySQLに入れたほうが簡単でしょう。
ageに索引がはってあるなら select * from test t1 where not exists ( select 1 from test t2 where t1.age > t2.age ) が効率的かも。
(1)テーブル名が一致してませんね load data 文 「order_line」 show create table 文 「order1」 (2)LOAD DATA 文がカンマ区切りなのに提示されているデータはTAB区切り。 (3)MAC OSXなのに行区切りに"\r\n" LOAD DATA INFILE '/yos-data/00_mscit/07_db/wk3-asg/order1.txt' INTO TABLE order_line FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n'; で試してみては？
＞2回目のときの$resで上書きされてしまいそうに思うのですが、 上書きさせています。 実際には、 $link=mysql_connect($host,$user,$pass); $query = "INSERT INTO `table_a` VALUES 10"; $res=mysql_query($query,$link); mysql_free_result($res); $query = "SELECT arrayset FROM `table_a` ORDER BY id DESC LIMIT 1"; $res=mysql_query($query,$link); mysql_free_result($res); mysql_close($link); とするのですが、そこは手抜きです。 再利用する予定がない結果＝$resはとっておいても仕方ないので 上書してもいいんじゃないですか？ （とくに今回の１回目の$resは出力があるわけでもないし）
プロ野球速報のように、その打席時点での最新の打率が 必要というなら、いろいろ工夫が必要ですが、 今回の場合は試合後に記録として保存するという話なので、 打率については、計算結果を持たせるのが効率的ですね。 なので(1)をお勧めします。
SQLのWHERE句にBINARYを付けたらどうでしょう。 アルファベットの大文字・小文字も区別するようになります。 「WHERE BINARY フィールド名="AAA　BBB"」てな感じ。
>自分なりに試した結果ですが以下のSQLでなんとか思うような値を取る事に成功 何度も同じことを書くのは不本意ですが、 IFNULL(B.price2, B.price1) as price0 の結果は、保証されませんよ？ product_idが同じdetailの行が5行あたとして、5行ともprice1の値、price2の値はそれぞれ同じではないのですよね？ もし同じなら、maxやminの意味がないし、値が異なるなら、MySQLは結果を保証していません。 http://dev.mysql.com/doc/refman/4.1/ja/group-by- … この独自仕様は、MySQL 5.0以降なら、使用しないようにもできます。 →MySQLの独自仕様で、「結果を保証できないのに、何も教えてくれずに実行されていた」ものが、標準SQL準拠で文法エラーになるようになる http://dev.mysql.com/doc/refman/5.1/ja/server-sq … >パフォーマンス的に問題等ってあるのでしょうか？ 同じ結果を得る関数を、不必要に何度も使用しているのですから、当然、オーバーヘッドになります。 それ以前に、現状で、性能を出せるようにインデクスなどを設計しているのでしょうか？？？ 質問のタイトルと質問内容が合わなくなってきているし、質問日時も古くなってきているので、一旦、この質問を閉じて再質問した方が、他の方からもアドバイスを得やすいのではないでしょうか？ その場合、私が補足要求したようなことを、予め書いてくれれば、無駄なやり取りをしなくてすみます。
current_timestampは標準SQL準拠、nowはMySQLなど一部のRDBMSの独自機能です。 したがって、MySQLしか使わないなら、どちらでも同じです。 もし、他のRDBMSも使用する可能性があるなら、DDLやDMLを標準SQL準拠の範囲で使っていれば、殆ど修正せずに使える可能性があります。 なお、日付や時刻に関する関数は、各RDBMSにより独自機能が多い部分ですし、timestamp型の扱い（default句の有無に関係なく、自動的に日時を入れる）自体がMySQLの独自仕様なので、他のRDBMSを使用する可能性がある場合は注意が必要です。
何をやりたいのか、いまいち分かりませんが。。。 >table_a内の最大のidのある行の、arraysetに含まれる値を取り出したい この文言が適切なら、MySQL 4.1以降ならサブクエリが使えます。 例えば、こんな感じ。 select arrayset from table_a where id=(select max(id) from table_a)
どちらに書き込んでも両方に反映させることが出来るようなレプリケーション構成というものも出来ますよ。(マルチマスタ構成) いろいろと注意点が多いので万人にはお勧めはしませんが・・・ http://dev.mysql.com/doc/refman/5.1/ja/replicati … もちろん、通常のレプリケーション構成でも、マスタとスタンバイの入れ替えは、いくつかの注意点を守れば簡単に出来ます。 ただ、マスタ側で障害が起きたときに、マスタの状態が確実にスレーブ側に反映されて同じデータになっている保障は無いので、注意してください (レプリケーションは非同期で実行されます)
いくつか間違いというか、誤解があるようです。 (1)MySQLでの外部キー制約は、InnoDBのみ 　→MySQLの実装上の制限 (2)子の外部キーは、親のprimary key（ユニークなキー） 　→そうでないなら、親を一意に決められない まず、子のtes2表は、InnoDBになっていないのでは？ show table status like 'tes%'; show create table tes2; で確認できます。明示指定しないと、MyISAMが過程されるはずです。 次に、tes1表のt1_col2は、主キーになっていません。 以下に定義＆テスト例を貼り付けておきます。 -- 存在したら削除 drop table if exists tes2; -- 削除等は、子の表を先に！ drop table if exists tes1; -- 表の定義 create table tes1 (t1_col1 int (4), t1_col2 varchar (10), primary key (t1_col2) -- 変更 ) engine=innodb; create table tes2 (t2_col1 int (4), t2_col2 varchar (10), t1_col2 varchar (10), primary key (t2_col1), foreign key (t1_col2) references tes1(t1_col2) -- 対応列の明示指定 on update cascade ) engine=innodb; -- 追加 -- 定義内容確認 show table status like 'tes%'; show create table tes2; -- テストデータ格納（親） insert into tes1 values (1,'upd1'), (2,'upd2'); -- テストデータ格納（子） insert into tes2 values (1,'line11','upd1'), (2,'line22','upd2'); -- 外部キー制約のテスト -- 親の主キー更新 update tes1 set t1_col2='upd11' where t1_col2='upd1'; -- 子の外部キーも更新されていることを確認 select * from tes1; select * from tes2;
バイナリログを特定DBのみ出力するか、特定DBのみ出力しないか、設定することは出来ますが、db1はこっちのバイナリログ、db2はそっちのバイナリログのように複数のバイナリログを出力することは出来ません。 ですが、マスタにあるdb1とdb2をレプリケーションで、スレーブAではマスタのdb1のみレプリケーションをして、スレーブBではマスタのdb2のみレプリケーションを行うことは、my.cnf等に設定を行えば出来ます。(replicate-do-dbなどを使えば出来ます) 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/replicati …
＞特に変なプロセスは走っていないようです。 それはcpu占有が30%(近く)になった状態でそうなんですか? 何かプロセスを走らせておそいならとりあえずテーブルの最適化を するとか、正規化をみなおしてチューニングするとかなんでしょうけど cpu占有率を落とすにはniceで優先度をおとすのでしょうけど 遅くするのが目的ではないのであまり意味がないかもしれません
RSSはXMLだからXMLを読み込む方法が判れば無問題じゃないのかな http://www.google.com/search?lr=lang_ja&q=rss%20 …
追記です。 trueやfalseとして扱いたいなら、bitでなくboolを使用してください。 そうすれば、load data infileの入力ファイルでは、0や1としてデータを作成しておけばいいことになります。
コンピュータ会社に勤務し、社内向けＷｅｂシステムの作成を行っています。 ＤＢに接続したＷｅｂサイトの作成ということで、留意点をあげておきます。 ＷＥＢサーバーおよび、ＤＢサーバーは、御社（質問者ご自身）以外（レンタル等）をお考えでしょうか？ レンタルサーバーなどでは、サイズの制限などがあり、ＤＢまでは困難と思われます。 ご自身で、ＷＥＢサーバーを設置し、ＤＢに接続すれば問題ありませんが。 一方、ご自身でＷＥＢサーバーを設置した場合、不正アクセス対策を 施さないと、ＤＢを改ざんされる惧れがありますよ。
＞cd /usr/local/mysql/ -u root cdで変なオプションつけて通るというのがよくわかりませんが・・・ ＞./bin/mysql test のところで ./bin/mysql -u root -p です。 mysqlのrootユーザーのパスワードを聞かれませんか？
phpMyAdminではなく，MySQLから直接コマンドライン出力してみてはどうでしょうか？ コマンド操作ならばSELECT句を利用した出力も可能なので，LIMIT掛ければ小分けにすれば出力も可能とは思いますが……そもそも容量で出力出来なくなった，と言う事はメモリ不足か何かの問題なのでしょうか？ MySQLそのものに問題があるかどうかは確認しましたか？
select id,name,(kokugo=100)+(sugaku=100)+(shakai=100)+(rika=100)+(eigo=100) as manten from テーブル みたいのでよいのでは？
横からですが、 >table3,table4などもっとテーブルがあった場合につなげて書くことが >できるのでしょうか？ できます。 ただし、現在提示されているのは、無条件で全件をunionしているので、もし性能を重視するなら、unionで繋げるそれぞれのselect文で、id列に対する検索条件があった方がいいでしょう。 <update例1> unionを使う方法（ただし、MySQLの複数表の更新の構文使用） update master_table as m, (select x.id,sum(x.score) as sum_score from (select id,score from table1 union all select id,score from table2) as x group by x.id) as xx set m.score=sum_score where m.id=xx.id <update例2> MySQLの複数表のupdate構文を使う方法 update master_table as m,table1 as t1,table2 as t2 set m.score=t1.score+t2.score where m.id=t1.id and m.id=t2.id
そもそもがSQLの考え方に逆行しますが、なぜそんな無駄なことを したいのでしょうか？ 7件しかないなら7件表示すべきでは？ どうしてもというならこんなやり方も考えられないことはないですが・・・ SELECT * FROM `hoge` UNION ALL SELECT * FROM `hoge` ORDER BY RAND() LIMIT 10
「mysql 3.23.58」で Kyword Search したら出てきました。 http://www.filewatcher.com/ これかな！？ http://www.filewatcher.com/m/mysql-3.23.58.tar.g …
勘違いされているような気がします。 サーバーのMySQL4.0.24対応と言うのは、お客がそのバージョンを自分でインストールするのではありません。 サーバーにMySQL4.0.24がインストール済みだから、それが使えます、と言う意味です。 インストールはマニュアルを参照してください。難しくはなさそうです。 http://manual.mantisbt.org/manual.installation.php http://www.alles.or.jp/~sogabe/mantis/manual/1.3 …
＞リストアする時 mysql -u・・・ < dumpファイル名 じゃない？リダイレクトの向きがさかさま？
> mysql> select host, user, select_priv, insert_priv, update_priv, delete_priv from user; これは、グローバル権限 > mysql> select host, user, select_priv, insert_priv, update_priv, delete_priv from user; こちらは、データベース権限 ですので、確認内容と設定内容が一致してません。 データベース権限を確認するには mysql.db テーブルを参照する。 グローバル権限を設定するにはデータベースを *.* で権限を付与する。
要はデータベース自体のスキーマ情報が見れるもの、ということですよね。 あるかないかと言われたら、絶対にあると思いますよ。 （これが多少なりとも開示されていなければ、実運用では使えないので） キーワードは以下のページからピックアップしてみてください。 --Oracle http://otndnld.oracle.co.jp/document/products/or … --SQL Server http://msdn.microsoft.com/ja-jp/library/ms174365 … http://msdn.microsoft.com/ja-jp/library/ms186778 … --PostgreSQL http://www.postgresql.jp/document/pg823doc/html/ … http://www.postgresql.jp/document/pg823doc/html/ …
私は次の対策をしています。 まず、rootはオープンしたいコンテンツのみにしています。 phpMyAdminは http://xxx.yyy.jp/xyz と実際はrootのサブフォルダではなくて別フォルダ にして、Apacheで定義しています。 xyzは自分なりの考えた名前にしています。 これでフォルダ名を知っていないとアクセスが出来ません。 その上、phpMyAdminが入っているフォルダをHTTP Basic 認証を行い、パスワードが無ければアクセスが出来ないよう にしています。 私のサーバでphpMyAdminを発見しアクセスするには凄い コストが掛かるか、私のPCを盗むか、です。 そんなリスクを犯す価値の無いサーバですけど。
なんだか、括弧の数が合ってないけど、順番に作っていけば、できると思うけど？ ＞(2)「tbメールアドレス」の登録日を固定値で検索にかけ（プログラム処理）、引っかかった複数レコードをSELECTします。 →　まずこの複数レコードをselectしてみる select `Eアドレス` from `tbメールアドレス` where `登録日` >= '20090524000000' ＞(3)送信IDは「tbメール文」の送信IDの最大値を固定ですべて(2)で作った全レコードに紐付ます →スカラー値を抽出するselect文を作る select max(`送信ID`) from `tbメール文` これをサブクエリとし、(2)のselect文のカラム値に入れます。カラム名が同じなので、table名付きで指定するのが無難。このサブクエリはMySQL4.1以降でないと使えません。 select (select max(body.`送信ID`) from `tbメール文` as body) as `送信ID` , address.`Eアドレス` from `tbメールアドレス` as address where address.`登録日`>= '20090522000000' insert 文にこのselect 文を繋げる INSERT INTO `tb送信リスト` (`送信ID`, `Eアドレス`) select (select max(body.`送信ID`) from `tbメール文` as body) as `送信ID` , address.`Eアドレス` from `tbメールアドレス` as address where address.`登録日`>= '20090522000000'
mysql -uroot -phogehoge < example.sql 的な方法はできませんか？ （実行権限が必要なので一応rootを想定しました）
'xx'の後に「as test」を追加。 SELECT id, name, 'xx' as test FROM test_table WHERE 1
エクスプローラーの「フォルダーオプション」で、隠しファイルとかシステムファイルをすべて表示して、さらに拡張子もすべて表示するにしないと見つけられないのでは？
startdate=DATE_FORMAT(startdate,'%Y-01-01') でよいのでは？
すみません。書き方が悪かったです。 >query = sprintf("SELECT * FROM dive_free_tbl_ WHERE u_address = '%s' ORDER BY serial DESC", $u_address); WHERE句の「=」を「LIKE]に変えてください。 「＝」は完全一致、「LIKE」は部分一致の検索をします。
大変申し訳ないのですが、 まずは質問者様がどのように試して上手くいかなかったのか 聞かせていただけますでしょうか。 後学のためにも自分で解決する力を養わないと・・・。 マニュアルをじっとみる→試す→ダメならgoogleさんに聞いてみる→ やさしく解説しているサイトをじっとみる→試す→ダメならもう一度googleさんに聞いてみる→もっとやさしく解説しているサイトをじっとみる→試す→ダメならgooに聞いてみる のような段階を踏んで頂ければ幸いです。
>MySQLのバージョンが4.0なんですが可能でしょうか？ MySQLの質問をする場合は、バージョンを明記してください。 MySQL 4.0以前・・・union、一部のjoin、一時表などは実装済 MySQL 4.1・・・joinの拡張、サブクエリ、インラインビュー、unicodeなどの実装 MySQL 5.0・・・ビュー表、ストアドプロシジャ、トリガなどの実装 と、すぐに思い出せるだけでも、大きな機能拡張がたくさんあります。 各表の構成列、データ型、表と表は1:1か1:nかなどの情報を、できれば提示してください。そうすることで、無駄なやり取りを少なくでき、早く適切なアドバイスを得られるかも知れません。 次にSQL例を示します。 SELECT A.商品名,A.商品説明,avg(商品ランク) as avgrank FROM A LEFT JOIN B ON A.商品名=B.商品名 GROUP BY A.商品名,A.商品説明
filenameを書き込む必要ないのでは？ SELECT concat(id,'.jpg') as filename FROM `hoge`
追記です。 >CREATE TABLE test4(a INT, b INT, c INT, INDEX(a), INDEX(b, c)); >例えばこのようなテーブルを作成した場合、テーブル全体がどのように整列されるのか テーブルの行データ自体は、どのような格納位置になるかは、RDBMSにより保証されません。検索時に、order by指定がなければ、検索時の並びも保証されません。 一方、a列単独と、(b,c)列には、それぞれ重複可のインデクスが定義されているので、それぞれのインデクス上では、キー値が整列された形で管理されています。 a単独のインデクスは、例えば次のような検索で、利用されます。 select * from test4 where a=100 select * from test4 where a between 101 and 200 select * from test4 where a between 101 and 200 order by a (b,c)のインデクスは、例えば次のような検索で、利用されます。 select * from test4 where b=100 select * from test4 where b=100 and c between 1 and 10 select * from test4 where b=100 order by b,c なお、母体データ件数が少ない場合や、重複値が多量に発生している場合は、RDBMS側が行データから探した方が早いと判断され、インデクスを使わない場合もあります。 この辺は、EXPLAINなどで確認しながら、チューニングすることになります。
> ２．１のorder_id で、dateが、2009/4/1 00:00 - 2009/4/30 24:00 の期間である price の合計値の取得 この２の取得を「dateが、2009/4/1 00:00 - 2009/4/30 24:00 の期間である order_id 毎の price の合計値の取得」にして１の取得結果とorder_idどうしでJOINする、と考えれば煩雑ではないでしょう。 １… select order_id, min(date) from test_table group by order_id having min(date) >= '2009 4/1 00:00' and min(date) < '2009 4/2 00:00' ２… select order_id, sum(price) from test_table where date >= '2009 4/1 00:00' and date < '2009 5/1 00:00' group by order_id
>#comment このコメントは、外部ファイルからsql文を読み込んで実行する時などに、外部ファイルをみた人に解りやすいようにするためのコメントなので、データとしては保持されません。 ーーMySQLmanualから構文抜粋引用 CREATE PROCEDURE sp_name ([proc_parameter[,...]]) [characteristic ...] routine_body characteristic: ... | COMMENT 'string' これをみるとcharacteristicの部分にコメント文を保持できるようですけど、routine_bodyの途中には無理のよう。 動作説明を入れるのが目的なら、このCOMMENT節でも十分かとおもう。
64個までしか指定できないので少し役不足ですが、SET型というのが、ちょうどBITフラグの考え方をした型です。 http://dev.mysql.com/doc/refman/5.1/ja/string-ty … 計算自体は"FIND_IN_SET"を使えば簡単に実装できると思います。 http://dev.mysql.com/doc/refman/5.1/ja/string-fu … ただ、他のRDBMSでも使えるような汎用的な型ではないので開発するメンバーのスキルレベル等を考えれば、単純に70個カラムを用意してやることをお勧めしますけどね。 参考URL：http://www.itmedia.co.jp/enterprise/0308/24/epn0 …
phpMyAdminにも文字コードの設定があるはずなので、 それを間違えているだけだと思います。
>>端末(2)でselect ～ をｐｈｐから実行するとやはり見えます。 ネットの情報では、MyISAMでもロックされるように思えるのですけどね。レンタルサーバじゃあなく、自分のＰＣ上で似たような環境での再現テストをやられるのがいいかな？と思えます。 >>デッドロックフリーとはデッドロックを 回避していると考えてよいのでしょうか？ そうですね。デッドロックにならないということのようですが、ただ、複数テーブルの関係する処理であれば、デッドロックもありえると思えます。もちろん、MyISAMでロックが機能しないなら、デッドロックにならないけど（笑） ただ、MyISAMのロックが行ロックじゃあなくテーブルロックとのことですので、更新が多い場合は、使えないと思ったほうがいいと感じます。 P.S. 昔、ＭＳのSQLServerで、ロックエスカレーションからテーブルロックになって、大変なトラブルになった事例がありますので・・・。 最新バージョンのSQLServerの仕様は知らないのですけどね。
いやだから・・・ SELECT created,COUNT(DISTINCT user_id) as unique_count FROM Point GROUP BY created ってこと。 例示がないので、検証はできません。
一言に負荷分散といっても、「DNS によるラウンドロビン」「サーバのクラスタ化」「負荷分散装置の導入」など、様々な方法があり、これによって各サーバの処理効率は大幅に変わります。なので、まずはどの負荷分散方法を使用するか、検討が必要かと思われます。 ＞システムA,Bと平行稼動し、DB_Aに負荷が掛かっている場合は、DB_Bのレスポンスも自然と悪くなるのでしょうか？ 負荷分散していて、且つDBは完全に別物なので、そのようなことにはならないと思います。 ＞そもそもそれはDBの問題よりサーバースペックの問題になるのでしょうか。 DBの検索処理は、当然ですがサーバのスペックによって、応答時間が大幅に変わります。 通常DBサーバの増強を行う場合は、1レスポンスに対しての平均応答時間や、そのレスポンスが日にどのくらい来るのかを考慮して、必要スペックを割り出します。 まずは、そういったことを数値として割り出してからでないと、スペックの問題なのかどうかはわかりません。 仮にスペックの問題だとしても、現行のシステムAを増強して引き続き使用する、システムBを新たに構築する、という2通りの方法考えられると思いますので、その点も考慮が必要かと思いますよ。
3.23および4.0はサポートが終了しているので いま上がっているところがあれば不正なサイトだと思います。 また4.1もなんとか生き残っていますが今年末でサポート終了のようです。
Transaction トランザクション とか Lock Tables を調べてみるといいかも。 参考URL：http://dev.mysql.com/doc/refman/5.1/ja/transacti …
考え方は２つ １つは#１さんのようにPHPで処理する order byしているので前の点数を使っているのはよいですね そのたフラグで処理をする手もあると思います。 ２つめはMySQLで処理する。 たとえば別テーブルでカテゴリの最低値、最高値をもたせて INNERJOINしてカテゴリを付加した状態で得られれば そのカテゴリをキーに処理ができます。 もちろんJOINしなくてもIFでカテゴリを付加することも 可能だとは思います
質問内容がよく分からないのですが。。。 同じバージョンのMySQLを構成するファイルを、他PCにコピーして使いたいと言ってますか？ 「バックアップ目的」と、それを「SQL等で参照したい」というのは、まったく話が違ってくるのですけどね。 まさか、（定義情報等を無視して、）データだけをOSレベルでコピーして、使いたいとは言っていないですよね？
まぁ回答は気付かれたようですがこんな感じで・・・ SELECT * FROM `B` ORDER BY LENGTH(`b1`) DESC,`b1` DESC LIMIT 1 よくよく考えたら、castしちゃえば3番があっても機能しますね SELECT MAX(CAST(`b1` AS SIGNED)) FROM `B`
aaa.bbbってのはaaaデータベースのbbbテーブルへアクセスすると認識されます。 そんなことを無理やりやってもトラブルの元なのでやらないほうがいいです。
'03','1111','2222'のようにすれば よいのではないでしょうか？ つまり数値扱いではなく、文字列扱いにする。
サービスを削除してから違うサービス名を指定するとうまくいくとおもいます。 MySQL6 ⇒ MySQL6.0とか。 アンインストールしなくても MySQL Server Instance Configuration WizardでもOKかと。
テーブルへのデータはsjisはNGです。 UTF8で登録するのが妥当です。 ただし携帯など出力の際にsjis指定のものもあるので 出力の際に変換が必要なケースもあります
BOMがついてるんでしょう。 UTF-8なら先頭の3 bytesがEF BB BFなら読み飛ばすということで。 BOMの一覧は下記参照 http://en.wikipedia.org/wiki/Byte-order_mark
サーバー上でinsertする際、 entry_id以外の値を全て「半角英数字」にしたら反映されませんか？ もし反映される様なら、ローカル環境とサーバ環境で、 PHP・MySQLのデフォルトの文字エンコードが違うのではないでしょうか。 ・ローカル環境のPHPの文字エンコード ・ローカル環境のMySQLの文字エンコード ・サーバー上のPHPの文字エンコード ・サーバー上のMySQLの文字エンコード ここら辺を確認してみると良いかもしれません。 > ロリポップでも別のアカウントで取得したサーバー この「別のアカウント」というのは、いつ頃取得されたものですか？ それぞれのアカウントの契約時期が異なる場合、PHPのバージョンが異なり、 デフォルトの文字エンコードも異なるかもしれません。 ※現在、Lolipopで新規契約するとPHPのバージョンは5ですが、 　昨年以前では、バージョン4でした。 　http://lolipop.jp/?mode=mainte0810 「entry_id以外の値が入らない」という考え方から思考を変えて、 「なぜentry_idだけ値が入るのか」という考え方に変えると、 上記の様な検討が行えます。
rsyncを実行する間は、サーバーAとサーバーBのMySQLサービスを停止しないと駄目でしょう。 サービスを停止しないと、サーバーAはファイルに書き出さずにメモリに残ったデータがあるでしょうし、サーバーBはメモリとファイルのデータが不一致でおかしくなるでしょう。 rsyncが使えるネットワーク環境があるのなら、レプリケーションを使うのが一番よいと思いますが。
格納方法に問題があるからでしょう $Salt = "0x".$Salt; こっれて、１６進数にわざわざ変換して、何型カラムに格納してるのでしょう？ 桁も大きいし、格納できる整数の範囲逸脱＝格納前に既に正しい値ではない可能性があります。 かりに、MySQLのnumeric型でうまく格納出来たとしても、phpで取り出した際に、phpの扱える範囲ではないので、数値表示出来ません。よって、比較対象にも使えません。 カラム型をvarchar(32)として、 md5($Salt)を文字列で格納すれば、同じ値をそのまま文字列で取り出せるはずです。そうすれば比較も容易です。
OSはなんでしょうか？ 行単位での出力で、UNIXであればheadとtailで処理できそうですが・・・
#1です。 windows(vista）、linux(centos）で試してみましたが、個別インストール した環境でも特に問題なくデータが表示されます。 > mysql_fetch_array()関数を使ってＳＱＬの実行結果を表示させるところ > で、XAMPPでは結果を表示できるのですが、個別インストール環境では > Warning: mysql_fetch_array(): supplied argument is not a valid > MySQL result resource in D:\****\incert.php on line 8 > が出てしまいます。 いくつか試したところでは存在しないデータベース名を指定した場合にも そのメッセージが出るので、まずはデータベースの環境を第一に調べて 見てください。 #2さんも書かれていますが、コマンドラインツールで該当のデータベース に接続・選択が出来ますか？
人物のフィールド名はなに？かりにpersonだとすると SELECT COUNT(DISTINCT person) FROM ・・・ とします
まずは、小さいシェルスクリプトを作って試してみてはどうですか。 それと 「torikomi.sh line21 ; syntax error :unexpected end of file」 とでるならシェルスクリプト全部アップしてみては。
#1です。追記です。 >csvファイルからMySQLにシェルで取り込みをしたい 「csvファイルから取り込み」とのタイトルですが、やっていることと合っていませんが？
>MySQL:ver5.5 MySQL 5.5なんて存在しないのでは？ >SQL文1つの結果に「Aichi,Gifu,Tokyo」が該当したとして、それぞれを >テーブルから探し出した各々の時間 それぞれを、別のSQLとして検索するしかありません。 それも、種々のキャッシュをクリアする等しなければ、正確には得られません。 なぜなら、 (1)MySQLへの接続 (2)SQL文の解析～実行計画の生成 　→MySQL 5.0以降であれば、ストアドプロシジャ化すれば、この部分のオーバーヘッドは少なくなる (3)実行計画により、DBのI/Oが少なくなるように配慮される 　→1件目、2件目と得るたびに、物理的に先頭からサーチしたりはしない (4)ソートが必要な処理なら、1行目を得る段階でソートが発生する（している） といったものを、どのデータを得るための処理かといった配分をするのは意味がありません。 また、別のSQLとしても、 (1)SQLの解析結果をキャッシュとして持っていて、2回目以降のSQLでの実行計画生成のオーバーヘッド抑止 (2)DBのI/Oバッファ（キャッシュとも呼ばれる）に上がっている場合は、実I/Oは発生しない といったことがあるので、キャッシュ類をクリアしなければ、正確な処理時間は分析できません。 こういった測定をやる場合、簡単な方法としては、 (1)測定したい最小の結果を得るSQLにする (2)アプリ側で、SQL実行前後の時刻を取得し、その差分を得る といった方法を取る場合が多いです。 RDBMS側で各種統計を取らせるオプションがあったりしますが、そういった機能を使った場合、その分のオーバーヘッドが生じます。 MySQLでRDBMS側で統計的な情報を取りたいと思えば、MySQL 5.0.xx（番号未確認）くらいから実装されたslowログを採取、表示するといった方法もありますが、MySQL 5.1.xxで不良があるとか、ころころ仕様変更があったりします。 なお、この場合も、情報を得たい最小の結果を得るようにして、SQLを実行する必要があります。
MySQLには商用ライセンスとGNP GPLの2つのライセンス形態があります。基本はフリーですがGPLの条件に拘束されたくない場合は商用ライセンスを取得します。 アフィサイトであればフリーでいいんじゃないでしょうか？ http://dev.mysql.com/doc/refman/4.1/ja/business- …
最低限、DELETE権限をつけなければ消されることはありません。 実行ユーザーの権限については常識的な範囲で制限をつけておいてください どちらかというとインジェクションの場合、全件表示をされてしまう方が通りやすいですね。 それにしても、ユーザーから送られてきたデータを無条件に信用する ことはありえませんので、あらじめ使われるべき変数に、サニタイズ しておけば済むでしょう。 JSPについてはよくわかりませんが、実際のところ今回の処理は プリペアドステートメントで処理しているのではないのですか？ であればある程度基本的なリスクは回避してくれていると思いますが
バージョンの数値で並べたいのか、配布開始日順で並べたいのか？ まあ、version数なんて、１，２，３がいつのまにか2008だの2009だのになってたりするから、日付順で最新データがほしいというなら、各versionの配布開始日のカラムを作れば、日付け順に並べるのは簡単。
select `datetime` + INTERVAL 1 HOUR from user ですね 間違ってもdatetime型のカラムに「datetime」なんて名前は 付けない方がよいですね
mysqldump [-? | --help] と、すればヘルプがご覧になれます。 テーブル単位なら、以下で可能です。 mysqldump データベース名 テーブル名 > 出力先ファイル名 どちらにしても、冒頭のコマンドでヘルプをご覧になれます。
おっしゃっているのはなんの変数でしょう？ SQLではないですよね？
pear::DBについて再度 http://www.phpbook.jp/pear/pear_db/index.html で確認してみてください。 当方の環境（vista SP1,Apache2.2.10,PHP5.2.9-2）ではそのままで YYYY-MM-DD HH:MM:SS形式で出力されています。
AにBをLEFT JOINして IF(A.評価=B.評価,NULL,A.評価) 的な書き方を羅列していけば？
"key"と言う予約語に引っかかっているために文法エラーと認識されていると思われます。 参考URL：http://blog.takeda-soft.jp/blog/show/122
私とNo.1様が回答したものは、テーブルAにnoというカラムしかないものを前提に作ったものでした。 他にもカラムがあって、noにだけ入れたいのであれば(他のカラムにNOT NULL制約がないなら)、以下のとおりでOKだと思います。 insert into A(no) Select no from B where type='A' 制約があるなら、No.3で書かれているとおりでよいかと。 また、nameの情報がテーブルBにあり、カラム名がnameなら、 insert into A(no,name) Select no,name from B where type='A' こんな感じです。
>一つのレコードに沢山のメールアドレス なるほど、そういうことですね。 mail関数は複数のメアドがカンマでつながっていれば一度に おくれたような記憶が・・・ ただしtoで送るのにメアドが羅列されているとユーザーとしては 個人情報的に嫌悪感を覚えるでしょうから、やはり１通１通 アドレスを書き込んで送る方がよいでしょうね カンマで区切られているならsplitなどで配列に落として、 foreachでまわせば１通ごとに分解できそうな気がします。 またそもそもがmysql側で正規化してデータを管理すれば 普通はメアドの数だけ１件１データで得られると思いますけど
